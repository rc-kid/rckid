    TEST(gbcemu, opcode_0e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 0E 0000
        gbc.setState(0x266f, 0x5b5d, 0xe6f0, 0x6f2c, 0x6144, 0xc97d, 0x0, 0x0);
        gbc.writeMem(0x266f, { 0xe, 0xcc });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5b5d, gbc.sp());
        EXPECT(0x2671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0001
        gbc.setState(0x2023, 0xa775, 0x1990, 0x1786, 0x8e55, 0xa5a1, 0x1, 0x0);
        gbc.writeMem(0x2023, { 0xe, 0x1a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa775, gbc.sp());
        EXPECT(0x2025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0002
        gbc.setState(0x5585, 0xad47, 0xa40, 0xc942, 0xc366, 0xc7f, 0x0, 0x0);
        gbc.writeMem(0x5585, { 0xe, 0x89 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xad47, gbc.sp());
        EXPECT(0x5587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0003
        gbc.setState(0xa73a, 0xbbd4, 0x40b0, 0x7135, 0x74c7, 0x3e9f, 0x0, 0x1);
        gbc.writeMem(0xa73a, { 0xe, 0x8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbbd4, gbc.sp());
        EXPECT(0xa73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa73a));
        EXPECT(0x8, gbc.readMem(0xa73b));
        // 0E 0004
        gbc.setState(0xcbc5, 0x7e0e, 0x6f0, 0x8d13, 0xf012, 0xb093, 0x0, 0x1);
        gbc.writeMem(0xcbc5, { 0xe, 0x3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7e0e, gbc.sp());
        EXPECT(0xcbc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcbc5));
        EXPECT(0x3, gbc.readMem(0xcbc6));
        // 0E 0005
        gbc.setState(0xb6ef, 0x3245, 0x54d0, 0xa50a, 0xdf28, 0xa32e, 0x1, 0x0);
        gbc.writeMem(0xb6ef, { 0xe, 0x21 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3245, gbc.sp());
        EXPECT(0xb6f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb6ef));
        EXPECT(0x21, gbc.readMem(0xb6f0));
        // 0E 0006
        gbc.setState(0x163, 0xdcb6, 0xc0e0, 0xa0f2, 0x28e8, 0x6e4f, 0x1, 0x0);
        gbc.writeMem(0x163, { 0xe, 0x96 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdcb6, gbc.sp());
        EXPECT(0x165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0007
        gbc.setState(0xe4b8, 0x3a30, 0xae40, 0xb4de, 0xc167, 0x77b1, 0x1, 0x1);
        gbc.writeMem(0xe4b8, { 0xe, 0x63 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3a30, gbc.sp());
        EXPECT(0xe4ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe4b8));
        EXPECT(0x63, gbc.readMem(0xe4b9));
        // 0E 0008
        gbc.setState(0x4332, 0xf54d, 0xe530, 0x9176, 0x85fe, 0x2d8d, 0x1, 0x0);
        gbc.writeMem(0x4332, { 0xe, 0x55 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf54d, gbc.sp());
        EXPECT(0x4334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0009
        gbc.setState(0xddff, 0xadf5, 0x3930, 0x5dcd, 0x6092, 0x4bf3, 0x1, 0x1);
        gbc.writeMem(0xddff, { 0xe, 0xb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xadf5, gbc.sp());
        EXPECT(0xde01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xddff));
        EXPECT(0xb, gbc.readMem(0xde00));
        // 0E 000B
        gbc.setState(0x628f, 0x1d3c, 0xc190, 0x1f10, 0x27e, 0x563b, 0x0, 0x1);
        gbc.writeMem(0x628f, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1d3c, gbc.sp());
        EXPECT(0x6291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 000C
        gbc.setState(0x450e, 0x239a, 0xce30, 0xfbc1, 0xf054, 0xfdab, 0x1, 0x0);
        gbc.writeMem(0x450e, { 0xe, 0x79 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x239a, gbc.sp());
        EXPECT(0x4510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 000D
        gbc.setState(0xaa0d, 0x3dcb, 0xd130, 0x1855, 0xf441, 0x644e, 0x0, 0x0);
        gbc.writeMem(0xaa0d, { 0xe, 0xef });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3dcb, gbc.sp());
        EXPECT(0xaa0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xaa0d));
        EXPECT(0xef, gbc.readMem(0xaa0e));
        // 0E 000E
        gbc.setState(0xcd12, 0x6da2, 0xd490, 0x64c4, 0x6d45, 0xa687, 0x0, 0x1);
        gbc.writeMem(0xcd12, { 0xe, 0x7a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6da2, gbc.sp());
        EXPECT(0xcd14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcd12));
        EXPECT(0x7a, gbc.readMem(0xcd13));
        // 0E 000F
        gbc.setState(0x831, 0x592c, 0xcf60, 0x8447, 0xa172, 0xb7d0, 0x0, 0x1);
        gbc.writeMem(0x831, { 0xe, 0x31 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x592c, gbc.sp());
        EXPECT(0x833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0010
        gbc.setState(0x5407, 0xe586, 0x2cd0, 0xf5dc, 0x2a6c, 0x8ee1, 0x1, 0x1);
        gbc.writeMem(0x5407, { 0xe, 0xd });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe586, gbc.sp());
        EXPECT(0x5409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0011
        gbc.setState(0xdd1, 0xd2c9, 0x4340, 0x1b3e, 0x88cb, 0x24d5, 0x0, 0x0);
        gbc.writeMem(0xdd1, { 0xe, 0xf7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd2c9, gbc.sp());
        EXPECT(0xdd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0012
        gbc.setState(0xcf5a, 0xacfe, 0x1d30, 0xbc8c, 0x8625, 0xa9fa, 0x1, 0x1);
        gbc.writeMem(0xcf5a, { 0xe, 0xec });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xacfe, gbc.sp());
        EXPECT(0xcf5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcf5a));
        EXPECT(0xec, gbc.readMem(0xcf5b));
        // 0E 0013
        gbc.setState(0xd83b, 0xf5ff, 0x55a0, 0xb8db, 0x2d62, 0x1a1, 0x1, 0x0);
        gbc.writeMem(0xd83b, { 0xe, 0xaa });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf5ff, gbc.sp());
        EXPECT(0xd83d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd83b));
        EXPECT(0xaa, gbc.readMem(0xd83c));
        // 0E 0014
        gbc.setState(0xa80f, 0xe469, 0x1eb0, 0x5676, 0x1104, 0xf3f3, 0x1, 0x0);
        gbc.writeMem(0xa80f, { 0xe, 0xaa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe469, gbc.sp());
        EXPECT(0xa811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa80f));
        EXPECT(0xaa, gbc.readMem(0xa810));
        // 0E 0016
        gbc.setState(0x3c68, 0xd15d, 0xa6e0, 0xb67, 0xb3b4, 0xe0f9, 0x0, 0x0);
        gbc.writeMem(0x3c68, { 0xe, 0x41 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd15d, gbc.sp());
        EXPECT(0x3c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0017
        gbc.setState(0x144f, 0x960c, 0x5930, 0x4c49, 0x55ac, 0x7095, 0x0, 0x1);
        gbc.writeMem(0x144f, { 0xe, 0xe2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x960c, gbc.sp());
        EXPECT(0x1451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0018
        gbc.setState(0x4549, 0xac89, 0x2850, 0xcf2c, 0x6b4c, 0xa1ab, 0x1, 0x0);
        gbc.writeMem(0x4549, { 0xe, 0x77 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xac89, gbc.sp());
        EXPECT(0x454b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0019
        gbc.setState(0x5770, 0x3e16, 0x65e0, 0x62d3, 0x3787, 0x155f, 0x1, 0x0);
        gbc.writeMem(0x5770, { 0xe, 0x5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3e16, gbc.sp());
        EXPECT(0x5772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 001A
        gbc.setState(0x408b, 0x6a31, 0x1d50, 0x3202, 0x4531, 0xd5c2, 0x1, 0x0);
        gbc.writeMem(0x408b, { 0xe, 0x9c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6a31, gbc.sp());
        EXPECT(0x408d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 001C
        gbc.setState(0x12a8, 0x9f5, 0x8470, 0xfc54, 0xd08e, 0x277c, 0x0, 0x1);
        gbc.writeMem(0x12a8, { 0xe, 0xb2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9f5, gbc.sp());
        EXPECT(0x12aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 001D
        gbc.setState(0xccf, 0xdc64, 0xce00, 0x41ca, 0x9859, 0xfb62, 0x1, 0x1);
        gbc.writeMem(0xccf, { 0xe, 0xa3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdc64, gbc.sp());
        EXPECT(0xcd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 001F
        gbc.setState(0x14ed, 0xe8db, 0xd9a0, 0xbea4, 0xaf9b, 0xf0c3, 0x0, 0x1);
        gbc.writeMem(0x14ed, { 0xe, 0x32 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe8db, gbc.sp());
        EXPECT(0x14ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0020
        gbc.setState(0xc12f, 0x7c8, 0x1f10, 0x9deb, 0x9ac7, 0x56d6, 0x0, 0x1);
        gbc.writeMem(0xc12f, { 0xe, 0x90 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7c8, gbc.sp());
        EXPECT(0xc131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc12f));
        EXPECT(0x90, gbc.readMem(0xc130));
        // 0E 0021
        gbc.setState(0x319, 0x5dcb, 0x8c0, 0xfb18, 0x337, 0xa8c6, 0x0, 0x1);
        gbc.writeMem(0x319, { 0xe, 0x46 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5dcb, gbc.sp());
        EXPECT(0x31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0022
        gbc.setState(0x1de0, 0x153, 0x8a00, 0x634, 0xf0cf, 0xd754, 0x1, 0x1);
        gbc.writeMem(0x1de0, { 0xe, 0x86 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x153, gbc.sp());
        EXPECT(0x1de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0023
        gbc.setState(0xd57c, 0x77c9, 0x3a20, 0x6a9e, 0x7eb6, 0x335a, 0x0, 0x1);
        gbc.writeMem(0xd57c, { 0xe, 0xab });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x77c9, gbc.sp());
        EXPECT(0xd57e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd57c));
        EXPECT(0xab, gbc.readMem(0xd57d));
        // 0E 0024
        gbc.setState(0x84c, 0xb2d8, 0xb180, 0x2f12, 0x6bff, 0x5cdd, 0x0, 0x0);
        gbc.writeMem(0x84c, { 0xe, 0xd2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb2d8, gbc.sp());
        EXPECT(0x84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0026
        gbc.setState(0x3514, 0x2e10, 0x1830, 0x5d1c, 0x3a65, 0x2d15, 0x1, 0x0);
        gbc.writeMem(0x3514, { 0xe, 0xee });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2e10, gbc.sp());
        EXPECT(0x3516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0027
        gbc.setState(0x2395, 0x1039, 0x5420, 0x84ad, 0xc912, 0x9a1c, 0x1, 0x0);
        gbc.writeMem(0x2395, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1039, gbc.sp());
        EXPECT(0x2397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0028
        gbc.setState(0x37f0, 0xe8c2, 0xa590, 0x9cf4, 0xdf20, 0x66ae, 0x0, 0x1);
        gbc.writeMem(0x37f0, { 0xe, 0x82 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe8c2, gbc.sp());
        EXPECT(0x37f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0029
        gbc.setState(0x259d, 0xe04b, 0x2f0, 0x97d1, 0xb214, 0x5134, 0x1, 0x1);
        gbc.writeMem(0x259d, { 0xe, 0xd7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe04b, gbc.sp());
        EXPECT(0x259f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 002A
        gbc.setState(0xa5aa, 0x85a, 0x2180, 0x6a00, 0xe191, 0x8d3, 0x0, 0x1);
        gbc.writeMem(0xa5aa, { 0xe, 0xa2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x85a, gbc.sp());
        EXPECT(0xa5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa5aa));
        EXPECT(0xa2, gbc.readMem(0xa5ab));
        // 0E 002B
        gbc.setState(0xb40d, 0x4e0b, 0xba0, 0x871a, 0xfa72, 0x1c17, 0x1, 0x0);
        gbc.writeMem(0xb40d, { 0xe, 0x5f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4e0b, gbc.sp());
        EXPECT(0xb40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb40d));
        EXPECT(0x5f, gbc.readMem(0xb40e));
        // 0E 002C
        gbc.setState(0x304, 0x443a, 0x5ae0, 0x4986, 0xdb85, 0x2d3c, 0x0, 0x1);
        gbc.writeMem(0x304, { 0xe, 0x6d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x443a, gbc.sp());
        EXPECT(0x306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 002D
        gbc.setState(0xd283, 0xfeeb, 0x8430, 0x5757, 0x7d9c, 0x1513, 0x1, 0x1);
        gbc.writeMem(0xd283, { 0xe, 0x9f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfeeb, gbc.sp());
        EXPECT(0xd285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd283));
        EXPECT(0x9f, gbc.readMem(0xd284));
        // 0E 002E
        gbc.setState(0x71a1, 0x618e, 0xac00, 0xd713, 0xa17f, 0x92c9, 0x1, 0x0);
        gbc.writeMem(0x71a1, { 0xe, 0xe1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x618e, gbc.sp());
        EXPECT(0x71a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 002F
        gbc.setState(0xa385, 0xfcf0, 0xbca0, 0x8196, 0xe622, 0x6b56, 0x0, 0x0);
        gbc.writeMem(0xa385, { 0xe, 0x8c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfcf0, gbc.sp());
        EXPECT(0xa387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa385));
        EXPECT(0x8c, gbc.readMem(0xa386));
        // 0E 0030
        gbc.setState(0xdf40, 0xe918, 0xcd20, 0xb5b2, 0x65ef, 0xa2c2, 0x0, 0x0);
        gbc.writeMem(0xdf40, { 0xe, 0x14 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe918, gbc.sp());
        EXPECT(0xdf42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdf40));
        EXPECT(0x14, gbc.readMem(0xdf41));
        // 0E 0031
        gbc.setState(0x5f38, 0x47dc, 0x56c0, 0xed79, 0xc0be, 0x434f, 0x1, 0x1);
        gbc.writeMem(0x5f38, { 0xe, 0x8a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x47dc, gbc.sp());
        EXPECT(0x5f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0032
        gbc.setState(0x74a0, 0x588a, 0x8290, 0xaaa3, 0xb70d, 0x9dee, 0x1, 0x1);
        gbc.writeMem(0x74a0, { 0xe, 0x35 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x588a, gbc.sp());
        EXPECT(0x74a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0033
        gbc.setState(0xad17, 0x1af8, 0x7e90, 0xe28d, 0x6575, 0xd4d0, 0x1, 0x0);
        gbc.writeMem(0xad17, { 0xe, 0x7a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1af8, gbc.sp());
        EXPECT(0xad19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xad17));
        EXPECT(0x7a, gbc.readMem(0xad18));
        // 0E 0034
        gbc.setState(0x74a2, 0x5639, 0xde50, 0xf302, 0x2681, 0x28b1, 0x1, 0x1);
        gbc.writeMem(0x74a2, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5639, gbc.sp());
        EXPECT(0x74a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0035
        gbc.setState(0x7cc4, 0x5114, 0xae50, 0xe532, 0x344b, 0xeee2, 0x1, 0x1);
        gbc.writeMem(0x7cc4, { 0xe, 0xe });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5114, gbc.sp());
        EXPECT(0x7cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0036
        gbc.setState(0x1a5d, 0xb1a1, 0x8390, 0xe43a, 0x5500, 0xf240, 0x1, 0x1);
        gbc.writeMem(0x1a5d, { 0xe, 0xc2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb1a1, gbc.sp());
        EXPECT(0x1a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0037
        gbc.setState(0x5fb6, 0xbd69, 0xb510, 0xe007, 0x198f, 0x30e8, 0x1, 0x1);
        gbc.writeMem(0x5fb6, { 0xe, 0xe4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbd69, gbc.sp());
        EXPECT(0x5fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0038
        gbc.setState(0xe127, 0x485e, 0x2b40, 0xc81c, 0xf44e, 0xab89, 0x1, 0x1);
        gbc.writeMem(0xe127, { 0xe, 0x4d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x485e, gbc.sp());
        EXPECT(0xe129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe127));
        EXPECT(0x4d, gbc.readMem(0xe128));
        // 0E 0039
        gbc.setState(0x2486, 0x8130, 0x5690, 0x7961, 0x178b, 0x2f3f, 0x0, 0x1);
        gbc.writeMem(0x2486, { 0xe, 0xa3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8130, gbc.sp());
        EXPECT(0x2488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 003A
        gbc.setState(0x7875, 0x777f, 0xcfe0, 0x2aba, 0x9390, 0x5f7, 0x1, 0x0);
        gbc.writeMem(0x7875, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x777f, gbc.sp());
        EXPECT(0x7877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 003B
        gbc.setState(0x171d, 0xd05a, 0x8450, 0x59e8, 0x2ab3, 0x178e, 0x0, 0x1);
        gbc.writeMem(0x171d, { 0xe, 0xc8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd05a, gbc.sp());
        EXPECT(0x171f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 003C
        gbc.setState(0x128, 0x4dcf, 0xde80, 0xc48b, 0xdefc, 0x1650, 0x0, 0x0);
        gbc.writeMem(0x128, { 0xe, 0x60 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4dcf, gbc.sp());
        EXPECT(0x12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 003D
        gbc.setState(0x5197, 0x3559, 0x8860, 0x77ff, 0x1c51, 0x31b5, 0x0, 0x1);
        gbc.writeMem(0x5197, { 0xe, 0xad });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3559, gbc.sp());
        EXPECT(0x5199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 003E
        gbc.setState(0xaa93, 0x76f1, 0x62a0, 0x138b, 0x6d3, 0xae02, 0x0, 0x1);
        gbc.writeMem(0xaa93, { 0xe, 0xfa });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x76f1, gbc.sp());
        EXPECT(0xaa95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xaa93));
        EXPECT(0xfa, gbc.readMem(0xaa94));
        // 0E 003F
        gbc.setState(0x8f98, 0x2a7f, 0xc3e0, 0xbf48, 0x6f8, 0x9ea8, 0x0, 0x1);
        gbc.writeMem(0x8f98, { 0xe, 0x38 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2a7f, gbc.sp());
        EXPECT(0x8f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8f98));
        EXPECT(0x38, gbc.readMem(0x8f99));
        // 0E 0040
        gbc.setState(0xd212, 0x5c9a, 0xee80, 0x44d2, 0x216c, 0xf815, 0x0, 0x1);
        gbc.writeMem(0xd212, { 0xe, 0x2f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5c9a, gbc.sp());
        EXPECT(0xd214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd212));
        EXPECT(0x2f, gbc.readMem(0xd213));
        // 0E 0041
        gbc.setState(0x1271, 0x4d3, 0x90d0, 0x88d4, 0x90f6, 0x7306, 0x1, 0x1);
        gbc.writeMem(0x1271, { 0xe, 0x80 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4d3, gbc.sp());
        EXPECT(0x1273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0042
        gbc.setState(0x5eec, 0x4195, 0x7570, 0x679e, 0x3154, 0xdb88, 0x0, 0x1);
        gbc.writeMem(0x5eec, { 0xe, 0x6c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4195, gbc.sp());
        EXPECT(0x5eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0043
        gbc.setState(0x168f, 0x47a2, 0x6b00, 0x3c5c, 0xd4d4, 0x1c88, 0x1, 0x1);
        gbc.writeMem(0x168f, { 0xe, 0x51 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x47a2, gbc.sp());
        EXPECT(0x1691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0044
        gbc.setState(0xa94d, 0xdc8e, 0xd10, 0xcbae, 0x6ee8, 0x30e0, 0x1, 0x1);
        gbc.writeMem(0xa94d, { 0xe, 0xa5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdc8e, gbc.sp());
        EXPECT(0xa94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa94d));
        EXPECT(0xa5, gbc.readMem(0xa94e));
        // 0E 0045
        gbc.setState(0xba19, 0xfb49, 0x4e0, 0xc9cd, 0x4fc9, 0x6ca2, 0x0, 0x0);
        gbc.writeMem(0xba19, { 0xe, 0x1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfb49, gbc.sp());
        EXPECT(0xba1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xba19));
        EXPECT(0x1, gbc.readMem(0xba1a));
        // 0E 0046
        gbc.setState(0x22b, 0xb54d, 0xaee0, 0x1da0, 0x6de0, 0xc425, 0x0, 0x1);
        gbc.writeMem(0x22b, { 0xe, 0xf3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb54d, gbc.sp());
        EXPECT(0x22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0047
        gbc.setState(0x66db, 0xc0e8, 0x1770, 0xf41f, 0x495d, 0x5c06, 0x0, 0x1);
        gbc.writeMem(0x66db, { 0xe, 0x6c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc0e8, gbc.sp());
        EXPECT(0x66dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0048
        gbc.setState(0xa0f9, 0x8a9, 0xff70, 0x4ad, 0x9724, 0x171e, 0x0, 0x1);
        gbc.writeMem(0xa0f9, { 0xe, 0xe0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8a9, gbc.sp());
        EXPECT(0xa0fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa0f9));
        EXPECT(0xe0, gbc.readMem(0xa0fa));
        // 0E 0049
        gbc.setState(0x6cf3, 0x3532, 0x62f0, 0xc249, 0x3f83, 0xa071, 0x1, 0x1);
        gbc.writeMem(0x6cf3, { 0xe, 0xd2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3532, gbc.sp());
        EXPECT(0x6cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 004A
        gbc.setState(0xd500, 0x8421, 0xbac0, 0x4520, 0xe153, 0x11c4, 0x1, 0x0);
        gbc.writeMem(0xd500, { 0xe, 0x8a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8421, gbc.sp());
        EXPECT(0xd502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd500));
        EXPECT(0x8a, gbc.readMem(0xd501));
        // 0E 004B
        gbc.setState(0x9c3c, 0x11a7, 0x8190, 0xbe45, 0xc604, 0x54f4, 0x1, 0x1);
        gbc.writeMem(0x9c3c, { 0xe, 0x3c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x11a7, gbc.sp());
        EXPECT(0x9c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9c3c));
        EXPECT(0x3c, gbc.readMem(0x9c3d));
        // 0E 004C
        gbc.setState(0xbdd, 0xcb6f, 0x9400, 0x1d28, 0x5d03, 0x8e55, 0x1, 0x0);
        gbc.writeMem(0xbdd, { 0xe, 0x9e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcb6f, gbc.sp());
        EXPECT(0xbdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 004D
        gbc.setState(0x5596, 0x4b5c, 0x5a0, 0xfe5c, 0xf504, 0xc9bf, 0x0, 0x1);
        gbc.writeMem(0x5596, { 0xe, 0x6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4b5c, gbc.sp());
        EXPECT(0x5598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 004E
        gbc.setState(0x1bf3, 0xc4b0, 0x1120, 0xcb74, 0xe90f, 0xc191, 0x1, 0x1);
        gbc.writeMem(0x1bf3, { 0xe, 0x10 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc4b0, gbc.sp());
        EXPECT(0x1bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 004F
        gbc.setState(0xe319, 0x998c, 0x76e0, 0xc60c, 0xe4be, 0x7d3a, 0x0, 0x1);
        gbc.writeMem(0xe319, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x998c, gbc.sp());
        EXPECT(0xe31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe319));
        EXPECT(0xe6, gbc.readMem(0xe31a));
        // 0E 0050
        gbc.setState(0xc052, 0x9d1a, 0xbcf0, 0x9fab, 0xdffa, 0x42a0, 0x0, 0x1);
        gbc.writeMem(0xc052, { 0xe, 0x28 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9d1a, gbc.sp());
        EXPECT(0xc054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc052));
        EXPECT(0x28, gbc.readMem(0xc053));
        // 0E 0051
        gbc.setState(0x10d3, 0x2650, 0xf90, 0xd0ec, 0xd695, 0xe7ef, 0x0, 0x1);
        gbc.writeMem(0x10d3, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2650, gbc.sp());
        EXPECT(0x10d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0052
        gbc.setState(0xec89, 0x3d69, 0x2870, 0xaf5, 0x1b5f, 0xd303, 0x0, 0x1);
        gbc.writeMem(0xec89, { 0xe, 0x18 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3d69, gbc.sp());
        EXPECT(0xec8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xec89));
        EXPECT(0x18, gbc.readMem(0xec8a));
        // 0E 0054
        gbc.setState(0xa678, 0x74f9, 0x3100, 0x6ee0, 0xcfe6, 0xd7cf, 0x1, 0x0);
        gbc.writeMem(0xa678, { 0xe, 0xc6 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x74f9, gbc.sp());
        EXPECT(0xa67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa678));
        EXPECT(0xc6, gbc.readMem(0xa679));
        // 0E 0055
        gbc.setState(0xa4ec, 0xb330, 0x160, 0xb3d0, 0x6a20, 0x4399, 0x0, 0x0);
        gbc.writeMem(0xa4ec, { 0xe, 0x59 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb330, gbc.sp());
        EXPECT(0xa4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa4ec));
        EXPECT(0x59, gbc.readMem(0xa4ed));
        // 0E 0056
        gbc.setState(0xa89b, 0x8fca, 0x5530, 0x93a2, 0x2575, 0x1b46, 0x1, 0x0);
        gbc.writeMem(0xa89b, { 0xe, 0xe1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8fca, gbc.sp());
        EXPECT(0xa89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa89b));
        EXPECT(0xe1, gbc.readMem(0xa89c));
        // 0E 0057
        gbc.setState(0xca19, 0xbee9, 0xde30, 0xb110, 0x4a8e, 0xa571, 0x1, 0x1);
        gbc.writeMem(0xca19, { 0xe, 0x97 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbee9, gbc.sp());
        EXPECT(0xca1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xca19));
        EXPECT(0x97, gbc.readMem(0xca1a));
        // 0E 0058
        gbc.setState(0xd2f0, 0x6985, 0x8220, 0xd70a, 0xce97, 0x248d, 0x1, 0x0);
        gbc.writeMem(0xd2f0, { 0xe, 0xbc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6985, gbc.sp());
        EXPECT(0xd2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd2f0));
        EXPECT(0xbc, gbc.readMem(0xd2f1));
        // 0E 0059
        gbc.setState(0x12f, 0xd3d0, 0xd930, 0x5255, 0xe941, 0xab1d, 0x0, 0x0);
        gbc.writeMem(0x12f, { 0xe, 0x7d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd3d0, gbc.sp());
        EXPECT(0x131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 005A
        gbc.setState(0x6f8e, 0x6af6, 0x3a10, 0xaeae, 0x3c50, 0x5df2, 0x1, 0x1);
        gbc.writeMem(0x6f8e, { 0xe, 0xa7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6af6, gbc.sp());
        EXPECT(0x6f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 005B
        gbc.setState(0x1203, 0xe35b, 0x4a10, 0x1c73, 0xc2d5, 0xedc7, 0x0, 0x1);
        gbc.writeMem(0x1203, { 0xe, 0xaa });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe35b, gbc.sp());
        EXPECT(0x1205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 005C
        gbc.setState(0xf5d, 0xca78, 0x9650, 0xfdb6, 0x325c, 0x784d, 0x0, 0x0);
        gbc.writeMem(0xf5d, { 0xe, 0x33 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xca78, gbc.sp());
        EXPECT(0xf5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 005D
        gbc.setState(0xa5c8, 0x1099, 0xa360, 0x5f4c, 0x6536, 0xa3f1, 0x1, 0x0);
        gbc.writeMem(0xa5c8, { 0xe, 0x7c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1099, gbc.sp());
        EXPECT(0xa5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa5c8));
        EXPECT(0x7c, gbc.readMem(0xa5c9));
        // 0E 005E
        gbc.setState(0x65c5, 0xd6e7, 0x1e50, 0x341a, 0x6637, 0x9710, 0x1, 0x1);
        gbc.writeMem(0x65c5, { 0xe, 0x87 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd6e7, gbc.sp());
        EXPECT(0x65c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 005F
        gbc.setState(0xa0df, 0x6d26, 0x1d80, 0xae3b, 0x850e, 0x6b51, 0x1, 0x0);
        gbc.writeMem(0xa0df, { 0xe, 0x9c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6d26, gbc.sp());
        EXPECT(0xa0e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa0df));
        EXPECT(0x9c, gbc.readMem(0xa0e0));
        // 0E 0060
        gbc.setState(0x1a72, 0x6dae, 0xbd00, 0x8e1f, 0x3641, 0x6826, 0x1, 0x1);
        gbc.writeMem(0x1a72, { 0xe, 0x6a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6dae, gbc.sp());
        EXPECT(0x1a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0061
        gbc.setState(0x52e0, 0x4e2b, 0x14b0, 0x4c96, 0x7a4d, 0x6504, 0x1, 0x0);
        gbc.writeMem(0x52e0, { 0xe, 0xbd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4e2b, gbc.sp());
        EXPECT(0x52e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0062
        gbc.setState(0xea7e, 0x7395, 0x6c40, 0x7812, 0x49f9, 0x532, 0x1, 0x0);
        gbc.writeMem(0xea7e, { 0xe, 0x2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7395, gbc.sp());
        EXPECT(0xea80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xea7e));
        EXPECT(0x2, gbc.readMem(0xea7f));
        // 0E 0063
        gbc.setState(0xb3a5, 0xb8a4, 0x8e20, 0x833a, 0x68ea, 0x29ae, 0x1, 0x0);
        gbc.writeMem(0xb3a5, { 0xe, 0xc3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb8a4, gbc.sp());
        EXPECT(0xb3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb3a5));
        EXPECT(0xc3, gbc.readMem(0xb3a6));
        // 0E 0064
        gbc.setState(0x4724, 0xa4b8, 0x5fc0, 0x6b75, 0x230c, 0xc321, 0x1, 0x0);
        gbc.writeMem(0x4724, { 0xe, 0xa6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa4b8, gbc.sp());
        EXPECT(0x4726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0065
        gbc.setState(0xad18, 0xa1a9, 0x47d0, 0x1a73, 0xe808, 0xeb6a, 0x0, 0x0);
        gbc.writeMem(0xad18, { 0xe, 0x78 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa1a9, gbc.sp());
        EXPECT(0xad1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xad18));
        EXPECT(0x78, gbc.readMem(0xad19));
        // 0E 0066
        gbc.setState(0xe995, 0x9113, 0x9550, 0x4de0, 0xea0, 0x738d, 0x0, 0x1);
        gbc.writeMem(0xe995, { 0xe, 0xbe });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9113, gbc.sp());
        EXPECT(0xe997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe995));
        EXPECT(0xbe, gbc.readMem(0xe996));
        // 0E 0067
        gbc.setState(0xa5b2, 0x9a57, 0x15d0, 0xd056, 0x327b, 0x6d89, 0x1, 0x1);
        gbc.writeMem(0xa5b2, { 0xe, 0x68 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9a57, gbc.sp());
        EXPECT(0xa5b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa5b2));
        EXPECT(0x68, gbc.readMem(0xa5b3));
        // 0E 0068
        gbc.setState(0x686a, 0x852a, 0xe0c0, 0xd49b, 0x56de, 0xfdc9, 0x0, 0x0);
        gbc.writeMem(0x686a, { 0xe, 0x84 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x852a, gbc.sp());
        EXPECT(0x686c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0069
        gbc.setState(0x2577, 0xbd9c, 0x86f0, 0x70a5, 0xda2b, 0x8ab, 0x0, 0x1);
        gbc.writeMem(0x2577, { 0xe, 0x60 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbd9c, gbc.sp());
        EXPECT(0x2579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 006A
        gbc.setState(0x6ca9, 0xc322, 0x33f0, 0x543c, 0x2d05, 0xdc06, 0x0, 0x1);
        gbc.writeMem(0x6ca9, { 0xe, 0x46 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc322, gbc.sp());
        EXPECT(0x6cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 006B
        gbc.setState(0x279b, 0xca10, 0xa7f0, 0x9d4a, 0xc68f, 0x9279, 0x0, 0x0);
        gbc.writeMem(0x279b, { 0xe, 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xca10, gbc.sp());
        EXPECT(0x279d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 006C
        gbc.setState(0x6d8c, 0xefd8, 0x1010, 0xda6b, 0x8eb4, 0x797b, 0x0, 0x0);
        gbc.writeMem(0x6d8c, { 0xe, 0x8b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xefd8, gbc.sp());
        EXPECT(0x6d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 006D
        gbc.setState(0xcd0d, 0xb73d, 0x9170, 0xdcaf, 0x4ce5, 0x8ebb, 0x0, 0x1);
        gbc.writeMem(0xcd0d, { 0xe, 0x26 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb73d, gbc.sp());
        EXPECT(0xcd0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcd0d));
        EXPECT(0x26, gbc.readMem(0xcd0e));
        // 0E 006F
        gbc.setState(0x74ee, 0x6102, 0xbba0, 0x345e, 0x3020, 0xbd3c, 0x0, 0x1);
        gbc.writeMem(0x74ee, { 0xe, 0x36 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6102, gbc.sp());
        EXPECT(0x74f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0070
        gbc.setState(0x3c0e, 0xcb4a, 0x1290, 0x3643, 0xa65b, 0xff3a, 0x1, 0x0);
        gbc.writeMem(0x3c0e, { 0xe, 0xf2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcb4a, gbc.sp());
        EXPECT(0x3c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0071
        gbc.setState(0x87c7, 0x14c6, 0x5490, 0xed3a, 0x4970, 0x5438, 0x0, 0x0);
        gbc.writeMem(0x87c7, { 0xe, 0xff });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x14c6, gbc.sp());
        EXPECT(0x87c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x87c7));
        EXPECT(0xff, gbc.readMem(0x87c8));
        // 0E 0072
        gbc.setState(0xc1f1, 0xc573, 0xee20, 0x7ad4, 0x1a4f, 0xf48d, 0x0, 0x0);
        gbc.writeMem(0xc1f1, { 0xe, 0xa });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc573, gbc.sp());
        EXPECT(0xc1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc1f1));
        EXPECT(0xa, gbc.readMem(0xc1f2));
        // 0E 0074
        gbc.setState(0xa95e, 0x702a, 0xde0, 0x5137, 0xfb4, 0xf4a2, 0x1, 0x0);
        gbc.writeMem(0xa95e, { 0xe, 0xd9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x702a, gbc.sp());
        EXPECT(0xa960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa95e));
        EXPECT(0xd9, gbc.readMem(0xa95f));
        // 0E 0075
        gbc.setState(0x22b8, 0x8033, 0x52b0, 0x8bd7, 0x21d2, 0x1f79, 0x0, 0x0);
        gbc.writeMem(0x22b8, { 0xe, 0x8d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8033, gbc.sp());
        EXPECT(0x22ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0076
        gbc.setState(0x6343, 0xf37c, 0xa550, 0xefa4, 0xbd07, 0xcbad, 0x1, 0x1);
        gbc.writeMem(0x6343, { 0xe, 0x92 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf37c, gbc.sp());
        EXPECT(0x6345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0077
        gbc.setState(0x58d9, 0xb5f2, 0xb430, 0xd7cd, 0x1f3b, 0xd2d5, 0x1, 0x1);
        gbc.writeMem(0x58d9, { 0xe, 0xc5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb5f2, gbc.sp());
        EXPECT(0x58db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0078
        gbc.setState(0x8b31, 0xde9e, 0x8c70, 0x3c9, 0x77b7, 0x4108, 0x0, 0x1);
        gbc.writeMem(0x8b31, { 0xe, 0xe1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xde9e, gbc.sp());
        EXPECT(0x8b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8b31));
        EXPECT(0xe1, gbc.readMem(0x8b32));
        // 0E 007A
        gbc.setState(0x859e, 0x552a, 0xd4b0, 0x9b46, 0x3cc, 0xbf73, 0x0, 0x1);
        gbc.writeMem(0x859e, { 0xe, 0x40 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x552a, gbc.sp());
        EXPECT(0x85a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x859e));
        EXPECT(0x40, gbc.readMem(0x859f));
        // 0E 007B
        gbc.setState(0x8176, 0x2478, 0x4a20, 0xdfe, 0xa1b1, 0x5fc1, 0x0, 0x0);
        gbc.writeMem(0x8176, { 0xe, 0x16 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2478, gbc.sp());
        EXPECT(0x8178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8176));
        EXPECT(0x16, gbc.readMem(0x8177));
        // 0E 007C
        gbc.setState(0x22d8, 0x56de, 0x3540, 0x18fd, 0x97f0, 0x7cc6, 0x0, 0x0);
        gbc.writeMem(0x22d8, { 0xe, 0x13 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x56de, gbc.sp());
        EXPECT(0x22da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 007D
        gbc.setState(0x8f07, 0x7b4a, 0xca0, 0xb34d, 0x909, 0xe13, 0x1, 0x1);
        gbc.writeMem(0x8f07, { 0xe, 0x82 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7b4a, gbc.sp());
        EXPECT(0x8f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8f07));
        EXPECT(0x82, gbc.readMem(0x8f08));
        // 0E 007F
        gbc.setState(0x61a8, 0x311d, 0xde20, 0x9187, 0x5735, 0x570b, 0x1, 0x1);
        gbc.writeMem(0x61a8, { 0xe, 0x78 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x311d, gbc.sp());
        EXPECT(0x61aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0080
        gbc.setState(0x26dc, 0x766f, 0xfac0, 0xc677, 0x7d63, 0xcabb, 0x0, 0x0);
        gbc.writeMem(0x26dc, { 0xe, 0x56 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x766f, gbc.sp());
        EXPECT(0x26de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0081
        gbc.setState(0xed3e, 0xf5b4, 0x4fc0, 0x8973, 0xeee, 0x2680, 0x0, 0x1);
        gbc.writeMem(0xed3e, { 0xe, 0xae });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf5b4, gbc.sp());
        EXPECT(0xed40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xed3e));
        EXPECT(0xae, gbc.readMem(0xed3f));
        // 0E 0082
        gbc.setState(0xc37e, 0xdfdf, 0x5ad0, 0x2606, 0x89e8, 0x858c, 0x1, 0x0);
        gbc.writeMem(0xc37e, { 0xe, 0x49 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdfdf, gbc.sp());
        EXPECT(0xc380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc37e));
        EXPECT(0x49, gbc.readMem(0xc37f));
        // 0E 0083
        gbc.setState(0xaa5f, 0x6d1f, 0xb0c0, 0xe82e, 0x5a86, 0xca18, 0x0, 0x1);
        gbc.writeMem(0xaa5f, { 0xe, 0x1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6d1f, gbc.sp());
        EXPECT(0xaa61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xaa5f));
        EXPECT(0x1, gbc.readMem(0xaa60));
        // 0E 0085
        gbc.setState(0x9c0a, 0xaf43, 0x6720, 0xfa6f, 0x506e, 0x813d, 0x1, 0x1);
        gbc.writeMem(0x9c0a, { 0xe, 0x1d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xaf43, gbc.sp());
        EXPECT(0x9c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9c0a));
        EXPECT(0x1d, gbc.readMem(0x9c0b));
        // 0E 0086
        gbc.setState(0xcb8d, 0x989b, 0x7400, 0x4923, 0x46e6, 0xd00c, 0x0, 0x1);
        gbc.writeMem(0xcb8d, { 0xe, 0xa9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x989b, gbc.sp());
        EXPECT(0xcb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcb8d));
        EXPECT(0xa9, gbc.readMem(0xcb8e));
        // 0E 0087
        gbc.setState(0x181f, 0x3a37, 0xe010, 0xb46, 0x7d34, 0xdeba, 0x0, 0x1);
        gbc.writeMem(0x181f, { 0xe, 0xba });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3a37, gbc.sp());
        EXPECT(0x1821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0088
        gbc.setState(0x56a8, 0x284c, 0xdf20, 0x1ec3, 0x153e, 0xe55b, 0x0, 0x1);
        gbc.writeMem(0x56a8, { 0xe, 0x2a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x284c, gbc.sp());
        EXPECT(0x56aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0089
        gbc.setState(0x1e85, 0xcfcc, 0xcba0, 0x694, 0xaa2, 0x8fad, 0x0, 0x0);
        gbc.writeMem(0x1e85, { 0xe, 0xc4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcfcc, gbc.sp());
        EXPECT(0x1e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 008A
        gbc.setState(0x8397, 0x71c1, 0xcb30, 0x38d9, 0x7111, 0xf873, 0x0, 0x1);
        gbc.writeMem(0x8397, { 0xe, 0x1a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x71c1, gbc.sp());
        EXPECT(0x8399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8397));
        EXPECT(0x1a, gbc.readMem(0x8398));
        // 0E 008B
        gbc.setState(0x8831, 0x14b, 0x8370, 0x5531, 0x6992, 0x6505, 0x1, 0x1);
        gbc.writeMem(0x8831, { 0xe, 0x5a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x14b, gbc.sp());
        EXPECT(0x8833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8831));
        EXPECT(0x5a, gbc.readMem(0x8832));
        // 0E 008C
        gbc.setState(0x56e5, 0x84a9, 0xb690, 0x387e, 0xe598, 0xd23d, 0x0, 0x0);
        gbc.writeMem(0x56e5, { 0xe, 0xb4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x84a9, gbc.sp());
        EXPECT(0x56e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 008D
        gbc.setState(0x159e, 0x7dfa, 0x7650, 0x68bb, 0xd5b2, 0xc1f6, 0x1, 0x1);
        gbc.writeMem(0x159e, { 0xe, 0x85 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7dfa, gbc.sp());
        EXPECT(0x15a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 008E
        gbc.setState(0x83cb, 0x2e0f, 0xd0f0, 0xad44, 0xf0e8, 0xb1f3, 0x1, 0x0);
        gbc.writeMem(0x83cb, { 0xe, 0x82 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2e0f, gbc.sp());
        EXPECT(0x83cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x83cb));
        EXPECT(0x82, gbc.readMem(0x83cc));
        // 0E 008F
        gbc.setState(0xdc31, 0x83f, 0x630, 0x39b4, 0xf5a2, 0x13d4, 0x1, 0x0);
        gbc.writeMem(0xdc31, { 0xe, 0x8b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x83f, gbc.sp());
        EXPECT(0xdc33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdc31));
        EXPECT(0x8b, gbc.readMem(0xdc32));
        // 0E 0091
        gbc.setState(0xaa22, 0xcf0b, 0x9d00, 0xd833, 0x8f7a, 0xa55, 0x0, 0x1);
        gbc.writeMem(0xaa22, { 0xe, 0x2f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcf0b, gbc.sp());
        EXPECT(0xaa24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xaa22));
        EXPECT(0x2f, gbc.readMem(0xaa23));
        // 0E 0092
        gbc.setState(0x7eb2, 0xcf06, 0xf910, 0x2555, 0x63d1, 0x8293, 0x1, 0x0);
        gbc.writeMem(0x7eb2, { 0xe, 0xb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcf06, gbc.sp());
        EXPECT(0x7eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0093
        gbc.setState(0x3e06, 0x2900, 0x5ac0, 0xab2c, 0xdb85, 0xc04b, 0x1, 0x1);
        gbc.writeMem(0x3e06, { 0xe, 0xf8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2900, gbc.sp());
        EXPECT(0x3e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0094
        gbc.setState(0xc37e, 0xc144, 0x9e60, 0x89be, 0x47f6, 0xe5ae, 0x0, 0x0);
        gbc.writeMem(0xc37e, { 0xe, 0x49 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc144, gbc.sp());
        EXPECT(0xc380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc37e));
        EXPECT(0x49, gbc.readMem(0xc37f));
        // 0E 0095
        gbc.setState(0x71aa, 0xbf8c, 0x9530, 0x1fb6, 0xa6e4, 0x435b, 0x1, 0x1);
        gbc.writeMem(0x71aa, { 0xe, 0x17 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbf8c, gbc.sp());
        EXPECT(0x71ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0096
        gbc.setState(0x65b2, 0xcfeb, 0x8cd0, 0xd43c, 0x8a91, 0x5dcf, 0x1, 0x1);
        gbc.writeMem(0x65b2, { 0xe, 0xf5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcfeb, gbc.sp());
        EXPECT(0x65b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0097
        gbc.setState(0x3bf9, 0x1c12, 0x6170, 0x513c, 0xf206, 0x314c, 0x0, 0x0);
        gbc.writeMem(0x3bf9, { 0xe, 0x75 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1c12, gbc.sp());
        EXPECT(0x3bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0098
        gbc.setState(0xd63f, 0xea33, 0xae40, 0x76b5, 0xef77, 0xc603, 0x1, 0x0);
        gbc.writeMem(0xd63f, { 0xe, 0x25 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xea33, gbc.sp());
        EXPECT(0xd641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd63f));
        EXPECT(0x25, gbc.readMem(0xd640));
        // 0E 0099
        gbc.setState(0xa63a, 0xc109, 0x9c60, 0xd0b4, 0x42a4, 0x6e1f, 0x0, 0x1);
        gbc.writeMem(0xa63a, { 0xe, 0xb1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc109, gbc.sp());
        EXPECT(0xa63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa63a));
        EXPECT(0xb1, gbc.readMem(0xa63b));
        // 0E 009A
        gbc.setState(0x2551, 0x118a, 0xfbd0, 0xb31d, 0xfab6, 0x193f, 0x1, 0x0);
        gbc.writeMem(0x2551, { 0xe, 0x38 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x118a, gbc.sp());
        EXPECT(0x2553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 009B
        gbc.setState(0x6116, 0x460b, 0x72c0, 0x3ded, 0xa10f, 0x9fdd, 0x1, 0x0);
        gbc.writeMem(0x6116, { 0xe, 0x26 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x460b, gbc.sp());
        EXPECT(0x6118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 009D
        gbc.setState(0x7374, 0x6ace, 0x8890, 0xc403, 0x16c5, 0x2653, 0x0, 0x0);
        gbc.writeMem(0x7374, { 0xe, 0x72 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6ace, gbc.sp());
        EXPECT(0x7376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 009E
        gbc.setState(0xe260, 0xef94, 0xdf40, 0xa77d, 0xb0e, 0x6ef8, 0x1, 0x1);
        gbc.writeMem(0xe260, { 0xe, 0x46 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xef94, gbc.sp());
        EXPECT(0xe262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe260));
        EXPECT(0x46, gbc.readMem(0xe261));
        // 0E 009F
        gbc.setState(0xb1f9, 0x8429, 0x7810, 0x5303, 0xa98f, 0xa1ff, 0x0, 0x0);
        gbc.writeMem(0xb1f9, { 0xe, 0x49 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8429, gbc.sp());
        EXPECT(0xb1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb1f9));
        EXPECT(0x49, gbc.readMem(0xb1fa));
        // 0E 00A0
        gbc.setState(0xd16a, 0xdf61, 0x360, 0xc92d, 0xdc8c, 0xf75b, 0x1, 0x1);
        gbc.writeMem(0xd16a, { 0xe, 0x3c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xdf61, gbc.sp());
        EXPECT(0xd16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd16a));
        EXPECT(0x3c, gbc.readMem(0xd16b));
        // 0E 00A1
        gbc.setState(0xdf05, 0x7b20, 0xe420, 0x64b, 0x75fc, 0x94be, 0x0, 0x1);
        gbc.writeMem(0xdf05, { 0xe, 0xe1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7b20, gbc.sp());
        EXPECT(0xdf07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdf05));
        EXPECT(0xe1, gbc.readMem(0xdf06));
        // 0E 00A2
        gbc.setState(0x4ee5, 0x2661, 0x9330, 0x93f0, 0x2642, 0x5b3e, 0x0, 0x1);
        gbc.writeMem(0x4ee5, { 0xe, 0x3f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2661, gbc.sp());
        EXPECT(0x4ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00A3
        gbc.setState(0x3400, 0xfc6, 0xc600, 0x8817, 0xd2ef, 0xeed2, 0x0, 0x0);
        gbc.writeMem(0x3400, { 0xe, 0x31 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfc6, gbc.sp());
        EXPECT(0x3402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00A4
        gbc.setState(0x71f5, 0x560c, 0xe070, 0x6b6, 0xd4b0, 0x8290, 0x1, 0x1);
        gbc.writeMem(0x71f5, { 0xe, 0x36 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x560c, gbc.sp());
        EXPECT(0x71f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00A5
        gbc.setState(0x354e, 0x43e5, 0x6f60, 0x68d6, 0xde4c, 0x1b94, 0x1, 0x1);
        gbc.writeMem(0x354e, { 0xe, 0xbd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x43e5, gbc.sp());
        EXPECT(0x3550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00A6
        gbc.setState(0xddc2, 0xdc33, 0xcf70, 0x6005, 0x295f, 0xb8a4, 0x1, 0x0);
        gbc.writeMem(0xddc2, { 0xe, 0x3f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdc33, gbc.sp());
        EXPECT(0xddc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xddc2));
        EXPECT(0x3f, gbc.readMem(0xddc3));
        // 0E 00A7
        gbc.setState(0x54d8, 0xa9ed, 0xfbf0, 0x3fbe, 0x8c5, 0x5024, 0x1, 0x1);
        gbc.writeMem(0x54d8, { 0xe, 0xb4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa9ed, gbc.sp());
        EXPECT(0x54da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00A8
        gbc.setState(0x2bbc, 0x8813, 0x43f0, 0x7709, 0x4f17, 0xab74, 0x0, 0x0);
        gbc.writeMem(0x2bbc, { 0xe, 0x78 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8813, gbc.sp());
        EXPECT(0x2bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00A9
        gbc.setState(0x4454, 0x3792, 0x6180, 0x3883, 0x6ce4, 0x653c, 0x1, 0x1);
        gbc.writeMem(0x4454, { 0xe, 0xed });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3792, gbc.sp());
        EXPECT(0x4456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00AA
        gbc.setState(0xef9d, 0x229d, 0x6e00, 0x75c2, 0xfa7b, 0xf163, 0x0, 0x0);
        gbc.writeMem(0xef9d, { 0xe, 0x76 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x229d, gbc.sp());
        EXPECT(0xef9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xef9d));
        EXPECT(0x76, gbc.readMem(0xef9e));
        // 0E 00AB
        gbc.setState(0xd815, 0x6f2, 0x3af0, 0x4912, 0xd4a, 0xf954, 0x0, 0x0);
        gbc.writeMem(0xd815, { 0xe, 0xf7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6f2, gbc.sp());
        EXPECT(0xd817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd815));
        EXPECT(0xf7, gbc.readMem(0xd816));
        // 0E 00AC
        gbc.setState(0x1b0, 0x6798, 0x46a0, 0x9bd2, 0x9563, 0xff9d, 0x1, 0x0);
        gbc.writeMem(0x1b0, { 0xe, 0xcd });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6798, gbc.sp());
        EXPECT(0x1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00AD
        gbc.setState(0x9900, 0x47bc, 0x30a0, 0xbe59, 0x6d1, 0x142c, 0x1, 0x0);
        gbc.writeMem(0x9900, { 0xe, 0x2b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x47bc, gbc.sp());
        EXPECT(0x9902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9900));
        EXPECT(0x2b, gbc.readMem(0x9901));
        // 0E 00AE
        gbc.setState(0x5621, 0x6986, 0x510, 0x7db5, 0x74f5, 0x9f34, 0x1, 0x1);
        gbc.writeMem(0x5621, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6986, gbc.sp());
        EXPECT(0x5623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00AF
        gbc.setState(0x2f2a, 0x1f0a, 0xbe80, 0x886b, 0xebf8, 0xdba0, 0x0, 0x1);
        gbc.writeMem(0x2f2a, { 0xe, 0x6f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1f0a, gbc.sp());
        EXPECT(0x2f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00B0
        gbc.setState(0x7875, 0x6732, 0x2c70, 0x4cbc, 0x3c3, 0x632d, 0x1, 0x1);
        gbc.writeMem(0x7875, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6732, gbc.sp());
        EXPECT(0x7877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00B1
        gbc.setState(0x45cb, 0x9277, 0x3a30, 0x858c, 0x1ff8, 0xfca9, 0x0, 0x1);
        gbc.writeMem(0x45cb, { 0xe, 0x8b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9277, gbc.sp());
        EXPECT(0x45cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00B2
        gbc.setState(0x4b70, 0xd7d0, 0xcbc0, 0x9e3, 0xa3c, 0x4759, 0x0, 0x0);
        gbc.writeMem(0x4b70, { 0xe, 0x97 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd7d0, gbc.sp());
        EXPECT(0x4b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00B3
        gbc.setState(0xb424, 0xe682, 0x9910, 0x7890, 0x7968, 0xd9af, 0x0, 0x1);
        gbc.writeMem(0xb424, { 0xe, 0x9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe682, gbc.sp());
        EXPECT(0xb426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb424));
        EXPECT(0x9, gbc.readMem(0xb425));
        // 0E 00B5
        gbc.setState(0x807e, 0x50e1, 0x3db0, 0x7f37, 0x3c8b, 0x3252, 0x0, 0x0);
        gbc.writeMem(0x807e, { 0xe, 0x6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x50e1, gbc.sp());
        EXPECT(0x8080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x807e));
        EXPECT(0x6, gbc.readMem(0x807f));
        // 0E 00B6
        gbc.setState(0x5e38, 0x2294, 0x6200, 0xe260, 0x16ca, 0x98b8, 0x1, 0x0);
        gbc.writeMem(0x5e38, { 0xe, 0x8f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2294, gbc.sp());
        EXPECT(0x5e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00B7
        gbc.setState(0x386b, 0xc79, 0x3a90, 0xccb7, 0x412d, 0xa852, 0x0, 0x1);
        gbc.writeMem(0x386b, { 0xe, 0x8e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc79, gbc.sp());
        EXPECT(0x386d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00B8
        gbc.setState(0x29f0, 0xedfa, 0x910, 0xd3d7, 0x17a4, 0x2f98, 0x0, 0x1);
        gbc.writeMem(0x29f0, { 0xe, 0xd9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xedfa, gbc.sp());
        EXPECT(0x29f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00BA
        gbc.setState(0xd2a9, 0x5988, 0xaf50, 0x9ba5, 0x6f74, 0x583d, 0x1, 0x1);
        gbc.writeMem(0xd2a9, { 0xe, 0x79 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5988, gbc.sp());
        EXPECT(0xd2ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd2a9));
        EXPECT(0x79, gbc.readMem(0xd2aa));
        // 0E 00BB
        gbc.setState(0x3e7f, 0x6377, 0x48f0, 0xaf50, 0x8c3c, 0xc2cd, 0x1, 0x1);
        gbc.writeMem(0x3e7f, { 0xe, 0xe });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6377, gbc.sp());
        EXPECT(0x3e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00BC
        gbc.setState(0x79ce, 0x9bd8, 0x2e50, 0xbe34, 0x4be7, 0x350b, 0x1, 0x1);
        gbc.writeMem(0x79ce, { 0xe, 0x14 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9bd8, gbc.sp());
        EXPECT(0x79d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00BD
        gbc.setState(0x1138, 0x8414, 0xb240, 0x2792, 0x417a, 0x42d0, 0x0, 0x0);
        gbc.writeMem(0x1138, { 0xe, 0x68 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8414, gbc.sp());
        EXPECT(0x113a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00BE
        gbc.setState(0xedfd, 0x9a1e, 0xd190, 0x235a, 0xb48a, 0x5127, 0x0, 0x1);
        gbc.writeMem(0xedfd, { 0xe, 0x1e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9a1e, gbc.sp());
        EXPECT(0xedff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xedfd));
        EXPECT(0x1e, gbc.readMem(0xedfe));
        // 0E 00BF
        gbc.setState(0x2742, 0x7425, 0x82e0, 0x412d, 0x6729, 0xc9e1, 0x0, 0x0);
        gbc.writeMem(0x2742, { 0xe, 0xef });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7425, gbc.sp());
        EXPECT(0x2744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00C0
        gbc.setState(0xd9ba, 0xa6ed, 0xc8a0, 0x4251, 0x1419, 0x52fd, 0x1, 0x1);
        gbc.writeMem(0xd9ba, { 0xe, 0x5f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa6ed, gbc.sp());
        EXPECT(0xd9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd9ba));
        EXPECT(0x5f, gbc.readMem(0xd9bb));
        // 0E 00C1
        gbc.setState(0xb406, 0xb9c6, 0x9ab0, 0x6be1, 0xe9ac, 0x1dc7, 0x0, 0x1);
        gbc.writeMem(0xb406, { 0xe, 0xc3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb9c6, gbc.sp());
        EXPECT(0xb408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb406));
        EXPECT(0xc3, gbc.readMem(0xb407));
        // 0E 00C3
        gbc.setState(0x3c44, 0x3e73, 0xe830, 0xb702, 0x35a5, 0x6d33, 0x1, 0x1);
        gbc.writeMem(0x3c44, { 0xe, 0xbc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3e73, gbc.sp());
        EXPECT(0x3c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00C4
        gbc.setState(0xcb59, 0x9cdb, 0xdcd0, 0xd93, 0x4363, 0x2f56, 0x0, 0x1);
        gbc.writeMem(0xcb59, { 0xe, 0x21 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9cdb, gbc.sp());
        EXPECT(0xcb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcb59));
        EXPECT(0x21, gbc.readMem(0xcb5a));
        // 0E 00C5
        gbc.setState(0xac2f, 0x9706, 0x14f0, 0xb52d, 0x9384, 0x52fa, 0x1, 0x1);
        gbc.writeMem(0xac2f, { 0xe, 0x4a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9706, gbc.sp());
        EXPECT(0xac31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xac2f));
        EXPECT(0x4a, gbc.readMem(0xac30));
        // 0E 00C6
        gbc.setState(0xbd3f, 0xf59f, 0x17c0, 0x3e09, 0x4e2, 0xa03f, 0x1, 0x1);
        gbc.writeMem(0xbd3f, { 0xe, 0x80 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf59f, gbc.sp());
        EXPECT(0xbd41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbd3f));
        EXPECT(0x80, gbc.readMem(0xbd40));
        // 0E 00C7
        gbc.setState(0x1ea6, 0x704f, 0x8fb0, 0x54bc, 0x1a32, 0xd5d8, 0x1, 0x0);
        gbc.writeMem(0x1ea6, { 0xe, 0xfb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x704f, gbc.sp());
        EXPECT(0x1ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00C8
        gbc.setState(0xc9c3, 0xc948, 0x6730, 0x31f3, 0xfbf1, 0x434f, 0x1, 0x0);
        gbc.writeMem(0xc9c3, { 0xe, 0x3b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc948, gbc.sp());
        EXPECT(0xc9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc9c3));
        EXPECT(0x3b, gbc.readMem(0xc9c4));
        // 0E 00C9
        gbc.setState(0xe876, 0x10bb, 0x3630, 0xb525, 0xd20e, 0x849d, 0x0, 0x0);
        gbc.writeMem(0xe876, { 0xe, 0x1f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x10bb, gbc.sp());
        EXPECT(0xe878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe876));
        EXPECT(0x1f, gbc.readMem(0xe877));
        // 0E 00CB
        gbc.setState(0x60f2, 0x6a7a, 0x7fd0, 0xe863, 0xc01b, 0x4b88, 0x1, 0x0);
        gbc.writeMem(0x60f2, { 0xe, 0xc6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6a7a, gbc.sp());
        EXPECT(0x60f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00CC
        gbc.setState(0x898c, 0x3998, 0xa8f0, 0xcd0b, 0x3ba7, 0x9a16, 0x0, 0x1);
        gbc.writeMem(0x898c, { 0xe, 0x2c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3998, gbc.sp());
        EXPECT(0x898e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x898c));
        EXPECT(0x2c, gbc.readMem(0x898d));
        // 0E 00CD
        gbc.setState(0x29c5, 0xaf24, 0xdf10, 0x9de, 0x21a1, 0x9492, 0x0, 0x1);
        gbc.writeMem(0x29c5, { 0xe, 0x9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xaf24, gbc.sp());
        EXPECT(0x29c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00CE
        gbc.setState(0xad3e, 0xf3b6, 0x5d90, 0x98d9, 0xd3d8, 0x845d, 0x1, 0x0);
        gbc.writeMem(0xad3e, { 0xe, 0x73 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf3b6, gbc.sp());
        EXPECT(0xad40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xad3e));
        EXPECT(0x73, gbc.readMem(0xad3f));
        // 0E 00CF
        gbc.setState(0xb220, 0xbf43, 0xec90, 0x7106, 0xb85b, 0x4204, 0x1, 0x0);
        gbc.writeMem(0xb220, { 0xe, 0x1a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbf43, gbc.sp());
        EXPECT(0xb222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb220));
        EXPECT(0x1a, gbc.readMem(0xb221));
        // 0E 00D0
        gbc.setState(0xa25f, 0x7d17, 0xfff0, 0xa065, 0x53f5, 0x2aed, 0x1, 0x1);
        gbc.writeMem(0xa25f, { 0xe, 0xcb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7d17, gbc.sp());
        EXPECT(0xa261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa25f));
        EXPECT(0xcb, gbc.readMem(0xa260));
        // 0E 00D2
        gbc.setState(0x5f11, 0x6824, 0x8960, 0x22b, 0xf68b, 0xfc1b, 0x1, 0x0);
        gbc.writeMem(0x5f11, { 0xe, 0x17 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6824, gbc.sp());
        EXPECT(0x5f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00D4
        gbc.setState(0x1aec, 0x2064, 0xc70, 0xe0a, 0x1a98, 0xb05c, 0x0, 0x0);
        gbc.writeMem(0x1aec, { 0xe, 0x76 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2064, gbc.sp());
        EXPECT(0x1aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00D5
        gbc.setState(0xdfe1, 0xc781, 0x1c90, 0xe97a, 0x7d5e, 0xac00, 0x0, 0x0);
        gbc.writeMem(0xdfe1, { 0xe, 0xfa });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc781, gbc.sp());
        EXPECT(0xdfe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdfe1));
        EXPECT(0xfa, gbc.readMem(0xdfe2));
        // 0E 00D6
        gbc.setState(0x411f, 0xfd9e, 0xb710, 0x2110, 0xdfeb, 0xa9b8, 0x1, 0x1);
        gbc.writeMem(0x411f, { 0xe, 0xb3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfd9e, gbc.sp());
        EXPECT(0x4121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00D7
        gbc.setState(0x21e1, 0x242f, 0x36b0, 0xb12a, 0x421c, 0x45b5, 0x1, 0x0);
        gbc.writeMem(0x21e1, { 0xe, 0xf9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x242f, gbc.sp());
        EXPECT(0x21e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00D9
        gbc.setState(0xefa6, 0x6f45, 0xcc80, 0x7d73, 0xba7e, 0xef91, 0x1, 0x1);
        gbc.writeMem(0xefa6, { 0xe, 0xbf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6f45, gbc.sp());
        EXPECT(0xefa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xefa6));
        EXPECT(0xbf, gbc.readMem(0xefa7));
        // 0E 00DA
        gbc.setState(0xc4f, 0xa8a3, 0xff20, 0xdf9d, 0x9da0, 0x2fa4, 0x0, 0x1);
        gbc.writeMem(0xc4f, { 0xe, 0xdf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa8a3, gbc.sp());
        EXPECT(0xc51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00DB
        gbc.setState(0x8889, 0x9fa0, 0x4c40, 0xf4da, 0xf1a6, 0x64c5, 0x0, 0x1);
        gbc.writeMem(0x8889, { 0xe, 0x5d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9fa0, gbc.sp());
        EXPECT(0x888b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8889));
        EXPECT(0x5d, gbc.readMem(0x888a));
        // 0E 00DC
        gbc.setState(0xc55c, 0xb173, 0x15e0, 0x132, 0xcf2b, 0xdc4a, 0x1, 0x1);
        gbc.writeMem(0xc55c, { 0xe, 0x35 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb173, gbc.sp());
        EXPECT(0xc55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc55c));
        EXPECT(0x35, gbc.readMem(0xc55d));
        // 0E 00DD
        gbc.setState(0xa554, 0x122a, 0xebf0, 0x97cb, 0x802e, 0x8dcf, 0x0, 0x1);
        gbc.writeMem(0xa554, { 0xe, 0xce });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x122a, gbc.sp());
        EXPECT(0xa556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa554));
        EXPECT(0xce, gbc.readMem(0xa555));
        // 0E 00DE
        gbc.setState(0x47f2, 0xdad8, 0xbf00, 0x8944, 0x2dbb, 0xa50f, 0x1, 0x0);
        gbc.writeMem(0x47f2, { 0xe, 0x85 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdad8, gbc.sp());
        EXPECT(0x47f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00DF
        gbc.setState(0xcd82, 0x68cb, 0xda90, 0x8732, 0x86a2, 0xeff0, 0x1, 0x0);
        gbc.writeMem(0xcd82, { 0xe, 0x9a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x68cb, gbc.sp());
        EXPECT(0xcd84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcd82));
        EXPECT(0x9a, gbc.readMem(0xcd83));
        // 0E 00E0
        gbc.setState(0x18d6, 0x289e, 0x2900, 0x5cab, 0x38ec, 0x9500, 0x1, 0x1);
        gbc.writeMem(0x18d6, { 0xe, 0x65 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x289e, gbc.sp());
        EXPECT(0x18d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00E1
        gbc.setState(0x8b07, 0xb992, 0xbf30, 0x574d, 0xa71a, 0x7f5d, 0x1, 0x1);
        gbc.writeMem(0x8b07, { 0xe, 0x73 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb992, gbc.sp());
        EXPECT(0x8b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8b07));
        EXPECT(0x73, gbc.readMem(0x8b08));
        // 0E 00E2
        gbc.setState(0x2b29, 0x75dd, 0x1cb0, 0x5921, 0x1b01, 0x643b, 0x1, 0x1);
        gbc.writeMem(0x2b29, { 0xe, 0x18 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x75dd, gbc.sp());
        EXPECT(0x2b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00E3
        gbc.setState(0x3f5f, 0xef7f, 0x4d10, 0x83e4, 0xed05, 0xdd96, 0x1, 0x0);
        gbc.writeMem(0x3f5f, { 0xe, 0xe });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xef7f, gbc.sp());
        EXPECT(0x3f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00E4
        gbc.setState(0x451f, 0x174, 0x70, 0x8145, 0xa996, 0xab91, 0x1, 0x1);
        gbc.writeMem(0x451f, { 0xe, 0x44 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x174, gbc.sp());
        EXPECT(0x4521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00E5
        gbc.setState(0x8ead, 0x52a0, 0xc270, 0x8d1f, 0x189d, 0x3ad8, 0x0, 0x1);
        gbc.writeMem(0x8ead, { 0xe, 0xd6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x52a0, gbc.sp());
        EXPECT(0x8eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8ead));
        EXPECT(0xd6, gbc.readMem(0x8eae));
        // 0E 00E7
        gbc.setState(0xa298, 0x9fd6, 0xc550, 0x7807, 0x6b83, 0xa576, 0x1, 0x0);
        gbc.writeMem(0xa298, { 0xe, 0xa9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9fd6, gbc.sp());
        EXPECT(0xa29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa298));
        EXPECT(0xa9, gbc.readMem(0xa299));
        // 0E 00E8
        gbc.setState(0x683a, 0x8d38, 0x72f0, 0x7dc4, 0x48c2, 0xc6da, 0x1, 0x1);
        gbc.writeMem(0x683a, { 0xe, 0x63 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8d38, gbc.sp());
        EXPECT(0x683c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00E9
        gbc.setState(0x147a, 0x912b, 0x7d60, 0x86d0, 0xce0e, 0x21ad, 0x1, 0x0);
        gbc.writeMem(0x147a, { 0xe, 0xb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x912b, gbc.sp());
        EXPECT(0x147c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00EA
        gbc.setState(0x7adf, 0x22ac, 0xf4a0, 0x7d62, 0x7c1c, 0x6bda, 0x0, 0x0);
        gbc.writeMem(0x7adf, { 0xe, 0xd0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x22ac, gbc.sp());
        EXPECT(0x7ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00EB
        gbc.setState(0x2caf, 0x54a, 0x3450, 0xa222, 0x89da, 0x938d, 0x0, 0x1);
        gbc.writeMem(0x2caf, { 0xe, 0x79 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x54a, gbc.sp());
        EXPECT(0x2cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00EC
        gbc.setState(0xa744, 0x11c3, 0x82e0, 0xca24, 0xf312, 0x34fd, 0x1, 0x0);
        gbc.writeMem(0xa744, { 0xe, 0x53 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x11c3, gbc.sp());
        EXPECT(0xa746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa744));
        EXPECT(0x53, gbc.readMem(0xa745));
        // 0E 00ED
        gbc.setState(0x431e, 0xb082, 0x9570, 0x8700, 0x4ac3, 0x5de, 0x1, 0x1);
        gbc.writeMem(0x431e, { 0xe, 0x59 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb082, gbc.sp());
        EXPECT(0x4320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00EE
        gbc.setState(0x4de5, 0xd24e, 0x9f30, 0x2e0d, 0x9096, 0x5f1c, 0x1, 0x0);
        gbc.writeMem(0x4de5, { 0xe, 0x72 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd24e, gbc.sp());
        EXPECT(0x4de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00EF
        gbc.setState(0x94ff, 0x5a6e, 0x3350, 0x1004, 0x2411, 0xf5b8, 0x1, 0x0);
        gbc.writeMem(0x94ff, { 0xe, 0xea });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5a6e, gbc.sp());
        EXPECT(0x9501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x94ff));
        EXPECT(0xea, gbc.readMem(0x9500));
        // 0E 00F0
        gbc.setState(0xa12a, 0x6e36, 0x7300, 0x781c, 0x9ead, 0x422f, 0x0, 0x0);
        gbc.writeMem(0xa12a, { 0xe, 0xf1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6e36, gbc.sp());
        EXPECT(0xa12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa12a));
        EXPECT(0xf1, gbc.readMem(0xa12b));
        // 0E 00F1
        gbc.setState(0xcf, 0xa537, 0xf790, 0xd138, 0x12e9, 0xb815, 0x1, 0x0);
        gbc.writeMem(0xcf, { 0xe, 0x4b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa537, gbc.sp());
        EXPECT(0xd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00F2
        gbc.setState(0x5b6a, 0xcc93, 0x88b0, 0xcaca, 0x6c, 0x4214, 0x1, 0x0);
        gbc.writeMem(0x5b6a, { 0xe, 0x36 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcc93, gbc.sp());
        EXPECT(0x5b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00F3
        gbc.setState(0x8b6d, 0x6fc5, 0xc360, 0xf5fd, 0x12fa, 0xaa54, 0x1, 0x1);
        gbc.writeMem(0x8b6d, { 0xe, 0xd1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6fc5, gbc.sp());
        EXPECT(0x8b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8b6d));
        EXPECT(0xd1, gbc.readMem(0x8b6e));
        // 0E 00F4
        gbc.setState(0x1ea1, 0xc315, 0xa5d0, 0x668e, 0xfe83, 0x92b1, 0x0, 0x0);
        gbc.writeMem(0x1ea1, { 0xe, 0xac });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc315, gbc.sp());
        EXPECT(0x1ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00F5
        gbc.setState(0x8a30, 0x2cd1, 0x70, 0x995f, 0x55a7, 0x5862, 0x0, 0x0);
        gbc.writeMem(0x8a30, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2cd1, gbc.sp());
        EXPECT(0x8a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8a30));
        EXPECT(0xe6, gbc.readMem(0x8a31));
        // 0E 00F6
        gbc.setState(0x81ff, 0x876, 0xa730, 0xa725, 0x8537, 0x83d5, 0x1, 0x0);
        gbc.writeMem(0x81ff, { 0xe, 0xdc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x876, gbc.sp());
        EXPECT(0x8201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x81ff));
        EXPECT(0xdc, gbc.readMem(0x8200));
        // 0E 00F7
        gbc.setState(0x8ede, 0xba8d, 0x520, 0xf320, 0x40f5, 0xbf3, 0x1, 0x1);
        gbc.writeMem(0x8ede, { 0xe, 0x99 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xba8d, gbc.sp());
        EXPECT(0x8ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8ede));
        EXPECT(0x99, gbc.readMem(0x8edf));
        // 0E 00F8
        gbc.setState(0x1928, 0x8838, 0x9690, 0x87a0, 0xdaf0, 0x33f4, 0x0, 0x0);
        gbc.writeMem(0x1928, { 0xe, 0x51 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8838, gbc.sp());
        EXPECT(0x192a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00F9
        gbc.setState(0xb8bb, 0x66a1, 0xd580, 0x85d9, 0x7be1, 0x7f03, 0x1, 0x1);
        gbc.writeMem(0xb8bb, { 0xe, 0xc5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x66a1, gbc.sp());
        EXPECT(0xb8bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb8bb));
        EXPECT(0xc5, gbc.readMem(0xb8bc));
        // 0E 00FA
        gbc.setState(0xa5f4, 0xf896, 0x5a40, 0x1bcd, 0x76c3, 0xa203, 0x1, 0x1);
        gbc.writeMem(0xa5f4, { 0xe, 0xbe });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf896, gbc.sp());
        EXPECT(0xa5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa5f4));
        EXPECT(0xbe, gbc.readMem(0xa5f5));
        // 0E 00FC
        gbc.setState(0x48e1, 0x1081, 0xd80, 0x28be, 0x2fa9, 0x7e53, 0x0, 0x0);
        gbc.writeMem(0x48e1, { 0xe, 0x28 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1081, gbc.sp());
        EXPECT(0x48e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 00FD
        gbc.setState(0x9eea, 0x9d93, 0xb860, 0x518e, 0x3e0a, 0xaa9a, 0x1, 0x1);
        gbc.writeMem(0x9eea, { 0xe, 0x72 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9d93, gbc.sp());
        EXPECT(0x9eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9eea));
        EXPECT(0x72, gbc.readMem(0x9eeb));
        // 0E 00FE
        gbc.setState(0x7c4b, 0xb16, 0x1c50, 0x7d40, 0xbcad, 0xae2, 0x1, 0x0);
        gbc.writeMem(0x7c4b, { 0xe, 0x8a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb16, gbc.sp());
        EXPECT(0x7c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 00FF
        gbc.setState(0xc598, 0xf78a, 0x1f20, 0x540, 0x74f8, 0x944d, 0x1, 0x0);
        gbc.writeMem(0xc598, { 0xe, 0x78 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf78a, gbc.sp());
        EXPECT(0xc59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc598));
        EXPECT(0x78, gbc.readMem(0xc599));
        // 0E 0100
        gbc.setState(0x52a2, 0x46b4, 0x420, 0x91a8, 0x9eca, 0x810e, 0x0, 0x0);
        gbc.writeMem(0x52a2, { 0xe, 0x1a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x46b4, gbc.sp());
        EXPECT(0x52a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0101
        gbc.setState(0xdd58, 0x1b14, 0xfad0, 0x2201, 0x4e99, 0xdec7, 0x1, 0x1);
        gbc.writeMem(0xdd58, { 0xe, 0xf8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1b14, gbc.sp());
        EXPECT(0xdd5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdd58));
        EXPECT(0xf8, gbc.readMem(0xdd59));
        // 0E 0102
        gbc.setState(0xab3b, 0x3296, 0x7ab0, 0x3571, 0x4161, 0x336e, 0x0, 0x1);
        gbc.writeMem(0xab3b, { 0xe, 0xce });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3296, gbc.sp());
        EXPECT(0xab3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xab3b));
        EXPECT(0xce, gbc.readMem(0xab3c));
        // 0E 0103
        gbc.setState(0x7521, 0x45b9, 0x5d40, 0x1753, 0xd1c2, 0x4877, 0x1, 0x1);
        gbc.writeMem(0x7521, { 0xe, 0x51 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x45b9, gbc.sp());
        EXPECT(0x7523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0105
        gbc.setState(0xc4fb, 0x4317, 0x3c30, 0x49c6, 0x11ad, 0x2ba8, 0x0, 0x0);
        gbc.writeMem(0xc4fb, { 0xe, 0x2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4317, gbc.sp());
        EXPECT(0xc4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc4fb));
        EXPECT(0x2, gbc.readMem(0xc4fc));
        // 0E 0106
        gbc.setState(0xb31a, 0xa280, 0x35a0, 0x1c58, 0x5f16, 0x1961, 0x1, 0x1);
        gbc.writeMem(0xb31a, { 0xe, 0xe8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa280, gbc.sp());
        EXPECT(0xb31c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb31a));
        EXPECT(0xe8, gbc.readMem(0xb31b));
        // 0E 0107
        gbc.setState(0xabc5, 0x1c98, 0xa120, 0x7952, 0x2cc7, 0xaa44, 0x1, 0x0);
        gbc.writeMem(0xabc5, { 0xe, 0x9a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1c98, gbc.sp());
        EXPECT(0xabc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xabc5));
        EXPECT(0x9a, gbc.readMem(0xabc6));
        // 0E 0108
        gbc.setState(0x4554, 0xe7b2, 0x5a90, 0x3b5e, 0x3d4d, 0xdfbe, 0x0, 0x0);
        gbc.writeMem(0x4554, { 0xe, 0x55 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe7b2, gbc.sp());
        EXPECT(0x4556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0109
        gbc.setState(0x628c, 0xcc2c, 0xc40, 0x4a88, 0xe805, 0xecb5, 0x1, 0x1);
        gbc.writeMem(0x628c, { 0xe, 0x7b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcc2c, gbc.sp());
        EXPECT(0x628e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 010A
        gbc.setState(0x45d3, 0x2e7f, 0x7370, 0xe922, 0xcb9a, 0x5d03, 0x1, 0x1);
        gbc.writeMem(0x45d3, { 0xe, 0x4f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2e7f, gbc.sp());
        EXPECT(0x45d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 010B
        gbc.setState(0x9d23, 0x7d48, 0x59b0, 0xfde2, 0x9ce1, 0xe274, 0x0, 0x1);
        gbc.writeMem(0x9d23, { 0xe, 0x50 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7d48, gbc.sp());
        EXPECT(0x9d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9d23));
        EXPECT(0x50, gbc.readMem(0x9d24));
        // 0E 010C
        gbc.setState(0x3318, 0x60bc, 0x8a0, 0x5050, 0x3feb, 0xac87, 0x0, 0x1);
        gbc.writeMem(0x3318, { 0xe, 0xad });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x60bc, gbc.sp());
        EXPECT(0x331a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 010D
        gbc.setState(0x3c7b, 0x9db0, 0x2050, 0x3c05, 0xbca9, 0x91db, 0x1, 0x0);
        gbc.writeMem(0x3c7b, { 0xe, 0x9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9db0, gbc.sp());
        EXPECT(0x3c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 010E
        gbc.setState(0xb83c, 0x17bc, 0x1a80, 0xb224, 0x1dea, 0x8de7, 0x1, 0x0);
        gbc.writeMem(0xb83c, { 0xe, 0x25 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x17bc, gbc.sp());
        EXPECT(0xb83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb83c));
        EXPECT(0x25, gbc.readMem(0xb83d));
        // 0E 010F
        gbc.setState(0x5a23, 0x1fe3, 0xc8c0, 0x7db2, 0x3040, 0x6196, 0x0, 0x0);
        gbc.writeMem(0x5a23, { 0xe, 0x2b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1fe3, gbc.sp());
        EXPECT(0x5a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0111
        gbc.setState(0xb700, 0xe76b, 0xd90, 0xa866, 0x32ba, 0xf517, 0x1, 0x1);
        gbc.writeMem(0xb700, { 0xe, 0x2f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe76b, gbc.sp());
        EXPECT(0xb702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb700));
        EXPECT(0x2f, gbc.readMem(0xb701));
        // 0E 0112
        gbc.setState(0x7904, 0x8f21, 0xa980, 0x576a, 0x8e91, 0xde40, 0x0, 0x0);
        gbc.writeMem(0x7904, { 0xe, 0xc7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8f21, gbc.sp());
        EXPECT(0x7906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0113
        gbc.setState(0x11ac, 0xa386, 0x15e0, 0xdf0, 0xfad1, 0x4d2, 0x1, 0x1);
        gbc.writeMem(0x11ac, { 0xe, 0xc7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa386, gbc.sp());
        EXPECT(0x11ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0114
        gbc.setState(0x252f, 0xc4b9, 0x4160, 0x6e06, 0x275d, 0x26e8, 0x0, 0x0);
        gbc.writeMem(0x252f, { 0xe, 0x5e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc4b9, gbc.sp());
        EXPECT(0x2531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0115
        gbc.setState(0xc88e, 0xacda, 0xf90, 0x8ac1, 0xe744, 0x94f6, 0x1, 0x1);
        gbc.writeMem(0xc88e, { 0xe, 0xc9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xacda, gbc.sp());
        EXPECT(0xc890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc88e));
        EXPECT(0xc9, gbc.readMem(0xc88f));
        // 0E 0116
        gbc.setState(0x5191, 0x378c, 0x77a0, 0x66a1, 0x5727, 0x11c6, 0x0, 0x0);
        gbc.writeMem(0x5191, { 0xe, 0x60 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x378c, gbc.sp());
        EXPECT(0x5193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0117
        gbc.setState(0x8989, 0x9296, 0x8b50, 0xbcbf, 0x574e, 0x2f48, 0x1, 0x1);
        gbc.writeMem(0x8989, { 0xe, 0x1f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9296, gbc.sp());
        EXPECT(0x898b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8989));
        EXPECT(0x1f, gbc.readMem(0x898a));
        // 0E 0118
        gbc.setState(0xd8c0, 0x5d47, 0xe370, 0xd90, 0x2f3c, 0x6667, 0x0, 0x0);
        gbc.writeMem(0xd8c0, { 0xe, 0x65 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5d47, gbc.sp());
        EXPECT(0xd8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd8c0));
        EXPECT(0x65, gbc.readMem(0xd8c1));
        // 0E 0119
        gbc.setState(0xcd55, 0xc327, 0xa640, 0x3c6a, 0xb08b, 0x9406, 0x1, 0x1);
        gbc.writeMem(0xcd55, { 0xe, 0x5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc327, gbc.sp());
        EXPECT(0xcd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcd55));
        EXPECT(0x5, gbc.readMem(0xcd56));
        // 0E 011A
        gbc.setState(0x44f4, 0x56a9, 0x84d0, 0xefb, 0x2895, 0xabc9, 0x1, 0x0);
        gbc.writeMem(0x44f4, { 0xe, 0xc7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x56a9, gbc.sp());
        EXPECT(0x44f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 011B
        gbc.setState(0x7f06, 0x45a, 0xfdc0, 0x4f4c, 0xe899, 0x9b38, 0x0, 0x0);
        gbc.writeMem(0x7f06, { 0xe, 0x59 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x45a, gbc.sp());
        EXPECT(0x7f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 011C
        gbc.setState(0xda9, 0xd4a2, 0xd800, 0x31f1, 0x528e, 0x67ed, 0x0, 0x0);
        gbc.writeMem(0xda9, { 0xe, 0xcc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd4a2, gbc.sp());
        EXPECT(0xdab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 011D
        gbc.setState(0x4870, 0x537e, 0x3500, 0x5fb, 0xc780, 0xcadc, 0x1, 0x0);
        gbc.writeMem(0x4870, { 0xe, 0xf0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x537e, gbc.sp());
        EXPECT(0x4872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 011E
        gbc.setState(0xc939, 0x6ece, 0x95d0, 0xd8b0, 0x54a7, 0x89b3, 0x1, 0x1);
        gbc.writeMem(0xc939, { 0xe, 0xf5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6ece, gbc.sp());
        EXPECT(0xc93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc939));
        EXPECT(0xf5, gbc.readMem(0xc93a));
        // 0E 011F
        gbc.setState(0x68e5, 0x9b27, 0xb030, 0x27d, 0x73b9, 0x1806, 0x0, 0x1);
        gbc.writeMem(0x68e5, { 0xe, 0x11 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9b27, gbc.sp());
        EXPECT(0x68e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0120
        gbc.setState(0x6307, 0xfe22, 0xb830, 0x7fd4, 0x555a, 0xfc83, 0x0, 0x1);
        gbc.writeMem(0x6307, { 0xe, 0x80 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfe22, gbc.sp());
        EXPECT(0x6309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0121
        gbc.setState(0x94bd, 0x9d7c, 0xb600, 0x3bfb, 0xf036, 0xb65e, 0x0, 0x0);
        gbc.writeMem(0x94bd, { 0xe, 0x53 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9d7c, gbc.sp());
        EXPECT(0x94bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x94bd));
        EXPECT(0x53, gbc.readMem(0x94be));
        // 0E 0122
        gbc.setState(0xbc9b, 0x683d, 0x7e10, 0x11e9, 0xcc8, 0x29f9, 0x1, 0x1);
        gbc.writeMem(0xbc9b, { 0xe, 0x24 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x683d, gbc.sp());
        EXPECT(0xbc9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbc9b));
        EXPECT(0x24, gbc.readMem(0xbc9c));
        // 0E 0123
        gbc.setState(0xc3b3, 0x14f4, 0xb30, 0x761d, 0xbdad, 0xf7aa, 0x0, 0x0);
        gbc.writeMem(0xc3b3, { 0xe, 0xe3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x14f4, gbc.sp());
        EXPECT(0xc3b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc3b3));
        EXPECT(0xe3, gbc.readMem(0xc3b4));
        // 0E 0124
        gbc.setState(0xa6b1, 0xd9c9, 0x2cc0, 0x73d6, 0x768e, 0xf99c, 0x1, 0x1);
        gbc.writeMem(0xa6b1, { 0xe, 0xa1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd9c9, gbc.sp());
        EXPECT(0xa6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa6b1));
        EXPECT(0xa1, gbc.readMem(0xa6b2));
        // 0E 0125
        gbc.setState(0x4e5a, 0x40cc, 0xd680, 0x2060, 0xbe3d, 0x1b56, 0x0, 0x1);
        gbc.writeMem(0x4e5a, { 0xe, 0x6d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x40cc, gbc.sp());
        EXPECT(0x4e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0126
        gbc.setState(0x936c, 0x9974, 0x9cd0, 0xffb5, 0x1d72, 0x917f, 0x1, 0x1);
        gbc.writeMem(0x936c, { 0xe, 0x75 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9974, gbc.sp());
        EXPECT(0x936e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x936c));
        EXPECT(0x75, gbc.readMem(0x936d));
        // 0E 0127
        gbc.setState(0x2142, 0xa086, 0x2080, 0x635b, 0x8b89, 0xcebf, 0x0, 0x0);
        gbc.writeMem(0x2142, { 0xe, 0x17 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa086, gbc.sp());
        EXPECT(0x2144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0128
        gbc.setState(0x3dcd, 0xbcc2, 0xeb50, 0x3c33, 0x2e0c, 0x59a7, 0x1, 0x0);
        gbc.writeMem(0x3dcd, { 0xe, 0xb5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbcc2, gbc.sp());
        EXPECT(0x3dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0129
        gbc.setState(0xe75a, 0xd6a0, 0x5200, 0xadb1, 0xd23d, 0x17a4, 0x0, 0x0);
        gbc.writeMem(0xe75a, { 0xe, 0xcc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd6a0, gbc.sp());
        EXPECT(0xe75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe75a));
        EXPECT(0xcc, gbc.readMem(0xe75b));
        // 0E 012A
        gbc.setState(0x76df, 0x182b, 0x4970, 0x636c, 0xa6e7, 0xe0ab, 0x1, 0x0);
        gbc.writeMem(0x76df, { 0xe, 0x6c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x182b, gbc.sp());
        EXPECT(0x76e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 012B
        gbc.setState(0x1ace, 0x5ecf, 0x1ca0, 0x37eb, 0x2f1a, 0xf5db, 0x0, 0x1);
        gbc.writeMem(0x1ace, { 0xe, 0x89 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5ecf, gbc.sp());
        EXPECT(0x1ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 012C
        gbc.setState(0x4d22, 0x9f05, 0xfd10, 0xfa7d, 0xe711, 0x38e5, 0x1, 0x1);
        gbc.writeMem(0x4d22, { 0xe, 0x38 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9f05, gbc.sp());
        EXPECT(0x4d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 012D
        gbc.setState(0x5b86, 0x874, 0xb960, 0x6ceb, 0xcf77, 0x8796, 0x0, 0x0);
        gbc.writeMem(0x5b86, { 0xe, 0x70 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x874, gbc.sp());
        EXPECT(0x5b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 012F
        gbc.setState(0xe96d, 0x4e7a, 0xe6e0, 0xa977, 0x25ea, 0x8e58, 0x0, 0x0);
        gbc.writeMem(0xe96d, { 0xe, 0x24 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4e7a, gbc.sp());
        EXPECT(0xe96f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe96d));
        EXPECT(0x24, gbc.readMem(0xe96e));
        // 0E 0130
        gbc.setState(0xedcf, 0x833a, 0x8f50, 0x102a, 0xcb61, 0xa7c1, 0x0, 0x1);
        gbc.writeMem(0xedcf, { 0xe, 0xa4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x833a, gbc.sp());
        EXPECT(0xedd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xedcf));
        EXPECT(0xa4, gbc.readMem(0xedd0));
        // 0E 0131
        gbc.setState(0x1c50, 0xc8ed, 0x5010, 0x7b04, 0xaa53, 0xdd27, 0x1, 0x0);
        gbc.writeMem(0x1c50, { 0xe, 0x52 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc8ed, gbc.sp());
        EXPECT(0x1c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0132
        gbc.setState(0x39cb, 0x4d2f, 0x160, 0x5362, 0xa234, 0x8c73, 0x1, 0x1);
        gbc.writeMem(0x39cb, { 0xe, 0x5a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4d2f, gbc.sp());
        EXPECT(0x39cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0133
        gbc.setState(0x544a, 0x5036, 0x27b0, 0xa140, 0xd329, 0xe631, 0x0, 0x1);
        gbc.writeMem(0x544a, { 0xe, 0x7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5036, gbc.sp());
        EXPECT(0x544c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0134
        gbc.setState(0x3164, 0xda37, 0xe210, 0xe4a4, 0xd2ee, 0xb24c, 0x1, 0x0);
        gbc.writeMem(0x3164, { 0xe, 0xeb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xda37, gbc.sp());
        EXPECT(0x3166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0135
        gbc.setState(0xc485, 0x31dc, 0xca30, 0x658b, 0xa95, 0x593e, 0x0, 0x1);
        gbc.writeMem(0xc485, { 0xe, 0x9e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x31dc, gbc.sp());
        EXPECT(0xc487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc485));
        EXPECT(0x9e, gbc.readMem(0xc486));
        // 0E 0136
        gbc.setState(0x6116, 0x2a7f, 0x4500, 0xb165, 0x39d0, 0x3798, 0x0, 0x1);
        gbc.writeMem(0x6116, { 0xe, 0x26 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2a7f, gbc.sp());
        EXPECT(0x6118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0137
        gbc.setState(0xfea, 0xfa28, 0x7150, 0x5e90, 0xcf91, 0x5074, 0x1, 0x0);
        gbc.writeMem(0xfea, { 0xe, 0xde });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfa28, gbc.sp());
        EXPECT(0xfec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0138
        gbc.setState(0x3389, 0x8c9a, 0x76f0, 0xc349, 0xd9ef, 0x9b1b, 0x1, 0x1);
        gbc.writeMem(0x3389, { 0xe, 0x38 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8c9a, gbc.sp());
        EXPECT(0x338b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0139
        gbc.setState(0x9468, 0xca7f, 0xa620, 0x4f12, 0x5ee6, 0xf4d5, 0x0, 0x0);
        gbc.writeMem(0x9468, { 0xe, 0xed });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xca7f, gbc.sp());
        EXPECT(0x946a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9468));
        EXPECT(0xed, gbc.readMem(0x9469));
        // 0E 013A
        gbc.setState(0x4501, 0x4d0f, 0x54a0, 0xd93f, 0x1c5f, 0x78d1, 0x0, 0x0);
        gbc.writeMem(0x4501, { 0xe, 0xa2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4d0f, gbc.sp());
        EXPECT(0x4503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 013B
        gbc.setState(0x66e0, 0xacd2, 0x46a0, 0xa70e, 0x3bc, 0xafb1, 0x0, 0x0);
        gbc.writeMem(0x66e0, { 0xe, 0x9d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xacd2, gbc.sp());
        EXPECT(0x66e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 013C
        gbc.setState(0x8c36, 0xa9d0, 0xbc90, 0x7ee4, 0x5007, 0x269a, 0x1, 0x1);
        gbc.writeMem(0x8c36, { 0xe, 0x99 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa9d0, gbc.sp());
        EXPECT(0x8c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8c36));
        EXPECT(0x99, gbc.readMem(0x8c37));
        // 0E 013D
        gbc.setState(0x6d51, 0xdfc2, 0x660, 0x72d1, 0x4df, 0x4581, 0x1, 0x1);
        gbc.writeMem(0x6d51, { 0xe, 0xdd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xdfc2, gbc.sp());
        EXPECT(0x6d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 013E
        gbc.setState(0x3311, 0xe4fb, 0xef80, 0xd630, 0x8023, 0x9b02, 0x0, 0x1);
        gbc.writeMem(0x3311, { 0xe, 0x1f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe4fb, gbc.sp());
        EXPECT(0x3313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0140
        gbc.setState(0x1a01, 0x852f, 0x2b80, 0x87a, 0xb1c9, 0xdcb9, 0x0, 0x0);
        gbc.writeMem(0x1a01, { 0xe, 0xfa });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x852f, gbc.sp());
        EXPECT(0x1a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0141
        gbc.setState(0x1d99, 0x7f32, 0x8840, 0x7c74, 0x226d, 0x15dc, 0x0, 0x0);
        gbc.writeMem(0x1d99, { 0xe, 0x39 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7f32, gbc.sp());
        EXPECT(0x1d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0142
        gbc.setState(0x9643, 0x6a6f, 0x89b0, 0x4e4c, 0xd77, 0x6913, 0x1, 0x1);
        gbc.writeMem(0x9643, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6a6f, gbc.sp());
        EXPECT(0x9645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9643));
        EXPECT(0xe6, gbc.readMem(0x9644));
        // 0E 0143
        gbc.setState(0x5a8c, 0x4075, 0xf640, 0xc44f, 0x3944, 0xc5cb, 0x1, 0x0);
        gbc.writeMem(0x5a8c, { 0xe, 0x8d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4075, gbc.sp());
        EXPECT(0x5a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0144
        gbc.setState(0x712d, 0xd817, 0x5cb0, 0x43ae, 0xa9f1, 0x3bf5, 0x1, 0x0);
        gbc.writeMem(0x712d, { 0xe, 0x8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd817, gbc.sp());
        EXPECT(0x712f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0145
        gbc.setState(0x8ec, 0xdaa2, 0xbac0, 0x9225, 0xa9ed, 0x761, 0x0, 0x1);
        gbc.writeMem(0x8ec, { 0xe, 0x1a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdaa2, gbc.sp());
        EXPECT(0x8ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0147
        gbc.setState(0x7f8d, 0x4b4c, 0x1620, 0x4c54, 0x535f, 0x543a, 0x1, 0x0);
        gbc.writeMem(0x7f8d, { 0xe, 0x98 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4b4c, gbc.sp());
        EXPECT(0x7f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0149
        gbc.setState(0x8169, 0x1958, 0x2280, 0x793, 0x814e, 0xe938, 0x1, 0x0);
        gbc.writeMem(0x8169, { 0xe, 0x7c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1958, gbc.sp());
        EXPECT(0x816b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8169));
        EXPECT(0x7c, gbc.readMem(0x816a));
        // 0E 014A
        gbc.setState(0xbe84, 0xa0d8, 0x2030, 0x9fbd, 0x1a3d, 0x5aeb, 0x0, 0x0);
        gbc.writeMem(0xbe84, { 0xe, 0x54 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa0d8, gbc.sp());
        EXPECT(0xbe86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbe84));
        EXPECT(0x54, gbc.readMem(0xbe85));
        // 0E 014B
        gbc.setState(0xadc8, 0x45d0, 0x23c0, 0xb90a, 0x60cc, 0x282, 0x0, 0x1);
        gbc.writeMem(0xadc8, { 0xe, 0xca });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x45d0, gbc.sp());
        EXPECT(0xadca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xadc8));
        EXPECT(0xca, gbc.readMem(0xadc9));
        // 0E 014C
        gbc.setState(0xc21a, 0xefdd, 0x3880, 0xa40f, 0x4b9a, 0x375, 0x1, 0x0);
        gbc.writeMem(0xc21a, { 0xe, 0x63 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xefdd, gbc.sp());
        EXPECT(0xc21c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc21a));
        EXPECT(0x63, gbc.readMem(0xc21b));
        // 0E 014D
        gbc.setState(0x3b10, 0x60b6, 0x88e0, 0xbd6b, 0x6e2a, 0xbf7e, 0x0, 0x1);
        gbc.writeMem(0x3b10, { 0xe, 0xed });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x60b6, gbc.sp());
        EXPECT(0x3b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 014E
        gbc.setState(0xa270, 0xe782, 0x1390, 0x5ec9, 0x2b8d, 0x2afe, 0x0, 0x1);
        gbc.writeMem(0xa270, { 0xe, 0x80 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe782, gbc.sp());
        EXPECT(0xa272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa270));
        EXPECT(0x80, gbc.readMem(0xa271));
        // 0E 014F
        gbc.setState(0x626f, 0x9b3a, 0xb260, 0x16b8, 0x128b, 0x3705, 0x1, 0x1);
        gbc.writeMem(0x626f, { 0xe, 0x30 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9b3a, gbc.sp());
        EXPECT(0x6271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0150
        gbc.setState(0x3c59, 0xac3c, 0xf5a0, 0x6d8c, 0x2453, 0xb7e1, 0x1, 0x0);
        gbc.writeMem(0x3c59, { 0xe, 0x42 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xac3c, gbc.sp());
        EXPECT(0x3c5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0151
        gbc.setState(0x26a8, 0xca35, 0x2f10, 0xd6be, 0xa751, 0x2c49, 0x0, 0x1);
        gbc.writeMem(0x26a8, { 0xe, 0xef });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xca35, gbc.sp());
        EXPECT(0x26aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0152
        gbc.setState(0x3d02, 0xc315, 0xe320, 0x594e, 0xaabb, 0x8aeb, 0x1, 0x0);
        gbc.writeMem(0x3d02, { 0xe, 0xe });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc315, gbc.sp());
        EXPECT(0x3d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0153
        gbc.setState(0xcf21, 0xd43d, 0x5c50, 0x18cf, 0x856a, 0xc058, 0x0, 0x1);
        gbc.writeMem(0xcf21, { 0xe, 0x66 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd43d, gbc.sp());
        EXPECT(0xcf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcf21));
        EXPECT(0x66, gbc.readMem(0xcf22));
        // 0E 0154
        gbc.setState(0x7d77, 0xc614, 0xa220, 0xbccc, 0x9fdb, 0xae23, 0x0, 0x1);
        gbc.writeMem(0x7d77, { 0xe, 0x71 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc614, gbc.sp());
        EXPECT(0x7d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0155
        gbc.setState(0x607c, 0x27e5, 0x10b0, 0x592c, 0x6985, 0x9704, 0x0, 0x1);
        gbc.writeMem(0x607c, { 0xe, 0xc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x27e5, gbc.sp());
        EXPECT(0x607e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0156
        gbc.setState(0xc75, 0x211a, 0xb980, 0x9660, 0x657d, 0xcc9b, 0x0, 0x1);
        gbc.writeMem(0xc75, { 0xe, 0x6f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x211a, gbc.sp());
        EXPECT(0xc77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0157
        gbc.setState(0x9cce, 0x8bc7, 0x4f0, 0xb89e, 0x232e, 0x2140, 0x0, 0x0);
        gbc.writeMem(0x9cce, { 0xe, 0x3f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8bc7, gbc.sp());
        EXPECT(0x9cd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9cce));
        EXPECT(0x3f, gbc.readMem(0x9ccf));
        // 0E 0158
        gbc.setState(0x1cd8, 0x5675, 0x8e70, 0x5998, 0x199e, 0x12c1, 0x0, 0x1);
        gbc.writeMem(0x1cd8, { 0xe, 0x4e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5675, gbc.sp());
        EXPECT(0x1cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0159
        gbc.setState(0xd07, 0x6f2, 0xf730, 0x1027, 0x268f, 0x62aa, 0x1, 0x0);
        gbc.writeMem(0xd07, { 0xe, 0x3c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6f2, gbc.sp());
        EXPECT(0xd09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 015A
        gbc.setState(0xe725, 0x2450, 0xc1d0, 0xafcb, 0x5c90, 0x1ce0, 0x0, 0x0);
        gbc.writeMem(0xe725, { 0xe, 0x90 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2450, gbc.sp());
        EXPECT(0xe727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe725));
        EXPECT(0x90, gbc.readMem(0xe726));
        // 0E 015B
        gbc.setState(0xa04b, 0xc892, 0xc960, 0x4d02, 0x8e93, 0x750d, 0x1, 0x1);
        gbc.writeMem(0xa04b, { 0xe, 0x30 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc892, gbc.sp());
        EXPECT(0xa04d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa04b));
        EXPECT(0x30, gbc.readMem(0xa04c));
        // 0E 015C
        gbc.setState(0x7858, 0xd028, 0xe170, 0x5c13, 0xeaa1, 0xb620, 0x0, 0x1);
        gbc.writeMem(0x7858, { 0xe, 0x69 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd028, gbc.sp());
        EXPECT(0x785a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 015D
        gbc.setState(0x78d1, 0x71a3, 0x84a0, 0xd23e, 0x36ce, 0xa3f1, 0x1, 0x1);
        gbc.writeMem(0x78d1, { 0xe, 0xf1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x71a3, gbc.sp());
        EXPECT(0x78d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 015E
        gbc.setState(0x6b96, 0x6b59, 0x4740, 0xd97f, 0x8b55, 0xa2bc, 0x0, 0x0);
        gbc.writeMem(0x6b96, { 0xe, 0xe1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6b59, gbc.sp());
        EXPECT(0x6b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 015F
        gbc.setState(0xb86f, 0x9797, 0xbb50, 0x262d, 0x436b, 0x8f36, 0x1, 0x1);
        gbc.writeMem(0xb86f, { 0xe, 0xc5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9797, gbc.sp());
        EXPECT(0xb871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb86f));
        EXPECT(0xc5, gbc.readMem(0xb870));
        // 0E 0160
        gbc.setState(0xd83d, 0xc681, 0x73b0, 0x6f69, 0xf822, 0x63b0, 0x1, 0x0);
        gbc.writeMem(0xd83d, { 0xe, 0xd5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc681, gbc.sp());
        EXPECT(0xd83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd83d));
        EXPECT(0xd5, gbc.readMem(0xd83e));
        // 0E 0161
        gbc.setState(0x9c82, 0xa9d6, 0xcfc0, 0xf0da, 0x67a6, 0xfd7c, 0x0, 0x0);
        gbc.writeMem(0x9c82, { 0xe, 0x85 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa9d6, gbc.sp());
        EXPECT(0x9c84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9c82));
        EXPECT(0x85, gbc.readMem(0x9c83));
        // 0E 0162
        gbc.setState(0x5eb4, 0x8621, 0xd890, 0x391e, 0x9159, 0x197, 0x1, 0x0);
        gbc.writeMem(0x5eb4, { 0xe, 0x34 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8621, gbc.sp());
        EXPECT(0x5eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0163
        gbc.setState(0x83a4, 0xea0e, 0x5570, 0x81b5, 0xc979, 0x5181, 0x1, 0x0);
        gbc.writeMem(0x83a4, { 0xe, 0x8f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xea0e, gbc.sp());
        EXPECT(0x83a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x83a4));
        EXPECT(0x8f, gbc.readMem(0x83a5));
        // 0E 0164
        gbc.setState(0xa316, 0x7dfa, 0x7160, 0xcf8e, 0xefe3, 0xf04c, 0x0, 0x1);
        gbc.writeMem(0xa316, { 0xe, 0xbd });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7dfa, gbc.sp());
        EXPECT(0xa318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa316));
        EXPECT(0xbd, gbc.readMem(0xa317));
        // 0E 0165
        gbc.setState(0xba35, 0x3cad, 0xa320, 0x7b9f, 0xc5c7, 0x2caa, 0x0, 0x0);
        gbc.writeMem(0xba35, { 0xe, 0xb6 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3cad, gbc.sp());
        EXPECT(0xba37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xba35));
        EXPECT(0xb6, gbc.readMem(0xba36));
        // 0E 0166
        gbc.setState(0xda7d, 0x6cf8, 0x45a0, 0xfe04, 0x9fb7, 0xe429, 0x1, 0x0);
        gbc.writeMem(0xda7d, { 0xe, 0x11 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6cf8, gbc.sp());
        EXPECT(0xda7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xda7d));
        EXPECT(0x11, gbc.readMem(0xda7e));
        // 0E 0167
        gbc.setState(0x8d9b, 0x1d4b, 0xebf0, 0x6cd3, 0x4d74, 0xbf95, 0x0, 0x1);
        gbc.writeMem(0x8d9b, { 0xe, 0xab });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1d4b, gbc.sp());
        EXPECT(0x8d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8d9b));
        EXPECT(0xab, gbc.readMem(0x8d9c));
        // 0E 0168
        gbc.setState(0xe5a6, 0xab51, 0xc540, 0xcfd0, 0x3c5e, 0x76bc, 0x1, 0x0);
        gbc.writeMem(0xe5a6, { 0xe, 0xfd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xab51, gbc.sp());
        EXPECT(0xe5a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe5a6));
        EXPECT(0xfd, gbc.readMem(0xe5a7));
        // 0E 016A
        gbc.setState(0xda69, 0x50a9, 0x4630, 0x32cb, 0xe0d3, 0x17cd, 0x0, 0x1);
        gbc.writeMem(0xda69, { 0xe, 0x2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x50a9, gbc.sp());
        EXPECT(0xda6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xda69));
        EXPECT(0x2, gbc.readMem(0xda6a));
        // 0E 016B
        gbc.setState(0x884f, 0xf5eb, 0xd4b0, 0x1484, 0xf708, 0x9207, 0x1, 0x1);
        gbc.writeMem(0x884f, { 0xe, 0xc4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf5eb, gbc.sp());
        EXPECT(0x8851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x884f));
        EXPECT(0xc4, gbc.readMem(0x8850));
        // 0E 016C
        gbc.setState(0x3149, 0xd04b, 0x10c0, 0x9983, 0x572a, 0xe6b1, 0x1, 0x1);
        gbc.writeMem(0x3149, { 0xe, 0x18 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd04b, gbc.sp());
        EXPECT(0x314b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 016D
        gbc.setState(0x424f, 0x8be4, 0x65c0, 0xe028, 0xa432, 0x883f, 0x1, 0x1);
        gbc.writeMem(0x424f, { 0xe, 0x62 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8be4, gbc.sp());
        EXPECT(0x4251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 016E
        gbc.setState(0x2e37, 0xb684, 0x7cb0, 0x15d, 0xe2d3, 0xa343, 0x1, 0x0);
        gbc.writeMem(0x2e37, { 0xe, 0xcd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb684, gbc.sp());
        EXPECT(0x2e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 016F
        gbc.setState(0xe269, 0x96d7, 0xd070, 0xae1d, 0x32a8, 0xf16d, 0x1, 0x1);
        gbc.writeMem(0xe269, { 0xe, 0x6b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x96d7, gbc.sp());
        EXPECT(0xe26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe269));
        EXPECT(0x6b, gbc.readMem(0xe26a));
        // 0E 0170
        gbc.setState(0x635c, 0xe32f, 0xc7c0, 0x478a, 0x8826, 0x1473, 0x0, 0x0);
        gbc.writeMem(0x635c, { 0xe, 0x88 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe32f, gbc.sp());
        EXPECT(0x635e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0171
        gbc.setState(0x8796, 0x6b98, 0x1840, 0xcfa5, 0x86d6, 0xc55, 0x0, 0x0);
        gbc.writeMem(0x8796, { 0xe, 0x1c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6b98, gbc.sp());
        EXPECT(0x8798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8796));
        EXPECT(0x1c, gbc.readMem(0x8797));
        // 0E 0172
        gbc.setState(0x3f51, 0xa7a4, 0xb900, 0xf39a, 0x584f, 0x5d0f, 0x1, 0x0);
        gbc.writeMem(0x3f51, { 0xe, 0x21 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa7a4, gbc.sp());
        EXPECT(0x3f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0173
        gbc.setState(0x9710, 0x60ce, 0x3b00, 0xd7e3, 0x3a9d, 0x867c, 0x0, 0x0);
        gbc.writeMem(0x9710, { 0xe, 0x6e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x60ce, gbc.sp());
        EXPECT(0x9712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9710));
        EXPECT(0x6e, gbc.readMem(0x9711));
        // 0E 0174
        gbc.setState(0xa07a, 0xd619, 0x1dd0, 0x9a5, 0x1bcc, 0x4e88, 0x0, 0x0);
        gbc.writeMem(0xa07a, { 0xe, 0xc1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd619, gbc.sp());
        EXPECT(0xa07c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa07a));
        EXPECT(0xc1, gbc.readMem(0xa07b));
        // 0E 0176
        gbc.setState(0x91cb, 0x2d83, 0x2d0, 0x75f7, 0xb903, 0x72c5, 0x0, 0x1);
        gbc.writeMem(0x91cb, { 0xe, 0x70 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2d83, gbc.sp());
        EXPECT(0x91cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x91cb));
        EXPECT(0x70, gbc.readMem(0x91cc));
        // 0E 0177
        gbc.setState(0x829, 0x8256, 0x9b50, 0x1d70, 0x20e3, 0x2b6b, 0x1, 0x1);
        gbc.writeMem(0x829, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8256, gbc.sp());
        EXPECT(0x82b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0178
        gbc.setState(0xc334, 0x419c, 0x15f0, 0x43b3, 0x2ba5, 0x637, 0x0, 0x1);
        gbc.writeMem(0xc334, { 0xe, 0xd1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x419c, gbc.sp());
        EXPECT(0xc336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc334));
        EXPECT(0xd1, gbc.readMem(0xc335));
        // 0E 0179
        gbc.setState(0xb20d, 0xfbe2, 0x830, 0x13b0, 0xb5b5, 0x7369, 0x0, 0x1);
        gbc.writeMem(0xb20d, { 0xe, 0xb9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfbe2, gbc.sp());
        EXPECT(0xb20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb20d));
        EXPECT(0xb9, gbc.readMem(0xb20e));
        // 0E 017A
        gbc.setState(0x63f3, 0x1766, 0x9340, 0xf836, 0xb83a, 0xc471, 0x0, 0x1);
        gbc.writeMem(0x63f3, { 0xe, 0xb0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1766, gbc.sp());
        EXPECT(0x63f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 017B
        gbc.setState(0xcf4, 0xc622, 0x5680, 0xb81d, 0x3c66, 0xf108, 0x1, 0x0);
        gbc.writeMem(0xcf4, { 0xe, 0x97 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc622, gbc.sp());
        EXPECT(0xcf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 017C
        gbc.setState(0x8c9a, 0x2e74, 0x1820, 0x8cc1, 0xd77e, 0xdd78, 0x1, 0x1);
        gbc.writeMem(0x8c9a, { 0xe, 0x3d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2e74, gbc.sp());
        EXPECT(0x8c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8c9a));
        EXPECT(0x3d, gbc.readMem(0x8c9b));
        // 0E 017D
        gbc.setState(0x3989, 0x8d69, 0xb530, 0x6acb, 0x613, 0x4d4, 0x1, 0x0);
        gbc.writeMem(0x3989, { 0xe, 0xc8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8d69, gbc.sp());
        EXPECT(0x398b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 017E
        gbc.setState(0xcb78, 0xdc78, 0x9f90, 0xacc2, 0x518e, 0x7182, 0x1, 0x1);
        gbc.writeMem(0xcb78, { 0xe, 0x97 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdc78, gbc.sp());
        EXPECT(0xcb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcb78));
        EXPECT(0x97, gbc.readMem(0xcb79));
        // 0E 017F
        gbc.setState(0x3bef, 0x861d, 0xb330, 0xe5b5, 0x276a, 0xe3a4, 0x1, 0x0);
        gbc.writeMem(0x3bef, { 0xe, 0xf3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x861d, gbc.sp());
        EXPECT(0x3bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0180
        gbc.setState(0x17f4, 0x64d1, 0xe50, 0xdd7e, 0x16a8, 0xa078, 0x0, 0x0);
        gbc.writeMem(0x17f4, { 0xe, 0xd4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x64d1, gbc.sp());
        EXPECT(0x17f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0181
        gbc.setState(0x112a, 0x3549, 0xadb0, 0xf9af, 0xafe9, 0x5bf8, 0x1, 0x0);
        gbc.writeMem(0x112a, { 0xe, 0xa5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3549, gbc.sp());
        EXPECT(0x112c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0182
        gbc.setState(0xd797, 0xa6de, 0x7ab0, 0x410d, 0x8b1b, 0x4b44, 0x1, 0x1);
        gbc.writeMem(0xd797, { 0xe, 0x6a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa6de, gbc.sp());
        EXPECT(0xd799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd797));
        EXPECT(0x6a, gbc.readMem(0xd798));
        // 0E 0183
        gbc.setState(0x81e9, 0xcefa, 0x2ae0, 0x638b, 0x5d1d, 0xb3da, 0x1, 0x1);
        gbc.writeMem(0x81e9, { 0xe, 0xc8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcefa, gbc.sp());
        EXPECT(0x81eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x81e9));
        EXPECT(0xc8, gbc.readMem(0x81ea));
        // 0E 0184
        gbc.setState(0xa63f, 0x37f2, 0xa1c0, 0x498d, 0x3680, 0x9bce, 0x0, 0x0);
        gbc.writeMem(0xa63f, { 0xe, 0x5d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x37f2, gbc.sp());
        EXPECT(0xa641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa63f));
        EXPECT(0x5d, gbc.readMem(0xa640));
        // 0E 0185
        gbc.setState(0x2ee8, 0x8f29, 0x6e50, 0x9692, 0x4c46, 0x9741, 0x1, 0x1);
        gbc.writeMem(0x2ee8, { 0xe, 0x4a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8f29, gbc.sp());
        EXPECT(0x2eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0186
        gbc.setState(0x17e0, 0x57fe, 0x8b70, 0x1866, 0xba36, 0x19b6, 0x0, 0x0);
        gbc.writeMem(0x17e0, { 0xe, 0x7f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x57fe, gbc.sp());
        EXPECT(0x17e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0187
        gbc.setState(0x13b6, 0x52be, 0x1b50, 0x7a8f, 0xdf4d, 0x66d4, 0x0, 0x1);
        gbc.writeMem(0x13b6, { 0xe, 0xd5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x52be, gbc.sp());
        EXPECT(0x13b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0188
        gbc.setState(0xa0ca, 0x3ffb, 0x4450, 0xbc15, 0x85e0, 0xb6, 0x1, 0x0);
        gbc.writeMem(0xa0ca, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3ffb, gbc.sp());
        EXPECT(0xa0cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa0ca));
        EXPECT(0xe9, gbc.readMem(0xa0cb));
        // 0E 0189
        gbc.setState(0x699d, 0xe631, 0xd4b0, 0xe99f, 0xe517, 0x9d4f, 0x0, 0x0);
        gbc.writeMem(0x699d, { 0xe, 0x1a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe631, gbc.sp());
        EXPECT(0x699f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 018A
        gbc.setState(0xcdd1, 0xc136, 0x65b0, 0x513, 0xb359, 0xfa5, 0x1, 0x1);
        gbc.writeMem(0xcdd1, { 0xe, 0x64 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc136, gbc.sp());
        EXPECT(0xcdd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcdd1));
        EXPECT(0x64, gbc.readMem(0xcdd2));
        // 0E 018B
        gbc.setState(0x7daf, 0x70c7, 0xbe00, 0x5879, 0xe032, 0xfcca, 0x1, 0x1);
        gbc.writeMem(0x7daf, { 0xe, 0xb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x70c7, gbc.sp());
        EXPECT(0x7db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 018C
        gbc.setState(0x5ca0, 0xcf9a, 0xaca0, 0xb934, 0x18c, 0x9432, 0x0, 0x1);
        gbc.writeMem(0x5ca0, { 0xe, 0x3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcf9a, gbc.sp());
        EXPECT(0x5ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 018D
        gbc.setState(0xb225, 0xa600, 0x9ec0, 0x1e30, 0xa810, 0x28fa, 0x0, 0x1);
        gbc.writeMem(0xb225, { 0xe, 0xad });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa600, gbc.sp());
        EXPECT(0xb227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb225));
        EXPECT(0xad, gbc.readMem(0xb226));
        // 0E 018E
        gbc.setState(0xe473, 0xcc4c, 0x3800, 0xcb7d, 0xf5e6, 0x6de3, 0x1, 0x0);
        gbc.writeMem(0xe473, { 0xe, 0xa6 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcc4c, gbc.sp());
        EXPECT(0xe475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe473));
        EXPECT(0xa6, gbc.readMem(0xe474));
        // 0E 018F
        gbc.setState(0xeb12, 0x5751, 0x3f30, 0x650b, 0x872b, 0xe8cd, 0x0, 0x0);
        gbc.writeMem(0xeb12, { 0xe, 0x8f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5751, gbc.sp());
        EXPECT(0xeb14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xeb12));
        EXPECT(0x8f, gbc.readMem(0xeb13));
        // 0E 0190
        gbc.setState(0x8d66, 0x5d95, 0x57d0, 0x2651, 0x615b, 0x1d, 0x0, 0x1);
        gbc.writeMem(0x8d66, { 0xe, 0x8f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5d95, gbc.sp());
        EXPECT(0x8d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8d66));
        EXPECT(0x8f, gbc.readMem(0x8d67));
        // 0E 0191
        gbc.setState(0xbbbc, 0x80a8, 0xecb0, 0x6e85, 0x65fa, 0x3a5, 0x0, 0x0);
        gbc.writeMem(0xbbbc, { 0xe, 0x2b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x80a8, gbc.sp());
        EXPECT(0xbbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbbbc));
        EXPECT(0x2b, gbc.readMem(0xbbbd));
        // 0E 0192
        gbc.setState(0x62db, 0xb73e, 0x49b0, 0x5706, 0x37c8, 0x9d9c, 0x0, 0x1);
        gbc.writeMem(0x62db, { 0xe, 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb73e, gbc.sp());
        EXPECT(0x62dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0193
        gbc.setState(0x84ed, 0x7898, 0xf360, 0xad50, 0x6581, 0xb9c1, 0x1, 0x0);
        gbc.writeMem(0x84ed, { 0xe, 0xd4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7898, gbc.sp());
        EXPECT(0x84ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x84ed));
        EXPECT(0xd4, gbc.readMem(0x84ee));
        // 0E 0194
        gbc.setState(0x5f1e, 0xa3a2, 0xda40, 0xb5f6, 0x437c, 0xfcdb, 0x1, 0x0);
        gbc.writeMem(0x5f1e, { 0xe, 0x5b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa3a2, gbc.sp());
        EXPECT(0x5f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0195
        gbc.setState(0x8e44, 0x5217, 0x4e60, 0x8e73, 0x93a4, 0x7100, 0x0, 0x1);
        gbc.writeMem(0x8e44, { 0xe, 0xf1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5217, gbc.sp());
        EXPECT(0x8e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8e44));
        EXPECT(0xf1, gbc.readMem(0x8e45));
        // 0E 0196
        gbc.setState(0x72dd, 0xcabf, 0xc9b0, 0x59a0, 0x5b77, 0xa298, 0x0, 0x0);
        gbc.writeMem(0x72dd, { 0xe, 0x76 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcabf, gbc.sp());
        EXPECT(0x72df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0197
        gbc.setState(0xb519, 0xe337, 0xd1c0, 0x551c, 0xec50, 0x386c, 0x1, 0x1);
        gbc.writeMem(0xb519, { 0xe, 0x38 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe337, gbc.sp());
        EXPECT(0xb51b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb519));
        EXPECT(0x38, gbc.readMem(0xb51a));
        // 0E 0198
        gbc.setState(0xb5fe, 0x26c2, 0xbea0, 0xc610, 0x97a2, 0xaf63, 0x1, 0x1);
        gbc.writeMem(0xb5fe, { 0xe, 0x8e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x26c2, gbc.sp());
        EXPECT(0xb600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb5fe));
        EXPECT(0x8e, gbc.readMem(0xb5ff));
        // 0E 0199
        gbc.setState(0x247e, 0x92b4, 0x5d90, 0x42f8, 0xfb69, 0x4228, 0x0, 0x1);
        gbc.writeMem(0x247e, { 0xe, 0x51 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x92b4, gbc.sp());
        EXPECT(0x2480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 019A
        gbc.setState(0x193d, 0xe706, 0x37a0, 0xeff6, 0x5303, 0x8791, 0x1, 0x0);
        gbc.writeMem(0x193d, { 0xe, 0xc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe706, gbc.sp());
        EXPECT(0x193f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 019B
        gbc.setState(0x50b0, 0xec54, 0x19b0, 0x9ada, 0x23db, 0x6062, 0x1, 0x0);
        gbc.writeMem(0x50b0, { 0xe, 0xec });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xec54, gbc.sp());
        EXPECT(0x50b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 019C
        gbc.setState(0x6b23, 0x1f84, 0xb0d0, 0x860, 0x4c77, 0x4a85, 0x1, 0x1);
        gbc.writeMem(0x6b23, { 0xe, 0x3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1f84, gbc.sp());
        EXPECT(0x6b25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 019D
        gbc.setState(0x38ad, 0xb88a, 0xc5c0, 0x5a49, 0xefab, 0xcc20, 0x1, 0x1);
        gbc.writeMem(0x38ad, { 0xe, 0xdf });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb88a, gbc.sp());
        EXPECT(0x38af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 019E
        gbc.setState(0x42ae, 0xd27c, 0x96f0, 0x9edf, 0x6999, 0x4270, 0x1, 0x1);
        gbc.writeMem(0x42ae, { 0xe, 0xf0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd27c, gbc.sp());
        EXPECT(0x42b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 019F
        gbc.setState(0x2187, 0xad15, 0xf660, 0x30f1, 0x1ba8, 0x5bd2, 0x1, 0x0);
        gbc.writeMem(0x2187, { 0xe, 0x3c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xad15, gbc.sp());
        EXPECT(0x2189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01A0
        gbc.setState(0xce02, 0x91ff, 0x8500, 0x6295, 0xa85, 0xe83, 0x1, 0x1);
        gbc.writeMem(0xce02, { 0xe, 0xa6 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x91ff, gbc.sp());
        EXPECT(0xce04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xce02));
        EXPECT(0xa6, gbc.readMem(0xce03));
        // 0E 01A2
        gbc.setState(0xc40a, 0x2692, 0xe800, 0x67d6, 0xf23e, 0xbb9, 0x0, 0x0);
        gbc.writeMem(0xc40a, { 0xe, 0x70 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2692, gbc.sp());
        EXPECT(0xc40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc40a));
        EXPECT(0x70, gbc.readMem(0xc40b));
        // 0E 01A3
        gbc.setState(0xc127, 0xe7db, 0xbca0, 0xd7bd, 0x6cf2, 0x3a9e, 0x1, 0x0);
        gbc.writeMem(0xc127, { 0xe, 0xa0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe7db, gbc.sp());
        EXPECT(0xc129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc127));
        EXPECT(0xa0, gbc.readMem(0xc128));
        // 0E 01A4
        gbc.setState(0x5a13, 0x1134, 0xb8a0, 0x4a03, 0xdf20, 0xd9af, 0x1, 0x1);
        gbc.writeMem(0x5a13, { 0xe, 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1134, gbc.sp());
        EXPECT(0x5a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01A5
        gbc.setState(0x4499, 0xe7, 0xe4c0, 0xf92c, 0x550d, 0x473e, 0x0, 0x1);
        gbc.writeMem(0x4499, { 0xe, 0xb3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe7, gbc.sp());
        EXPECT(0x449b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01A6
        gbc.setState(0x8812, 0x77b6, 0xc300, 0xb18, 0xef20, 0x7f5a, 0x0, 0x1);
        gbc.writeMem(0x8812, { 0xe, 0x36 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x77b6, gbc.sp());
        EXPECT(0x8814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8812));
        EXPECT(0x36, gbc.readMem(0x8813));
        // 0E 01A7
        gbc.setState(0xbb44, 0x5126, 0x9860, 0xce75, 0x1013, 0x8418, 0x0, 0x0);
        gbc.writeMem(0xbb44, { 0xe, 0x8e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5126, gbc.sp());
        EXPECT(0xbb46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbb44));
        EXPECT(0x8e, gbc.readMem(0xbb45));
        // 0E 01A8
        gbc.setState(0x9964, 0xa714, 0x59d0, 0x6025, 0xcea7, 0x9835, 0x1, 0x0);
        gbc.writeMem(0x9964, { 0xe, 0x86 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa714, gbc.sp());
        EXPECT(0x9966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9964));
        EXPECT(0x86, gbc.readMem(0x9965));
        // 0E 01A9
        gbc.setState(0x3006, 0x4b0f, 0x11b0, 0x70a2, 0x97d5, 0xb1f7, 0x0, 0x1);
        gbc.writeMem(0x3006, { 0xe, 0x43 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4b0f, gbc.sp());
        EXPECT(0x3008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01AA
        gbc.setState(0x86cf, 0xd8f, 0x6bc0, 0xbf07, 0xd7ab, 0x9b42, 0x0, 0x1);
        gbc.writeMem(0x86cf, { 0xe, 0x1e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd8f, gbc.sp());
        EXPECT(0x86d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x86cf));
        EXPECT(0x1e, gbc.readMem(0x86d0));
        // 0E 01AB
        gbc.setState(0xe2e1, 0x9049, 0x8fa0, 0x7bd1, 0xa18d, 0x75b6, 0x0, 0x1);
        gbc.writeMem(0xe2e1, { 0xe, 0xca });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9049, gbc.sp());
        EXPECT(0xe2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe2e1));
        EXPECT(0xca, gbc.readMem(0xe2e2));
        // 0E 01AC
        gbc.setState(0xe468, 0x86b2, 0xe260, 0xa7f3, 0xb9b7, 0x40ea, 0x1, 0x1);
        gbc.writeMem(0xe468, { 0xe, 0x5f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x86b2, gbc.sp());
        EXPECT(0xe46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe468));
        EXPECT(0x5f, gbc.readMem(0xe469));
        // 0E 01AD
        gbc.setState(0xdb60, 0x5ebf, 0x6050, 0x775c, 0xfe0f, 0x25cb, 0x1, 0x1);
        gbc.writeMem(0xdb60, { 0xe, 0xff });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5ebf, gbc.sp());
        EXPECT(0xdb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdb60));
        EXPECT(0xff, gbc.readMem(0xdb61));
        // 0E 01AE
        gbc.setState(0x8299, 0xdbf9, 0x5f00, 0x8d0b, 0x18a6, 0xdcc8, 0x1, 0x0);
        gbc.writeMem(0x8299, { 0xe, 0xcb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdbf9, gbc.sp());
        EXPECT(0x829b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8299));
        EXPECT(0xcb, gbc.readMem(0x829a));
        // 0E 01AF
        gbc.setState(0xbfec, 0x85d0, 0xb590, 0x3649, 0x4221, 0xef41, 0x0, 0x0);
        gbc.writeMem(0xbfec, { 0xe, 0x93 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x85d0, gbc.sp());
        EXPECT(0xbfee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbfec));
        EXPECT(0x93, gbc.readMem(0xbfed));
        // 0E 01B0
        gbc.setState(0xb5e7, 0x68ac, 0xd830, 0x5a10, 0xc5f8, 0x170, 0x0, 0x1);
        gbc.writeMem(0xb5e7, { 0xe, 0x27 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x68ac, gbc.sp());
        EXPECT(0xb5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb5e7));
        EXPECT(0x27, gbc.readMem(0xb5e8));
        // 0E 01B1
        gbc.setState(0xc2e7, 0xdb4c, 0x4bf0, 0xc0a, 0xade, 0x7b79, 0x0, 0x1);
        gbc.writeMem(0xc2e7, { 0xe, 0x62 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdb4c, gbc.sp());
        EXPECT(0xc2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc2e7));
        EXPECT(0x62, gbc.readMem(0xc2e8));
        // 0E 01B2
        gbc.setState(0x31e4, 0xe660, 0x4b70, 0x8f96, 0x803b, 0xcad9, 0x1, 0x0);
        gbc.writeMem(0x31e4, { 0xe, 0xce });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe660, gbc.sp());
        EXPECT(0x31e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01B3
        gbc.setState(0x6ec5, 0x5302, 0xe180, 0xf50f, 0x9cb7, 0x4998, 0x1, 0x0);
        gbc.writeMem(0x6ec5, { 0xe, 0x15 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5302, gbc.sp());
        EXPECT(0x6ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01B4
        gbc.setState(0x84df, 0xf848, 0xb650, 0x5105, 0xb3ab, 0x60fe, 0x0, 0x1);
        gbc.writeMem(0x84df, { 0xe, 0x35 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf848, gbc.sp());
        EXPECT(0x84e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x84df));
        EXPECT(0x35, gbc.readMem(0x84e0));
        // 0E 01B5
        gbc.setState(0x3427, 0x4864, 0x3fe0, 0xfeef, 0x851a, 0x6609, 0x0, 0x1);
        gbc.writeMem(0x3427, { 0xe, 0x15 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4864, gbc.sp());
        EXPECT(0x3429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01B6
        gbc.setState(0x1751, 0xdf40, 0x3980, 0xad55, 0xdcc0, 0x3e69, 0x1, 0x1);
        gbc.writeMem(0x1751, { 0xe, 0x23 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdf40, gbc.sp());
        EXPECT(0x1753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01B8
        gbc.setState(0x796b, 0x2ddb, 0xf350, 0xcbc4, 0x68cc, 0x6009, 0x0, 0x1);
        gbc.writeMem(0x796b, { 0xe, 0xe2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2ddb, gbc.sp());
        EXPECT(0x796d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01B9
        gbc.setState(0xd169, 0x5d96, 0x1870, 0x1eb3, 0xf5fe, 0x7723, 0x0, 0x1);
        gbc.writeMem(0xd169, { 0xe, 0xd3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5d96, gbc.sp());
        EXPECT(0xd16b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd169));
        EXPECT(0xd3, gbc.readMem(0xd16a));
        // 0E 01BA
        gbc.setState(0x7152, 0xc623, 0xaf00, 0xe8c3, 0x216c, 0xa630, 0x0, 0x1);
        gbc.writeMem(0x7152, { 0xe, 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc623, gbc.sp());
        EXPECT(0x7154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01BB
        gbc.setState(0x1793, 0xa1c0, 0xf290, 0xcf37, 0x7763, 0x724d, 0x1, 0x0);
        gbc.writeMem(0x1793, { 0xe, 0x3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa1c0, gbc.sp());
        EXPECT(0x1795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01BC
        gbc.setState(0xa7ad, 0x82de, 0x3b10, 0xa913, 0x14a3, 0x5254, 0x0, 0x1);
        gbc.writeMem(0xa7ad, { 0xe, 0xae });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x82de, gbc.sp());
        EXPECT(0xa7af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa7ad));
        EXPECT(0xae, gbc.readMem(0xa7ae));
        // 0E 01BD
        gbc.setState(0xca8f, 0xb265, 0x6a10, 0x769c, 0x326c, 0x1dcf, 0x0, 0x1);
        gbc.writeMem(0xca8f, { 0xe, 0x57 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb265, gbc.sp());
        EXPECT(0xca91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xca8f));
        EXPECT(0x57, gbc.readMem(0xca90));
        // 0E 01BF
        gbc.setState(0xcf2b, 0xd44f, 0xa880, 0x73fe, 0x17cc, 0x8fb6, 0x0, 0x0);
        gbc.writeMem(0xcf2b, { 0xe, 0x49 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd44f, gbc.sp());
        EXPECT(0xcf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcf2b));
        EXPECT(0x49, gbc.readMem(0xcf2c));
        // 0E 01C0
        gbc.setState(0x1ae2, 0xbebf, 0xf930, 0xe7ff, 0x33f3, 0x398f, 0x0, 0x1);
        gbc.writeMem(0x1ae2, { 0xe, 0x7e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbebf, gbc.sp());
        EXPECT(0x1ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01C1
        gbc.setState(0x3376, 0xe31b, 0x7060, 0xfa0e, 0x2f07, 0xf710, 0x1, 0x0);
        gbc.writeMem(0x3376, { 0xe, 0x72 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe31b, gbc.sp());
        EXPECT(0x3378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01C2
        gbc.setState(0x7872, 0x8078, 0x29e0, 0x1c6a, 0xd9dc, 0xdeb7, 0x0, 0x0);
        gbc.writeMem(0x7872, { 0xe, 0xc9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8078, gbc.sp());
        EXPECT(0x7874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01C3
        gbc.setState(0xd8e4, 0x2241, 0xcf30, 0xa25d, 0x44c5, 0x2719, 0x1, 0x1);
        gbc.writeMem(0xd8e4, { 0xe, 0xd0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2241, gbc.sp());
        EXPECT(0xd8e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd8e4));
        EXPECT(0xd0, gbc.readMem(0xd8e5));
        // 0E 01C4
        gbc.setState(0x5478, 0x80e2, 0x49b0, 0x6a8b, 0xe22c, 0xf9a, 0x0, 0x1);
        gbc.writeMem(0x5478, { 0xe, 0x82 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x80e2, gbc.sp());
        EXPECT(0x547a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01C5
        gbc.setState(0xaf7a, 0x7a94, 0xf6a0, 0xaf68, 0x13a4, 0x68e6, 0x1, 0x0);
        gbc.writeMem(0xaf7a, { 0xe, 0x74 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7a94, gbc.sp());
        EXPECT(0xaf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xaf7a));
        EXPECT(0x74, gbc.readMem(0xaf7b));
        // 0E 01C6
        gbc.setState(0x9324, 0x5cb4, 0x35c0, 0x7930, 0xf572, 0xb4eb, 0x0, 0x1);
        gbc.writeMem(0x9324, { 0xe, 0x6c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5cb4, gbc.sp());
        EXPECT(0x9326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9324));
        EXPECT(0x6c, gbc.readMem(0x9325));
        // 0E 01C7
        gbc.setState(0xc473, 0x908c, 0x21e0, 0x1019, 0x4dde, 0x5f6, 0x0, 0x1);
        gbc.writeMem(0xc473, { 0xe, 0xcc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x908c, gbc.sp());
        EXPECT(0xc475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc473));
        EXPECT(0xcc, gbc.readMem(0xc474));
        // 0E 01C8
        gbc.setState(0x3401, 0x1b1a, 0x37d0, 0xa2f3, 0x71d9, 0xd16a, 0x0, 0x1);
        gbc.writeMem(0x3401, { 0xe, 0xb1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1b1a, gbc.sp());
        EXPECT(0x3403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01C9
        gbc.setState(0xe90, 0x9e4a, 0x6110, 0x1899, 0xe1d, 0x561d, 0x0, 0x0);
        gbc.writeMem(0xe90, { 0xe, 0xd4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9e4a, gbc.sp());
        EXPECT(0xe92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01CB
        gbc.setState(0x4b48, 0xa2a6, 0x97e0, 0xebd1, 0x122a, 0xc245, 0x1, 0x1);
        gbc.writeMem(0x4b48, { 0xe, 0xde });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa2a6, gbc.sp());
        EXPECT(0x4b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01CC
        gbc.setState(0x3759, 0xc21e, 0x2a90, 0x836a, 0x1f0b, 0x9731, 0x1, 0x1);
        gbc.writeMem(0x3759, { 0xe, 0x4c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc21e, gbc.sp());
        EXPECT(0x375b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01CD
        gbc.setState(0xd549, 0x4591, 0x7b30, 0x4d55, 0xa881, 0xe6f0, 0x0, 0x0);
        gbc.writeMem(0xd549, { 0xe, 0xf6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4591, gbc.sp());
        EXPECT(0xd54b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd549));
        EXPECT(0xf6, gbc.readMem(0xd54a));
        // 0E 01CE
        gbc.setState(0xc58f, 0xb627, 0x5e30, 0x76d9, 0xb23, 0xf323, 0x1, 0x1);
        gbc.writeMem(0xc58f, { 0xe, 0x6e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb627, gbc.sp());
        EXPECT(0xc591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc58f));
        EXPECT(0x6e, gbc.readMem(0xc590));
        // 0E 01CF
        gbc.setState(0x62a3, 0x94d7, 0x830, 0x7744, 0xaa, 0xae49, 0x0, 0x1);
        gbc.writeMem(0x62a3, { 0xe, 0xce });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x94d7, gbc.sp());
        EXPECT(0x62a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01D0
        gbc.setState(0x8b3b, 0x6121, 0x3650, 0x90f9, 0xebc2, 0x9b6d, 0x0, 0x0);
        gbc.writeMem(0x8b3b, { 0xe, 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6121, gbc.sp());
        EXPECT(0x8b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8b3b));
        EXPECT(0x0, gbc.readMem(0x8b3c));
        // 0E 01D2
        gbc.setState(0x26c7, 0xefe6, 0x7ae0, 0x842f, 0xcc0f, 0xa8c6, 0x0, 0x1);
        gbc.writeMem(0x26c7, { 0xe, 0xcc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xefe6, gbc.sp());
        EXPECT(0x26c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01D3
        gbc.setState(0xdfe4, 0x857e, 0x6150, 0xa410, 0x52a4, 0xc6aa, 0x0, 0x0);
        gbc.writeMem(0xdfe4, { 0xe, 0xbf });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x857e, gbc.sp());
        EXPECT(0xdfe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdfe4));
        EXPECT(0xbf, gbc.readMem(0xdfe5));
        // 0E 01D4
        gbc.setState(0x288e, 0xe9d1, 0x70a0, 0x1a9a, 0x21fe, 0xfe20, 0x1, 0x0);
        gbc.writeMem(0x288e, { 0xe, 0xb4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe9d1, gbc.sp());
        EXPECT(0x2890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01D5
        gbc.setState(0x5e7, 0x5f5a, 0xe8c0, 0x2eb2, 0x7b59, 0x6e94, 0x0, 0x1);
        gbc.writeMem(0x5e7, { 0xe, 0x16 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5f5a, gbc.sp());
        EXPECT(0x5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01D6
        gbc.setState(0x13d, 0x2898, 0xfa00, 0x39fb, 0x807e, 0x2647, 0x1, 0x0);
        gbc.writeMem(0x13d, { 0xe, 0x1a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2898, gbc.sp());
        EXPECT(0x13f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01D7
        gbc.setState(0xe, 0xa3bf, 0x3ea0, 0xd3b7, 0x3e10, 0x8548, 0x0, 0x1);
        gbc.writeMem(0xe, { 0xe, 0xf5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa3bf, gbc.sp());
        EXPECT(0x10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01D8
        gbc.setState(0x6b4, 0x8de3, 0xb610, 0x2548, 0xbe18, 0xf797, 0x0, 0x1);
        gbc.writeMem(0x6b4, { 0xe, 0x16 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8de3, gbc.sp());
        EXPECT(0x6b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01D9
        gbc.setState(0x26dd, 0x7133, 0x69c0, 0x6544, 0x5797, 0xac2d, 0x0, 0x0);
        gbc.writeMem(0x26dd, { 0xe, 0x79 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7133, gbc.sp());
        EXPECT(0x26df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01DA
        gbc.setState(0xa46, 0x15d5, 0x2010, 0x36a6, 0xd400, 0x7296, 0x1, 0x0);
        gbc.writeMem(0xa46, { 0xe, 0x6e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x15d5, gbc.sp());
        EXPECT(0xa48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01DB
        gbc.setState(0x71d2, 0x8b0f, 0x9980, 0x326b, 0x7fc1, 0xa7a7, 0x0, 0x0);
        gbc.writeMem(0x71d2, { 0xe, 0x34 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8b0f, gbc.sp());
        EXPECT(0x71d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01DC
        gbc.setState(0xd351, 0xbe2b, 0xb770, 0x3e71, 0xc327, 0xd81e, 0x1, 0x0);
        gbc.writeMem(0xd351, { 0xe, 0xd5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbe2b, gbc.sp());
        EXPECT(0xd353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd351));
        EXPECT(0xd5, gbc.readMem(0xd352));
        // 0E 01DD
        gbc.setState(0x5b9a, 0x5c, 0x4880, 0xf495, 0xbff, 0x78ef, 0x0, 0x1);
        gbc.writeMem(0x5b9a, { 0xe, 0xa1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5c, gbc.sp());
        EXPECT(0x5b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01DE
        gbc.setState(0xd696, 0xbf73, 0x6b90, 0x9592, 0x42f, 0xf994, 0x0, 0x1);
        gbc.writeMem(0xd696, { 0xe, 0x8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbf73, gbc.sp());
        EXPECT(0xd698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd696));
        EXPECT(0x8, gbc.readMem(0xd697));
        // 0E 01DF
        gbc.setState(0x5547, 0x546e, 0x6090, 0x150c, 0xfff6, 0xfc7f, 0x0, 0x1);
        gbc.writeMem(0x5547, { 0xe, 0xd6 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x546e, gbc.sp());
        EXPECT(0x5549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01E0
        gbc.setState(0x9039, 0x2b36, 0x2040, 0x4a50, 0x5ed1, 0xf4a8, 0x0, 0x0);
        gbc.writeMem(0x9039, { 0xe, 0x25 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2b36, gbc.sp());
        EXPECT(0x903b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9039));
        EXPECT(0x25, gbc.readMem(0x903a));
        // 0E 01E1
        gbc.setState(0x14ab, 0xfdb4, 0xde40, 0xb7b8, 0x7ea2, 0xb392, 0x1, 0x0);
        gbc.writeMem(0x14ab, { 0xe, 0x49 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfdb4, gbc.sp());
        EXPECT(0x14ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01E2
        gbc.setState(0x62d5, 0xf8a1, 0x73f0, 0x3527, 0x3503, 0x322b, 0x1, 0x1);
        gbc.writeMem(0x62d5, { 0xe, 0x49 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf8a1, gbc.sp());
        EXPECT(0x62d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01E3
        gbc.setState(0x33b1, 0x4579, 0x5be0, 0xd8e5, 0x732b, 0x805a, 0x0, 0x1);
        gbc.writeMem(0x33b1, { 0xe, 0x92 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4579, gbc.sp());
        EXPECT(0x33b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01E5
        gbc.setState(0x9497, 0x3b04, 0x7940, 0xdf1e, 0xa548, 0xb848, 0x0, 0x1);
        gbc.writeMem(0x9497, { 0xe, 0x28 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3b04, gbc.sp());
        EXPECT(0x9499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9497));
        EXPECT(0x28, gbc.readMem(0x9498));
        // 0E 01E6
        gbc.setState(0xc0df, 0x3c79, 0xf1d0, 0xd174, 0x5493, 0xdc5f, 0x1, 0x1);
        gbc.writeMem(0xc0df, { 0xe, 0x43 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3c79, gbc.sp());
        EXPECT(0xc0e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc0df));
        EXPECT(0x43, gbc.readMem(0xc0e0));
        // 0E 01E7
        gbc.setState(0xbd72, 0xa922, 0xe030, 0xef93, 0x5a5e, 0x101a, 0x1, 0x0);
        gbc.writeMem(0xbd72, { 0xe, 0x57 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa922, gbc.sp());
        EXPECT(0xbd74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbd72));
        EXPECT(0x57, gbc.readMem(0xbd73));
        // 0E 01E8
        gbc.setState(0x8420, 0x37d, 0x9970, 0x7f40, 0x8682, 0x1295, 0x0, 0x0);
        gbc.writeMem(0x8420, { 0xe, 0x8b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x37d, gbc.sp());
        EXPECT(0x8422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8420));
        EXPECT(0x8b, gbc.readMem(0x8421));
        // 0E 01E9
        gbc.setState(0xe6da, 0x910c, 0x3ef0, 0xbafa, 0x7339, 0x5fec, 0x1, 0x1);
        gbc.writeMem(0xe6da, { 0xe, 0x7d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x910c, gbc.sp());
        EXPECT(0xe6dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe6da));
        EXPECT(0x7d, gbc.readMem(0xe6db));
        // 0E 01EA
        gbc.setState(0xafdc, 0x7c38, 0x2bf0, 0x4177, 0xf4e0, 0x5d1b, 0x1, 0x1);
        gbc.writeMem(0xafdc, { 0xe, 0xd3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7c38, gbc.sp());
        EXPECT(0xafde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xafdc));
        EXPECT(0xd3, gbc.readMem(0xafdd));
        // 0E 01EB
        gbc.setState(0x5a6, 0x2313, 0x59e0, 0x51b5, 0x6531, 0xd57e, 0x1, 0x1);
        gbc.writeMem(0x5a6, { 0xe, 0x37 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2313, gbc.sp());
        EXPECT(0x5a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01EC
        gbc.setState(0x7962, 0xd6dd, 0xfb0, 0xb3e1, 0x3033, 0x3395, 0x1, 0x1);
        gbc.writeMem(0x7962, { 0xe, 0xb7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd6dd, gbc.sp());
        EXPECT(0x7964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01ED
        gbc.setState(0x8c75, 0x3ee3, 0xdd80, 0xabad, 0x16cb, 0xb505, 0x0, 0x0);
        gbc.writeMem(0x8c75, { 0xe, 0xad });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3ee3, gbc.sp());
        EXPECT(0x8c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8c75));
        EXPECT(0xad, gbc.readMem(0x8c76));
        // 0E 01EE
        gbc.setState(0x23a8, 0x8ee5, 0xe5a0, 0xe678, 0xdada, 0xe47f, 0x0, 0x0);
        gbc.writeMem(0x23a8, { 0xe, 0x36 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8ee5, gbc.sp());
        EXPECT(0x23aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01EF
        gbc.setState(0x5b57, 0x70ad, 0x5d50, 0x8687, 0xd13a, 0x2478, 0x1, 0x0);
        gbc.writeMem(0x5b57, { 0xe, 0x9d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x70ad, gbc.sp());
        EXPECT(0x5b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01F0
        gbc.setState(0xa256, 0x8f77, 0xbd50, 0xa96d, 0x8a7d, 0x60ac, 0x0, 0x0);
        gbc.writeMem(0xa256, { 0xe, 0x77 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8f77, gbc.sp());
        EXPECT(0xa258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa256));
        EXPECT(0x77, gbc.readMem(0xa257));
        // 0E 01F1
        gbc.setState(0x7d60, 0xe2a6, 0x55d0, 0x4e57, 0x84b0, 0xd0e0, 0x0, 0x0);
        gbc.writeMem(0x7d60, { 0xe, 0xb3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe2a6, gbc.sp());
        EXPECT(0x7d62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01F2
        gbc.setState(0xe8fb, 0x8c99, 0xc210, 0x9c14, 0x8b3, 0x1730, 0x1, 0x1);
        gbc.writeMem(0xe8fb, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8c99, gbc.sp());
        EXPECT(0xe8fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe8fb));
        EXPECT(0xe9, gbc.readMem(0xe8fc));
        // 0E 01F3
        gbc.setState(0xb16a, 0xfd19, 0xd700, 0xdc94, 0xc46f, 0x189d, 0x1, 0x0);
        gbc.writeMem(0xb16a, { 0xe, 0x9c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfd19, gbc.sp());
        EXPECT(0xb16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb16a));
        EXPECT(0x9c, gbc.readMem(0xb16b));
        // 0E 01F4
        gbc.setState(0x72c4, 0x652b, 0xe900, 0x617e, 0xb211, 0xd1cc, 0x1, 0x1);
        gbc.writeMem(0x72c4, { 0xe, 0xf1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x652b, gbc.sp());
        EXPECT(0x72c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01F5
        gbc.setState(0xcc0b, 0x2e40, 0x7f00, 0x9eeb, 0x27dc, 0x6326, 0x1, 0x1);
        gbc.writeMem(0xcc0b, { 0xe, 0xe0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2e40, gbc.sp());
        EXPECT(0xcc0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcc0b));
        EXPECT(0xe0, gbc.readMem(0xcc0c));
        // 0E 01F6
        gbc.setState(0xc95d, 0x3dc1, 0x4360, 0xc88d, 0x3343, 0xdc55, 0x0, 0x0);
        gbc.writeMem(0xc95d, { 0xe, 0x2b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3dc1, gbc.sp());
        EXPECT(0xc95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc95d));
        EXPECT(0x2b, gbc.readMem(0xc95e));
        // 0E 01F7
        gbc.setState(0xc5da, 0x6eb2, 0x62e0, 0xd70f, 0x2125, 0xb2aa, 0x1, 0x1);
        gbc.writeMem(0xc5da, { 0xe, 0x64 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6eb2, gbc.sp());
        EXPECT(0xc5dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc5da));
        EXPECT(0x64, gbc.readMem(0xc5db));
        // 0E 01F8
        gbc.setState(0x68fd, 0x725, 0x87c0, 0x6483, 0x847e, 0x3285, 0x1, 0x1);
        gbc.writeMem(0x68fd, { 0xe, 0x34 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x725, gbc.sp());
        EXPECT(0x68ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01F9
        gbc.setState(0x9e57, 0xb9dc, 0x7850, 0x717, 0x2f01, 0x5467, 0x1, 0x0);
        gbc.writeMem(0x9e57, { 0xe, 0x1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb9dc, gbc.sp());
        EXPECT(0x9e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9e57));
        EXPECT(0x1, gbc.readMem(0x9e58));
        // 0E 01FA
        gbc.setState(0x193e, 0x27af, 0x8770, 0x723d, 0xec21, 0xedf9, 0x0, 0x1);
        gbc.writeMem(0x193e, { 0xe, 0x7c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x27af, gbc.sp());
        EXPECT(0x1940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01FB
        gbc.setState(0x56a, 0x49dc, 0x21b0, 0xdb6b, 0xaee7, 0x2345, 0x1, 0x1);
        gbc.writeMem(0x56a, { 0xe, 0x8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x49dc, gbc.sp());
        EXPECT(0x56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01FC
        gbc.setState(0x78e6, 0x695f, 0xdbc0, 0xb12f, 0x385d, 0xa606, 0x1, 0x0);
        gbc.writeMem(0x78e6, { 0xe, 0xd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x695f, gbc.sp());
        EXPECT(0x78e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 01FD
        gbc.setState(0x23b5, 0xad6e, 0xedf0, 0x4e1f, 0xe886, 0xc69e, 0x1, 0x0);
        gbc.writeMem(0x23b5, { 0xe, 0x56 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xad6e, gbc.sp());
        EXPECT(0x23b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 01FE
        gbc.setState(0x44a1, 0xf905, 0x9a0, 0xc455, 0xa65c, 0xa290, 0x1, 0x1);
        gbc.writeMem(0x44a1, { 0xe, 0x7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf905, gbc.sp());
        EXPECT(0x44a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0200
        gbc.setState(0xea55, 0xfdb7, 0x6da0, 0x7efa, 0x2ccb, 0x7f68, 0x0, 0x1);
        gbc.writeMem(0xea55, { 0xe, 0x2b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfdb7, gbc.sp());
        EXPECT(0xea57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xea55));
        EXPECT(0x2b, gbc.readMem(0xea56));
        // 0E 0201
        gbc.setState(0x2db1, 0x386f, 0x1b20, 0xa01f, 0xedb0, 0xae01, 0x1, 0x0);
        gbc.writeMem(0x2db1, { 0xe, 0xf7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x386f, gbc.sp());
        EXPECT(0x2db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0202
        gbc.setState(0x2465, 0x6312, 0x8730, 0xc9f9, 0x45d8, 0x1e25, 0x1, 0x0);
        gbc.writeMem(0x2465, { 0xe, 0x53 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6312, gbc.sp());
        EXPECT(0x2467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0203
        gbc.setState(0x6c64, 0x6d17, 0xa7a0, 0xa434, 0xd7bb, 0x3580, 0x0, 0x1);
        gbc.writeMem(0x6c64, { 0xe, 0x25 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6d17, gbc.sp());
        EXPECT(0x6c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0204
        gbc.setState(0x498f, 0x116f, 0xeb80, 0x6293, 0xbdf9, 0xfc57, 0x0, 0x1);
        gbc.writeMem(0x498f, { 0xe, 0x92 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x116f, gbc.sp());
        EXPECT(0x4991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0205
        gbc.setState(0xef49, 0xd76e, 0x5b80, 0xe9dd, 0x5d7c, 0xfed5, 0x0, 0x1);
        gbc.writeMem(0xef49, { 0xe, 0x5f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd76e, gbc.sp());
        EXPECT(0xef4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xef49));
        EXPECT(0x5f, gbc.readMem(0xef4a));
        // 0E 0206
        gbc.setState(0xab73, 0x1a8, 0xee60, 0xddee, 0x1cf0, 0xaf19, 0x0, 0x0);
        gbc.writeMem(0xab73, { 0xe, 0x79 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1a8, gbc.sp());
        EXPECT(0xab75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xab73));
        EXPECT(0x79, gbc.readMem(0xab74));
        // 0E 0207
        gbc.setState(0xe626, 0xa290, 0x8cc0, 0xb949, 0xe356, 0x29d, 0x0, 0x1);
        gbc.writeMem(0xe626, { 0xe, 0xb1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa290, gbc.sp());
        EXPECT(0xe628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe626));
        EXPECT(0xb1, gbc.readMem(0xe627));
        // 0E 0208
        gbc.setState(0x77ad, 0x3db2, 0xb280, 0x1a8f, 0x3c9c, 0x5cb5, 0x1, 0x0);
        gbc.writeMem(0x77ad, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3db2, gbc.sp());
        EXPECT(0x77af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0209
        gbc.setState(0x72e9, 0x29ad, 0xf1f0, 0xee39, 0xaa85, 0x5402, 0x1, 0x0);
        gbc.writeMem(0x72e9, { 0xe, 0x3 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x29ad, gbc.sp());
        EXPECT(0x72eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 020A
        gbc.setState(0xcbb6, 0x524b, 0x6960, 0x4a7e, 0x452, 0xfffc, 0x0, 0x0);
        gbc.writeMem(0xcbb6, { 0xe, 0x79 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x524b, gbc.sp());
        EXPECT(0xcbb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcbb6));
        EXPECT(0x79, gbc.readMem(0xcbb7));
        // 0E 020B
        gbc.setState(0x917, 0x3158, 0xcd50, 0x39c2, 0xc28b, 0xba8b, 0x0, 0x0);
        gbc.writeMem(0x917, { 0xe, 0x4a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3158, gbc.sp());
        EXPECT(0x919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 020D
        gbc.setState(0x4cab, 0xbaa1, 0x9ce0, 0xeb6d, 0xfe09, 0x4e09, 0x1, 0x1);
        gbc.writeMem(0x4cab, { 0xe, 0x55 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbaa1, gbc.sp());
        EXPECT(0x4cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 020E
        gbc.setState(0x5b66, 0x748b, 0x3ea0, 0x5d30, 0xdac1, 0x3289, 0x0, 0x0);
        gbc.writeMem(0x5b66, { 0xe, 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x748b, gbc.sp());
        EXPECT(0x5b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0210
        gbc.setState(0x3b29, 0x5bfb, 0x9d40, 0xe653, 0xda92, 0x8d7, 0x0, 0x0);
        gbc.writeMem(0x3b29, { 0xe, 0x67 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5bfb, gbc.sp());
        EXPECT(0x3b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0211
        gbc.setState(0x2f75, 0x5597, 0xa290, 0x354e, 0xf619, 0xc7b2, 0x0, 0x1);
        gbc.writeMem(0x2f75, { 0xe, 0xa5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5597, gbc.sp());
        EXPECT(0x2f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0212
        gbc.setState(0xc691, 0xf935, 0xb410, 0xc03e, 0x2bf9, 0xe26, 0x1, 0x0);
        gbc.writeMem(0xc691, { 0xe, 0xda });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf935, gbc.sp());
        EXPECT(0xc693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc691));
        EXPECT(0xda, gbc.readMem(0xc692));
        // 0E 0213
        gbc.setState(0x9401, 0x9a3e, 0x7ca0, 0x5881, 0x44bc, 0x5967, 0x0, 0x0);
        gbc.writeMem(0x9401, { 0xe, 0xc8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9a3e, gbc.sp());
        EXPECT(0x9403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9401));
        EXPECT(0xc8, gbc.readMem(0x9402));
        // 0E 0214
        gbc.setState(0x1efe, 0x7c7e, 0x1150, 0x3d96, 0xd410, 0xd728, 0x0, 0x0);
        gbc.writeMem(0x1efe, { 0xe, 0x8d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7c7e, gbc.sp());
        EXPECT(0x1f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0215
        gbc.setState(0x609, 0x5ef1, 0xcba0, 0xb5cf, 0xc89e, 0xf06a, 0x0, 0x1);
        gbc.writeMem(0x609, { 0xe, 0xf0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5ef1, gbc.sp());
        EXPECT(0x60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0216
        gbc.setState(0x69d7, 0x9f2c, 0x97e0, 0x801d, 0x774, 0x4a6e, 0x0, 0x0);
        gbc.writeMem(0x69d7, { 0xe, 0x25 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9f2c, gbc.sp());
        EXPECT(0x69d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0217
        gbc.setState(0x97d8, 0x90ff, 0xe390, 0xedd4, 0x3378, 0xecc4, 0x0, 0x1);
        gbc.writeMem(0x97d8, { 0xe, 0x9d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x90ff, gbc.sp());
        EXPECT(0x97da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x97d8));
        EXPECT(0x9d, gbc.readMem(0x97d9));
        // 0E 0218
        gbc.setState(0xaad5, 0x7d88, 0xcf30, 0x42ca, 0x1ef4, 0x2d59, 0x0, 0x1);
        gbc.writeMem(0xaad5, { 0xe, 0xe8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7d88, gbc.sp());
        EXPECT(0xaad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xaad5));
        EXPECT(0xe8, gbc.readMem(0xaad6));
        // 0E 0219
        gbc.setState(0x97bd, 0xc1cc, 0x2310, 0x22ee, 0xdbc2, 0x3e09, 0x0, 0x1);
        gbc.writeMem(0x97bd, { 0xe, 0x52 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc1cc, gbc.sp());
        EXPECT(0x97bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x97bd));
        EXPECT(0x52, gbc.readMem(0x97be));
        // 0E 021A
        gbc.setState(0x95e7, 0xf0f0, 0x6020, 0xf107, 0x3705, 0x9821, 0x1, 0x1);
        gbc.writeMem(0x95e7, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf0f0, gbc.sp());
        EXPECT(0x95e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x95e7));
        EXPECT(0xe9, gbc.readMem(0x95e8));
        // 0E 021B
        gbc.setState(0xd59d, 0xe60c, 0x49d0, 0x3ace, 0x6ad9, 0x71a, 0x1, 0x0);
        gbc.writeMem(0xd59d, { 0xe, 0xaf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe60c, gbc.sp());
        EXPECT(0xd59f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd59d));
        EXPECT(0xaf, gbc.readMem(0xd59e));
        // 0E 021C
        gbc.setState(0x45df, 0x552a, 0xc300, 0x87ab, 0xeaf4, 0x90d9, 0x0, 0x1);
        gbc.writeMem(0x45df, { 0xe, 0x9f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x552a, gbc.sp());
        EXPECT(0x45e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 021D
        gbc.setState(0xace2, 0x9292, 0x42d0, 0x7c4f, 0x474b, 0x3cdf, 0x0, 0x0);
        gbc.writeMem(0xace2, { 0xe, 0x81 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9292, gbc.sp());
        EXPECT(0xace4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xace2));
        EXPECT(0x81, gbc.readMem(0xace3));
        // 0E 021E
        gbc.setState(0x9e46, 0xb342, 0xea50, 0xf994, 0xd252, 0xfe07, 0x1, 0x0);
        gbc.writeMem(0x9e46, { 0xe, 0xc5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb342, gbc.sp());
        EXPECT(0x9e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9e46));
        EXPECT(0xc5, gbc.readMem(0x9e47));
        // 0E 021F
        gbc.setState(0xa643, 0x265, 0x5520, 0xff9d, 0x86df, 0xf501, 0x1, 0x1);
        gbc.writeMem(0xa643, { 0xe, 0x46 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x265, gbc.sp());
        EXPECT(0xa645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa643));
        EXPECT(0x46, gbc.readMem(0xa644));
        // 0E 0220
        gbc.setState(0xdca9, 0xd3a6, 0xb7d0, 0x2741, 0x7168, 0xd06f, 0x1, 0x1);
        gbc.writeMem(0xdca9, { 0xe, 0x24 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd3a6, gbc.sp());
        EXPECT(0xdcab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdca9));
        EXPECT(0x24, gbc.readMem(0xdcaa));
        // 0E 0221
        gbc.setState(0x298e, 0x657, 0x32e0, 0x8b1d, 0xc65f, 0xa6c, 0x0, 0x1);
        gbc.writeMem(0x298e, { 0xe, 0x74 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x657, gbc.sp());
        EXPECT(0x2990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0222
        gbc.setState(0x95cf, 0xd91d, 0xf870, 0xc97e, 0xb369, 0x9dfa, 0x1, 0x0);
        gbc.writeMem(0x95cf, { 0xe, 0xda });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd91d, gbc.sp());
        EXPECT(0x95d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x95cf));
        EXPECT(0xda, gbc.readMem(0x95d0));
        // 0E 0223
        gbc.setState(0x3352, 0x6572, 0x20e0, 0x4610, 0x6db3, 0x6a6d, 0x1, 0x1);
        gbc.writeMem(0x3352, { 0xe, 0x36 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6572, gbc.sp());
        EXPECT(0x3354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0224
        gbc.setState(0x48e9, 0xcfd4, 0xb260, 0x1782, 0x703e, 0x7e7e, 0x0, 0x0);
        gbc.writeMem(0x48e9, { 0xe, 0x2a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcfd4, gbc.sp());
        EXPECT(0x48eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0225
        gbc.setState(0x4550, 0x6ea0, 0xc760, 0x4e6f, 0xf44, 0x5b1e, 0x0, 0x0);
        gbc.writeMem(0x4550, { 0xe, 0xc9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6ea0, gbc.sp());
        EXPECT(0x4552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0226
        gbc.setState(0x3756, 0xc7d7, 0xb6d0, 0xa712, 0x63fd, 0xd00, 0x0, 0x1);
        gbc.writeMem(0x3756, { 0xe, 0xfb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc7d7, gbc.sp());
        EXPECT(0x3758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0227
        gbc.setState(0xd621, 0x8a5e, 0x42f0, 0xfb10, 0xcfe2, 0x474b, 0x0, 0x1);
        gbc.writeMem(0xd621, { 0xe, 0xe8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8a5e, gbc.sp());
        EXPECT(0xd623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd621));
        EXPECT(0xe8, gbc.readMem(0xd622));
        // 0E 0228
        gbc.setState(0x73aa, 0xb01, 0x2a50, 0xa169, 0x5c9e, 0x2a16, 0x0, 0x1);
        gbc.writeMem(0x73aa, { 0xe, 0xa6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb01, gbc.sp());
        EXPECT(0x73ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0229
        gbc.setState(0xa459, 0x905, 0x4a10, 0x3306, 0xc3a5, 0x24f9, 0x1, 0x1);
        gbc.writeMem(0xa459, { 0xe, 0x54 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x905, gbc.sp());
        EXPECT(0xa45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa459));
        EXPECT(0x54, gbc.readMem(0xa45a));
        // 0E 022A
        gbc.setState(0x58be, 0x886, 0x5600, 0x9a4b, 0x5deb, 0x554f, 0x1, 0x1);
        gbc.writeMem(0x58be, { 0xe, 0xd7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x886, gbc.sp());
        EXPECT(0x58c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 022B
        gbc.setState(0xac95, 0x25bf, 0xc5f0, 0x9d71, 0xcd24, 0x7df2, 0x0, 0x0);
        gbc.writeMem(0xac95, { 0xe, 0xf9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x25bf, gbc.sp());
        EXPECT(0xac97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xac95));
        EXPECT(0xf9, gbc.readMem(0xac96));
        // 0E 022C
        gbc.setState(0x5766, 0x58b0, 0x2f90, 0xf288, 0xc779, 0xe125, 0x0, 0x0);
        gbc.writeMem(0x5766, { 0xe, 0x19 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x58b0, gbc.sp());
        EXPECT(0x5768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 022D
        gbc.setState(0x9b10, 0xd575, 0x93a0, 0xceb2, 0x1178, 0x8c49, 0x0, 0x0);
        gbc.writeMem(0x9b10, { 0xe, 0x56 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd575, gbc.sp());
        EXPECT(0x9b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9b10));
        EXPECT(0x56, gbc.readMem(0x9b11));
        // 0E 022E
        gbc.setState(0x1c0, 0x883, 0xf5e0, 0x6459, 0xc555, 0x6adb, 0x0, 0x1);
        gbc.writeMem(0x1c0, { 0xe, 0x9d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x883, gbc.sp());
        EXPECT(0x1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 022F
        gbc.setState(0x4b31, 0xffdd, 0x6df0, 0xe023, 0xd30e, 0xc7f9, 0x1, 0x1);
        gbc.writeMem(0x4b31, { 0xe, 0x7b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xffdd, gbc.sp());
        EXPECT(0x4b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0230
        gbc.setState(0x4db9, 0xe980, 0xcf40, 0xad58, 0xcbfa, 0x9cbb, 0x0, 0x1);
        gbc.writeMem(0x4db9, { 0xe, 0x17 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe980, gbc.sp());
        EXPECT(0x4dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0231
        gbc.setState(0x9a8f, 0x2b9d, 0x990, 0x6276, 0xe33d, 0xe183, 0x1, 0x0);
        gbc.writeMem(0x9a8f, { 0xe, 0xb8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2b9d, gbc.sp());
        EXPECT(0x9a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9a8f));
        EXPECT(0xb8, gbc.readMem(0x9a90));
        // 0E 0232
        gbc.setState(0xba85, 0x9903, 0xc7c0, 0xfbbd, 0xebac, 0x84d5, 0x1, 0x0);
        gbc.writeMem(0xba85, { 0xe, 0xf1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9903, gbc.sp());
        EXPECT(0xba87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xba85));
        EXPECT(0xf1, gbc.readMem(0xba86));
        // 0E 0233
        gbc.setState(0x5eb, 0x1f6c, 0x83f0, 0x70d7, 0x8007, 0x50c6, 0x0, 0x0);
        gbc.writeMem(0x5eb, { 0xe, 0x9a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1f6c, gbc.sp());
        EXPECT(0x5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0234
        gbc.setState(0x7cf2, 0xe98b, 0x31f0, 0x1770, 0xfb9f, 0xcaa8, 0x1, 0x0);
        gbc.writeMem(0x7cf2, { 0xe, 0x7d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe98b, gbc.sp());
        EXPECT(0x7cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0235
        gbc.setState(0xca32, 0x6181, 0x940, 0x1739, 0x9d05, 0x6f5b, 0x1, 0x1);
        gbc.writeMem(0xca32, { 0xe, 0x75 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6181, gbc.sp());
        EXPECT(0xca34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xca32));
        EXPECT(0x75, gbc.readMem(0xca33));
        // 0E 0236
        gbc.setState(0x43b9, 0x9db, 0x550, 0xdbbb, 0xc137, 0xc60d, 0x0, 0x1);
        gbc.writeMem(0x43b9, { 0xe, 0x13 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9db, gbc.sp());
        EXPECT(0x43bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0237
        gbc.setState(0x1937, 0xaa1f, 0xb660, 0x1646, 0x28b, 0x9a61, 0x1, 0x1);
        gbc.writeMem(0x1937, { 0xe, 0x6f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xaa1f, gbc.sp());
        EXPECT(0x1939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0238
        gbc.setState(0x3fc0, 0x822b, 0xd3f0, 0xbaa2, 0xba33, 0x9ebc, 0x1, 0x0);
        gbc.writeMem(0x3fc0, { 0xe, 0x42 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x822b, gbc.sp());
        EXPECT(0x3fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0239
        gbc.setState(0x4fb2, 0x35ec, 0x2e0, 0x3a1c, 0xe3e, 0x81b6, 0x0, 0x0);
        gbc.writeMem(0x4fb2, { 0xe, 0xd0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x35ec, gbc.sp());
        EXPECT(0x4fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 023A
        gbc.setState(0x7558, 0x9341, 0xb260, 0x789e, 0x490a, 0xfa47, 0x1, 0x0);
        gbc.writeMem(0x7558, { 0xe, 0x51 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9341, gbc.sp());
        EXPECT(0x755a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 023B
        gbc.setState(0x15b, 0x2850, 0xff00, 0x3795, 0x7aaf, 0xaaa, 0x1, 0x0);
        gbc.writeMem(0x15b, { 0xe, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2850, gbc.sp());
        EXPECT(0x15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 023C
        gbc.setState(0xc9d, 0xaa91, 0x5800, 0x158, 0xd1f5, 0x41d6, 0x1, 0x0);
        gbc.writeMem(0xc9d, { 0xe, 0xce });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xaa91, gbc.sp());
        EXPECT(0xc9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 023D
        gbc.setState(0x558c, 0x9850, 0xda00, 0x3cb3, 0xbec2, 0x7a98, 0x1, 0x1);
        gbc.writeMem(0x558c, { 0xe, 0x2c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9850, gbc.sp());
        EXPECT(0x558e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 023E
        gbc.setState(0x5dac, 0x7079, 0x4b70, 0xb1cf, 0xe23d, 0x80af, 0x1, 0x0);
        gbc.writeMem(0x5dac, { 0xe, 0x64 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7079, gbc.sp());
        EXPECT(0x5dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0240
        gbc.setState(0xc7d4, 0x7e1d, 0xaac0, 0x7780, 0x8d2d, 0x37ea, 0x1, 0x1);
        gbc.writeMem(0xc7d4, { 0xe, 0x65 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7e1d, gbc.sp());
        EXPECT(0xc7d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc7d4));
        EXPECT(0x65, gbc.readMem(0xc7d5));
        // 0E 0241
        gbc.setState(0x1e33, 0xd02b, 0x6dd0, 0x8c3c, 0x3f37, 0x24f1, 0x1, 0x1);
        gbc.writeMem(0x1e33, { 0xe, 0x41 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd02b, gbc.sp());
        EXPECT(0x1e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0242
        gbc.setState(0xde06, 0xdcfb, 0x9cb0, 0xbad9, 0x60b8, 0x4ce4, 0x0, 0x0);
        gbc.writeMem(0xde06, { 0xe, 0xec });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xdcfb, gbc.sp());
        EXPECT(0xde08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xde06));
        EXPECT(0xec, gbc.readMem(0xde07));
        // 0E 0243
        gbc.setState(0xa545, 0x64dd, 0xc570, 0x2454, 0xcf78, 0x559f, 0x1, 0x1);
        gbc.writeMem(0xa545, { 0xe, 0x15 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x64dd, gbc.sp());
        EXPECT(0xa547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa545));
        EXPECT(0x15, gbc.readMem(0xa546));
        // 0E 0244
        gbc.setState(0x95cd, 0x6e0a, 0xc360, 0x8333, 0xf6ee, 0xec06, 0x1, 0x0);
        gbc.writeMem(0x95cd, { 0xe, 0x6a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6e0a, gbc.sp());
        EXPECT(0x95cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x95cd));
        EXPECT(0x6a, gbc.readMem(0x95ce));
        // 0E 0245
        gbc.setState(0x2928, 0x8c0c, 0x3a50, 0xb664, 0x9752, 0x34fd, 0x1, 0x1);
        gbc.writeMem(0x2928, { 0xe, 0xe1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8c0c, gbc.sp());
        EXPECT(0x292a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0246
        gbc.setState(0xa5b3, 0x2097, 0x7c0, 0x13a6, 0xdf82, 0x8b25, 0x1, 0x1);
        gbc.writeMem(0xa5b3, { 0xe, 0x91 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2097, gbc.sp());
        EXPECT(0xa5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa5b3));
        EXPECT(0x91, gbc.readMem(0xa5b4));
        // 0E 0247
        gbc.setState(0x3bdf, 0xd9c0, 0xd480, 0x8265, 0x9a79, 0xb879, 0x0, 0x0);
        gbc.writeMem(0x3bdf, { 0xe, 0xeb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd9c0, gbc.sp());
        EXPECT(0x3be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0248
        gbc.setState(0xa6f4, 0x525b, 0x2ea0, 0xc7ad, 0xefc0, 0x9ec4, 0x0, 0x1);
        gbc.writeMem(0xa6f4, { 0xe, 0x3e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x525b, gbc.sp());
        EXPECT(0xa6f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa6f4));
        EXPECT(0x3e, gbc.readMem(0xa6f5));
        // 0E 024A
        gbc.setState(0x638, 0x5dc7, 0x9cb0, 0x89c9, 0x852d, 0x77e2, 0x1, 0x1);
        gbc.writeMem(0x638, { 0xe, 0xc7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5dc7, gbc.sp());
        EXPECT(0x63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 024B
        gbc.setState(0xa921, 0x6fc5, 0x7840, 0x79e1, 0x106a, 0xd7c4, 0x1, 0x1);
        gbc.writeMem(0xa921, { 0xe, 0x3b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6fc5, gbc.sp());
        EXPECT(0xa923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa921));
        EXPECT(0x3b, gbc.readMem(0xa922));
        // 0E 024C
        gbc.setState(0xbef2, 0x87fd, 0x5bd0, 0x1f46, 0x8bab, 0x56e7, 0x1, 0x0);
        gbc.writeMem(0xbef2, { 0xe, 0xb5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x87fd, gbc.sp());
        EXPECT(0xbef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbef2));
        EXPECT(0xb5, gbc.readMem(0xbef3));
        // 0E 024D
        gbc.setState(0x3ed8, 0x9cfa, 0x9660, 0x2dab, 0x9382, 0xfd53, 0x1, 0x1);
        gbc.writeMem(0x3ed8, { 0xe, 0x3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9cfa, gbc.sp());
        EXPECT(0x3eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 024E
        gbc.setState(0x51a1, 0x2a52, 0x86c0, 0x142e, 0x7c73, 0x8308, 0x0, 0x0);
        gbc.writeMem(0x51a1, { 0xe, 0x3c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2a52, gbc.sp());
        EXPECT(0x51a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 024F
        gbc.setState(0x24e4, 0xc961, 0x7300, 0xf460, 0x31cd, 0x73d7, 0x1, 0x0);
        gbc.writeMem(0x24e4, { 0xe, 0xb2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc961, gbc.sp());
        EXPECT(0x24e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0250
        gbc.setState(0x513, 0x3b1b, 0xa740, 0x1bbd, 0x767c, 0xc8d0, 0x1, 0x1);
        gbc.writeMem(0x513, { 0xe, 0x94 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3b1b, gbc.sp());
        EXPECT(0x515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0251
        gbc.setState(0xd252, 0xb4ba, 0xfe00, 0x8727, 0x41d6, 0xeaae, 0x0, 0x0);
        gbc.writeMem(0xd252, { 0xe, 0x69 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb4ba, gbc.sp());
        EXPECT(0xd254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd252));
        EXPECT(0x69, gbc.readMem(0xd253));
        // 0E 0252
        gbc.setState(0xd011, 0x70b8, 0xbf30, 0xb256, 0xd96d, 0xee5f, 0x1, 0x0);
        gbc.writeMem(0xd011, { 0xe, 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x70b8, gbc.sp());
        EXPECT(0xd013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd011));
        EXPECT(0x0, gbc.readMem(0xd012));
        // 0E 0253
        gbc.setState(0x5652, 0xabbb, 0x8e00, 0x9fe2, 0x673f, 0xb518, 0x0, 0x0);
        gbc.writeMem(0x5652, { 0xe, 0xc0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xabbb, gbc.sp());
        EXPECT(0x5654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0254
        gbc.setState(0xd59a, 0x2c9f, 0x1b60, 0xc9b1, 0xb162, 0xccfb, 0x0, 0x1);
        gbc.writeMem(0xd59a, { 0xe, 0x2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2c9f, gbc.sp());
        EXPECT(0xd59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd59a));
        EXPECT(0x2, gbc.readMem(0xd59b));
        // 0E 0255
        gbc.setState(0x3211, 0x36ec, 0x69a0, 0x87c3, 0xca0e, 0x817d, 0x1, 0x1);
        gbc.writeMem(0x3211, { 0xe, 0x6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x36ec, gbc.sp());
        EXPECT(0x3213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0256
        gbc.setState(0x1ae, 0xc4ff, 0xd470, 0x989a, 0x9878, 0x7c35, 0x0, 0x1);
        gbc.writeMem(0x1ae, { 0xe, 0xc8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc4ff, gbc.sp());
        EXPECT(0x1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0257
        gbc.setState(0xe8ed, 0xd87a, 0xd1f0, 0xe876, 0x5eb4, 0xf380, 0x1, 0x1);
        gbc.writeMem(0xe8ed, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd87a, gbc.sp());
        EXPECT(0xe8ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe8ed));
        EXPECT(0xe9, gbc.readMem(0xe8ee));
        // 0E 0258
        gbc.setState(0xc8ed, 0xdb9a, 0x5b00, 0x1d13, 0x6e8c, 0xde2, 0x0, 0x0);
        gbc.writeMem(0xc8ed, { 0xe, 0x26 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdb9a, gbc.sp());
        EXPECT(0xc8ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc8ed));
        EXPECT(0x26, gbc.readMem(0xc8ee));
        // 0E 0259
        gbc.setState(0xa28b, 0x919e, 0x2510, 0x994f, 0x13bf, 0xed15, 0x0, 0x0);
        gbc.writeMem(0xa28b, { 0xe, 0x76 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x919e, gbc.sp());
        EXPECT(0xa28d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa28b));
        EXPECT(0x76, gbc.readMem(0xa28c));
        // 0E 025A
        gbc.setState(0x9afb, 0x9a1d, 0x5ae0, 0xb2ed, 0x25f1, 0x1d2c, 0x0, 0x0);
        gbc.writeMem(0x9afb, { 0xe, 0x31 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9a1d, gbc.sp());
        EXPECT(0x9afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9afb));
        EXPECT(0x31, gbc.readMem(0x9afc));
        // 0E 025B
        gbc.setState(0xac0, 0x67ab, 0xa2a0, 0x6de6, 0x16b5, 0x40bc, 0x1, 0x1);
        gbc.writeMem(0xac0, { 0xe, 0x51 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x67ab, gbc.sp());
        EXPECT(0xac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 025C
        gbc.setState(0x8847, 0xd749, 0x51c0, 0xa8a6, 0x8fbc, 0x3d19, 0x1, 0x1);
        gbc.writeMem(0x8847, { 0xe, 0x2b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd749, gbc.sp());
        EXPECT(0x8849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8847));
        EXPECT(0x2b, gbc.readMem(0x8848));
        // 0E 025D
        gbc.setState(0x3f66, 0xcc83, 0xac60, 0x65f3, 0xd65e, 0x3f3c, 0x1, 0x1);
        gbc.writeMem(0x3f66, { 0xe, 0x61 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcc83, gbc.sp());
        EXPECT(0x3f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 025E
        gbc.setState(0xeffe, 0x2b40, 0xd620, 0x970e, 0x9453, 0x2e9e, 0x0, 0x1);
        gbc.writeMem(0xeffe, { 0xe, 0x7e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2b40, gbc.sp());
        EXPECT(0xf000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xeffe));
        EXPECT(0x7e, gbc.readMem(0xefff));
        // 0E 025F
        gbc.setState(0x6597, 0x567, 0xba40, 0xee2, 0x46a2, 0xe254, 0x0, 0x0);
        gbc.writeMem(0x6597, { 0xe, 0x66 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x567, gbc.sp());
        EXPECT(0x6599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0260
        gbc.setState(0x49ad, 0x5e80, 0xcf80, 0x1539, 0xab20, 0xe359, 0x1, 0x1);
        gbc.writeMem(0x49ad, { 0xe, 0x41 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5e80, gbc.sp());
        EXPECT(0x49af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0261
        gbc.setState(0xb03b, 0xdeb7, 0x9a10, 0x85a3, 0x68a9, 0x8e2c, 0x1, 0x0);
        gbc.writeMem(0xb03b, { 0xe, 0x6e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdeb7, gbc.sp());
        EXPECT(0xb03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb03b));
        EXPECT(0x6e, gbc.readMem(0xb03c));
        // 0E 0262
        gbc.setState(0x4fd0, 0x2f57, 0x24c0, 0xc71a, 0x3bbe, 0xcccd, 0x0, 0x0);
        gbc.writeMem(0x4fd0, { 0xe, 0x39 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2f57, gbc.sp());
        EXPECT(0x4fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0263
        gbc.setState(0xe803, 0x161a, 0xf810, 0xad4f, 0xc650, 0x119, 0x0, 0x0);
        gbc.writeMem(0xe803, { 0xe, 0xc3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x161a, gbc.sp());
        EXPECT(0xe805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe803));
        EXPECT(0xc3, gbc.readMem(0xe804));
        // 0E 0264
        gbc.setState(0x746e, 0x82a7, 0x80d0, 0xb89, 0xbd43, 0x4c54, 0x1, 0x1);
        gbc.writeMem(0x746e, { 0xe, 0xdd });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x82a7, gbc.sp());
        EXPECT(0x7470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0265
        gbc.setState(0xf9c, 0xdfd5, 0xbe70, 0x4e3, 0xfcf8, 0x47ac, 0x0, 0x0);
        gbc.writeMem(0xf9c, { 0xe, 0xb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdfd5, gbc.sp());
        EXPECT(0xf9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0266
        gbc.setState(0x43ee, 0x399b, 0x8fc0, 0xb7ca, 0x241, 0xb96c, 0x0, 0x1);
        gbc.writeMem(0x43ee, { 0xe, 0x9c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x399b, gbc.sp());
        EXPECT(0x43f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0267
        gbc.setState(0x5458, 0xd27, 0xc7d0, 0x534d, 0xec7d, 0x593, 0x1, 0x0);
        gbc.writeMem(0x5458, { 0xe, 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd27, gbc.sp());
        EXPECT(0x545a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0268
        gbc.setState(0xd2cb, 0xce22, 0x8290, 0xe3ce, 0x2dcb, 0xebd, 0x1, 0x0);
        gbc.writeMem(0xd2cb, { 0xe, 0x97 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xce22, gbc.sp());
        EXPECT(0xd2cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd2cb));
        EXPECT(0x97, gbc.readMem(0xd2cc));
        // 0E 0269
        gbc.setState(0x581a, 0x85c9, 0x4e00, 0xa340, 0x5693, 0x8c8e, 0x0, 0x1);
        gbc.writeMem(0x581a, { 0xe, 0xa4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x85c9, gbc.sp());
        EXPECT(0x581c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 026A
        gbc.setState(0xd86c, 0x81f2, 0xc4c0, 0xd333, 0xff91, 0x27f5, 0x1, 0x0);
        gbc.writeMem(0xd86c, { 0xe, 0x52 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x81f2, gbc.sp());
        EXPECT(0xd86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd86c));
        EXPECT(0x52, gbc.readMem(0xd86d));
        // 0E 026B
        gbc.setState(0x36fd, 0xc5e5, 0x230, 0xa6d6, 0x5a03, 0xd845, 0x0, 0x0);
        gbc.writeMem(0x36fd, { 0xe, 0x19 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc5e5, gbc.sp());
        EXPECT(0x36ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 026C
        gbc.setState(0x1db, 0xfa55, 0x5900, 0xf4a3, 0x1b0b, 0x7110, 0x1, 0x1);
        gbc.writeMem(0x1db, { 0xe, 0x60 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfa55, gbc.sp());
        EXPECT(0x1dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 026D
        gbc.setState(0x3987, 0xcc86, 0x2920, 0xa7f5, 0x2465, 0x4ab1, 0x0, 0x0);
        gbc.writeMem(0x3987, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcc86, gbc.sp());
        EXPECT(0x3989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 026E
        gbc.setState(0x64c8, 0x35b7, 0x21d0, 0x28bb, 0x660c, 0x5e30, 0x0, 0x1);
        gbc.writeMem(0x64c8, { 0xe, 0xad });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x35b7, gbc.sp());
        EXPECT(0x64ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0270
        gbc.setState(0x492e, 0x4639, 0xc650, 0xaa32, 0xfd84, 0x10ba, 0x1, 0x1);
        gbc.writeMem(0x492e, { 0xe, 0xaf });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4639, gbc.sp());
        EXPECT(0x4930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0271
        gbc.setState(0xb170, 0xe6f7, 0x17a0, 0xb7e2, 0xc94f, 0xe94e, 0x1, 0x0);
        gbc.writeMem(0xb170, { 0xe, 0x5f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe6f7, gbc.sp());
        EXPECT(0xb172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb170));
        EXPECT(0x5f, gbc.readMem(0xb171));
        // 0E 0272
        gbc.setState(0x280c, 0x9808, 0xcfc0, 0x4a6b, 0xc797, 0xd47, 0x0, 0x0);
        gbc.writeMem(0x280c, { 0xe, 0x38 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9808, gbc.sp());
        EXPECT(0x280e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0273
        gbc.setState(0x8cd, 0x4bb1, 0x4190, 0xa2aa, 0xd146, 0xe45b, 0x0, 0x1);
        gbc.writeMem(0x8cd, { 0xe, 0x6c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4bb1, gbc.sp());
        EXPECT(0x8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0275
        gbc.setState(0xb689, 0xe9fc, 0x3df0, 0xd0a8, 0xdf21, 0x1fa2, 0x0, 0x1);
        gbc.writeMem(0xb689, { 0xe, 0xfd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe9fc, gbc.sp());
        EXPECT(0xb68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb689));
        EXPECT(0xfd, gbc.readMem(0xb68a));
        // 0E 0276
        gbc.setState(0x25c9, 0x3e0d, 0x1000, 0xe5ba, 0x4b09, 0xf80, 0x0, 0x1);
        gbc.writeMem(0x25c9, { 0xe, 0x5f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3e0d, gbc.sp());
        EXPECT(0x25cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0277
        gbc.setState(0x5eb6, 0xca7e, 0x3280, 0x1d5, 0x53a4, 0x1b11, 0x1, 0x0);
        gbc.writeMem(0x5eb6, { 0xe, 0x60 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xca7e, gbc.sp());
        EXPECT(0x5eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0278
        gbc.setState(0xeb23, 0xf2ac, 0x1ca0, 0xd41a, 0xcf8, 0x74bb, 0x1, 0x1);
        gbc.writeMem(0xeb23, { 0xe, 0xe2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf2ac, gbc.sp());
        EXPECT(0xeb25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xeb23));
        EXPECT(0xe2, gbc.readMem(0xeb24));
        // 0E 0279
        gbc.setState(0x86b7, 0x8b41, 0xedf0, 0x2b3b, 0x85e6, 0x555b, 0x0, 0x1);
        gbc.writeMem(0x86b7, { 0xe, 0xbb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8b41, gbc.sp());
        EXPECT(0x86b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x86b7));
        EXPECT(0xbb, gbc.readMem(0x86b8));
        // 0E 027A
        gbc.setState(0xedb, 0x408a, 0xe400, 0x6d00, 0x9c47, 0x7fbd, 0x1, 0x1);
        gbc.writeMem(0xedb, { 0xe, 0x21 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x408a, gbc.sp());
        EXPECT(0xedd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 027B
        gbc.setState(0x1678, 0xd655, 0x5090, 0x3cd5, 0xfade, 0x75c5, 0x0, 0x1);
        gbc.writeMem(0x1678, { 0xe, 0x6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd655, gbc.sp());
        EXPECT(0x167a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 027C
        gbc.setState(0xad11, 0x78b3, 0xfe30, 0x4621, 0xdb8f, 0x10f6, 0x0, 0x0);
        gbc.writeMem(0xad11, { 0xe, 0xee });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x78b3, gbc.sp());
        EXPECT(0xad13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xad11));
        EXPECT(0xee, gbc.readMem(0xad12));
        // 0E 027D
        gbc.setState(0x78ac, 0xdeb7, 0x27c0, 0x6088, 0xaf4d, 0xef8d, 0x1, 0x0);
        gbc.writeMem(0x78ac, { 0xe, 0xac });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdeb7, gbc.sp());
        EXPECT(0x78ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 027E
        gbc.setState(0xa503, 0xc8c3, 0xf3b0, 0x2202, 0xac6c, 0xdeef, 0x1, 0x0);
        gbc.writeMem(0xa503, { 0xe, 0xda });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc8c3, gbc.sp());
        EXPECT(0xa505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa503));
        EXPECT(0xda, gbc.readMem(0xa504));
        // 0E 027F
        gbc.setState(0xca7c, 0x37c8, 0xb7d0, 0xe4da, 0xbe9f, 0x621c, 0x0, 0x1);
        gbc.writeMem(0xca7c, { 0xe, 0x88 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x37c8, gbc.sp());
        EXPECT(0xca7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xca7c));
        EXPECT(0x88, gbc.readMem(0xca7d));
        // 0E 0280
        gbc.setState(0xf00, 0xd466, 0xd5c0, 0xd714, 0x8cf0, 0x1ac3, 0x0, 0x0);
        gbc.writeMem(0xf00, { 0xe, 0x5d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd466, gbc.sp());
        EXPECT(0xf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0281
        gbc.setState(0xa5d4, 0xa96d, 0x1ce0, 0xbf29, 0xab0b, 0x9c23, 0x0, 0x1);
        gbc.writeMem(0xa5d4, { 0xe, 0xbd });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa96d, gbc.sp());
        EXPECT(0xa5d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa5d4));
        EXPECT(0xbd, gbc.readMem(0xa5d5));
        // 0E 0282
        gbc.setState(0xa6e9, 0x3db3, 0x51d0, 0xc021, 0x42cd, 0x2cef, 0x0, 0x1);
        gbc.writeMem(0xa6e9, { 0xe, 0x1f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3db3, gbc.sp());
        EXPECT(0xa6eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa6e9));
        EXPECT(0x1f, gbc.readMem(0xa6ea));
        // 0E 0283
        gbc.setState(0x285a, 0xb554, 0x8e30, 0xcabd, 0xeb04, 0x7e7d, 0x0, 0x1);
        gbc.writeMem(0x285a, { 0xe, 0xce });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb554, gbc.sp());
        EXPECT(0x285c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0284
        gbc.setState(0xb8c9, 0x1459, 0x6970, 0x34bf, 0x5b5b, 0x8cf0, 0x0, 0x1);
        gbc.writeMem(0xb8c9, { 0xe, 0x1c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1459, gbc.sp());
        EXPECT(0xb8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb8c9));
        EXPECT(0x1c, gbc.readMem(0xb8ca));
        // 0E 0285
        gbc.setState(0xe26a, 0x69b8, 0xb060, 0xa04b, 0xf122, 0x9c76, 0x0, 0x0);
        gbc.writeMem(0xe26a, { 0xe, 0x3a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x69b8, gbc.sp());
        EXPECT(0xe26c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe26a));
        EXPECT(0x3a, gbc.readMem(0xe26b));
        // 0E 0286
        gbc.setState(0x1530, 0xda6f, 0x2fa0, 0xd365, 0x704, 0xb38, 0x0, 0x0);
        gbc.writeMem(0x1530, { 0xe, 0x7e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xda6f, gbc.sp());
        EXPECT(0x1532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0287
        gbc.setState(0x4e58, 0x1791, 0x76a0, 0x6d0f, 0x9cf2, 0xaf47, 0x0, 0x0);
        gbc.writeMem(0x4e58, { 0xe, 0xb0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1791, gbc.sp());
        EXPECT(0x4e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0288
        gbc.setState(0xafc9, 0x7bfe, 0xad80, 0x428b, 0xde2e, 0xd65c, 0x0, 0x0);
        gbc.writeMem(0xafc9, { 0xe, 0x47 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7bfe, gbc.sp());
        EXPECT(0xafcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xafc9));
        EXPECT(0x47, gbc.readMem(0xafca));
        // 0E 028A
        gbc.setState(0xa9c1, 0x7df5, 0x9090, 0x3dac, 0x6eb5, 0x6016, 0x1, 0x1);
        gbc.writeMem(0xa9c1, { 0xe, 0x37 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7df5, gbc.sp());
        EXPECT(0xa9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa9c1));
        EXPECT(0x37, gbc.readMem(0xa9c2));
        // 0E 028B
        gbc.setState(0x8ecd, 0xb149, 0xd490, 0x8563, 0xf185, 0x2120, 0x1, 0x1);
        gbc.writeMem(0x8ecd, { 0xe, 0x85 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb149, gbc.sp());
        EXPECT(0x8ecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8ecd));
        EXPECT(0x85, gbc.readMem(0x8ece));
        // 0E 028C
        gbc.setState(0x1c42, 0xe0e7, 0xd5c0, 0x6ed8, 0xe3bb, 0x2e2e, 0x1, 0x0);
        gbc.writeMem(0x1c42, { 0xe, 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe0e7, gbc.sp());
        EXPECT(0x1c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 028D
        gbc.setState(0x916d, 0x78e8, 0x920, 0x2814, 0xb148, 0x5eb7, 0x1, 0x0);
        gbc.writeMem(0x916d, { 0xe, 0xc7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x78e8, gbc.sp());
        EXPECT(0x916f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x916d));
        EXPECT(0xc7, gbc.readMem(0x916e));
        // 0E 028E
        gbc.setState(0x5082, 0xa4c1, 0xdc00, 0x9c80, 0x2b13, 0xc96f, 0x1, 0x0);
        gbc.writeMem(0x5082, { 0xe, 0x89 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa4c1, gbc.sp());
        EXPECT(0x5084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 028F
        gbc.setState(0xb0f5, 0x6995, 0x7540, 0x21c9, 0xd452, 0xafee, 0x1, 0x1);
        gbc.writeMem(0xb0f5, { 0xe, 0x3c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6995, gbc.sp());
        EXPECT(0xb0f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb0f5));
        EXPECT(0x3c, gbc.readMem(0xb0f6));
        // 0E 0290
        gbc.setState(0xe5ed, 0x9a8c, 0x580, 0xae6c, 0xee03, 0xdd80, 0x1, 0x0);
        gbc.writeMem(0xe5ed, { 0xe, 0x4f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9a8c, gbc.sp());
        EXPECT(0xe5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe5ed));
        EXPECT(0x4f, gbc.readMem(0xe5ee));
        // 0E 0291
        gbc.setState(0xaedb, 0xd7f2, 0x60, 0xed36, 0xef8d, 0x6a3d, 0x1, 0x1);
        gbc.writeMem(0xaedb, { 0xe, 0x7e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd7f2, gbc.sp());
        EXPECT(0xaedd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xaedb));
        EXPECT(0x7e, gbc.readMem(0xaedc));
        // 0E 0292
        gbc.setState(0x3b29, 0x3441, 0xd930, 0x879d, 0x8838, 0x25e0, 0x1, 0x1);
        gbc.writeMem(0x3b29, { 0xe, 0x67 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3441, gbc.sp());
        EXPECT(0x3b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0293
        gbc.setState(0x4488, 0xa5cb, 0xf6e0, 0x3fec, 0x46e, 0x486a, 0x0, 0x0);
        gbc.writeMem(0x4488, { 0xe, 0x34 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa5cb, gbc.sp());
        EXPECT(0x448a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0294
        gbc.setState(0x8c78, 0x1bff, 0xc550, 0xabb0, 0xe7dc, 0xb024, 0x0, 0x0);
        gbc.writeMem(0x8c78, { 0xe, 0xd5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1bff, gbc.sp());
        EXPECT(0x8c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8c78));
        EXPECT(0xd5, gbc.readMem(0x8c79));
        // 0E 0295
        gbc.setState(0x6c0a, 0x85f8, 0xcce0, 0x8bdf, 0x23de, 0xd95a, 0x0, 0x1);
        gbc.writeMem(0x6c0a, { 0xe, 0x98 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x85f8, gbc.sp());
        EXPECT(0x6c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0296
        gbc.setState(0x8af4, 0x87b8, 0xf2f0, 0x4767, 0xdf58, 0xe536, 0x0, 0x1);
        gbc.writeMem(0x8af4, { 0xe, 0xf7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x87b8, gbc.sp());
        EXPECT(0x8af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8af4));
        EXPECT(0xf7, gbc.readMem(0x8af5));
        // 0E 0297
        gbc.setState(0x4ee1, 0x92c2, 0xbc20, 0x2793, 0x10be, 0x1bf6, 0x1, 0x1);
        gbc.writeMem(0x4ee1, { 0xe, 0x2e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x92c2, gbc.sp());
        EXPECT(0x4ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0298
        gbc.setState(0xd8f, 0x8cb2, 0x7040, 0xa9b, 0x338d, 0xbfad, 0x0, 0x0);
        gbc.writeMem(0xd8f, { 0xe, 0x64 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8cb2, gbc.sp());
        EXPECT(0xd91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0299
        gbc.setState(0x2cb, 0xb4dd, 0x8430, 0x6a5d, 0xe911, 0x514f, 0x0, 0x1);
        gbc.writeMem(0x2cb, { 0xe, 0x7b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb4dd, gbc.sp());
        EXPECT(0x2cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 029A
        gbc.setState(0xa0a4, 0x8b8f, 0x5cf0, 0x5243, 0xa337, 0xd187, 0x1, 0x1);
        gbc.writeMem(0xa0a4, { 0xe, 0x20 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8b8f, gbc.sp());
        EXPECT(0xa0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa0a4));
        EXPECT(0x20, gbc.readMem(0xa0a5));
        // 0E 029B
        gbc.setState(0x4505, 0xfb0, 0x7cf0, 0xdfa6, 0x4465, 0x9744, 0x1, 0x0);
        gbc.writeMem(0x4505, { 0xe, 0xa6 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfb0, gbc.sp());
        EXPECT(0x4507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 029C
        gbc.setState(0x3390, 0x4a8, 0xa780, 0xa6ce, 0xa061, 0x8df8, 0x0, 0x1);
        gbc.writeMem(0x3390, { 0xe, 0xd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4a8, gbc.sp());
        EXPECT(0x3392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 029D
        gbc.setState(0xc204, 0x144a, 0x8dc0, 0x9c92, 0xe4f1, 0x3521, 0x0, 0x1);
        gbc.writeMem(0xc204, { 0xe, 0x6c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x144a, gbc.sp());
        EXPECT(0xc206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc204));
        EXPECT(0x6c, gbc.readMem(0xc205));
        // 0E 029E
        gbc.setState(0x48e2, 0x19c8, 0x5b00, 0xafaa, 0x43ce, 0x7564, 0x0, 0x0);
        gbc.writeMem(0x48e2, { 0xe, 0xa5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x19c8, gbc.sp());
        EXPECT(0x48e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 029F
        gbc.setState(0xd56f, 0x89fd, 0xa780, 0x925, 0x1b32, 0x9991, 0x1, 0x0);
        gbc.writeMem(0xd56f, { 0xe, 0xb2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x89fd, gbc.sp());
        EXPECT(0xd571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd56f));
        EXPECT(0xb2, gbc.readMem(0xd570));
        // 0E 02A0
        gbc.setState(0x222b, 0x248e, 0xc500, 0x4f87, 0xcc47, 0xdc79, 0x1, 0x0);
        gbc.writeMem(0x222b, { 0xe, 0x9f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x248e, gbc.sp());
        EXPECT(0x222d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02A1
        gbc.setState(0xdf8f, 0x344c, 0x4250, 0x51e8, 0x39ff, 0xdaad, 0x1, 0x1);
        gbc.writeMem(0xdf8f, { 0xe, 0x55 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x344c, gbc.sp());
        EXPECT(0xdf91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdf8f));
        EXPECT(0x55, gbc.readMem(0xdf90));
        // 0E 02A2
        gbc.setState(0x3815, 0xdce8, 0x2740, 0x30e5, 0xe4af, 0xa48b, 0x1, 0x1);
        gbc.writeMem(0x3815, { 0xe, 0x55 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdce8, gbc.sp());
        EXPECT(0x3817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02A3
        gbc.setState(0x38af, 0x9d0, 0x6ff0, 0xef2, 0xe032, 0xbf80, 0x1, 0x0);
        gbc.writeMem(0x38af, { 0xe, 0x57 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9d0, gbc.sp());
        EXPECT(0x38b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02A4
        gbc.setState(0x33ed, 0x51a2, 0xb730, 0xe186, 0x8bdc, 0x2a78, 0x0, 0x0);
        gbc.writeMem(0x33ed, { 0xe, 0x96 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x51a2, gbc.sp());
        EXPECT(0x33ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02A5
        gbc.setState(0x5685, 0xa9fd, 0x360, 0x977c, 0x8484, 0x410d, 0x1, 0x0);
        gbc.writeMem(0x5685, { 0xe, 0xf1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa9fd, gbc.sp());
        EXPECT(0x5687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02A6
        gbc.setState(0x251b, 0xb794, 0x4ed0, 0xf496, 0x7913, 0x3469, 0x1, 0x1);
        gbc.writeMem(0x251b, { 0xe, 0xff });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb794, gbc.sp());
        EXPECT(0x251d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02A8
        gbc.setState(0x31d2, 0xb4e6, 0x70e0, 0x92a8, 0xfb8a, 0xab8c, 0x1, 0x1);
        gbc.writeMem(0x31d2, { 0xe, 0x99 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb4e6, gbc.sp());
        EXPECT(0x31d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02A9
        gbc.setState(0xae98, 0xc222, 0x560, 0xd1d, 0x8326, 0xac8f, 0x0, 0x1);
        gbc.writeMem(0xae98, { 0xe, 0x2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc222, gbc.sp());
        EXPECT(0xae9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xae98));
        EXPECT(0x2, gbc.readMem(0xae99));
        // 0E 02AA
        gbc.setState(0xcaab, 0x3632, 0xe1b0, 0x9f09, 0xf2b8, 0x8154, 0x0, 0x0);
        gbc.writeMem(0xcaab, { 0xe, 0x56 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3632, gbc.sp());
        EXPECT(0xcaad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcaab));
        EXPECT(0x56, gbc.readMem(0xcaac));
        // 0E 02AB
        gbc.setState(0x7e3, 0x2006, 0xab00, 0x578b, 0xdab0, 0xba8, 0x1, 0x1);
        gbc.writeMem(0x7e3, { 0xe, 0x64 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2006, gbc.sp());
        EXPECT(0x7e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02AC
        gbc.setState(0x7291, 0x386e, 0x27e0, 0xeb04, 0x74d0, 0xebec, 0x1, 0x1);
        gbc.writeMem(0x7291, { 0xe, 0x7b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x386e, gbc.sp());
        EXPECT(0x7293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02AD
        gbc.setState(0x775f, 0x9067, 0xf660, 0x1482, 0x731d, 0xfe6c, 0x1, 0x1);
        gbc.writeMem(0x775f, { 0xe, 0xa7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9067, gbc.sp());
        EXPECT(0x7761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02AE
        gbc.setState(0xda20, 0x4f71, 0x3c70, 0x49aa, 0xaebc, 0xbc7c, 0x1, 0x0);
        gbc.writeMem(0xda20, { 0xe, 0x57 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4f71, gbc.sp());
        EXPECT(0xda22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xda20));
        EXPECT(0x57, gbc.readMem(0xda21));
        // 0E 02AF
        gbc.setState(0x56b1, 0xbfe6, 0xc2a0, 0x1bb7, 0xa81a, 0x32fc, 0x1, 0x0);
        gbc.writeMem(0x56b1, { 0xe, 0xa4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbfe6, gbc.sp());
        EXPECT(0x56b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02B0
        gbc.setState(0xbc39, 0x87e7, 0x61e0, 0x5be3, 0xd4ac, 0xe773, 0x1, 0x0);
        gbc.writeMem(0xbc39, { 0xe, 0xdb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x87e7, gbc.sp());
        EXPECT(0xbc3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbc39));
        EXPECT(0xdb, gbc.readMem(0xbc3a));
        // 0E 02B1
        gbc.setState(0x6d3a, 0x2ffc, 0x2340, 0x7b85, 0xd8a0, 0xf08f, 0x0, 0x1);
        gbc.writeMem(0x6d3a, { 0xe, 0x58 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2ffc, gbc.sp());
        EXPECT(0x6d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02B2
        gbc.setState(0x35e2, 0xc8e1, 0x8780, 0xed18, 0xa3b3, 0x67b8, 0x0, 0x0);
        gbc.writeMem(0x35e2, { 0xe, 0xd2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc8e1, gbc.sp());
        EXPECT(0x35e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02B3
        gbc.setState(0xb537, 0x45cc, 0x7960, 0xf68f, 0x95cf, 0xccda, 0x0, 0x0);
        gbc.writeMem(0xb537, { 0xe, 0xe5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x45cc, gbc.sp());
        EXPECT(0xb539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb537));
        EXPECT(0xe5, gbc.readMem(0xb538));
        // 0E 02B4
        gbc.setState(0x4d9d, 0x2f7b, 0xe050, 0x10f5, 0x8e21, 0x27ec, 0x0, 0x0);
        gbc.writeMem(0x4d9d, { 0xe, 0x45 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2f7b, gbc.sp());
        EXPECT(0x4d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02B5
        gbc.setState(0xce2b, 0x9e4f, 0xc520, 0x93dd, 0x99fb, 0xcd7e, 0x1, 0x1);
        gbc.writeMem(0xce2b, { 0xe, 0x7b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9e4f, gbc.sp());
        EXPECT(0xce2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xce2b));
        EXPECT(0x7b, gbc.readMem(0xce2c));
        // 0E 02B6
        gbc.setState(0xef6f, 0xa02a, 0xa020, 0x5b88, 0x9246, 0xf134, 0x1, 0x0);
        gbc.writeMem(0xef6f, { 0xe, 0x63 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa02a, gbc.sp());
        EXPECT(0xef71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xef6f));
        EXPECT(0x63, gbc.readMem(0xef70));
        // 0E 02B7
        gbc.setState(0xadae, 0x909f, 0x84f0, 0x709d, 0x36b2, 0x523f, 0x1, 0x0);
        gbc.writeMem(0xadae, { 0xe, 0x51 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x909f, gbc.sp());
        EXPECT(0xadb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xadae));
        EXPECT(0x51, gbc.readMem(0xadaf));
        // 0E 02B8
        gbc.setState(0x3f0d, 0x5693, 0x13b0, 0x2379, 0xeae4, 0x6cd5, 0x0, 0x1);
        gbc.writeMem(0x3f0d, { 0xe, 0x52 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5693, gbc.sp());
        EXPECT(0x3f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02B9
        gbc.setState(0x3adc, 0xb08e, 0x2880, 0xa8d0, 0x67ce, 0x3061, 0x0, 0x0);
        gbc.writeMem(0x3adc, { 0xe, 0xf2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb08e, gbc.sp());
        EXPECT(0x3ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02BA
        gbc.setState(0x8e25, 0x5aaf, 0xe620, 0x9de8, 0x69b8, 0x383d, 0x1, 0x1);
        gbc.writeMem(0x8e25, { 0xe, 0xc4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5aaf, gbc.sp());
        EXPECT(0x8e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8e25));
        EXPECT(0xc4, gbc.readMem(0x8e26));
        // 0E 02BB
        gbc.setState(0x97ef, 0x9e07, 0x9670, 0xbfd6, 0xbcb3, 0xb1c9, 0x1, 0x1);
        gbc.writeMem(0x97ef, { 0xe, 0xf0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9e07, gbc.sp());
        EXPECT(0x97f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x97ef));
        EXPECT(0xf0, gbc.readMem(0x97f0));
        // 0E 02BC
        gbc.setState(0xd094, 0xa1c8, 0xc130, 0x7c25, 0x2601, 0x1d2a, 0x0, 0x0);
        gbc.writeMem(0xd094, { 0xe, 0x2f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa1c8, gbc.sp());
        EXPECT(0xd096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd094));
        EXPECT(0x2f, gbc.readMem(0xd095));
        // 0E 02BE
        gbc.setState(0x66f4, 0xf992, 0xdb0, 0xc375, 0xf471, 0x8b14, 0x0, 0x0);
        gbc.writeMem(0x66f4, { 0xe, 0x74 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf992, gbc.sp());
        EXPECT(0x66f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02C0
        gbc.setState(0x27d4, 0xcf81, 0x7cf0, 0x76c2, 0xdde1, 0x9e8, 0x0, 0x0);
        gbc.writeMem(0x27d4, { 0xe, 0x61 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcf81, gbc.sp());
        EXPECT(0x27d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02C1
        gbc.setState(0x6230, 0xd8f6, 0xb8f0, 0x7068, 0xb41d, 0x4555, 0x1, 0x1);
        gbc.writeMem(0x6230, { 0xe, 0xce });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd8f6, gbc.sp());
        EXPECT(0x6232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02C2
        gbc.setState(0xafc3, 0xdc4b, 0x2df0, 0x5496, 0xc263, 0x3718, 0x0, 0x0);
        gbc.writeMem(0xafc3, { 0xe, 0x3d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdc4b, gbc.sp());
        EXPECT(0xafc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xafc3));
        EXPECT(0x3d, gbc.readMem(0xafc4));
        // 0E 02C3
        gbc.setState(0xddb, 0x5efc, 0x3d80, 0x520d, 0x1843, 0xd77a, 0x1, 0x0);
        gbc.writeMem(0xddb, { 0xe, 0x6e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5efc, gbc.sp());
        EXPECT(0xddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02C4
        gbc.setState(0x67c7, 0x4732, 0x4c60, 0x4a51, 0xf347, 0x842f, 0x0, 0x0);
        gbc.writeMem(0x67c7, { 0xe, 0x1e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4732, gbc.sp());
        EXPECT(0x67c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02C5
        gbc.setState(0xdb80, 0xff44, 0x44e0, 0xfac5, 0xfe05, 0xac5a, 0x0, 0x0);
        gbc.writeMem(0xdb80, { 0xe, 0x1e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xff44, gbc.sp());
        EXPECT(0xdb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdb80));
        EXPECT(0x1e, gbc.readMem(0xdb81));
        // 0E 02C6
        gbc.setState(0xb4c8, 0xc5ef, 0xa720, 0xabaa, 0x98a9, 0xd0ea, 0x1, 0x0);
        gbc.writeMem(0xb4c8, { 0xe, 0xfd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc5ef, gbc.sp());
        EXPECT(0xb4ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb4c8));
        EXPECT(0xfd, gbc.readMem(0xb4c9));
        // 0E 02C7
        gbc.setState(0x8084, 0x5e8f, 0x1190, 0x39b5, 0xa6b5, 0x9e93, 0x1, 0x1);
        gbc.writeMem(0x8084, { 0xe, 0x5a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5e8f, gbc.sp());
        EXPECT(0x8086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8084));
        EXPECT(0x5a, gbc.readMem(0x8085));
        // 0E 02C8
        gbc.setState(0xcbdb, 0xefff, 0xd9b0, 0x9d03, 0xa84c, 0x62c2, 0x1, 0x1);
        gbc.writeMem(0xcbdb, { 0xe, 0x69 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xefff, gbc.sp());
        EXPECT(0xcbdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcbdb));
        EXPECT(0x69, gbc.readMem(0xcbdc));
        // 0E 02C9
        gbc.setState(0x2872, 0x7fb7, 0x95f0, 0x58d0, 0x69e0, 0xb982, 0x0, 0x0);
        gbc.writeMem(0x2872, { 0xe, 0x14 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7fb7, gbc.sp());
        EXPECT(0x2874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02CA
        gbc.setState(0xd1b1, 0x7ecd, 0xf850, 0x52ca, 0xa83d, 0xfdb3, 0x0, 0x0);
        gbc.writeMem(0xd1b1, { 0xe, 0x3b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7ecd, gbc.sp());
        EXPECT(0xd1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd1b1));
        EXPECT(0x3b, gbc.readMem(0xd1b2));
        // 0E 02CB
        gbc.setState(0x7f70, 0x61d7, 0xb6a0, 0xbd4e, 0x3773, 0xc8ad, 0x0, 0x1);
        gbc.writeMem(0x7f70, { 0xe, 0xc7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x61d7, gbc.sp());
        EXPECT(0x7f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02CC
        gbc.setState(0x93a2, 0xd055, 0xeb40, 0x66b5, 0x6525, 0x244c, 0x1, 0x0);
        gbc.writeMem(0x93a2, { 0xe, 0x1e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd055, gbc.sp());
        EXPECT(0x93a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x93a2));
        EXPECT(0x1e, gbc.readMem(0x93a3));
        // 0E 02CD
        gbc.setState(0xd470, 0xc220, 0xb540, 0xb77d, 0xa9b2, 0x7a41, 0x1, 0x0);
        gbc.writeMem(0xd470, { 0xe, 0xc0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc220, gbc.sp());
        EXPECT(0xd472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd470));
        EXPECT(0xc0, gbc.readMem(0xd471));
        // 0E 02CE
        gbc.setState(0x8ca4, 0x9491, 0xf3a0, 0xabf1, 0x5ccb, 0xa78e, 0x1, 0x0);
        gbc.writeMem(0x8ca4, { 0xe, 0xa0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9491, gbc.sp());
        EXPECT(0x8ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8ca4));
        EXPECT(0xa0, gbc.readMem(0x8ca5));
        // 0E 02CF
        gbc.setState(0xa972, 0x63ee, 0x9d20, 0x6109, 0x211f, 0x51fc, 0x1, 0x0);
        gbc.writeMem(0xa972, { 0xe, 0x5b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x63ee, gbc.sp());
        EXPECT(0xa974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa972));
        EXPECT(0x5b, gbc.readMem(0xa973));
        // 0E 02D0
        gbc.setState(0xc8f5, 0x537f, 0xfa50, 0xa1ee, 0x2892, 0xf4ff, 0x0, 0x1);
        gbc.writeMem(0xc8f5, { 0xe, 0x52 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x537f, gbc.sp());
        EXPECT(0xc8f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc8f5));
        EXPECT(0x52, gbc.readMem(0xc8f6));
        // 0E 02D1
        gbc.setState(0x8ffb, 0xccbc, 0x760, 0x9252, 0xf581, 0xb32e, 0x0, 0x0);
        gbc.writeMem(0x8ffb, { 0xe, 0x6e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xccbc, gbc.sp());
        EXPECT(0x8ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8ffb));
        EXPECT(0x6e, gbc.readMem(0x8ffc));
        // 0E 02D2
        gbc.setState(0x2ea6, 0xd660, 0xcc10, 0x8ad5, 0x7cb9, 0x5096, 0x1, 0x1);
        gbc.writeMem(0x2ea6, { 0xe, 0x15 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd660, gbc.sp());
        EXPECT(0x2ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02D3
        gbc.setState(0x5a4f, 0xedd2, 0xe2a0, 0xbca8, 0x4f2c, 0xec70, 0x1, 0x1);
        gbc.writeMem(0x5a4f, { 0xe, 0xb3 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xedd2, gbc.sp());
        EXPECT(0x5a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02D4
        gbc.setState(0xba28, 0xa731, 0xa1a0, 0x7f2d, 0x6ec4, 0xc789, 0x0, 0x0);
        gbc.writeMem(0xba28, { 0xe, 0x21 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa731, gbc.sp());
        EXPECT(0xba2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xba28));
        EXPECT(0x21, gbc.readMem(0xba29));
        // 0E 02D6
        gbc.setState(0x4cb4, 0x17b4, 0x8250, 0xa702, 0x1e31, 0x5e5d, 0x1, 0x0);
        gbc.writeMem(0x4cb4, { 0xe, 0x7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x17b4, gbc.sp());
        EXPECT(0x4cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02D7
        gbc.setState(0x3902, 0xc9cc, 0x64c0, 0x4c1f, 0x8888, 0x86e, 0x0, 0x0);
        gbc.writeMem(0x3902, { 0xe, 0x32 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc9cc, gbc.sp());
        EXPECT(0x3904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02D8
        gbc.setState(0xcf8e, 0x55c2, 0xecb0, 0x2f11, 0x91bf, 0x157d, 0x1, 0x1);
        gbc.writeMem(0xcf8e, { 0xe, 0xf5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x55c2, gbc.sp());
        EXPECT(0xcf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcf8e));
        EXPECT(0xf5, gbc.readMem(0xcf8f));
        // 0E 02D9
        gbc.setState(0xe333, 0x66aa, 0x4d90, 0x17ad, 0x645d, 0xa0b5, 0x1, 0x0);
        gbc.writeMem(0xe333, { 0xe, 0x5e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x66aa, gbc.sp());
        EXPECT(0xe335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe333));
        EXPECT(0x5e, gbc.readMem(0xe334));
        // 0E 02DB
        gbc.setState(0xdda8, 0x3d3, 0xf720, 0x1e94, 0x486d, 0x8bae, 0x0, 0x1);
        gbc.writeMem(0xdda8, { 0xe, 0x3c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3d3, gbc.sp());
        EXPECT(0xddaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdda8));
        EXPECT(0x3c, gbc.readMem(0xdda9));
        // 0E 02DC
        gbc.setState(0x1e7d, 0x9c0f, 0xb190, 0xe310, 0xcae1, 0x40bc, 0x1, 0x0);
        gbc.writeMem(0x1e7d, { 0xe, 0x6 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9c0f, gbc.sp());
        EXPECT(0x1e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02DD
        gbc.setState(0x488f, 0x193e, 0x650, 0x5ef6, 0x5ef5, 0x45cb, 0x1, 0x0);
        gbc.writeMem(0x488f, { 0xe, 0x8f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x193e, gbc.sp());
        EXPECT(0x4891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02DE
        gbc.setState(0x7e7, 0x1afa, 0x2370, 0x8612, 0xb86f, 0x6af1, 0x0, 0x0);
        gbc.writeMem(0x7e7, { 0xe, 0x58 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1afa, gbc.sp());
        EXPECT(0x7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02DF
        gbc.setState(0xb2ad, 0x66ec, 0xa120, 0x89b3, 0xf11f, 0x56f8, 0x0, 0x0);
        gbc.writeMem(0xb2ad, { 0xe, 0xd6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x66ec, gbc.sp());
        EXPECT(0xb2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb2ad));
        EXPECT(0xd6, gbc.readMem(0xb2ae));
        // 0E 02E0
        gbc.setState(0xb4ba, 0x6a17, 0xcf80, 0x9b3d, 0x15a8, 0x4451, 0x0, 0x1);
        gbc.writeMem(0xb4ba, { 0xe, 0x5a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6a17, gbc.sp());
        EXPECT(0xb4bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb4ba));
        EXPECT(0x5a, gbc.readMem(0xb4bb));
        // 0E 02E1
        gbc.setState(0x9630, 0x9794, 0x7030, 0x8cf6, 0xd9a5, 0xad0b, 0x0, 0x0);
        gbc.writeMem(0x9630, { 0xe, 0x13 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9794, gbc.sp());
        EXPECT(0x9632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9630));
        EXPECT(0x13, gbc.readMem(0x9631));
        // 0E 02E2
        gbc.setState(0xc0cf, 0x1fd7, 0x3a40, 0x774e, 0xfa4b, 0x84b6, 0x0, 0x0);
        gbc.writeMem(0xc0cf, { 0xe, 0x3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1fd7, gbc.sp());
        EXPECT(0xc0d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc0cf));
        EXPECT(0x3, gbc.readMem(0xc0d0));
        // 0E 02E3
        gbc.setState(0x86c7, 0xe54f, 0xd6d0, 0x5103, 0x591, 0x3239, 0x0, 0x1);
        gbc.writeMem(0x86c7, { 0xe, 0x65 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe54f, gbc.sp());
        EXPECT(0x86c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x86c7));
        EXPECT(0x65, gbc.readMem(0x86c8));
        // 0E 02E4
        gbc.setState(0xabec, 0xac6, 0x8630, 0x594f, 0xdd70, 0xd52b, 0x0, 0x1);
        gbc.writeMem(0xabec, { 0xe, 0x4a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xac6, gbc.sp());
        EXPECT(0xabee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xabec));
        EXPECT(0x4a, gbc.readMem(0xabed));
        // 0E 02E5
        gbc.setState(0x324f, 0xfb18, 0xf3f0, 0x30ce, 0x44a2, 0x4cfd, 0x1, 0x1);
        gbc.writeMem(0x324f, { 0xe, 0x77 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfb18, gbc.sp());
        EXPECT(0x3251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02E7
        gbc.setState(0x1043, 0x8fe0, 0xddc0, 0x7c9, 0x866a, 0xde7, 0x1, 0x1);
        gbc.writeMem(0x1043, { 0xe, 0xfc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8fe0, gbc.sp());
        EXPECT(0x1045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02E8
        gbc.setState(0x998e, 0x6761, 0xfed0, 0x2f0, 0x23a5, 0x8cf3, 0x0, 0x0);
        gbc.writeMem(0x998e, { 0xe, 0x11 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6761, gbc.sp());
        EXPECT(0x9990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x998e));
        EXPECT(0x11, gbc.readMem(0x998f));
        // 0E 02E9
        gbc.setState(0xc003, 0x9b99, 0xbc40, 0x57b3, 0x6213, 0x41b1, 0x1, 0x1);
        gbc.writeMem(0xc003, { 0xe, 0xc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9b99, gbc.sp());
        EXPECT(0xc005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc003));
        EXPECT(0xc, gbc.readMem(0xc004));
        // 0E 02EA
        gbc.setState(0x3e50, 0xf312, 0xea10, 0xbb24, 0x2487, 0x2ad1, 0x1, 0x1);
        gbc.writeMem(0x3e50, { 0xe, 0xf7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf312, gbc.sp());
        EXPECT(0x3e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02EB
        gbc.setState(0x7761, 0x76b4, 0x4dd0, 0x9272, 0xf62a, 0xe2b2, 0x1, 0x0);
        gbc.writeMem(0x7761, { 0xe, 0x60 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x76b4, gbc.sp());
        EXPECT(0x7763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02EC
        gbc.setState(0x82b4, 0x5d93, 0x5b00, 0x75ba, 0x967b, 0x5ed1, 0x0, 0x0);
        gbc.writeMem(0x82b4, { 0xe, 0x57 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5d93, gbc.sp());
        EXPECT(0x82b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x82b4));
        EXPECT(0x57, gbc.readMem(0x82b5));
        // 0E 02ED
        gbc.setState(0x7744, 0xc8bb, 0xa000, 0x8b51, 0x3b42, 0x83f9, 0x1, 0x0);
        gbc.writeMem(0x7744, { 0xe, 0xd5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc8bb, gbc.sp());
        EXPECT(0x7746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02EE
        gbc.setState(0x155f, 0x7afc, 0x73d0, 0x3025, 0x2092, 0x4e3b, 0x0, 0x0);
        gbc.writeMem(0x155f, { 0xe, 0x72 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7afc, gbc.sp());
        EXPECT(0x1561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02EF
        gbc.setState(0xdf17, 0xd19f, 0x1f20, 0x3ca8, 0xffd6, 0xfa46, 0x0, 0x0);
        gbc.writeMem(0xdf17, { 0xe, 0x11 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd19f, gbc.sp());
        EXPECT(0xdf19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdf17));
        EXPECT(0x11, gbc.readMem(0xdf18));
        // 0E 02F0
        gbc.setState(0xb7d9, 0x7451, 0x6b00, 0xc93, 0x8fda, 0xcc51, 0x1, 0x0);
        gbc.writeMem(0xb7d9, { 0xe, 0xd8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7451, gbc.sp());
        EXPECT(0xb7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb7d9));
        EXPECT(0xd8, gbc.readMem(0xb7da));
        // 0E 02F1
        gbc.setState(0xab66, 0x3126, 0x1240, 0xf0bb, 0x9780, 0x5f10, 0x0, 0x1);
        gbc.writeMem(0xab66, { 0xe, 0x2e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3126, gbc.sp());
        EXPECT(0xab68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xab66));
        EXPECT(0x2e, gbc.readMem(0xab67));
        // 0E 02F2
        gbc.setState(0x9ec9, 0x484a, 0x6570, 0xf62b, 0xdf9a, 0x13a0, 0x0, 0x0);
        gbc.writeMem(0x9ec9, { 0xe, 0xab });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x484a, gbc.sp());
        EXPECT(0x9ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9ec9));
        EXPECT(0xab, gbc.readMem(0x9eca));
        // 0E 02F3
        gbc.setState(0x9fca, 0x24f0, 0x2860, 0x9a33, 0x8008, 0xfd52, 0x0, 0x1);
        gbc.writeMem(0x9fca, { 0xe, 0x4a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x24f0, gbc.sp());
        EXPECT(0x9fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9fca));
        EXPECT(0x4a, gbc.readMem(0x9fcb));
        // 0E 02F4
        gbc.setState(0x12c, 0xbf30, 0x6670, 0x145a, 0x1b49, 0x7ae0, 0x1, 0x0);
        gbc.writeMem(0x12c, { 0xe, 0xda });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbf30, gbc.sp());
        EXPECT(0x12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02F5
        gbc.setState(0xac54, 0xa7e5, 0x11f0, 0x5097, 0x47d4, 0x3829, 0x1, 0x1);
        gbc.writeMem(0xac54, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa7e5, gbc.sp());
        EXPECT(0xac56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xac54));
        EXPECT(0xe9, gbc.readMem(0xac55));
        // 0E 02F6
        gbc.setState(0x43a2, 0xa757, 0x81c0, 0x3ff7, 0x9dba, 0x9a0c, 0x0, 0x1);
        gbc.writeMem(0x43a2, { 0xe, 0x69 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa757, gbc.sp());
        EXPECT(0x43a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02F7
        gbc.setState(0x272, 0xf896, 0xcb70, 0x8842, 0x1759, 0x3b30, 0x1, 0x0);
        gbc.writeMem(0x272, { 0xe, 0xf9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf896, gbc.sp());
        EXPECT(0x274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02F8
        gbc.setState(0x577, 0x9d5, 0x4d30, 0x7699, 0x5fca, 0xcc1e, 0x0, 0x0);
        gbc.writeMem(0x577, { 0xe, 0x93 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9d5, gbc.sp());
        EXPECT(0x579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02F9
        gbc.setState(0xa5ce, 0x800a, 0xc250, 0x2a89, 0x1cfa, 0xb252, 0x1, 0x0);
        gbc.writeMem(0xa5ce, { 0xe, 0xff });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x800a, gbc.sp());
        EXPECT(0xa5d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa5ce));
        EXPECT(0xff, gbc.readMem(0xa5cf));
        // 0E 02FA
        gbc.setState(0x27ff, 0xf27d, 0x22a0, 0xeced, 0xcacc, 0x70b0, 0x0, 0x1);
        gbc.writeMem(0x27ff, { 0xe, 0xf8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf27d, gbc.sp());
        EXPECT(0x2801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02FB
        gbc.setState(0x52a2, 0x7eaa, 0x4920, 0x777e, 0xc202, 0xe7b3, 0x0, 0x0);
        gbc.writeMem(0x52a2, { 0xe, 0x1a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7eaa, gbc.sp());
        EXPECT(0x52a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02FC
        gbc.setState(0x30bd, 0xbd04, 0xb680, 0xa719, 0x5a54, 0x32f4, 0x1, 0x1);
        gbc.writeMem(0x30bd, { 0xe, 0x74 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbd04, gbc.sp());
        EXPECT(0x30bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 02FD
        gbc.setState(0xd868, 0x6912, 0x7b60, 0xa5d9, 0x7128, 0xc145, 0x0, 0x1);
        gbc.writeMem(0xd868, { 0xe, 0x94 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6912, gbc.sp());
        EXPECT(0xd86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd868));
        EXPECT(0x94, gbc.readMem(0xd869));
        // 0E 02FE
        gbc.setState(0x739e, 0xb0c5, 0x83b0, 0x6196, 0xeabf, 0x14aa, 0x1, 0x0);
        gbc.writeMem(0x739e, { 0xe, 0x74 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb0c5, gbc.sp());
        EXPECT(0x73a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 02FF
        gbc.setState(0x66cf, 0x90e4, 0x8e90, 0xca7d, 0x1da2, 0xfc35, 0x0, 0x0);
        gbc.writeMem(0x66cf, { 0xe, 0xad });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x90e4, gbc.sp());
        EXPECT(0x66d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0300
        gbc.setState(0x1b42, 0xed4, 0xb3d0, 0x533, 0x5124, 0x261b, 0x0, 0x0);
        gbc.writeMem(0x1b42, { 0xe, 0x2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xed4, gbc.sp());
        EXPECT(0x1b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0301
        gbc.setState(0xcfa, 0xeecd, 0xd870, 0xc89a, 0x1416, 0x43db, 0x1, 0x1);
        gbc.writeMem(0xcfa, { 0xe, 0xbb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xeecd, gbc.sp());
        EXPECT(0xcfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0302
        gbc.setState(0x121b, 0x9473, 0xf670, 0xe5bf, 0x9c05, 0xe768, 0x0, 0x1);
        gbc.writeMem(0x121b, { 0xe, 0xd9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9473, gbc.sp());
        EXPECT(0x121d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0303
        gbc.setState(0x179e, 0x3888, 0x53a0, 0xcb2c, 0x8976, 0xe306, 0x1, 0x0);
        gbc.writeMem(0x179e, { 0xe, 0x85 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3888, gbc.sp());
        EXPECT(0x17a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0304
        gbc.setState(0x725d, 0xb39d, 0xb920, 0x6f5, 0x2429, 0x43dd, 0x1, 0x0);
        gbc.writeMem(0x725d, { 0xe, 0x32 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb39d, gbc.sp());
        EXPECT(0x725f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0305
        gbc.setState(0x7c61, 0xcd1a, 0xc210, 0xdc6a, 0x37a4, 0x9a1e, 0x1, 0x1);
        gbc.writeMem(0x7c61, { 0xe, 0xf9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcd1a, gbc.sp());
        EXPECT(0x7c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0306
        gbc.setState(0x91e1, 0xb9e, 0x97c0, 0x88c1, 0x7ff4, 0xce09, 0x1, 0x1);
        gbc.writeMem(0x91e1, { 0xe, 0x86 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb9e, gbc.sp());
        EXPECT(0x91e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x91e1));
        EXPECT(0x86, gbc.readMem(0x91e2));
        // 0E 0307
        gbc.setState(0x1096, 0x6ee1, 0xe050, 0xc09c, 0x91, 0x8dca, 0x1, 0x0);
        gbc.writeMem(0x1096, { 0xe, 0x45 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6ee1, gbc.sp());
        EXPECT(0x1098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0308
        gbc.setState(0xd1de, 0xdc7e, 0x7a90, 0xc16e, 0xb53a, 0x4b30, 0x1, 0x0);
        gbc.writeMem(0xd1de, { 0xe, 0xfb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdc7e, gbc.sp());
        EXPECT(0xd1e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd1de));
        EXPECT(0xfb, gbc.readMem(0xd1df));
        // 0E 0309
        gbc.setState(0x8ea6, 0x3cd4, 0x9c40, 0x7245, 0x7120, 0xeec4, 0x0, 0x0);
        gbc.writeMem(0x8ea6, { 0xe, 0xfb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3cd4, gbc.sp());
        EXPECT(0x8ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8ea6));
        EXPECT(0xfb, gbc.readMem(0x8ea7));
        // 0E 030A
        gbc.setState(0xc275, 0x2a0e, 0xf550, 0xf86d, 0x9ac8, 0x4ed9, 0x1, 0x1);
        gbc.writeMem(0xc275, { 0xe, 0x49 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2a0e, gbc.sp());
        EXPECT(0xc277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc275));
        EXPECT(0x49, gbc.readMem(0xc276));
        // 0E 030B
        gbc.setState(0x94e4, 0xd4fd, 0x7830, 0x4575, 0x425f, 0x4937, 0x1, 0x1);
        gbc.writeMem(0x94e4, { 0xe, 0xa6 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd4fd, gbc.sp());
        EXPECT(0x94e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x94e4));
        EXPECT(0xa6, gbc.readMem(0x94e5));
        // 0E 030D
        gbc.setState(0xdeee, 0x6b6d, 0x7990, 0x6f1d, 0xbcf2, 0x3e5e, 0x0, 0x1);
        gbc.writeMem(0xdeee, { 0xe, 0xc1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6b6d, gbc.sp());
        EXPECT(0xdef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdeee));
        EXPECT(0xc1, gbc.readMem(0xdeef));
        // 0E 030E
        gbc.setState(0x7425, 0x76cd, 0x2d0, 0xc1e3, 0x1433, 0xb4ba, 0x1, 0x0);
        gbc.writeMem(0x7425, { 0xe, 0x5f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x76cd, gbc.sp());
        EXPECT(0x7427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 030F
        gbc.setState(0xe1e8, 0x3e0e, 0x7930, 0x77c2, 0x7fed, 0x9640, 0x0, 0x1);
        gbc.writeMem(0xe1e8, { 0xe, 0xa5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3e0e, gbc.sp());
        EXPECT(0xe1ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe1e8));
        EXPECT(0xa5, gbc.readMem(0xe1e9));
        // 0E 0310
        gbc.setState(0x4a12, 0xfaf8, 0x2950, 0x85a2, 0x5670, 0x9318, 0x0, 0x1);
        gbc.writeMem(0x4a12, { 0xe, 0xd9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfaf8, gbc.sp());
        EXPECT(0x4a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0311
        gbc.setState(0x955c, 0x67e1, 0x1a60, 0x6217, 0xbcf5, 0xdd34, 0x1, 0x0);
        gbc.writeMem(0x955c, { 0xe, 0x22 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x67e1, gbc.sp());
        EXPECT(0x955e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x955c));
        EXPECT(0x22, gbc.readMem(0x955d));
        // 0E 0312
        gbc.setState(0x9353, 0x78ed, 0xf70, 0x2c18, 0xb155, 0xd7d7, 0x0, 0x0);
        gbc.writeMem(0x9353, { 0xe, 0xc4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x78ed, gbc.sp());
        EXPECT(0x9355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9353));
        EXPECT(0xc4, gbc.readMem(0x9354));
        // 0E 0313
        gbc.setState(0x9e3, 0x9b82, 0x55e0, 0x68f4, 0x25e0, 0x1b8c, 0x1, 0x0);
        gbc.writeMem(0x9e3, { 0xe, 0x56 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9b82, gbc.sp());
        EXPECT(0x9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0314
        gbc.setState(0x3be2, 0xf2e7, 0x7970, 0x5da0, 0x3c3d, 0xbb72, 0x0, 0x1);
        gbc.writeMem(0x3be2, { 0xe, 0xc6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf2e7, gbc.sp());
        EXPECT(0x3be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0315
        gbc.setState(0x3995, 0xf60c, 0x1f20, 0x11a5, 0x145d, 0x3bc3, 0x0, 0x0);
        gbc.writeMem(0x3995, { 0xe, 0x84 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf60c, gbc.sp());
        EXPECT(0x3997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0316
        gbc.setState(0xe948, 0x5e0a, 0xdba0, 0x9ca3, 0x509c, 0x129d, 0x0, 0x0);
        gbc.writeMem(0xe948, { 0xe, 0x9f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5e0a, gbc.sp());
        EXPECT(0xe94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe948));
        EXPECT(0x9f, gbc.readMem(0xe949));
        // 0E 0317
        gbc.setState(0x75da, 0x1a2f, 0x9b20, 0xfb13, 0x83f2, 0x65eb, 0x0, 0x1);
        gbc.writeMem(0x75da, { 0xe, 0x47 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1a2f, gbc.sp());
        EXPECT(0x75dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0318
        gbc.setState(0xe781, 0x4398, 0x68a0, 0x38cc, 0x6d0d, 0x5d9a, 0x1, 0x1);
        gbc.writeMem(0xe781, { 0xe, 0x1e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4398, gbc.sp());
        EXPECT(0xe783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe781));
        EXPECT(0x1e, gbc.readMem(0xe782));
        // 0E 0319
        gbc.setState(0xd272, 0xe82e, 0x9f90, 0xeb20, 0xdad, 0xea54, 0x1, 0x0);
        gbc.writeMem(0xd272, { 0xe, 0x6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe82e, gbc.sp());
        EXPECT(0xd274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd272));
        EXPECT(0x6, gbc.readMem(0xd273));
        // 0E 031A
        gbc.setState(0x4c05, 0x5064, 0x6110, 0x1bb1, 0x22a8, 0x790c, 0x1, 0x0);
        gbc.writeMem(0x4c05, { 0xe, 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5064, gbc.sp());
        EXPECT(0x4c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 031C
        gbc.setState(0xe140, 0x3add, 0x5f80, 0x7e35, 0x29dd, 0x5505, 0x0, 0x1);
        gbc.writeMem(0xe140, { 0xe, 0xa3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3add, gbc.sp());
        EXPECT(0xe142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe140));
        EXPECT(0xa3, gbc.readMem(0xe141));
        // 0E 031D
        gbc.setState(0xde7d, 0x82c1, 0x3b80, 0xf72f, 0x60c8, 0x4b69, 0x0, 0x0);
        gbc.writeMem(0xde7d, { 0xe, 0x75 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x82c1, gbc.sp());
        EXPECT(0xde7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xde7d));
        EXPECT(0x75, gbc.readMem(0xde7e));
        // 0E 031E
        gbc.setState(0x7ee, 0xce27, 0xb1e0, 0xf335, 0xd252, 0x9e13, 0x0, 0x1);
        gbc.writeMem(0x7ee, { 0xe, 0x8b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xce27, gbc.sp());
        EXPECT(0x7f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 031F
        gbc.setState(0x471d, 0xe8a5, 0x700, 0x763, 0xf454, 0xe796, 0x0, 0x0);
        gbc.writeMem(0x471d, { 0xe, 0x6a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe8a5, gbc.sp());
        EXPECT(0x471f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0320
        gbc.setState(0x48db, 0x5cb5, 0x5a60, 0xf005, 0xa0ab, 0xcf98, 0x0, 0x0);
        gbc.writeMem(0x48db, { 0xe, 0xcb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5cb5, gbc.sp());
        EXPECT(0x48dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0321
        gbc.setState(0x9255, 0x338, 0x9500, 0xaf50, 0x24b2, 0x54b6, 0x1, 0x1);
        gbc.writeMem(0x9255, { 0xe, 0x9b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x338, gbc.sp());
        EXPECT(0x9257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9255));
        EXPECT(0x9b, gbc.readMem(0x9256));
        // 0E 0322
        gbc.setState(0x10e9, 0xdd99, 0x3080, 0x3bcf, 0x7cf7, 0xac7c, 0x1, 0x1);
        gbc.writeMem(0x10e9, { 0xe, 0xdc });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdd99, gbc.sp());
        EXPECT(0x10eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0323
        gbc.setState(0x23c4, 0x4b59, 0x3770, 0x37e2, 0xdad8, 0x8fe7, 0x1, 0x0);
        gbc.writeMem(0x23c4, { 0xe, 0xff });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4b59, gbc.sp());
        EXPECT(0x23c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0324
        gbc.setState(0x741a, 0x8788, 0xdc50, 0xfb27, 0xbb73, 0x90b2, 0x0, 0x0);
        gbc.writeMem(0x741a, { 0xe, 0xbe });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8788, gbc.sp());
        EXPECT(0x741c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0325
        gbc.setState(0xa631, 0x3418, 0x5b20, 0x40e7, 0x4c76, 0x94c0, 0x0, 0x0);
        gbc.writeMem(0xa631, { 0xe, 0x9d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3418, gbc.sp());
        EXPECT(0xa633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa631));
        EXPECT(0x9d, gbc.readMem(0xa632));
        // 0E 0326
        gbc.setState(0xcae, 0x69b5, 0xd620, 0x7953, 0xb4e1, 0x450c, 0x1, 0x0);
        gbc.writeMem(0xcae, { 0xe, 0x1c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x69b5, gbc.sp());
        EXPECT(0xcb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0327
        gbc.setState(0x7e7f, 0x141d, 0x3860, 0x5b42, 0xeda8, 0x33f5, 0x0, 0x1);
        gbc.writeMem(0x7e7f, { 0xe, 0x57 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x141d, gbc.sp());
        EXPECT(0x7e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0328
        gbc.setState(0x9721, 0x669b, 0xab90, 0x4014, 0x6c94, 0xe81e, 0x1, 0x1);
        gbc.writeMem(0x9721, { 0xe, 0x12 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x669b, gbc.sp());
        EXPECT(0x9723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9721));
        EXPECT(0x12, gbc.readMem(0x9722));
        // 0E 032A
        gbc.setState(0x146e, 0x63a5, 0x2b10, 0x6558, 0x9dcd, 0x323, 0x0, 0x0);
        gbc.writeMem(0x146e, { 0xe, 0xc3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x63a5, gbc.sp());
        EXPECT(0x1470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 032B
        gbc.setState(0x7c4, 0x3ef7, 0xbcd0, 0xd450, 0x6775, 0x248c, 0x0, 0x1);
        gbc.writeMem(0x7c4, { 0xe, 0xd9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3ef7, gbc.sp());
        EXPECT(0x7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 032C
        gbc.setState(0x2e41, 0x3b0, 0x95f0, 0xf80d, 0x919a, 0x3d51, 0x0, 0x1);
        gbc.writeMem(0x2e41, { 0xe, 0xf8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3b0, gbc.sp());
        EXPECT(0x2e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 032D
        gbc.setState(0xbd15, 0x6c3e, 0xac40, 0x4aa4, 0x6b90, 0x61b7, 0x0, 0x1);
        gbc.writeMem(0xbd15, { 0xe, 0x16 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6c3e, gbc.sp());
        EXPECT(0xbd17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbd15));
        EXPECT(0x16, gbc.readMem(0xbd16));
        // 0E 032E
        gbc.setState(0x20ca, 0x1c0a, 0xb710, 0xaa53, 0xdf39, 0x31bc, 0x0, 0x0);
        gbc.writeMem(0x20ca, { 0xe, 0xab });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1c0a, gbc.sp());
        EXPECT(0x20cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 032F
        gbc.setState(0xa3ed, 0xba94, 0xaf00, 0xddb1, 0xf26e, 0x2808, 0x0, 0x1);
        gbc.writeMem(0xa3ed, { 0xe, 0x5d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xba94, gbc.sp());
        EXPECT(0xa3ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa3ed));
        EXPECT(0x5d, gbc.readMem(0xa3ee));
        // 0E 0330
        gbc.setState(0x7158, 0xdc50, 0x9ed0, 0xbad5, 0x148b, 0xb17e, 0x1, 0x0);
        gbc.writeMem(0x7158, { 0xe, 0x24 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdc50, gbc.sp());
        EXPECT(0x715a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0332
        gbc.setState(0x1bd8, 0x86c9, 0x7270, 0xc403, 0x993a, 0xfb6d, 0x0, 0x0);
        gbc.writeMem(0x1bd8, { 0xe, 0x7a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x86c9, gbc.sp());
        EXPECT(0x1bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0333
        gbc.setState(0x751a, 0x7871, 0x7d50, 0xb6ed, 0xada2, 0x4a5d, 0x0, 0x0);
        gbc.writeMem(0x751a, { 0xe, 0x6f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7871, gbc.sp());
        EXPECT(0x751c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0334
        gbc.setState(0xa14e, 0xcefd, 0x17a0, 0x3ff0, 0xed12, 0xa2b8, 0x1, 0x0);
        gbc.writeMem(0xa14e, { 0xe, 0x37 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcefd, gbc.sp());
        EXPECT(0xa150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa14e));
        EXPECT(0x37, gbc.readMem(0xa14f));
        // 0E 0335
        gbc.setState(0xcf86, 0xcaad, 0xe730, 0xeaef, 0xd806, 0xa1b5, 0x0, 0x1);
        gbc.writeMem(0xcf86, { 0xe, 0x58 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcaad, gbc.sp());
        EXPECT(0xcf88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcf86));
        EXPECT(0x58, gbc.readMem(0xcf87));
        // 0E 0336
        gbc.setState(0x2de1, 0x70a8, 0xdc70, 0x973a, 0xd5a0, 0x8fe4, 0x0, 0x1);
        gbc.writeMem(0x2de1, { 0xe, 0x57 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x70a8, gbc.sp());
        EXPECT(0x2de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0337
        gbc.setState(0x4e0f, 0xe31b, 0xbca0, 0x79a8, 0x6bf0, 0x5287, 0x0, 0x1);
        gbc.writeMem(0x4e0f, { 0xe, 0xee });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe31b, gbc.sp());
        EXPECT(0x4e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0339
        gbc.setState(0x72dd, 0x12da, 0xd170, 0x2784, 0xe0a7, 0x6feb, 0x0, 0x0);
        gbc.writeMem(0x72dd, { 0xe, 0x76 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x12da, gbc.sp());
        EXPECT(0x72df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 033A
        gbc.setState(0x8722, 0xad9e, 0xbdc0, 0x6c02, 0xdd93, 0x7441, 0x0, 0x0);
        gbc.writeMem(0x8722, { 0xe, 0xfe });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xad9e, gbc.sp());
        EXPECT(0x8724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8722));
        EXPECT(0xfe, gbc.readMem(0x8723));
        // 0E 033B
        gbc.setState(0xb15d, 0xb056, 0x390, 0x535, 0x7ffc, 0x3224, 0x0, 0x1);
        gbc.writeMem(0xb15d, { 0xe, 0xf6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb056, gbc.sp());
        EXPECT(0xb15f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb15d));
        EXPECT(0xf6, gbc.readMem(0xb15e));
        // 0E 033C
        gbc.setState(0xf7c, 0xc93e, 0xbd90, 0xadfe, 0x7c58, 0x8615, 0x1, 0x0);
        gbc.writeMem(0xf7c, { 0xe, 0x6c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc93e, gbc.sp());
        EXPECT(0xf7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 033D
        gbc.setState(0xcafb, 0x287, 0x900, 0x7be, 0xd4a1, 0x7a57, 0x1, 0x0);
        gbc.writeMem(0xcafb, { 0xe, 0x81 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x287, gbc.sp());
        EXPECT(0xcafd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcafb));
        EXPECT(0x81, gbc.readMem(0xcafc));
        // 0E 033E
        gbc.setState(0x369f, 0x1fd1, 0xc360, 0xbd77, 0x436d, 0x9cb9, 0x0, 0x1);
        gbc.writeMem(0x369f, { 0xe, 0x88 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1fd1, gbc.sp());
        EXPECT(0x36a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 033F
        gbc.setState(0x2eda, 0xca9a, 0x2d10, 0x45f6, 0x5aec, 0x7366, 0x0, 0x0);
        gbc.writeMem(0x2eda, { 0xe, 0xc2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xca9a, gbc.sp());
        EXPECT(0x2edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0340
        gbc.setState(0x3951, 0x83c, 0x9000, 0x882f, 0xac4e, 0x4c84, 0x0, 0x1);
        gbc.writeMem(0x3951, { 0xe, 0x92 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x83c, gbc.sp());
        EXPECT(0x3953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0341
        gbc.setState(0x9208, 0x51d9, 0xbaf0, 0xbf17, 0x3fa2, 0x4b70, 0x1, 0x0);
        gbc.writeMem(0x9208, { 0xe, 0x6c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x51d9, gbc.sp());
        EXPECT(0x920a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9208));
        EXPECT(0x6c, gbc.readMem(0x9209));
        // 0E 0342
        gbc.setState(0xa410, 0xb882, 0x9f90, 0x2092, 0x22b9, 0x9cc0, 0x1, 0x1);
        gbc.writeMem(0xa410, { 0xe, 0x74 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb882, gbc.sp());
        EXPECT(0xa412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa410));
        EXPECT(0x74, gbc.readMem(0xa411));
        // 0E 0343
        gbc.setState(0x18c4, 0x4290, 0x96a0, 0x232a, 0x2710, 0x1777, 0x0, 0x0);
        gbc.writeMem(0x18c4, { 0xe, 0xc5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4290, gbc.sp());
        EXPECT(0x18c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0344
        gbc.setState(0x9e0, 0xb602, 0xe960, 0x1807, 0x73bb, 0xe877, 0x1, 0x0);
        gbc.writeMem(0x9e0, { 0xe, 0xa1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb602, gbc.sp());
        EXPECT(0x9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0345
        gbc.setState(0x94f, 0x4b2a, 0x500, 0x752e, 0x16df, 0xc8ef, 0x1, 0x0);
        gbc.writeMem(0x94f, { 0xe, 0x8e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4b2a, gbc.sp());
        EXPECT(0x951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0346
        gbc.setState(0x19c, 0xf37b, 0x71a0, 0xe1ff, 0x55cd, 0xad5, 0x0, 0x0);
        gbc.writeMem(0x19c, { 0xe, 0xe0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf37b, gbc.sp());
        EXPECT(0x19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0347
        gbc.setState(0xa50b, 0xfd35, 0x9670, 0xed3f, 0xeef0, 0x9605, 0x1, 0x1);
        gbc.writeMem(0xa50b, { 0xe, 0x8b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfd35, gbc.sp());
        EXPECT(0xa50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa50b));
        EXPECT(0x8b, gbc.readMem(0xa50c));
        // 0E 0348
        gbc.setState(0x91e6, 0x289d, 0x45d0, 0xb689, 0xec00, 0xfda9, 0x1, 0x0);
        gbc.writeMem(0x91e6, { 0xe, 0x64 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x289d, gbc.sp());
        EXPECT(0x91e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x91e6));
        EXPECT(0x64, gbc.readMem(0x91e7));
        // 0E 0349
        gbc.setState(0xc5f2, 0xf670, 0xb7e0, 0x8e6, 0xe02, 0x3544, 0x0, 0x1);
        gbc.writeMem(0xc5f2, { 0xe, 0x44 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf670, gbc.sp());
        EXPECT(0xc5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc5f2));
        EXPECT(0x44, gbc.readMem(0xc5f3));
        // 0E 034A
        gbc.setState(0xd7b2, 0x56c, 0xf8c0, 0x955e, 0xe0cd, 0x52bd, 0x0, 0x0);
        gbc.writeMem(0xd7b2, { 0xe, 0xcd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x56c, gbc.sp());
        EXPECT(0xd7b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd7b2));
        EXPECT(0xcd, gbc.readMem(0xd7b3));
        // 0E 034B
        gbc.setState(0x23d1, 0x4c23, 0x47a0, 0x7377, 0xf60c, 0x3b7a, 0x0, 0x0);
        gbc.writeMem(0x23d1, { 0xe, 0xd7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4c23, gbc.sp());
        EXPECT(0x23d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 034C
        gbc.setState(0x388e, 0x28b0, 0xec20, 0xa015, 0x3d1d, 0x8b9e, 0x0, 0x0);
        gbc.writeMem(0x388e, { 0xe, 0x1f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x28b0, gbc.sp());
        EXPECT(0x3890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 034D
        gbc.setState(0x2308, 0xc7ce, 0xb6e0, 0x2fed, 0xa2ae, 0xb49f, 0x1, 0x0);
        gbc.writeMem(0x2308, { 0xe, 0x56 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc7ce, gbc.sp());
        EXPECT(0x230a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 034E
        gbc.setState(0x738, 0xc9fa, 0x96b0, 0xb428, 0xb3c8, 0xa809, 0x0, 0x0);
        gbc.writeMem(0x738, { 0xe, 0x27 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc9fa, gbc.sp());
        EXPECT(0x73a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 034F
        gbc.setState(0xef3c, 0x9dc4, 0xf5a0, 0xe8b7, 0xc735, 0x45b5, 0x0, 0x1);
        gbc.writeMem(0xef3c, { 0xe, 0xa5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9dc4, gbc.sp());
        EXPECT(0xef3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xef3c));
        EXPECT(0xa5, gbc.readMem(0xef3d));
        // 0E 0350
        gbc.setState(0x9099, 0xf1c4, 0xf420, 0x42a9, 0x98f4, 0x96c5, 0x0, 0x1);
        gbc.writeMem(0x9099, { 0xe, 0x1e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf1c4, gbc.sp());
        EXPECT(0x909b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9099));
        EXPECT(0x1e, gbc.readMem(0x909a));
        // 0E 0351
        gbc.setState(0x3746, 0xd609, 0x7fa0, 0xdb25, 0xc348, 0x35ff, 0x1, 0x1);
        gbc.writeMem(0x3746, { 0xe, 0x8c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd609, gbc.sp());
        EXPECT(0x3748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0352
        gbc.setState(0x2f49, 0xc733, 0xb170, 0xf290, 0xd4e0, 0x2911, 0x0, 0x1);
        gbc.writeMem(0x2f49, { 0xe, 0x35 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc733, gbc.sp());
        EXPECT(0x2f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0353
        gbc.setState(0xa309, 0x13e3, 0xc130, 0x17c5, 0x4421, 0x8ebb, 0x1, 0x1);
        gbc.writeMem(0xa309, { 0xe, 0x1e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x13e3, gbc.sp());
        EXPECT(0xa30b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa309));
        EXPECT(0x1e, gbc.readMem(0xa30a));
        // 0E 0354
        gbc.setState(0xc710, 0x9409, 0x19c0, 0x10b8, 0xeed6, 0xf2bc, 0x0, 0x0);
        gbc.writeMem(0xc710, { 0xe, 0x94 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9409, gbc.sp());
        EXPECT(0xc712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc710));
        EXPECT(0x94, gbc.readMem(0xc711));
        // 0E 0355
        gbc.setState(0x61ff, 0xb5e7, 0x7aa0, 0x666e, 0xe04d, 0x34f6, 0x1, 0x0);
        gbc.writeMem(0x61ff, { 0xe, 0x27 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb5e7, gbc.sp());
        EXPECT(0x6201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0356
        gbc.setState(0x6402, 0x39c7, 0xfda0, 0xd1d0, 0xd4fa, 0x1277, 0x0, 0x0);
        gbc.writeMem(0x6402, { 0xe, 0x8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x39c7, gbc.sp());
        EXPECT(0x6404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0357
        gbc.setState(0x5fb4, 0x4b9a, 0xf5c0, 0xbd18, 0x7cd, 0xaed7, 0x0, 0x0);
        gbc.writeMem(0x5fb4, { 0xe, 0xa8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4b9a, gbc.sp());
        EXPECT(0x5fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0358
        gbc.setState(0xd792, 0xccf1, 0x6600, 0xb0b1, 0x8049, 0x35a0, 0x0, 0x1);
        gbc.writeMem(0xd792, { 0xe, 0xaf });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xccf1, gbc.sp());
        EXPECT(0xd794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd792));
        EXPECT(0xaf, gbc.readMem(0xd793));
        // 0E 0359
        gbc.setState(0x409e, 0x9f0f, 0x8e40, 0xa83c, 0xf41a, 0x901, 0x0, 0x0);
        gbc.writeMem(0x409e, { 0xe, 0x36 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9f0f, gbc.sp());
        EXPECT(0x40a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 035A
        gbc.setState(0x950c, 0x43fc, 0x3790, 0x67dd, 0xa0a8, 0x1c11, 0x1, 0x1);
        gbc.writeMem(0x950c, { 0xe, 0xd3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x43fc, gbc.sp());
        EXPECT(0x950e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x950c));
        EXPECT(0xd3, gbc.readMem(0x950d));
        // 0E 035B
        gbc.setState(0x6fd2, 0x54ea, 0x3820, 0xd51f, 0x92c1, 0xa3d5, 0x1, 0x1);
        gbc.writeMem(0x6fd2, { 0xe, 0xce });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x54ea, gbc.sp());
        EXPECT(0x6fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 035C
        gbc.setState(0x1f33, 0x7938, 0x1e50, 0xf9f6, 0x938d, 0x5e23, 0x1, 0x0);
        gbc.writeMem(0x1f33, { 0xe, 0x79 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7938, gbc.sp());
        EXPECT(0x1f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 035D
        gbc.setState(0x2855, 0xea54, 0xf110, 0xeb2d, 0x4915, 0xecc1, 0x0, 0x0);
        gbc.writeMem(0x2855, { 0xe, 0xe });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xea54, gbc.sp());
        EXPECT(0x2857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 035E
        gbc.setState(0x520c, 0x9e44, 0x5a80, 0x7bd6, 0x590e, 0x5e35, 0x1, 0x0);
        gbc.writeMem(0x520c, { 0xe, 0x24 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9e44, gbc.sp());
        EXPECT(0x520e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 035F
        gbc.setState(0x3018, 0xd5b1, 0xe160, 0x6a3b, 0x77bb, 0x538, 0x1, 0x1);
        gbc.writeMem(0x3018, { 0xe, 0x59 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd5b1, gbc.sp());
        EXPECT(0x301a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0360
        gbc.setState(0x1100, 0x99d5, 0x1c0, 0xc16e, 0xabd9, 0xc531, 0x1, 0x1);
        gbc.writeMem(0x1100, { 0xe, 0x81 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x99d5, gbc.sp());
        EXPECT(0x1102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0361
        gbc.setState(0x786e, 0x72cd, 0x7d50, 0x328b, 0xd3d1, 0xa19, 0x0, 0x0);
        gbc.writeMem(0x786e, { 0xe, 0x49 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x72cd, gbc.sp());
        EXPECT(0x7870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0362
        gbc.setState(0x4577, 0x643f, 0xcbf0, 0xba29, 0x57db, 0x9ff4, 0x1, 0x0);
        gbc.writeMem(0x4577, { 0xe, 0x8d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x643f, gbc.sp());
        EXPECT(0x4579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0363
        gbc.setState(0xb82c, 0x8fc7, 0xa1b0, 0x99a4, 0xea2b, 0x666, 0x0, 0x0);
        gbc.writeMem(0xb82c, { 0xe, 0x12 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8fc7, gbc.sp());
        EXPECT(0xb82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb82c));
        EXPECT(0x12, gbc.readMem(0xb82d));
        // 0E 0364
        gbc.setState(0xcb6d, 0xaff8, 0x9610, 0x1530, 0xec82, 0x267b, 0x1, 0x0);
        gbc.writeMem(0xcb6d, { 0xe, 0xa9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xaff8, gbc.sp());
        EXPECT(0xcb6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcb6d));
        EXPECT(0xa9, gbc.readMem(0xcb6e));
        // 0E 0365
        gbc.setState(0xdd58, 0xc498, 0x8f80, 0x8389, 0x3be5, 0x7505, 0x1, 0x0);
        gbc.writeMem(0xdd58, { 0xe, 0xf8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc498, gbc.sp());
        EXPECT(0xdd5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdd58));
        EXPECT(0xf8, gbc.readMem(0xdd59));
        // 0E 0366
        gbc.setState(0xd711, 0x8516, 0x8d70, 0xd0f8, 0x781c, 0x26e0, 0x1, 0x0);
        gbc.writeMem(0xd711, { 0xe, 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8516, gbc.sp());
        EXPECT(0xd713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd711));
        EXPECT(0x85, gbc.readMem(0xd712));
        // 0E 0367
        gbc.setState(0xcffc, 0xf20b, 0x8a60, 0x8495, 0x7847, 0x274d, 0x1, 0x1);
        gbc.writeMem(0xcffc, { 0xe, 0xf9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf20b, gbc.sp());
        EXPECT(0xcffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcffc));
        EXPECT(0xf9, gbc.readMem(0xcffd));
        // 0E 0368
        gbc.setState(0xe02c, 0xc7bf, 0xe6c0, 0x4f29, 0x3b55, 0xf437, 0x0, 0x1);
        gbc.writeMem(0xe02c, { 0xe, 0xc4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc7bf, gbc.sp());
        EXPECT(0xe02e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe02c));
        EXPECT(0xc4, gbc.readMem(0xe02d));
        // 0E 0369
        gbc.setState(0x590c, 0xb701, 0x8ef0, 0xb782, 0xdeaa, 0xf233, 0x0, 0x0);
        gbc.writeMem(0x590c, { 0xe, 0x8a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb701, gbc.sp());
        EXPECT(0x590e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 036A
        gbc.setState(0x842b, 0x7b8d, 0x9910, 0xfc8c, 0x2a64, 0xaa02, 0x1, 0x0);
        gbc.writeMem(0x842b, { 0xe, 0x43 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7b8d, gbc.sp());
        EXPECT(0x842d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x842b));
        EXPECT(0x43, gbc.readMem(0x842c));
        // 0E 036B
        gbc.setState(0x3987, 0x7c46, 0x9740, 0xe98f, 0x5e83, 0x6745, 0x1, 0x1);
        gbc.writeMem(0x3987, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7c46, gbc.sp());
        EXPECT(0x3989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 036C
        gbc.setState(0x9880, 0x679f, 0xc230, 0xbac8, 0x72db, 0x6584, 0x0, 0x0);
        gbc.writeMem(0x9880, { 0xe, 0xa8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x679f, gbc.sp());
        EXPECT(0x9882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9880));
        EXPECT(0xa8, gbc.readMem(0x9881));
        // 0E 036D
        gbc.setState(0x424a, 0xa612, 0xd410, 0x4398, 0x6fe6, 0xe9d2, 0x0, 0x1);
        gbc.writeMem(0x424a, { 0xe, 0x4f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa612, gbc.sp());
        EXPECT(0x424c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 036E
        gbc.setState(0x67a7, 0x97b6, 0xf7d0, 0x985b, 0xfc19, 0xd970, 0x0, 0x0);
        gbc.writeMem(0x67a7, { 0xe, 0xc1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x97b6, gbc.sp());
        EXPECT(0x67a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 036F
        gbc.setState(0x6c72, 0x3b92, 0xb040, 0x5dbc, 0x983, 0xec34, 0x1, 0x0);
        gbc.writeMem(0x6c72, { 0xe, 0xed });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3b92, gbc.sp());
        EXPECT(0x6c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0370
        gbc.setState(0x2760, 0xaa71, 0xb3b0, 0xd172, 0x3d53, 0xbafb, 0x1, 0x0);
        gbc.writeMem(0x2760, { 0xe, 0x18 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xaa71, gbc.sp());
        EXPECT(0x2762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0371
        gbc.setState(0x38c0, 0x198f, 0xfb70, 0x5d73, 0xf0b3, 0x24a1, 0x1, 0x1);
        gbc.writeMem(0x38c0, { 0xe, 0x94 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x198f, gbc.sp());
        EXPECT(0x38c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0372
        gbc.setState(0x9a67, 0xd8d, 0x5180, 0xf9da, 0x8122, 0xe226, 0x0, 0x0);
        gbc.writeMem(0x9a67, { 0xe, 0x7f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd8d, gbc.sp());
        EXPECT(0x9a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9a67));
        EXPECT(0x7f, gbc.readMem(0x9a68));
        // 0E 0374
        gbc.setState(0x2c, 0x41d7, 0xa200, 0x3860, 0x5634, 0x4c35, 0x0, 0x0);
        gbc.writeMem(0x2c, { 0xe, 0xac });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x41d7, gbc.sp());
        EXPECT(0x2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0375
        gbc.setState(0x8c6c, 0x7d91, 0x9af0, 0x843c, 0xf5fc, 0xc97b, 0x0, 0x0);
        gbc.writeMem(0x8c6c, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7d91, gbc.sp());
        EXPECT(0x8c6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8c6c));
        EXPECT(0xf4, gbc.readMem(0x8c6d));
        // 0E 0376
        gbc.setState(0xb096, 0x8fb, 0xd8f0, 0xe970, 0xbaeb, 0x32d, 0x0, 0x0);
        gbc.writeMem(0xb096, { 0xe, 0xec });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8fb, gbc.sp());
        EXPECT(0xb098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb096));
        EXPECT(0xec, gbc.readMem(0xb097));
        // 0E 0377
        gbc.setState(0x8b32, 0xd04, 0xc2e0, 0xc417, 0xddcd, 0xfd82, 0x1, 0x0);
        gbc.writeMem(0x8b32, { 0xe, 0xb2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd04, gbc.sp());
        EXPECT(0x8b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8b32));
        EXPECT(0xb2, gbc.readMem(0x8b33));
        // 0E 0378
        gbc.setState(0x4e56, 0xf1d1, 0xde20, 0xc58e, 0x98bf, 0xdd66, 0x0, 0x1);
        gbc.writeMem(0x4e56, { 0xe, 0x9a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf1d1, gbc.sp());
        EXPECT(0x4e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0379
        gbc.setState(0x7172, 0xae5d, 0x560, 0x6df9, 0x6a44, 0x96e5, 0x0, 0x1);
        gbc.writeMem(0x7172, { 0xe, 0x94 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xae5d, gbc.sp());
        EXPECT(0x7174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 037A
        gbc.setState(0x8ec6, 0x5cc8, 0x8060, 0xcd40, 0x5c8e, 0xf952, 0x0, 0x0);
        gbc.writeMem(0x8ec6, { 0xe, 0x65 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5cc8, gbc.sp());
        EXPECT(0x8ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8ec6));
        EXPECT(0x65, gbc.readMem(0x8ec7));
        // 0E 037B
        gbc.setState(0xddba, 0x7a95, 0x8c00, 0x6284, 0x3db2, 0x432a, 0x0, 0x1);
        gbc.writeMem(0xddba, { 0xe, 0x8a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7a95, gbc.sp());
        EXPECT(0xddbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xddba));
        EXPECT(0x8a, gbc.readMem(0xddbb));
        // 0E 037C
        gbc.setState(0x9b95, 0xb952, 0xf580, 0xe61f, 0x9db4, 0xa8c3, 0x1, 0x0);
        gbc.writeMem(0x9b95, { 0xe, 0x91 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb952, gbc.sp());
        EXPECT(0x9b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9b95));
        EXPECT(0x91, gbc.readMem(0x9b96));
        // 0E 037D
        gbc.setState(0xcf19, 0x27c8, 0x1a70, 0xd771, 0x92d, 0x81a1, 0x0, 0x0);
        gbc.writeMem(0xcf19, { 0xe, 0x49 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x27c8, gbc.sp());
        EXPECT(0xcf1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcf19));
        EXPECT(0x49, gbc.readMem(0xcf1a));
        // 0E 037E
        gbc.setState(0xb386, 0x3c40, 0xd320, 0xa0fc, 0xfa15, 0x90f, 0x0, 0x0);
        gbc.writeMem(0xb386, { 0xe, 0x98 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3c40, gbc.sp());
        EXPECT(0xb388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb386));
        EXPECT(0x98, gbc.readMem(0xb387));
        // 0E 037F
        gbc.setState(0xc241, 0x21f4, 0xebe0, 0xe841, 0xf89e, 0x31c3, 0x1, 0x1);
        gbc.writeMem(0xc241, { 0xe, 0xab });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x21f4, gbc.sp());
        EXPECT(0xc243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc241));
        EXPECT(0xab, gbc.readMem(0xc242));
        // 0E 0380
        gbc.setState(0x6af2, 0x68b0, 0x86a0, 0xe9d0, 0x16c0, 0xcb1c, 0x1, 0x0);
        gbc.writeMem(0x6af2, { 0xe, 0x9b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x68b0, gbc.sp());
        EXPECT(0x6af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0381
        gbc.setState(0xbdf3, 0x5232, 0xd480, 0xf791, 0xea02, 0x347a, 0x1, 0x1);
        gbc.writeMem(0xbdf3, { 0xe, 0x57 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5232, gbc.sp());
        EXPECT(0xbdf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbdf3));
        EXPECT(0x57, gbc.readMem(0xbdf4));
        // 0E 0383
        gbc.setState(0x48a2, 0xb5d, 0x5880, 0x462c, 0xcda5, 0x46c6, 0x0, 0x0);
        gbc.writeMem(0x48a2, { 0xe, 0x6f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb5d, gbc.sp());
        EXPECT(0x48a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0384
        gbc.setState(0x90f5, 0xf0c4, 0xddc0, 0x16a4, 0x2446, 0xe549, 0x0, 0x1);
        gbc.writeMem(0x90f5, { 0xe, 0x48 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf0c4, gbc.sp());
        EXPECT(0x90f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x90f5));
        EXPECT(0x48, gbc.readMem(0x90f6));
        // 0E 0385
        gbc.setState(0xdcd5, 0x2e99, 0x7ee0, 0x4d22, 0x2e07, 0x1877, 0x1, 0x0);
        gbc.writeMem(0xdcd5, { 0xe, 0xf0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2e99, gbc.sp());
        EXPECT(0xdcd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdcd5));
        EXPECT(0xf0, gbc.readMem(0xdcd6));
        // 0E 0386
        gbc.setState(0xb5d4, 0x6045, 0x4270, 0x9a4e, 0x9860, 0xf467, 0x0, 0x0);
        gbc.writeMem(0xb5d4, { 0xe, 0x23 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6045, gbc.sp());
        EXPECT(0xb5d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb5d4));
        EXPECT(0x23, gbc.readMem(0xb5d5));
        // 0E 0387
        gbc.setState(0xcbb7, 0xa71a, 0x2020, 0x39d8, 0x530e, 0x208, 0x0, 0x0);
        gbc.writeMem(0xcbb7, { 0xe, 0xed });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa71a, gbc.sp());
        EXPECT(0xcbb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcbb7));
        EXPECT(0xed, gbc.readMem(0xcbb8));
        // 0E 0389
        gbc.setState(0x7f9, 0x2ca7, 0x84c0, 0xc562, 0x4569, 0xef79, 0x1, 0x1);
        gbc.writeMem(0x7f9, { 0xe, 0xac });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2ca7, gbc.sp());
        EXPECT(0x7fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 038A
        gbc.setState(0xb006, 0x7f44, 0x36a0, 0xbbe, 0xb222, 0xcec4, 0x1, 0x1);
        gbc.writeMem(0xb006, { 0xe, 0x95 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7f44, gbc.sp());
        EXPECT(0xb008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb006));
        EXPECT(0x95, gbc.readMem(0xb007));
        // 0E 038B
        gbc.setState(0x739f, 0xbed4, 0xb6b0, 0x8b8, 0x68ca, 0x2749, 0x1, 0x0);
        gbc.writeMem(0x739f, { 0xe, 0x96 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbed4, gbc.sp());
        EXPECT(0x73a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 038C
        gbc.setState(0x34b2, 0xa9b9, 0x43c0, 0xb741, 0xa5d7, 0x286e, 0x1, 0x0);
        gbc.writeMem(0x34b2, { 0xe, 0xda });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa9b9, gbc.sp());
        EXPECT(0x34b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 038D
        gbc.setState(0x9892, 0x1033, 0x48e0, 0x54c, 0x811, 0x3b5c, 0x0, 0x1);
        gbc.writeMem(0x9892, { 0xe, 0x69 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1033, gbc.sp());
        EXPECT(0x9894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9892));
        EXPECT(0x69, gbc.readMem(0x9893));
        // 0E 038E
        gbc.setState(0x3e1e, 0x2420, 0xf710, 0x39d5, 0x4473, 0x560e, 0x0, 0x0);
        gbc.writeMem(0x3e1e, { 0xe, 0xeb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2420, gbc.sp());
        EXPECT(0x3e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 038F
        gbc.setState(0x2c05, 0xe8a2, 0x5730, 0xd2d6, 0x8d23, 0x1725, 0x1, 0x0);
        gbc.writeMem(0x2c05, { 0xe, 0x65 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe8a2, gbc.sp());
        EXPECT(0x2c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0390
        gbc.setState(0x4e72, 0x96fa, 0xc020, 0xb7b6, 0x5c2b, 0x3142, 0x1, 0x1);
        gbc.writeMem(0x4e72, { 0xe, 0x91 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x96fa, gbc.sp());
        EXPECT(0x4e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 0391
        gbc.setState(0x6ae6, 0x3244, 0x45d0, 0xa34c, 0xb5ee, 0x8c9, 0x1, 0x1);
        gbc.writeMem(0x6ae6, { 0xe, 0xb3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3244, gbc.sp());
        EXPECT(0x6ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0392
        gbc.setState(0xba61, 0xd4af, 0xae90, 0x4d4f, 0x4b77, 0x4492, 0x1, 0x1);
        gbc.writeMem(0xba61, { 0xe, 0x6d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd4af, gbc.sp());
        EXPECT(0xba63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xba61));
        EXPECT(0x6d, gbc.readMem(0xba62));
        // 0E 0393
        gbc.setState(0x7160, 0xce3, 0xf1d0, 0xbf3, 0xcb96, 0xee08, 0x1, 0x0);
        gbc.writeMem(0x7160, { 0xe, 0xc8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xce3, gbc.sp());
        EXPECT(0x7162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0394
        gbc.setState(0xb040, 0xe4e2, 0x870, 0x269c, 0x441e, 0x8ed6, 0x0, 0x0);
        gbc.writeMem(0xb040, { 0xe, 0xac });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe4e2, gbc.sp());
        EXPECT(0xb042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb040));
        EXPECT(0xac, gbc.readMem(0xb041));
        // 0E 0395
        gbc.setState(0x9c6e, 0x89ab, 0x26f0, 0x77a1, 0x65e, 0x530a, 0x0, 0x1);
        gbc.writeMem(0x9c6e, { 0xe, 0x3d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x89ab, gbc.sp());
        EXPECT(0x9c70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9c6e));
        EXPECT(0x3d, gbc.readMem(0x9c6f));
        // 0E 0396
        gbc.setState(0x2b8b, 0x41, 0xce90, 0x52ac, 0xc53e, 0x3bd, 0x0, 0x1);
        gbc.writeMem(0x2b8b, { 0xe, 0x82 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x41, gbc.sp());
        EXPECT(0x2b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0397
        gbc.setState(0x1c80, 0xcd8f, 0x6590, 0xa351, 0x1d76, 0x6675, 0x0, 0x1);
        gbc.writeMem(0x1c80, { 0xe, 0x22 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xcd8f, gbc.sp());
        EXPECT(0x1c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0398
        gbc.setState(0x34af, 0xcaf5, 0x13b0, 0xfe57, 0x2d0b, 0xfb5e, 0x1, 0x1);
        gbc.writeMem(0x34af, { 0xe, 0xcf });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcaf5, gbc.sp());
        EXPECT(0x34b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 0399
        gbc.setState(0x8bd3, 0x31e4, 0xc110, 0xc489, 0x7c75, 0x1200, 0x1, 0x1);
        gbc.writeMem(0x8bd3, { 0xe, 0xf6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x31e4, gbc.sp());
        EXPECT(0x8bd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8bd3));
        EXPECT(0xf6, gbc.readMem(0x8bd4));
        // 0E 039A
        gbc.setState(0x110d, 0x9c00, 0xf540, 0x3c1a, 0x6533, 0xd90a, 0x0, 0x1);
        gbc.writeMem(0x110d, { 0xe, 0xdc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9c00, gbc.sp());
        EXPECT(0x110f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 039B
        gbc.setState(0xa997, 0xd704, 0x6ca0, 0xe827, 0xd3f1, 0xf5cd, 0x1, 0x0);
        gbc.writeMem(0xa997, { 0xe, 0x5e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd704, gbc.sp());
        EXPECT(0xa999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa997));
        EXPECT(0x5e, gbc.readMem(0xa998));
        // 0E 039D
        gbc.setState(0x2692, 0xa950, 0xcc40, 0xea00, 0x577, 0xb757, 0x1, 0x0);
        gbc.writeMem(0x2692, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa950, gbc.sp());
        EXPECT(0x2694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 039E
        gbc.setState(0x3f66, 0x2cd3, 0x6d60, 0x75e5, 0x710a, 0x915c, 0x0, 0x0);
        gbc.writeMem(0x3f66, { 0xe, 0x61 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2cd3, gbc.sp());
        EXPECT(0x3f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03A0
        gbc.setState(0x9e1b, 0x9a09, 0x83d0, 0xa3dd, 0x50d5, 0x2327, 0x0, 0x1);
        gbc.writeMem(0x9e1b, { 0xe, 0x30 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9a09, gbc.sp());
        EXPECT(0x9e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9e1b));
        EXPECT(0x30, gbc.readMem(0x9e1c));
        // 0E 03A1
        gbc.setState(0x27dc, 0xaab9, 0x3010, 0xace7, 0xa82d, 0xe654, 0x0, 0x0);
        gbc.writeMem(0x27dc, { 0xe, 0x95 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xaab9, gbc.sp());
        EXPECT(0x27de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03A2
        gbc.setState(0x936e, 0xa18f, 0xb910, 0xaf10, 0xc07d, 0x7209, 0x0, 0x0);
        gbc.writeMem(0x936e, { 0xe, 0xd0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa18f, gbc.sp());
        EXPECT(0x9370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x936e));
        EXPECT(0xd0, gbc.readMem(0x936f));
        // 0E 03A3
        gbc.setState(0x2afd, 0x6803, 0xe540, 0xcd29, 0x82b0, 0x59e1, 0x0, 0x1);
        gbc.writeMem(0x2afd, { 0xe, 0x8b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6803, gbc.sp());
        EXPECT(0x2aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03A4
        gbc.setState(0xbd01, 0xb041, 0xc2c0, 0x90a7, 0x1fd8, 0xa0b4, 0x0, 0x0);
        gbc.writeMem(0xbd01, { 0xe, 0x7f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb041, gbc.sp());
        EXPECT(0xbd03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbd01));
        EXPECT(0x7f, gbc.readMem(0xbd02));
        // 0E 03A5
        gbc.setState(0xbdd7, 0xe6fd, 0xda70, 0x27bb, 0xb271, 0xd52c, 0x0, 0x1);
        gbc.writeMem(0xbdd7, { 0xe, 0xa4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe6fd, gbc.sp());
        EXPECT(0xbdd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbdd7));
        EXPECT(0xa4, gbc.readMem(0xbdd8));
        // 0E 03A6
        gbc.setState(0xd248, 0xe972, 0x9830, 0xb66b, 0xd81a, 0x6b20, 0x0, 0x0);
        gbc.writeMem(0xd248, { 0xe, 0x5b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe972, gbc.sp());
        EXPECT(0xd24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd248));
        EXPECT(0x5b, gbc.readMem(0xd249));
        // 0E 03A7
        gbc.setState(0x421a, 0x234c, 0x8d60, 0xcacd, 0x1d40, 0xc06, 0x0, 0x0);
        gbc.writeMem(0x421a, { 0xe, 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x234c, gbc.sp());
        EXPECT(0x421c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03A8
        gbc.setState(0x8656, 0xc480, 0xfbc0, 0x5d05, 0x850d, 0x72e8, 0x0, 0x1);
        gbc.writeMem(0x8656, { 0xe, 0xfe });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc480, gbc.sp());
        EXPECT(0x8658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8656));
        EXPECT(0xfe, gbc.readMem(0x8657));
        // 0E 03A9
        gbc.setState(0x5aba, 0x66b4, 0x9ae0, 0x358, 0xf6c1, 0x5399, 0x0, 0x1);
        gbc.writeMem(0x5aba, { 0xe, 0x25 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x66b4, gbc.sp());
        EXPECT(0x5abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03AA
        gbc.setState(0x5577, 0x9f53, 0x9220, 0x9c00, 0x2d5d, 0x9101, 0x0, 0x1);
        gbc.writeMem(0x5577, { 0xe, 0x8b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9f53, gbc.sp());
        EXPECT(0x5579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03AB
        gbc.setState(0xb247, 0x62ce, 0xded0, 0xa8b4, 0x6160, 0x15dd, 0x0, 0x1);
        gbc.writeMem(0xb247, { 0xe, 0xb2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x62ce, gbc.sp());
        EXPECT(0xb249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb247));
        EXPECT(0xb2, gbc.readMem(0xb248));
        // 0E 03AC
        gbc.setState(0xc166, 0x8558, 0xc610, 0x4412, 0x11ba, 0x5fcd, 0x1, 0x1);
        gbc.writeMem(0xc166, { 0xe, 0xa4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8558, gbc.sp());
        EXPECT(0xc168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc166));
        EXPECT(0xa4, gbc.readMem(0xc167));
        // 0E 03AD
        gbc.setState(0x2c59, 0xd38a, 0x56b0, 0xdde2, 0x258c, 0x4982, 0x0, 0x1);
        gbc.writeMem(0x2c59, { 0xe, 0x6a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd38a, gbc.sp());
        EXPECT(0x2c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03AE
        gbc.setState(0x8869, 0x9967, 0x1cc0, 0x104a, 0xf278, 0xbe90, 0x0, 0x1);
        gbc.writeMem(0x8869, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9967, gbc.sp());
        EXPECT(0x886b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8869));
        EXPECT(0xe9, gbc.readMem(0x886a));
        // 0E 03AF
        gbc.setState(0x6b41, 0xfe35, 0x63e0, 0x344b, 0x1046, 0x1d5, 0x1, 0x0);
        gbc.writeMem(0x6b41, { 0xe, 0x80 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfe35, gbc.sp());
        EXPECT(0x6b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03B0
        gbc.setState(0xe0b3, 0x8e23, 0xbd70, 0x7e99, 0x3b2d, 0xea33, 0x0, 0x1);
        gbc.writeMem(0xe0b3, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8e23, gbc.sp());
        EXPECT(0xe0b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe0b3));
        EXPECT(0xf4, gbc.readMem(0xe0b4));
        // 0E 03B1
        gbc.setState(0x4070, 0xde96, 0x8dd0, 0x8b16, 0xa12c, 0x5058, 0x0, 0x0);
        gbc.writeMem(0x4070, { 0xe, 0xb4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xde96, gbc.sp());
        EXPECT(0x4072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03B2
        gbc.setState(0x8ff0, 0xa63e, 0x6fd0, 0xbf41, 0x12e7, 0x427e, 0x1, 0x1);
        gbc.writeMem(0x8ff0, { 0xe, 0x3a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa63e, gbc.sp());
        EXPECT(0x8ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8ff0));
        EXPECT(0x3a, gbc.readMem(0x8ff1));
        // 0E 03B3
        gbc.setState(0x8b86, 0xa5ba, 0x2310, 0x451b, 0x369d, 0x861c, 0x0, 0x1);
        gbc.writeMem(0x8b86, { 0xe, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa5ba, gbc.sp());
        EXPECT(0x8b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8b86));
        EXPECT(0x2f, gbc.readMem(0x8b87));
        // 0E 03B4
        gbc.setState(0x18d0, 0x8670, 0xd540, 0xa0ee, 0x1e70, 0x3955, 0x1, 0x1);
        gbc.writeMem(0x18d0, { 0xe, 0x4d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8670, gbc.sp());
        EXPECT(0x18d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03B5
        gbc.setState(0x6b2, 0xc307, 0x3350, 0xc8df, 0x9746, 0x51f5, 0x0, 0x1);
        gbc.writeMem(0x6b2, { 0xe, 0x19 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc307, gbc.sp());
        EXPECT(0x6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03B6
        gbc.setState(0xb8b1, 0x2834, 0x3510, 0x7fc5, 0xb5a6, 0x7110, 0x0, 0x1);
        gbc.writeMem(0xb8b1, { 0xe, 0xdb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2834, gbc.sp());
        EXPECT(0xb8b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb8b1));
        EXPECT(0xdb, gbc.readMem(0xb8b2));
        // 0E 03B7
        gbc.setState(0x31c8, 0x7109, 0xd750, 0x99e5, 0xad92, 0x17fd, 0x1, 0x1);
        gbc.writeMem(0x31c8, { 0xe, 0x74 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7109, gbc.sp());
        EXPECT(0x31ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03B8
        gbc.setState(0x7f98, 0x7a38, 0xd7c0, 0x15f3, 0xfa70, 0xad7a, 0x1, 0x0);
        gbc.writeMem(0x7f98, { 0xe, 0x2d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7a38, gbc.sp());
        EXPECT(0x7f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03B9
        gbc.setState(0x5242, 0x6284, 0x1750, 0x5ecf, 0x6bd6, 0x83a8, 0x1, 0x0);
        gbc.writeMem(0x5242, { 0xe, 0x7f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6284, gbc.sp());
        EXPECT(0x5244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03BA
        gbc.setState(0xa1fc, 0x4ffe, 0x5850, 0xd24e, 0x344f, 0xdf5a, 0x1, 0x1);
        gbc.writeMem(0xa1fc, { 0xe, 0x3a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4ffe, gbc.sp());
        EXPECT(0xa1fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa1fc));
        EXPECT(0x3a, gbc.readMem(0xa1fd));
        // 0E 03BB
        gbc.setState(0x7e44, 0xf72c, 0x8620, 0x5c36, 0xb989, 0x2c29, 0x1, 0x1);
        gbc.writeMem(0x7e44, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf72c, gbc.sp());
        EXPECT(0x7e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03BC
        gbc.setState(0xaa9e, 0x8fb, 0xc310, 0x9021, 0x2d86, 0xe398, 0x0, 0x1);
        gbc.writeMem(0xaa9e, { 0xe, 0xa4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8fb, gbc.sp());
        EXPECT(0xaaa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xaa9e));
        EXPECT(0xa4, gbc.readMem(0xaa9f));
        // 0E 03BD
        gbc.setState(0xe01a, 0xb2ea, 0x2760, 0x1ce3, 0x6073, 0xa4b3, 0x1, 0x0);
        gbc.writeMem(0xe01a, { 0xe, 0x8d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb2ea, gbc.sp());
        EXPECT(0xe01c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe01a));
        EXPECT(0x8d, gbc.readMem(0xe01b));
        // 0E 03BE
        gbc.setState(0xeca9, 0x8010, 0x77b0, 0x2333, 0x4ad0, 0xbcd2, 0x1, 0x1);
        gbc.writeMem(0xeca9, { 0xe, 0xed });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8010, gbc.sp());
        EXPECT(0xecab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xeca9));
        EXPECT(0xed, gbc.readMem(0xecaa));
        // 0E 03BF
        gbc.setState(0xe94d, 0xebca, 0xda50, 0x644c, 0x88d6, 0xbd15, 0x1, 0x1);
        gbc.writeMem(0xe94d, { 0xe, 0xfa });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xebca, gbc.sp());
        EXPECT(0xe94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe94d));
        EXPECT(0xfa, gbc.readMem(0xe94e));
        // 0E 03C0
        gbc.setState(0xbbda, 0x774b, 0x890, 0x6d98, 0xb264, 0xeaf7, 0x0, 0x1);
        gbc.writeMem(0xbbda, { 0xe, 0x20 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x774b, gbc.sp());
        EXPECT(0xbbdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbbda));
        EXPECT(0x20, gbc.readMem(0xbbdb));
        // 0E 03C1
        gbc.setState(0xefec, 0x45a0, 0xf320, 0x146e, 0x5ae0, 0x8bcd, 0x0, 0x0);
        gbc.writeMem(0xefec, { 0xe, 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x45a0, gbc.sp());
        EXPECT(0xefee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xefec));
        EXPECT(0xb0, gbc.readMem(0xefed));
        // 0E 03C2
        gbc.setState(0xa119, 0x8a58, 0xc470, 0x675c, 0x3263, 0x4b39, 0x0, 0x1);
        gbc.writeMem(0xa119, { 0xe, 0xe0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8a58, gbc.sp());
        EXPECT(0xa11b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa119));
        EXPECT(0xe0, gbc.readMem(0xa11a));
        // 0E 03C3
        gbc.setState(0x92b7, 0xc698, 0xc1e0, 0x73fc, 0xd57, 0x5042, 0x0, 0x0);
        gbc.writeMem(0x92b7, { 0xe, 0xc2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc698, gbc.sp());
        EXPECT(0x92b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x92b7));
        EXPECT(0xc2, gbc.readMem(0x92b8));
        // 0E 03C4
        gbc.setState(0x11b4, 0x387b, 0x2ea0, 0xd626, 0x31d3, 0x9ea6, 0x0, 0x0);
        gbc.writeMem(0x11b4, { 0xe, 0xdd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x387b, gbc.sp());
        EXPECT(0x11b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03C5
        gbc.setState(0x9289, 0xdac2, 0x710, 0x2cc5, 0xd61b, 0xdab1, 0x1, 0x1);
        gbc.writeMem(0x9289, { 0xe, 0x14 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdac2, gbc.sp());
        EXPECT(0x928b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9289));
        EXPECT(0x14, gbc.readMem(0x928a));
        // 0E 03C6
        gbc.setState(0x83a8, 0x4392, 0xb8e0, 0x788a, 0x50d9, 0x1ac4, 0x0, 0x1);
        gbc.writeMem(0x83a8, { 0xe, 0x1f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4392, gbc.sp());
        EXPECT(0x83aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x83a8));
        EXPECT(0x1f, gbc.readMem(0x83a9));
        // 0E 03C7
        gbc.setState(0x87c2, 0x748c, 0x6260, 0x24b6, 0x9825, 0xc1c9, 0x0, 0x1);
        gbc.writeMem(0x87c2, { 0xe, 0x9c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x748c, gbc.sp());
        EXPECT(0x87c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x87c2));
        EXPECT(0x9c, gbc.readMem(0x87c3));
        // 0E 03C8
        gbc.setState(0x1770, 0xb5da, 0x40, 0xd31a, 0x7a5c, 0x595e, 0x1, 0x1);
        gbc.writeMem(0x1770, { 0xe, 0x15 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb5da, gbc.sp());
        EXPECT(0x1772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03C9
        gbc.setState(0x9364, 0x8043, 0xd950, 0xcc6d, 0xee7a, 0x533, 0x1, 0x1);
        gbc.writeMem(0x9364, { 0xe, 0xd1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8043, gbc.sp());
        EXPECT(0x9366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9364));
        EXPECT(0xd1, gbc.readMem(0x9365));
        // 0E 03CA
        gbc.setState(0x2af8, 0x8e1, 0xd8b0, 0x38b5, 0x2502, 0x3105, 0x0, 0x1);
        gbc.writeMem(0x2af8, { 0xe, 0xce });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8e1, gbc.sp());
        EXPECT(0x2afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03CB
        gbc.setState(0x97cc, 0x6bf2, 0x5a20, 0x7c84, 0xedc1, 0xd017, 0x0, 0x0);
        gbc.writeMem(0x97cc, { 0xe, 0xd7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6bf2, gbc.sp());
        EXPECT(0x97ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x97cc));
        EXPECT(0xd7, gbc.readMem(0x97cd));
        // 0E 03CC
        gbc.setState(0x46b, 0x97f0, 0x4160, 0xc7a3, 0xd857, 0x7aa3, 0x1, 0x0);
        gbc.writeMem(0x46b, { 0xe, 0xa2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x97f0, gbc.sp());
        EXPECT(0x46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03CE
        gbc.setState(0x8b3d, 0x228c, 0x1e60, 0x88e0, 0x3117, 0x73ee, 0x0, 0x1);
        gbc.writeMem(0x8b3d, { 0xe, 0xe2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x228c, gbc.sp());
        EXPECT(0x8b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8b3d));
        EXPECT(0xe2, gbc.readMem(0x8b3e));
        // 0E 03CF
        gbc.setState(0x71c0, 0xfd46, 0x2ed0, 0x9cce, 0x26ff, 0x199, 0x1, 0x0);
        gbc.writeMem(0x71c0, { 0xe, 0xb1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfd46, gbc.sp());
        EXPECT(0x71c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03D0
        gbc.setState(0x4f7e, 0xbd2c, 0x17d0, 0x22df, 0xc0ff, 0x9b7a, 0x0, 0x1);
        gbc.writeMem(0x4f7e, { 0xe, 0x51 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbd2c, gbc.sp());
        EXPECT(0x4f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03D2
        gbc.setState(0x7b49, 0xe3e1, 0x87f0, 0xd79b, 0x8bdb, 0x9476, 0x0, 0x0);
        gbc.writeMem(0x7b49, { 0xe, 0xe4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe3e1, gbc.sp());
        EXPECT(0x7b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03D3
        gbc.setState(0xc5e6, 0x13ed, 0x3460, 0xce45, 0x3ac0, 0x78b1, 0x1, 0x1);
        gbc.writeMem(0xc5e6, { 0xe, 0xf9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x13ed, gbc.sp());
        EXPECT(0xc5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc5e6));
        EXPECT(0xf9, gbc.readMem(0xc5e7));
        // 0E 03D4
        gbc.setState(0x73f4, 0x864, 0x3a10, 0x7204, 0x8823, 0xc70a, 0x0, 0x0);
        gbc.writeMem(0x73f4, { 0xe, 0xce });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x864, gbc.sp());
        EXPECT(0x73f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03D5
        gbc.setState(0x113d, 0x411, 0x32e0, 0x9597, 0xb562, 0xb21d, 0x1, 0x1);
        gbc.writeMem(0x113d, { 0xe, 0x6d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x411, gbc.sp());
        EXPECT(0x113f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03D6
        gbc.setState(0x4cb3, 0x2841, 0x5bf0, 0x2677, 0x56a4, 0xaa80, 0x0, 0x0);
        gbc.writeMem(0x4cb3, { 0xe, 0x12 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2841, gbc.sp());
        EXPECT(0x4cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03D7
        gbc.setState(0x2512, 0xfd65, 0x8dd0, 0x4b98, 0xb077, 0xcfba, 0x0, 0x0);
        gbc.writeMem(0x2512, { 0xe, 0x7d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfd65, gbc.sp());
        EXPECT(0x2514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03D8
        gbc.setState(0x227a, 0xb8f4, 0x6a30, 0x819b, 0xb988, 0x1594, 0x1, 0x0);
        gbc.writeMem(0x227a, { 0xe, 0x52 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb8f4, gbc.sp());
        EXPECT(0x227c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03D9
        gbc.setState(0x64a7, 0x1902, 0xe730, 0x2f3, 0xd5ce, 0xdf79, 0x1, 0x1);
        gbc.writeMem(0x64a7, { 0xe, 0x13 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1902, gbc.sp());
        EXPECT(0x64a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03DA
        gbc.setState(0x1ecd, 0x4b76, 0x3930, 0xd246, 0x4434, 0xaa42, 0x1, 0x0);
        gbc.writeMem(0x1ecd, { 0xe, 0xa6 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4b76, gbc.sp());
        EXPECT(0x1ecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03DB
        gbc.setState(0x8927, 0x1e10, 0x9de0, 0x3d54, 0xa14d, 0x9f14, 0x1, 0x0);
        gbc.writeMem(0x8927, { 0xe, 0x22 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1e10, gbc.sp());
        EXPECT(0x8929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8927));
        EXPECT(0x22, gbc.readMem(0x8928));
        // 0E 03DC
        gbc.setState(0x2a2d, 0x6c98, 0x9e0, 0xa6aa, 0x3263, 0x683e, 0x0, 0x1);
        gbc.writeMem(0x2a2d, { 0xe, 0xf3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6c98, gbc.sp());
        EXPECT(0x2a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03DD
        gbc.setState(0x2f1e, 0xd79a, 0x8330, 0x83c9, 0xe78c, 0xe3d0, 0x1, 0x1);
        gbc.writeMem(0x2f1e, { 0xe, 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd79a, gbc.sp());
        EXPECT(0x2f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0E 03DE
        gbc.setState(0xa4d6, 0x4aea, 0xf370, 0x3d0d, 0x895e, 0x4f22, 0x1, 0x0);
        gbc.writeMem(0xa4d6, { 0xe, 0xc8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4aea, gbc.sp());
        EXPECT(0xa4d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa4d6));
        EXPECT(0xc8, gbc.readMem(0xa4d7));
        // 0E 03DF
        gbc.setState(0x9890, 0x7212, 0x9800, 0x7056, 0x86c3, 0x3e7a, 0x1, 0x0);
        gbc.writeMem(0x9890, { 0xe, 0x63 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7212, gbc.sp());
        EXPECT(0x9892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9890));
        EXPECT(0x63, gbc.readMem(0x9891));
        // 0E 03E0
        gbc.setState(0xc8c8, 0x4056, 0xe1a0, 0x50fe, 0xe1aa, 0xcb20, 0x0, 0x0);
        gbc.writeMem(0xc8c8, { 0xe, 0x50 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4056, gbc.sp());
        EXPECT(0xc8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc8c8));
        EXPECT(0x50, gbc.readMem(0xc8c9));
        // 0E 03E1
        gbc.setState(0x24be, 0xb50e, 0x7aa0, 0xb0f8, 0x2d6f, 0x9226, 0x0, 0x1);
        gbc.writeMem(0x24be, { 0xe, 0xa8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb50e, gbc.sp());
        EXPECT(0x24c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03E2
        gbc.setState(0xdd9a, 0xce1a, 0xd600, 0x630, 0x4b58, 0x2e07, 0x1, 0x1);
        gbc.writeMem(0xdd9a, { 0xe, 0x53 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xce1a, gbc.sp());
        EXPECT(0xdd9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xdd9a));
        EXPECT(0x53, gbc.readMem(0xdd9b));
        // 0E 03E3
        gbc.setState(0x2a8c, 0x42b8, 0xbe60, 0x8dd9, 0x373e, 0xfe90, 0x1, 0x1);
        gbc.writeMem(0x2a8c, { 0xe, 0xce });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x42b8, gbc.sp());
        EXPECT(0x2a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03E4
        gbc.setState(0x9fae, 0xcb7e, 0xc090, 0xec22, 0xc1f8, 0x86cb, 0x1, 0x1);
        gbc.writeMem(0x9fae, { 0xe, 0x83 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcb7e, gbc.sp());
        EXPECT(0x9fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9fae));
        EXPECT(0x83, gbc.readMem(0x9faf));
        // 0E 03E5
        gbc.setState(0xed07, 0xee0f, 0x4310, 0x2c9, 0x76c, 0xe1b, 0x0, 0x1);
        gbc.writeMem(0xed07, { 0xe, 0x54 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xee0f, gbc.sp());
        EXPECT(0xed09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xed07));
        EXPECT(0x54, gbc.readMem(0xed08));
        // 0E 03E6
        gbc.setState(0x2879, 0x346a, 0x9640, 0xf26f, 0xe9ca, 0x2437, 0x0, 0x0);
        gbc.writeMem(0x2879, { 0xe, 0xc4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x346a, gbc.sp());
        EXPECT(0x287b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0E 03E7
        gbc.setState(0xe32e, 0x272c, 0xdb90, 0x8965, 0x6ed0, 0xcb81, 0x0, 0x1);
        gbc.writeMem(0xe32e, { 0xe, 0x9a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x272c, gbc.sp());
        EXPECT(0xe330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe32e));
        EXPECT(0x9a, gbc.readMem(0xe32f));
    }
