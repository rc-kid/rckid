    TEST(gbcemu, opcode_cb_4e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 4E 0000
        gbc.setState(0x3638, 0x89d3, 0xe50, 0xe8f7, 0x7b25, 0x1771, 0x1, 0x1);
        gbc.writeMem(0x1771, { 0x15 });
        gbc.writeMem(0x3638, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x89d3, gbc.sp());
        EXPECT(0x363a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0001
        gbc.setState(0x6fec, 0x7d92, 0x55d0, 0xfaa, 0xdf5d, 0xb98a, 0x1, 0x0);
        gbc.writeMem(0x6fec, { 0xcb, 0x4e });
        gbc.writeMem(0xb98a, { 0xd6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7d92, gbc.sp());
        EXPECT(0x6fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb98a));
        // CB 4E 0002
        gbc.setState(0x7e50, 0x4d56, 0x5390, 0x9ac7, 0x7e6c, 0xa007, 0x1, 0x0);
        gbc.writeMem(0x7e50, { 0xcb, 0x4e });
        gbc.writeMem(0xa007, { 0x6 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4d56, gbc.sp());
        EXPECT(0x7e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa007));
        // CB 4E 0003
        gbc.setState(0x8d6e, 0x3bf0, 0x3af0, 0x26aa, 0xce0c, 0x777b, 0x0, 0x1);
        gbc.writeMem(0x777b, { 0x3 });
        gbc.writeMem(0x8d6e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3bf0, gbc.sp());
        EXPECT(0x8d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d6e));
        EXPECT(0x4e, gbc.readMem(0x8d6f));
        // CB 4E 0004
        gbc.setState(0xb66, 0x4220, 0x7d30, 0x2ce6, 0x822, 0x5337, 0x0, 0x1);
        gbc.writeMem(0xb66, { 0xcb, 0x4e });
        gbc.writeMem(0x5337, { 0x72 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4220, gbc.sp());
        EXPECT(0xb68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0005
        gbc.setState(0xabae, 0xbbb3, 0xbfa0, 0xfeb4, 0x466b, 0xf546, 0x1, 0x1);
        gbc.writeMem(0xabae, { 0xcb, 0x4e });
        gbc.writeMem(0xf546, { 0x27 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbbb3, gbc.sp());
        EXPECT(0xabb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabae));
        EXPECT(0x4e, gbc.readMem(0xabaf));
        EXPECT(0x27, gbc.readMem(0xf546));
        // CB 4E 0006
        gbc.setState(0x6f94, 0xa36d, 0x9d80, 0xa099, 0x35d9, 0x8fe1, 0x0, 0x1);
        gbc.writeMem(0x6f94, { 0xcb, 0x4e });
        gbc.writeMem(0x8fe1, { 0x23 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa36d, gbc.sp());
        EXPECT(0x6f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8fe1));
        // CB 4E 0007
        gbc.setState(0xe925, 0x104d, 0xf6a0, 0xa7f9, 0x3c4b, 0xe44, 0x0, 0x1);
        gbc.writeMem(0xe44, { 0x8 });
        gbc.writeMem(0xe925, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x104d, gbc.sp());
        EXPECT(0xe927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe925));
        EXPECT(0x4e, gbc.readMem(0xe926));
        // CB 4E 0009
        gbc.setState(0xed42, 0x7ff, 0x4780, 0x4973, 0xb4e8, 0xfa4e, 0x0, 0x0);
        gbc.writeMem(0xed42, { 0xcb, 0x4e });
        gbc.writeMem(0xfa4e, { 0xde });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7ff, gbc.sp());
        EXPECT(0xed44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed42));
        EXPECT(0x4e, gbc.readMem(0xed43));
        EXPECT(0xde, gbc.readMem(0xfa4e));
        // CB 4E 000A
        gbc.setState(0xa52b, 0xed44, 0xdb10, 0xe67c, 0xa89d, 0xc4ab, 0x0, 0x0);
        gbc.writeMem(0xa52b, { 0xcb, 0x4e });
        gbc.writeMem(0xc4ab, { 0x6d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xed44, gbc.sp());
        EXPECT(0xa52d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa52b));
        EXPECT(0x4e, gbc.readMem(0xa52c));
        EXPECT(0x6d, gbc.readMem(0xc4ab));
        // CB 4E 000B
        gbc.setState(0x9ecf, 0xf7fe, 0xdb70, 0x3738, 0x17a3, 0x650d, 0x1, 0x0);
        gbc.writeMem(0x650d, { 0x4a });
        gbc.writeMem(0x9ecf, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf7fe, gbc.sp());
        EXPECT(0x9ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ecf));
        EXPECT(0x4e, gbc.readMem(0x9ed0));
        // CB 4E 000C
        gbc.setState(0xa145, 0xf59d, 0xc0, 0x7d3b, 0x6386, 0x58e4, 0x1, 0x0);
        gbc.writeMem(0x58e4, { 0x4 });
        gbc.writeMem(0xa145, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf59d, gbc.sp());
        EXPECT(0xa147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa145));
        EXPECT(0x4e, gbc.readMem(0xa146));
        // CB 4E 000D
        gbc.setState(0x22ac, 0x43c, 0x9fb0, 0x921c, 0xbfd6, 0x2037, 0x0, 0x0);
        gbc.writeMem(0x2037, { 0x1d });
        gbc.writeMem(0x22ac, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x43c, gbc.sp());
        EXPECT(0x22ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 000E
        gbc.setState(0x9f19, 0xb87b, 0x2f60, 0x3d1f, 0xeae1, 0xdb4f, 0x0, 0x1);
        gbc.writeMem(0x9f19, { 0xcb, 0x4e });
        gbc.writeMem(0xdb4f, { 0xb5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb87b, gbc.sp());
        EXPECT(0x9f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f19));
        EXPECT(0x4e, gbc.readMem(0x9f1a));
        EXPECT(0xb5, gbc.readMem(0xdb4f));
        // CB 4E 000F
        gbc.setState(0x28c4, 0x4c40, 0xc170, 0xa5b6, 0xb94b, 0xebf5, 0x1, 0x1);
        gbc.writeMem(0x28c4, { 0xcb, 0x4e });
        gbc.writeMem(0xebf5, { 0x80 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4c40, gbc.sp());
        EXPECT(0x28c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xebf5));
        // CB 4E 0010
        gbc.setState(0x66a5, 0x99f3, 0xa7e0, 0xf842, 0x1702, 0xada9, 0x0, 0x1);
        gbc.writeMem(0x66a5, { 0xcb, 0x4e });
        gbc.writeMem(0xada9, { 0x7f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x99f3, gbc.sp());
        EXPECT(0x66a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xada9));
        // CB 4E 0011
        gbc.setState(0xde5e, 0xff15, 0xd890, 0xa140, 0x6d4, 0x9dc2, 0x0, 0x0);
        gbc.writeMem(0x9dc2, { 0x5 });
        gbc.writeMem(0xde5e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xff15, gbc.sp());
        EXPECT(0xde60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9dc2));
        EXPECT(0xcb, gbc.readMem(0xde5e));
        EXPECT(0x4e, gbc.readMem(0xde5f));
        // CB 4E 0012
        gbc.setState(0x5f28, 0x100d, 0x3d10, 0x9f18, 0xe24d, 0xf401, 0x1, 0x1);
        gbc.writeMem(0x5f28, { 0xcb, 0x4e });
        gbc.writeMem(0xf401, { 0x16 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x100d, gbc.sp());
        EXPECT(0x5f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xf401));
        // CB 4E 0013
        gbc.setState(0x4d57, 0x8549, 0x9240, 0x27e7, 0xd41b, 0x5ce3, 0x1, 0x0);
        gbc.writeMem(0x4d57, { 0xcb, 0x4e });
        gbc.writeMem(0x5ce3, { 0xc4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8549, gbc.sp());
        EXPECT(0x4d59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0014
        gbc.setState(0x47c0, 0x7711, 0xdc30, 0x69fc, 0x5fe2, 0xbfdf, 0x0, 0x0);
        gbc.writeMem(0x47c0, { 0xcb, 0x4e });
        gbc.writeMem(0xbfdf, { 0x52 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7711, gbc.sp());
        EXPECT(0x47c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbfdf));
        // CB 4E 0016
        gbc.setState(0xd3ba, 0xd2c0, 0xbb50, 0x2c5e, 0x88ff, 0xd4be, 0x1, 0x0);
        gbc.writeMem(0xd3ba, { 0xcb, 0x4e });
        gbc.writeMem(0xd4be, { 0xd3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd2c0, gbc.sp());
        EXPECT(0xd3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ba));
        EXPECT(0x4e, gbc.readMem(0xd3bb));
        EXPECT(0xd3, gbc.readMem(0xd4be));
        // CB 4E 0017
        gbc.setState(0x6efb, 0xd980, 0x9a10, 0xd363, 0x8efa, 0x275b, 0x0, 0x0);
        gbc.writeMem(0x275b, { 0x43 });
        gbc.writeMem(0x6efb, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd980, gbc.sp());
        EXPECT(0x6efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0018
        gbc.setState(0xe74a, 0x4ef4, 0x3a20, 0x2ab2, 0xdc43, 0x6a95, 0x0, 0x1);
        gbc.writeMem(0x6a95, { 0x4b });
        gbc.writeMem(0xe74a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4ef4, gbc.sp());
        EXPECT(0xe74c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74a));
        EXPECT(0x4e, gbc.readMem(0xe74b));
        // CB 4E 0019
        gbc.setState(0x69d6, 0xc628, 0x4d30, 0x95a4, 0x35ce, 0x8f5d, 0x0, 0x1);
        gbc.writeMem(0x69d6, { 0xcb, 0x4e });
        gbc.writeMem(0x8f5d, { 0x8a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc628, gbc.sp());
        EXPECT(0x69d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8f5d));
        // CB 4E 001A
        gbc.setState(0xc44a, 0xd65d, 0x5180, 0xd01b, 0xf4bb, 0x87f4, 0x0, 0x1);
        gbc.writeMem(0x87f4, { 0x6c });
        gbc.writeMem(0xc44a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd65d, gbc.sp());
        EXPECT(0xc44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x87f4));
        EXPECT(0xcb, gbc.readMem(0xc44a));
        EXPECT(0x4e, gbc.readMem(0xc44b));
        // CB 4E 001B
        gbc.setState(0xec27, 0xceb4, 0x7550, 0xab67, 0xd349, 0x532d, 0x1, 0x0);
        gbc.writeMem(0x532d, { 0xbf });
        gbc.writeMem(0xec27, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xceb4, gbc.sp());
        EXPECT(0xec29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec27));
        EXPECT(0x4e, gbc.readMem(0xec28));
        // CB 4E 001C
        gbc.setState(0xecf1, 0xd2a1, 0x7bc0, 0xaf43, 0x90b5, 0x2005, 0x1, 0x0);
        gbc.writeMem(0x2005, { 0x4b });
        gbc.writeMem(0xecf1, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd2a1, gbc.sp());
        EXPECT(0xecf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf1));
        EXPECT(0x4e, gbc.readMem(0xecf2));
        // CB 4E 001D
        gbc.setState(0x3307, 0x3dd8, 0xeb00, 0x3373, 0xf3a6, 0xff17, 0x0, 0x0);
        gbc.writeMem(0x3307, { 0xcb, 0x4e });
        gbc.writeMem(0xff17, { 0x9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3dd8, gbc.sp());
        EXPECT(0x3309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xff17));
        // CB 4E 001E
        gbc.setState(0x1c50, 0x25d2, 0x65d0, 0xe3f6, 0xc6fa, 0x5110, 0x0, 0x1);
        gbc.writeMem(0x1c50, { 0xcb, 0x4e });
        gbc.writeMem(0x5110, { 0x6d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x25d2, gbc.sp());
        EXPECT(0x1c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 001F
        gbc.setState(0x3b05, 0xc084, 0x9090, 0xd367, 0x75cc, 0x844a, 0x0, 0x0);
        gbc.writeMem(0x3b05, { 0xcb, 0x4e });
        gbc.writeMem(0x844a, { 0xc4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc084, gbc.sp());
        EXPECT(0x3b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x844a));
        // CB 4E 0020
        gbc.setState(0x3208, 0x7a52, 0xfde0, 0x2297, 0xc624, 0x2c0c, 0x1, 0x0);
        gbc.writeMem(0x2c0c, { 0x6e });
        gbc.writeMem(0x3208, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7a52, gbc.sp());
        EXPECT(0x320a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0021
        gbc.setState(0x2355, 0xb7e4, 0x60b0, 0xf0c, 0x7986, 0xe2c0, 0x1, 0x0);
        gbc.writeMem(0x2355, { 0xcb, 0x4e });
        gbc.writeMem(0xe2c0, { 0x31 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb7e4, gbc.sp());
        EXPECT(0x2357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe2c0));
        // CB 4E 0022
        gbc.setState(0xe1d0, 0xd513, 0xe940, 0x2822, 0xda3c, 0x4c7, 0x0, 0x0);
        gbc.writeMem(0x4c7, { 0xf0 });
        gbc.writeMem(0xe1d0, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd513, gbc.sp());
        EXPECT(0xe1d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d0));
        EXPECT(0x4e, gbc.readMem(0xe1d1));
        // CB 4E 0023
        gbc.setState(0xe730, 0xbd79, 0x7380, 0x2dda, 0x1667, 0x14d6, 0x1, 0x1);
        gbc.writeMem(0x14d6, { 0xa });
        gbc.writeMem(0xe730, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbd79, gbc.sp());
        EXPECT(0xe732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe730));
        EXPECT(0x4e, gbc.readMem(0xe731));
        // CB 4E 0024
        gbc.setState(0x5345, 0xaabc, 0x2af0, 0x375d, 0x3e03, 0xcc2, 0x0, 0x1);
        gbc.writeMem(0xcc2, { 0x91 });
        gbc.writeMem(0x5345, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xaabc, gbc.sp());
        EXPECT(0x5347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0026
        gbc.setState(0xa6c5, 0x9a12, 0x3790, 0xe044, 0x2353, 0xfdde, 0x0, 0x1);
        gbc.writeMem(0xa6c5, { 0xcb, 0x4e });
        gbc.writeMem(0xfdde, { 0x3e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9a12, gbc.sp());
        EXPECT(0xa6c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c5));
        EXPECT(0x4e, gbc.readMem(0xa6c6));
        EXPECT(0x3e, gbc.readMem(0xfdde));
        // CB 4E 0027
        gbc.setState(0xa6, 0x83d5, 0x7de0, 0xda2, 0xcc22, 0xcbfe, 0x1, 0x1);
        gbc.writeMem(0xa6, { 0xcb, 0x4e });
        gbc.writeMem(0xcbfe, { 0x20 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x83d5, gbc.sp());
        EXPECT(0xa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcbfe));
        // CB 4E 0028
        gbc.setState(0x9f2f, 0x1b2, 0xb0b0, 0x741d, 0xbc46, 0xdab6, 0x0, 0x0);
        gbc.writeMem(0x9f2f, { 0xcb, 0x4e });
        gbc.writeMem(0xdab6, { 0xb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1b2, gbc.sp());
        EXPECT(0x9f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f2f));
        EXPECT(0x4e, gbc.readMem(0x9f30));
        EXPECT(0xb, gbc.readMem(0xdab6));
        // CB 4E 0029
        gbc.setState(0xb036, 0xe752, 0x5000, 0xdab4, 0xb7a4, 0xda08, 0x1, 0x1);
        gbc.writeMem(0xb036, { 0xcb, 0x4e });
        gbc.writeMem(0xda08, { 0xcb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe752, gbc.sp());
        EXPECT(0xb038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb036));
        EXPECT(0x4e, gbc.readMem(0xb037));
        EXPECT(0xcb, gbc.readMem(0xda08));
        // CB 4E 002A
        gbc.setState(0xcc51, 0xe2b, 0x57c0, 0x6a98, 0xd83d, 0xacc3, 0x1, 0x0);
        gbc.writeMem(0xacc3, { 0x7f });
        gbc.writeMem(0xcc51, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe2b, gbc.sp());
        EXPECT(0xcc53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xacc3));
        EXPECT(0xcb, gbc.readMem(0xcc51));
        EXPECT(0x4e, gbc.readMem(0xcc52));
        // CB 4E 002C
        gbc.setState(0x55e2, 0xdb71, 0x8490, 0x9eff, 0xebe5, 0xd66, 0x0, 0x0);
        gbc.writeMem(0xd66, { 0x57 });
        gbc.writeMem(0x55e2, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdb71, gbc.sp());
        EXPECT(0x55e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 002D
        gbc.setState(0x57ec, 0xf3bf, 0x7370, 0xc380, 0xb5d8, 0x98b0, 0x0, 0x0);
        gbc.writeMem(0x57ec, { 0xcb, 0x4e });
        gbc.writeMem(0x98b0, { 0x3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf3bf, gbc.sp());
        EXPECT(0x57ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x98b0));
        // CB 4E 002F
        gbc.setState(0xcf2c, 0xed41, 0x7b50, 0xd9dc, 0x21c9, 0x4217, 0x0, 0x0);
        gbc.writeMem(0x4217, { 0x6a });
        gbc.writeMem(0xcf2c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xed41, gbc.sp());
        EXPECT(0xcf2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2c));
        EXPECT(0x4e, gbc.readMem(0xcf2d));
        // CB 4E 0030
        gbc.setState(0x51ba, 0x4854, 0x69c0, 0xd566, 0xa035, 0xd10d, 0x0, 0x0);
        gbc.writeMem(0x51ba, { 0xcb, 0x4e });
        gbc.writeMem(0xd10d, { 0x38 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4854, gbc.sp());
        EXPECT(0x51bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd10d));
        // CB 4E 0031
        gbc.setState(0x2f56, 0x8119, 0x14c0, 0xd2b, 0x7e7f, 0xefce, 0x0, 0x0);
        gbc.writeMem(0x2f56, { 0xcb, 0x4e });
        gbc.writeMem(0xefce, { 0xd7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8119, gbc.sp());
        EXPECT(0x2f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xefce));
        // CB 4E 0032
        gbc.setState(0x5350, 0x86ce, 0xd660, 0x595c, 0x1399, 0xd5df, 0x1, 0x1);
        gbc.writeMem(0x5350, { 0xcb, 0x4e });
        gbc.writeMem(0xd5df, { 0x42 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x86ce, gbc.sp());
        EXPECT(0x5352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd5df));
        // CB 4E 0033
        gbc.setState(0x78c3, 0x967f, 0x5410, 0x6ac4, 0x418a, 0x53d6, 0x0, 0x0);
        gbc.writeMem(0x53d6, { 0x1b });
        gbc.writeMem(0x78c3, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x967f, gbc.sp());
        EXPECT(0x78c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0034
        gbc.setState(0xbee2, 0xb3f, 0xc430, 0xe38a, 0x9e37, 0x76e4, 0x0, 0x1);
        gbc.writeMem(0x76e4, { 0x4c });
        gbc.writeMem(0xbee2, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb3f, gbc.sp());
        EXPECT(0xbee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee2));
        EXPECT(0x4e, gbc.readMem(0xbee3));
        // CB 4E 0035
        gbc.setState(0xafd6, 0xc0ef, 0x5a60, 0x23ac, 0xfe58, 0xa000, 0x1, 0x0);
        gbc.writeMem(0xa000, { 0xf7 });
        gbc.writeMem(0xafd6, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc0ef, gbc.sp());
        EXPECT(0xafd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa000));
        EXPECT(0xcb, gbc.readMem(0xafd6));
        EXPECT(0x4e, gbc.readMem(0xafd7));
        // CB 4E 0036
        gbc.setState(0xc947, 0x49f, 0x6360, 0xcf75, 0xb21c, 0x3b5f, 0x0, 0x1);
        gbc.writeMem(0x3b5f, { 0x6a });
        gbc.writeMem(0xc947, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x49f, gbc.sp());
        EXPECT(0xc949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc947));
        EXPECT(0x4e, gbc.readMem(0xc948));
        // CB 4E 0037
        gbc.setState(0xd5f1, 0x5319, 0xed40, 0xa3f2, 0xb48f, 0xd3d4, 0x0, 0x0);
        gbc.writeMem(0xd3d4, { 0xb6 });
        gbc.writeMem(0xd5f1, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5319, gbc.sp());
        EXPECT(0xd5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd3d4));
        EXPECT(0xcb, gbc.readMem(0xd5f1));
        EXPECT(0x4e, gbc.readMem(0xd5f2));
        // CB 4E 0038
        gbc.setState(0x9a4a, 0x39b1, 0xbf00, 0x3438, 0x4e91, 0x9545, 0x0, 0x1);
        gbc.writeMem(0x9545, { 0x59 });
        gbc.writeMem(0x9a4a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x39b1, gbc.sp());
        EXPECT(0x9a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x9545));
        EXPECT(0xcb, gbc.readMem(0x9a4a));
        EXPECT(0x4e, gbc.readMem(0x9a4b));
        // CB 4E 0039
        gbc.setState(0x5a2b, 0x4ae0, 0xa9f0, 0x3deb, 0x91f9, 0xbffa, 0x0, 0x0);
        gbc.writeMem(0x5a2b, { 0xcb, 0x4e });
        gbc.writeMem(0xbffa, { 0xc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4ae0, gbc.sp());
        EXPECT(0x5a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbffa));
        // CB 4E 003A
        gbc.setState(0x4425, 0xd446, 0x7150, 0xfcc1, 0x5557, 0x4f4f, 0x1, 0x1);
        gbc.writeMem(0x4425, { 0xcb, 0x4e });
        gbc.writeMem(0x4f4f, { 0x84 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd446, gbc.sp());
        EXPECT(0x4427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 003B
        gbc.setState(0xd460, 0x9526, 0x9fa0, 0xd71e, 0x5b0f, 0xd0ef, 0x0, 0x1);
        gbc.writeMem(0xd0ef, { 0xec });
        gbc.writeMem(0xd460, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9526, gbc.sp());
        EXPECT(0xd462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xd0ef));
        EXPECT(0xcb, gbc.readMem(0xd460));
        EXPECT(0x4e, gbc.readMem(0xd461));
        // CB 4E 003C
        gbc.setState(0x8a88, 0x461d, 0x7db0, 0xca6, 0xd582, 0x1dbb, 0x1, 0x0);
        gbc.writeMem(0x1dbb, { 0xb4 });
        gbc.writeMem(0x8a88, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x461d, gbc.sp());
        EXPECT(0x8a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a88));
        EXPECT(0x4e, gbc.readMem(0x8a89));
        // CB 4E 003D
        gbc.setState(0xef40, 0xa774, 0xb7c0, 0xc632, 0xe997, 0x7d08, 0x0, 0x0);
        gbc.writeMem(0x7d08, { 0x2c });
        gbc.writeMem(0xef40, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa774, gbc.sp());
        EXPECT(0xef42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef40));
        EXPECT(0x4e, gbc.readMem(0xef41));
        // CB 4E 003E
        gbc.setState(0x634, 0x671a, 0xd4a0, 0x4524, 0x3832, 0x1886, 0x1, 0x1);
        gbc.writeMem(0x634, { 0xcb, 0x4e });
        gbc.writeMem(0x1886, { 0xf1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x671a, gbc.sp());
        EXPECT(0x636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 003F
        gbc.setState(0x8aeb, 0x8be5, 0x43d0, 0x2664, 0x4fad, 0xd476, 0x1, 0x0);
        gbc.writeMem(0x8aeb, { 0xcb, 0x4e });
        gbc.writeMem(0xd476, { 0xef });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8be5, gbc.sp());
        EXPECT(0x8aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aeb));
        EXPECT(0x4e, gbc.readMem(0x8aec));
        EXPECT(0xef, gbc.readMem(0xd476));
        // CB 4E 0040
        gbc.setState(0xd777, 0x90f5, 0xcbc0, 0xd5e7, 0x8d42, 0xa30f, 0x1, 0x0);
        gbc.writeMem(0xa30f, { 0x15 });
        gbc.writeMem(0xd777, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x90f5, gbc.sp());
        EXPECT(0xd779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa30f));
        EXPECT(0xcb, gbc.readMem(0xd777));
        EXPECT(0x4e, gbc.readMem(0xd778));
        // CB 4E 0041
        gbc.setState(0x54c9, 0xf6fb, 0xa250, 0x775e, 0x2ffe, 0x7ab9, 0x0, 0x0);
        gbc.writeMem(0x54c9, { 0xcb, 0x4e });
        gbc.writeMem(0x7ab9, { 0x4a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf6fb, gbc.sp());
        EXPECT(0x54cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0042
        gbc.setState(0x50af, 0xf336, 0x2700, 0x27d7, 0xe364, 0xa362, 0x0, 0x0);
        gbc.writeMem(0x50af, { 0xcb, 0x4e });
        gbc.writeMem(0xa362, { 0x72 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf336, gbc.sp());
        EXPECT(0x50b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa362));
        // CB 4E 0043
        gbc.setState(0xa563, 0x5a73, 0x4000, 0x1404, 0xd0c5, 0x8400, 0x0, 0x1);
        gbc.writeMem(0x8400, { 0x90 });
        gbc.writeMem(0xa563, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5a73, gbc.sp());
        EXPECT(0xa565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x8400));
        EXPECT(0xcb, gbc.readMem(0xa563));
        EXPECT(0x4e, gbc.readMem(0xa564));
        // CB 4E 0044
        gbc.setState(0x582e, 0xbf93, 0x9420, 0x5a14, 0x979f, 0xc40, 0x0, 0x1);
        gbc.writeMem(0xc40, { 0xfe });
        gbc.writeMem(0x582e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbf93, gbc.sp());
        EXPECT(0x5830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0045
        gbc.setState(0x7490, 0xcde8, 0xea30, 0x461c, 0x94ae, 0x69a7, 0x1, 0x0);
        gbc.writeMem(0x69a7, { 0x3e });
        gbc.writeMem(0x7490, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcde8, gbc.sp());
        EXPECT(0x7492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0046
        gbc.setState(0x1f0d, 0xfdd3, 0xab60, 0x3b72, 0x4fb6, 0x2571, 0x0, 0x0);
        gbc.writeMem(0x1f0d, { 0xcb, 0x4e });
        gbc.writeMem(0x2571, { 0x2b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfdd3, gbc.sp());
        EXPECT(0x1f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0047
        gbc.setState(0xc657, 0xbd, 0x4970, 0x9a8e, 0x67fd, 0x2a65, 0x1, 0x0);
        gbc.writeMem(0x2a65, { 0x3d });
        gbc.writeMem(0xc657, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbd, gbc.sp());
        EXPECT(0xc659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc657));
        EXPECT(0x4e, gbc.readMem(0xc658));
        // CB 4E 0048
        gbc.setState(0xc92f, 0xc9a4, 0x7880, 0x7608, 0x1d70, 0x369, 0x0, 0x0);
        gbc.writeMem(0x369, { 0xd });
        gbc.writeMem(0xc92f, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc9a4, gbc.sp());
        EXPECT(0xc931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc92f));
        EXPECT(0x4e, gbc.readMem(0xc930));
        // CB 4E 0049
        gbc.setState(0x61f0, 0x8672, 0x2450, 0xa30f, 0xb825, 0xf166, 0x1, 0x0);
        gbc.writeMem(0x61f0, { 0xcb, 0x4e });
        gbc.writeMem(0xf166, { 0x8b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8672, gbc.sp());
        EXPECT(0x61f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xf166));
        // CB 4E 004A
        gbc.setState(0x30ea, 0x4033, 0x58b0, 0x7640, 0x2aae, 0x9459, 0x0, 0x0);
        gbc.writeMem(0x30ea, { 0xcb, 0x4e });
        gbc.writeMem(0x9459, { 0xe5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4033, gbc.sp());
        EXPECT(0x30ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9459));
        // CB 4E 004B
        gbc.setState(0x184b, 0x62a9, 0xe8c0, 0x7701, 0xee26, 0x34d0, 0x0, 0x1);
        gbc.writeMem(0x184b, { 0xcb, 0x4e });
        gbc.writeMem(0x34d0, { 0x33 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x62a9, gbc.sp());
        EXPECT(0x184d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 004D
        gbc.setState(0xac, 0x9c7d, 0xa370, 0x45db, 0xbbde, 0xb586, 0x1, 0x0);
        gbc.writeMem(0xac, { 0xcb, 0x4e });
        gbc.writeMem(0xb586, { 0x2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9c7d, gbc.sp());
        EXPECT(0xae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xb586));
        // CB 4E 004E
        gbc.setState(0xcf9e, 0x6cde, 0xfdc0, 0xdf82, 0x7417, 0x555a, 0x0, 0x0);
        gbc.writeMem(0x555a, { 0x1f });
        gbc.writeMem(0xcf9e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6cde, gbc.sp());
        EXPECT(0xcfa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9e));
        EXPECT(0x4e, gbc.readMem(0xcf9f));
        // CB 4E 004F
        gbc.setState(0x74ba, 0x2584, 0x730, 0x4c6e, 0x7b86, 0x7935, 0x1, 0x0);
        gbc.writeMem(0x74ba, { 0xcb, 0x4e });
        gbc.writeMem(0x7935, { 0x83 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2584, gbc.sp());
        EXPECT(0x74bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0050
        gbc.setState(0xa725, 0x3ecf, 0xc40, 0x7794, 0x7f7d, 0x1109, 0x1, 0x0);
        gbc.writeMem(0x1109, { 0x7 });
        gbc.writeMem(0xa725, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3ecf, gbc.sp());
        EXPECT(0xa727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa725));
        EXPECT(0x4e, gbc.readMem(0xa726));
        // CB 4E 0051
        gbc.setState(0xde7c, 0xb8e9, 0xdf20, 0xfcde, 0x376b, 0xd29d, 0x1, 0x1);
        gbc.writeMem(0xd29d, { 0x65 });
        gbc.writeMem(0xde7c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb8e9, gbc.sp());
        EXPECT(0xde7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd29d));
        EXPECT(0xcb, gbc.readMem(0xde7c));
        EXPECT(0x4e, gbc.readMem(0xde7d));
        // CB 4E 0052
        gbc.setState(0x7825, 0x9fb2, 0x4690, 0x50fe, 0xb260, 0xe65d, 0x1, 0x0);
        gbc.writeMem(0x7825, { 0xcb, 0x4e });
        gbc.writeMem(0xe65d, { 0x38 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9fb2, gbc.sp());
        EXPECT(0x7827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe65d));
        // CB 4E 0053
        gbc.setState(0x5a9c, 0x334a, 0x55c0, 0xcd00, 0x4899, 0xecbe, 0x1, 0x1);
        gbc.writeMem(0x5a9c, { 0xcb, 0x4e });
        gbc.writeMem(0xecbe, { 0xae });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x334a, gbc.sp());
        EXPECT(0x5a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xecbe));
        // CB 4E 0054
        gbc.setState(0x3cca, 0x2710, 0xf330, 0x9866, 0x6172, 0xbde0, 0x1, 0x1);
        gbc.writeMem(0x3cca, { 0xcb, 0x4e });
        gbc.writeMem(0xbde0, { 0x61 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2710, gbc.sp());
        EXPECT(0x3ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbde0));
        // CB 4E 0055
        gbc.setState(0x925c, 0x201b, 0x9150, 0x4f30, 0x5fed, 0xa82b, 0x1, 0x1);
        gbc.writeMem(0x925c, { 0xcb, 0x4e });
        gbc.writeMem(0xa82b, { 0xc8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x201b, gbc.sp());
        EXPECT(0x925e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x925c));
        EXPECT(0x4e, gbc.readMem(0x925d));
        EXPECT(0xc8, gbc.readMem(0xa82b));
        // CB 4E 0057
        gbc.setState(0x858c, 0xf5a4, 0x8910, 0x5e47, 0xd6d, 0x59c7, 0x1, 0x1);
        gbc.writeMem(0x59c7, { 0x90 });
        gbc.writeMem(0x858c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf5a4, gbc.sp());
        EXPECT(0x858e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858c));
        EXPECT(0x4e, gbc.readMem(0x858d));
        // CB 4E 0058
        gbc.setState(0x9390, 0x1280, 0x29e0, 0x838, 0x90cb, 0x2e4f, 0x0, 0x0);
        gbc.writeMem(0x2e4f, { 0x9c });
        gbc.writeMem(0x9390, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1280, gbc.sp());
        EXPECT(0x9392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9390));
        EXPECT(0x4e, gbc.readMem(0x9391));
        // CB 4E 005A
        gbc.setState(0x70e4, 0x3dd8, 0x1ea0, 0x85f2, 0x1c48, 0x5ced, 0x0, 0x1);
        gbc.writeMem(0x5ced, { 0x88 });
        gbc.writeMem(0x70e4, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3dd8, gbc.sp());
        EXPECT(0x70e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 005B
        gbc.setState(0x85e5, 0x776c, 0x900, 0x633e, 0x6b95, 0xd1cd, 0x1, 0x0);
        gbc.writeMem(0x85e5, { 0xcb, 0x4e });
        gbc.writeMem(0xd1cd, { 0xec });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x776c, gbc.sp());
        EXPECT(0x85e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e5));
        EXPECT(0x4e, gbc.readMem(0x85e6));
        EXPECT(0xec, gbc.readMem(0xd1cd));
        // CB 4E 005C
        gbc.setState(0x328c, 0xaee, 0xa1a0, 0x2c8b, 0x3bb, 0x7280, 0x0, 0x1);
        gbc.writeMem(0x328c, { 0xcb, 0x4e });
        gbc.writeMem(0x7280, { 0xa9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xaee, gbc.sp());
        EXPECT(0x328e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 005D
        gbc.setState(0x9e05, 0x3f96, 0xc350, 0xd33a, 0xc938, 0x9ccd, 0x1, 0x0);
        gbc.writeMem(0x9ccd, { 0xd8 });
        gbc.writeMem(0x9e05, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3f96, gbc.sp());
        EXPECT(0x9e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x9ccd));
        EXPECT(0xcb, gbc.readMem(0x9e05));
        EXPECT(0x4e, gbc.readMem(0x9e06));
        // CB 4E 005E
        gbc.setState(0x80e5, 0xc39, 0x3ef0, 0xee37, 0x71fa, 0xe987, 0x1, 0x1);
        gbc.writeMem(0x80e5, { 0xcb, 0x4e });
        gbc.writeMem(0xe987, { 0x5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc39, gbc.sp());
        EXPECT(0x80e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e5));
        EXPECT(0x4e, gbc.readMem(0x80e6));
        EXPECT(0x5, gbc.readMem(0xe987));
        // CB 4E 005F
        gbc.setState(0x461c, 0x2e58, 0x9520, 0x93e2, 0x8fcc, 0x1af1, 0x1, 0x0);
        gbc.writeMem(0x1af1, { 0xb1 });
        gbc.writeMem(0x461c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2e58, gbc.sp());
        EXPECT(0x461e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0060
        gbc.setState(0xa2c7, 0x8aec, 0xd7b0, 0xdddd, 0x4299, 0x1de8, 0x0, 0x1);
        gbc.writeMem(0x1de8, { 0x58 });
        gbc.writeMem(0xa2c7, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8aec, gbc.sp());
        EXPECT(0xa2c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c7));
        EXPECT(0x4e, gbc.readMem(0xa2c8));
        // CB 4E 0061
        gbc.setState(0x31e3, 0x8e7e, 0xee40, 0x3abf, 0x88b4, 0x3aa7, 0x1, 0x0);
        gbc.writeMem(0x31e3, { 0xcb, 0x4e });
        gbc.writeMem(0x3aa7, { 0x48 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8e7e, gbc.sp());
        EXPECT(0x31e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0062
        gbc.setState(0xd788, 0x7247, 0x4470, 0xd483, 0x2879, 0x75f6, 0x0, 0x1);
        gbc.writeMem(0x75f6, { 0xb9 });
        gbc.writeMem(0xd788, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7247, gbc.sp());
        EXPECT(0xd78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd788));
        EXPECT(0x4e, gbc.readMem(0xd789));
        // CB 4E 0063
        gbc.setState(0xeae7, 0x4677, 0x9350, 0x7e82, 0x6fc4, 0x4376, 0x0, 0x1);
        gbc.writeMem(0x4376, { 0x13 });
        gbc.writeMem(0xeae7, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4677, gbc.sp());
        EXPECT(0xeae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae7));
        EXPECT(0x4e, gbc.readMem(0xeae8));
        // CB 4E 0064
        gbc.setState(0x52a4, 0x1d29, 0x86a0, 0x7759, 0x9963, 0x446f, 0x0, 0x1);
        gbc.writeMem(0x446f, { 0x80 });
        gbc.writeMem(0x52a4, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1d29, gbc.sp());
        EXPECT(0x52a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0065
        gbc.setState(0x553b, 0x33b7, 0xdf80, 0x3f55, 0xc47c, 0x8c7c, 0x0, 0x0);
        gbc.writeMem(0x553b, { 0xcb, 0x4e });
        gbc.writeMem(0x8c7c, { 0x5c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x33b7, gbc.sp());
        EXPECT(0x553d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x8c7c));
        // CB 4E 0066
        gbc.setState(0x8281, 0xc2d0, 0x2ca0, 0x916d, 0xd23f, 0x7cf1, 0x1, 0x1);
        gbc.writeMem(0x7cf1, { 0x5a });
        gbc.writeMem(0x8281, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc2d0, gbc.sp());
        EXPECT(0x8283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8281));
        EXPECT(0x4e, gbc.readMem(0x8282));
        // CB 4E 0067
        gbc.setState(0x88a3, 0x44b6, 0x5370, 0xcabb, 0x354c, 0x22c2, 0x0, 0x0);
        gbc.writeMem(0x22c2, { 0xaa });
        gbc.writeMem(0x88a3, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x44b6, gbc.sp());
        EXPECT(0x88a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a3));
        EXPECT(0x4e, gbc.readMem(0x88a4));
        // CB 4E 0068
        gbc.setState(0x374f, 0x9bd7, 0x9dd0, 0xb94, 0x5568, 0x54ef, 0x1, 0x0);
        gbc.writeMem(0x374f, { 0xcb, 0x4e });
        gbc.writeMem(0x54ef, { 0x2e });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9bd7, gbc.sp());
        EXPECT(0x3751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0069
        gbc.setState(0x1b6, 0x2423, 0xd390, 0x325, 0xac04, 0x27b0, 0x1, 0x1);
        gbc.writeMem(0x1b6, { 0xcb, 0x4e });
        gbc.writeMem(0x27b0, { 0xad });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2423, gbc.sp());
        EXPECT(0x1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 006A
        gbc.setState(0xc2d3, 0x6d88, 0x83f0, 0x25c4, 0x16c5, 0x62d2, 0x0, 0x1);
        gbc.writeMem(0x62d2, { 0xf0 });
        gbc.writeMem(0xc2d3, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6d88, gbc.sp());
        EXPECT(0xc2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d3));
        EXPECT(0x4e, gbc.readMem(0xc2d4));
        // CB 4E 006B
        gbc.setState(0x1841, 0xbef2, 0xd520, 0x6650, 0x337, 0xdc48, 0x1, 0x0);
        gbc.writeMem(0x1841, { 0xcb, 0x4e });
        gbc.writeMem(0xdc48, { 0x47 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbef2, gbc.sp());
        EXPECT(0x1843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdc48));
        // CB 4E 006C
        gbc.setState(0x7295, 0x610c, 0xd5e0, 0x4370, 0x288, 0x99f8, 0x1, 0x0);
        gbc.writeMem(0x7295, { 0xcb, 0x4e });
        gbc.writeMem(0x99f8, { 0x4d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x610c, gbc.sp());
        EXPECT(0x7297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x99f8));
        // CB 4E 006D
        gbc.setState(0xe946, 0x6e3b, 0x3b30, 0xff5e, 0x8701, 0xfb63, 0x0, 0x0);
        gbc.writeMem(0xe946, { 0xcb, 0x4e });
        gbc.writeMem(0xfb63, { 0x3e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6e3b, gbc.sp());
        EXPECT(0xe948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe946));
        EXPECT(0x4e, gbc.readMem(0xe947));
        EXPECT(0x3e, gbc.readMem(0xfb63));
        // CB 4E 006E
        gbc.setState(0x3cf2, 0x2faa, 0xee90, 0x99a0, 0xbc92, 0x58a8, 0x1, 0x0);
        gbc.writeMem(0x3cf2, { 0xcb, 0x4e });
        gbc.writeMem(0x58a8, { 0x80 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2faa, gbc.sp());
        EXPECT(0x3cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 006F
        gbc.setState(0xc361, 0x52fa, 0x610, 0xa35e, 0xda55, 0x3ee8, 0x1, 0x0);
        gbc.writeMem(0x3ee8, { 0x4c });
        gbc.writeMem(0xc361, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x52fa, gbc.sp());
        EXPECT(0xc363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc361));
        EXPECT(0x4e, gbc.readMem(0xc362));
        // CB 4E 0070
        gbc.setState(0x5482, 0x3abf, 0x7cd0, 0x78e3, 0xdf82, 0xa9b6, 0x1, 0x0);
        gbc.writeMem(0x5482, { 0xcb, 0x4e });
        gbc.writeMem(0xa9b6, { 0xef });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3abf, gbc.sp());
        EXPECT(0x5484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xa9b6));
        // CB 4E 0072
        gbc.setState(0xbac3, 0xdd42, 0xdb80, 0xaa9a, 0xb2d2, 0x13a1, 0x0, 0x0);
        gbc.writeMem(0x13a1, { 0xc0 });
        gbc.writeMem(0xbac3, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdd42, gbc.sp());
        EXPECT(0xbac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac3));
        EXPECT(0x4e, gbc.readMem(0xbac4));
        // CB 4E 0073
        gbc.setState(0xe454, 0xd931, 0xa300, 0x7a85, 0x133d, 0x8d9e, 0x0, 0x1);
        gbc.writeMem(0x8d9e, { 0xbc });
        gbc.writeMem(0xe454, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd931, gbc.sp());
        EXPECT(0xe456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8d9e));
        EXPECT(0xcb, gbc.readMem(0xe454));
        EXPECT(0x4e, gbc.readMem(0xe455));
        // CB 4E 0074
        gbc.setState(0xd56, 0xebc8, 0x3bf0, 0x39f0, 0x4e1f, 0x3b18, 0x1, 0x0);
        gbc.writeMem(0xd56, { 0xcb, 0x4e });
        gbc.writeMem(0x3b18, { 0xeb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xebc8, gbc.sp());
        EXPECT(0xd58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0075
        gbc.setState(0xc427, 0x2cc7, 0xd520, 0xae7f, 0xb, 0x106f, 0x1, 0x1);
        gbc.writeMem(0x106f, { 0x8f });
        gbc.writeMem(0xc427, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2cc7, gbc.sp());
        EXPECT(0xc429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc427));
        EXPECT(0x4e, gbc.readMem(0xc428));
        // CB 4E 0076
        gbc.setState(0x9aa5, 0xf81d, 0x5fa0, 0xa55, 0x2adf, 0xc3eb, 0x0, 0x1);
        gbc.writeMem(0x9aa5, { 0xcb, 0x4e });
        gbc.writeMem(0xc3eb, { 0xf9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf81d, gbc.sp());
        EXPECT(0x9aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa5));
        EXPECT(0x4e, gbc.readMem(0x9aa6));
        EXPECT(0xf9, gbc.readMem(0xc3eb));
        // CB 4E 0077
        gbc.setState(0xb069, 0xcc57, 0x6f90, 0x4107, 0x6ee0, 0x21aa, 0x0, 0x0);
        gbc.writeMem(0x21aa, { 0x84 });
        gbc.writeMem(0xb069, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcc57, gbc.sp());
        EXPECT(0xb06b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb069));
        EXPECT(0x4e, gbc.readMem(0xb06a));
        // CB 4E 0078
        gbc.setState(0x4fd6, 0x1a82, 0xd2f0, 0x7fcd, 0x1c48, 0x8c2c, 0x0, 0x0);
        gbc.writeMem(0x4fd6, { 0xcb, 0x4e });
        gbc.writeMem(0x8c2c, { 0x6d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1a82, gbc.sp());
        EXPECT(0x4fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8c2c));
        // CB 4E 0079
        gbc.setState(0x908, 0xcee1, 0xd520, 0xf3f9, 0x8f62, 0x7f9a, 0x0, 0x0);
        gbc.writeMem(0x908, { 0xcb, 0x4e });
        gbc.writeMem(0x7f9a, { 0xd2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcee1, gbc.sp());
        EXPECT(0x90a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 007A
        gbc.setState(0x4966, 0x8cf7, 0xf720, 0x994b, 0x89c, 0x5cb2, 0x1, 0x1);
        gbc.writeMem(0x4966, { 0xcb, 0x4e });
        gbc.writeMem(0x5cb2, { 0x80 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8cf7, gbc.sp());
        EXPECT(0x4968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 007B
        gbc.setState(0xa726, 0xcca9, 0x4940, 0xe6b0, 0x3ea7, 0xd72, 0x0, 0x1);
        gbc.writeMem(0xd72, { 0xde });
        gbc.writeMem(0xa726, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcca9, gbc.sp());
        EXPECT(0xa728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa726));
        EXPECT(0x4e, gbc.readMem(0xa727));
        // CB 4E 007D
        gbc.setState(0x75f6, 0x185c, 0x8a0, 0x6a04, 0xce3d, 0x6634, 0x1, 0x0);
        gbc.writeMem(0x6634, { 0x6d });
        gbc.writeMem(0x75f6, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x185c, gbc.sp());
        EXPECT(0x75f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 007E
        gbc.setState(0xc466, 0x637, 0x2c80, 0xe201, 0x2d36, 0xd2ec, 0x0, 0x0);
        gbc.writeMem(0xc466, { 0xcb, 0x4e });
        gbc.writeMem(0xd2ec, { 0xdf });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x637, gbc.sp());
        EXPECT(0xc468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc466));
        EXPECT(0x4e, gbc.readMem(0xc467));
        EXPECT(0xdf, gbc.readMem(0xd2ec));
        // CB 4E 007F
        gbc.setState(0x823c, 0x8510, 0xab10, 0x6b04, 0x14a9, 0x594f, 0x1, 0x0);
        gbc.writeMem(0x594f, { 0x68 });
        gbc.writeMem(0x823c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8510, gbc.sp());
        EXPECT(0x823e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823c));
        EXPECT(0x4e, gbc.readMem(0x823d));
        // CB 4E 0080
        gbc.setState(0x895c, 0x84e5, 0xce60, 0x116a, 0x620d, 0x2518, 0x1, 0x1);
        gbc.writeMem(0x2518, { 0x78 });
        gbc.writeMem(0x895c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x84e5, gbc.sp());
        EXPECT(0x895e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x895c));
        EXPECT(0x4e, gbc.readMem(0x895d));
        // CB 4E 0081
        gbc.setState(0xe40c, 0xbe53, 0xece0, 0xe579, 0x98ed, 0x1acf, 0x1, 0x1);
        gbc.writeMem(0x1acf, { 0x89 });
        gbc.writeMem(0xe40c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbe53, gbc.sp());
        EXPECT(0xe40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe40c));
        EXPECT(0x4e, gbc.readMem(0xe40d));
        // CB 4E 0082
        gbc.setState(0x249c, 0xa11c, 0x99c0, 0x895e, 0x5e1, 0x3c7c, 0x0, 0x1);
        gbc.writeMem(0x249c, { 0xcb, 0x4e });
        gbc.writeMem(0x3c7c, { 0x9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa11c, gbc.sp());
        EXPECT(0x249e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0083
        gbc.setState(0xb0a, 0xb862, 0xd5c0, 0x2310, 0x2e04, 0xdec, 0x0, 0x1);
        gbc.writeMem(0xb0a, { 0xcb, 0x4e });
        gbc.writeMem(0xdec, { 0x82 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb862, gbc.sp());
        EXPECT(0xb0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0084
        gbc.setState(0x336d, 0x5ed6, 0x7d70, 0x4f95, 0x2d64, 0x5e0e, 0x0, 0x1);
        gbc.writeMem(0x336d, { 0xcb, 0x4e });
        gbc.writeMem(0x5e0e, { 0x1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5ed6, gbc.sp());
        EXPECT(0x336f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0085
        gbc.setState(0xb60d, 0x2c92, 0xc340, 0xa38c, 0xa9e5, 0x1d42, 0x1, 0x0);
        gbc.writeMem(0x1d42, { 0x46 });
        gbc.writeMem(0xb60d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2c92, gbc.sp());
        EXPECT(0xb60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60d));
        EXPECT(0x4e, gbc.readMem(0xb60e));
        // CB 4E 0086
        gbc.setState(0xb173, 0x7bb3, 0x9400, 0x8888, 0x4fc2, 0x93f0, 0x1, 0x0);
        gbc.writeMem(0x93f0, { 0x45 });
        gbc.writeMem(0xb173, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7bb3, gbc.sp());
        EXPECT(0xb175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x93f0));
        EXPECT(0xcb, gbc.readMem(0xb173));
        EXPECT(0x4e, gbc.readMem(0xb174));
        // CB 4E 0088
        gbc.setState(0x6260, 0x5569, 0x85e0, 0xee4f, 0x94d2, 0x4cd1, 0x1, 0x0);
        gbc.writeMem(0x4cd1, { 0xa6 });
        gbc.writeMem(0x6260, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5569, gbc.sp());
        EXPECT(0x6262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0089
        gbc.setState(0xd419, 0xaa43, 0xe3b0, 0xdfb6, 0x798d, 0xccdd, 0x0, 0x1);
        gbc.writeMem(0xccdd, { 0x5f });
        gbc.writeMem(0xd419, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xaa43, gbc.sp());
        EXPECT(0xd41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xccdd));
        EXPECT(0xcb, gbc.readMem(0xd419));
        EXPECT(0x4e, gbc.readMem(0xd41a));
        // CB 4E 008A
        gbc.setState(0xb59, 0x43c2, 0x85e0, 0xeb06, 0xca31, 0x1476, 0x0, 0x1);
        gbc.writeMem(0xb59, { 0xcb, 0x4e });
        gbc.writeMem(0x1476, { 0x7a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x43c2, gbc.sp());
        EXPECT(0xb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 008B
        gbc.setState(0x789c, 0xd562, 0x2ec0, 0x7d2b, 0x211, 0x764a, 0x0, 0x0);
        gbc.writeMem(0x764a, { 0x91 });
        gbc.writeMem(0x789c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd562, gbc.sp());
        EXPECT(0x789e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 008D
        gbc.setState(0x56bb, 0x89fa, 0x8f90, 0xe4b4, 0x6e20, 0x7595, 0x1, 0x1);
        gbc.writeMem(0x56bb, { 0xcb, 0x4e });
        gbc.writeMem(0x7595, { 0x4f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x89fa, gbc.sp());
        EXPECT(0x56bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 008E
        gbc.setState(0xea72, 0x13af, 0xe520, 0xe670, 0xb210, 0x4f2a, 0x1, 0x0);
        gbc.writeMem(0x4f2a, { 0x31 });
        gbc.writeMem(0xea72, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x13af, gbc.sp());
        EXPECT(0xea74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea72));
        EXPECT(0x4e, gbc.readMem(0xea73));
        // CB 4E 008F
        gbc.setState(0x3c3f, 0xa751, 0x90f0, 0xa1b6, 0xc9e6, 0xd852, 0x0, 0x1);
        gbc.writeMem(0x3c3f, { 0xcb, 0x4e });
        gbc.writeMem(0xd852, { 0x85 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa751, gbc.sp());
        EXPECT(0x3c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd852));
        // CB 4E 0090
        gbc.setState(0xbeab, 0xd1a, 0xedd0, 0xdea2, 0x850b, 0x43dd, 0x0, 0x1);
        gbc.writeMem(0x43dd, { 0xd4 });
        gbc.writeMem(0xbeab, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd1a, gbc.sp());
        EXPECT(0xbead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeab));
        EXPECT(0x4e, gbc.readMem(0xbeac));
        // CB 4E 0091
        gbc.setState(0x9ebe, 0x720b, 0xc680, 0x3a90, 0x62c2, 0x26d5, 0x1, 0x1);
        gbc.writeMem(0x26d5, { 0xf0 });
        gbc.writeMem(0x9ebe, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x720b, gbc.sp());
        EXPECT(0x9ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ebe));
        EXPECT(0x4e, gbc.readMem(0x9ebf));
        // CB 4E 0092
        gbc.setState(0x22ca, 0x91b1, 0x8180, 0xb513, 0xab2, 0x5f73, 0x1, 0x0);
        gbc.writeMem(0x22ca, { 0xcb, 0x4e });
        gbc.writeMem(0x5f73, { 0x68 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x91b1, gbc.sp());
        EXPECT(0x22cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0093
        gbc.setState(0x1a11, 0xdebe, 0xef30, 0x7c93, 0xc6b3, 0x104e, 0x0, 0x1);
        gbc.writeMem(0x104e, { 0xe9 });
        gbc.writeMem(0x1a11, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdebe, gbc.sp());
        EXPECT(0x1a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0094
        gbc.setState(0x5352, 0xd075, 0x8640, 0x6d69, 0x4e14, 0xdcc2, 0x0, 0x1);
        gbc.writeMem(0x5352, { 0xcb, 0x4e });
        gbc.writeMem(0xdcc2, { 0x4d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd075, gbc.sp());
        EXPECT(0x5354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdcc2));
        // CB 4E 0095
        gbc.setState(0x6e0b, 0x67ce, 0xb0f0, 0xee9, 0x2374, 0x854b, 0x1, 0x1);
        gbc.writeMem(0x6e0b, { 0xcb, 0x4e });
        gbc.writeMem(0x854b, { 0xe3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x67ce, gbc.sp());
        EXPECT(0x6e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x854b));
        // CB 4E 0096
        gbc.setState(0x4916, 0xc20d, 0x3320, 0x101b, 0xd330, 0x3e4e, 0x0, 0x1);
        gbc.writeMem(0x3e4e, { 0x4b });
        gbc.writeMem(0x4916, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc20d, gbc.sp());
        EXPECT(0x4918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0097
        gbc.setState(0xc613, 0x37f4, 0x7c20, 0x5cc1, 0xf45b, 0xc729, 0x0, 0x1);
        gbc.writeMem(0xc613, { 0xcb, 0x4e });
        gbc.writeMem(0xc729, { 0xbb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x37f4, gbc.sp());
        EXPECT(0xc615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc613));
        EXPECT(0x4e, gbc.readMem(0xc614));
        EXPECT(0xbb, gbc.readMem(0xc729));
        // CB 4E 0098
        gbc.setState(0x519, 0xf4e9, 0xec30, 0xcbb, 0x5073, 0xf2, 0x0, 0x0);
        gbc.writeMem(0xf2, { 0xd4 });
        gbc.writeMem(0x519, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf4e9, gbc.sp());
        EXPECT(0x51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0099
        gbc.setState(0x8ca5, 0x3f67, 0x9a0, 0xce6e, 0x6d1b, 0xe63f, 0x0, 0x1);
        gbc.writeMem(0x8ca5, { 0xcb, 0x4e });
        gbc.writeMem(0xe63f, { 0x6e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3f67, gbc.sp());
        EXPECT(0x8ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca5));
        EXPECT(0x4e, gbc.readMem(0x8ca6));
        EXPECT(0x6e, gbc.readMem(0xe63f));
        // CB 4E 009A
        gbc.setState(0xd65, 0xff5e, 0x2fd0, 0xf281, 0x288, 0x204b, 0x1, 0x0);
        gbc.writeMem(0xd65, { 0xcb, 0x4e });
        gbc.writeMem(0x204b, { 0x12 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xff5e, gbc.sp());
        EXPECT(0xd67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 009B
        gbc.setState(0x29ad, 0xab6c, 0x9910, 0x2f40, 0xcfd5, 0x8926, 0x0, 0x1);
        gbc.writeMem(0x29ad, { 0xcb, 0x4e });
        gbc.writeMem(0x8926, { 0xfa });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xab6c, gbc.sp());
        EXPECT(0x29af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8926));
        // CB 4E 009C
        gbc.setState(0x259e, 0x4496, 0xb010, 0xef92, 0xe6f9, 0xf2ee, 0x0, 0x1);
        gbc.writeMem(0x259e, { 0xcb, 0x4e });
        gbc.writeMem(0xf2ee, { 0x45 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4496, gbc.sp());
        EXPECT(0x25a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xf2ee));
        // CB 4E 009D
        gbc.setState(0x4f95, 0xb8a0, 0xe8f0, 0xa408, 0x7746, 0x60db, 0x0, 0x1);
        gbc.writeMem(0x4f95, { 0xcb, 0x4e });
        gbc.writeMem(0x60db, { 0x3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb8a0, gbc.sp());
        EXPECT(0x4f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 009E
        gbc.setState(0xbc9, 0xda95, 0x2d50, 0x5d01, 0xac37, 0x15f0, 0x0, 0x0);
        gbc.writeMem(0xbc9, { 0xcb, 0x4e });
        gbc.writeMem(0x15f0, { 0x15 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xda95, gbc.sp());
        EXPECT(0xbcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 009F
        gbc.setState(0x5475, 0xa867, 0x6800, 0xf238, 0xd051, 0xe684, 0x0, 0x1);
        gbc.writeMem(0x5475, { 0xcb, 0x4e });
        gbc.writeMem(0xe684, { 0xe8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa867, gbc.sp());
        EXPECT(0x5477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xe684));
        // CB 4E 00A0
        gbc.setState(0xde8e, 0x3ce, 0xa6f0, 0x2624, 0xbee6, 0xb8b6, 0x1, 0x1);
        gbc.writeMem(0xb8b6, { 0x12 });
        gbc.writeMem(0xde8e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3ce, gbc.sp());
        EXPECT(0xde90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb8b6));
        EXPECT(0xcb, gbc.readMem(0xde8e));
        EXPECT(0x4e, gbc.readMem(0xde8f));
        // CB 4E 00A1
        gbc.setState(0xaeae, 0x50a, 0xdb70, 0x9710, 0x4770, 0x9082, 0x0, 0x1);
        gbc.writeMem(0x9082, { 0xbc });
        gbc.writeMem(0xaeae, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x50a, gbc.sp());
        EXPECT(0xaeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9082));
        EXPECT(0xcb, gbc.readMem(0xaeae));
        EXPECT(0x4e, gbc.readMem(0xaeaf));
        // CB 4E 00A2
        gbc.setState(0x9401, 0xc7d6, 0xe680, 0x927f, 0xf6c0, 0xb6f1, 0x1, 0x1);
        gbc.writeMem(0x9401, { 0xcb, 0x4e });
        gbc.writeMem(0xb6f1, { 0x93 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc7d6, gbc.sp());
        EXPECT(0x9403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9401));
        EXPECT(0x4e, gbc.readMem(0x9402));
        EXPECT(0x93, gbc.readMem(0xb6f1));
        // CB 4E 00A3
        gbc.setState(0x9227, 0x6597, 0xcbf0, 0x656f, 0xaff9, 0x17, 0x1, 0x1);
        gbc.writeMem(0x17, { 0x86 });
        gbc.writeMem(0x9227, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6597, gbc.sp());
        EXPECT(0x9229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9227));
        EXPECT(0x4e, gbc.readMem(0x9228));
        // CB 4E 00A4
        gbc.setState(0xab77, 0x58df, 0x7270, 0x7b47, 0x6c94, 0x515a, 0x0, 0x1);
        gbc.writeMem(0x515a, { 0xd3 });
        gbc.writeMem(0xab77, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x58df, gbc.sp());
        EXPECT(0xab79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab77));
        EXPECT(0x4e, gbc.readMem(0xab78));
        // CB 4E 00A5
        gbc.setState(0x20b4, 0xfe14, 0xf50, 0x1edd, 0x9e44, 0x9c46, 0x0, 0x0);
        gbc.writeMem(0x20b4, { 0xcb, 0x4e });
        gbc.writeMem(0x9c46, { 0x46 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfe14, gbc.sp());
        EXPECT(0x20b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x9c46));
        // CB 4E 00A6
        gbc.setState(0x4644, 0x496b, 0x1d80, 0x4688, 0x8319, 0xb032, 0x1, 0x1);
        gbc.writeMem(0x4644, { 0xcb, 0x4e });
        gbc.writeMem(0xb032, { 0x7f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x496b, gbc.sp());
        EXPECT(0x4646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xb032));
        // CB 4E 00A7
        gbc.setState(0x617a, 0x72fb, 0xe3f0, 0xc3ea, 0x2387, 0x4778, 0x0, 0x1);
        gbc.writeMem(0x4778, { 0x58 });
        gbc.writeMem(0x617a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x72fb, gbc.sp());
        EXPECT(0x617c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 00A8
        gbc.setState(0x121e, 0x7a4b, 0x8c80, 0x7585, 0x4558, 0xe5e7, 0x0, 0x0);
        gbc.writeMem(0x121e, { 0xcb, 0x4e });
        gbc.writeMem(0xe5e7, { 0x7d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7a4b, gbc.sp());
        EXPECT(0x1220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe5e7));
        // CB 4E 00A9
        gbc.setState(0x3f54, 0x6f8b, 0x8400, 0x4122, 0x770b, 0x4ec2, 0x0, 0x0);
        gbc.writeMem(0x3f54, { 0xcb, 0x4e });
        gbc.writeMem(0x4ec2, { 0x90 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6f8b, gbc.sp());
        EXPECT(0x3f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 00AA
        gbc.setState(0xc7b5, 0xc17c, 0x1c90, 0x75, 0xbc59, 0x4589, 0x0, 0x0);
        gbc.writeMem(0x4589, { 0x9 });
        gbc.writeMem(0xc7b5, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc17c, gbc.sp());
        EXPECT(0xc7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b5));
        EXPECT(0x4e, gbc.readMem(0xc7b6));
        // CB 4E 00AB
        gbc.setState(0xc6c8, 0x7b4f, 0xd4c0, 0x8c0b, 0x51ad, 0xa085, 0x1, 0x0);
        gbc.writeMem(0xa085, { 0xe8 });
        gbc.writeMem(0xc6c8, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7b4f, gbc.sp());
        EXPECT(0xc6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xa085));
        EXPECT(0xcb, gbc.readMem(0xc6c8));
        EXPECT(0x4e, gbc.readMem(0xc6c9));
        // CB 4E 00AC
        gbc.setState(0xa86a, 0x13e2, 0x9920, 0xc531, 0xccf7, 0x9ade, 0x0, 0x0);
        gbc.writeMem(0x9ade, { 0xbc });
        gbc.writeMem(0xa86a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x13e2, gbc.sp());
        EXPECT(0xa86c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9ade));
        EXPECT(0xcb, gbc.readMem(0xa86a));
        EXPECT(0x4e, gbc.readMem(0xa86b));
        // CB 4E 00AD
        gbc.setState(0x6d77, 0xbcb5, 0x2ea0, 0x2f3c, 0xe014, 0x45fc, 0x1, 0x0);
        gbc.writeMem(0x45fc, { 0xd3 });
        gbc.writeMem(0x6d77, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbcb5, gbc.sp());
        EXPECT(0x6d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 00AF
        gbc.setState(0xb5b2, 0x3831, 0xf910, 0xd239, 0x5b0, 0x3c38, 0x1, 0x1);
        gbc.writeMem(0x3c38, { 0xb2 });
        gbc.writeMem(0xb5b2, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3831, gbc.sp());
        EXPECT(0xb5b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b2));
        EXPECT(0x4e, gbc.readMem(0xb5b3));
        // CB 4E 00B0
        gbc.setState(0x950c, 0xa967, 0xdb00, 0xf6e7, 0xeca6, 0x9e2b, 0x0, 0x0);
        gbc.writeMem(0x950c, { 0xcb, 0x4e });
        gbc.writeMem(0x9e2b, { 0x3d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa967, gbc.sp());
        EXPECT(0x950e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950c));
        EXPECT(0x4e, gbc.readMem(0x950d));
        EXPECT(0x3d, gbc.readMem(0x9e2b));
        // CB 4E 00B2
        gbc.setState(0xba5d, 0x832e, 0x5ac0, 0x7b3f, 0x6fee, 0x4b9f, 0x1, 0x0);
        gbc.writeMem(0x4b9f, { 0x93 });
        gbc.writeMem(0xba5d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x832e, gbc.sp());
        EXPECT(0xba5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5d));
        EXPECT(0x4e, gbc.readMem(0xba5e));
        // CB 4E 00B3
        gbc.setState(0xa77d, 0xc5f0, 0xf8a0, 0x5234, 0x5735, 0x683f, 0x0, 0x0);
        gbc.writeMem(0x683f, { 0x6e });
        gbc.writeMem(0xa77d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc5f0, gbc.sp());
        EXPECT(0xa77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77d));
        EXPECT(0x4e, gbc.readMem(0xa77e));
        // CB 4E 00B4
        gbc.setState(0x5cc, 0xf1e0, 0xfb0, 0x9205, 0xa5db, 0x60a9, 0x1, 0x0);
        gbc.writeMem(0x5cc, { 0xcb, 0x4e });
        gbc.writeMem(0x60a9, { 0xae });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf1e0, gbc.sp());
        EXPECT(0x5ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 00B5
        gbc.setState(0xa171, 0xd3ba, 0x8bf0, 0xe0c0, 0x10b5, 0xa1e8, 0x0, 0x1);
        gbc.writeMem(0xa171, { 0xcb, 0x4e });
        gbc.writeMem(0xa1e8, { 0x89 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd3ba, gbc.sp());
        EXPECT(0xa173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa171));
        EXPECT(0x4e, gbc.readMem(0xa172));
        EXPECT(0x89, gbc.readMem(0xa1e8));
        // CB 4E 00B6
        gbc.setState(0xdc7d, 0x1536, 0x26a0, 0x5fc5, 0x4829, 0xae33, 0x0, 0x0);
        gbc.writeMem(0xae33, { 0x13 });
        gbc.writeMem(0xdc7d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1536, gbc.sp());
        EXPECT(0xdc7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xae33));
        EXPECT(0xcb, gbc.readMem(0xdc7d));
        EXPECT(0x4e, gbc.readMem(0xdc7e));
        // CB 4E 00B7
        gbc.setState(0xd542, 0xa783, 0x1240, 0xaca5, 0x5c43, 0x32b4, 0x0, 0x1);
        gbc.writeMem(0x32b4, { 0x79 });
        gbc.writeMem(0xd542, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa783, gbc.sp());
        EXPECT(0xd544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd542));
        EXPECT(0x4e, gbc.readMem(0xd543));
        // CB 4E 00B8
        gbc.setState(0xc4b6, 0xac85, 0x2820, 0xa062, 0xdf53, 0x9864, 0x0, 0x0);
        gbc.writeMem(0x9864, { 0x9 });
        gbc.writeMem(0xc4b6, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xac85, gbc.sp());
        EXPECT(0xc4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9864));
        EXPECT(0xcb, gbc.readMem(0xc4b6));
        EXPECT(0x4e, gbc.readMem(0xc4b7));
        // CB 4E 00B9
        gbc.setState(0xc43a, 0x2058, 0x7890, 0xa289, 0xa328, 0xf9dd, 0x1, 0x0);
        gbc.writeMem(0xc43a, { 0xcb, 0x4e });
        gbc.writeMem(0xf9dd, { 0x1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2058, gbc.sp());
        EXPECT(0xc43c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43a));
        EXPECT(0x4e, gbc.readMem(0xc43b));
        EXPECT(0x1, gbc.readMem(0xf9dd));
        // CB 4E 00BA
        gbc.setState(0xb4e8, 0x7ef8, 0xe050, 0xc5bf, 0xb193, 0xb41a, 0x1, 0x0);
        gbc.writeMem(0xb41a, { 0x60 });
        gbc.writeMem(0xb4e8, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7ef8, gbc.sp());
        EXPECT(0xb4ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xb41a));
        EXPECT(0xcb, gbc.readMem(0xb4e8));
        EXPECT(0x4e, gbc.readMem(0xb4e9));
        // CB 4E 00BB
        gbc.setState(0x2b4c, 0x5e7e, 0xeea0, 0xeb04, 0x73b6, 0x7c15, 0x1, 0x1);
        gbc.writeMem(0x2b4c, { 0xcb, 0x4e });
        gbc.writeMem(0x7c15, { 0x8f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5e7e, gbc.sp());
        EXPECT(0x2b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 00BC
        gbc.setState(0x20ff, 0x2c07, 0xf840, 0xbf2e, 0xb54a, 0x8698, 0x0, 0x0);
        gbc.writeMem(0x20ff, { 0xcb, 0x4e });
        gbc.writeMem(0x8698, { 0xf0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2c07, gbc.sp());
        EXPECT(0x2101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8698));
        // CB 4E 00BD
        gbc.setState(0xb4f2, 0x6bf6, 0x2370, 0x6b67, 0xbad3, 0xe477, 0x1, 0x1);
        gbc.writeMem(0xb4f2, { 0xcb, 0x4e });
        gbc.writeMem(0xe477, { 0x54 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6bf6, gbc.sp());
        EXPECT(0xb4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f2));
        EXPECT(0x4e, gbc.readMem(0xb4f3));
        EXPECT(0x54, gbc.readMem(0xe477));
        // CB 4E 00BE
        gbc.setState(0x372c, 0x64ba, 0x5d80, 0x30f, 0x127, 0xa333, 0x1, 0x1);
        gbc.writeMem(0x372c, { 0xcb, 0x4e });
        gbc.writeMem(0xa333, { 0x28 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x64ba, gbc.sp());
        EXPECT(0x372e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xa333));
        // CB 4E 00BF
        gbc.setState(0x1a5b, 0xefca, 0x4cd0, 0x2462, 0x9c0, 0x523b, 0x0, 0x1);
        gbc.writeMem(0x1a5b, { 0xcb, 0x4e });
        gbc.writeMem(0x523b, { 0xa0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xefca, gbc.sp());
        EXPECT(0x1a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 00C0
        gbc.setState(0xa3d8, 0x9fb4, 0x9c20, 0xba61, 0x48e2, 0x3b9e, 0x0, 0x1);
        gbc.writeMem(0x3b9e, { 0xe6 });
        gbc.writeMem(0xa3d8, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9fb4, gbc.sp());
        EXPECT(0xa3da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d8));
        EXPECT(0x4e, gbc.readMem(0xa3d9));
        // CB 4E 00C1
        gbc.setState(0xb664, 0xb990, 0x4db0, 0x8539, 0x9385, 0xb92c, 0x1, 0x1);
        gbc.writeMem(0xb664, { 0xcb, 0x4e });
        gbc.writeMem(0xb92c, { 0xec });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb990, gbc.sp());
        EXPECT(0xb666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb664));
        EXPECT(0x4e, gbc.readMem(0xb665));
        EXPECT(0xec, gbc.readMem(0xb92c));
        // CB 4E 00C2
        gbc.setState(0x60bb, 0x70ec, 0xc80, 0xc777, 0xc46a, 0xaa7d, 0x1, 0x0);
        gbc.writeMem(0x60bb, { 0xcb, 0x4e });
        gbc.writeMem(0xaa7d, { 0xb9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x70ec, gbc.sp());
        EXPECT(0x60bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xaa7d));
        // CB 4E 00C3
        gbc.setState(0xa35a, 0x1a0a, 0x9760, 0x237c, 0xed10, 0xbb5e, 0x0, 0x1);
        gbc.writeMem(0xa35a, { 0xcb, 0x4e });
        gbc.writeMem(0xbb5e, { 0x5d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1a0a, gbc.sp());
        EXPECT(0xa35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa35a));
        EXPECT(0x4e, gbc.readMem(0xa35b));
        EXPECT(0x5d, gbc.readMem(0xbb5e));
        // CB 4E 00C4
        gbc.setState(0x8f7b, 0x76f, 0xca0, 0xa17c, 0x1a0d, 0x660a, 0x0, 0x1);
        gbc.writeMem(0x660a, { 0xf9 });
        gbc.writeMem(0x8f7b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x76f, gbc.sp());
        EXPECT(0x8f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f7b));
        EXPECT(0x4e, gbc.readMem(0x8f7c));
        // CB 4E 00C5
        gbc.setState(0xb3a, 0xa6, 0x5920, 0x35af, 0xfaff, 0x2b9d, 0x1, 0x0);
        gbc.writeMem(0xb3a, { 0xcb, 0x4e });
        gbc.writeMem(0x2b9d, { 0x43 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa6, gbc.sp());
        EXPECT(0xb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 00C6
        gbc.setState(0x7478, 0x2261, 0x50c0, 0xa249, 0xb07f, 0x963f, 0x1, 0x1);
        gbc.writeMem(0x7478, { 0xcb, 0x4e });
        gbc.writeMem(0x963f, { 0x9a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2261, gbc.sp());
        EXPECT(0x747a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x963f));
        // CB 4E 00C7
        gbc.setState(0x3e0f, 0xd651, 0x18e0, 0xb0e9, 0x3958, 0xd614, 0x1, 0x1);
        gbc.writeMem(0x3e0f, { 0xcb, 0x4e });
        gbc.writeMem(0xd614, { 0x7e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd651, gbc.sp());
        EXPECT(0x3e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd614));
        // CB 4E 00C8
        gbc.setState(0x608d, 0x1920, 0xabb0, 0x4237, 0x1d06, 0x7ab7, 0x0, 0x0);
        gbc.writeMem(0x608d, { 0xcb, 0x4e });
        gbc.writeMem(0x7ab7, { 0xa8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1920, gbc.sp());
        EXPECT(0x608f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 00C9
        gbc.setState(0xdb72, 0x3676, 0x2d30, 0x6e64, 0x1f6c, 0x31a6, 0x0, 0x1);
        gbc.writeMem(0x31a6, { 0xd7 });
        gbc.writeMem(0xdb72, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3676, gbc.sp());
        EXPECT(0xdb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb72));
        EXPECT(0x4e, gbc.readMem(0xdb73));
        // CB 4E 00CA
        gbc.setState(0xe4c1, 0xf8f4, 0x9660, 0xb63e, 0x66c4, 0x3b19, 0x1, 0x1);
        gbc.writeMem(0x3b19, { 0x5d });
        gbc.writeMem(0xe4c1, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf8f4, gbc.sp());
        EXPECT(0xe4c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c1));
        EXPECT(0x4e, gbc.readMem(0xe4c2));
        // CB 4E 00CB
        gbc.setState(0xaf0a, 0xa444, 0x9390, 0x629b, 0x5f86, 0x4527, 0x0, 0x0);
        gbc.writeMem(0x4527, { 0xc8 });
        gbc.writeMem(0xaf0a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa444, gbc.sp());
        EXPECT(0xaf0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf0a));
        EXPECT(0x4e, gbc.readMem(0xaf0b));
        // CB 4E 00CC
        gbc.setState(0xe1af, 0x3a04, 0xb210, 0x30e7, 0x2847, 0x65de, 0x1, 0x0);
        gbc.writeMem(0x65de, { 0x4a });
        gbc.writeMem(0xe1af, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3a04, gbc.sp());
        EXPECT(0xe1b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1af));
        EXPECT(0x4e, gbc.readMem(0xe1b0));
        // CB 4E 00CD
        gbc.setState(0x49e7, 0x84eb, 0x4c60, 0x5990, 0x6704, 0xb221, 0x1, 0x0);
        gbc.writeMem(0x49e7, { 0xcb, 0x4e });
        gbc.writeMem(0xb221, { 0x1a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x84eb, gbc.sp());
        EXPECT(0x49e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb221));
        // CB 4E 00CE
        gbc.setState(0x73e5, 0xb75b, 0x9550, 0xa648, 0xbc78, 0x9567, 0x1, 0x1);
        gbc.writeMem(0x73e5, { 0xcb, 0x4e });
        gbc.writeMem(0x9567, { 0x9b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb75b, gbc.sp());
        EXPECT(0x73e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9567));
        // CB 4E 00CF
        gbc.setState(0x1875, 0x21bc, 0x32f0, 0xc759, 0x4cf8, 0x9608, 0x1, 0x0);
        gbc.writeMem(0x1875, { 0xcb, 0x4e });
        gbc.writeMem(0x9608, { 0xdd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x21bc, gbc.sp());
        EXPECT(0x1877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x9608));
        // CB 4E 00D0
        gbc.setState(0x42, 0x47a5, 0xc740, 0x18ea, 0xdc9a, 0xb19e, 0x0, 0x0);
        gbc.writeMem(0x42, { 0xcb, 0x4e });
        gbc.writeMem(0xb19e, { 0x9d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x47a5, gbc.sp());
        EXPECT(0x44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb19e));
        // CB 4E 00D1
        gbc.setState(0x7fe0, 0x545, 0xe020, 0x4c96, 0xe424, 0x78a6, 0x1, 0x1);
        gbc.writeMem(0x78a6, { 0x72 });
        gbc.writeMem(0x7fe0, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x545, gbc.sp());
        EXPECT(0x7fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 00D2
        gbc.setState(0x448b, 0x8435, 0xfa90, 0x5471, 0x67f9, 0xef05, 0x1, 0x1);
        gbc.writeMem(0x448b, { 0xcb, 0x4e });
        gbc.writeMem(0xef05, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8435, gbc.sp());
        EXPECT(0x448d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xef05));
        // CB 4E 00D3
        gbc.setState(0x26e3, 0x662c, 0xd810, 0x31a3, 0xaf30, 0x44d2, 0x1, 0x0);
        gbc.writeMem(0x26e3, { 0xcb, 0x4e });
        gbc.writeMem(0x44d2, { 0xf7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x662c, gbc.sp());
        EXPECT(0x26e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 00D4
        gbc.setState(0x3b2d, 0xc214, 0x3450, 0xcf9d, 0x57f0, 0x47e3, 0x1, 0x0);
        gbc.writeMem(0x3b2d, { 0xcb, 0x4e });
        gbc.writeMem(0x47e3, { 0x45 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc214, gbc.sp());
        EXPECT(0x3b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 00D5
        gbc.setState(0xc149, 0x3fd4, 0x4880, 0x1b27, 0x408d, 0xa7d6, 0x0, 0x1);
        gbc.writeMem(0xa7d6, { 0x65 });
        gbc.writeMem(0xc149, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3fd4, gbc.sp());
        EXPECT(0xc14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa7d6));
        EXPECT(0xcb, gbc.readMem(0xc149));
        EXPECT(0x4e, gbc.readMem(0xc14a));
        // CB 4E 00D6
        gbc.setState(0x7f16, 0x88f6, 0x9010, 0xf2e0, 0xf869, 0x6609, 0x0, 0x0);
        gbc.writeMem(0x6609, { 0x87 });
        gbc.writeMem(0x7f16, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x88f6, gbc.sp());
        EXPECT(0x7f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 00D7
        gbc.setState(0x979, 0x487, 0xe20, 0xd959, 0xfba6, 0x3aa1, 0x1, 0x0);
        gbc.writeMem(0x979, { 0xcb, 0x4e });
        gbc.writeMem(0x3aa1, { 0x9f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x487, gbc.sp());
        EXPECT(0x97b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 00D8
        gbc.setState(0x2b32, 0x824a, 0xfb40, 0x6a30, 0xf32d, 0xb64e, 0x1, 0x0);
        gbc.writeMem(0x2b32, { 0xcb, 0x4e });
        gbc.writeMem(0xb64e, { 0x76 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x824a, gbc.sp());
        EXPECT(0x2b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb64e));
        // CB 4E 00DA
        gbc.setState(0xae2, 0x999d, 0xce40, 0xfcaa, 0xecc8, 0x26fd, 0x0, 0x1);
        gbc.writeMem(0xae2, { 0xcb, 0x4e });
        gbc.writeMem(0x26fd, { 0xf8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x999d, gbc.sp());
        EXPECT(0xae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 00DB
        gbc.setState(0xab5a, 0x5f7b, 0x5960, 0x6f39, 0x8d8f, 0x7631, 0x1, 0x1);
        gbc.writeMem(0x7631, { 0x7a });
        gbc.writeMem(0xab5a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5f7b, gbc.sp());
        EXPECT(0xab5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5a));
        EXPECT(0x4e, gbc.readMem(0xab5b));
        // CB 4E 00DC
        gbc.setState(0x3cde, 0x9438, 0x12f0, 0x6920, 0x9632, 0x9805, 0x1, 0x0);
        gbc.writeMem(0x3cde, { 0xcb, 0x4e });
        gbc.writeMem(0x9805, { 0xaf });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9438, gbc.sp());
        EXPECT(0x3ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x9805));
        // CB 4E 00DD
        gbc.setState(0xc8b5, 0xb66b, 0x2120, 0xc969, 0xa2a3, 0xee2c, 0x1, 0x1);
        gbc.writeMem(0xc8b5, { 0xcb, 0x4e });
        gbc.writeMem(0xee2c, { 0x58 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb66b, gbc.sp());
        EXPECT(0xc8b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b5));
        EXPECT(0x4e, gbc.readMem(0xc8b6));
        EXPECT(0x58, gbc.readMem(0xee2c));
        // CB 4E 00DE
        gbc.setState(0x3099, 0x7761, 0xa9e0, 0xad05, 0x7362, 0x77c3, 0x1, 0x0);
        gbc.writeMem(0x3099, { 0xcb, 0x4e });
        gbc.writeMem(0x77c3, { 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7761, gbc.sp());
        EXPECT(0x309b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 00DF
        gbc.setState(0x57ae, 0xcaeb, 0x4f30, 0xb62e, 0xe2d9, 0xe166, 0x1, 0x0);
        gbc.writeMem(0x57ae, { 0xcb, 0x4e });
        gbc.writeMem(0xe166, { 0x29 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcaeb, gbc.sp());
        EXPECT(0x57b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe166));
        // CB 4E 00E0
        gbc.setState(0xccfc, 0xaf3f, 0x84a0, 0x8eb7, 0x534e, 0xfc0d, 0x1, 0x1);
        gbc.writeMem(0xccfc, { 0xcb, 0x4e });
        gbc.writeMem(0xfc0d, { 0xee });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaf3f, gbc.sp());
        EXPECT(0xccfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfc));
        EXPECT(0x4e, gbc.readMem(0xccfd));
        EXPECT(0xee, gbc.readMem(0xfc0d));
        // CB 4E 00E1
        gbc.setState(0x7be6, 0xd1c3, 0xee00, 0xf0f7, 0xa5ac, 0x7809, 0x1, 0x0);
        gbc.writeMem(0x7809, { 0x74 });
        gbc.writeMem(0x7be6, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd1c3, gbc.sp());
        EXPECT(0x7be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 00E2
        gbc.setState(0x9b4b, 0x182, 0xa450, 0xa61c, 0xec7a, 0x860a, 0x0, 0x1);
        gbc.writeMem(0x860a, { 0x3e });
        gbc.writeMem(0x9b4b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x182, gbc.sp());
        EXPECT(0x9b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x860a));
        EXPECT(0xcb, gbc.readMem(0x9b4b));
        EXPECT(0x4e, gbc.readMem(0x9b4c));
        // CB 4E 00E3
        gbc.setState(0xfe3, 0xb88b, 0xb090, 0xadeb, 0xcde6, 0x3a19, 0x0, 0x1);
        gbc.writeMem(0xfe3, { 0xcb, 0x4e });
        gbc.writeMem(0x3a19, { 0xa });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb88b, gbc.sp());
        EXPECT(0xfe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 00E4
        gbc.setState(0x3c4e, 0x7f4, 0x2c20, 0x9c3, 0x7171, 0x8aea, 0x1, 0x1);
        gbc.writeMem(0x3c4e, { 0xcb, 0x4e });
        gbc.writeMem(0x8aea, { 0x6b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7f4, gbc.sp());
        EXPECT(0x3c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x8aea));
        // CB 4E 00E5
        gbc.setState(0xe9cc, 0x48bf, 0x4bc0, 0x1616, 0xab2d, 0x26e4, 0x0, 0x1);
        gbc.writeMem(0x26e4, { 0x68 });
        gbc.writeMem(0xe9cc, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x48bf, gbc.sp());
        EXPECT(0xe9ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9cc));
        EXPECT(0x4e, gbc.readMem(0xe9cd));
        // CB 4E 00E6
        gbc.setState(0x131d, 0xbe3e, 0x5b90, 0x1567, 0x1b8c, 0x41d4, 0x0, 0x0);
        gbc.writeMem(0x131d, { 0xcb, 0x4e });
        gbc.writeMem(0x41d4, { 0x31 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbe3e, gbc.sp());
        EXPECT(0x131f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 00E7
        gbc.setState(0x77eb, 0xa90, 0xb2d0, 0x653, 0x5a3e, 0x55da, 0x0, 0x1);
        gbc.writeMem(0x55da, { 0xb2 });
        gbc.writeMem(0x77eb, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa90, gbc.sp());
        EXPECT(0x77ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 00E8
        gbc.setState(0xee77, 0xc574, 0x6f50, 0x3e9c, 0x204, 0x9035, 0x0, 0x0);
        gbc.writeMem(0x9035, { 0xa0 });
        gbc.writeMem(0xee77, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc574, gbc.sp());
        EXPECT(0xee79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9035));
        EXPECT(0xcb, gbc.readMem(0xee77));
        EXPECT(0x4e, gbc.readMem(0xee78));
        // CB 4E 00E9
        gbc.setState(0x8b93, 0x1253, 0x7890, 0x48e4, 0x1702, 0x693c, 0x0, 0x0);
        gbc.writeMem(0x693c, { 0x7f });
        gbc.writeMem(0x8b93, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1253, gbc.sp());
        EXPECT(0x8b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b93));
        EXPECT(0x4e, gbc.readMem(0x8b94));
        // CB 4E 00EA
        gbc.setState(0x7465, 0x6d38, 0x7b90, 0x3cd8, 0xd3e2, 0xa7c2, 0x0, 0x0);
        gbc.writeMem(0x7465, { 0xcb, 0x4e });
        gbc.writeMem(0xa7c2, { 0x20 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6d38, gbc.sp());
        EXPECT(0x7467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa7c2));
        // CB 4E 00EB
        gbc.setState(0xbd10, 0x1bf3, 0xa8f0, 0xa01, 0xfec3, 0xf7aa, 0x0, 0x1);
        gbc.writeMem(0xbd10, { 0xcb, 0x4e });
        gbc.writeMem(0xf7aa, { 0x9c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1bf3, gbc.sp());
        EXPECT(0xbd12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd10));
        EXPECT(0x4e, gbc.readMem(0xbd11));
        EXPECT(0x9c, gbc.readMem(0xf7aa));
        // CB 4E 00EC
        gbc.setState(0xbb9f, 0xa412, 0x4a10, 0xb9b0, 0x6177, 0x9c1c, 0x1, 0x0);
        gbc.writeMem(0x9c1c, { 0x38 });
        gbc.writeMem(0xbb9f, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa412, gbc.sp());
        EXPECT(0xbba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9c1c));
        EXPECT(0xcb, gbc.readMem(0xbb9f));
        EXPECT(0x4e, gbc.readMem(0xbba0));
        // CB 4E 00EE
        gbc.setState(0x552b, 0xbab8, 0x4af0, 0x558c, 0xd68d, 0xca80, 0x1, 0x1);
        gbc.writeMem(0x552b, { 0xcb, 0x4e });
        gbc.writeMem(0xca80, { 0x3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbab8, gbc.sp());
        EXPECT(0x552d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xca80));
        // CB 4E 00EF
        gbc.setState(0x6c63, 0x36fa, 0x1800, 0x4ec5, 0xc060, 0xbac2, 0x1, 0x0);
        gbc.writeMem(0x6c63, { 0xcb, 0x4e });
        gbc.writeMem(0xbac2, { 0xc4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x36fa, gbc.sp());
        EXPECT(0x6c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xbac2));
        // CB 4E 00F0
        gbc.setState(0x82d9, 0xd645, 0xace0, 0x51e6, 0xe0e2, 0x15cd, 0x1, 0x0);
        gbc.writeMem(0x15cd, { 0xa3 });
        gbc.writeMem(0x82d9, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd645, gbc.sp());
        EXPECT(0x82db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d9));
        EXPECT(0x4e, gbc.readMem(0x82da));
        // CB 4E 00F1
        gbc.setState(0xd90b, 0xa835, 0x3320, 0xfa43, 0x2625, 0x6efe, 0x1, 0x0);
        gbc.writeMem(0x6efe, { 0xfd });
        gbc.writeMem(0xd90b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa835, gbc.sp());
        EXPECT(0xd90d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90b));
        EXPECT(0x4e, gbc.readMem(0xd90c));
        // CB 4E 00F2
        gbc.setState(0x5c63, 0xba28, 0xcee0, 0x5304, 0x878b, 0x2aff, 0x1, 0x0);
        gbc.writeMem(0x2aff, { 0xfa });
        gbc.writeMem(0x5c63, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xba28, gbc.sp());
        EXPECT(0x5c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 00F3
        gbc.setState(0x270b, 0xe2ba, 0xe1e0, 0xaf93, 0x999d, 0x50f1, 0x1, 0x0);
        gbc.writeMem(0x270b, { 0xcb, 0x4e });
        gbc.writeMem(0x50f1, { 0x6c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe2ba, gbc.sp());
        EXPECT(0x270d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 00F4
        gbc.setState(0x22e4, 0x12dd, 0x8a20, 0xa6aa, 0x7f50, 0x7fc4, 0x0, 0x0);
        gbc.writeMem(0x22e4, { 0xcb, 0x4e });
        gbc.writeMem(0x7fc4, { 0x41 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x12dd, gbc.sp());
        EXPECT(0x22e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 00F5
        gbc.setState(0xef90, 0x9cad, 0x7d90, 0x1fbe, 0x12f2, 0x6ab6, 0x1, 0x1);
        gbc.writeMem(0x6ab6, { 0xcd });
        gbc.writeMem(0xef90, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9cad, gbc.sp());
        EXPECT(0xef92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef90));
        EXPECT(0x4e, gbc.readMem(0xef91));
        // CB 4E 00F7
        gbc.setState(0xd9ae, 0xdf75, 0x3970, 0x4704, 0x2061, 0xeabb, 0x1, 0x1);
        gbc.writeMem(0xd9ae, { 0xcb, 0x4e });
        gbc.writeMem(0xeabb, { 0xca });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdf75, gbc.sp());
        EXPECT(0xd9b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ae));
        EXPECT(0x4e, gbc.readMem(0xd9af));
        EXPECT(0xca, gbc.readMem(0xeabb));
        // CB 4E 00F8
        gbc.setState(0x4925, 0x2a3a, 0x3420, 0xc8b, 0x12da, 0x4f2b, 0x0, 0x0);
        gbc.writeMem(0x4925, { 0xcb, 0x4e });
        gbc.writeMem(0x4f2b, { 0xb2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2a3a, gbc.sp());
        EXPECT(0x4927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 00F9
        gbc.setState(0x3995, 0xb918, 0xf3f0, 0xd741, 0xfe2f, 0xb816, 0x1, 0x0);
        gbc.writeMem(0x3995, { 0xcb, 0x4e });
        gbc.writeMem(0xb816, { 0xc9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb918, gbc.sp());
        EXPECT(0x3997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb816));
        // CB 4E 00FA
        gbc.setState(0x950a, 0x7a3c, 0xc8b0, 0x4377, 0x5e53, 0x2813, 0x1, 0x1);
        gbc.writeMem(0x2813, { 0x40 });
        gbc.writeMem(0x950a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7a3c, gbc.sp());
        EXPECT(0x950c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950a));
        EXPECT(0x4e, gbc.readMem(0x950b));
        // CB 4E 00FB
        gbc.setState(0xd439, 0xd94, 0x9690, 0x3869, 0x1c8a, 0x5535, 0x0, 0x0);
        gbc.writeMem(0x5535, { 0xef });
        gbc.writeMem(0xd439, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd94, gbc.sp());
        EXPECT(0xd43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd439));
        EXPECT(0x4e, gbc.readMem(0xd43a));
        // CB 4E 00FC
        gbc.setState(0x5fdb, 0x5c4f, 0xcf40, 0xde13, 0x1cf0, 0x8764, 0x0, 0x0);
        gbc.writeMem(0x5fdb, { 0xcb, 0x4e });
        gbc.writeMem(0x8764, { 0x47 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5c4f, gbc.sp());
        EXPECT(0x5fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8764));
        // CB 4E 00FD
        gbc.setState(0xe3c4, 0x579b, 0x7d30, 0x92bf, 0xae53, 0x599d, 0x0, 0x0);
        gbc.writeMem(0x599d, { 0x24 });
        gbc.writeMem(0xe3c4, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x579b, gbc.sp());
        EXPECT(0xe3c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c4));
        EXPECT(0x4e, gbc.readMem(0xe3c5));
        // CB 4E 00FE
        gbc.setState(0xa2b1, 0x533d, 0x6d0, 0xeed0, 0xfbaf, 0x6945, 0x0, 0x1);
        gbc.writeMem(0x6945, { 0xd2 });
        gbc.writeMem(0xa2b1, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x533d, gbc.sp());
        EXPECT(0xa2b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b1));
        EXPECT(0x4e, gbc.readMem(0xa2b2));
        // CB 4E 00FF
        gbc.setState(0x34c9, 0xd92, 0x24d0, 0xd8e8, 0x16cf, 0x1567, 0x0, 0x1);
        gbc.writeMem(0x1567, { 0x7 });
        gbc.writeMem(0x34c9, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd92, gbc.sp());
        EXPECT(0x34cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0101
        gbc.setState(0x7af7, 0x1f, 0xff10, 0xfa2, 0xb90a, 0x4461, 0x0, 0x1);
        gbc.writeMem(0x4461, { 0xdb });
        gbc.writeMem(0x7af7, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1f, gbc.sp());
        EXPECT(0x7af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0102
        gbc.setState(0x941f, 0xb151, 0x79c0, 0x507e, 0xb7eb, 0x3a80, 0x1, 0x1);
        gbc.writeMem(0x3a80, { 0xc1 });
        gbc.writeMem(0x941f, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb151, gbc.sp());
        EXPECT(0x9421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941f));
        EXPECT(0x4e, gbc.readMem(0x9420));
        // CB 4E 0103
        gbc.setState(0x3016, 0xa55a, 0x6f30, 0xacb1, 0xce68, 0x4518, 0x0, 0x1);
        gbc.writeMem(0x3016, { 0xcb, 0x4e });
        gbc.writeMem(0x4518, { 0x48 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa55a, gbc.sp());
        EXPECT(0x3018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0104
        gbc.setState(0x9dbb, 0x883b, 0x79c0, 0xcaba, 0xc3fe, 0xadf2, 0x0, 0x0);
        gbc.writeMem(0x9dbb, { 0xcb, 0x4e });
        gbc.writeMem(0xadf2, { 0x7b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x883b, gbc.sp());
        EXPECT(0x9dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dbb));
        EXPECT(0x4e, gbc.readMem(0x9dbc));
        EXPECT(0x7b, gbc.readMem(0xadf2));
        // CB 4E 0105
        gbc.setState(0x8350, 0x5f44, 0x5790, 0x6136, 0x50dd, 0x79ce, 0x1, 0x0);
        gbc.writeMem(0x79ce, { 0x81 });
        gbc.writeMem(0x8350, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5f44, gbc.sp());
        EXPECT(0x8352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8350));
        EXPECT(0x4e, gbc.readMem(0x8351));
        // CB 4E 0106
        gbc.setState(0xa659, 0x88ab, 0x2860, 0x9dc, 0x2f19, 0x376e, 0x1, 0x1);
        gbc.writeMem(0x376e, { 0xd8 });
        gbc.writeMem(0xa659, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x88ab, gbc.sp());
        EXPECT(0xa65b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa659));
        EXPECT(0x4e, gbc.readMem(0xa65a));
        // CB 4E 0107
        gbc.setState(0x387f, 0x8ee7, 0xc340, 0xae48, 0x2ee0, 0x3bfe, 0x0, 0x0);
        gbc.writeMem(0x387f, { 0xcb, 0x4e });
        gbc.writeMem(0x3bfe, { 0xc4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8ee7, gbc.sp());
        EXPECT(0x3881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0108
        gbc.setState(0xacf3, 0x4c87, 0xd390, 0x2dbe, 0x95ff, 0xd50a, 0x0, 0x1);
        gbc.writeMem(0xacf3, { 0xcb, 0x4e });
        gbc.writeMem(0xd50a, { 0xd5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4c87, gbc.sp());
        EXPECT(0xacf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf3));
        EXPECT(0x4e, gbc.readMem(0xacf4));
        EXPECT(0xd5, gbc.readMem(0xd50a));
        // CB 4E 0109
        gbc.setState(0x6e54, 0x8346, 0xd570, 0xae97, 0x6be8, 0x9ad0, 0x0, 0x1);
        gbc.writeMem(0x6e54, { 0xcb, 0x4e });
        gbc.writeMem(0x9ad0, { 0x2b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8346, gbc.sp());
        EXPECT(0x6e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9ad0));
        // CB 4E 010A
        gbc.setState(0x2acd, 0x75aa, 0x1510, 0x20aa, 0xee02, 0x521a, 0x0, 0x0);
        gbc.writeMem(0x2acd, { 0xcb, 0x4e });
        gbc.writeMem(0x521a, { 0x59 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x75aa, gbc.sp());
        EXPECT(0x2acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 010B
        gbc.setState(0x7222, 0xacb7, 0x6470, 0x687, 0x4d3a, 0xb16e, 0x0, 0x0);
        gbc.writeMem(0x7222, { 0xcb, 0x4e });
        gbc.writeMem(0xb16e, { 0x38 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xacb7, gbc.sp());
        EXPECT(0x7224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb16e));
        // CB 4E 010C
        gbc.setState(0xe852, 0xc188, 0xb860, 0x8b30, 0x8c9e, 0x6401, 0x1, 0x1);
        gbc.writeMem(0x6401, { 0xa5 });
        gbc.writeMem(0xe852, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc188, gbc.sp());
        EXPECT(0xe854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe852));
        EXPECT(0x4e, gbc.readMem(0xe853));
        // CB 4E 010D
        gbc.setState(0xa249, 0x5378, 0x8b20, 0xdbd3, 0x5e54, 0xdbdc, 0x0, 0x1);
        gbc.writeMem(0xa249, { 0xcb, 0x4e });
        gbc.writeMem(0xdbdc, { 0x72 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5378, gbc.sp());
        EXPECT(0xa24b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa249));
        EXPECT(0x4e, gbc.readMem(0xa24a));
        EXPECT(0x72, gbc.readMem(0xdbdc));
        // CB 4E 010E
        gbc.setState(0x7966, 0x5b71, 0xe860, 0x200f, 0xfdcd, 0xec4e, 0x1, 0x0);
        gbc.writeMem(0x7966, { 0xcb, 0x4e });
        gbc.writeMem(0xec4e, { 0xdf });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5b71, gbc.sp());
        EXPECT(0x7968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xec4e));
        // CB 4E 010F
        gbc.setState(0xd5e3, 0xfab7, 0x3430, 0xafb3, 0x66e4, 0x376c, 0x1, 0x1);
        gbc.writeMem(0x376c, { 0xd0 });
        gbc.writeMem(0xd5e3, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfab7, gbc.sp());
        EXPECT(0xd5e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e3));
        EXPECT(0x4e, gbc.readMem(0xd5e4));
        // CB 4E 0110
        gbc.setState(0x46e2, 0x79f0, 0x96f0, 0x9b59, 0x6c9f, 0x5e90, 0x1, 0x0);
        gbc.writeMem(0x46e2, { 0xcb, 0x4e });
        gbc.writeMem(0x5e90, { 0xe6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x79f0, gbc.sp());
        EXPECT(0x46e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0111
        gbc.setState(0xd3e6, 0xf974, 0xf490, 0x191b, 0xea61, 0x8bea, 0x1, 0x0);
        gbc.writeMem(0x8bea, { 0xd6 });
        gbc.writeMem(0xd3e6, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf974, gbc.sp());
        EXPECT(0xd3e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8bea));
        EXPECT(0xcb, gbc.readMem(0xd3e6));
        EXPECT(0x4e, gbc.readMem(0xd3e7));
        // CB 4E 0112
        gbc.setState(0xe713, 0x4297, 0xa710, 0x52b8, 0x468b, 0x10f2, 0x1, 0x0);
        gbc.writeMem(0x10f2, { 0xde });
        gbc.writeMem(0xe713, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4297, gbc.sp());
        EXPECT(0xe715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe713));
        EXPECT(0x4e, gbc.readMem(0xe714));
        // CB 4E 0113
        gbc.setState(0x72f3, 0x9e88, 0x6020, 0x57, 0x3c42, 0x1ea4, 0x0, 0x1);
        gbc.writeMem(0x1ea4, { 0x62 });
        gbc.writeMem(0x72f3, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9e88, gbc.sp());
        EXPECT(0x72f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0114
        gbc.setState(0x2def, 0x3c60, 0x690, 0x80c6, 0xf38f, 0x5322, 0x0, 0x0);
        gbc.writeMem(0x2def, { 0xcb, 0x4e });
        gbc.writeMem(0x5322, { 0xef });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3c60, gbc.sp());
        EXPECT(0x2df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0115
        gbc.setState(0xca6, 0xdf8a, 0x6700, 0xeff4, 0xb126, 0x39eb, 0x1, 0x1);
        gbc.writeMem(0xca6, { 0xcb, 0x4e });
        gbc.writeMem(0x39eb, { 0xa2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdf8a, gbc.sp());
        EXPECT(0xca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0116
        gbc.setState(0x8942, 0x3287, 0x1340, 0xb701, 0x1139, 0x3ca, 0x0, 0x1);
        gbc.writeMem(0x3ca, { 0x71 });
        gbc.writeMem(0x8942, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3287, gbc.sp());
        EXPECT(0x8944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8942));
        EXPECT(0x4e, gbc.readMem(0x8943));
        // CB 4E 0117
        gbc.setState(0x192e, 0xf904, 0x2f20, 0x1ab1, 0x4ad8, 0x6e6, 0x1, 0x0);
        gbc.writeMem(0x6e6, { 0x2 });
        gbc.writeMem(0x192e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf904, gbc.sp());
        EXPECT(0x1930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0118
        gbc.setState(0x81ba, 0x842e, 0x5270, 0x9397, 0xa171, 0x91a6, 0x0, 0x1);
        gbc.writeMem(0x81ba, { 0xcb, 0x4e });
        gbc.writeMem(0x91a6, { 0x10 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x842e, gbc.sp());
        EXPECT(0x81bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ba));
        EXPECT(0x4e, gbc.readMem(0x81bb));
        EXPECT(0x10, gbc.readMem(0x91a6));
        // CB 4E 011A
        gbc.setState(0xce1c, 0x39ec, 0x5710, 0x49f3, 0xe9d8, 0x809d, 0x1, 0x1);
        gbc.writeMem(0x809d, { 0x5f });
        gbc.writeMem(0xce1c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x39ec, gbc.sp());
        EXPECT(0xce1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x809d));
        EXPECT(0xcb, gbc.readMem(0xce1c));
        EXPECT(0x4e, gbc.readMem(0xce1d));
        // CB 4E 011B
        gbc.setState(0x5391, 0x1d6e, 0x6040, 0x1d15, 0x17f0, 0xb789, 0x0, 0x1);
        gbc.writeMem(0x5391, { 0xcb, 0x4e });
        gbc.writeMem(0xb789, { 0x96 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1d6e, gbc.sp());
        EXPECT(0x5393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xb789));
        // CB 4E 011C
        gbc.setState(0xc745, 0x74ad, 0x5ce0, 0x9981, 0xb339, 0xcbb, 0x1, 0x0);
        gbc.writeMem(0xcbb, { 0xbd });
        gbc.writeMem(0xc745, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x74ad, gbc.sp());
        EXPECT(0xc747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc745));
        EXPECT(0x4e, gbc.readMem(0xc746));
        // CB 4E 011D
        gbc.setState(0xeb5d, 0x1b7f, 0x7640, 0xed5, 0xfb3c, 0xe0e4, 0x0, 0x1);
        gbc.writeMem(0xe0e4, { 0x13 });
        gbc.writeMem(0xeb5d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1b7f, gbc.sp());
        EXPECT(0xeb5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe0e4));
        EXPECT(0xcb, gbc.readMem(0xeb5d));
        EXPECT(0x4e, gbc.readMem(0xeb5e));
        // CB 4E 011E
        gbc.setState(0x38dc, 0xb553, 0x2d70, 0x578b, 0xb40, 0xd524, 0x0, 0x1);
        gbc.writeMem(0x38dc, { 0xcb, 0x4e });
        gbc.writeMem(0xd524, { 0x2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb553, gbc.sp());
        EXPECT(0x38de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xd524));
        // CB 4E 011F
        gbc.setState(0x25cb, 0xc1b5, 0x47e0, 0xcf41, 0x4756, 0x84f1, 0x1, 0x1);
        gbc.writeMem(0x25cb, { 0xcb, 0x4e });
        gbc.writeMem(0x84f1, { 0xde });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc1b5, gbc.sp());
        EXPECT(0x25cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x84f1));
        // CB 4E 0120
        gbc.setState(0xcdc7, 0x858, 0x5290, 0x327c, 0xf630, 0x8f47, 0x0, 0x1);
        gbc.writeMem(0x8f47, { 0x92 });
        gbc.writeMem(0xcdc7, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x858, gbc.sp());
        EXPECT(0xcdc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8f47));
        EXPECT(0xcb, gbc.readMem(0xcdc7));
        EXPECT(0x4e, gbc.readMem(0xcdc8));
        // CB 4E 0121
        gbc.setState(0x8dbc, 0x2ed9, 0xe0f0, 0x581c, 0x6df2, 0x35c4, 0x0, 0x1);
        gbc.writeMem(0x35c4, { 0x7b });
        gbc.writeMem(0x8dbc, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2ed9, gbc.sp());
        EXPECT(0x8dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbc));
        EXPECT(0x4e, gbc.readMem(0x8dbd));
        // CB 4E 0122
        gbc.setState(0x8285, 0x147a, 0x9d10, 0xf7bf, 0x42bf, 0xd1d3, 0x1, 0x0);
        gbc.writeMem(0x8285, { 0xcb, 0x4e });
        gbc.writeMem(0xd1d3, { 0x64 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x147a, gbc.sp());
        EXPECT(0x8287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8285));
        EXPECT(0x4e, gbc.readMem(0x8286));
        EXPECT(0x64, gbc.readMem(0xd1d3));
        // CB 4E 0123
        gbc.setState(0x67db, 0xc6ea, 0x72c0, 0x7c1e, 0x8261, 0x4411, 0x0, 0x0);
        gbc.writeMem(0x4411, { 0x29 });
        gbc.writeMem(0x67db, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc6ea, gbc.sp());
        EXPECT(0x67dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0124
        gbc.setState(0x3cd3, 0x52f6, 0xf2e0, 0xacb1, 0xd589, 0x5b62, 0x0, 0x0);
        gbc.writeMem(0x3cd3, { 0xcb, 0x4e });
        gbc.writeMem(0x5b62, { 0xa2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x52f6, gbc.sp());
        EXPECT(0x3cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0125
        gbc.setState(0xa57b, 0xc937, 0x3630, 0x1cd4, 0x99d3, 0x47a8, 0x0, 0x1);
        gbc.writeMem(0x47a8, { 0x98 });
        gbc.writeMem(0xa57b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc937, gbc.sp());
        EXPECT(0xa57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57b));
        EXPECT(0x4e, gbc.readMem(0xa57c));
        // CB 4E 0126
        gbc.setState(0xe884, 0x66ad, 0x5ce0, 0xd85e, 0x7a8f, 0xf6bc, 0x1, 0x0);
        gbc.writeMem(0xe884, { 0xcb, 0x4e });
        gbc.writeMem(0xf6bc, { 0xf2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x66ad, gbc.sp());
        EXPECT(0xe886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe884));
        EXPECT(0x4e, gbc.readMem(0xe885));
        EXPECT(0xf2, gbc.readMem(0xf6bc));
        // CB 4E 0127
        gbc.setState(0x2f2b, 0xc200, 0xd7d0, 0x68a4, 0xb179, 0x61d3, 0x1, 0x1);
        gbc.writeMem(0x2f2b, { 0xcb, 0x4e });
        gbc.writeMem(0x61d3, { 0x75 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc200, gbc.sp());
        EXPECT(0x2f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0128
        gbc.setState(0xa197, 0xdfe6, 0x9620, 0xda06, 0xef27, 0x6b20, 0x1, 0x0);
        gbc.writeMem(0x6b20, { 0xfb });
        gbc.writeMem(0xa197, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdfe6, gbc.sp());
        EXPECT(0xa199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa197));
        EXPECT(0x4e, gbc.readMem(0xa198));
        // CB 4E 0129
        gbc.setState(0x5157, 0xa602, 0x17f0, 0xabd8, 0x88a7, 0xedb2, 0x0, 0x1);
        gbc.writeMem(0x5157, { 0xcb, 0x4e });
        gbc.writeMem(0xedb2, { 0x24 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa602, gbc.sp());
        EXPECT(0x5159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xedb2));
        // CB 4E 012A
        gbc.setState(0xcbb8, 0x38ef, 0xa120, 0xac19, 0xf4de, 0x90ca, 0x0, 0x0);
        gbc.writeMem(0x90ca, { 0x54 });
        gbc.writeMem(0xcbb8, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x38ef, gbc.sp());
        EXPECT(0xcbba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x90ca));
        EXPECT(0xcb, gbc.readMem(0xcbb8));
        EXPECT(0x4e, gbc.readMem(0xcbb9));
        // CB 4E 012B
        gbc.setState(0x793, 0xa746, 0x9f30, 0x7ab6, 0xe706, 0x5356, 0x0, 0x0);
        gbc.writeMem(0x793, { 0xcb, 0x4e });
        gbc.writeMem(0x5356, { 0x31 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa746, gbc.sp());
        EXPECT(0x795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 012C
        gbc.setState(0xb800, 0x2459, 0x7800, 0x274, 0xba4b, 0x57de, 0x0, 0x1);
        gbc.writeMem(0x57de, { 0xb8 });
        gbc.writeMem(0xb800, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2459, gbc.sp());
        EXPECT(0xb802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb800));
        EXPECT(0x4e, gbc.readMem(0xb801));
        // CB 4E 012D
        gbc.setState(0xc3ee, 0x8160, 0x4460, 0x8466, 0xb881, 0x5b26, 0x1, 0x1);
        gbc.writeMem(0x5b26, { 0x47 });
        gbc.writeMem(0xc3ee, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8160, gbc.sp());
        EXPECT(0xc3f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ee));
        EXPECT(0x4e, gbc.readMem(0xc3ef));
        // CB 4E 012E
        gbc.setState(0xca2d, 0xe5b3, 0xbd40, 0x3780, 0xf3ca, 0xcd2b, 0x1, 0x1);
        gbc.writeMem(0xca2d, { 0xcb, 0x4e });
        gbc.writeMem(0xcd2b, { 0xe2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe5b3, gbc.sp());
        EXPECT(0xca2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2d));
        EXPECT(0x4e, gbc.readMem(0xca2e));
        EXPECT(0xe2, gbc.readMem(0xcd2b));
        // CB 4E 012F
        gbc.setState(0xc95c, 0xa707, 0xf7e0, 0xfe35, 0x8fb0, 0xa4e9, 0x1, 0x0);
        gbc.writeMem(0xa4e9, { 0x4b });
        gbc.writeMem(0xc95c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa707, gbc.sp());
        EXPECT(0xc95e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa4e9));
        EXPECT(0xcb, gbc.readMem(0xc95c));
        EXPECT(0x4e, gbc.readMem(0xc95d));
        // CB 4E 0130
        gbc.setState(0x6dc6, 0x2e75, 0x29d0, 0x58b1, 0xef82, 0x58ee, 0x0, 0x1);
        gbc.writeMem(0x58ee, { 0x29 });
        gbc.writeMem(0x6dc6, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2e75, gbc.sp());
        EXPECT(0x6dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0131
        gbc.setState(0x967e, 0x29bf, 0xc370, 0x7c2, 0x3293, 0x26ce, 0x1, 0x1);
        gbc.writeMem(0x26ce, { 0x7e });
        gbc.writeMem(0x967e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x29bf, gbc.sp());
        EXPECT(0x9680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x967e));
        EXPECT(0x4e, gbc.readMem(0x967f));
        // CB 4E 0132
        gbc.setState(0x5cb0, 0x6fce, 0x9290, 0xbde9, 0x5bbf, 0x820e, 0x1, 0x1);
        gbc.writeMem(0x5cb0, { 0xcb, 0x4e });
        gbc.writeMem(0x820e, { 0xfc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6fce, gbc.sp());
        EXPECT(0x5cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x820e));
        // CB 4E 0133
        gbc.setState(0xa50f, 0xa22b, 0x86b0, 0x3952, 0x2c51, 0x58e9, 0x1, 0x1);
        gbc.writeMem(0x58e9, { 0x83 });
        gbc.writeMem(0xa50f, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa22b, gbc.sp());
        EXPECT(0xa511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50f));
        EXPECT(0x4e, gbc.readMem(0xa510));
        // CB 4E 0134
        gbc.setState(0x9a50, 0x7806, 0x6440, 0x5782, 0x8537, 0x9d96, 0x0, 0x1);
        gbc.writeMem(0x9a50, { 0xcb, 0x4e });
        gbc.writeMem(0x9d96, { 0xa3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7806, gbc.sp());
        EXPECT(0x9a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a50));
        EXPECT(0x4e, gbc.readMem(0x9a51));
        EXPECT(0xa3, gbc.readMem(0x9d96));
        // CB 4E 0135
        gbc.setState(0x9db0, 0xd874, 0x5f60, 0x1bda, 0xdeb5, 0x289a, 0x1, 0x0);
        gbc.writeMem(0x289a, { 0xba });
        gbc.writeMem(0x9db0, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd874, gbc.sp());
        EXPECT(0x9db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db0));
        EXPECT(0x4e, gbc.readMem(0x9db1));
        // CB 4E 0136
        gbc.setState(0xb101, 0x1449, 0x1830, 0x4b3b, 0x7335, 0xade7, 0x0, 0x0);
        gbc.writeMem(0xade7, { 0x2a });
        gbc.writeMem(0xb101, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1449, gbc.sp());
        EXPECT(0xb103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xade7));
        EXPECT(0xcb, gbc.readMem(0xb101));
        EXPECT(0x4e, gbc.readMem(0xb102));
        // CB 4E 0137
        gbc.setState(0xa282, 0x6a6b, 0xc520, 0x3c42, 0xea36, 0x8914, 0x0, 0x0);
        gbc.writeMem(0x8914, { 0x38 });
        gbc.writeMem(0xa282, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6a6b, gbc.sp());
        EXPECT(0xa284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8914));
        EXPECT(0xcb, gbc.readMem(0xa282));
        EXPECT(0x4e, gbc.readMem(0xa283));
        // CB 4E 0138
        gbc.setState(0x7e38, 0xe056, 0xa520, 0x3718, 0xd4e5, 0x33dd, 0x1, 0x1);
        gbc.writeMem(0x33dd, { 0xa });
        gbc.writeMem(0x7e38, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe056, gbc.sp());
        EXPECT(0x7e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 013A
        gbc.setState(0xebb6, 0x9911, 0xc80, 0x44d6, 0x800d, 0x7f02, 0x1, 0x0);
        gbc.writeMem(0x7f02, { 0x2 });
        gbc.writeMem(0xebb6, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9911, gbc.sp());
        EXPECT(0xebb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb6));
        EXPECT(0x4e, gbc.readMem(0xebb7));
        // CB 4E 013B
        gbc.setState(0x358, 0xb346, 0x5460, 0xcfaa, 0x72a2, 0xfa99, 0x0, 0x0);
        gbc.writeMem(0x358, { 0xcb, 0x4e });
        gbc.writeMem(0xfa99, { 0xba });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb346, gbc.sp());
        EXPECT(0x35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xfa99));
        // CB 4E 013C
        gbc.setState(0x9679, 0x5538, 0xab40, 0x3aca, 0x8fef, 0x3cf5, 0x1, 0x1);
        gbc.writeMem(0x3cf5, { 0x84 });
        gbc.writeMem(0x9679, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5538, gbc.sp());
        EXPECT(0x967b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9679));
        EXPECT(0x4e, gbc.readMem(0x967a));
        // CB 4E 013D
        gbc.setState(0x62df, 0xba12, 0xa150, 0x8827, 0x6456, 0xdcf5, 0x0, 0x0);
        gbc.writeMem(0x62df, { 0xcb, 0x4e });
        gbc.writeMem(0xdcf5, { 0x5e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xba12, gbc.sp());
        EXPECT(0x62e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xdcf5));
        // CB 4E 013E
        gbc.setState(0x772b, 0xbfce, 0xcc50, 0xec8, 0xbdcb, 0x4fe2, 0x1, 0x0);
        gbc.writeMem(0x4fe2, { 0x63 });
        gbc.writeMem(0x772b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbfce, gbc.sp());
        EXPECT(0x772d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 013F
        gbc.setState(0xdcce, 0x489a, 0xbb0, 0x48dc, 0x59d4, 0x322c, 0x1, 0x1);
        gbc.writeMem(0x322c, { 0x29 });
        gbc.writeMem(0xdcce, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x489a, gbc.sp());
        EXPECT(0xdcd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcce));
        EXPECT(0x4e, gbc.readMem(0xdccf));
        // CB 4E 0140
        gbc.setState(0x74b0, 0x5352, 0xe70, 0xb439, 0x65cc, 0x755e, 0x0, 0x0);
        gbc.writeMem(0x74b0, { 0xcb, 0x4e });
        gbc.writeMem(0x755e, { 0x2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5352, gbc.sp());
        EXPECT(0x74b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0141
        gbc.setState(0x70b, 0x597c, 0xaaa0, 0xebca, 0xfb86, 0x6a2b, 0x0, 0x1);
        gbc.writeMem(0x70b, { 0xcb, 0x4e });
        gbc.writeMem(0x6a2b, { 0xd3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x597c, gbc.sp());
        EXPECT(0x70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0142
        gbc.setState(0x59b6, 0x96f0, 0x2e20, 0x4d46, 0x3dea, 0xe989, 0x0, 0x1);
        gbc.writeMem(0x59b6, { 0xcb, 0x4e });
        gbc.writeMem(0xe989, { 0x7b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x96f0, gbc.sp());
        EXPECT(0x59b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe989));
        // CB 4E 0143
        gbc.setState(0x43bf, 0x5f, 0x1ab0, 0x5772, 0xf084, 0xd18a, 0x0, 0x0);
        gbc.writeMem(0x43bf, { 0xcb, 0x4e });
        gbc.writeMem(0xd18a, { 0x8d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5f, gbc.sp());
        EXPECT(0x43c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd18a));
        // CB 4E 0144
        gbc.setState(0x5225, 0xc116, 0x1580, 0x80a1, 0x29bc, 0xd515, 0x1, 0x1);
        gbc.writeMem(0x5225, { 0xcb, 0x4e });
        gbc.writeMem(0xd515, { 0x23 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc116, gbc.sp());
        EXPECT(0x5227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xd515));
        // CB 4E 0145
        gbc.setState(0xd216, 0x5cc0, 0x21b0, 0x2f48, 0xb02, 0xe926, 0x1, 0x0);
        gbc.writeMem(0xd216, { 0xcb, 0x4e });
        gbc.writeMem(0xe926, { 0x12 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5cc0, gbc.sp());
        EXPECT(0xd218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd216));
        EXPECT(0x4e, gbc.readMem(0xd217));
        EXPECT(0x12, gbc.readMem(0xe926));
        // CB 4E 0146
        gbc.setState(0x6aad, 0x2920, 0x53b0, 0xa876, 0x1354, 0x8693, 0x1, 0x1);
        gbc.writeMem(0x6aad, { 0xcb, 0x4e });
        gbc.writeMem(0x8693, { 0xa5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2920, gbc.sp());
        EXPECT(0x6aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x8693));
        // CB 4E 0147
        gbc.setState(0xdc3f, 0x8e41, 0xca0, 0x1e9c, 0x6044, 0x689d, 0x1, 0x0);
        gbc.writeMem(0x689d, { 0x4e });
        gbc.writeMem(0xdc3f, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8e41, gbc.sp());
        EXPECT(0xdc41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3f));
        EXPECT(0x4e, gbc.readMem(0xdc40));
        // CB 4E 0148
        gbc.setState(0x7c67, 0x21bb, 0x92a0, 0xd5a6, 0x673d, 0x8f2, 0x0, 0x1);
        gbc.writeMem(0x8f2, { 0x4f });
        gbc.writeMem(0x7c67, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x21bb, gbc.sp());
        EXPECT(0x7c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0149
        gbc.setState(0xb822, 0x53e3, 0x2a60, 0xffb1, 0xe24f, 0x922b, 0x1, 0x0);
        gbc.writeMem(0x922b, { 0xab });
        gbc.writeMem(0xb822, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x53e3, gbc.sp());
        EXPECT(0xb824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x922b));
        EXPECT(0xcb, gbc.readMem(0xb822));
        EXPECT(0x4e, gbc.readMem(0xb823));
        // CB 4E 014A
        gbc.setState(0x619b, 0x3845, 0x2c50, 0x2b71, 0xde3b, 0x896b, 0x0, 0x0);
        gbc.writeMem(0x619b, { 0xcb, 0x4e });
        gbc.writeMem(0x896b, { 0x43 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3845, gbc.sp());
        EXPECT(0x619d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x896b));
        // CB 4E 014B
        gbc.setState(0x12f7, 0x1879, 0x20c0, 0x46b1, 0x9baf, 0xaf72, 0x0, 0x1);
        gbc.writeMem(0x12f7, { 0xcb, 0x4e });
        gbc.writeMem(0xaf72, { 0x73 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1879, gbc.sp());
        EXPECT(0x12f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xaf72));
        // CB 4E 014C
        gbc.setState(0x8c91, 0xa80d, 0xe970, 0xbed0, 0xb6a6, 0xa46c, 0x1, 0x1);
        gbc.writeMem(0x8c91, { 0xcb, 0x4e });
        gbc.writeMem(0xa46c, { 0x8e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa80d, gbc.sp());
        EXPECT(0x8c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c91));
        EXPECT(0x4e, gbc.readMem(0x8c92));
        EXPECT(0x8e, gbc.readMem(0xa46c));
        // CB 4E 014D
        gbc.setState(0xc15e, 0xb7b0, 0x9e30, 0x50c1, 0x245f, 0xdd38, 0x0, 0x1);
        gbc.writeMem(0xc15e, { 0xcb, 0x4e });
        gbc.writeMem(0xdd38, { 0xd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb7b0, gbc.sp());
        EXPECT(0xc160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15e));
        EXPECT(0x4e, gbc.readMem(0xc15f));
        EXPECT(0xd, gbc.readMem(0xdd38));
        // CB 4E 014E
        gbc.setState(0x6d90, 0x76d3, 0xf8a0, 0x9eb9, 0xd4c7, 0xaf12, 0x0, 0x0);
        gbc.writeMem(0x6d90, { 0xcb, 0x4e });
        gbc.writeMem(0xaf12, { 0x4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x76d3, gbc.sp());
        EXPECT(0x6d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xaf12));
        // CB 4E 014F
        gbc.setState(0x16e2, 0x4186, 0x7f00, 0xf6cf, 0xa371, 0x8615, 0x0, 0x0);
        gbc.writeMem(0x16e2, { 0xcb, 0x4e });
        gbc.writeMem(0x8615, { 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4186, gbc.sp());
        EXPECT(0x16e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8615));
        // CB 4E 0150
        gbc.setState(0x57e3, 0x8d72, 0x5270, 0x2a31, 0xfeb8, 0xe93e, 0x0, 0x0);
        gbc.writeMem(0x57e3, { 0xcb, 0x4e });
        gbc.writeMem(0xe93e, { 0x15 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8d72, gbc.sp());
        EXPECT(0x57e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe93e));
        // CB 4E 0151
        gbc.setState(0xa956, 0x55e9, 0x36d0, 0x8077, 0xa49, 0x195b, 0x0, 0x1);
        gbc.writeMem(0x195b, { 0x28 });
        gbc.writeMem(0xa956, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x55e9, gbc.sp());
        EXPECT(0xa958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa956));
        EXPECT(0x4e, gbc.readMem(0xa957));
        // CB 4E 0152
        gbc.setState(0x6dba, 0xa7bb, 0xed20, 0x75e9, 0xa7a6, 0x4091, 0x0, 0x0);
        gbc.writeMem(0x4091, { 0xe7 });
        gbc.writeMem(0x6dba, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa7bb, gbc.sp());
        EXPECT(0x6dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0153
        gbc.setState(0xe2c6, 0xa6e1, 0x28c0, 0xaf5e, 0xab4f, 0x7d66, 0x1, 0x1);
        gbc.writeMem(0x7d66, { 0xbc });
        gbc.writeMem(0xe2c6, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa6e1, gbc.sp());
        EXPECT(0xe2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c6));
        EXPECT(0x4e, gbc.readMem(0xe2c7));
        // CB 4E 0154
        gbc.setState(0xaced, 0x7d72, 0x16c0, 0x11bb, 0xd41b, 0xff05, 0x1, 0x1);
        gbc.writeMem(0xaced, { 0xcb, 0x4e });
        gbc.writeMem(0xff05, { 0x83 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7d72, gbc.sp());
        EXPECT(0xacef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaced));
        EXPECT(0x4e, gbc.readMem(0xacee));
        EXPECT(0x83, gbc.readMem(0xff05));
        // CB 4E 0155
        gbc.setState(0x5f64, 0xfa5e, 0x5f10, 0xc6f6, 0x3e22, 0x4b5e, 0x1, 0x0);
        gbc.writeMem(0x4b5e, { 0xcc });
        gbc.writeMem(0x5f64, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfa5e, gbc.sp());
        EXPECT(0x5f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0156
        gbc.setState(0x416b, 0x266d, 0xebe0, 0x1953, 0xe6ad, 0x1a87, 0x0, 0x1);
        gbc.writeMem(0x1a87, { 0x51 });
        gbc.writeMem(0x416b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x266d, gbc.sp());
        EXPECT(0x416d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0157
        gbc.setState(0xa6e4, 0x1f5f, 0xc220, 0xdba, 0x6b22, 0x4fa9, 0x0, 0x1);
        gbc.writeMem(0x4fa9, { 0x40 });
        gbc.writeMem(0xa6e4, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1f5f, gbc.sp());
        EXPECT(0xa6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e4));
        EXPECT(0x4e, gbc.readMem(0xa6e5));
        // CB 4E 0158
        gbc.setState(0xa65c, 0xfe37, 0x5210, 0x2742, 0xff61, 0xecc7, 0x1, 0x0);
        gbc.writeMem(0xa65c, { 0xcb, 0x4e });
        gbc.writeMem(0xecc7, { 0x15 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfe37, gbc.sp());
        EXPECT(0xa65e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa65c));
        EXPECT(0x4e, gbc.readMem(0xa65d));
        EXPECT(0x15, gbc.readMem(0xecc7));
        // CB 4E 0159
        gbc.setState(0x63c2, 0x9ed0, 0xda40, 0xc4cd, 0x6d2b, 0x86fb, 0x1, 0x1);
        gbc.writeMem(0x63c2, { 0xcb, 0x4e });
        gbc.writeMem(0x86fb, { 0x79 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9ed0, gbc.sp());
        EXPECT(0x63c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x86fb));
        // CB 4E 015A
        gbc.setState(0x2c27, 0xb506, 0x1850, 0xf34a, 0x1cba, 0x288f, 0x0, 0x0);
        gbc.writeMem(0x288f, { 0xb4 });
        gbc.writeMem(0x2c27, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb506, gbc.sp());
        EXPECT(0x2c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 015B
        gbc.setState(0xaba, 0x6046, 0x190, 0x49ff, 0xf4a4, 0x41cd, 0x0, 0x0);
        gbc.writeMem(0xaba, { 0xcb, 0x4e });
        gbc.writeMem(0x41cd, { 0x27 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6046, gbc.sp());
        EXPECT(0xabc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 015D
        gbc.setState(0x2c69, 0xaad7, 0xed30, 0xc1f1, 0x1cec, 0xc266, 0x0, 0x1);
        gbc.writeMem(0x2c69, { 0xcb, 0x4e });
        gbc.writeMem(0xc266, { 0xa8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xaad7, gbc.sp());
        EXPECT(0x2c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xc266));
        // CB 4E 015E
        gbc.setState(0x65d7, 0xee3, 0x4c40, 0x8867, 0xf075, 0x75d7, 0x0, 0x1);
        gbc.writeMem(0x65d7, { 0xcb, 0x4e });
        gbc.writeMem(0x75d7, { 0x7c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xee3, gbc.sp());
        EXPECT(0x65d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 015F
        gbc.setState(0x9805, 0xa90c, 0x1110, 0x61fe, 0x736e, 0x97fc, 0x0, 0x0);
        gbc.writeMem(0x97fc, { 0xae });
        gbc.writeMem(0x9805, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa90c, gbc.sp());
        EXPECT(0x9807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0x97fc));
        EXPECT(0xcb, gbc.readMem(0x9805));
        EXPECT(0x4e, gbc.readMem(0x9806));
        // CB 4E 0160
        gbc.setState(0xb51a, 0x9ced, 0x8cb0, 0x5c83, 0xb431, 0xfb65, 0x0, 0x1);
        gbc.writeMem(0xb51a, { 0xcb, 0x4e });
        gbc.writeMem(0xfb65, { 0x97 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9ced, gbc.sp());
        EXPECT(0xb51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb51a));
        EXPECT(0x4e, gbc.readMem(0xb51b));
        EXPECT(0x97, gbc.readMem(0xfb65));
        // CB 4E 0161
        gbc.setState(0x7b5f, 0x654, 0x4930, 0xcbcf, 0x183a, 0xdb81, 0x1, 0x0);
        gbc.writeMem(0x7b5f, { 0xcb, 0x4e });
        gbc.writeMem(0xdb81, { 0x1e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x654, gbc.sp());
        EXPECT(0x7b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xdb81));
        // CB 4E 0162
        gbc.setState(0x6bc, 0x64d0, 0xe660, 0x5bb0, 0xff43, 0x37d6, 0x1, 0x1);
        gbc.writeMem(0x6bc, { 0xcb, 0x4e });
        gbc.writeMem(0x37d6, { 0x7c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x64d0, gbc.sp());
        EXPECT(0x6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0163
        gbc.setState(0xa190, 0x7907, 0x4a40, 0x1e84, 0x2643, 0xbe3a, 0x0, 0x0);
        gbc.writeMem(0xa190, { 0xcb, 0x4e });
        gbc.writeMem(0xbe3a, { 0x4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7907, gbc.sp());
        EXPECT(0xa192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa190));
        EXPECT(0x4e, gbc.readMem(0xa191));
        EXPECT(0x4, gbc.readMem(0xbe3a));
        // CB 4E 0164
        gbc.setState(0x108a, 0x4b7, 0xbab0, 0xbfdd, 0xd52b, 0xaf, 0x1, 0x1);
        gbc.writeMem(0xaf, { 0x54 });
        gbc.writeMem(0x108a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4b7, gbc.sp());
        EXPECT(0x108c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0165
        gbc.setState(0x9970, 0x31d7, 0xaf20, 0x88fe, 0xcead, 0x167a, 0x0, 0x1);
        gbc.writeMem(0x167a, { 0xc1 });
        gbc.writeMem(0x9970, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x31d7, gbc.sp());
        EXPECT(0x9972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9970));
        EXPECT(0x4e, gbc.readMem(0x9971));
        // CB 4E 0166
        gbc.setState(0x2756, 0x3059, 0xfee0, 0xf193, 0xc94f, 0xe937, 0x1, 0x1);
        gbc.writeMem(0x2756, { 0xcb, 0x4e });
        gbc.writeMem(0xe937, { 0x52 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3059, gbc.sp());
        EXPECT(0x2758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe937));
        // CB 4E 0167
        gbc.setState(0xe26, 0x63fb, 0x8270, 0x91df, 0x7b80, 0x14d0, 0x0, 0x0);
        gbc.writeMem(0xe26, { 0xcb, 0x4e });
        gbc.writeMem(0x14d0, { 0xf0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x63fb, gbc.sp());
        EXPECT(0xe28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0168
        gbc.setState(0xaecd, 0x7fba, 0x54e0, 0xad72, 0x73c5, 0x539, 0x1, 0x0);
        gbc.writeMem(0x539, { 0xac });
        gbc.writeMem(0xaecd, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7fba, gbc.sp());
        EXPECT(0xaecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaecd));
        EXPECT(0x4e, gbc.readMem(0xaece));
        // CB 4E 0169
        gbc.setState(0x6370, 0x75f1, 0x7220, 0xefe6, 0x4473, 0x13d8, 0x1, 0x1);
        gbc.writeMem(0x13d8, { 0x0 });
        gbc.writeMem(0x6370, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x75f1, gbc.sp());
        EXPECT(0x6372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 016A
        gbc.setState(0x779b, 0xf55c, 0xb2c0, 0xb731, 0xa86b, 0x74a5, 0x1, 0x1);
        gbc.writeMem(0x74a5, { 0x87 });
        gbc.writeMem(0x779b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf55c, gbc.sp());
        EXPECT(0x779d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 016B
        gbc.setState(0x5090, 0x642, 0x1990, 0x7012, 0x7f85, 0x797b, 0x1, 0x0);
        gbc.writeMem(0x5090, { 0xcb, 0x4e });
        gbc.writeMem(0x797b, { 0x65 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x642, gbc.sp());
        EXPECT(0x5092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 016C
        gbc.setState(0x72dc, 0xb0db, 0x2330, 0x1762, 0x526c, 0x8abe, 0x0, 0x0);
        gbc.writeMem(0x72dc, { 0xcb, 0x4e });
        gbc.writeMem(0x8abe, { 0xc5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb0db, gbc.sp());
        EXPECT(0x72de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8abe));
        // CB 4E 016D
        gbc.setState(0xb66, 0x251, 0x6b10, 0x9e20, 0x5383, 0xc8fa, 0x1, 0x0);
        gbc.writeMem(0xb66, { 0xcb, 0x4e });
        gbc.writeMem(0xc8fa, { 0xb7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x251, gbc.sp());
        EXPECT(0xb68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc8fa));
        // CB 4E 016E
        gbc.setState(0xbc19, 0x958e, 0x61c0, 0x3bbc, 0x3ff8, 0x9d4b, 0x0, 0x0);
        gbc.writeMem(0x9d4b, { 0x6c });
        gbc.writeMem(0xbc19, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x958e, gbc.sp());
        EXPECT(0xbc1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9d4b));
        EXPECT(0xcb, gbc.readMem(0xbc19));
        EXPECT(0x4e, gbc.readMem(0xbc1a));
        // CB 4E 016F
        gbc.setState(0xf3, 0xdeec, 0x2f30, 0x582c, 0x8293, 0x4f7e, 0x1, 0x1);
        gbc.writeMem(0xf3, { 0xcb, 0x4e });
        gbc.writeMem(0x4f7e, { 0xea });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdeec, gbc.sp());
        EXPECT(0xf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0170
        gbc.setState(0xa845, 0xe6d7, 0x7590, 0x47e3, 0x11c6, 0x6f4b, 0x0, 0x1);
        gbc.writeMem(0x6f4b, { 0x1e });
        gbc.writeMem(0xa845, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe6d7, gbc.sp());
        EXPECT(0xa847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa845));
        EXPECT(0x4e, gbc.readMem(0xa846));
        // CB 4E 0171
        gbc.setState(0x9fef, 0x587b, 0x6d80, 0x9b21, 0xdd1c, 0xed20, 0x1, 0x0);
        gbc.writeMem(0x9fef, { 0xcb, 0x4e });
        gbc.writeMem(0xed20, { 0xd0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x587b, gbc.sp());
        EXPECT(0x9ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fef));
        EXPECT(0x4e, gbc.readMem(0x9ff0));
        EXPECT(0xd0, gbc.readMem(0xed20));
        // CB 4E 0172
        gbc.setState(0x5dcd, 0xbffa, 0x7290, 0x2a68, 0x1158, 0x14bf, 0x0, 0x0);
        gbc.writeMem(0x14bf, { 0x71 });
        gbc.writeMem(0x5dcd, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbffa, gbc.sp());
        EXPECT(0x5dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0173
        gbc.setState(0x6072, 0x6e7d, 0x1220, 0x8b90, 0x102f, 0xf11e, 0x1, 0x0);
        gbc.writeMem(0x6072, { 0xcb, 0x4e });
        gbc.writeMem(0xf11e, { 0x95 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6e7d, gbc.sp());
        EXPECT(0x6074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xf11e));
        // CB 4E 0174
        gbc.setState(0x3fcf, 0x16af, 0xe040, 0xda96, 0x1f73, 0x9977, 0x1, 0x1);
        gbc.writeMem(0x3fcf, { 0xcb, 0x4e });
        gbc.writeMem(0x9977, { 0x14 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x16af, gbc.sp());
        EXPECT(0x3fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9977));
        // CB 4E 0175
        gbc.setState(0x2c5, 0x5b56, 0x5f40, 0xe4ac, 0xc3cf, 0x9352, 0x1, 0x1);
        gbc.writeMem(0x2c5, { 0xcb, 0x4e });
        gbc.writeMem(0x9352, { 0xec });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5b56, gbc.sp());
        EXPECT(0x2c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9352));
        // CB 4E 0176
        gbc.setState(0x2c13, 0xa8d2, 0x86b0, 0x9c50, 0x4010, 0x2bfd, 0x0, 0x1);
        gbc.writeMem(0x2bfd, { 0x4e });
        gbc.writeMem(0x2c13, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa8d2, gbc.sp());
        EXPECT(0x2c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0177
        gbc.setState(0x86ab, 0xb27b, 0xce60, 0x24cd, 0x252b, 0x7cae, 0x0, 0x1);
        gbc.writeMem(0x7cae, { 0xd2 });
        gbc.writeMem(0x86ab, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb27b, gbc.sp());
        EXPECT(0x86ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ab));
        EXPECT(0x4e, gbc.readMem(0x86ac));
        // CB 4E 0178
        gbc.setState(0xab74, 0x241a, 0xb0a0, 0xec7d, 0x4301, 0xffb8, 0x0, 0x0);
        gbc.writeMem(0xab74, { 0xcb, 0x4e });
        gbc.writeMem(0xffb8, { 0x10 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x241a, gbc.sp());
        EXPECT(0xab76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab74));
        EXPECT(0x4e, gbc.readMem(0xab75));
        EXPECT(0x10, gbc.readMem(0xffb8));
        // CB 4E 0179
        gbc.setState(0x9ddf, 0xf347, 0x7020, 0xe4c8, 0x8081, 0x1ce0, 0x0, 0x1);
        gbc.writeMem(0x1ce0, { 0x62 });
        gbc.writeMem(0x9ddf, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf347, gbc.sp());
        EXPECT(0x9de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ddf));
        EXPECT(0x4e, gbc.readMem(0x9de0));
        // CB 4E 017A
        gbc.setState(0x7f29, 0xd41e, 0xf700, 0x770d, 0x6787, 0xafe0, 0x1, 0x0);
        gbc.writeMem(0x7f29, { 0xcb, 0x4e });
        gbc.writeMem(0xafe0, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd41e, gbc.sp());
        EXPECT(0x7f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xafe0));
        // CB 4E 017B
        gbc.setState(0x1744, 0x14f6, 0x3de0, 0xf1c3, 0x920c, 0x26c, 0x0, 0x1);
        gbc.writeMem(0x26c, { 0x9d });
        gbc.writeMem(0x1744, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x14f6, gbc.sp());
        EXPECT(0x1746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 017C
        gbc.setState(0x2ba5, 0x160a, 0x20c0, 0xa9a1, 0xcaab, 0xb648, 0x0, 0x0);
        gbc.writeMem(0x2ba5, { 0xcb, 0x4e });
        gbc.writeMem(0xb648, { 0x80 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x160a, gbc.sp());
        EXPECT(0x2ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb648));
        // CB 4E 017D
        gbc.setState(0xa16a, 0xa5c2, 0xfac0, 0xa96e, 0xe7bc, 0x1602, 0x1, 0x1);
        gbc.writeMem(0x1602, { 0x49 });
        gbc.writeMem(0xa16a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa5c2, gbc.sp());
        EXPECT(0xa16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16a));
        EXPECT(0x4e, gbc.readMem(0xa16b));
        // CB 4E 017E
        gbc.setState(0x197e, 0x7b45, 0x3f30, 0xd6df, 0x7020, 0xd2e7, 0x1, 0x0);
        gbc.writeMem(0x197e, { 0xcb, 0x4e });
        gbc.writeMem(0xd2e7, { 0x58 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7b45, gbc.sp());
        EXPECT(0x1980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd2e7));
        // CB 4E 017F
        gbc.setState(0xab99, 0xdf37, 0x55f0, 0x9d53, 0x9a19, 0xf775, 0x1, 0x0);
        gbc.writeMem(0xab99, { 0xcb, 0x4e });
        gbc.writeMem(0xf775, { 0xaf });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdf37, gbc.sp());
        EXPECT(0xab9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab99));
        EXPECT(0x4e, gbc.readMem(0xab9a));
        EXPECT(0xaf, gbc.readMem(0xf775));
        // CB 4E 0180
        gbc.setState(0xd3b4, 0x2d1f, 0x94a0, 0x54c2, 0xc0b6, 0xdcc3, 0x0, 0x0);
        gbc.writeMem(0xd3b4, { 0xcb, 0x4e });
        gbc.writeMem(0xdcc3, { 0xed });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2d1f, gbc.sp());
        EXPECT(0xd3b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b4));
        EXPECT(0x4e, gbc.readMem(0xd3b5));
        EXPECT(0xed, gbc.readMem(0xdcc3));
        // CB 4E 0181
        gbc.setState(0x6cf0, 0x31c3, 0xa3e0, 0xfc79, 0xdd43, 0x274d, 0x1, 0x0);
        gbc.writeMem(0x274d, { 0x29 });
        gbc.writeMem(0x6cf0, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x31c3, gbc.sp());
        EXPECT(0x6cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0182
        gbc.setState(0xc793, 0x96de, 0xffe0, 0xcf0b, 0x6e85, 0x1e32, 0x0, 0x0);
        gbc.writeMem(0x1e32, { 0xa });
        gbc.writeMem(0xc793, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x96de, gbc.sp());
        EXPECT(0xc795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc793));
        EXPECT(0x4e, gbc.readMem(0xc794));
        // CB 4E 0183
        gbc.setState(0x9f11, 0x912c, 0x8130, 0xe931, 0xc3a3, 0xa987, 0x0, 0x0);
        gbc.writeMem(0x9f11, { 0xcb, 0x4e });
        gbc.writeMem(0xa987, { 0xbc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x912c, gbc.sp());
        EXPECT(0x9f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f11));
        EXPECT(0x4e, gbc.readMem(0x9f12));
        EXPECT(0xbc, gbc.readMem(0xa987));
        // CB 4E 0184
        gbc.setState(0x72dc, 0xa6bb, 0x34b0, 0xa458, 0x5d98, 0x1ca6, 0x1, 0x0);
        gbc.writeMem(0x1ca6, { 0xa8 });
        gbc.writeMem(0x72dc, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa6bb, gbc.sp());
        EXPECT(0x72de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0185
        gbc.setState(0x41fd, 0xbea2, 0xac90, 0x3768, 0x137e, 0xa37, 0x1, 0x1);
        gbc.writeMem(0xa37, { 0x6d });
        gbc.writeMem(0x41fd, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbea2, gbc.sp());
        EXPECT(0x41ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0186
        gbc.setState(0x6172, 0xfa01, 0x3650, 0x3891, 0x4d, 0x705, 0x1, 0x0);
        gbc.writeMem(0x705, { 0x27 });
        gbc.writeMem(0x6172, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfa01, gbc.sp());
        EXPECT(0x6174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0187
        gbc.setState(0xea7c, 0x5521, 0xfb70, 0x4edb, 0x1a7, 0x3d53, 0x0, 0x0);
        gbc.writeMem(0x3d53, { 0x63 });
        gbc.writeMem(0xea7c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5521, gbc.sp());
        EXPECT(0xea7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea7c));
        EXPECT(0x4e, gbc.readMem(0xea7d));
        // CB 4E 0188
        gbc.setState(0x8e71, 0x63af, 0x4760, 0x6533, 0xd3a, 0xbbf7, 0x0, 0x0);
        gbc.writeMem(0x8e71, { 0xcb, 0x4e });
        gbc.writeMem(0xbbf7, { 0x1b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x63af, gbc.sp());
        EXPECT(0x8e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e71));
        EXPECT(0x4e, gbc.readMem(0x8e72));
        EXPECT(0x1b, gbc.readMem(0xbbf7));
        // CB 4E 0189
        gbc.setState(0x2429, 0x786e, 0x96b0, 0x353d, 0x24f7, 0x71a9, 0x0, 0x1);
        gbc.writeMem(0x2429, { 0xcb, 0x4e });
        gbc.writeMem(0x71a9, { 0x39 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x786e, gbc.sp());
        EXPECT(0x242b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 018A
        gbc.setState(0x2111, 0x8f3d, 0x750, 0x1ba0, 0x3005, 0xf9d3, 0x1, 0x0);
        gbc.writeMem(0x2111, { 0xcb, 0x4e });
        gbc.writeMem(0xf9d3, { 0xc2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8f3d, gbc.sp());
        EXPECT(0x2113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xf9d3));
        // CB 4E 018B
        gbc.setState(0x80c8, 0x5ef7, 0xd70, 0x574d, 0xe343, 0xdd89, 0x0, 0x1);
        gbc.writeMem(0x80c8, { 0xcb, 0x4e });
        gbc.writeMem(0xdd89, { 0x25 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5ef7, gbc.sp());
        EXPECT(0x80ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c8));
        EXPECT(0x4e, gbc.readMem(0x80c9));
        EXPECT(0x25, gbc.readMem(0xdd89));
        // CB 4E 018C
        gbc.setState(0x132c, 0xc246, 0x85f0, 0xb658, 0xad73, 0xc389, 0x1, 0x1);
        gbc.writeMem(0x132c, { 0xcb, 0x4e });
        gbc.writeMem(0xc389, { 0xc3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc246, gbc.sp());
        EXPECT(0x132e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc389));
        // CB 4E 018D
        gbc.setState(0xe0af, 0x7c43, 0x81c0, 0xffc2, 0x7cec, 0x4557, 0x1, 0x0);
        gbc.writeMem(0x4557, { 0x3 });
        gbc.writeMem(0xe0af, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7c43, gbc.sp());
        EXPECT(0xe0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0af));
        EXPECT(0x4e, gbc.readMem(0xe0b0));
        // CB 4E 018E
        gbc.setState(0x7ddd, 0x8730, 0x5cd0, 0x9c23, 0xd990, 0x235e, 0x1, 0x1);
        gbc.writeMem(0x235e, { 0x8d });
        gbc.writeMem(0x7ddd, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8730, gbc.sp());
        EXPECT(0x7ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 018F
        gbc.setState(0x9354, 0xb15b, 0xbb90, 0xf12, 0xee1e, 0x6027, 0x0, 0x0);
        gbc.writeMem(0x6027, { 0x67 });
        gbc.writeMem(0x9354, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb15b, gbc.sp());
        EXPECT(0x9356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9354));
        EXPECT(0x4e, gbc.readMem(0x9355));
        // CB 4E 0190
        gbc.setState(0xc636, 0x2632, 0x8e00, 0xe448, 0x2916, 0x1d37, 0x0, 0x1);
        gbc.writeMem(0x1d37, { 0x1b });
        gbc.writeMem(0xc636, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2632, gbc.sp());
        EXPECT(0xc638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc636));
        EXPECT(0x4e, gbc.readMem(0xc637));
        // CB 4E 0191
        gbc.setState(0x719d, 0xc2e2, 0x6aa0, 0xcf6d, 0x88ba, 0x41da, 0x1, 0x0);
        gbc.writeMem(0x41da, { 0xe2 });
        gbc.writeMem(0x719d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc2e2, gbc.sp());
        EXPECT(0x719f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0192
        gbc.setState(0x6f1e, 0x19cd, 0x3a90, 0x518c, 0xb58, 0x561b, 0x0, 0x0);
        gbc.writeMem(0x561b, { 0xcb });
        gbc.writeMem(0x6f1e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x19cd, gbc.sp());
        EXPECT(0x6f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0193
        gbc.setState(0x5def, 0x7f33, 0x5ed0, 0x3089, 0x7937, 0x7f38, 0x1, 0x0);
        gbc.writeMem(0x5def, { 0xcb, 0x4e });
        gbc.writeMem(0x7f38, { 0x98 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7f33, gbc.sp());
        EXPECT(0x5df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0194
        gbc.setState(0x518f, 0x3b3c, 0x4de0, 0xc256, 0xbd91, 0xc936, 0x1, 0x1);
        gbc.writeMem(0x518f, { 0xcb, 0x4e });
        gbc.writeMem(0xc936, { 0xd7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3b3c, gbc.sp());
        EXPECT(0x5191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xc936));
        // CB 4E 0195
        gbc.setState(0x9259, 0xb433, 0xa700, 0xe9af, 0x105d, 0x35b4, 0x0, 0x1);
        gbc.writeMem(0x35b4, { 0xd9 });
        gbc.writeMem(0x9259, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb433, gbc.sp());
        EXPECT(0x925b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9259));
        EXPECT(0x4e, gbc.readMem(0x925a));
        // CB 4E 0196
        gbc.setState(0x1a63, 0x6ad7, 0x980, 0x2b53, 0x98b0, 0xfa55, 0x0, 0x0);
        gbc.writeMem(0x1a63, { 0xcb, 0x4e });
        gbc.writeMem(0xfa55, { 0x3e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6ad7, gbc.sp());
        EXPECT(0x1a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xfa55));
        // CB 4E 0197
        gbc.setState(0x9a36, 0x247e, 0x7b90, 0x18dc, 0x61e6, 0xc688, 0x0, 0x1);
        gbc.writeMem(0x9a36, { 0xcb, 0x4e });
        gbc.writeMem(0xc688, { 0x38 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x247e, gbc.sp());
        EXPECT(0x9a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a36));
        EXPECT(0x4e, gbc.readMem(0x9a37));
        EXPECT(0x38, gbc.readMem(0xc688));
        // CB 4E 0199
        gbc.setState(0x8d76, 0xc1ea, 0x4780, 0x5a4f, 0xd961, 0x59c5, 0x0, 0x1);
        gbc.writeMem(0x59c5, { 0xcc });
        gbc.writeMem(0x8d76, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc1ea, gbc.sp());
        EXPECT(0x8d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d76));
        EXPECT(0x4e, gbc.readMem(0x8d77));
        // CB 4E 019A
        gbc.setState(0x18ac, 0xaab4, 0x6810, 0x4906, 0x3014, 0xd82e, 0x0, 0x1);
        gbc.writeMem(0x18ac, { 0xcb, 0x4e });
        gbc.writeMem(0xd82e, { 0xea });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xaab4, gbc.sp());
        EXPECT(0x18ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xd82e));
        // CB 4E 019B
        gbc.setState(0x8fc9, 0xfee0, 0x9a40, 0x6ccd, 0x9dd2, 0x1420, 0x1, 0x1);
        gbc.writeMem(0x1420, { 0x9c });
        gbc.writeMem(0x8fc9, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfee0, gbc.sp());
        EXPECT(0x8fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc9));
        EXPECT(0x4e, gbc.readMem(0x8fca));
        // CB 4E 019C
        gbc.setState(0x93be, 0x7142, 0x93d0, 0x958f, 0x955f, 0x77f, 0x1, 0x1);
        gbc.writeMem(0x77f, { 0x9 });
        gbc.writeMem(0x93be, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7142, gbc.sp());
        EXPECT(0x93c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93be));
        EXPECT(0x4e, gbc.readMem(0x93bf));
        // CB 4E 019D
        gbc.setState(0x1d0c, 0xf356, 0x1e90, 0xad66, 0xc337, 0xc924, 0x1, 0x0);
        gbc.writeMem(0x1d0c, { 0xcb, 0x4e });
        gbc.writeMem(0xc924, { 0xb2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf356, gbc.sp());
        EXPECT(0x1d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc924));
        // CB 4E 019E
        gbc.setState(0xdbcb, 0x11a9, 0x2c80, 0xe239, 0x4b2a, 0xa39f, 0x1, 0x1);
        gbc.writeMem(0xa39f, { 0x82 });
        gbc.writeMem(0xdbcb, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x11a9, gbc.sp());
        EXPECT(0xdbcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa39f));
        EXPECT(0xcb, gbc.readMem(0xdbcb));
        EXPECT(0x4e, gbc.readMem(0xdbcc));
        // CB 4E 019F
        gbc.setState(0xe99, 0xe731, 0x75a0, 0x7ce4, 0xcc7a, 0x6a2c, 0x1, 0x0);
        gbc.writeMem(0xe99, { 0xcb, 0x4e });
        gbc.writeMem(0x6a2c, { 0x59 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe731, gbc.sp());
        EXPECT(0xe9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 01A0
        gbc.setState(0xbaff, 0xe78f, 0xf8e0, 0xa192, 0x3756, 0x3555, 0x1, 0x0);
        gbc.writeMem(0x3555, { 0xc5 });
        gbc.writeMem(0xbaff, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe78f, gbc.sp());
        EXPECT(0xbb01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaff));
        EXPECT(0x4e, gbc.readMem(0xbb00));
        // CB 4E 01A1
        gbc.setState(0x3003, 0xe476, 0xf380, 0xf326, 0xcd53, 0x471b, 0x0, 0x0);
        gbc.writeMem(0x3003, { 0xcb, 0x4e });
        gbc.writeMem(0x471b, { 0x58 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe476, gbc.sp());
        EXPECT(0x3005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 01A2
        gbc.setState(0xa399, 0xa4d5, 0xbfe0, 0x8507, 0x3850, 0xb4af, 0x0, 0x0);
        gbc.writeMem(0xa399, { 0xcb, 0x4e });
        gbc.writeMem(0xb4af, { 0x19 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa4d5, gbc.sp());
        EXPECT(0xa39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa399));
        EXPECT(0x4e, gbc.readMem(0xa39a));
        EXPECT(0x19, gbc.readMem(0xb4af));
        // CB 4E 01A3
        gbc.setState(0xbaf5, 0x8d80, 0xd3c0, 0xf1dd, 0xc649, 0x9433, 0x0, 0x0);
        gbc.writeMem(0x9433, { 0xd4 });
        gbc.writeMem(0xbaf5, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8d80, gbc.sp());
        EXPECT(0xbaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9433));
        EXPECT(0xcb, gbc.readMem(0xbaf5));
        EXPECT(0x4e, gbc.readMem(0xbaf6));
        // CB 4E 01A4
        gbc.setState(0x8776, 0x332, 0x14f0, 0x99f7, 0x1d03, 0xb96d, 0x1, 0x1);
        gbc.writeMem(0x8776, { 0xcb, 0x4e });
        gbc.writeMem(0xb96d, { 0x8a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x332, gbc.sp());
        EXPECT(0x8778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8776));
        EXPECT(0x4e, gbc.readMem(0x8777));
        EXPECT(0x8a, gbc.readMem(0xb96d));
        // CB 4E 01A6
        gbc.setState(0xcd6b, 0x1a9d, 0xc2c0, 0xf801, 0xf2f7, 0x1cfd, 0x1, 0x1);
        gbc.writeMem(0x1cfd, { 0x33 });
        gbc.writeMem(0xcd6b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1a9d, gbc.sp());
        EXPECT(0xcd6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd6b));
        EXPECT(0x4e, gbc.readMem(0xcd6c));
        // CB 4E 01A7
        gbc.setState(0xb5ff, 0x3375, 0x21f0, 0xc817, 0x9127, 0xc242, 0x1, 0x0);
        gbc.writeMem(0xb5ff, { 0xcb, 0x4e });
        gbc.writeMem(0xc242, { 0xab });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3375, gbc.sp());
        EXPECT(0xb601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ff));
        EXPECT(0x4e, gbc.readMem(0xb600));
        EXPECT(0xab, gbc.readMem(0xc242));
        // CB 4E 01A8
        gbc.setState(0x3866, 0xe7bd, 0x72c0, 0x9233, 0xd75a, 0x5937, 0x0, 0x0);
        gbc.writeMem(0x3866, { 0xcb, 0x4e });
        gbc.writeMem(0x5937, { 0xbf });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe7bd, gbc.sp());
        EXPECT(0x3868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 01A9
        gbc.setState(0x951a, 0x9bed, 0xcba0, 0x62c2, 0x42cf, 0x7bb1, 0x1, 0x1);
        gbc.writeMem(0x7bb1, { 0x79 });
        gbc.writeMem(0x951a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9bed, gbc.sp());
        EXPECT(0x951c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951a));
        EXPECT(0x4e, gbc.readMem(0x951b));
        // CB 4E 01AA
        gbc.setState(0x4416, 0xf7ca, 0x8990, 0x4ab9, 0xf46, 0x8e7e, 0x1, 0x0);
        gbc.writeMem(0x4416, { 0xcb, 0x4e });
        gbc.writeMem(0x8e7e, { 0x2f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf7ca, gbc.sp());
        EXPECT(0x4418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8e7e));
        // CB 4E 01AB
        gbc.setState(0x8df0, 0x3dc9, 0xafa0, 0xcb81, 0x8c1f, 0x4f0a, 0x1, 0x0);
        gbc.writeMem(0x4f0a, { 0x2b });
        gbc.writeMem(0x8df0, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3dc9, gbc.sp());
        EXPECT(0x8df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df0));
        EXPECT(0x4e, gbc.readMem(0x8df1));
        // CB 4E 01AC
        gbc.setState(0x1a42, 0xca43, 0xf320, 0x831c, 0xc2cc, 0x4e46, 0x1, 0x1);
        gbc.writeMem(0x1a42, { 0xcb, 0x4e });
        gbc.writeMem(0x4e46, { 0xbf });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xca43, gbc.sp());
        EXPECT(0x1a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 01AD
        gbc.setState(0xec59, 0x5b17, 0x5c70, 0xf17f, 0x4d65, 0x636c, 0x0, 0x1);
        gbc.writeMem(0x636c, { 0xb });
        gbc.writeMem(0xec59, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5b17, gbc.sp());
        EXPECT(0xec5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec59));
        EXPECT(0x4e, gbc.readMem(0xec5a));
        // CB 4E 01AF
        gbc.setState(0xc189, 0x4df2, 0xfc60, 0x80a1, 0xf0c7, 0x1e94, 0x1, 0x0);
        gbc.writeMem(0x1e94, { 0x34 });
        gbc.writeMem(0xc189, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4df2, gbc.sp());
        EXPECT(0xc18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc189));
        EXPECT(0x4e, gbc.readMem(0xc18a));
        // CB 4E 01B0
        gbc.setState(0x2d40, 0x9c8, 0x2e30, 0xd055, 0x2f6, 0xe266, 0x0, 0x0);
        gbc.writeMem(0x2d40, { 0xcb, 0x4e });
        gbc.writeMem(0xe266, { 0xcd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9c8, gbc.sp());
        EXPECT(0x2d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xe266));
        // CB 4E 01B1
        gbc.setState(0xecdf, 0x6b61, 0x2130, 0x2404, 0x6181, 0xb793, 0x1, 0x1);
        gbc.writeMem(0xb793, { 0xe });
        gbc.writeMem(0xecdf, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6b61, gbc.sp());
        EXPECT(0xece1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb793));
        EXPECT(0xcb, gbc.readMem(0xecdf));
        EXPECT(0x4e, gbc.readMem(0xece0));
        // CB 4E 01B2
        gbc.setState(0x9d62, 0x79e9, 0x4260, 0x56bd, 0xf0f3, 0x30c3, 0x0, 0x0);
        gbc.writeMem(0x30c3, { 0xa5 });
        gbc.writeMem(0x9d62, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x79e9, gbc.sp());
        EXPECT(0x9d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d62));
        EXPECT(0x4e, gbc.readMem(0x9d63));
        // CB 4E 01B3
        gbc.setState(0x3783, 0x84dd, 0x3d30, 0x2bdd, 0x832e, 0x2f7b, 0x1, 0x1);
        gbc.writeMem(0x2f7b, { 0xb1 });
        gbc.writeMem(0x3783, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x84dd, gbc.sp());
        EXPECT(0x3785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 01B4
        gbc.setState(0xeb82, 0x2808, 0x86d0, 0xc23b, 0x9976, 0x2356, 0x0, 0x1);
        gbc.writeMem(0x2356, { 0xd6 });
        gbc.writeMem(0xeb82, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2808, gbc.sp());
        EXPECT(0xeb84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb82));
        EXPECT(0x4e, gbc.readMem(0xeb83));
        // CB 4E 01B5
        gbc.setState(0xd789, 0x826c, 0xb460, 0xd6c, 0x94aa, 0x2bbf, 0x0, 0x1);
        gbc.writeMem(0x2bbf, { 0xd6 });
        gbc.writeMem(0xd789, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x826c, gbc.sp());
        EXPECT(0xd78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd789));
        EXPECT(0x4e, gbc.readMem(0xd78a));
        // CB 4E 01B6
        gbc.setState(0xfde, 0x50a2, 0x61b0, 0x4acf, 0xb31d, 0xd3d9, 0x1, 0x1);
        gbc.writeMem(0xfde, { 0xcb, 0x4e });
        gbc.writeMem(0xd3d9, { 0x9b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x50a2, gbc.sp());
        EXPECT(0xfe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd3d9));
        // CB 4E 01B7
        gbc.setState(0xb65b, 0xd2bd, 0xedf0, 0x6e65, 0x2436, 0x5cfd, 0x1, 0x0);
        gbc.writeMem(0x5cfd, { 0xc6 });
        gbc.writeMem(0xb65b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd2bd, gbc.sp());
        EXPECT(0xb65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb65b));
        EXPECT(0x4e, gbc.readMem(0xb65c));
        // CB 4E 01B8
        gbc.setState(0xd63b, 0x4895, 0x4f30, 0xd9b0, 0x6878, 0x6108, 0x0, 0x0);
        gbc.writeMem(0x6108, { 0x5c });
        gbc.writeMem(0xd63b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4895, gbc.sp());
        EXPECT(0xd63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd63b));
        EXPECT(0x4e, gbc.readMem(0xd63c));
        // CB 4E 01B9
        gbc.setState(0xddc2, 0xdc2f, 0x8e20, 0xf365, 0x69c3, 0xf9a5, 0x0, 0x0);
        gbc.writeMem(0xddc2, { 0xcb, 0x4e });
        gbc.writeMem(0xf9a5, { 0x6d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdc2f, gbc.sp());
        EXPECT(0xddc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc2));
        EXPECT(0x4e, gbc.readMem(0xddc3));
        EXPECT(0x6d, gbc.readMem(0xf9a5));
        // CB 4E 01BA
        gbc.setState(0xadf3, 0xf02c, 0x3500, 0x6696, 0x6c3a, 0x39a1, 0x0, 0x0);
        gbc.writeMem(0x39a1, { 0xdc });
        gbc.writeMem(0xadf3, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf02c, gbc.sp());
        EXPECT(0xadf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf3));
        EXPECT(0x4e, gbc.readMem(0xadf4));
        // CB 4E 01BB
        gbc.setState(0x2d16, 0xf8bd, 0x6960, 0x54fd, 0xbdd9, 0xe958, 0x0, 0x0);
        gbc.writeMem(0x2d16, { 0xcb, 0x4e });
        gbc.writeMem(0xe958, { 0x54 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf8bd, gbc.sp());
        EXPECT(0x2d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xe958));
        // CB 4E 01BC
        gbc.setState(0xb967, 0xde03, 0xf440, 0xc3b9, 0xe6f6, 0x8988, 0x0, 0x0);
        gbc.writeMem(0x8988, { 0xf0 });
        gbc.writeMem(0xb967, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xde03, gbc.sp());
        EXPECT(0xb969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8988));
        EXPECT(0xcb, gbc.readMem(0xb967));
        EXPECT(0x4e, gbc.readMem(0xb968));
        // CB 4E 01BD
        gbc.setState(0xbbe8, 0xebd1, 0x29c0, 0xc1ed, 0xe514, 0x7a92, 0x1, 0x0);
        gbc.writeMem(0x7a92, { 0xf1 });
        gbc.writeMem(0xbbe8, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xebd1, gbc.sp());
        EXPECT(0xbbea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe8));
        EXPECT(0x4e, gbc.readMem(0xbbe9));
        // CB 4E 01BE
        gbc.setState(0x8db3, 0xc881, 0x690, 0x956d, 0x87d0, 0x252f, 0x1, 0x0);
        gbc.writeMem(0x252f, { 0x89 });
        gbc.writeMem(0x8db3, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc881, gbc.sp());
        EXPECT(0x8db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db3));
        EXPECT(0x4e, gbc.readMem(0x8db4));
        // CB 4E 01BF
        gbc.setState(0x329e, 0x52a6, 0x6cd0, 0xd8e3, 0x5ca4, 0x1ee1, 0x0, 0x0);
        gbc.writeMem(0x1ee1, { 0x1d });
        gbc.writeMem(0x329e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x52a6, gbc.sp());
        EXPECT(0x32a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 01C0
        gbc.setState(0xb221, 0x2bf9, 0x8810, 0x8549, 0x8e0f, 0xbf67, 0x0, 0x0);
        gbc.writeMem(0xb221, { 0xcb, 0x4e });
        gbc.writeMem(0xbf67, { 0xdf });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2bf9, gbc.sp());
        EXPECT(0xb223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb221));
        EXPECT(0x4e, gbc.readMem(0xb222));
        EXPECT(0xdf, gbc.readMem(0xbf67));
        // CB 4E 01C1
        gbc.setState(0xd6e, 0xb1c9, 0x92d0, 0x144f, 0x2a48, 0x774c, 0x1, 0x1);
        gbc.writeMem(0xd6e, { 0xcb, 0x4e });
        gbc.writeMem(0x774c, { 0x50 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb1c9, gbc.sp());
        EXPECT(0xd70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 01C2
        gbc.setState(0xc5d8, 0xad29, 0x9960, 0x6e6b, 0x43b3, 0x59a9, 0x0, 0x0);
        gbc.writeMem(0x59a9, { 0xfd });
        gbc.writeMem(0xc5d8, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xad29, gbc.sp());
        EXPECT(0xc5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d8));
        EXPECT(0x4e, gbc.readMem(0xc5d9));
        // CB 4E 01C3
        gbc.setState(0xc21, 0x6118, 0xad0, 0xd617, 0xd38, 0x4c83, 0x1, 0x1);
        gbc.writeMem(0xc21, { 0xcb, 0x4e });
        gbc.writeMem(0x4c83, { 0xc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6118, gbc.sp());
        EXPECT(0xc23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 01C5
        gbc.setState(0xbe3, 0x8cb, 0x4cb0, 0xa3bd, 0xb285, 0xf06b, 0x1, 0x0);
        gbc.writeMem(0xbe3, { 0xcb, 0x4e });
        gbc.writeMem(0xf06b, { 0x59 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8cb, gbc.sp());
        EXPECT(0xbe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xf06b));
        // CB 4E 01C6
        gbc.setState(0xef16, 0xe71, 0x7240, 0x1e17, 0xb856, 0xd14f, 0x1, 0x0);
        gbc.writeMem(0xd14f, { 0x73 });
        gbc.writeMem(0xef16, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe71, gbc.sp());
        EXPECT(0xef18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd14f));
        EXPECT(0xcb, gbc.readMem(0xef16));
        EXPECT(0x4e, gbc.readMem(0xef17));
        // CB 4E 01C7
        gbc.setState(0x7f86, 0xf57d, 0x1050, 0x7ee3, 0x5b65, 0xac8d, 0x1, 0x0);
        gbc.writeMem(0x7f86, { 0xcb, 0x4e });
        gbc.writeMem(0xac8d, { 0xaa });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf57d, gbc.sp());
        EXPECT(0x7f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xac8d));
        // CB 4E 01C8
        gbc.setState(0x790e, 0xd503, 0xaa30, 0xa11, 0x7878, 0x761e, 0x0, 0x1);
        gbc.writeMem(0x761e, { 0x82 });
        gbc.writeMem(0x790e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd503, gbc.sp());
        EXPECT(0x7910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 01C9
        gbc.setState(0x2416, 0xdba1, 0x11b0, 0xb14e, 0x1d7c, 0xffee, 0x1, 0x0);
        gbc.writeMem(0x2416, { 0xcb, 0x4e });
        gbc.writeMem(0xffee, { 0xca });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdba1, gbc.sp());
        EXPECT(0x2418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xffee));
        // CB 4E 01CA
        gbc.setState(0x2f3d, 0xa349, 0xc970, 0x13f, 0x7084, 0x8a23, 0x1, 0x1);
        gbc.writeMem(0x2f3d, { 0xcb, 0x4e });
        gbc.writeMem(0x8a23, { 0xad });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa349, gbc.sp());
        EXPECT(0x2f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x8a23));
        // CB 4E 01CB
        gbc.setState(0xb228, 0xce85, 0x2ee0, 0xddcb, 0xb0b7, 0x7e37, 0x1, 0x1);
        gbc.writeMem(0x7e37, { 0xc2 });
        gbc.writeMem(0xb228, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xce85, gbc.sp());
        EXPECT(0xb22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb228));
        EXPECT(0x4e, gbc.readMem(0xb229));
        // CB 4E 01CC
        gbc.setState(0xd3b5, 0xd0f3, 0x5e80, 0x789f, 0x897, 0xfebd, 0x1, 0x1);
        gbc.writeMem(0xd3b5, { 0xcb, 0x4e });
        gbc.writeMem(0xfebd, { 0x63 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd0f3, gbc.sp());
        EXPECT(0xd3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b5));
        EXPECT(0x4e, gbc.readMem(0xd3b6));
        EXPECT(0x63, gbc.readMem(0xfebd));
        // CB 4E 01CD
        gbc.setState(0xb1a9, 0x5d14, 0xc800, 0x835a, 0xcb, 0x69dc, 0x0, 0x1);
        gbc.writeMem(0x69dc, { 0x90 });
        gbc.writeMem(0xb1a9, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5d14, gbc.sp());
        EXPECT(0xb1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a9));
        EXPECT(0x4e, gbc.readMem(0xb1aa));
        // CB 4E 01CE
        gbc.setState(0x5456, 0xbac5, 0x6c70, 0xd240, 0x6a5f, 0xfa2f, 0x1, 0x0);
        gbc.writeMem(0x5456, { 0xcb, 0x4e });
        gbc.writeMem(0xfa2f, { 0xe2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbac5, gbc.sp());
        EXPECT(0x5458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xfa2f));
        // CB 4E 01CF
        gbc.setState(0x9b05, 0x8f6, 0xd6f0, 0x6927, 0x96aa, 0x8b09, 0x0, 0x1);
        gbc.writeMem(0x8b09, { 0xdb });
        gbc.writeMem(0x9b05, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8f6, gbc.sp());
        EXPECT(0x9b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x8b09));
        EXPECT(0xcb, gbc.readMem(0x9b05));
        EXPECT(0x4e, gbc.readMem(0x9b06));
        // CB 4E 01D0
        gbc.setState(0xdec1, 0xd743, 0x8230, 0x78eb, 0x67d, 0xb2c8, 0x0, 0x0);
        gbc.writeMem(0xb2c8, { 0x7a });
        gbc.writeMem(0xdec1, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd743, gbc.sp());
        EXPECT(0xdec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb2c8));
        EXPECT(0xcb, gbc.readMem(0xdec1));
        EXPECT(0x4e, gbc.readMem(0xdec2));
        // CB 4E 01D1
        gbc.setState(0x33a3, 0x192b, 0x6190, 0x4cd1, 0x84fd, 0x6545, 0x1, 0x1);
        gbc.writeMem(0x33a3, { 0xcb, 0x4e });
        gbc.writeMem(0x6545, { 0x4c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x192b, gbc.sp());
        EXPECT(0x33a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 01D2
        gbc.setState(0x95ab, 0x3d74, 0xe400, 0x7237, 0xb3ca, 0xbf2, 0x0, 0x1);
        gbc.writeMem(0xbf2, { 0x18 });
        gbc.writeMem(0x95ab, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3d74, gbc.sp());
        EXPECT(0x95ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ab));
        EXPECT(0x4e, gbc.readMem(0x95ac));
        // CB 4E 01D3
        gbc.setState(0xb102, 0xb03b, 0x9c60, 0x4d75, 0x2fbe, 0xf49d, 0x0, 0x1);
        gbc.writeMem(0xb102, { 0xcb, 0x4e });
        gbc.writeMem(0xf49d, { 0x1e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb03b, gbc.sp());
        EXPECT(0xb104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb102));
        EXPECT(0x4e, gbc.readMem(0xb103));
        EXPECT(0x1e, gbc.readMem(0xf49d));
        // CB 4E 01D6
        gbc.setState(0x77e, 0x7557, 0x8ec0, 0x2fd6, 0xf03d, 0x5c37, 0x0, 0x1);
        gbc.writeMem(0x77e, { 0xcb, 0x4e });
        gbc.writeMem(0x5c37, { 0x15 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7557, gbc.sp());
        EXPECT(0x780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 01D7
        gbc.setState(0xbc9e, 0x30a0, 0x2ef0, 0x8e14, 0x8840, 0xdf5, 0x1, 0x0);
        gbc.writeMem(0xdf5, { 0x13 });
        gbc.writeMem(0xbc9e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x30a0, gbc.sp());
        EXPECT(0xbca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9e));
        EXPECT(0x4e, gbc.readMem(0xbc9f));
        // CB 4E 01D8
        gbc.setState(0xde86, 0x25bd, 0x5330, 0x23db, 0xd971, 0xd305, 0x1, 0x1);
        gbc.writeMem(0xd305, { 0xa7 });
        gbc.writeMem(0xde86, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x25bd, gbc.sp());
        EXPECT(0xde88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd305));
        EXPECT(0xcb, gbc.readMem(0xde86));
        EXPECT(0x4e, gbc.readMem(0xde87));
        // CB 4E 01D9
        gbc.setState(0x4ae3, 0xaad1, 0xc400, 0xd6a5, 0x836f, 0x1ff6, 0x1, 0x1);
        gbc.writeMem(0x1ff6, { 0x35 });
        gbc.writeMem(0x4ae3, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xaad1, gbc.sp());
        EXPECT(0x4ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 01DA
        gbc.setState(0xa386, 0xc0fe, 0xbbf0, 0x5765, 0x6b47, 0x127a, 0x0, 0x1);
        gbc.writeMem(0x127a, { 0x50 });
        gbc.writeMem(0xa386, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc0fe, gbc.sp());
        EXPECT(0xa388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa386));
        EXPECT(0x4e, gbc.readMem(0xa387));
        // CB 4E 01DB
        gbc.setState(0x807c, 0x67fa, 0x38a0, 0x4d9f, 0x95c0, 0xa40a, 0x0, 0x0);
        gbc.writeMem(0x807c, { 0xcb, 0x4e });
        gbc.writeMem(0xa40a, { 0xee });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x67fa, gbc.sp());
        EXPECT(0x807e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807c));
        EXPECT(0x4e, gbc.readMem(0x807d));
        EXPECT(0xee, gbc.readMem(0xa40a));
        // CB 4E 01DC
        gbc.setState(0x892f, 0x5ee8, 0xe390, 0xd493, 0x66fc, 0xd8d5, 0x1, 0x0);
        gbc.writeMem(0x892f, { 0xcb, 0x4e });
        gbc.writeMem(0xd8d5, { 0xde });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5ee8, gbc.sp());
        EXPECT(0x8931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x892f));
        EXPECT(0x4e, gbc.readMem(0x8930));
        EXPECT(0xde, gbc.readMem(0xd8d5));
        // CB 4E 01DD
        gbc.setState(0x39df, 0x6aa4, 0x5f10, 0x87d, 0xe8d8, 0x1205, 0x0, 0x1);
        gbc.writeMem(0x1205, { 0x69 });
        gbc.writeMem(0x39df, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6aa4, gbc.sp());
        EXPECT(0x39e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 01DE
        gbc.setState(0x840b, 0xab6c, 0x3b60, 0x5721, 0x8f35, 0x7f0b, 0x0, 0x1);
        gbc.writeMem(0x7f0b, { 0xe9 });
        gbc.writeMem(0x840b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xab6c, gbc.sp());
        EXPECT(0x840d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840b));
        EXPECT(0x4e, gbc.readMem(0x840c));
        // CB 4E 01DF
        gbc.setState(0x6a08, 0x4efd, 0x4760, 0x2007, 0x55a8, 0x3784, 0x1, 0x0);
        gbc.writeMem(0x3784, { 0x33 });
        gbc.writeMem(0x6a08, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4efd, gbc.sp());
        EXPECT(0x6a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 01E0
        gbc.setState(0x1614, 0xe7c, 0xca60, 0x2998, 0xa6bb, 0x2b35, 0x0, 0x0);
        gbc.writeMem(0x1614, { 0xcb, 0x4e });
        gbc.writeMem(0x2b35, { 0x2a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe7c, gbc.sp());
        EXPECT(0x1616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 01E1
        gbc.setState(0xcf16, 0x21c6, 0x36f0, 0xeacf, 0xa828, 0x10c8, 0x0, 0x1);
        gbc.writeMem(0x10c8, { 0xae });
        gbc.writeMem(0xcf16, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x21c6, gbc.sp());
        EXPECT(0xcf18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf16));
        EXPECT(0x4e, gbc.readMem(0xcf17));
        // CB 4E 01E3
        gbc.setState(0xc018, 0x1b1f, 0x1c90, 0x39df, 0x6390, 0x3a70, 0x0, 0x0);
        gbc.writeMem(0x3a70, { 0x8f });
        gbc.writeMem(0xc018, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1b1f, gbc.sp());
        EXPECT(0xc01a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc018));
        EXPECT(0x4e, gbc.readMem(0xc019));
        // CB 4E 01E4
        gbc.setState(0x57a3, 0x41ff, 0xf490, 0xc754, 0x3092, 0x260a, 0x0, 0x0);
        gbc.writeMem(0x260a, { 0xd2 });
        gbc.writeMem(0x57a3, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x41ff, gbc.sp());
        EXPECT(0x57a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 01E5
        gbc.setState(0xd4a7, 0x71f, 0xdf60, 0xe5f7, 0x8622, 0x69c, 0x1, 0x0);
        gbc.writeMem(0x69c, { 0x6a });
        gbc.writeMem(0xd4a7, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x71f, gbc.sp());
        EXPECT(0xd4a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a7));
        EXPECT(0x4e, gbc.readMem(0xd4a8));
        // CB 4E 01E6
        gbc.setState(0x5074, 0x382a, 0xa700, 0x6c98, 0x2486, 0x3385, 0x0, 0x1);
        gbc.writeMem(0x3385, { 0xa5 });
        gbc.writeMem(0x5074, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x382a, gbc.sp());
        EXPECT(0x5076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 01E7
        gbc.setState(0xae1c, 0xf3eb, 0x81d0, 0xeb39, 0xc40d, 0xa0ba, 0x1, 0x1);
        gbc.writeMem(0xa0ba, { 0xc5 });
        gbc.writeMem(0xae1c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf3eb, gbc.sp());
        EXPECT(0xae1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa0ba));
        EXPECT(0xcb, gbc.readMem(0xae1c));
        EXPECT(0x4e, gbc.readMem(0xae1d));
        // CB 4E 01E8
        gbc.setState(0x266f, 0xb8f9, 0x1070, 0x4bef, 0x9c38, 0x6e06, 0x0, 0x1);
        gbc.writeMem(0x266f, { 0xcb, 0x4e });
        gbc.writeMem(0x6e06, { 0xab });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb8f9, gbc.sp());
        EXPECT(0x2671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 01E9
        gbc.setState(0xbfec, 0x58e0, 0x2eb0, 0xedc1, 0x81c0, 0x9167, 0x1, 0x1);
        gbc.writeMem(0x9167, { 0x39 });
        gbc.writeMem(0xbfec, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x58e0, gbc.sp());
        EXPECT(0xbfee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x9167));
        EXPECT(0xcb, gbc.readMem(0xbfec));
        EXPECT(0x4e, gbc.readMem(0xbfed));
        // CB 4E 01EA
        gbc.setState(0xbace, 0xea0b, 0x780, 0x812d, 0x41f4, 0x2ebc, 0x0, 0x1);
        gbc.writeMem(0x2ebc, { 0xb4 });
        gbc.writeMem(0xbace, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xea0b, gbc.sp());
        EXPECT(0xbad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbace));
        EXPECT(0x4e, gbc.readMem(0xbacf));
        // CB 4E 01EB
        gbc.setState(0xd5b7, 0xe5d9, 0x8760, 0xef3b, 0x7872, 0x52b1, 0x0, 0x0);
        gbc.writeMem(0x52b1, { 0x22 });
        gbc.writeMem(0xd5b7, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe5d9, gbc.sp());
        EXPECT(0xd5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b7));
        EXPECT(0x4e, gbc.readMem(0xd5b8));
        // CB 4E 01EC
        gbc.setState(0x2ca7, 0x2ccb, 0x4610, 0x864, 0xf937, 0xa39c, 0x0, 0x1);
        gbc.writeMem(0x2ca7, { 0xcb, 0x4e });
        gbc.writeMem(0xa39c, { 0x73 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2ccb, gbc.sp());
        EXPECT(0x2ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa39c));
        // CB 4E 01ED
        gbc.setState(0xd6d7, 0x7ebf, 0xd150, 0x228a, 0xfbc0, 0x3845, 0x0, 0x0);
        gbc.writeMem(0x3845, { 0x65 });
        gbc.writeMem(0xd6d7, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7ebf, gbc.sp());
        EXPECT(0xd6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d7));
        EXPECT(0x4e, gbc.readMem(0xd6d8));
        // CB 4E 01EE
        gbc.setState(0xa97e, 0xb465, 0x58c0, 0x6717, 0x6be5, 0xfc72, 0x0, 0x0);
        gbc.writeMem(0xa97e, { 0xcb, 0x4e });
        gbc.writeMem(0xfc72, { 0x1d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb465, gbc.sp());
        EXPECT(0xa980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97e));
        EXPECT(0x4e, gbc.readMem(0xa97f));
        EXPECT(0x1d, gbc.readMem(0xfc72));
        // CB 4E 01EF
        gbc.setState(0x9375, 0xcd78, 0xee60, 0x5c9a, 0x4552, 0x690e, 0x1, 0x0);
        gbc.writeMem(0x690e, { 0x38 });
        gbc.writeMem(0x9375, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcd78, gbc.sp());
        EXPECT(0x9377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9375));
        EXPECT(0x4e, gbc.readMem(0x9376));
        // CB 4E 01F0
        gbc.setState(0x8f7, 0xad40, 0x1020, 0x97f1, 0xd6f9, 0x5b79, 0x0, 0x0);
        gbc.writeMem(0x8f7, { 0xcb, 0x4e });
        gbc.writeMem(0x5b79, { 0xda });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xad40, gbc.sp());
        EXPECT(0x8f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 01F1
        gbc.setState(0x4e3c, 0x188f, 0x3030, 0x2896, 0x43f0, 0xe3fe, 0x0, 0x0);
        gbc.writeMem(0x4e3c, { 0xcb, 0x4e });
        gbc.writeMem(0xe3fe, { 0xd4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x188f, gbc.sp());
        EXPECT(0x4e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe3fe));
        // CB 4E 01F2
        gbc.setState(0x299b, 0x7d80, 0x7a70, 0x1179, 0xfcd4, 0xe888, 0x1, 0x0);
        gbc.writeMem(0x299b, { 0xcb, 0x4e });
        gbc.writeMem(0xe888, { 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7d80, gbc.sp());
        EXPECT(0x299d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe888));
        // CB 4E 01F3
        gbc.setState(0x84a2, 0x19b6, 0xa310, 0x68f9, 0xa5a4, 0xd6e6, 0x1, 0x1);
        gbc.writeMem(0x84a2, { 0xcb, 0x4e });
        gbc.writeMem(0xd6e6, { 0x23 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x19b6, gbc.sp());
        EXPECT(0x84a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a2));
        EXPECT(0x4e, gbc.readMem(0x84a3));
        EXPECT(0x23, gbc.readMem(0xd6e6));
        // CB 4E 01F4
        gbc.setState(0x7bed, 0x5dd0, 0xa5c0, 0x564e, 0x38ea, 0x467f, 0x0, 0x0);
        gbc.writeMem(0x467f, { 0x8a });
        gbc.writeMem(0x7bed, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5dd0, gbc.sp());
        EXPECT(0x7bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 01F5
        gbc.setState(0x410a, 0x475e, 0xf4f0, 0xb06b, 0xe97, 0x6206, 0x1, 0x1);
        gbc.writeMem(0x410a, { 0xcb, 0x4e });
        gbc.writeMem(0x6206, { 0xff });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x475e, gbc.sp());
        EXPECT(0x410c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 01F7
        gbc.setState(0xb0de, 0x15bb, 0x860, 0x2f3a, 0x399b, 0x6d0, 0x0, 0x1);
        gbc.writeMem(0x6d0, { 0x1e });
        gbc.writeMem(0xb0de, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x15bb, gbc.sp());
        EXPECT(0xb0e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0de));
        EXPECT(0x4e, gbc.readMem(0xb0df));
        // CB 4E 01F8
        gbc.setState(0xba9b, 0x26aa, 0x7710, 0xf6ad, 0x512b, 0x50e4, 0x0, 0x1);
        gbc.writeMem(0x50e4, { 0xe8 });
        gbc.writeMem(0xba9b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x26aa, gbc.sp());
        EXPECT(0xba9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba9b));
        EXPECT(0x4e, gbc.readMem(0xba9c));
        // CB 4E 01F9
        gbc.setState(0xc695, 0xfdd0, 0xe790, 0x2c4, 0x696c, 0xf92a, 0x0, 0x1);
        gbc.writeMem(0xc695, { 0xcb, 0x4e });
        gbc.writeMem(0xf92a, { 0x94 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfdd0, gbc.sp());
        EXPECT(0xc697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc695));
        EXPECT(0x4e, gbc.readMem(0xc696));
        EXPECT(0x94, gbc.readMem(0xf92a));
        // CB 4E 01FA
        gbc.setState(0x320a, 0x5a47, 0x43c0, 0x3a8e, 0x1ebc, 0xc909, 0x0, 0x1);
        gbc.writeMem(0x320a, { 0xcb, 0x4e });
        gbc.writeMem(0xc909, { 0x3a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5a47, gbc.sp());
        EXPECT(0x320c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xc909));
        // CB 4E 01FB
        gbc.setState(0x5902, 0xcab, 0xedb0, 0x5d85, 0x941b, 0x2bb8, 0x1, 0x0);
        gbc.writeMem(0x2bb8, { 0x8d });
        gbc.writeMem(0x5902, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcab, gbc.sp());
        EXPECT(0x5904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 01FC
        gbc.setState(0x813f, 0x7c3f, 0x6db0, 0x54cd, 0xfc99, 0x778f, 0x1, 0x0);
        gbc.writeMem(0x778f, { 0x5b });
        gbc.writeMem(0x813f, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7c3f, gbc.sp());
        EXPECT(0x8141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813f));
        EXPECT(0x4e, gbc.readMem(0x8140));
        // CB 4E 01FD
        gbc.setState(0xdf4, 0x9551, 0xec30, 0x3b6f, 0x377d, 0xe1d1, 0x0, 0x1);
        gbc.writeMem(0xdf4, { 0xcb, 0x4e });
        gbc.writeMem(0xe1d1, { 0xe });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9551, gbc.sp());
        EXPECT(0xdf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe1d1));
        // CB 4E 01FE
        gbc.setState(0x6fb3, 0xe242, 0x6f90, 0x4756, 0x4850, 0x5748, 0x1, 0x1);
        gbc.writeMem(0x5748, { 0x50 });
        gbc.writeMem(0x6fb3, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe242, gbc.sp());
        EXPECT(0x6fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 01FF
        gbc.setState(0xbf39, 0xa9f5, 0xc1b0, 0x3c38, 0x1e96, 0xaf88, 0x1, 0x0);
        gbc.writeMem(0xaf88, { 0x41 });
        gbc.writeMem(0xbf39, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa9f5, gbc.sp());
        EXPECT(0xbf3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xaf88));
        EXPECT(0xcb, gbc.readMem(0xbf39));
        EXPECT(0x4e, gbc.readMem(0xbf3a));
        // CB 4E 0200
        gbc.setState(0xb4c6, 0xb561, 0xd9b0, 0x809, 0xb0ab, 0xd203, 0x1, 0x1);
        gbc.writeMem(0xb4c6, { 0xcb, 0x4e });
        gbc.writeMem(0xd203, { 0x6b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb561, gbc.sp());
        EXPECT(0xb4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c6));
        EXPECT(0x4e, gbc.readMem(0xb4c7));
        EXPECT(0x6b, gbc.readMem(0xd203));
        // CB 4E 0201
        gbc.setState(0x2e7d, 0x2643, 0x2350, 0x9272, 0x9853, 0xf93c, 0x0, 0x1);
        gbc.writeMem(0x2e7d, { 0xcb, 0x4e });
        gbc.writeMem(0xf93c, { 0x4a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2643, gbc.sp());
        EXPECT(0x2e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xf93c));
        // CB 4E 0202
        gbc.setState(0x3f28, 0xa8dc, 0xdee0, 0xba35, 0xa968, 0x72a1, 0x1, 0x0);
        gbc.writeMem(0x3f28, { 0xcb, 0x4e });
        gbc.writeMem(0x72a1, { 0xf9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa8dc, gbc.sp());
        EXPECT(0x3f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0204
        gbc.setState(0x198, 0x1bcd, 0xb730, 0xd2eb, 0x2b13, 0xef42, 0x1, 0x0);
        gbc.writeMem(0x198, { 0xcb, 0x4e });
        gbc.writeMem(0xef42, { 0x79 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1bcd, gbc.sp());
        EXPECT(0x19a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xef42));
        // CB 4E 0205
        gbc.setState(0xebe4, 0x7588, 0x5140, 0xd2fc, 0xcd2a, 0x2808, 0x1, 0x1);
        gbc.writeMem(0x2808, { 0xf8 });
        gbc.writeMem(0xebe4, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7588, gbc.sp());
        EXPECT(0xebe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe4));
        EXPECT(0x4e, gbc.readMem(0xebe5));
        // CB 4E 0206
        gbc.setState(0x832c, 0x335e, 0x3310, 0x8b5c, 0xb33f, 0xfb05, 0x1, 0x1);
        gbc.writeMem(0x832c, { 0xcb, 0x4e });
        gbc.writeMem(0xfb05, { 0xe3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x335e, gbc.sp());
        EXPECT(0x832e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x832c));
        EXPECT(0x4e, gbc.readMem(0x832d));
        EXPECT(0xe3, gbc.readMem(0xfb05));
        // CB 4E 0207
        gbc.setState(0x885c, 0x660e, 0x3180, 0xa6c1, 0x1042, 0x6e91, 0x1, 0x0);
        gbc.writeMem(0x6e91, { 0x36 });
        gbc.writeMem(0x885c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x660e, gbc.sp());
        EXPECT(0x885e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x885c));
        EXPECT(0x4e, gbc.readMem(0x885d));
        // CB 4E 0208
        gbc.setState(0x9cb, 0x5f44, 0x1c90, 0x44f2, 0x8000, 0xda01, 0x0, 0x1);
        gbc.writeMem(0x9cb, { 0xcb, 0x4e });
        gbc.writeMem(0xda01, { 0x8b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5f44, gbc.sp());
        EXPECT(0x9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xda01));
        // CB 4E 0209
        gbc.setState(0x62cf, 0x5a1, 0xa090, 0x75ed, 0x9c65, 0x663d, 0x0, 0x0);
        gbc.writeMem(0x62cf, { 0xcb, 0x4e });
        gbc.writeMem(0x663d, { 0x97 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5a1, gbc.sp());
        EXPECT(0x62d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 020A
        gbc.setState(0xf8e, 0xc289, 0x1230, 0x257f, 0xc53f, 0x3295, 0x1, 0x1);
        gbc.writeMem(0xf8e, { 0xcb, 0x4e });
        gbc.writeMem(0x3295, { 0xb8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc289, gbc.sp());
        EXPECT(0xf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 020B
        gbc.setState(0xce8e, 0x9eb2, 0xae10, 0x1500, 0x49a7, 0x47b0, 0x1, 0x0);
        gbc.writeMem(0x47b0, { 0x6e });
        gbc.writeMem(0xce8e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9eb2, gbc.sp());
        EXPECT(0xce90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce8e));
        EXPECT(0x4e, gbc.readMem(0xce8f));
        // CB 4E 020C
        gbc.setState(0xa0d5, 0xfd78, 0x72a0, 0xf303, 0x322d, 0x752e, 0x0, 0x1);
        gbc.writeMem(0x752e, { 0xa9 });
        gbc.writeMem(0xa0d5, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfd78, gbc.sp());
        EXPECT(0xa0d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d5));
        EXPECT(0x4e, gbc.readMem(0xa0d6));
        // CB 4E 020D
        gbc.setState(0xdbaa, 0x3aa6, 0xf360, 0xbec1, 0x9114, 0x762b, 0x0, 0x1);
        gbc.writeMem(0x762b, { 0x27 });
        gbc.writeMem(0xdbaa, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3aa6, gbc.sp());
        EXPECT(0xdbac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbaa));
        EXPECT(0x4e, gbc.readMem(0xdbab));
        // CB 4E 020E
        gbc.setState(0x4275, 0xad1a, 0x18c0, 0x170d, 0xf3b8, 0x54de, 0x1, 0x0);
        gbc.writeMem(0x4275, { 0xcb, 0x4e });
        gbc.writeMem(0x54de, { 0xfc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xad1a, gbc.sp());
        EXPECT(0x4277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 020F
        gbc.setState(0xeeed, 0x700c, 0xfa40, 0xf5b7, 0x19c6, 0xc986, 0x0, 0x0);
        gbc.writeMem(0xc986, { 0x3e });
        gbc.writeMem(0xeeed, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x700c, gbc.sp());
        EXPECT(0xeeef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc986));
        EXPECT(0xcb, gbc.readMem(0xeeed));
        EXPECT(0x4e, gbc.readMem(0xeeee));
        // CB 4E 0210
        gbc.setState(0x7381, 0xa201, 0x9d00, 0x5483, 0x6550, 0xa106, 0x0, 0x0);
        gbc.writeMem(0x7381, { 0xcb, 0x4e });
        gbc.writeMem(0xa106, { 0x8f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa201, gbc.sp());
        EXPECT(0x7383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa106));
        // CB 4E 0211
        gbc.setState(0x42d8, 0x159c, 0xf180, 0xee21, 0x716d, 0xd7b7, 0x0, 0x1);
        gbc.writeMem(0x42d8, { 0xcb, 0x4e });
        gbc.writeMem(0xd7b7, { 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x159c, gbc.sp());
        EXPECT(0x42da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd7b7));
        // CB 4E 0212
        gbc.setState(0xdaba, 0x8dac, 0x6120, 0x4903, 0x6770, 0xa8f5, 0x1, 0x0);
        gbc.writeMem(0xa8f5, { 0x8f });
        gbc.writeMem(0xdaba, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8dac, gbc.sp());
        EXPECT(0xdabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa8f5));
        EXPECT(0xcb, gbc.readMem(0xdaba));
        EXPECT(0x4e, gbc.readMem(0xdabb));
        // CB 4E 0213
        gbc.setState(0x740b, 0x94fd, 0xf750, 0x5c3f, 0x7e67, 0xe0aa, 0x0, 0x0);
        gbc.writeMem(0x740b, { 0xcb, 0x4e });
        gbc.writeMem(0xe0aa, { 0xbf });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x94fd, gbc.sp());
        EXPECT(0x740d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe0aa));
        // CB 4E 0215
        gbc.setState(0x993f, 0xa2b6, 0xfe50, 0xbb75, 0x8704, 0x6ebd, 0x1, 0x0);
        gbc.writeMem(0x6ebd, { 0xed });
        gbc.writeMem(0x993f, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa2b6, gbc.sp());
        EXPECT(0x9941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x993f));
        EXPECT(0x4e, gbc.readMem(0x9940));
        // CB 4E 0216
        gbc.setState(0x64f1, 0xef08, 0x86c0, 0xf320, 0xfef6, 0x7111, 0x1, 0x0);
        gbc.writeMem(0x64f1, { 0xcb, 0x4e });
        gbc.writeMem(0x7111, { 0xb1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xef08, gbc.sp());
        EXPECT(0x64f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0217
        gbc.setState(0x46, 0xb755, 0x940, 0x1cc1, 0x77f1, 0x3227, 0x1, 0x0);
        gbc.writeMem(0x46, { 0xcb, 0x4e });
        gbc.writeMem(0x3227, { 0x5c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb755, gbc.sp());
        EXPECT(0x48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0218
        gbc.setState(0xd6c8, 0xfeb2, 0xca50, 0xd686, 0xe983, 0x18f9, 0x1, 0x1);
        gbc.writeMem(0x18f9, { 0x79 });
        gbc.writeMem(0xd6c8, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfeb2, gbc.sp());
        EXPECT(0xd6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c8));
        EXPECT(0x4e, gbc.readMem(0xd6c9));
        // CB 4E 0219
        gbc.setState(0x61ab, 0x9a34, 0xf5e0, 0x6ec6, 0xdd14, 0x2d72, 0x1, 0x0);
        gbc.writeMem(0x2d72, { 0xc3 });
        gbc.writeMem(0x61ab, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9a34, gbc.sp());
        EXPECT(0x61ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 021A
        gbc.setState(0xaf1d, 0x870, 0xec40, 0xf030, 0x695a, 0x1751, 0x1, 0x0);
        gbc.writeMem(0x1751, { 0xb });
        gbc.writeMem(0xaf1d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x870, gbc.sp());
        EXPECT(0xaf1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf1d));
        EXPECT(0x4e, gbc.readMem(0xaf1e));
        // CB 4E 021B
        gbc.setState(0xa111, 0x1b9b, 0xbeb0, 0x2406, 0x9f4, 0x238e, 0x1, 0x1);
        gbc.writeMem(0x238e, { 0x3c });
        gbc.writeMem(0xa111, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1b9b, gbc.sp());
        EXPECT(0xa113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa111));
        EXPECT(0x4e, gbc.readMem(0xa112));
        // CB 4E 021C
        gbc.setState(0x396e, 0xa7bd, 0xe9b0, 0x266e, 0x9533, 0xb801, 0x1, 0x0);
        gbc.writeMem(0x396e, { 0xcb, 0x4e });
        gbc.writeMem(0xb801, { 0x79 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa7bd, gbc.sp());
        EXPECT(0x3970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb801));
        // CB 4E 021D
        gbc.setState(0x2cf1, 0x2c53, 0x9af0, 0xc7f8, 0x59f7, 0x604e, 0x1, 0x0);
        gbc.writeMem(0x2cf1, { 0xcb, 0x4e });
        gbc.writeMem(0x604e, { 0xe9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2c53, gbc.sp());
        EXPECT(0x2cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 021E
        gbc.setState(0x1514, 0xd216, 0xa50, 0x2511, 0x3616, 0x3bb6, 0x1, 0x1);
        gbc.writeMem(0x1514, { 0xcb, 0x4e });
        gbc.writeMem(0x3bb6, { 0xde });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd216, gbc.sp());
        EXPECT(0x1516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 021F
        gbc.setState(0x446f, 0xf865, 0xfd10, 0xff6a, 0xec32, 0xcb26, 0x0, 0x0);
        gbc.writeMem(0x446f, { 0xcb, 0x4e });
        gbc.writeMem(0xcb26, { 0xac });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf865, gbc.sp());
        EXPECT(0x4471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcb26));
        // CB 4E 0220
        gbc.setState(0x3ced, 0x69f6, 0xfea0, 0xbab4, 0x80f3, 0xee85, 0x0, 0x0);
        gbc.writeMem(0x3ced, { 0xcb, 0x4e });
        gbc.writeMem(0xee85, { 0xae });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x69f6, gbc.sp());
        EXPECT(0x3cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xee85));
        // CB 4E 0221
        gbc.setState(0x7c7e, 0x411a, 0x6e40, 0x1691, 0xcc3a, 0xccf1, 0x0, 0x1);
        gbc.writeMem(0x7c7e, { 0xcb, 0x4e });
        gbc.writeMem(0xccf1, { 0x9c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x411a, gbc.sp());
        EXPECT(0x7c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xccf1));
        // CB 4E 0222
        gbc.setState(0x3442, 0xa94c, 0xffe0, 0x536f, 0xaaa2, 0xebac, 0x0, 0x1);
        gbc.writeMem(0x3442, { 0xcb, 0x4e });
        gbc.writeMem(0xebac, { 0x3b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa94c, gbc.sp());
        EXPECT(0x3444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xebac));
        // CB 4E 0224
        gbc.setState(0xe890, 0x29, 0x71c0, 0xcae4, 0x2a23, 0xbbd5, 0x0, 0x1);
        gbc.writeMem(0xbbd5, { 0x24 });
        gbc.writeMem(0xe890, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x29, gbc.sp());
        EXPECT(0xe892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xbbd5));
        EXPECT(0xcb, gbc.readMem(0xe890));
        EXPECT(0x4e, gbc.readMem(0xe891));
        // CB 4E 0225
        gbc.setState(0xce7e, 0x5bc9, 0x4ef0, 0x7997, 0x447f, 0x4874, 0x1, 0x1);
        gbc.writeMem(0x4874, { 0x7 });
        gbc.writeMem(0xce7e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5bc9, gbc.sp());
        EXPECT(0xce80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce7e));
        EXPECT(0x4e, gbc.readMem(0xce7f));
        // CB 4E 0226
        gbc.setState(0x3fac, 0x702c, 0xdbb0, 0xbb0, 0xb70e, 0x6c7b, 0x0, 0x0);
        gbc.writeMem(0x3fac, { 0xcb, 0x4e });
        gbc.writeMem(0x6c7b, { 0x15 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x702c, gbc.sp());
        EXPECT(0x3fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0227
        gbc.setState(0xcca1, 0x47e0, 0x6980, 0xc25c, 0x81dd, 0xc042, 0x1, 0x0);
        gbc.writeMem(0xc042, { 0xb7 });
        gbc.writeMem(0xcca1, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x47e0, gbc.sp());
        EXPECT(0xcca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc042));
        EXPECT(0xcb, gbc.readMem(0xcca1));
        EXPECT(0x4e, gbc.readMem(0xcca2));
        // CB 4E 0228
        gbc.setState(0x8d10, 0xaae6, 0x4640, 0xa7ad, 0x9387, 0x3bcb, 0x1, 0x0);
        gbc.writeMem(0x3bcb, { 0x84 });
        gbc.writeMem(0x8d10, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaae6, gbc.sp());
        EXPECT(0x8d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d10));
        EXPECT(0x4e, gbc.readMem(0x8d11));
        // CB 4E 0229
        gbc.setState(0x425d, 0x4bfb, 0xaba0, 0x2c95, 0xb6eb, 0x8eb7, 0x0, 0x1);
        gbc.writeMem(0x425d, { 0xcb, 0x4e });
        gbc.writeMem(0x8eb7, { 0xf5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4bfb, gbc.sp());
        EXPECT(0x425f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8eb7));
        // CB 4E 022A
        gbc.setState(0x1093, 0xf041, 0x99c0, 0xfa23, 0x24a, 0x8e02, 0x1, 0x1);
        gbc.writeMem(0x1093, { 0xcb, 0x4e });
        gbc.writeMem(0x8e02, { 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf041, gbc.sp());
        EXPECT(0x1095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8e02));
        // CB 4E 022B
        gbc.setState(0x5c71, 0x7fe4, 0x47b0, 0x886d, 0xde8c, 0x63d3, 0x0, 0x1);
        gbc.writeMem(0x5c71, { 0xcb, 0x4e });
        gbc.writeMem(0x63d3, { 0xb3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7fe4, gbc.sp());
        EXPECT(0x5c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 022C
        gbc.setState(0x21a4, 0xa368, 0x1890, 0xfbd9, 0xe945, 0xdbb8, 0x1, 0x0);
        gbc.writeMem(0x21a4, { 0xcb, 0x4e });
        gbc.writeMem(0xdbb8, { 0xe8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa368, gbc.sp());
        EXPECT(0x21a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xdbb8));
        // CB 4E 022D
        gbc.setState(0x39a0, 0xd00b, 0x7c00, 0xb5e2, 0x4a3b, 0x46de, 0x1, 0x0);
        gbc.writeMem(0x39a0, { 0xcb, 0x4e });
        gbc.writeMem(0x46de, { 0xe0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd00b, gbc.sp());
        EXPECT(0x39a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 022E
        gbc.setState(0x53e7, 0x38b9, 0x5fa0, 0x307e, 0x24a1, 0xe1f0, 0x0, 0x1);
        gbc.writeMem(0x53e7, { 0xcb, 0x4e });
        gbc.writeMem(0xe1f0, { 0xd6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x38b9, gbc.sp());
        EXPECT(0x53e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe1f0));
        // CB 4E 022F
        gbc.setState(0xbbd0, 0x9ea2, 0xade0, 0x535d, 0x95e3, 0x5a9b, 0x1, 0x0);
        gbc.writeMem(0x5a9b, { 0x71 });
        gbc.writeMem(0xbbd0, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9ea2, gbc.sp());
        EXPECT(0xbbd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd0));
        EXPECT(0x4e, gbc.readMem(0xbbd1));
        // CB 4E 0230
        gbc.setState(0x8409, 0x5ebb, 0xa450, 0x17a5, 0x1caf, 0xf7be, 0x1, 0x0);
        gbc.writeMem(0x8409, { 0xcb, 0x4e });
        gbc.writeMem(0xf7be, { 0x9f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5ebb, gbc.sp());
        EXPECT(0x840b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8409));
        EXPECT(0x4e, gbc.readMem(0x840a));
        EXPECT(0x9f, gbc.readMem(0xf7be));
        // CB 4E 0231
        gbc.setState(0xc740, 0x9f24, 0x5020, 0x78f4, 0x3819, 0x64ca, 0x0, 0x0);
        gbc.writeMem(0x64ca, { 0x39 });
        gbc.writeMem(0xc740, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9f24, gbc.sp());
        EXPECT(0xc742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc740));
        EXPECT(0x4e, gbc.readMem(0xc741));
        // CB 4E 0232
        gbc.setState(0xb1d8, 0x66ae, 0x2db0, 0xbf48, 0x597e, 0xf06f, 0x1, 0x1);
        gbc.writeMem(0xb1d8, { 0xcb, 0x4e });
        gbc.writeMem(0xf06f, { 0x50 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x66ae, gbc.sp());
        EXPECT(0xb1da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d8));
        EXPECT(0x4e, gbc.readMem(0xb1d9));
        EXPECT(0x50, gbc.readMem(0xf06f));
        // CB 4E 0233
        gbc.setState(0x92fe, 0x4ad2, 0xef80, 0xbb12, 0xb7e1, 0xebe, 0x0, 0x0);
        gbc.writeMem(0xebe, { 0xdd });
        gbc.writeMem(0x92fe, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4ad2, gbc.sp());
        EXPECT(0x9300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92fe));
        EXPECT(0x4e, gbc.readMem(0x92ff));
        // CB 4E 0234
        gbc.setState(0x3817, 0x1d1b, 0x4d60, 0x59a6, 0x27f0, 0x63af, 0x1, 0x1);
        gbc.writeMem(0x3817, { 0xcb, 0x4e });
        gbc.writeMem(0x63af, { 0xe2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1d1b, gbc.sp());
        EXPECT(0x3819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0235
        gbc.setState(0xc681, 0x462d, 0xa8b0, 0x67b2, 0xa0fb, 0xc699, 0x1, 0x0);
        gbc.writeMem(0xc681, { 0xcb, 0x4e });
        gbc.writeMem(0xc699, { 0x37 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x462d, gbc.sp());
        EXPECT(0xc683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc681));
        EXPECT(0x4e, gbc.readMem(0xc682));
        EXPECT(0x37, gbc.readMem(0xc699));
        // CB 4E 0236
        gbc.setState(0xe341, 0xe249, 0x26e0, 0xe2ac, 0xdccc, 0x9869, 0x1, 0x1);
        gbc.writeMem(0x9869, { 0xe2 });
        gbc.writeMem(0xe341, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe249, gbc.sp());
        EXPECT(0xe343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9869));
        EXPECT(0xcb, gbc.readMem(0xe341));
        EXPECT(0x4e, gbc.readMem(0xe342));
        // CB 4E 0237
        gbc.setState(0x1713, 0xfd0a, 0x9250, 0xfe8d, 0x308e, 0x1a5e, 0x0, 0x0);
        gbc.writeMem(0x1713, { 0xcb, 0x4e });
        gbc.writeMem(0x1a5e, { 0xc2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfd0a, gbc.sp());
        EXPECT(0x1715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0238
        gbc.setState(0xeeeb, 0x1374, 0x10, 0x21c9, 0x970f, 0xd025, 0x0, 0x0);
        gbc.writeMem(0xd025, { 0x3d });
        gbc.writeMem(0xeeeb, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1374, gbc.sp());
        EXPECT(0xeeed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xd025));
        EXPECT(0xcb, gbc.readMem(0xeeeb));
        EXPECT(0x4e, gbc.readMem(0xeeec));
        // CB 4E 0239
        gbc.setState(0x6dc9, 0xa6ad, 0x7ff0, 0x5e0a, 0xca23, 0xac1f, 0x1, 0x0);
        gbc.writeMem(0x6dc9, { 0xcb, 0x4e });
        gbc.writeMem(0xac1f, { 0x9f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa6ad, gbc.sp());
        EXPECT(0x6dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xac1f));
        // CB 4E 023A
        gbc.setState(0xef57, 0x51be, 0x4fd0, 0x5534, 0x2ab5, 0x18ce, 0x1, 0x1);
        gbc.writeMem(0x18ce, { 0x3c });
        gbc.writeMem(0xef57, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x51be, gbc.sp());
        EXPECT(0xef59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef57));
        EXPECT(0x4e, gbc.readMem(0xef58));
        // CB 4E 023C
        gbc.setState(0xc392, 0xad88, 0xa30, 0x8427, 0xbc36, 0x9e8d, 0x1, 0x1);
        gbc.writeMem(0x9e8d, { 0xcf });
        gbc.writeMem(0xc392, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xad88, gbc.sp());
        EXPECT(0xc394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x9e8d));
        EXPECT(0xcb, gbc.readMem(0xc392));
        EXPECT(0x4e, gbc.readMem(0xc393));
        // CB 4E 023D
        gbc.setState(0x9ed1, 0x77dc, 0xdc60, 0xe5f5, 0xa9b8, 0x3681, 0x1, 0x1);
        gbc.writeMem(0x3681, { 0xb7 });
        gbc.writeMem(0x9ed1, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x77dc, gbc.sp());
        EXPECT(0x9ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed1));
        EXPECT(0x4e, gbc.readMem(0x9ed2));
        // CB 4E 023E
        gbc.setState(0x36cc, 0x2362, 0xe50, 0x3576, 0x56f5, 0xc034, 0x1, 0x1);
        gbc.writeMem(0x36cc, { 0xcb, 0x4e });
        gbc.writeMem(0xc034, { 0x7e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2362, gbc.sp());
        EXPECT(0x36ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc034));
        // CB 4E 023F
        gbc.setState(0x35c8, 0xc31e, 0xa870, 0x9279, 0x15e, 0xf428, 0x1, 0x1);
        gbc.writeMem(0x35c8, { 0xcb, 0x4e });
        gbc.writeMem(0xf428, { 0x1d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc31e, gbc.sp());
        EXPECT(0x35ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xf428));
        // CB 4E 0241
        gbc.setState(0x239c, 0xdb36, 0x4540, 0x3d19, 0xac60, 0xc013, 0x1, 0x0);
        gbc.writeMem(0x239c, { 0xcb, 0x4e });
        gbc.writeMem(0xc013, { 0xf });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdb36, gbc.sp());
        EXPECT(0x239e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xc013));
        // CB 4E 0242
        gbc.setState(0x9750, 0x1352, 0x4130, 0x9e47, 0xbe1b, 0x6ee1, 0x0, 0x1);
        gbc.writeMem(0x6ee1, { 0xef });
        gbc.writeMem(0x9750, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1352, gbc.sp());
        EXPECT(0x9752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9750));
        EXPECT(0x4e, gbc.readMem(0x9751));
        // CB 4E 0244
        gbc.setState(0x43c9, 0x893c, 0x33a0, 0xb1c7, 0xbbc, 0x48b1, 0x1, 0x0);
        gbc.writeMem(0x43c9, { 0xcb, 0x4e });
        gbc.writeMem(0x48b1, { 0xa4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x893c, gbc.sp());
        EXPECT(0x43cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0245
        gbc.setState(0xc914, 0xb4dd, 0x5200, 0xb286, 0x37d4, 0x9e50, 0x0, 0x0);
        gbc.writeMem(0x9e50, { 0xb9 });
        gbc.writeMem(0xc914, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb4dd, gbc.sp());
        EXPECT(0xc916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9e50));
        EXPECT(0xcb, gbc.readMem(0xc914));
        EXPECT(0x4e, gbc.readMem(0xc915));
        // CB 4E 0246
        gbc.setState(0xbfbd, 0xb80c, 0x4ba0, 0x5d88, 0xd644, 0x6314, 0x1, 0x1);
        gbc.writeMem(0x6314, { 0xb8 });
        gbc.writeMem(0xbfbd, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb80c, gbc.sp());
        EXPECT(0xbfbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfbd));
        EXPECT(0x4e, gbc.readMem(0xbfbe));
        // CB 4E 0247
        gbc.setState(0x1d5e, 0x1504, 0x5b20, 0xd7f3, 0xde2, 0x73a3, 0x0, 0x0);
        gbc.writeMem(0x1d5e, { 0xcb, 0x4e });
        gbc.writeMem(0x73a3, { 0xde });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1504, gbc.sp());
        EXPECT(0x1d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0248
        gbc.setState(0x5fdd, 0x39c1, 0x4b70, 0xef52, 0xf18f, 0x1d64, 0x1, 0x0);
        gbc.writeMem(0x1d64, { 0x7f });
        gbc.writeMem(0x5fdd, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x39c1, gbc.sp());
        EXPECT(0x5fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0249
        gbc.setState(0xa35b, 0x2c8a, 0x5ad0, 0xf340, 0x6dfc, 0x8b30, 0x0, 0x1);
        gbc.writeMem(0x8b30, { 0xef });
        gbc.writeMem(0xa35b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2c8a, gbc.sp());
        EXPECT(0xa35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x8b30));
        EXPECT(0xcb, gbc.readMem(0xa35b));
        EXPECT(0x4e, gbc.readMem(0xa35c));
        // CB 4E 024A
        gbc.setState(0xbcc2, 0x6f99, 0xad10, 0xbf35, 0x8dda, 0x4e50, 0x0, 0x0);
        gbc.writeMem(0x4e50, { 0x93 });
        gbc.writeMem(0xbcc2, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6f99, gbc.sp());
        EXPECT(0xbcc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc2));
        EXPECT(0x4e, gbc.readMem(0xbcc3));
        // CB 4E 024B
        gbc.setState(0xa626, 0x3612, 0x7d30, 0x19f2, 0xa233, 0xcd39, 0x1, 0x0);
        gbc.writeMem(0xa626, { 0xcb, 0x4e });
        gbc.writeMem(0xcd39, { 0x9d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3612, gbc.sp());
        EXPECT(0xa628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa626));
        EXPECT(0x4e, gbc.readMem(0xa627));
        EXPECT(0x9d, gbc.readMem(0xcd39));
        // CB 4E 024C
        gbc.setState(0x48f1, 0xae7f, 0xa4e0, 0x7239, 0xa54d, 0x23b6, 0x0, 0x1);
        gbc.writeMem(0x23b6, { 0x56 });
        gbc.writeMem(0x48f1, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xae7f, gbc.sp());
        EXPECT(0x48f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 024D
        gbc.setState(0xc203, 0x3d12, 0xee30, 0x969f, 0xbd97, 0xc085, 0x0, 0x0);
        gbc.writeMem(0xc085, { 0x43 });
        gbc.writeMem(0xc203, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3d12, gbc.sp());
        EXPECT(0xc205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc085));
        EXPECT(0xcb, gbc.readMem(0xc203));
        EXPECT(0x4e, gbc.readMem(0xc204));
        // CB 4E 024E
        gbc.setState(0xe077, 0xbf59, 0xe980, 0xbd41, 0xca8e, 0x655a, 0x0, 0x0);
        gbc.writeMem(0x655a, { 0xf5 });
        gbc.writeMem(0xe077, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbf59, gbc.sp());
        EXPECT(0xe079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe077));
        EXPECT(0x4e, gbc.readMem(0xe078));
        // CB 4E 024F
        gbc.setState(0xeb37, 0x86dd, 0x78a0, 0x5b67, 0xc5e4, 0xe6f8, 0x0, 0x1);
        gbc.writeMem(0xe6f8, { 0x4f });
        gbc.writeMem(0xeb37, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x86dd, gbc.sp());
        EXPECT(0xeb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xe6f8));
        EXPECT(0xcb, gbc.readMem(0xeb37));
        EXPECT(0x4e, gbc.readMem(0xeb38));
        // CB 4E 0250
        gbc.setState(0xa62d, 0x5b09, 0x3cd0, 0xedd0, 0x1d4d, 0x5935, 0x0, 0x0);
        gbc.writeMem(0x5935, { 0x2f });
        gbc.writeMem(0xa62d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5b09, gbc.sp());
        EXPECT(0xa62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa62d));
        EXPECT(0x4e, gbc.readMem(0xa62e));
        // CB 4E 0251
        gbc.setState(0x1610, 0xc1f0, 0x7750, 0xc618, 0x5523, 0x9030, 0x0, 0x1);
        gbc.writeMem(0x1610, { 0xcb, 0x4e });
        gbc.writeMem(0x9030, { 0xb6 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc1f0, gbc.sp());
        EXPECT(0x1612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9030));
        // CB 4E 0253
        gbc.setState(0xb420, 0x888b, 0x68c0, 0x47a3, 0xb354, 0xfe2e, 0x0, 0x0);
        gbc.writeMem(0xb420, { 0xcb, 0x4e });
        gbc.writeMem(0xfe2e, { 0x5f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x888b, gbc.sp());
        EXPECT(0xb422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb420));
        EXPECT(0x4e, gbc.readMem(0xb421));
        EXPECT(0x5f, gbc.readMem(0xfe2e));
        // CB 4E 0254
        gbc.setState(0x5110, 0x3a66, 0x7e60, 0xe802, 0x3e00, 0x6724, 0x0, 0x1);
        gbc.writeMem(0x5110, { 0xcb, 0x4e });
        gbc.writeMem(0x6724, { 0x76 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3a66, gbc.sp());
        EXPECT(0x5112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0255
        gbc.setState(0x5210, 0x1390, 0x20c0, 0x252, 0x9e2d, 0x2559, 0x0, 0x0);
        gbc.writeMem(0x2559, { 0xf0 });
        gbc.writeMem(0x5210, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1390, gbc.sp());
        EXPECT(0x5212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0256
        gbc.setState(0x6f08, 0x9e06, 0x35e0, 0x8190, 0xac7d, 0x36a8, 0x1, 0x1);
        gbc.writeMem(0x36a8, { 0xc1 });
        gbc.writeMem(0x6f08, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9e06, gbc.sp());
        EXPECT(0x6f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0258
        gbc.setState(0x9166, 0x20eb, 0xfa0, 0x307, 0xe678, 0x193c, 0x0, 0x1);
        gbc.writeMem(0x193c, { 0xb4 });
        gbc.writeMem(0x9166, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x20eb, gbc.sp());
        EXPECT(0x9168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9166));
        EXPECT(0x4e, gbc.readMem(0x9167));
        // CB 4E 0259
        gbc.setState(0x899, 0x968c, 0xae60, 0x40ed, 0x58e6, 0x93f4, 0x0, 0x1);
        gbc.writeMem(0x899, { 0xcb, 0x4e });
        gbc.writeMem(0x93f4, { 0xe7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x968c, gbc.sp());
        EXPECT(0x89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x93f4));
        // CB 4E 025C
        gbc.setState(0xd1ec, 0x1c3, 0x9ff0, 0x424f, 0xb7d7, 0x396a, 0x0, 0x1);
        gbc.writeMem(0x396a, { 0x6b });
        gbc.writeMem(0xd1ec, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1c3, gbc.sp());
        EXPECT(0xd1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ec));
        EXPECT(0x4e, gbc.readMem(0xd1ed));
        // CB 4E 025D
        gbc.setState(0xbf86, 0xd3fa, 0x8d70, 0x4630, 0xc68a, 0xba87, 0x0, 0x0);
        gbc.writeMem(0xba87, { 0x8c });
        gbc.writeMem(0xbf86, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd3fa, gbc.sp());
        EXPECT(0xbf88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xba87));
        EXPECT(0xcb, gbc.readMem(0xbf86));
        EXPECT(0x4e, gbc.readMem(0xbf87));
        // CB 4E 025E
        gbc.setState(0x8297, 0xb288, 0x9500, 0x42b8, 0xdfb4, 0x785c, 0x0, 0x1);
        gbc.writeMem(0x785c, { 0x82 });
        gbc.writeMem(0x8297, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb288, gbc.sp());
        EXPECT(0x8299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8297));
        EXPECT(0x4e, gbc.readMem(0x8298));
        // CB 4E 025F
        gbc.setState(0x9b56, 0xeea2, 0xb850, 0xa29e, 0xb5d, 0xc8, 0x1, 0x0);
        gbc.writeMem(0xc8, { 0x2 });
        gbc.writeMem(0x9b56, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xeea2, gbc.sp());
        EXPECT(0x9b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b56));
        EXPECT(0x4e, gbc.readMem(0x9b57));
        // CB 4E 0260
        gbc.setState(0x923c, 0x1ba5, 0x60e0, 0x53ee, 0x6e4f, 0x6f5b, 0x0, 0x0);
        gbc.writeMem(0x6f5b, { 0xda });
        gbc.writeMem(0x923c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1ba5, gbc.sp());
        EXPECT(0x923e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x923c));
        EXPECT(0x4e, gbc.readMem(0x923d));
        // CB 4E 0261
        gbc.setState(0x753d, 0x8b2, 0x6420, 0x3c70, 0x7d27, 0xf9a2, 0x1, 0x1);
        gbc.writeMem(0x753d, { 0xcb, 0x4e });
        gbc.writeMem(0xf9a2, { 0x2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8b2, gbc.sp());
        EXPECT(0x753f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xf9a2));
        // CB 4E 0262
        gbc.setState(0xcd30, 0x1c83, 0x5450, 0x53fb, 0xd13f, 0x8363, 0x0, 0x0);
        gbc.writeMem(0x8363, { 0x31 });
        gbc.writeMem(0xcd30, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1c83, gbc.sp());
        EXPECT(0xcd32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8363));
        EXPECT(0xcb, gbc.readMem(0xcd30));
        EXPECT(0x4e, gbc.readMem(0xcd31));
        // CB 4E 0263
        gbc.setState(0x7118, 0x3e82, 0xfcb0, 0xf90a, 0xffd0, 0xa4c4, 0x1, 0x0);
        gbc.writeMem(0x7118, { 0xcb, 0x4e });
        gbc.writeMem(0xa4c4, { 0x26 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3e82, gbc.sp());
        EXPECT(0x711a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa4c4));
        // CB 4E 0264
        gbc.setState(0x3ec5, 0x32f2, 0xcde0, 0x1d4f, 0x770e, 0xff2e, 0x1, 0x1);
        gbc.writeMem(0x3ec5, { 0xcb, 0x4e });
        gbc.writeMem(0xff2e, { 0x86 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x32f2, gbc.sp());
        EXPECT(0x3ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xff2e));
        // CB 4E 0266
        gbc.setState(0x527a, 0x787c, 0x49d0, 0xc23d, 0xbd54, 0x4abd, 0x1, 0x1);
        gbc.writeMem(0x4abd, { 0x62 });
        gbc.writeMem(0x527a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x787c, gbc.sp());
        EXPECT(0x527c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0267
        gbc.setState(0xed01, 0x8f26, 0xca60, 0x660c, 0xde7c, 0xf79f, 0x0, 0x0);
        gbc.writeMem(0xed01, { 0xcb, 0x4e });
        gbc.writeMem(0xf79f, { 0x70 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8f26, gbc.sp());
        EXPECT(0xed03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed01));
        EXPECT(0x4e, gbc.readMem(0xed02));
        EXPECT(0x70, gbc.readMem(0xf79f));
        // CB 4E 0268
        gbc.setState(0x7967, 0xf39a, 0x1ea0, 0x44a4, 0x1683, 0x2dde, 0x0, 0x0);
        gbc.writeMem(0x2dde, { 0xe2 });
        gbc.writeMem(0x7967, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf39a, gbc.sp());
        EXPECT(0x7969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0269
        gbc.setState(0x8325, 0x3c07, 0xda00, 0xf5de, 0x777d, 0x573f, 0x1, 0x1);
        gbc.writeMem(0x573f, { 0xab });
        gbc.writeMem(0x8325, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3c07, gbc.sp());
        EXPECT(0x8327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8325));
        EXPECT(0x4e, gbc.readMem(0x8326));
        // CB 4E 026A
        gbc.setState(0x970f, 0x5531, 0xac60, 0x7818, 0x74d3, 0xfcbe, 0x1, 0x0);
        gbc.writeMem(0x970f, { 0xcb, 0x4e });
        gbc.writeMem(0xfcbe, { 0xa8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5531, gbc.sp());
        EXPECT(0x9711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x970f));
        EXPECT(0x4e, gbc.readMem(0x9710));
        EXPECT(0xa8, gbc.readMem(0xfcbe));
        // CB 4E 026B
        gbc.setState(0x3d04, 0xdefe, 0x9910, 0x7408, 0x8a8, 0xcc10, 0x0, 0x1);
        gbc.writeMem(0x3d04, { 0xcb, 0x4e });
        gbc.writeMem(0xcc10, { 0x5f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdefe, gbc.sp());
        EXPECT(0x3d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xcc10));
        // CB 4E 026C
        gbc.setState(0x8cdc, 0x778b, 0xa3a0, 0x4c8a, 0x3c14, 0x4a45, 0x1, 0x0);
        gbc.writeMem(0x4a45, { 0x24 });
        gbc.writeMem(0x8cdc, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x778b, gbc.sp());
        EXPECT(0x8cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cdc));
        EXPECT(0x4e, gbc.readMem(0x8cdd));
        // CB 4E 026D
        gbc.setState(0x5b8a, 0xd50f, 0x9610, 0x915b, 0x1013, 0xfc7c, 0x1, 0x1);
        gbc.writeMem(0x5b8a, { 0xcb, 0x4e });
        gbc.writeMem(0xfc7c, { 0x69 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd50f, gbc.sp());
        EXPECT(0x5b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xfc7c));
        // CB 4E 026E
        gbc.setState(0x2a44, 0x81ed, 0x8f60, 0x65b7, 0x6783, 0x5b94, 0x0, 0x0);
        gbc.writeMem(0x2a44, { 0xcb, 0x4e });
        gbc.writeMem(0x5b94, { 0xe1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x81ed, gbc.sp());
        EXPECT(0x2a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 026F
        gbc.setState(0x7b87, 0x77f5, 0x8de0, 0x17f5, 0x3bd5, 0xc769, 0x0, 0x0);
        gbc.writeMem(0x7b87, { 0xcb, 0x4e });
        gbc.writeMem(0xc769, { 0xa6 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x77f5, gbc.sp());
        EXPECT(0x7b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc769));
        // CB 4E 0270
        gbc.setState(0xee30, 0x8a8, 0xa540, 0x6bab, 0xf320, 0x3534, 0x1, 0x1);
        gbc.writeMem(0x3534, { 0x75 });
        gbc.writeMem(0xee30, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8a8, gbc.sp());
        EXPECT(0xee32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee30));
        EXPECT(0x4e, gbc.readMem(0xee31));
        // CB 4E 0271
        gbc.setState(0x7c9e, 0x72c4, 0xece0, 0x5c76, 0x56cb, 0x4b08, 0x1, 0x1);
        gbc.writeMem(0x4b08, { 0xf8 });
        gbc.writeMem(0x7c9e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x72c4, gbc.sp());
        EXPECT(0x7ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0272
        gbc.setState(0xa6ed, 0x9e71, 0x29a0, 0xd3cb, 0x79da, 0xfd0e, 0x0, 0x0);
        gbc.writeMem(0xa6ed, { 0xcb, 0x4e });
        gbc.writeMem(0xfd0e, { 0x9c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9e71, gbc.sp());
        EXPECT(0xa6ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ed));
        EXPECT(0x4e, gbc.readMem(0xa6ee));
        EXPECT(0x9c, gbc.readMem(0xfd0e));
        // CB 4E 0273
        gbc.setState(0x1c93, 0x429b, 0xb90, 0xc3ae, 0xfa89, 0xd1a0, 0x1, 0x1);
        gbc.writeMem(0x1c93, { 0xcb, 0x4e });
        gbc.writeMem(0xd1a0, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x429b, gbc.sp());
        EXPECT(0x1c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd1a0));
        // CB 4E 0274
        gbc.setState(0x8b6f, 0xb6f4, 0xda60, 0x34af, 0xf287, 0x2f06, 0x1, 0x1);
        gbc.writeMem(0x2f06, { 0x65 });
        gbc.writeMem(0x8b6f, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb6f4, gbc.sp());
        EXPECT(0x8b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6f));
        EXPECT(0x4e, gbc.readMem(0x8b70));
        // CB 4E 0275
        gbc.setState(0x7d04, 0x5418, 0xfb40, 0x176e, 0xd67e, 0x45c, 0x0, 0x1);
        gbc.writeMem(0x45c, { 0x8f });
        gbc.writeMem(0x7d04, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5418, gbc.sp());
        EXPECT(0x7d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0277
        gbc.setState(0xa824, 0x6011, 0x2d30, 0xf346, 0x197, 0xc9eb, 0x0, 0x0);
        gbc.writeMem(0xa824, { 0xcb, 0x4e });
        gbc.writeMem(0xc9eb, { 0x26 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6011, gbc.sp());
        EXPECT(0xa826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa824));
        EXPECT(0x4e, gbc.readMem(0xa825));
        EXPECT(0x26, gbc.readMem(0xc9eb));
        // CB 4E 0278
        gbc.setState(0xbe76, 0x1539, 0xb480, 0x9cf4, 0x6098, 0x82bf, 0x0, 0x0);
        gbc.writeMem(0x82bf, { 0xe0 });
        gbc.writeMem(0xbe76, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1539, gbc.sp());
        EXPECT(0xbe78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x82bf));
        EXPECT(0xcb, gbc.readMem(0xbe76));
        EXPECT(0x4e, gbc.readMem(0xbe77));
        // CB 4E 0279
        gbc.setState(0xbd32, 0x5866, 0xf4f0, 0xb5d4, 0xbcc0, 0x2b16, 0x1, 0x0);
        gbc.writeMem(0x2b16, { 0x6b });
        gbc.writeMem(0xbd32, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5866, gbc.sp());
        EXPECT(0xbd34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd32));
        EXPECT(0x4e, gbc.readMem(0xbd33));
        // CB 4E 027A
        gbc.setState(0xdc82, 0xe2a9, 0x9150, 0x5f13, 0xa305, 0x5ed, 0x1, 0x0);
        gbc.writeMem(0x5ed, { 0xb8 });
        gbc.writeMem(0xdc82, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe2a9, gbc.sp());
        EXPECT(0xdc84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc82));
        EXPECT(0x4e, gbc.readMem(0xdc83));
        // CB 4E 027B
        gbc.setState(0x13d5, 0x7439, 0x8570, 0x83e, 0x8471, 0x718d, 0x1, 0x1);
        gbc.writeMem(0x13d5, { 0xcb, 0x4e });
        gbc.writeMem(0x718d, { 0xb3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7439, gbc.sp());
        EXPECT(0x13d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 027C
        gbc.setState(0xb2f1, 0x1d05, 0x670, 0x9877, 0xb5ee, 0x3439, 0x0, 0x1);
        gbc.writeMem(0x3439, { 0x23 });
        gbc.writeMem(0xb2f1, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1d05, gbc.sp());
        EXPECT(0xb2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f1));
        EXPECT(0x4e, gbc.readMem(0xb2f2));
        // CB 4E 027D
        gbc.setState(0x7630, 0xa3c0, 0x4380, 0x9c2b, 0x959, 0x6f70, 0x0, 0x0);
        gbc.writeMem(0x6f70, { 0xc2 });
        gbc.writeMem(0x7630, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa3c0, gbc.sp());
        EXPECT(0x7632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 027E
        gbc.setState(0xa627, 0xf7d4, 0x8610, 0x900, 0x85f6, 0x9ac5, 0x0, 0x1);
        gbc.writeMem(0x9ac5, { 0x6e });
        gbc.writeMem(0xa627, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf7d4, gbc.sp());
        EXPECT(0xa629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9ac5));
        EXPECT(0xcb, gbc.readMem(0xa627));
        EXPECT(0x4e, gbc.readMem(0xa628));
        // CB 4E 0280
        gbc.setState(0xdbd2, 0xd663, 0xe120, 0x8900, 0x242b, 0x79b1, 0x0, 0x0);
        gbc.writeMem(0x79b1, { 0x37 });
        gbc.writeMem(0xdbd2, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd663, gbc.sp());
        EXPECT(0xdbd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd2));
        EXPECT(0x4e, gbc.readMem(0xdbd3));
        // CB 4E 0281
        gbc.setState(0x8005, 0x6bd9, 0x7c90, 0x2af1, 0x9555, 0xbb85, 0x0, 0x0);
        gbc.writeMem(0x8005, { 0xcb, 0x4e });
        gbc.writeMem(0xbb85, { 0x16 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6bd9, gbc.sp());
        EXPECT(0x8007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8005));
        EXPECT(0x4e, gbc.readMem(0x8006));
        EXPECT(0x16, gbc.readMem(0xbb85));
        // CB 4E 0282
        gbc.setState(0xec0, 0x742f, 0x8cc0, 0x59e6, 0x1ccf, 0x80ae, 0x1, 0x0);
        gbc.writeMem(0xec0, { 0xcb, 0x4e });
        gbc.writeMem(0x80ae, { 0xe9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x742f, gbc.sp());
        EXPECT(0xec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x80ae));
        // CB 4E 0283
        gbc.setState(0xca0f, 0x78e3, 0x4f0, 0xa0fc, 0x1b6b, 0xc89c, 0x1, 0x1);
        gbc.writeMem(0xc89c, { 0xe4 });
        gbc.writeMem(0xca0f, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x78e3, gbc.sp());
        EXPECT(0xca11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xc89c));
        EXPECT(0xcb, gbc.readMem(0xca0f));
        EXPECT(0x4e, gbc.readMem(0xca10));
        // CB 4E 0284
        gbc.setState(0x86c2, 0x6bb4, 0x81b0, 0xee2a, 0x1c3c, 0xefb1, 0x1, 0x1);
        gbc.writeMem(0x86c2, { 0xcb, 0x4e });
        gbc.writeMem(0xefb1, { 0x5a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6bb4, gbc.sp());
        EXPECT(0x86c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c2));
        EXPECT(0x4e, gbc.readMem(0x86c3));
        EXPECT(0x5a, gbc.readMem(0xefb1));
        // CB 4E 0285
        gbc.setState(0xce9d, 0xee79, 0x5620, 0x7594, 0xd024, 0x2c28, 0x0, 0x0);
        gbc.writeMem(0x2c28, { 0x0 });
        gbc.writeMem(0xce9d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xee79, gbc.sp());
        EXPECT(0xce9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce9d));
        EXPECT(0x4e, gbc.readMem(0xce9e));
        // CB 4E 0286
        gbc.setState(0xea11, 0x3fcd, 0x1260, 0x2fb3, 0x6802, 0x8a48, 0x1, 0x0);
        gbc.writeMem(0x8a48, { 0xd0 });
        gbc.writeMem(0xea11, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3fcd, gbc.sp());
        EXPECT(0xea13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8a48));
        EXPECT(0xcb, gbc.readMem(0xea11));
        EXPECT(0x4e, gbc.readMem(0xea12));
        // CB 4E 0287
        gbc.setState(0xa1bf, 0x334, 0x7610, 0x2698, 0xdbb1, 0xcccf, 0x1, 0x1);
        gbc.writeMem(0xa1bf, { 0xcb, 0x4e });
        gbc.writeMem(0xcccf, { 0x4e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x334, gbc.sp());
        EXPECT(0xa1c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1bf));
        EXPECT(0x4e, gbc.readMem(0xa1c0));
        EXPECT(0x4e, gbc.readMem(0xcccf));
        // CB 4E 0288
        gbc.setState(0xe6cb, 0x3e99, 0xd640, 0xc405, 0x5f32, 0xcd87, 0x1, 0x0);
        gbc.writeMem(0xcd87, { 0x44 });
        gbc.writeMem(0xe6cb, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3e99, gbc.sp());
        EXPECT(0xe6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcd87));
        EXPECT(0xcb, gbc.readMem(0xe6cb));
        EXPECT(0x4e, gbc.readMem(0xe6cc));
        // CB 4E 0289
        gbc.setState(0x7406, 0x8d73, 0x7200, 0xf77c, 0x744c, 0x2d0f, 0x1, 0x0);
        gbc.writeMem(0x2d0f, { 0xeb });
        gbc.writeMem(0x7406, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8d73, gbc.sp());
        EXPECT(0x7408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 028A
        gbc.setState(0x89b7, 0x90d6, 0x72d0, 0xa436, 0x8c30, 0xf74, 0x1, 0x0);
        gbc.writeMem(0xf74, { 0xe3 });
        gbc.writeMem(0x89b7, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x90d6, gbc.sp());
        EXPECT(0x89b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b7));
        EXPECT(0x4e, gbc.readMem(0x89b8));
        // CB 4E 028B
        gbc.setState(0x69bd, 0xac0e, 0x4fc0, 0x3358, 0x5a64, 0x2db3, 0x1, 0x1);
        gbc.writeMem(0x2db3, { 0x36 });
        gbc.writeMem(0x69bd, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xac0e, gbc.sp());
        EXPECT(0x69bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 028C
        gbc.setState(0xef97, 0x6c05, 0x8e00, 0x3879, 0x61e5, 0x5a04, 0x0, 0x1);
        gbc.writeMem(0x5a04, { 0xde });
        gbc.writeMem(0xef97, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6c05, gbc.sp());
        EXPECT(0xef99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef97));
        EXPECT(0x4e, gbc.readMem(0xef98));
        // CB 4E 028D
        gbc.setState(0x79bf, 0x15e, 0xd630, 0x8b13, 0x1dea, 0xec18, 0x1, 0x1);
        gbc.writeMem(0x79bf, { 0xcb, 0x4e });
        gbc.writeMem(0xec18, { 0xf0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x15e, gbc.sp());
        EXPECT(0x79c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xec18));
        // CB 4E 028E
        gbc.setState(0x291d, 0xee92, 0x79c0, 0x7fc6, 0x1f48, 0x8af0, 0x0, 0x1);
        gbc.writeMem(0x291d, { 0xcb, 0x4e });
        gbc.writeMem(0x8af0, { 0x40 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xee92, gbc.sp());
        EXPECT(0x291f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8af0));
        // CB 4E 028F
        gbc.setState(0x6998, 0x6, 0xc3f0, 0x53af, 0xe04c, 0xd2a5, 0x0, 0x0);
        gbc.writeMem(0x6998, { 0xcb, 0x4e });
        gbc.writeMem(0xd2a5, { 0xc0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6, gbc.sp());
        EXPECT(0x699a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xd2a5));
        // CB 4E 0290
        gbc.setState(0x8f9e, 0xcee8, 0xee90, 0x9a3e, 0xf0e, 0xc04c, 0x0, 0x0);
        gbc.writeMem(0x8f9e, { 0xcb, 0x4e });
        gbc.writeMem(0xc04c, { 0x37 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcee8, gbc.sp());
        EXPECT(0x8fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f9e));
        EXPECT(0x4e, gbc.readMem(0x8f9f));
        EXPECT(0x37, gbc.readMem(0xc04c));
        // CB 4E 0291
        gbc.setState(0x5a80, 0xb40a, 0x3a70, 0x929a, 0xade7, 0x7ff2, 0x1, 0x0);
        gbc.writeMem(0x5a80, { 0xcb, 0x4e });
        gbc.writeMem(0x7ff2, { 0x36 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb40a, gbc.sp());
        EXPECT(0x5a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0292
        gbc.setState(0x113, 0x6f25, 0xa8c0, 0x51f6, 0x74ba, 0xdb41, 0x1, 0x1);
        gbc.writeMem(0x113, { 0xcb, 0x4e });
        gbc.writeMem(0xdb41, { 0xfc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6f25, gbc.sp());
        EXPECT(0x115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xdb41));
        // CB 4E 0293
        gbc.setState(0xc0be, 0xc4d7, 0xd280, 0xebb1, 0x5490, 0x5b71, 0x0, 0x1);
        gbc.writeMem(0x5b71, { 0x2a });
        gbc.writeMem(0xc0be, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc4d7, gbc.sp());
        EXPECT(0xc0c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0be));
        EXPECT(0x4e, gbc.readMem(0xc0bf));
        // CB 4E 0294
        gbc.setState(0x6c43, 0xfe19, 0xcd60, 0x375a, 0x5d76, 0x2a31, 0x0, 0x1);
        gbc.writeMem(0x2a31, { 0x27 });
        gbc.writeMem(0x6c43, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfe19, gbc.sp());
        EXPECT(0x6c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0295
        gbc.setState(0xddc, 0xcd11, 0xe690, 0x71a9, 0x982a, 0xb07, 0x0, 0x1);
        gbc.writeMem(0xb07, { 0xe9 });
        gbc.writeMem(0xddc, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcd11, gbc.sp());
        EXPECT(0xdde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0296
        gbc.setState(0x25ab, 0x4f47, 0x23d0, 0x49ea, 0x260f, 0x9115, 0x0, 0x1);
        gbc.writeMem(0x25ab, { 0xcb, 0x4e });
        gbc.writeMem(0x9115, { 0xe5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4f47, gbc.sp());
        EXPECT(0x25ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9115));
        // CB 4E 0297
        gbc.setState(0xcc77, 0x140f, 0x8d0, 0x3cf1, 0xd32c, 0xcca5, 0x1, 0x1);
        gbc.writeMem(0xcc77, { 0xcb, 0x4e });
        gbc.writeMem(0xcca5, { 0xbd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x140f, gbc.sp());
        EXPECT(0xcc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc77));
        EXPECT(0x4e, gbc.readMem(0xcc78));
        EXPECT(0xbd, gbc.readMem(0xcca5));
        // CB 4E 0298
        gbc.setState(0xfc9, 0xa4ea, 0xd210, 0xc18e, 0x9faa, 0x21eb, 0x1, 0x1);
        gbc.writeMem(0xfc9, { 0xcb, 0x4e });
        gbc.writeMem(0x21eb, { 0xfb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa4ea, gbc.sp());
        EXPECT(0xfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0299
        gbc.setState(0x89e8, 0x8dc7, 0x6bd0, 0x6908, 0x799, 0x5df7, 0x0, 0x1);
        gbc.writeMem(0x5df7, { 0x8f });
        gbc.writeMem(0x89e8, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8dc7, gbc.sp());
        EXPECT(0x89ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e8));
        EXPECT(0x4e, gbc.readMem(0x89e9));
        // CB 4E 029A
        gbc.setState(0xc6f9, 0xb7f2, 0xb650, 0xae63, 0x20c8, 0x8eb5, 0x1, 0x0);
        gbc.writeMem(0x8eb5, { 0xbe });
        gbc.writeMem(0xc6f9, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb7f2, gbc.sp());
        EXPECT(0xc6fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x8eb5));
        EXPECT(0xcb, gbc.readMem(0xc6f9));
        EXPECT(0x4e, gbc.readMem(0xc6fa));
        // CB 4E 029B
        gbc.setState(0x427c, 0xb200, 0xa80, 0x37f1, 0x3ad5, 0xcab7, 0x0, 0x1);
        gbc.writeMem(0x427c, { 0xcb, 0x4e });
        gbc.writeMem(0xcab7, { 0xb1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb200, gbc.sp());
        EXPECT(0x427e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xcab7));
        // CB 4E 029C
        gbc.setState(0x1721, 0x18b2, 0x1080, 0xbcd8, 0xbc69, 0x4de0, 0x0, 0x0);
        gbc.writeMem(0x1721, { 0xcb, 0x4e });
        gbc.writeMem(0x4de0, { 0x57 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x18b2, gbc.sp());
        EXPECT(0x1723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 029D
        gbc.setState(0x21af, 0xda33, 0x2a40, 0x3394, 0xb8cd, 0x4e, 0x0, 0x1);
        gbc.writeMem(0x4e, { 0x5e });
        gbc.writeMem(0x21af, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xda33, gbc.sp());
        EXPECT(0x21b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 029F
        gbc.setState(0xda6a, 0x3882, 0xc680, 0x8787, 0xd45, 0xde28, 0x1, 0x1);
        gbc.writeMem(0xda6a, { 0xcb, 0x4e });
        gbc.writeMem(0xde28, { 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3882, gbc.sp());
        EXPECT(0xda6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda6a));
        EXPECT(0x4e, gbc.readMem(0xda6b));
        EXPECT(0x2f, gbc.readMem(0xde28));
        // CB 4E 02A0
        gbc.setState(0x5b4b, 0x83ac, 0x7ce0, 0x484a, 0x9fde, 0xb3a0, 0x0, 0x1);
        gbc.writeMem(0x5b4b, { 0xcb, 0x4e });
        gbc.writeMem(0xb3a0, { 0x49 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x83ac, gbc.sp());
        EXPECT(0x5b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb3a0));
        // CB 4E 02A1
        gbc.setState(0x7a89, 0xdc16, 0x3c50, 0x9f71, 0x8438, 0xa6ff, 0x0, 0x0);
        gbc.writeMem(0x7a89, { 0xcb, 0x4e });
        gbc.writeMem(0xa6ff, { 0x84 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdc16, gbc.sp());
        EXPECT(0x7a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xa6ff));
        // CB 4E 02A3
        gbc.setState(0xe6cc, 0x6c83, 0x9400, 0x3947, 0x2e72, 0x1748, 0x0, 0x1);
        gbc.writeMem(0x1748, { 0xa2 });
        gbc.writeMem(0xe6cc, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6c83, gbc.sp());
        EXPECT(0xe6ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6cc));
        EXPECT(0x4e, gbc.readMem(0xe6cd));
        // CB 4E 02A4
        gbc.setState(0x6d23, 0xa4d, 0x2a60, 0x91b5, 0xdd7e, 0xbbfa, 0x1, 0x0);
        gbc.writeMem(0x6d23, { 0xcb, 0x4e });
        gbc.writeMem(0xbbfa, { 0x14 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa4d, gbc.sp());
        EXPECT(0x6d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbbfa));
        // CB 4E 02A5
        gbc.setState(0xd0d4, 0xd068, 0x7700, 0x7271, 0x37b0, 0x4071, 0x0, 0x0);
        gbc.writeMem(0x4071, { 0xb4 });
        gbc.writeMem(0xd0d4, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd068, gbc.sp());
        EXPECT(0xd0d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d4));
        EXPECT(0x4e, gbc.readMem(0xd0d5));
        // CB 4E 02A6
        gbc.setState(0x396c, 0x657, 0x1a50, 0xeea3, 0xe6c3, 0xd0e3, 0x0, 0x1);
        gbc.writeMem(0x396c, { 0xcb, 0x4e });
        gbc.writeMem(0xd0e3, { 0x4f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x657, gbc.sp());
        EXPECT(0x396e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xd0e3));
        // CB 4E 02A7
        gbc.setState(0x57f9, 0x84d2, 0x26a0, 0x5b12, 0x52c7, 0xe606, 0x0, 0x1);
        gbc.writeMem(0x57f9, { 0xcb, 0x4e });
        gbc.writeMem(0xe606, { 0xb0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x84d2, gbc.sp());
        EXPECT(0x57fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe606));
        // CB 4E 02A8
        gbc.setState(0x1d10, 0x73b7, 0x4330, 0x5dac, 0xae75, 0xb642, 0x1, 0x0);
        gbc.writeMem(0x1d10, { 0xcb, 0x4e });
        gbc.writeMem(0xb642, { 0x26 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x73b7, gbc.sp());
        EXPECT(0x1d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb642));
        // CB 4E 02A9
        gbc.setState(0x740e, 0xba0b, 0x6cb0, 0x4b10, 0x3313, 0x745a, 0x1, 0x0);
        gbc.writeMem(0x740e, { 0xcb, 0x4e });
        gbc.writeMem(0x745a, { 0x9f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xba0b, gbc.sp());
        EXPECT(0x7410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 02AA
        gbc.setState(0x9d3d, 0xa2f0, 0x8cf0, 0x88b7, 0x86af, 0x8e1c, 0x1, 0x1);
        gbc.writeMem(0x8e1c, { 0x56 });
        gbc.writeMem(0x9d3d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa2f0, gbc.sp());
        EXPECT(0x9d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8e1c));
        EXPECT(0xcb, gbc.readMem(0x9d3d));
        EXPECT(0x4e, gbc.readMem(0x9d3e));
        // CB 4E 02AB
        gbc.setState(0xbce1, 0x7703, 0xe640, 0x1abf, 0xf82c, 0x22f1, 0x1, 0x0);
        gbc.writeMem(0x22f1, { 0xc8 });
        gbc.writeMem(0xbce1, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7703, gbc.sp());
        EXPECT(0xbce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce1));
        EXPECT(0x4e, gbc.readMem(0xbce2));
        // CB 4E 02AC
        gbc.setState(0xbb01, 0xde38, 0x3770, 0xda46, 0x5fa8, 0x2f5b, 0x1, 0x0);
        gbc.writeMem(0x2f5b, { 0xfa });
        gbc.writeMem(0xbb01, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xde38, gbc.sp());
        EXPECT(0xbb03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb01));
        EXPECT(0x4e, gbc.readMem(0xbb02));
        // CB 4E 02AD
        gbc.setState(0x8834, 0x807a, 0x4500, 0x69a4, 0x3c61, 0x41f, 0x0, 0x0);
        gbc.writeMem(0x41f, { 0xf5 });
        gbc.writeMem(0x8834, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x807a, gbc.sp());
        EXPECT(0x8836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8834));
        EXPECT(0x4e, gbc.readMem(0x8835));
        // CB 4E 02AE
        gbc.setState(0x234e, 0xf3d9, 0xb590, 0x6eb9, 0xd721, 0x40ac, 0x1, 0x1);
        gbc.writeMem(0x234e, { 0xcb, 0x4e });
        gbc.writeMem(0x40ac, { 0xa6 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf3d9, gbc.sp());
        EXPECT(0x2350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 02AF
        gbc.setState(0xc1, 0xb59c, 0xbae0, 0xaa90, 0xf27b, 0xcff0, 0x1, 0x1);
        gbc.writeMem(0xc1, { 0xcb, 0x4e });
        gbc.writeMem(0xcff0, { 0x4b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb59c, gbc.sp());
        EXPECT(0xc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcff0));
        // CB 4E 02B0
        gbc.setState(0x3093, 0x5d10, 0x1c30, 0xfd27, 0xc39, 0xa2dd, 0x1, 0x0);
        gbc.writeMem(0x3093, { 0xcb, 0x4e });
        gbc.writeMem(0xa2dd, { 0x3d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5d10, gbc.sp());
        EXPECT(0x3095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xa2dd));
        // CB 4E 02B1
        gbc.setState(0x47f1, 0x2af9, 0xe8a0, 0xefd0, 0x308b, 0xf444, 0x1, 0x1);
        gbc.writeMem(0x47f1, { 0xcb, 0x4e });
        gbc.writeMem(0xf444, { 0x7c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2af9, gbc.sp());
        EXPECT(0x47f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xf444));
        // CB 4E 02B2
        gbc.setState(0x2700, 0xf70e, 0x5470, 0x4f7b, 0x5e68, 0x1bf4, 0x0, 0x1);
        gbc.writeMem(0x1bf4, { 0x10 });
        gbc.writeMem(0x2700, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf70e, gbc.sp());
        EXPECT(0x2702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 02B3
        gbc.setState(0x72b7, 0xcaaf, 0x6510, 0xc089, 0x389c, 0x3e38, 0x0, 0x1);
        gbc.writeMem(0x3e38, { 0x7f });
        gbc.writeMem(0x72b7, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcaaf, gbc.sp());
        EXPECT(0x72b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 02B4
        gbc.setState(0x7f06, 0x16fd, 0x2600, 0xb5df, 0x11b3, 0xb74d, 0x1, 0x1);
        gbc.writeMem(0x7f06, { 0xcb, 0x4e });
        gbc.writeMem(0xb74d, { 0xd9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x16fd, gbc.sp());
        EXPECT(0x7f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb74d));
        // CB 4E 02B5
        gbc.setState(0xcb91, 0x43b9, 0x57d0, 0xd2d5, 0xf033, 0x926f, 0x1, 0x0);
        gbc.writeMem(0x926f, { 0xef });
        gbc.writeMem(0xcb91, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x43b9, gbc.sp());
        EXPECT(0xcb93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x926f));
        EXPECT(0xcb, gbc.readMem(0xcb91));
        EXPECT(0x4e, gbc.readMem(0xcb92));
        // CB 4E 02B6
        gbc.setState(0xc4a2, 0xd338, 0x7e00, 0x8b7b, 0xe2f, 0x7ba2, 0x1, 0x1);
        gbc.writeMem(0x7ba2, { 0x3 });
        gbc.writeMem(0xc4a2, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd338, gbc.sp());
        EXPECT(0xc4a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a2));
        EXPECT(0x4e, gbc.readMem(0xc4a3));
        // CB 4E 02B7
        gbc.setState(0x797f, 0xab49, 0x8640, 0xbfcd, 0x1c28, 0x6f34, 0x1, 0x0);
        gbc.writeMem(0x6f34, { 0x15 });
        gbc.writeMem(0x797f, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xab49, gbc.sp());
        EXPECT(0x7981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 02B8
        gbc.setState(0xee3b, 0xcffe, 0x6ca0, 0xef8e, 0xcb67, 0xb72c, 0x1, 0x1);
        gbc.writeMem(0xb72c, { 0xbf });
        gbc.writeMem(0xee3b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcffe, gbc.sp());
        EXPECT(0xee3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb72c));
        EXPECT(0xcb, gbc.readMem(0xee3b));
        EXPECT(0x4e, gbc.readMem(0xee3c));
        // CB 4E 02B9
        gbc.setState(0xe38a, 0x23a9, 0x3ae0, 0xea04, 0x3b61, 0xd6c, 0x1, 0x1);
        gbc.writeMem(0xd6c, { 0xec });
        gbc.writeMem(0xe38a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x23a9, gbc.sp());
        EXPECT(0xe38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe38a));
        EXPECT(0x4e, gbc.readMem(0xe38b));
        // CB 4E 02BA
        gbc.setState(0x36fe, 0xfe43, 0x4400, 0xf38f, 0x6cf9, 0x830c, 0x0, 0x1);
        gbc.writeMem(0x36fe, { 0xcb, 0x4e });
        gbc.writeMem(0x830c, { 0x8e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfe43, gbc.sp());
        EXPECT(0x3700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x830c));
        // CB 4E 02BB
        gbc.setState(0x28dc, 0x1aac, 0x76b0, 0x2d8d, 0xa97b, 0xfaa2, 0x0, 0x1);
        gbc.writeMem(0x28dc, { 0xcb, 0x4e });
        gbc.writeMem(0xfaa2, { 0xdb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1aac, gbc.sp());
        EXPECT(0x28de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xfaa2));
        // CB 4E 02BC
        gbc.setState(0x5d84, 0xa3a, 0x4f0, 0x1891, 0x8b28, 0x7868, 0x1, 0x1);
        gbc.writeMem(0x5d84, { 0xcb, 0x4e });
        gbc.writeMem(0x7868, { 0x59 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa3a, gbc.sp());
        EXPECT(0x5d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 02BD
        gbc.setState(0x602e, 0x21a4, 0xb8d0, 0x5894, 0xa74a, 0x3fca, 0x1, 0x0);
        gbc.writeMem(0x3fca, { 0x2b });
        gbc.writeMem(0x602e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x21a4, gbc.sp());
        EXPECT(0x6030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 02BE
        gbc.setState(0xead9, 0xdda7, 0xda40, 0x780e, 0x7e5c, 0x9593, 0x0, 0x1);
        gbc.writeMem(0x9593, { 0xda });
        gbc.writeMem(0xead9, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdda7, gbc.sp());
        EXPECT(0xeadb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9593));
        EXPECT(0xcb, gbc.readMem(0xead9));
        EXPECT(0x4e, gbc.readMem(0xeada));
        // CB 4E 02C0
        gbc.setState(0xeed2, 0x382, 0x4310, 0x8d08, 0xe306, 0x3da4, 0x1, 0x0);
        gbc.writeMem(0x3da4, { 0xe0 });
        gbc.writeMem(0xeed2, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x382, gbc.sp());
        EXPECT(0xeed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed2));
        EXPECT(0x4e, gbc.readMem(0xeed3));
        // CB 4E 02C1
        gbc.setState(0x984d, 0xfaf4, 0x50a0, 0xf5cd, 0xf06f, 0x25de, 0x1, 0x0);
        gbc.writeMem(0x25de, { 0x5f });
        gbc.writeMem(0x984d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfaf4, gbc.sp());
        EXPECT(0x984f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984d));
        EXPECT(0x4e, gbc.readMem(0x984e));
        // CB 4E 02C3
        gbc.setState(0xef9c, 0xbf23, 0x29a0, 0xa71c, 0x1fda, 0xae03, 0x0, 0x0);
        gbc.writeMem(0xae03, { 0x74 });
        gbc.writeMem(0xef9c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbf23, gbc.sp());
        EXPECT(0xef9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xae03));
        EXPECT(0xcb, gbc.readMem(0xef9c));
        EXPECT(0x4e, gbc.readMem(0xef9d));
        // CB 4E 02C5
        gbc.setState(0x31f4, 0x1c2c, 0x6920, 0x75ac, 0x2bc1, 0x523e, 0x0, 0x0);
        gbc.writeMem(0x31f4, { 0xcb, 0x4e });
        gbc.writeMem(0x523e, { 0xaf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1c2c, gbc.sp());
        EXPECT(0x31f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 02C6
        gbc.setState(0x80a2, 0x1bd7, 0x25e0, 0xb1f4, 0x12b0, 0xd8ee, 0x1, 0x0);
        gbc.writeMem(0x80a2, { 0xcb, 0x4e });
        gbc.writeMem(0xd8ee, { 0x41 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1bd7, gbc.sp());
        EXPECT(0x80a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a2));
        EXPECT(0x4e, gbc.readMem(0x80a3));
        EXPECT(0x41, gbc.readMem(0xd8ee));
        // CB 4E 02C7
        gbc.setState(0x6c5b, 0x4f1, 0xd390, 0x3c2d, 0x90f4, 0xbcf6, 0x0, 0x0);
        gbc.writeMem(0x6c5b, { 0xcb, 0x4e });
        gbc.writeMem(0xbcf6, { 0xda });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4f1, gbc.sp());
        EXPECT(0x6c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbcf6));
        // CB 4E 02C9
        gbc.setState(0x9236, 0xae65, 0x7e90, 0xe1be, 0xe990, 0x6015, 0x0, 0x0);
        gbc.writeMem(0x6015, { 0x1d });
        gbc.writeMem(0x9236, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xae65, gbc.sp());
        EXPECT(0x9238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9236));
        EXPECT(0x4e, gbc.readMem(0x9237));
        // CB 4E 02CA
        gbc.setState(0x5d8, 0x9daa, 0x77a0, 0xae1b, 0xf42a, 0x8235, 0x0, 0x0);
        gbc.writeMem(0x5d8, { 0xcb, 0x4e });
        gbc.writeMem(0x8235, { 0x48 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9daa, gbc.sp());
        EXPECT(0x5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8235));
        // CB 4E 02CC
        gbc.setState(0xa3e9, 0x2b42, 0x72d0, 0x626c, 0xe678, 0xb021, 0x1, 0x1);
        gbc.writeMem(0xa3e9, { 0xcb, 0x4e });
        gbc.writeMem(0xb021, { 0x68 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2b42, gbc.sp());
        EXPECT(0xa3eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e9));
        EXPECT(0x4e, gbc.readMem(0xa3ea));
        EXPECT(0x68, gbc.readMem(0xb021));
        // CB 4E 02CD
        gbc.setState(0xc4bc, 0x1c07, 0x3720, 0x248f, 0x73c7, 0x3fa9, 0x1, 0x1);
        gbc.writeMem(0x3fa9, { 0xc7 });
        gbc.writeMem(0xc4bc, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1c07, gbc.sp());
        EXPECT(0xc4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4bc));
        EXPECT(0x4e, gbc.readMem(0xc4bd));
        // CB 4E 02CE
        gbc.setState(0xc28a, 0x430f, 0x1b10, 0x88cc, 0xac64, 0x5ff4, 0x0, 0x1);
        gbc.writeMem(0x5ff4, { 0x51 });
        gbc.writeMem(0xc28a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x430f, gbc.sp());
        EXPECT(0xc28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc28a));
        EXPECT(0x4e, gbc.readMem(0xc28b));
        // CB 4E 02CF
        gbc.setState(0x61d1, 0x3f96, 0x340, 0xf80e, 0xce64, 0xd7a7, 0x0, 0x0);
        gbc.writeMem(0x61d1, { 0xcb, 0x4e });
        gbc.writeMem(0xd7a7, { 0xfb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3f96, gbc.sp());
        EXPECT(0x61d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xd7a7));
        // CB 4E 02D0
        gbc.setState(0x3041, 0xb6e9, 0xfce0, 0x8e42, 0xf810, 0xde99, 0x1, 0x0);
        gbc.writeMem(0x3041, { 0xcb, 0x4e });
        gbc.writeMem(0xde99, { 0xf9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb6e9, gbc.sp());
        EXPECT(0x3043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xde99));
        // CB 4E 02D1
        gbc.setState(0xa689, 0xc7fe, 0xdb80, 0xdf41, 0x4bc1, 0x7ffe, 0x1, 0x0);
        gbc.writeMem(0x7ffe, { 0x33 });
        gbc.writeMem(0xa689, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc7fe, gbc.sp());
        EXPECT(0xa68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa689));
        EXPECT(0x4e, gbc.readMem(0xa68a));
        // CB 4E 02D2
        gbc.setState(0x5620, 0x58a2, 0xd360, 0x7d1a, 0x51eb, 0x36fb, 0x0, 0x0);
        gbc.writeMem(0x36fb, { 0x3d });
        gbc.writeMem(0x5620, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x58a2, gbc.sp());
        EXPECT(0x5622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 02D3
        gbc.setState(0xe30, 0x8a95, 0xd2b0, 0x86bb, 0xafec, 0xabe2, 0x1, 0x1);
        gbc.writeMem(0xe30, { 0xcb, 0x4e });
        gbc.writeMem(0xabe2, { 0x77 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8a95, gbc.sp());
        EXPECT(0xe32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xabe2));
        // CB 4E 02D4
        gbc.setState(0xd231, 0xb6ad, 0xff00, 0x890c, 0xaeef, 0x8561, 0x0, 0x1);
        gbc.writeMem(0x8561, { 0xe3 });
        gbc.writeMem(0xd231, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb6ad, gbc.sp());
        EXPECT(0xd233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x8561));
        EXPECT(0xcb, gbc.readMem(0xd231));
        EXPECT(0x4e, gbc.readMem(0xd232));
        // CB 4E 02D5
        gbc.setState(0xb2f5, 0x3be2, 0x3cd0, 0xcc1d, 0x621d, 0x288, 0x1, 0x1);
        gbc.writeMem(0x288, { 0x85 });
        gbc.writeMem(0xb2f5, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3be2, gbc.sp());
        EXPECT(0xb2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f5));
        EXPECT(0x4e, gbc.readMem(0xb2f6));
        // CB 4E 02D6
        gbc.setState(0xbc2e, 0x9d2f, 0x2820, 0xe78e, 0x1ed3, 0xc406, 0x0, 0x0);
        gbc.writeMem(0xbc2e, { 0xcb, 0x4e });
        gbc.writeMem(0xc406, { 0x67 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9d2f, gbc.sp());
        EXPECT(0xbc30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2e));
        EXPECT(0x4e, gbc.readMem(0xbc2f));
        EXPECT(0x67, gbc.readMem(0xc406));
        // CB 4E 02D7
        gbc.setState(0x110d, 0x8dc8, 0x99d0, 0xdfa0, 0xb927, 0x4f3e, 0x1, 0x1);
        gbc.writeMem(0x110d, { 0xcb, 0x4e });
        gbc.writeMem(0x4f3e, { 0x90 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8dc8, gbc.sp());
        EXPECT(0x110f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 02D8
        gbc.setState(0x858f, 0xf8c3, 0x5570, 0xbd1d, 0x8812, 0x64e8, 0x1, 0x1);
        gbc.writeMem(0x64e8, { 0x69 });
        gbc.writeMem(0x858f, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf8c3, gbc.sp());
        EXPECT(0x8591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858f));
        EXPECT(0x4e, gbc.readMem(0x8590));
        // CB 4E 02D9
        gbc.setState(0x2504, 0xe6d1, 0xc90, 0xa0e7, 0x4d38, 0x449, 0x0, 0x0);
        gbc.writeMem(0x449, { 0x2c });
        gbc.writeMem(0x2504, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe6d1, gbc.sp());
        EXPECT(0x2506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 02DA
        gbc.setState(0x4daa, 0x4c99, 0xb200, 0xcb0d, 0x19d, 0xa9ce, 0x0, 0x0);
        gbc.writeMem(0x4daa, { 0xcb, 0x4e });
        gbc.writeMem(0xa9ce, { 0xa4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4c99, gbc.sp());
        EXPECT(0x4dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa9ce));
        // CB 4E 02DB
        gbc.setState(0xd13c, 0x211a, 0xbf40, 0x3ef0, 0xa3ec, 0xe573, 0x0, 0x1);
        gbc.writeMem(0xd13c, { 0xcb, 0x4e });
        gbc.writeMem(0xe573, { 0x6f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x211a, gbc.sp());
        EXPECT(0xd13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd13c));
        EXPECT(0x4e, gbc.readMem(0xd13d));
        EXPECT(0x6f, gbc.readMem(0xe573));
        // CB 4E 02DC
        gbc.setState(0xd947, 0xb734, 0x6450, 0x6d9, 0xa7b8, 0x7229, 0x0, 0x0);
        gbc.writeMem(0x7229, { 0x8 });
        gbc.writeMem(0xd947, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb734, gbc.sp());
        EXPECT(0xd949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd947));
        EXPECT(0x4e, gbc.readMem(0xd948));
        // CB 4E 02DD
        gbc.setState(0xcf2d, 0xe829, 0xbe40, 0x940e, 0x78c3, 0x1678, 0x0, 0x0);
        gbc.writeMem(0x1678, { 0x9a });
        gbc.writeMem(0xcf2d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe829, gbc.sp());
        EXPECT(0xcf2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2d));
        EXPECT(0x4e, gbc.readMem(0xcf2e));
        // CB 4E 02DE
        gbc.setState(0x3ddf, 0xd177, 0x4160, 0xbed0, 0xa7c8, 0x5166, 0x1, 0x1);
        gbc.writeMem(0x3ddf, { 0xcb, 0x4e });
        gbc.writeMem(0x5166, { 0xd8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd177, gbc.sp());
        EXPECT(0x3de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 02DF
        gbc.setState(0xad25, 0xed99, 0xb0b0, 0xdc10, 0x3094, 0x9199, 0x1, 0x1);
        gbc.writeMem(0x9199, { 0x8d });
        gbc.writeMem(0xad25, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xed99, gbc.sp());
        EXPECT(0xad27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9199));
        EXPECT(0xcb, gbc.readMem(0xad25));
        EXPECT(0x4e, gbc.readMem(0xad26));
        // CB 4E 02E0
        gbc.setState(0x7c6c, 0xbd47, 0x8d30, 0xd28f, 0xf026, 0x2d13, 0x1, 0x1);
        gbc.writeMem(0x2d13, { 0x71 });
        gbc.writeMem(0x7c6c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbd47, gbc.sp());
        EXPECT(0x7c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 02E1
        gbc.setState(0x9677, 0xa4a8, 0x8c80, 0x50ea, 0xfe7a, 0x69bf, 0x1, 0x1);
        gbc.writeMem(0x69bf, { 0x28 });
        gbc.writeMem(0x9677, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa4a8, gbc.sp());
        EXPECT(0x9679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9677));
        EXPECT(0x4e, gbc.readMem(0x9678));
        // CB 4E 02E2
        gbc.setState(0x6d23, 0xf70, 0x9150, 0xe763, 0x579f, 0x7e8a, 0x0, 0x1);
        gbc.writeMem(0x6d23, { 0xcb, 0x4e });
        gbc.writeMem(0x7e8a, { 0x94 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf70, gbc.sp());
        EXPECT(0x6d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 02E3
        gbc.setState(0x6fe0, 0xb3a2, 0xc420, 0x7cd9, 0x64db, 0xb7fd, 0x1, 0x1);
        gbc.writeMem(0x6fe0, { 0xcb, 0x4e });
        gbc.writeMem(0xb7fd, { 0x45 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb3a2, gbc.sp());
        EXPECT(0x6fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xb7fd));
        // CB 4E 02E4
        gbc.setState(0x2727, 0x2a46, 0xbe60, 0x809c, 0xc882, 0xae59, 0x1, 0x1);
        gbc.writeMem(0x2727, { 0xcb, 0x4e });
        gbc.writeMem(0xae59, { 0xf7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2a46, gbc.sp());
        EXPECT(0x2729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xae59));
        // CB 4E 02E5
        gbc.setState(0x3915, 0x4af1, 0x3680, 0x9de, 0x82c8, 0xc7c7, 0x0, 0x1);
        gbc.writeMem(0x3915, { 0xcb, 0x4e });
        gbc.writeMem(0xc7c7, { 0xd1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4af1, gbc.sp());
        EXPECT(0x3917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xc7c7));
        // CB 4E 02E6
        gbc.setState(0x863d, 0x2290, 0x2910, 0xe66c, 0xabcb, 0x1b22, 0x1, 0x0);
        gbc.writeMem(0x1b22, { 0xb8 });
        gbc.writeMem(0x863d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2290, gbc.sp());
        EXPECT(0x863f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863d));
        EXPECT(0x4e, gbc.readMem(0x863e));
        // CB 4E 02E8
        gbc.setState(0xa0b2, 0xd4c5, 0x840, 0xac1b, 0x2145, 0xb827, 0x0, 0x0);
        gbc.writeMem(0xa0b2, { 0xcb, 0x4e });
        gbc.writeMem(0xb827, { 0xf5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd4c5, gbc.sp());
        EXPECT(0xa0b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b2));
        EXPECT(0x4e, gbc.readMem(0xa0b3));
        EXPECT(0xf5, gbc.readMem(0xb827));
        // CB 4E 02E9
        gbc.setState(0x6ae0, 0xaa7f, 0xe8a0, 0x5bbd, 0xad86, 0x4609, 0x1, 0x0);
        gbc.writeMem(0x4609, { 0x7d });
        gbc.writeMem(0x6ae0, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xaa7f, gbc.sp());
        EXPECT(0x6ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 02EA
        gbc.setState(0x801f, 0xc496, 0x48f0, 0xe291, 0x86c0, 0xf463, 0x1, 0x1);
        gbc.writeMem(0x801f, { 0xcb, 0x4e });
        gbc.writeMem(0xf463, { 0x1f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc496, gbc.sp());
        EXPECT(0x8021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801f));
        EXPECT(0x4e, gbc.readMem(0x8020));
        EXPECT(0x1f, gbc.readMem(0xf463));
        // CB 4E 02EC
        gbc.setState(0x399f, 0xf3ce, 0x72d0, 0x71cb, 0xae1f, 0xe233, 0x1, 0x0);
        gbc.writeMem(0x399f, { 0xcb, 0x4e });
        gbc.writeMem(0xe233, { 0x3c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf3ce, gbc.sp());
        EXPECT(0x39a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe233));
        // CB 4E 02EE
        gbc.setState(0xb735, 0xbef4, 0x4040, 0xaf5a, 0x8081, 0xd1a, 0x0, 0x1);
        gbc.writeMem(0xd1a, { 0x44 });
        gbc.writeMem(0xb735, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbef4, gbc.sp());
        EXPECT(0xb737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb735));
        EXPECT(0x4e, gbc.readMem(0xb736));
        // CB 4E 02EF
        gbc.setState(0xd20d, 0x7032, 0xd510, 0x8cc, 0xf314, 0x2eb1, 0x0, 0x0);
        gbc.writeMem(0x2eb1, { 0x8a });
        gbc.writeMem(0xd20d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7032, gbc.sp());
        EXPECT(0xd20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20d));
        EXPECT(0x4e, gbc.readMem(0xd20e));
        // CB 4E 02F0
        gbc.setState(0x8a11, 0x20f5, 0xaab0, 0xd02e, 0xcc16, 0x455d, 0x0, 0x0);
        gbc.writeMem(0x455d, { 0x29 });
        gbc.writeMem(0x8a11, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x20f5, gbc.sp());
        EXPECT(0x8a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a11));
        EXPECT(0x4e, gbc.readMem(0x8a12));
        // CB 4E 02F2
        gbc.setState(0x64f2, 0x4998, 0x3660, 0x69d5, 0xd769, 0xc94e, 0x0, 0x0);
        gbc.writeMem(0x64f2, { 0xcb, 0x4e });
        gbc.writeMem(0xc94e, { 0x5b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4998, gbc.sp());
        EXPECT(0x64f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc94e));
        // CB 4E 02F3
        gbc.setState(0xbc34, 0xf234, 0x4a0, 0x4450, 0x3a9e, 0xe1, 0x0, 0x1);
        gbc.writeMem(0xe1, { 0xba });
        gbc.writeMem(0xbc34, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf234, gbc.sp());
        EXPECT(0xbc36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc34));
        EXPECT(0x4e, gbc.readMem(0xbc35));
        // CB 4E 02F4
        gbc.setState(0x5059, 0x4644, 0x48f0, 0x6263, 0xed81, 0xbeca, 0x0, 0x1);
        gbc.writeMem(0x5059, { 0xcb, 0x4e });
        gbc.writeMem(0xbeca, { 0x96 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4644, gbc.sp());
        EXPECT(0x505b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xbeca));
        // CB 4E 02F5
        gbc.setState(0x7e8a, 0x22f2, 0x50e0, 0x9935, 0x765, 0xa54d, 0x1, 0x0);
        gbc.writeMem(0x7e8a, { 0xcb, 0x4e });
        gbc.writeMem(0xa54d, { 0xd3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x22f2, gbc.sp());
        EXPECT(0x7e8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xa54d));
        // CB 4E 02F6
        gbc.setState(0x4987, 0x33de, 0x2360, 0x496c, 0x21f2, 0xa07, 0x1, 0x0);
        gbc.writeMem(0xa07, { 0x6f });
        gbc.writeMem(0x4987, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x33de, gbc.sp());
        EXPECT(0x4989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 02F7
        gbc.setState(0x80e2, 0xce1a, 0xb140, 0x8d88, 0x5026, 0x6d7a, 0x1, 0x1);
        gbc.writeMem(0x6d7a, { 0x23 });
        gbc.writeMem(0x80e2, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xce1a, gbc.sp());
        EXPECT(0x80e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e2));
        EXPECT(0x4e, gbc.readMem(0x80e3));
        // CB 4E 02F9
        gbc.setState(0x13ee, 0xbd89, 0x7a80, 0xa669, 0xbe55, 0xc15f, 0x0, 0x0);
        gbc.writeMem(0x13ee, { 0xcb, 0x4e });
        gbc.writeMem(0xc15f, { 0x4c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbd89, gbc.sp());
        EXPECT(0x13f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc15f));
        // CB 4E 02FA
        gbc.setState(0x27fd, 0x4eab, 0x74d0, 0x17b3, 0xb29f, 0x28c8, 0x0, 0x0);
        gbc.writeMem(0x27fd, { 0xcb, 0x4e });
        gbc.writeMem(0x28c8, { 0x9f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4eab, gbc.sp());
        EXPECT(0x27ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 02FB
        gbc.setState(0xea60, 0x8ade, 0xc690, 0x688f, 0xf490, 0xe833, 0x0, 0x0);
        gbc.writeMem(0xe833, { 0xbc });
        gbc.writeMem(0xea60, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8ade, gbc.sp());
        EXPECT(0xea62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe833));
        EXPECT(0xcb, gbc.readMem(0xea60));
        EXPECT(0x4e, gbc.readMem(0xea61));
        // CB 4E 02FC
        gbc.setState(0x2b6a, 0x892b, 0x9f30, 0x543b, 0x9d17, 0x6831, 0x0, 0x0);
        gbc.writeMem(0x2b6a, { 0xcb, 0x4e });
        gbc.writeMem(0x6831, { 0x82 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x892b, gbc.sp());
        EXPECT(0x2b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 02FD
        gbc.setState(0xea82, 0x8514, 0xca30, 0xec38, 0xcfab, 0xfe9c, 0x0, 0x0);
        gbc.writeMem(0xea82, { 0xcb, 0x4e });
        gbc.writeMem(0xfe9c, { 0x92 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8514, gbc.sp());
        EXPECT(0xea84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea82));
        EXPECT(0x4e, gbc.readMem(0xea83));
        EXPECT(0x92, gbc.readMem(0xfe9c));
        // CB 4E 02FE
        gbc.setState(0xc5df, 0xa711, 0xf7a0, 0x40ef, 0xd811, 0x5ecc, 0x1, 0x1);
        gbc.writeMem(0x5ecc, { 0xc2 });
        gbc.writeMem(0xc5df, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa711, gbc.sp());
        EXPECT(0xc5e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5df));
        EXPECT(0x4e, gbc.readMem(0xc5e0));
        // CB 4E 02FF
        gbc.setState(0xcb0d, 0xf8e, 0x5690, 0xe24, 0x2565, 0x2196, 0x0, 0x1);
        gbc.writeMem(0x2196, { 0xad });
        gbc.writeMem(0xcb0d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf8e, gbc.sp());
        EXPECT(0xcb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb0d));
        EXPECT(0x4e, gbc.readMem(0xcb0e));
        // CB 4E 0300
        gbc.setState(0x47db, 0x2fa8, 0x8950, 0x942a, 0x3559, 0xe520, 0x1, 0x0);
        gbc.writeMem(0x47db, { 0xcb, 0x4e });
        gbc.writeMem(0xe520, { 0x1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2fa8, gbc.sp());
        EXPECT(0x47dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xe520));
        // CB 4E 0301
        gbc.setState(0xd56d, 0x3ed8, 0x8a40, 0xee93, 0xd6a, 0x6e3b, 0x1, 0x0);
        gbc.writeMem(0x6e3b, { 0x88 });
        gbc.writeMem(0xd56d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3ed8, gbc.sp());
        EXPECT(0xd56f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd56d));
        EXPECT(0x4e, gbc.readMem(0xd56e));
        // CB 4E 0302
        gbc.setState(0x1e4, 0x1781, 0x5a70, 0x2802, 0xfad7, 0xa98b, 0x1, 0x1);
        gbc.writeMem(0x1e4, { 0xcb, 0x4e });
        gbc.writeMem(0xa98b, { 0x59 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1781, gbc.sp());
        EXPECT(0x1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xa98b));
        // CB 4E 0304
        gbc.setState(0x2e2e, 0x2316, 0x8310, 0x55fc, 0xc997, 0x16fe, 0x1, 0x1);
        gbc.writeMem(0x16fe, { 0x76 });
        gbc.writeMem(0x2e2e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2316, gbc.sp());
        EXPECT(0x2e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0305
        gbc.setState(0x4807, 0xcb0b, 0xd330, 0xa4ca, 0x51c, 0xc58c, 0x1, 0x0);
        gbc.writeMem(0x4807, { 0xcb, 0x4e });
        gbc.writeMem(0xc58c, { 0xc });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcb0b, gbc.sp());
        EXPECT(0x4809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc58c));
        // CB 4E 0306
        gbc.setState(0x606a, 0xa252, 0xf5d0, 0x2247, 0x27b5, 0xe3b9, 0x1, 0x1);
        gbc.writeMem(0x606a, { 0xcb, 0x4e });
        gbc.writeMem(0xe3b9, { 0x7e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa252, gbc.sp());
        EXPECT(0x606c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe3b9));
        // CB 4E 0307
        gbc.setState(0xe102, 0xf8ca, 0xb710, 0xa720, 0x8f22, 0x9616, 0x0, 0x0);
        gbc.writeMem(0x9616, { 0x32 });
        gbc.writeMem(0xe102, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf8ca, gbc.sp());
        EXPECT(0xe104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9616));
        EXPECT(0xcb, gbc.readMem(0xe102));
        EXPECT(0x4e, gbc.readMem(0xe103));
        // CB 4E 0308
        gbc.setState(0xa83d, 0xd145, 0xfd00, 0xd36d, 0xff7e, 0xfb34, 0x0, 0x0);
        gbc.writeMem(0xa83d, { 0xcb, 0x4e });
        gbc.writeMem(0xfb34, { 0x41 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd145, gbc.sp());
        EXPECT(0xa83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa83d));
        EXPECT(0x4e, gbc.readMem(0xa83e));
        EXPECT(0x41, gbc.readMem(0xfb34));
        // CB 4E 0309
        gbc.setState(0x763c, 0x97e3, 0x5f30, 0x720a, 0xcd18, 0x8f37, 0x1, 0x0);
        gbc.writeMem(0x763c, { 0xcb, 0x4e });
        gbc.writeMem(0x8f37, { 0x1d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x97e3, gbc.sp());
        EXPECT(0x763e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8f37));
        // CB 4E 030A
        gbc.setState(0x59bb, 0x965e, 0xf350, 0xb6ea, 0x6ee0, 0xea93, 0x0, 0x1);
        gbc.writeMem(0x59bb, { 0xcb, 0x4e });
        gbc.writeMem(0xea93, { 0x29 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x965e, gbc.sp());
        EXPECT(0x59bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xea93));
        // CB 4E 030B
        gbc.setState(0xd0ae, 0x3627, 0x6dd0, 0xa4b6, 0xfa95, 0x6b01, 0x1, 0x1);
        gbc.writeMem(0x6b01, { 0x53 });
        gbc.writeMem(0xd0ae, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3627, gbc.sp());
        EXPECT(0xd0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ae));
        EXPECT(0x4e, gbc.readMem(0xd0af));
        // CB 4E 030C
        gbc.setState(0x8566, 0x3b94, 0x1810, 0x1cc4, 0x1b58, 0xb117, 0x0, 0x0);
        gbc.writeMem(0x8566, { 0xcb, 0x4e });
        gbc.writeMem(0xb117, { 0x40 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3b94, gbc.sp());
        EXPECT(0x8568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8566));
        EXPECT(0x4e, gbc.readMem(0x8567));
        EXPECT(0x40, gbc.readMem(0xb117));
        // CB 4E 030D
        gbc.setState(0x89cb, 0x6c48, 0x35a0, 0xb4db, 0x7cf3, 0x3134, 0x1, 0x0);
        gbc.writeMem(0x3134, { 0xb2 });
        gbc.writeMem(0x89cb, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6c48, gbc.sp());
        EXPECT(0x89cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89cb));
        EXPECT(0x4e, gbc.readMem(0x89cc));
        // CB 4E 030F
        gbc.setState(0xc7bb, 0xde35, 0x8090, 0x100c, 0x85c7, 0x178a, 0x1, 0x0);
        gbc.writeMem(0x178a, { 0xc6 });
        gbc.writeMem(0xc7bb, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xde35, gbc.sp());
        EXPECT(0xc7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7bb));
        EXPECT(0x4e, gbc.readMem(0xc7bc));
        // CB 4E 0310
        gbc.setState(0xba37, 0x9646, 0xe120, 0x5054, 0x338e, 0x4fbc, 0x0, 0x1);
        gbc.writeMem(0x4fbc, { 0xfc });
        gbc.writeMem(0xba37, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9646, gbc.sp());
        EXPECT(0xba39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba37));
        EXPECT(0x4e, gbc.readMem(0xba38));
        // CB 4E 0311
        gbc.setState(0xd3ad, 0x940e, 0x8880, 0x7da2, 0xc4f2, 0x49a1, 0x0, 0x1);
        gbc.writeMem(0x49a1, { 0x2f });
        gbc.writeMem(0xd3ad, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x940e, gbc.sp());
        EXPECT(0xd3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ad));
        EXPECT(0x4e, gbc.readMem(0xd3ae));
        // CB 4E 0312
        gbc.setState(0x346f, 0x5fc4, 0xfd50, 0xa895, 0xd86d, 0xdb8c, 0x1, 0x0);
        gbc.writeMem(0x346f, { 0xcb, 0x4e });
        gbc.writeMem(0xdb8c, { 0x42 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5fc4, gbc.sp());
        EXPECT(0x3471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdb8c));
        // CB 4E 0313
        gbc.setState(0x933d, 0x9549, 0x14c0, 0x2317, 0xfe94, 0xfcb9, 0x1, 0x0);
        gbc.writeMem(0x933d, { 0xcb, 0x4e });
        gbc.writeMem(0xfcb9, { 0x5e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9549, gbc.sp());
        EXPECT(0x933f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x933d));
        EXPECT(0x4e, gbc.readMem(0x933e));
        EXPECT(0x5e, gbc.readMem(0xfcb9));
        // CB 4E 0314
        gbc.setState(0x1c81, 0x634e, 0x1010, 0x90c3, 0x16ea, 0x13b4, 0x0, 0x1);
        gbc.writeMem(0x13b4, { 0xe6 });
        gbc.writeMem(0x1c81, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x634e, gbc.sp());
        EXPECT(0x1c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0316
        gbc.setState(0xded2, 0x6385, 0xe990, 0xc68d, 0x7bb7, 0x563b, 0x1, 0x0);
        gbc.writeMem(0x563b, { 0xc3 });
        gbc.writeMem(0xded2, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6385, gbc.sp());
        EXPECT(0xded4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded2));
        EXPECT(0x4e, gbc.readMem(0xded3));
        // CB 4E 0318
        gbc.setState(0x4b7c, 0x1a9, 0xbf70, 0x32ca, 0x654a, 0x99cc, 0x1, 0x1);
        gbc.writeMem(0x4b7c, { 0xcb, 0x4e });
        gbc.writeMem(0x99cc, { 0xea });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1a9, gbc.sp());
        EXPECT(0x4b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x99cc));
        // CB 4E 0319
        gbc.setState(0xc33e, 0x3853, 0x8d60, 0x350e, 0x8068, 0x10d1, 0x1, 0x1);
        gbc.writeMem(0x10d1, { 0x6d });
        gbc.writeMem(0xc33e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3853, gbc.sp());
        EXPECT(0xc340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33e));
        EXPECT(0x4e, gbc.readMem(0xc33f));
        // CB 4E 031A
        gbc.setState(0xa7b2, 0x5cad, 0x83c0, 0x2179, 0xd9b6, 0x9566, 0x1, 0x0);
        gbc.writeMem(0x9566, { 0xdd });
        gbc.writeMem(0xa7b2, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5cad, gbc.sp());
        EXPECT(0xa7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x9566));
        EXPECT(0xcb, gbc.readMem(0xa7b2));
        EXPECT(0x4e, gbc.readMem(0xa7b3));
        // CB 4E 031C
        gbc.setState(0x60ca, 0x58a3, 0x4b30, 0x756a, 0xed85, 0xea8a, 0x0, 0x0);
        gbc.writeMem(0x60ca, { 0xcb, 0x4e });
        gbc.writeMem(0xea8a, { 0x1b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x58a3, gbc.sp());
        EXPECT(0x60cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xea8a));
        // CB 4E 031D
        gbc.setState(0x66f0, 0x1441, 0x130, 0xe9f9, 0x5945, 0x9a04, 0x0, 0x1);
        gbc.writeMem(0x66f0, { 0xcb, 0x4e });
        gbc.writeMem(0x9a04, { 0x62 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1441, gbc.sp());
        EXPECT(0x66f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x9a04));
        // CB 4E 031E
        gbc.setState(0x62ae, 0x9f2e, 0x5890, 0x28b2, 0x5f5e, 0x8404, 0x1, 0x1);
        gbc.writeMem(0x62ae, { 0xcb, 0x4e });
        gbc.writeMem(0x8404, { 0x2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9f2e, gbc.sp());
        EXPECT(0x62b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x8404));
        // CB 4E 031F
        gbc.setState(0xebbd, 0x8538, 0xb810, 0xd7fa, 0xd375, 0x6167, 0x0, 0x1);
        gbc.writeMem(0x6167, { 0x27 });
        gbc.writeMem(0xebbd, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8538, gbc.sp());
        EXPECT(0xebbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebbd));
        EXPECT(0x4e, gbc.readMem(0xebbe));
        // CB 4E 0320
        gbc.setState(0xcb05, 0x91a1, 0x1880, 0x2670, 0xf08b, 0x5d45, 0x0, 0x1);
        gbc.writeMem(0x5d45, { 0x98 });
        gbc.writeMem(0xcb05, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x91a1, gbc.sp());
        EXPECT(0xcb07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb05));
        EXPECT(0x4e, gbc.readMem(0xcb06));
        // CB 4E 0321
        gbc.setState(0x37f2, 0x4c23, 0x4220, 0xfa5e, 0x56e3, 0x3cc6, 0x1, 0x0);
        gbc.writeMem(0x37f2, { 0xcb, 0x4e });
        gbc.writeMem(0x3cc6, { 0x67 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4c23, gbc.sp());
        EXPECT(0x37f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0322
        gbc.setState(0x608f, 0x6cb3, 0xcc40, 0x7f98, 0xda9, 0xb423, 0x0, 0x1);
        gbc.writeMem(0x608f, { 0xcb, 0x4e });
        gbc.writeMem(0xb423, { 0x43 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6cb3, gbc.sp());
        EXPECT(0x6091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb423));
        // CB 4E 0323
        gbc.setState(0x23ec, 0xcf90, 0x9f50, 0x3ac6, 0xd5e4, 0x6999, 0x0, 0x0);
        gbc.writeMem(0x23ec, { 0xcb, 0x4e });
        gbc.writeMem(0x6999, { 0x53 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcf90, gbc.sp());
        EXPECT(0x23ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0324
        gbc.setState(0x2073, 0xc1ec, 0x6300, 0xfac5, 0x4e98, 0xfba7, 0x0, 0x1);
        gbc.writeMem(0x2073, { 0xcb, 0x4e });
        gbc.writeMem(0xfba7, { 0xaf });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc1ec, gbc.sp());
        EXPECT(0x2075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xfba7));
        // CB 4E 0325
        gbc.setState(0xe946, 0xc93c, 0x22a0, 0x3f76, 0xea5e, 0x97b3, 0x1, 0x0);
        gbc.writeMem(0x97b3, { 0xf3 });
        gbc.writeMem(0xe946, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc93c, gbc.sp());
        EXPECT(0xe948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x97b3));
        EXPECT(0xcb, gbc.readMem(0xe946));
        EXPECT(0x4e, gbc.readMem(0xe947));
        // CB 4E 0326
        gbc.setState(0x870, 0x2658, 0xa50, 0xed6e, 0xfc51, 0xbb30, 0x0, 0x0);
        gbc.writeMem(0x870, { 0xcb, 0x4e });
        gbc.writeMem(0xbb30, { 0xcf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2658, gbc.sp());
        EXPECT(0x872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xbb30));
        // CB 4E 0327
        gbc.setState(0xa54, 0x2e3e, 0xa3b0, 0x2149, 0x5b2f, 0x798f, 0x0, 0x0);
        gbc.writeMem(0xa54, { 0xcb, 0x4e });
        gbc.writeMem(0x798f, { 0xeb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2e3e, gbc.sp());
        EXPECT(0xa56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0328
        gbc.setState(0xedb2, 0x689b, 0xe090, 0x9dee, 0x6d71, 0x6545, 0x1, 0x1);
        gbc.writeMem(0x6545, { 0x4c });
        gbc.writeMem(0xedb2, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x689b, gbc.sp());
        EXPECT(0xedb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb2));
        EXPECT(0x4e, gbc.readMem(0xedb3));
        // CB 4E 0329
        gbc.setState(0xb533, 0x9f8c, 0xfa00, 0x21c8, 0x56a4, 0x726f, 0x0, 0x0);
        gbc.writeMem(0x726f, { 0xf4 });
        gbc.writeMem(0xb533, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9f8c, gbc.sp());
        EXPECT(0xb535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb533));
        EXPECT(0x4e, gbc.readMem(0xb534));
        // CB 4E 032A
        gbc.setState(0x43e7, 0x9a9a, 0x7490, 0x3b08, 0x62be, 0x50dc, 0x1, 0x1);
        gbc.writeMem(0x43e7, { 0xcb, 0x4e });
        gbc.writeMem(0x50dc, { 0xf9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9a9a, gbc.sp());
        EXPECT(0x43e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 032B
        gbc.setState(0x8c2, 0x9414, 0x4d30, 0xbeb5, 0x2d55, 0x92f4, 0x0, 0x0);
        gbc.writeMem(0x8c2, { 0xcb, 0x4e });
        gbc.writeMem(0x92f4, { 0x7f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9414, gbc.sp());
        EXPECT(0x8c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x92f4));
        // CB 4E 032D
        gbc.setState(0xe314, 0x2bf4, 0xb50, 0x403a, 0x63a7, 0x3c62, 0x1, 0x0);
        gbc.writeMem(0x3c62, { 0xe3 });
        gbc.writeMem(0xe314, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2bf4, gbc.sp());
        EXPECT(0xe316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe314));
        EXPECT(0x4e, gbc.readMem(0xe315));
        // CB 4E 032E
        gbc.setState(0xcaef, 0xad49, 0xa910, 0xe949, 0x2efb, 0x8322, 0x0, 0x0);
        gbc.writeMem(0x8322, { 0x75 });
        gbc.writeMem(0xcaef, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xad49, gbc.sp());
        EXPECT(0xcaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8322));
        EXPECT(0xcb, gbc.readMem(0xcaef));
        EXPECT(0x4e, gbc.readMem(0xcaf0));
        // CB 4E 032F
        gbc.setState(0x184c, 0xd979, 0x6610, 0x8934, 0x415f, 0x2e65, 0x0, 0x1);
        gbc.writeMem(0x184c, { 0xcb, 0x4e });
        gbc.writeMem(0x2e65, { 0xf8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd979, gbc.sp());
        EXPECT(0x184e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0330
        gbc.setState(0x930f, 0x92a3, 0xc690, 0xc4d1, 0xe775, 0x7c13, 0x0, 0x0);
        gbc.writeMem(0x7c13, { 0xca });
        gbc.writeMem(0x930f, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x92a3, gbc.sp());
        EXPECT(0x9311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x930f));
        EXPECT(0x4e, gbc.readMem(0x9310));
        // CB 4E 0331
        gbc.setState(0xd3ad, 0x5cd2, 0xdd30, 0x8537, 0x9eb8, 0x76d9, 0x0, 0x1);
        gbc.writeMem(0x76d9, { 0xea });
        gbc.writeMem(0xd3ad, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5cd2, gbc.sp());
        EXPECT(0xd3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ad));
        EXPECT(0x4e, gbc.readMem(0xd3ae));
        // CB 4E 0332
        gbc.setState(0xd139, 0x2c0, 0xca90, 0x20c6, 0xa62, 0x60b5, 0x1, 0x0);
        gbc.writeMem(0x60b5, { 0xac });
        gbc.writeMem(0xd139, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2c0, gbc.sp());
        EXPECT(0xd13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd139));
        EXPECT(0x4e, gbc.readMem(0xd13a));
        // CB 4E 0333
        gbc.setState(0x1c54, 0x5d52, 0x3090, 0x128f, 0x5c2, 0xf9d0, 0x1, 0x1);
        gbc.writeMem(0x1c54, { 0xcb, 0x4e });
        gbc.writeMem(0xf9d0, { 0x3f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5d52, gbc.sp());
        EXPECT(0x1c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xf9d0));
        // CB 4E 0334
        gbc.setState(0x998d, 0x4402, 0xacd0, 0xd308, 0x1f7d, 0x4d70, 0x0, 0x0);
        gbc.writeMem(0x4d70, { 0x24 });
        gbc.writeMem(0x998d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4402, gbc.sp());
        EXPECT(0x998f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998d));
        EXPECT(0x4e, gbc.readMem(0x998e));
        // CB 4E 0335
        gbc.setState(0x34fb, 0x41b0, 0xd850, 0xc439, 0x2cfd, 0x55a0, 0x1, 0x0);
        gbc.writeMem(0x34fb, { 0xcb, 0x4e });
        gbc.writeMem(0x55a0, { 0xe });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x41b0, gbc.sp());
        EXPECT(0x34fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0336
        gbc.setState(0xa8de, 0xe517, 0xa420, 0x6cdb, 0x8f5e, 0x6d0b, 0x0, 0x0);
        gbc.writeMem(0x6d0b, { 0x39 });
        gbc.writeMem(0xa8de, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe517, gbc.sp());
        EXPECT(0xa8e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8de));
        EXPECT(0x4e, gbc.readMem(0xa8df));
        // CB 4E 0337
        gbc.setState(0xc419, 0xffba, 0x6bd0, 0x2bbc, 0x7508, 0x23c5, 0x0, 0x1);
        gbc.writeMem(0x23c5, { 0xff });
        gbc.writeMem(0xc419, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xffba, gbc.sp());
        EXPECT(0xc41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc419));
        EXPECT(0x4e, gbc.readMem(0xc41a));
        // CB 4E 0338
        gbc.setState(0xa3e6, 0x7f4, 0xdcc0, 0xb669, 0x5788, 0x833e, 0x0, 0x1);
        gbc.writeMem(0x833e, { 0x33 });
        gbc.writeMem(0xa3e6, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7f4, gbc.sp());
        EXPECT(0xa3e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x833e));
        EXPECT(0xcb, gbc.readMem(0xa3e6));
        EXPECT(0x4e, gbc.readMem(0xa3e7));
        // CB 4E 0339
        gbc.setState(0x2e3b, 0x29ce, 0xbb0, 0x84c3, 0x2422, 0x1ebd, 0x1, 0x1);
        gbc.writeMem(0x1ebd, { 0x20 });
        gbc.writeMem(0x2e3b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x29ce, gbc.sp());
        EXPECT(0x2e3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 033A
        gbc.setState(0x56b5, 0xad6e, 0x2030, 0x7b1c, 0x941c, 0x700e, 0x1, 0x0);
        gbc.writeMem(0x56b5, { 0xcb, 0x4e });
        gbc.writeMem(0x700e, { 0xf5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xad6e, gbc.sp());
        EXPECT(0x56b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 033C
        gbc.setState(0x5624, 0x7a61, 0x20b0, 0x279e, 0x6822, 0xea71, 0x1, 0x0);
        gbc.writeMem(0x5624, { 0xcb, 0x4e });
        gbc.writeMem(0xea71, { 0xf7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7a61, gbc.sp());
        EXPECT(0x5626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xea71));
        // CB 4E 033D
        gbc.setState(0x8bc8, 0x72e2, 0x97e0, 0xd9a, 0x3b47, 0x61da, 0x0, 0x1);
        gbc.writeMem(0x61da, { 0x4e });
        gbc.writeMem(0x8bc8, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x72e2, gbc.sp());
        EXPECT(0x8bca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc8));
        EXPECT(0x4e, gbc.readMem(0x8bc9));
        // CB 4E 033E
        gbc.setState(0x990a, 0xd5c, 0xd520, 0x8483, 0xa08f, 0xa178, 0x0, 0x1);
        gbc.writeMem(0x990a, { 0xcb, 0x4e });
        gbc.writeMem(0xa178, { 0x36 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd5c, gbc.sp());
        EXPECT(0x990c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990a));
        EXPECT(0x4e, gbc.readMem(0x990b));
        EXPECT(0x36, gbc.readMem(0xa178));
        // CB 4E 033F
        gbc.setState(0xd6f7, 0xdcb6, 0xb0e0, 0xa01d, 0xc2c8, 0xa101, 0x1, 0x0);
        gbc.writeMem(0xa101, { 0x8c });
        gbc.writeMem(0xd6f7, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdcb6, gbc.sp());
        EXPECT(0xd6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa101));
        EXPECT(0xcb, gbc.readMem(0xd6f7));
        EXPECT(0x4e, gbc.readMem(0xd6f8));
        // CB 4E 0340
        gbc.setState(0xb2d0, 0x9c62, 0xf180, 0xcfdf, 0x8fd6, 0xdfda, 0x1, 0x0);
        gbc.writeMem(0xb2d0, { 0xcb, 0x4e });
        gbc.writeMem(0xdfda, { 0x3b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9c62, gbc.sp());
        EXPECT(0xb2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d0));
        EXPECT(0x4e, gbc.readMem(0xb2d1));
        EXPECT(0x3b, gbc.readMem(0xdfda));
        // CB 4E 0341
        gbc.setState(0xea2, 0x7c63, 0xe560, 0x1d1c, 0x3055, 0x8909, 0x0, 0x0);
        gbc.writeMem(0xea2, { 0xcb, 0x4e });
        gbc.writeMem(0x8909, { 0xb5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7c63, gbc.sp());
        EXPECT(0xea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8909));
        // CB 4E 0342
        gbc.setState(0xc885, 0x5295, 0xbb90, 0x3b40, 0x5c13, 0x391c, 0x1, 0x1);
        gbc.writeMem(0x391c, { 0xf });
        gbc.writeMem(0xc885, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5295, gbc.sp());
        EXPECT(0xc887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc885));
        EXPECT(0x4e, gbc.readMem(0xc886));
        // CB 4E 0343
        gbc.setState(0x24e6, 0xb93f, 0xba10, 0x2e52, 0xb6bb, 0x4f6e, 0x1, 0x1);
        gbc.writeMem(0x24e6, { 0xcb, 0x4e });
        gbc.writeMem(0x4f6e, { 0xe5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb93f, gbc.sp());
        EXPECT(0x24e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0344
        gbc.setState(0x19f7, 0xb853, 0x4390, 0x9a79, 0x1777, 0x6c78, 0x1, 0x1);
        gbc.writeMem(0x19f7, { 0xcb, 0x4e });
        gbc.writeMem(0x6c78, { 0xc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb853, gbc.sp());
        EXPECT(0x19f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0345
        gbc.setState(0xb92d, 0xc55b, 0xea0, 0x59ec, 0x7b42, 0x4376, 0x1, 0x1);
        gbc.writeMem(0x4376, { 0x13 });
        gbc.writeMem(0xb92d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc55b, gbc.sp());
        EXPECT(0xb92f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb92d));
        EXPECT(0x4e, gbc.readMem(0xb92e));
        // CB 4E 0346
        gbc.setState(0xd7b9, 0x939e, 0x4a0, 0xbe6a, 0xe23f, 0x8bba, 0x1, 0x0);
        gbc.writeMem(0x8bba, { 0x29 });
        gbc.writeMem(0xd7b9, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x939e, gbc.sp());
        EXPECT(0xd7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8bba));
        EXPECT(0xcb, gbc.readMem(0xd7b9));
        EXPECT(0x4e, gbc.readMem(0xd7ba));
        // CB 4E 0347
        gbc.setState(0x4fd1, 0x271f, 0x42a0, 0xe69b, 0x5fd1, 0x3387, 0x0, 0x0);
        gbc.writeMem(0x3387, { 0x55 });
        gbc.writeMem(0x4fd1, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x271f, gbc.sp());
        EXPECT(0x4fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0348
        gbc.setState(0x1ef2, 0xa6d2, 0xd2b0, 0xa5ba, 0x5fac, 0x78b6, 0x1, 0x0);
        gbc.writeMem(0x1ef2, { 0xcb, 0x4e });
        gbc.writeMem(0x78b6, { 0x17 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa6d2, gbc.sp());
        EXPECT(0x1ef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0349
        gbc.setState(0x2796, 0xe9ed, 0xe090, 0xf998, 0xdd72, 0x201f, 0x1, 0x1);
        gbc.writeMem(0x201f, { 0x39 });
        gbc.writeMem(0x2796, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe9ed, gbc.sp());
        EXPECT(0x2798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 034A
        gbc.setState(0x725b, 0xf98, 0x5fb0, 0x9e9, 0x88c, 0xccc4, 0x1, 0x0);
        gbc.writeMem(0x725b, { 0xcb, 0x4e });
        gbc.writeMem(0xccc4, { 0x65 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf98, gbc.sp());
        EXPECT(0x725d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xccc4));
        // CB 4E 034B
        gbc.setState(0x988b, 0xdbf7, 0x3c80, 0x27da, 0x711e, 0x8cd, 0x1, 0x1);
        gbc.writeMem(0x8cd, { 0xce });
        gbc.writeMem(0x988b, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdbf7, gbc.sp());
        EXPECT(0x988d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x988b));
        EXPECT(0x4e, gbc.readMem(0x988c));
        // CB 4E 034D
        gbc.setState(0x4eaf, 0xac6f, 0x3860, 0x3abd, 0x8c2b, 0x4fcd, 0x0, 0x0);
        gbc.writeMem(0x4eaf, { 0xcb, 0x4e });
        gbc.writeMem(0x4fcd, { 0xfe });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xac6f, gbc.sp());
        EXPECT(0x4eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 034E
        gbc.setState(0x67b2, 0x1170, 0xba70, 0x2595, 0xa973, 0xfa1c, 0x1, 0x0);
        gbc.writeMem(0x67b2, { 0xcb, 0x4e });
        gbc.writeMem(0xfa1c, { 0x5b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1170, gbc.sp());
        EXPECT(0x67b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xfa1c));
        // CB 4E 034F
        gbc.setState(0x218f, 0xb2ee, 0x8c80, 0xe326, 0x4751, 0x4032, 0x1, 0x0);
        gbc.writeMem(0x218f, { 0xcb, 0x4e });
        gbc.writeMem(0x4032, { 0x7e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb2ee, gbc.sp());
        EXPECT(0x2191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0351
        gbc.setState(0x4728, 0x6355, 0x92e0, 0xfee, 0x8c4e, 0x390d, 0x0, 0x1);
        gbc.writeMem(0x390d, { 0x36 });
        gbc.writeMem(0x4728, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6355, gbc.sp());
        EXPECT(0x472a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0352
        gbc.setState(0xc07e, 0x2aab, 0xeeb0, 0x8b95, 0xd891, 0xee97, 0x1, 0x1);
        gbc.writeMem(0xc07e, { 0xcb, 0x4e });
        gbc.writeMem(0xee97, { 0x23 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2aab, gbc.sp());
        EXPECT(0xc080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07e));
        EXPECT(0x4e, gbc.readMem(0xc07f));
        EXPECT(0x23, gbc.readMem(0xee97));
        // CB 4E 0353
        gbc.setState(0xb891, 0x7433, 0xed0, 0x3e88, 0xcc8f, 0x76f3, 0x0, 0x1);
        gbc.writeMem(0x76f3, { 0x9e });
        gbc.writeMem(0xb891, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7433, gbc.sp());
        EXPECT(0xb893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb891));
        EXPECT(0x4e, gbc.readMem(0xb892));
        // CB 4E 0354
        gbc.setState(0x6816, 0xab58, 0x840, 0x9680, 0xb328, 0xbd58, 0x1, 0x0);
        gbc.writeMem(0x6816, { 0xcb, 0x4e });
        gbc.writeMem(0xbd58, { 0x33 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xab58, gbc.sp());
        EXPECT(0x6818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbd58));
        // CB 4E 0355
        gbc.setState(0x862e, 0xe657, 0x830, 0x87ab, 0x2342, 0x9d4a, 0x1, 0x1);
        gbc.writeMem(0x862e, { 0xcb, 0x4e });
        gbc.writeMem(0x9d4a, { 0x6d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe657, gbc.sp());
        EXPECT(0x8630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x862e));
        EXPECT(0x4e, gbc.readMem(0x862f));
        EXPECT(0x6d, gbc.readMem(0x9d4a));
        // CB 4E 0356
        gbc.setState(0x2fda, 0x592b, 0x9820, 0x61ae, 0xa043, 0x2bc8, 0x0, 0x0);
        gbc.writeMem(0x2bc8, { 0xe2 });
        gbc.writeMem(0x2fda, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x592b, gbc.sp());
        EXPECT(0x2fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0357
        gbc.setState(0x669a, 0xf27, 0xf530, 0x6b4e, 0x3f9f, 0xd394, 0x1, 0x1);
        gbc.writeMem(0x669a, { 0xcb, 0x4e });
        gbc.writeMem(0xd394, { 0xd8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf27, gbc.sp());
        EXPECT(0x669c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xd394));
        // CB 4E 0358
        gbc.setState(0x92aa, 0x609, 0x1a30, 0xb7c3, 0xeb59, 0x61ab, 0x0, 0x1);
        gbc.writeMem(0x61ab, { 0x86 });
        gbc.writeMem(0x92aa, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x609, gbc.sp());
        EXPECT(0x92ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92aa));
        EXPECT(0x4e, gbc.readMem(0x92ab));
        // CB 4E 0359
        gbc.setState(0xe3d7, 0x4c09, 0x1bc0, 0x6b49, 0x4831, 0x23bf, 0x0, 0x0);
        gbc.writeMem(0x23bf, { 0x64 });
        gbc.writeMem(0xe3d7, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4c09, gbc.sp());
        EXPECT(0xe3d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d7));
        EXPECT(0x4e, gbc.readMem(0xe3d8));
        // CB 4E 035A
        gbc.setState(0x2fd9, 0xc245, 0x7100, 0xd9a1, 0x5121, 0x73d6, 0x0, 0x0);
        gbc.writeMem(0x2fd9, { 0xcb, 0x4e });
        gbc.writeMem(0x73d6, { 0x4a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc245, gbc.sp());
        EXPECT(0x2fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 035B
        gbc.setState(0x3ef5, 0xeb0f, 0x1ef0, 0x42df, 0xb3ba, 0xb275, 0x1, 0x1);
        gbc.writeMem(0x3ef5, { 0xcb, 0x4e });
        gbc.writeMem(0xb275, { 0xb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xeb0f, gbc.sp());
        EXPECT(0x3ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb275));
        // CB 4E 035C
        gbc.setState(0x293a, 0x204d, 0x3450, 0xb481, 0x890e, 0x9e7b, 0x1, 0x1);
        gbc.writeMem(0x293a, { 0xcb, 0x4e });
        gbc.writeMem(0x9e7b, { 0x74 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x204d, gbc.sp());
        EXPECT(0x293c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9e7b));
        // CB 4E 035D
        gbc.setState(0x3b0a, 0x1014, 0xb3f0, 0xbffc, 0xe62c, 0x5b89, 0x1, 0x0);
        gbc.writeMem(0x3b0a, { 0xcb, 0x4e });
        gbc.writeMem(0x5b89, { 0xa8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1014, gbc.sp());
        EXPECT(0x3b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 035E
        gbc.setState(0x6eec, 0x33b0, 0xeb70, 0xd39, 0x8981, 0xac81, 0x0, 0x0);
        gbc.writeMem(0x6eec, { 0xcb, 0x4e });
        gbc.writeMem(0xac81, { 0x27 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x33b0, gbc.sp());
        EXPECT(0x6eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xac81));
        // CB 4E 035F
        gbc.setState(0xc610, 0x1f11, 0xb940, 0xe6c4, 0xbe14, 0x3f58, 0x0, 0x1);
        gbc.writeMem(0x3f58, { 0x1f });
        gbc.writeMem(0xc610, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1f11, gbc.sp());
        EXPECT(0xc612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc610));
        EXPECT(0x4e, gbc.readMem(0xc611));
        // CB 4E 0360
        gbc.setState(0x91b6, 0x55ad, 0x9830, 0x5435, 0xf625, 0xca6e, 0x0, 0x1);
        gbc.writeMem(0x91b6, { 0xcb, 0x4e });
        gbc.writeMem(0xca6e, { 0xda });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x55ad, gbc.sp());
        EXPECT(0x91b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b6));
        EXPECT(0x4e, gbc.readMem(0x91b7));
        EXPECT(0xda, gbc.readMem(0xca6e));
        // CB 4E 0361
        gbc.setState(0x98d, 0x2e52, 0xea00, 0x5c09, 0xa84, 0x7c96, 0x1, 0x0);
        gbc.writeMem(0x98d, { 0xcb, 0x4e });
        gbc.writeMem(0x7c96, { 0x3a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2e52, gbc.sp());
        EXPECT(0x98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0362
        gbc.setState(0xbd4e, 0x56f4, 0x4c00, 0xf822, 0x9112, 0x626c, 0x0, 0x0);
        gbc.writeMem(0x626c, { 0x23 });
        gbc.writeMem(0xbd4e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x56f4, gbc.sp());
        EXPECT(0xbd50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4e));
        EXPECT(0x4e, gbc.readMem(0xbd4f));
        // CB 4E 0363
        gbc.setState(0x7975, 0xe0f3, 0x8010, 0xbdb4, 0x3d56, 0x3005, 0x0, 0x1);
        gbc.writeMem(0x3005, { 0xc3 });
        gbc.writeMem(0x7975, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe0f3, gbc.sp());
        EXPECT(0x7977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0364
        gbc.setState(0x6f43, 0xe61e, 0xebe0, 0xf233, 0x44ef, 0x6207, 0x1, 0x0);
        gbc.writeMem(0x6207, { 0xae });
        gbc.writeMem(0x6f43, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe61e, gbc.sp());
        EXPECT(0x6f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0366
        gbc.setState(0xdd34, 0x38a7, 0xd1f0, 0x5e9f, 0x1468, 0xc8c6, 0x0, 0x0);
        gbc.writeMem(0xc8c6, { 0xfa });
        gbc.writeMem(0xdd34, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x38a7, gbc.sp());
        EXPECT(0xdd36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc8c6));
        EXPECT(0xcb, gbc.readMem(0xdd34));
        EXPECT(0x4e, gbc.readMem(0xdd35));
        // CB 4E 0367
        gbc.setState(0x597, 0xf696, 0xea00, 0x26bc, 0xb0ab, 0x3be6, 0x1, 0x0);
        gbc.writeMem(0x597, { 0xcb, 0x4e });
        gbc.writeMem(0x3be6, { 0x5a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf696, gbc.sp());
        EXPECT(0x599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0368
        gbc.setState(0xeb96, 0xf9e, 0x37c0, 0x2051, 0x7581, 0xb83b, 0x1, 0x1);
        gbc.writeMem(0xb83b, { 0xf });
        gbc.writeMem(0xeb96, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf9e, gbc.sp());
        EXPECT(0xeb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xb83b));
        EXPECT(0xcb, gbc.readMem(0xeb96));
        EXPECT(0x4e, gbc.readMem(0xeb97));
        // CB 4E 0369
        gbc.setState(0x77fb, 0x3e0d, 0x13c0, 0x3ad8, 0xebfa, 0x6122, 0x0, 0x0);
        gbc.writeMem(0x6122, { 0x49 });
        gbc.writeMem(0x77fb, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3e0d, gbc.sp());
        EXPECT(0x77fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 036A
        gbc.setState(0x1404, 0xf288, 0xb4c0, 0xe8fd, 0x63f, 0xde86, 0x1, 0x1);
        gbc.writeMem(0x1404, { 0xcb, 0x4e });
        gbc.writeMem(0xde86, { 0x9f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf288, gbc.sp());
        EXPECT(0x1406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xde86));
        // CB 4E 036B
        gbc.setState(0x1a17, 0xa4ec, 0xf3d0, 0x9436, 0x553d, 0xe7d8, 0x1, 0x0);
        gbc.writeMem(0x1a17, { 0xcb, 0x4e });
        gbc.writeMem(0xe7d8, { 0x75 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa4ec, gbc.sp());
        EXPECT(0x1a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xe7d8));
        // CB 4E 036C
        gbc.setState(0xcdf, 0xbc33, 0x9b00, 0x3db9, 0x6458, 0x1f45, 0x1, 0x0);
        gbc.writeMem(0xcdf, { 0xcb, 0x4e });
        gbc.writeMem(0x1f45, { 0x6c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbc33, gbc.sp());
        EXPECT(0xce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 036D
        gbc.setState(0xdc8c, 0x4868, 0x85d0, 0x236, 0x39eb, 0x3722, 0x1, 0x1);
        gbc.writeMem(0x3722, { 0xdc });
        gbc.writeMem(0xdc8c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4868, gbc.sp());
        EXPECT(0xdc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8c));
        EXPECT(0x4e, gbc.readMem(0xdc8d));
        // CB 4E 036E
        gbc.setState(0x853d, 0xafd5, 0x2d90, 0x6add, 0xe765, 0x9440, 0x0, 0x0);
        gbc.writeMem(0x853d, { 0xcb, 0x4e });
        gbc.writeMem(0x9440, { 0x4f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xafd5, gbc.sp());
        EXPECT(0x853f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x853d));
        EXPECT(0x4e, gbc.readMem(0x853e));
        EXPECT(0x4f, gbc.readMem(0x9440));
        // CB 4E 036F
        gbc.setState(0x1ecd, 0x60d8, 0x1400, 0x992c, 0x6a86, 0xb0f3, 0x0, 0x0);
        gbc.writeMem(0x1ecd, { 0xcb, 0x4e });
        gbc.writeMem(0xb0f3, { 0x8e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x60d8, gbc.sp());
        EXPECT(0x1ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xb0f3));
        // CB 4E 0370
        gbc.setState(0xa417, 0x6584, 0x3b70, 0x9253, 0xa7fd, 0xa7c1, 0x0, 0x1);
        gbc.writeMem(0xa417, { 0xcb, 0x4e });
        gbc.writeMem(0xa7c1, { 0x7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6584, gbc.sp());
        EXPECT(0xa419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa417));
        EXPECT(0x4e, gbc.readMem(0xa418));
        EXPECT(0x7, gbc.readMem(0xa7c1));
        // CB 4E 0371
        gbc.setState(0xe5b2, 0xeee9, 0x4990, 0xa9d, 0x1233, 0x8c2c, 0x0, 0x0);
        gbc.writeMem(0x8c2c, { 0x6d });
        gbc.writeMem(0xe5b2, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xeee9, gbc.sp());
        EXPECT(0xe5b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8c2c));
        EXPECT(0xcb, gbc.readMem(0xe5b2));
        EXPECT(0x4e, gbc.readMem(0xe5b3));
        // CB 4E 0373
        gbc.setState(0x67c1, 0xeb9e, 0xae80, 0x4221, 0x656, 0x7cc3, 0x1, 0x0);
        gbc.writeMem(0x67c1, { 0xcb, 0x4e });
        gbc.writeMem(0x7cc3, { 0xe4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xeb9e, gbc.sp());
        EXPECT(0x67c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0374
        gbc.setState(0xe91a, 0xeb68, 0x1ea0, 0x122f, 0xf594, 0x45cd, 0x0, 0x0);
        gbc.writeMem(0x45cd, { 0x2f });
        gbc.writeMem(0xe91a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xeb68, gbc.sp());
        EXPECT(0xe91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe91a));
        EXPECT(0x4e, gbc.readMem(0xe91b));
        // CB 4E 0375
        gbc.setState(0x5366, 0xe426, 0xb9b0, 0xad84, 0xca23, 0xf56e, 0x0, 0x0);
        gbc.writeMem(0x5366, { 0xcb, 0x4e });
        gbc.writeMem(0xf56e, { 0xbf });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe426, gbc.sp());
        EXPECT(0x5368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xf56e));
        // CB 4E 0376
        gbc.setState(0xcc95, 0x7e48, 0x13a0, 0xbbe3, 0x7b23, 0x3c68, 0x1, 0x0);
        gbc.writeMem(0x3c68, { 0xbb });
        gbc.writeMem(0xcc95, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7e48, gbc.sp());
        EXPECT(0xcc97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc95));
        EXPECT(0x4e, gbc.readMem(0xcc96));
        // CB 4E 0377
        gbc.setState(0x2c33, 0xc684, 0x11b0, 0xd9ee, 0x91eb, 0x1bc4, 0x0, 0x1);
        gbc.writeMem(0x1bc4, { 0xc });
        gbc.writeMem(0x2c33, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc684, gbc.sp());
        EXPECT(0x2c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0379
        gbc.setState(0x5b61, 0x2453, 0x3a00, 0x13f8, 0xdce1, 0xcd3c, 0x0, 0x0);
        gbc.writeMem(0x5b61, { 0xcb, 0x4e });
        gbc.writeMem(0xcd3c, { 0xd0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2453, gbc.sp());
        EXPECT(0x5b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcd3c));
        // CB 4E 037A
        gbc.setState(0x992, 0xb6d2, 0xf420, 0x8bc1, 0x6428, 0x37df, 0x0, 0x1);
        gbc.writeMem(0x992, { 0xcb, 0x4e });
        gbc.writeMem(0x37df, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb6d2, gbc.sp());
        EXPECT(0x994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 037B
        gbc.setState(0xa257, 0xf5f1, 0x73a0, 0x3f1b, 0x7b6b, 0x4548, 0x1, 0x0);
        gbc.writeMem(0x4548, { 0x56 });
        gbc.writeMem(0xa257, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf5f1, gbc.sp());
        EXPECT(0xa259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa257));
        EXPECT(0x4e, gbc.readMem(0xa258));
        // CB 4E 037C
        gbc.setState(0x98f7, 0xa1a6, 0xc2a0, 0x310f, 0x1ff1, 0xee06, 0x0, 0x0);
        gbc.writeMem(0x98f7, { 0xcb, 0x4e });
        gbc.writeMem(0xee06, { 0xfd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa1a6, gbc.sp());
        EXPECT(0x98f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f7));
        EXPECT(0x4e, gbc.readMem(0x98f8));
        EXPECT(0xfd, gbc.readMem(0xee06));
        // CB 4E 037D
        gbc.setState(0x6b06, 0x7d99, 0xd320, 0x20cf, 0xf897, 0xaa7, 0x0, 0x1);
        gbc.writeMem(0xaa7, { 0xce });
        gbc.writeMem(0x6b06, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7d99, gbc.sp());
        EXPECT(0x6b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 037E
        gbc.setState(0x1adc, 0x7f81, 0xf420, 0x66f3, 0x3cbc, 0x15cf, 0x0, 0x1);
        gbc.writeMem(0x15cf, { 0xe5 });
        gbc.writeMem(0x1adc, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7f81, gbc.sp());
        EXPECT(0x1ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 037F
        gbc.setState(0x95d2, 0xcdf, 0xfba0, 0xd85f, 0xed21, 0x5187, 0x1, 0x0);
        gbc.writeMem(0x5187, { 0xd5 });
        gbc.writeMem(0x95d2, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcdf, gbc.sp());
        EXPECT(0x95d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d2));
        EXPECT(0x4e, gbc.readMem(0x95d3));
        // CB 4E 0380
        gbc.setState(0xee80, 0xb94d, 0xfb60, 0x2af8, 0xf137, 0xef18, 0x0, 0x0);
        gbc.writeMem(0xee80, { 0xcb, 0x4e });
        gbc.writeMem(0xef18, { 0xb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb94d, gbc.sp());
        EXPECT(0xee82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee80));
        EXPECT(0x4e, gbc.readMem(0xee81));
        EXPECT(0xb, gbc.readMem(0xef18));
        // CB 4E 0381
        gbc.setState(0x547a, 0x3c7c, 0xa7c0, 0x65dc, 0x3b9b, 0x358a, 0x0, 0x1);
        gbc.writeMem(0x358a, { 0x9f });
        gbc.writeMem(0x547a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3c7c, gbc.sp());
        EXPECT(0x547c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0382
        gbc.setState(0x463c, 0xeba8, 0x8450, 0x7508, 0xced9, 0xb362, 0x0, 0x1);
        gbc.writeMem(0x463c, { 0xcb, 0x4e });
        gbc.writeMem(0xb362, { 0x32 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xeba8, gbc.sp());
        EXPECT(0x463e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb362));
        // CB 4E 0383
        gbc.setState(0xa564, 0x73f6, 0xb670, 0xd37a, 0x8f1f, 0x5452, 0x1, 0x0);
        gbc.writeMem(0x5452, { 0xd9 });
        gbc.writeMem(0xa564, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x73f6, gbc.sp());
        EXPECT(0xa566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa564));
        EXPECT(0x4e, gbc.readMem(0xa565));
        // CB 4E 0384
        gbc.setState(0x893b, 0xda53, 0xf4b0, 0xf332, 0xca1b, 0xe4cd, 0x1, 0x0);
        gbc.writeMem(0x893b, { 0xcb, 0x4e });
        gbc.writeMem(0xe4cd, { 0x6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xda53, gbc.sp());
        EXPECT(0x893d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x893b));
        EXPECT(0x4e, gbc.readMem(0x893c));
        EXPECT(0x6, gbc.readMem(0xe4cd));
        // CB 4E 0386
        gbc.setState(0x6fd, 0x9fa6, 0x5220, 0x31c2, 0xca13, 0x4f9b, 0x1, 0x1);
        gbc.writeMem(0x6fd, { 0xcb, 0x4e });
        gbc.writeMem(0x4f9b, { 0xfb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9fa6, gbc.sp());
        EXPECT(0x6ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0387
        gbc.setState(0x55de, 0xb16, 0xa140, 0xe0e2, 0xdbd5, 0xf39d, 0x1, 0x1);
        gbc.writeMem(0x55de, { 0xcb, 0x4e });
        gbc.writeMem(0xf39d, { 0x54 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb16, gbc.sp());
        EXPECT(0x55e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xf39d));
        // CB 4E 0388
        gbc.setState(0x403c, 0xca57, 0x2440, 0x35c5, 0x3dae, 0x216d, 0x1, 0x1);
        gbc.writeMem(0x216d, { 0x11 });
        gbc.writeMem(0x403c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xca57, gbc.sp());
        EXPECT(0x403e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0389
        gbc.setState(0x5b4d, 0xbdc3, 0x4750, 0x6bb1, 0xb3af, 0x14f9, 0x0, 0x0);
        gbc.writeMem(0x14f9, { 0xa0 });
        gbc.writeMem(0x5b4d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbdc3, gbc.sp());
        EXPECT(0x5b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 038A
        gbc.setState(0xdd6a, 0x93d5, 0x9390, 0x5b54, 0x4082, 0x3cbc, 0x0, 0x0);
        gbc.writeMem(0x3cbc, { 0x60 });
        gbc.writeMem(0xdd6a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x93d5, gbc.sp());
        EXPECT(0xdd6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd6a));
        EXPECT(0x4e, gbc.readMem(0xdd6b));
        // CB 4E 038B
        gbc.setState(0x8650, 0x18d4, 0x8f30, 0x8bb7, 0xa22d, 0x7812, 0x0, 0x1);
        gbc.writeMem(0x7812, { 0x8d });
        gbc.writeMem(0x8650, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x18d4, gbc.sp());
        EXPECT(0x8652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8650));
        EXPECT(0x4e, gbc.readMem(0x8651));
        // CB 4E 038C
        gbc.setState(0x9610, 0xc9d6, 0x3420, 0xeea0, 0xdf03, 0x86e9, 0x0, 0x0);
        gbc.writeMem(0x86e9, { 0xfb });
        gbc.writeMem(0x9610, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc9d6, gbc.sp());
        EXPECT(0x9612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0x86e9));
        EXPECT(0xcb, gbc.readMem(0x9610));
        EXPECT(0x4e, gbc.readMem(0x9611));
        // CB 4E 038D
        gbc.setState(0xcfd1, 0xa379, 0xd670, 0xa261, 0x439d, 0x2d34, 0x1, 0x1);
        gbc.writeMem(0x2d34, { 0x24 });
        gbc.writeMem(0xcfd1, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa379, gbc.sp());
        EXPECT(0xcfd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd1));
        EXPECT(0x4e, gbc.readMem(0xcfd2));
        // CB 4E 038E
        gbc.setState(0x3fc8, 0xf5b4, 0x9880, 0xcec3, 0xafa2, 0x2b04, 0x1, 0x1);
        gbc.writeMem(0x2b04, { 0x45 });
        gbc.writeMem(0x3fc8, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf5b4, gbc.sp());
        EXPECT(0x3fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 038F
        gbc.setState(0x64ef, 0x3fea, 0xe840, 0xb33e, 0x35eb, 0x604, 0x1, 0x0);
        gbc.writeMem(0x604, { 0x4e });
        gbc.writeMem(0x64ef, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3fea, gbc.sp());
        EXPECT(0x64f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0390
        gbc.setState(0x25ba, 0x4fd4, 0x20e0, 0x5529, 0x8e32, 0x3f2c, 0x0, 0x0);
        gbc.writeMem(0x25ba, { 0xcb, 0x4e });
        gbc.writeMem(0x3f2c, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4fd4, gbc.sp());
        EXPECT(0x25bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0391
        gbc.setState(0x5b4d, 0x6bb5, 0xeb40, 0xc6d9, 0x110c, 0xd4c4, 0x0, 0x0);
        gbc.writeMem(0x5b4d, { 0xcb, 0x4e });
        gbc.writeMem(0xd4c4, { 0x3b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6bb5, gbc.sp());
        EXPECT(0x5b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd4c4));
        // CB 4E 0392
        gbc.setState(0xd2c8, 0x4bfc, 0x6c50, 0xb80c, 0x569a, 0xb190, 0x0, 0x1);
        gbc.writeMem(0xb190, { 0xc3 });
        gbc.writeMem(0xd2c8, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4bfc, gbc.sp());
        EXPECT(0xd2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb190));
        EXPECT(0xcb, gbc.readMem(0xd2c8));
        EXPECT(0x4e, gbc.readMem(0xd2c9));
        // CB 4E 0393
        gbc.setState(0xe0f8, 0x9683, 0xd5f0, 0xf620, 0xba69, 0xaa43, 0x0, 0x0);
        gbc.writeMem(0xaa43, { 0x3 });
        gbc.writeMem(0xe0f8, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9683, gbc.sp());
        EXPECT(0xe0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xaa43));
        EXPECT(0xcb, gbc.readMem(0xe0f8));
        EXPECT(0x4e, gbc.readMem(0xe0f9));
        // CB 4E 0394
        gbc.setState(0xa972, 0x68ff, 0x7520, 0xe2d2, 0x4198, 0xe4e1, 0x1, 0x1);
        gbc.writeMem(0xa972, { 0xcb, 0x4e });
        gbc.writeMem(0xe4e1, { 0x7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x68ff, gbc.sp());
        EXPECT(0xa974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa972));
        EXPECT(0x4e, gbc.readMem(0xa973));
        EXPECT(0x7, gbc.readMem(0xe4e1));
        // CB 4E 0395
        gbc.setState(0x492c, 0xf65, 0x5340, 0x114, 0x3adf, 0x6662, 0x1, 0x1);
        gbc.writeMem(0x492c, { 0xcb, 0x4e });
        gbc.writeMem(0x6662, { 0x91 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf65, gbc.sp());
        EXPECT(0x492e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 0396
        gbc.setState(0x526e, 0x88cb, 0x1030, 0xf01c, 0xff86, 0x799b, 0x1, 0x1);
        gbc.writeMem(0x526e, { 0xcb, 0x4e });
        gbc.writeMem(0x799b, { 0x27 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x88cb, gbc.sp());
        EXPECT(0x5270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0397
        gbc.setState(0x19bf, 0xe33e, 0x8300, 0xdff5, 0x7252, 0x871c, 0x0, 0x1);
        gbc.writeMem(0x19bf, { 0xcb, 0x4e });
        gbc.writeMem(0x871c, { 0x69 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe33e, gbc.sp());
        EXPECT(0x19c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x871c));
        // CB 4E 0398
        gbc.setState(0x14b0, 0x4d4f, 0xca50, 0xf2b0, 0x1abf, 0x429c, 0x0, 0x1);
        gbc.writeMem(0x14b0, { 0xcb, 0x4e });
        gbc.writeMem(0x429c, { 0xc5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4d4f, gbc.sp());
        EXPECT(0x14b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 0399
        gbc.setState(0x8d6c, 0x8d53, 0x11f0, 0xb7c3, 0xe1f3, 0x8c3c, 0x1, 0x1);
        gbc.writeMem(0x8c3c, { 0xb8 });
        gbc.writeMem(0x8d6c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8d53, gbc.sp());
        EXPECT(0x8d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8c3c));
        EXPECT(0xcb, gbc.readMem(0x8d6c));
        EXPECT(0x4e, gbc.readMem(0x8d6d));
        // CB 4E 039A
        gbc.setState(0x7b21, 0x4b0d, 0x7730, 0x309d, 0xa54, 0x238c, 0x0, 0x0);
        gbc.writeMem(0x238c, { 0xff });
        gbc.writeMem(0x7b21, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4b0d, gbc.sp());
        EXPECT(0x7b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 039B
        gbc.setState(0xc021, 0xa18e, 0xcc00, 0x9d6c, 0x4744, 0xa6b5, 0x0, 0x0);
        gbc.writeMem(0xa6b5, { 0xb7 });
        gbc.writeMem(0xc021, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa18e, gbc.sp());
        EXPECT(0xc023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa6b5));
        EXPECT(0xcb, gbc.readMem(0xc021));
        EXPECT(0x4e, gbc.readMem(0xc022));
        // CB 4E 039C
        gbc.setState(0x3ff9, 0x6dfe, 0x8e80, 0x86d5, 0xe7f0, 0x816e, 0x1, 0x1);
        gbc.writeMem(0x3ff9, { 0xcb, 0x4e });
        gbc.writeMem(0x816e, { 0x11 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6dfe, gbc.sp());
        EXPECT(0x3ffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x816e));
        // CB 4E 039D
        gbc.setState(0xc05, 0x9910, 0x2fc0, 0xcc6e, 0xd159, 0x9318, 0x1, 0x0);
        gbc.writeMem(0xc05, { 0xcb, 0x4e });
        gbc.writeMem(0x9318, { 0x42 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9910, gbc.sp());
        EXPECT(0xc07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9318));
        // CB 4E 039E
        gbc.setState(0xb36d, 0x68c9, 0x3f40, 0xb390, 0x897d, 0xe491, 0x0, 0x1);
        gbc.writeMem(0xb36d, { 0xcb, 0x4e });
        gbc.writeMem(0xe491, { 0x58 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x68c9, gbc.sp());
        EXPECT(0xb36f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb36d));
        EXPECT(0x4e, gbc.readMem(0xb36e));
        EXPECT(0x58, gbc.readMem(0xe491));
        // CB 4E 039F
        gbc.setState(0xb344, 0x7278, 0xfac0, 0x4c9f, 0xb089, 0xe132, 0x1, 0x1);
        gbc.writeMem(0xb344, { 0xcb, 0x4e });
        gbc.writeMem(0xe132, { 0x79 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7278, gbc.sp());
        EXPECT(0xb346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb344));
        EXPECT(0x4e, gbc.readMem(0xb345));
        EXPECT(0x79, gbc.readMem(0xe132));
        // CB 4E 03A0
        gbc.setState(0xce5d, 0xdaf0, 0xc460, 0xfcfd, 0x5d88, 0x47de, 0x1, 0x0);
        gbc.writeMem(0x47de, { 0x90 });
        gbc.writeMem(0xce5d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdaf0, gbc.sp());
        EXPECT(0xce5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce5d));
        EXPECT(0x4e, gbc.readMem(0xce5e));
        // CB 4E 03A1
        gbc.setState(0x6601, 0xed37, 0xd3f0, 0x707b, 0xe59d, 0xe065, 0x0, 0x1);
        gbc.writeMem(0x6601, { 0xcb, 0x4e });
        gbc.writeMem(0xe065, { 0x2c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xed37, gbc.sp());
        EXPECT(0x6603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe065));
        // CB 4E 03A2
        gbc.setState(0x486f, 0x3e57, 0x3920, 0x6c15, 0xb52d, 0xbbbb, 0x1, 0x1);
        gbc.writeMem(0x486f, { 0xcb, 0x4e });
        gbc.writeMem(0xbbbb, { 0xde });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3e57, gbc.sp());
        EXPECT(0x4871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xbbbb));
        // CB 4E 03A3
        gbc.setState(0x35b3, 0x1d14, 0x1ae0, 0x27ba, 0xbcc, 0xae7d, 0x0, 0x0);
        gbc.writeMem(0x35b3, { 0xcb, 0x4e });
        gbc.writeMem(0xae7d, { 0x42 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1d14, gbc.sp());
        EXPECT(0x35b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xae7d));
        // CB 4E 03A4
        gbc.setState(0x6c7d, 0xda0e, 0x89a0, 0x9b26, 0x1535, 0x6a88, 0x0, 0x0);
        gbc.writeMem(0x6a88, { 0xb8 });
        gbc.writeMem(0x6c7d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xda0e, gbc.sp());
        EXPECT(0x6c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 03A5
        gbc.setState(0x26a3, 0x3a6, 0x8b20, 0x3d20, 0x3a9, 0x77b8, 0x1, 0x0);
        gbc.writeMem(0x26a3, { 0xcb, 0x4e });
        gbc.writeMem(0x77b8, { 0x75 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3a6, gbc.sp());
        EXPECT(0x26a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 03A6
        gbc.setState(0x8044, 0x8d8b, 0x54e0, 0x1870, 0x6d99, 0xeed7, 0x0, 0x0);
        gbc.writeMem(0x8044, { 0xcb, 0x4e });
        gbc.writeMem(0xeed7, { 0xe1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8d8b, gbc.sp());
        EXPECT(0x8046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8044));
        EXPECT(0x4e, gbc.readMem(0x8045));
        EXPECT(0xe1, gbc.readMem(0xeed7));
        // CB 4E 03A7
        gbc.setState(0xef9d, 0x89c8, 0xe8f0, 0x4e4, 0xca59, 0xa231, 0x0, 0x0);
        gbc.writeMem(0xa231, { 0x76 });
        gbc.writeMem(0xef9d, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x89c8, gbc.sp());
        EXPECT(0xef9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa231));
        EXPECT(0xcb, gbc.readMem(0xef9d));
        EXPECT(0x4e, gbc.readMem(0xef9e));
        // CB 4E 03A8
        gbc.setState(0xb9bc, 0xa506, 0xa760, 0xcbbe, 0x1534, 0x22a9, 0x0, 0x1);
        gbc.writeMem(0x22a9, { 0xa1 });
        gbc.writeMem(0xb9bc, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa506, gbc.sp());
        EXPECT(0xb9be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9bc));
        EXPECT(0x4e, gbc.readMem(0xb9bd));
        // CB 4E 03A9
        gbc.setState(0x59a5, 0xef7e, 0xc440, 0xcfa7, 0x7bd7, 0x170a, 0x1, 0x1);
        gbc.writeMem(0x170a, { 0x7f });
        gbc.writeMem(0x59a5, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xef7e, gbc.sp());
        EXPECT(0x59a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 03AA
        gbc.setState(0x89f5, 0xcae2, 0x9ce0, 0xfd48, 0x5a71, 0x1902, 0x0, 0x0);
        gbc.writeMem(0x1902, { 0xb1 });
        gbc.writeMem(0x89f5, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcae2, gbc.sp());
        EXPECT(0x89f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89f5));
        EXPECT(0x4e, gbc.readMem(0x89f6));
        // CB 4E 03AB
        gbc.setState(0xb852, 0x5722, 0xdd50, 0xff74, 0x3def, 0x2f33, 0x1, 0x1);
        gbc.writeMem(0x2f33, { 0xbd });
        gbc.writeMem(0xb852, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5722, gbc.sp());
        EXPECT(0xb854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb852));
        EXPECT(0x4e, gbc.readMem(0xb853));
        // CB 4E 03AC
        gbc.setState(0x8aaa, 0x3f1a, 0x120, 0x9ebd, 0x95e6, 0x65e, 0x0, 0x1);
        gbc.writeMem(0x65e, { 0x5c });
        gbc.writeMem(0x8aaa, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3f1a, gbc.sp());
        EXPECT(0x8aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aaa));
        EXPECT(0x4e, gbc.readMem(0x8aab));
        // CB 4E 03AD
        gbc.setState(0xc9fc, 0x10a7, 0x6cc0, 0xa09d, 0x17d4, 0xa44a, 0x0, 0x0);
        gbc.writeMem(0xa44a, { 0x6e });
        gbc.writeMem(0xc9fc, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x10a7, gbc.sp());
        EXPECT(0xc9fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa44a));
        EXPECT(0xcb, gbc.readMem(0xc9fc));
        EXPECT(0x4e, gbc.readMem(0xc9fd));
        // CB 4E 03AE
        gbc.setState(0x1b68, 0xfffe, 0xc850, 0x4cf8, 0xf0ac, 0xa0b5, 0x0, 0x1);
        gbc.writeMem(0x1b68, { 0xcb, 0x4e });
        gbc.writeMem(0xa0b5, { 0x8b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xfffe, gbc.sp());
        EXPECT(0x1b6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xa0b5));
        // CB 4E 03AF
        gbc.setState(0x3c96, 0x8404, 0xa0d0, 0xc9a2, 0xdebd, 0x8c82, 0x1, 0x0);
        gbc.writeMem(0x3c96, { 0xcb, 0x4e });
        gbc.writeMem(0x8c82, { 0x8e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8404, gbc.sp());
        EXPECT(0x3c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x8c82));
        // CB 4E 03B0
        gbc.setState(0x6961, 0xf899, 0x6e30, 0x973f, 0x37f8, 0xcfe3, 0x1, 0x1);
        gbc.writeMem(0x6961, { 0xcb, 0x4e });
        gbc.writeMem(0xcfe3, { 0xfa });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf899, gbc.sp());
        EXPECT(0x6963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xcfe3));
        // CB 4E 03B1
        gbc.setState(0xc8d6, 0x94a9, 0x8f70, 0x28ef, 0x33b0, 0x393e, 0x0, 0x1);
        gbc.writeMem(0x393e, { 0xdc });
        gbc.writeMem(0xc8d6, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x94a9, gbc.sp());
        EXPECT(0xc8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d6));
        EXPECT(0x4e, gbc.readMem(0xc8d7));
        // CB 4E 03B2
        gbc.setState(0x8ba5, 0x9875, 0xd4b0, 0x49ac, 0xdcfd, 0x35b5, 0x0, 0x1);
        gbc.writeMem(0x35b5, { 0x93 });
        gbc.writeMem(0x8ba5, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9875, gbc.sp());
        EXPECT(0x8ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba5));
        EXPECT(0x4e, gbc.readMem(0x8ba6));
        // CB 4E 03B3
        gbc.setState(0x137c, 0x7860, 0xe2e0, 0x4a3b, 0xc6a7, 0xdd7d, 0x1, 0x1);
        gbc.writeMem(0x137c, { 0xcb, 0x4e });
        gbc.writeMem(0xdd7d, { 0x99 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7860, gbc.sp());
        EXPECT(0x137e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdd7d));
        // CB 4E 03B4
        gbc.setState(0x472a, 0x1f4, 0xfe70, 0x1958, 0x4ef2, 0xd6bc, 0x0, 0x1);
        gbc.writeMem(0x472a, { 0xcb, 0x4e });
        gbc.writeMem(0xd6bc, { 0x23 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1f4, gbc.sp());
        EXPECT(0x472c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xd6bc));
        // CB 4E 03B5
        gbc.setState(0x60a5, 0x473f, 0xd030, 0x131a, 0x79bf, 0x1049, 0x1, 0x0);
        gbc.writeMem(0x1049, { 0xa1 });
        gbc.writeMem(0x60a5, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x473f, gbc.sp());
        EXPECT(0x60a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 03B6
        gbc.setState(0x3197, 0x8054, 0x6360, 0x4769, 0x2598, 0xc65d, 0x1, 0x1);
        gbc.writeMem(0x3197, { 0xcb, 0x4e });
        gbc.writeMem(0xc65d, { 0xa3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8054, gbc.sp());
        EXPECT(0x3199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc65d));
        // CB 4E 03B7
        gbc.setState(0xd6ac, 0xf655, 0xc3b0, 0x45e5, 0x5b8, 0xdd4a, 0x1, 0x1);
        gbc.writeMem(0xd6ac, { 0xcb, 0x4e });
        gbc.writeMem(0xdd4a, { 0x66 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf655, gbc.sp());
        EXPECT(0xd6ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ac));
        EXPECT(0x4e, gbc.readMem(0xd6ad));
        EXPECT(0x66, gbc.readMem(0xdd4a));
        // CB 4E 03B8
        gbc.setState(0x49f0, 0xca15, 0x23e0, 0x354c, 0x39c0, 0x79e6, 0x0, 0x0);
        gbc.writeMem(0x49f0, { 0xcb, 0x4e });
        gbc.writeMem(0x79e6, { 0x52 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xca15, gbc.sp());
        EXPECT(0x49f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 03BA
        gbc.setState(0x5b0a, 0xca8b, 0xb7f0, 0x9253, 0x1e51, 0xee78, 0x1, 0x0);
        gbc.writeMem(0x5b0a, { 0xcb, 0x4e });
        gbc.writeMem(0xee78, { 0xf2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xca8b, gbc.sp());
        EXPECT(0x5b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xee78));
        // CB 4E 03BB
        gbc.setState(0x90a3, 0x36bf, 0xdf20, 0x1f3a, 0x4ef8, 0xbea0, 0x1, 0x1);
        gbc.writeMem(0x90a3, { 0xcb, 0x4e });
        gbc.writeMem(0xbea0, { 0x6c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x36bf, gbc.sp());
        EXPECT(0x90a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a3));
        EXPECT(0x4e, gbc.readMem(0x90a4));
        EXPECT(0x6c, gbc.readMem(0xbea0));
        // CB 4E 03BC
        gbc.setState(0x750f, 0x7dbe, 0x2240, 0x3556, 0x251e, 0xc59a, 0x0, 0x0);
        gbc.writeMem(0x750f, { 0xcb, 0x4e });
        gbc.writeMem(0xc59a, { 0x9a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7dbe, gbc.sp());
        EXPECT(0x7511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc59a));
        // CB 4E 03BD
        gbc.setState(0x1b45, 0x595a, 0x4f90, 0x3ebd, 0xf724, 0x8c5f, 0x0, 0x0);
        gbc.writeMem(0x1b45, { 0xcb, 0x4e });
        gbc.writeMem(0x8c5f, { 0x8a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x595a, gbc.sp());
        EXPECT(0x1b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8c5f));
        // CB 4E 03BE
        gbc.setState(0xca02, 0xcf9f, 0xf1a0, 0x21b1, 0x599, 0x5ddb, 0x0, 0x0);
        gbc.writeMem(0x5ddb, { 0xb3 });
        gbc.writeMem(0xca02, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcf9f, gbc.sp());
        EXPECT(0xca04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca02));
        EXPECT(0x4e, gbc.readMem(0xca03));
        // CB 4E 03BF
        gbc.setState(0xd8ba, 0x4e9a, 0xc2e0, 0xe068, 0xaa6f, 0x10b1, 0x0, 0x0);
        gbc.writeMem(0x10b1, { 0x62 });
        gbc.writeMem(0xd8ba, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4e9a, gbc.sp());
        EXPECT(0xd8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ba));
        EXPECT(0x4e, gbc.readMem(0xd8bb));
        // CB 4E 03C0
        gbc.setState(0xc131, 0x73c7, 0xb1a0, 0x9198, 0xbf7a, 0xfe43, 0x0, 0x0);
        gbc.writeMem(0xc131, { 0xcb, 0x4e });
        gbc.writeMem(0xfe43, { 0x61 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x73c7, gbc.sp());
        EXPECT(0xc133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc131));
        EXPECT(0x4e, gbc.readMem(0xc132));
        EXPECT(0x61, gbc.readMem(0xfe43));
        // CB 4E 03C1
        gbc.setState(0xcf59, 0x38ee, 0xded0, 0xeca1, 0xbe76, 0xf938, 0x0, 0x0);
        gbc.writeMem(0xcf59, { 0xcb, 0x4e });
        gbc.writeMem(0xf938, { 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x38ee, gbc.sp());
        EXPECT(0xcf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf59));
        EXPECT(0x4e, gbc.readMem(0xcf5a));
        EXPECT(0xb5, gbc.readMem(0xf938));
        // CB 4E 03C2
        gbc.setState(0x20a1, 0x8f15, 0x9910, 0xbe31, 0x886, 0xc34d, 0x0, 0x1);
        gbc.writeMem(0x20a1, { 0xcb, 0x4e });
        gbc.writeMem(0xc34d, { 0x2b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8f15, gbc.sp());
        EXPECT(0x20a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc34d));
        // CB 4E 03C3
        gbc.setState(0x98d1, 0xa2a2, 0xab20, 0x66e7, 0x4c83, 0xf141, 0x1, 0x0);
        gbc.writeMem(0x98d1, { 0xcb, 0x4e });
        gbc.writeMem(0xf141, { 0x34 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa2a2, gbc.sp());
        EXPECT(0x98d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d1));
        EXPECT(0x4e, gbc.readMem(0x98d2));
        EXPECT(0x34, gbc.readMem(0xf141));
        // CB 4E 03C4
        gbc.setState(0x9d7b, 0xc7e8, 0xf0e0, 0xed7d, 0xa7d7, 0xf1fc, 0x1, 0x0);
        gbc.writeMem(0x9d7b, { 0xcb, 0x4e });
        gbc.writeMem(0xf1fc, { 0x1b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc7e8, gbc.sp());
        EXPECT(0x9d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d7b));
        EXPECT(0x4e, gbc.readMem(0x9d7c));
        EXPECT(0x1b, gbc.readMem(0xf1fc));
        // CB 4E 03C5
        gbc.setState(0x9015, 0xb152, 0x3bb0, 0x3d1d, 0xb887, 0xffa9, 0x1, 0x0);
        gbc.writeMem(0x9015, { 0xcb, 0x4e });
        gbc.writeMem(0xffa9, { 0x61 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb152, gbc.sp());
        EXPECT(0x9017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9015));
        EXPECT(0x4e, gbc.readMem(0x9016));
        EXPECT(0x61, gbc.readMem(0xffa9));
        // CB 4E 03C6
        gbc.setState(0xb3b7, 0x8577, 0xc980, 0x4bd5, 0x42cb, 0xe3e9, 0x0, 0x1);
        gbc.writeMem(0xb3b7, { 0xcb, 0x4e });
        gbc.writeMem(0xe3e9, { 0x50 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8577, gbc.sp());
        EXPECT(0xb3b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b7));
        EXPECT(0x4e, gbc.readMem(0xb3b8));
        EXPECT(0x50, gbc.readMem(0xe3e9));
        // CB 4E 03C7
        gbc.setState(0x295c, 0xc975, 0x760, 0xbd23, 0x6bab, 0x4397, 0x1, 0x1);
        gbc.writeMem(0x295c, { 0xcb, 0x4e });
        gbc.writeMem(0x4397, { 0xd2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc975, gbc.sp());
        EXPECT(0x295e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 03C9
        gbc.setState(0x16f7, 0x7a8e, 0xf2b0, 0x2f2b, 0xfbb6, 0xed61, 0x1, 0x1);
        gbc.writeMem(0x16f7, { 0xcb, 0x4e });
        gbc.writeMem(0xed61, { 0xdc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7a8e, gbc.sp());
        EXPECT(0x16f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xed61));
        // CB 4E 03CA
        gbc.setState(0x152c, 0x511, 0xc40, 0xa702, 0x7c7a, 0x19ee, 0x0, 0x1);
        gbc.writeMem(0x152c, { 0xcb, 0x4e });
        gbc.writeMem(0x19ee, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x511, gbc.sp());
        EXPECT(0x152e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 03CB
        gbc.setState(0xd625, 0xc72, 0x5030, 0x8c60, 0xb5fd, 0x3e5, 0x0, 0x0);
        gbc.writeMem(0x3e5, { 0x7d });
        gbc.writeMem(0xd625, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc72, gbc.sp());
        EXPECT(0xd627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd625));
        EXPECT(0x4e, gbc.readMem(0xd626));
        // CB 4E 03CC
        gbc.setState(0x55be, 0x3972, 0xeb70, 0x560, 0xe342, 0x251a, 0x1, 0x1);
        gbc.writeMem(0x251a, { 0xcd });
        gbc.writeMem(0x55be, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3972, gbc.sp());
        EXPECT(0x55c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 03CD
        gbc.setState(0x531a, 0xf59c, 0x1ab0, 0x1316, 0xb22e, 0x2cd1, 0x0, 0x1);
        gbc.writeMem(0x2cd1, { 0x31 });
        gbc.writeMem(0x531a, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf59c, gbc.sp());
        EXPECT(0x531c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 03CE
        gbc.setState(0xe22c, 0x234a, 0x8110, 0x9017, 0x90b8, 0x5d4e, 0x1, 0x0);
        gbc.writeMem(0x5d4e, { 0xaf });
        gbc.writeMem(0xe22c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x234a, gbc.sp());
        EXPECT(0xe22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22c));
        EXPECT(0x4e, gbc.readMem(0xe22d));
        // CB 4E 03CF
        gbc.setState(0x5ea1, 0x56be, 0x8b60, 0x793e, 0xb430, 0xc539, 0x1, 0x0);
        gbc.writeMem(0x5ea1, { 0xcb, 0x4e });
        gbc.writeMem(0xc539, { 0xdd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x56be, gbc.sp());
        EXPECT(0x5ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xc539));
        // CB 4E 03D0
        gbc.setState(0xd632, 0x937a, 0x5300, 0x17e5, 0x3762, 0x814c, 0x1, 0x0);
        gbc.writeMem(0x814c, { 0x8f });
        gbc.writeMem(0xd632, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x937a, gbc.sp());
        EXPECT(0xd634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x814c));
        EXPECT(0xcb, gbc.readMem(0xd632));
        EXPECT(0x4e, gbc.readMem(0xd633));
        // CB 4E 03D1
        gbc.setState(0x5a96, 0x506b, 0x6c90, 0x15ba, 0xf9e, 0xabed, 0x0, 0x0);
        gbc.writeMem(0x5a96, { 0xcb, 0x4e });
        gbc.writeMem(0xabed, { 0x4a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x506b, gbc.sp());
        EXPECT(0x5a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xabed));
        // CB 4E 03D2
        gbc.setState(0xae6e, 0x1bb2, 0x8660, 0xc17d, 0xee06, 0xbda, 0x0, 0x0);
        gbc.writeMem(0xbda, { 0x75 });
        gbc.writeMem(0xae6e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1bb2, gbc.sp());
        EXPECT(0xae70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae6e));
        EXPECT(0x4e, gbc.readMem(0xae6f));
        // CB 4E 03D3
        gbc.setState(0x9876, 0x9106, 0x160, 0xe505, 0x7ba0, 0x87c4, 0x1, 0x1);
        gbc.writeMem(0x87c4, { 0x58 });
        gbc.writeMem(0x9876, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9106, gbc.sp());
        EXPECT(0x9878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x87c4));
        EXPECT(0xcb, gbc.readMem(0x9876));
        EXPECT(0x4e, gbc.readMem(0x9877));
        // CB 4E 03D4
        gbc.setState(0x1bc7, 0x6144, 0x1400, 0xd407, 0xdd70, 0x95b4, 0x0, 0x1);
        gbc.writeMem(0x1bc7, { 0xcb, 0x4e });
        gbc.writeMem(0x95b4, { 0x7d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6144, gbc.sp());
        EXPECT(0x1bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x95b4));
        // CB 4E 03D5
        gbc.setState(0xb8ab, 0x2511, 0xd9f0, 0xa5dd, 0x9e95, 0x3c66, 0x1, 0x0);
        gbc.writeMem(0x3c66, { 0xd });
        gbc.writeMem(0xb8ab, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2511, gbc.sp());
        EXPECT(0xb8ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ab));
        EXPECT(0x4e, gbc.readMem(0xb8ac));
        // CB 4E 03D6
        gbc.setState(0x953a, 0x1c1e, 0xf2a0, 0xc258, 0xb31, 0xa627, 0x1, 0x1);
        gbc.writeMem(0x953a, { 0xcb, 0x4e });
        gbc.writeMem(0xa627, { 0xa });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1c1e, gbc.sp());
        EXPECT(0x953c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x953a));
        EXPECT(0x4e, gbc.readMem(0x953b));
        EXPECT(0xa, gbc.readMem(0xa627));
        // CB 4E 03D7
        gbc.setState(0xf28, 0x8d3c, 0x86d0, 0xff81, 0x294, 0xfa06, 0x0, 0x1);
        gbc.writeMem(0xf28, { 0xcb, 0x4e });
        gbc.writeMem(0xfa06, { 0xe0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8d3c, gbc.sp());
        EXPECT(0xf2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xfa06));
        // CB 4E 03D9
        gbc.setState(0xd2bb, 0x2fd8, 0x82e0, 0x8d82, 0x470, 0x29af, 0x0, 0x0);
        gbc.writeMem(0x29af, { 0x22 });
        gbc.writeMem(0xd2bb, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2fd8, gbc.sp());
        EXPECT(0xd2bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2bb));
        EXPECT(0x4e, gbc.readMem(0xd2bc));
        // CB 4E 03DA
        gbc.setState(0xc41c, 0x5dba, 0x82a0, 0xf0a8, 0x28c5, 0xc6e5, 0x1, 0x0);
        gbc.writeMem(0xc41c, { 0xcb, 0x4e });
        gbc.writeMem(0xc6e5, { 0x92 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5dba, gbc.sp());
        EXPECT(0xc41e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41c));
        EXPECT(0x4e, gbc.readMem(0xc41d));
        EXPECT(0x92, gbc.readMem(0xc6e5));
        // CB 4E 03DB
        gbc.setState(0xa897, 0x3aea, 0x4260, 0x6471, 0x1ef2, 0x445a, 0x1, 0x0);
        gbc.writeMem(0x445a, { 0xe2 });
        gbc.writeMem(0xa897, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3aea, gbc.sp());
        EXPECT(0xa899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa897));
        EXPECT(0x4e, gbc.readMem(0xa898));
        // CB 4E 03DC
        gbc.setState(0xd5ce, 0xf80e, 0x7a60, 0x929d, 0x4d48, 0x7d7c, 0x0, 0x1);
        gbc.writeMem(0x7d7c, { 0x71 });
        gbc.writeMem(0xd5ce, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf80e, gbc.sp());
        EXPECT(0xd5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ce));
        EXPECT(0x4e, gbc.readMem(0xd5cf));
        // CB 4E 03DE
        gbc.setState(0xb7d5, 0xbc78, 0x2780, 0x567f, 0x8202, 0x1b4e, 0x0, 0x0);
        gbc.writeMem(0x1b4e, { 0xb7 });
        gbc.writeMem(0xb7d5, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbc78, gbc.sp());
        EXPECT(0xb7d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d5));
        EXPECT(0x4e, gbc.readMem(0xb7d6));
        // CB 4E 03DF
        gbc.setState(0x9aa, 0xbd0a, 0x6d20, 0x776, 0x6277, 0xd342, 0x0, 0x0);
        gbc.writeMem(0x9aa, { 0xcb, 0x4e });
        gbc.writeMem(0xd342, { 0xf2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xbd0a, gbc.sp());
        EXPECT(0x9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xd342));
        // CB 4E 03E0
        gbc.setState(0x60a1, 0x93f, 0x3090, 0xf270, 0xc5cc, 0xf8e7, 0x1, 0x1);
        gbc.writeMem(0x60a1, { 0xcb, 0x4e });
        gbc.writeMem(0xf8e7, { 0xa3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x93f, gbc.sp());
        EXPECT(0x60a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xf8e7));
        // CB 4E 03E1
        gbc.setState(0x1655, 0xcad5, 0xd7a0, 0x3a10, 0xd5a3, 0x2bc4, 0x1, 0x1);
        gbc.writeMem(0x1655, { 0xcb, 0x4e });
        gbc.writeMem(0x2bc4, { 0x35 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcad5, gbc.sp());
        EXPECT(0x1657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 03E2
        gbc.setState(0xaf6e, 0x795, 0xcc30, 0x2a57, 0x8d6f, 0x6bb, 0x1, 0x0);
        gbc.writeMem(0x6bb, { 0xc7 });
        gbc.writeMem(0xaf6e, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x795, gbc.sp());
        EXPECT(0xaf70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6e));
        EXPECT(0x4e, gbc.readMem(0xaf6f));
        // CB 4E 03E3
        gbc.setState(0xb6e5, 0x93ca, 0x55e0, 0x8244, 0xa164, 0x448c, 0x0, 0x0);
        gbc.writeMem(0x448c, { 0x4a });
        gbc.writeMem(0xb6e5, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x93ca, gbc.sp());
        EXPECT(0xb6e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e5));
        EXPECT(0x4e, gbc.readMem(0xb6e6));
        // CB 4E 03E4
        gbc.setState(0x3000, 0x608f, 0xc630, 0x12ba, 0xee3, 0x6a59, 0x0, 0x0);
        gbc.writeMem(0x3000, { 0xcb, 0x4e });
        gbc.writeMem(0x6a59, { 0x6b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x608f, gbc.sp());
        EXPECT(0x3002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4E 03E5
        gbc.setState(0x3f43, 0x895b, 0xb840, 0xd39f, 0xbd25, 0x21f7, 0x1, 0x0);
        gbc.writeMem(0x21f7, { 0x7f });
        gbc.writeMem(0x3f43, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x895b, gbc.sp());
        EXPECT(0x3f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4E 03E6
        gbc.setState(0x8b2c, 0x3440, 0x2f80, 0x95e9, 0x4a88, 0x511b, 0x0, 0x1);
        gbc.writeMem(0x511b, { 0x49 });
        gbc.writeMem(0x8b2c, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3440, gbc.sp());
        EXPECT(0x8b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b2c));
        EXPECT(0x4e, gbc.readMem(0x8b2d));
        // CB 4E 03E7
        gbc.setState(0x459f, 0x9a5, 0x8ad0, 0x41c8, 0xd7fc, 0x43ba, 0x0, 0x1);
        gbc.writeMem(0x43ba, { 0x13 });
        gbc.writeMem(0x459f, { 0xcb, 0x4e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9a5, gbc.sp());
        EXPECT(0x45a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
