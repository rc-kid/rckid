#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_ae)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_ae) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // AE 0000
        gbc.setState(0x20b6, 0x18a5, 0x6900, 0xa12, 0xac2c, 0x6634, 0x0, 0x1);
        gbc.writeMem(0x20b6, { 0xae });
        gbc.writeMem(0x6634, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x18a5);
        EXPECT(gbc.pc(), 0x20b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0001
        gbc.setState(0x7e22, 0x8a72, 0x72b0, 0xff11, 0x1262, 0x8bd3, 0x1, 0x1);
        gbc.writeMem(0x7e22, { 0xae });
        gbc.writeMem(0x8bd3, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8a72);
        EXPECT(gbc.pc(), 0x7e23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bd3), 0x74);
        // AE 0002
        gbc.setState(0xe0da, 0x5b20, 0x7210, 0xdeb6, 0xda6b, 0xe1fc, 0x1, 0x1);
        gbc.writeMem(0xe0da, { 0xae });
        gbc.writeMem(0xe1fc, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x5b20);
        EXPECT(gbc.pc(), 0xe0db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0da), 0xae);
        EXPECT(gbc.readMem(0xe1fc), 0x75);
        // AE 0003
        gbc.setState(0xe07c, 0x6afa, 0x3400, 0xbb92, 0x27ef, 0xe61c, 0x0, 0x0);
        gbc.writeMem(0xe07c, { 0xae });
        gbc.writeMem(0xe61c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6afa);
        EXPECT(gbc.pc(), 0xe07d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe07c), 0xae);
        EXPECT(gbc.readMem(0xe61c), 0xae);
        // AE 0004
        gbc.setState(0xec4e, 0xeca9, 0xde0, 0x253f, 0x3d29, 0x8fb6, 0x0, 0x0);
        gbc.writeMem(0x8fb6, { 0xf9 });
        gbc.writeMem(0xec4e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xeca9);
        EXPECT(gbc.pc(), 0xec4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb6), 0xf9);
        EXPECT(gbc.readMem(0xec4e), 0xae);
        // AE 0005
        gbc.setState(0x6f4b, 0x676d, 0x8380, 0xd8e0, 0xb687, 0x7dbd, 0x1, 0x0);
        gbc.writeMem(0x6f4b, { 0xae });
        gbc.writeMem(0x7dbd, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x676d);
        EXPECT(gbc.pc(), 0x6f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0006
        gbc.setState(0x2bba, 0xe3e7, 0x7970, 0xe282, 0xdfd, 0x2a04, 0x1, 0x0);
        gbc.writeMem(0x2a04, { 0x11 });
        gbc.writeMem(0x2bba, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe3e7);
        EXPECT(gbc.pc(), 0x2bbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0007
        gbc.setState(0xacc7, 0xb550, 0x2bb0, 0xa4a9, 0xd2ca, 0xe852, 0x0, 0x0);
        gbc.writeMem(0xacc7, { 0xae });
        gbc.writeMem(0xe852, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb550);
        EXPECT(gbc.pc(), 0xacc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc7), 0xae);
        EXPECT(gbc.readMem(0xe852), 0x91);
        // AE 0008
        gbc.setState(0xd66, 0x6360, 0xcc10, 0xeb9a, 0xb3b4, 0xd8d9, 0x0, 0x0);
        gbc.writeMem(0xd66, { 0xae });
        gbc.writeMem(0xd8d9, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6360);
        EXPECT(gbc.pc(), 0xd67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d9), 0xe3);
        // AE 0009
        gbc.setState(0xd753, 0x57cc, 0x2470, 0x334c, 0xe2ac, 0xc849, 0x0, 0x1);
        gbc.writeMem(0xc849, { 0xfb });
        gbc.writeMem(0xd753, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x57cc);
        EXPECT(gbc.pc(), 0xd754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc849), 0xfb);
        EXPECT(gbc.readMem(0xd753), 0xae);
        // AE 000A
        gbc.setState(0xacb2, 0x82de, 0xb5e0, 0xb299, 0x6c63, 0x52d5, 0x1, 0x1);
        gbc.writeMem(0x52d5, { 0x85 });
        gbc.writeMem(0xacb2, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x82de);
        EXPECT(gbc.pc(), 0xacb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacb2), 0xae);
        // AE 000C
        gbc.setState(0x5453, 0x76bd, 0x3340, 0xa0e, 0x20ab, 0xfe2b, 0x1, 0x0);
        gbc.writeMem(0x5453, { 0xae });
        gbc.writeMem(0xfe2b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x76bd);
        EXPECT(gbc.pc(), 0x5454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe2b), 0xd1);
        // AE 000E
        gbc.setState(0x5379, 0x19f1, 0xb2d0, 0xbb62, 0x8a64, 0x4c2f, 0x0, 0x0);
        gbc.writeMem(0x4c2f, { 0xa1 });
        gbc.writeMem(0x5379, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x19f1);
        EXPECT(gbc.pc(), 0x537a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 000F
        gbc.setState(0x9d41, 0xc1f8, 0xb350, 0x5702, 0xb80e, 0x4d0c, 0x1, 0x0);
        gbc.writeMem(0x4d0c, { 0xa });
        gbc.writeMem(0x9d41, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc1f8);
        EXPECT(gbc.pc(), 0x9d42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d41), 0xae);
        // AE 0010
        gbc.setState(0x7381, 0x1152, 0x8a90, 0x36bf, 0xe65, 0x37e5, 0x1, 0x1);
        gbc.writeMem(0x37e5, { 0xf4 });
        gbc.writeMem(0x7381, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1152);
        EXPECT(gbc.pc(), 0x7382);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0011
        gbc.setState(0x312f, 0x45, 0x5700, 0xf4b7, 0xaeb0, 0x2a8d, 0x0, 0x1);
        gbc.writeMem(0x2a8d, { 0xce });
        gbc.writeMem(0x312f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x45);
        EXPECT(gbc.pc(), 0x3130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0012
        gbc.setState(0xcdfa, 0x1daf, 0x1940, 0xd504, 0x9ce8, 0x81d0, 0x1, 0x1);
        gbc.writeMem(0x81d0, { 0x1e });
        gbc.writeMem(0xcdfa, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1daf);
        EXPECT(gbc.pc(), 0xcdfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81d0), 0x1e);
        EXPECT(gbc.readMem(0xcdfa), 0xae);
        // AE 0013
        gbc.setState(0x8285, 0x91b3, 0xac50, 0x1d89, 0x23a5, 0x11cf, 0x1, 0x1);
        gbc.writeMem(0x11cf, { 0xb7 });
        gbc.writeMem(0x8285, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x91b3);
        EXPECT(gbc.pc(), 0x8286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8285), 0xae);
        // AE 0014
        gbc.setState(0x1303, 0xb16f, 0xc8b0, 0x506e, 0x3c10, 0x511, 0x1, 0x1);
        gbc.writeMem(0x511, { 0xd6 });
        gbc.writeMem(0x1303, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb16f);
        EXPECT(gbc.pc(), 0x1304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0015
        gbc.setState(0x6d42, 0x434d, 0x7a20, 0x55e6, 0xc665, 0x1019, 0x0, 0x1);
        gbc.writeMem(0x1019, { 0x4 });
        gbc.writeMem(0x6d42, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x434d);
        EXPECT(gbc.pc(), 0x6d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0016
        gbc.setState(0x51b0, 0xb6a6, 0xb670, 0xc8ed, 0x3ad4, 0x20b0, 0x0, 0x1);
        gbc.writeMem(0x20b0, { 0xc0 });
        gbc.writeMem(0x51b0, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb6a6);
        EXPECT(gbc.pc(), 0x51b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0017
        gbc.setState(0x7867, 0x1dcb, 0x6940, 0xa9bd, 0xd081, 0xef17, 0x0, 0x1);
        gbc.writeMem(0x7867, { 0xae });
        gbc.writeMem(0xef17, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1dcb);
        EXPECT(gbc.pc(), 0x7868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef17), 0x56);
        // AE 0019
        gbc.setState(0xc2d7, 0x3df, 0x21d0, 0xf74f, 0x137d, 0xbc46, 0x0, 0x0);
        gbc.writeMem(0xbc46, { 0xd5 });
        gbc.writeMem(0xc2d7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3df);
        EXPECT(gbc.pc(), 0xc2d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc46), 0xd5);
        EXPECT(gbc.readMem(0xc2d7), 0xae);
        // AE 001A
        gbc.setState(0xc65c, 0x4933, 0xda80, 0xbea3, 0xba7c, 0xc425, 0x1, 0x1);
        gbc.writeMem(0xc425, { 0x2d });
        gbc.writeMem(0xc65c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4933);
        EXPECT(gbc.pc(), 0xc65d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc425), 0x2d);
        EXPECT(gbc.readMem(0xc65c), 0xae);
        // AE 001B
        gbc.setState(0x73d5, 0xef87, 0xaca0, 0x6443, 0x3541, 0x545d, 0x1, 0x1);
        gbc.writeMem(0x545d, { 0x69 });
        gbc.writeMem(0x73d5, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xef87);
        EXPECT(gbc.pc(), 0x73d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 001C
        gbc.setState(0xc0a4, 0x2a4d, 0xd040, 0xaa43, 0xa010, 0xa974, 0x1, 0x0);
        gbc.writeMem(0xa974, { 0x4b });
        gbc.writeMem(0xc0a4, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2a4d);
        EXPECT(gbc.pc(), 0xc0a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa974), 0x4b);
        EXPECT(gbc.readMem(0xc0a4), 0xae);
        // AE 001D
        gbc.setState(0x77ed, 0x587f, 0xab10, 0x9144, 0x9be1, 0x6687, 0x0, 0x1);
        gbc.writeMem(0x6687, { 0x93 });
        gbc.writeMem(0x77ed, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x587f);
        EXPECT(gbc.pc(), 0x77ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 001E
        gbc.setState(0x926b, 0x1791, 0x9c0, 0x7650, 0xbbd0, 0x6d4, 0x0, 0x1);
        gbc.writeMem(0x6d4, { 0xfa });
        gbc.writeMem(0x926b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1791);
        EXPECT(gbc.pc(), 0x926c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x926b), 0xae);
        // AE 001F
        gbc.setState(0x4c41, 0x297e, 0xb570, 0x9a25, 0x7f16, 0x89, 0x1, 0x0);
        gbc.writeMem(0x89, { 0xd5 });
        gbc.writeMem(0x4c41, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x297e);
        EXPECT(gbc.pc(), 0x4c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0020
        gbc.setState(0xd52c, 0x75fa, 0x6b50, 0xe652, 0xb228, 0x2f95, 0x0, 0x0);
        gbc.writeMem(0x2f95, { 0x76 });
        gbc.writeMem(0xd52c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x75fa);
        EXPECT(gbc.pc(), 0xd52d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd52c), 0xae);
        // AE 0021
        gbc.setState(0x2c91, 0x57c4, 0xdab0, 0x59b7, 0xeb4, 0xe666, 0x1, 0x0);
        gbc.writeMem(0x2c91, { 0xae });
        gbc.writeMem(0xe666, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x57c4);
        EXPECT(gbc.pc(), 0x2c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe666), 0xe7);
        // AE 0022
        gbc.setState(0x8d9a, 0x9a48, 0x46d0, 0xa6c4, 0x694e, 0x24d6, 0x0, 0x0);
        gbc.writeMem(0x24d6, { 0x6b });
        gbc.writeMem(0x8d9a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9a48);
        EXPECT(gbc.pc(), 0x8d9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d9a), 0xae);
        // AE 0023
        gbc.setState(0xc406, 0x59de, 0x1970, 0x1885, 0x165c, 0xb0d1, 0x1, 0x0);
        gbc.writeMem(0xb0d1, { 0x80 });
        gbc.writeMem(0xc406, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x59de);
        EXPECT(gbc.pc(), 0xc407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0d1), 0x80);
        EXPECT(gbc.readMem(0xc406), 0xae);
        // AE 0024
        gbc.setState(0xc979, 0xc835, 0xbdd0, 0x5756, 0x712f, 0x3f55, 0x0, 0x0);
        gbc.writeMem(0x3f55, { 0xc5 });
        gbc.writeMem(0xc979, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc835);
        EXPECT(gbc.pc(), 0xc97a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc979), 0xae);
        // AE 0025
        gbc.setState(0x80ae, 0x9950, 0xacc0, 0x80a0, 0x5ce4, 0xafcb, 0x1, 0x0);
        gbc.writeMem(0x80ae, { 0xae });
        gbc.writeMem(0xafcb, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9950);
        EXPECT(gbc.pc(), 0x80af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ae), 0xae);
        EXPECT(gbc.readMem(0xafcb), 0x1b);
        // AE 0026
        gbc.setState(0x6fd5, 0xc34f, 0x58e0, 0xb229, 0xdee5, 0x47ae, 0x0, 0x0);
        gbc.writeMem(0x47ae, { 0x28 });
        gbc.writeMem(0x6fd5, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc34f);
        EXPECT(gbc.pc(), 0x6fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0027
        gbc.setState(0xb39d, 0x4ecb, 0x5a90, 0x6069, 0x7d9a, 0xf040, 0x1, 0x1);
        gbc.writeMem(0xb39d, { 0xae });
        gbc.writeMem(0xf040, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4ecb);
        EXPECT(gbc.pc(), 0xb39e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb39d), 0xae);
        EXPECT(gbc.readMem(0xf040), 0x34);
        // AE 0028
        gbc.setState(0x5867, 0xd109, 0x9c50, 0x5b62, 0x538d, 0x71d, 0x0, 0x1);
        gbc.writeMem(0x71d, { 0x75 });
        gbc.writeMem(0x5867, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd109);
        EXPECT(gbc.pc(), 0x5868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0029
        gbc.setState(0x87a4, 0x6492, 0x9cc0, 0x523, 0xc072, 0x2b02, 0x0, 0x0);
        gbc.writeMem(0x2b02, { 0xcc });
        gbc.writeMem(0x87a4, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6492);
        EXPECT(gbc.pc(), 0x87a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a4), 0xae);
        // AE 002A
        gbc.setState(0x6755, 0x6792, 0xd2c0, 0xb874, 0x2032, 0xd893, 0x1, 0x0);
        gbc.writeMem(0x6755, { 0xae });
        gbc.writeMem(0xd893, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6792);
        EXPECT(gbc.pc(), 0x6756);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd893), 0x5e);
        // AE 002B
        gbc.setState(0xc6f7, 0x93a8, 0x620, 0xa91e, 0x82c6, 0x3b51, 0x1, 0x0);
        gbc.writeMem(0x3b51, { 0xf1 });
        gbc.writeMem(0xc6f7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x93a8);
        EXPECT(gbc.pc(), 0xc6f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6f7), 0xae);
        // AE 002C
        gbc.setState(0xc1fd, 0x4574, 0x6e50, 0xa7e7, 0x232c, 0x5033, 0x1, 0x0);
        gbc.writeMem(0x5033, { 0xd6 });
        gbc.writeMem(0xc1fd, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4574);
        EXPECT(gbc.pc(), 0xc1fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1fd), 0xae);
        // AE 002D
        gbc.setState(0x5f4d, 0x160b, 0x4be0, 0xad16, 0x8794, 0xd37d, 0x1, 0x1);
        gbc.writeMem(0x5f4d, { 0xae });
        gbc.writeMem(0xd37d, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x160b);
        EXPECT(gbc.pc(), 0x5f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd37d), 0xe3);
        // AE 002E
        gbc.setState(0xe6af, 0x8c4d, 0x92e0, 0x60c7, 0x4efa, 0xf646, 0x0, 0x1);
        gbc.writeMem(0xe6af, { 0xae });
        gbc.writeMem(0xf646, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8c4d);
        EXPECT(gbc.pc(), 0xe6b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6af), 0xae);
        EXPECT(gbc.readMem(0xf646), 0x56);
        // AE 002F
        gbc.setState(0x8b25, 0xb361, 0x1c90, 0x2a37, 0xe0da, 0x3916, 0x0, 0x0);
        gbc.writeMem(0x3916, { 0xbb });
        gbc.writeMem(0x8b25, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb361);
        EXPECT(gbc.pc(), 0x8b26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b25), 0xae);
        // AE 0030
        gbc.setState(0x2a16, 0x8b77, 0xca20, 0x7e6e, 0xa17c, 0x28fe, 0x1, 0x1);
        gbc.writeMem(0x28fe, { 0x8b });
        gbc.writeMem(0x2a16, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8b77);
        EXPECT(gbc.pc(), 0x2a17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0031
        gbc.setState(0x8043, 0xbf09, 0xcb10, 0x312b, 0xc44c, 0x4952, 0x1, 0x0);
        gbc.writeMem(0x4952, { 0x6b });
        gbc.writeMem(0x8043, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbf09);
        EXPECT(gbc.pc(), 0x8044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8043), 0xae);
        // AE 0032
        gbc.setState(0x5011, 0xdb2a, 0xe540, 0xcfe5, 0xd50b, 0x613d, 0x1, 0x1);
        gbc.writeMem(0x5011, { 0xae });
        gbc.writeMem(0x613d, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xdb2a);
        EXPECT(gbc.pc(), 0x5012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0033
        gbc.setState(0x49f5, 0xb6d3, 0x2f50, 0xf5b0, 0x6ff6, 0x553c, 0x0, 0x1);
        gbc.writeMem(0x49f5, { 0xae });
        gbc.writeMem(0x553c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb6d3);
        EXPECT(gbc.pc(), 0x49f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0034
        gbc.setState(0x8f3f, 0x8744, 0xfb90, 0x8238, 0xc799, 0x57c1, 0x1, 0x0);
        gbc.writeMem(0x57c1, { 0xb6 });
        gbc.writeMem(0x8f3f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8744);
        EXPECT(gbc.pc(), 0x8f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f3f), 0xae);
        // AE 0035
        gbc.setState(0xe2f3, 0x43eb, 0x6840, 0x9240, 0x8b93, 0xf826, 0x1, 0x0);
        gbc.writeMem(0xe2f3, { 0xae });
        gbc.writeMem(0xf826, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x43eb);
        EXPECT(gbc.pc(), 0xe2f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2f3), 0xae);
        EXPECT(gbc.readMem(0xf826), 0x68);
        // AE 0037
        gbc.setState(0x200e, 0xbc65, 0x8020, 0x8244, 0xd93f, 0x1af6, 0x1, 0x0);
        gbc.writeMem(0x1af6, { 0x6b });
        gbc.writeMem(0x200e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xbc65);
        EXPECT(gbc.pc(), 0x200f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0038
        gbc.setState(0xa5a7, 0x2a1e, 0xf950, 0x6f0f, 0x78cd, 0x87cd, 0x0, 0x0);
        gbc.writeMem(0x87cd, { 0x49 });
        gbc.writeMem(0xa5a7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2a1e);
        EXPECT(gbc.pc(), 0xa5a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87cd), 0x49);
        EXPECT(gbc.readMem(0xa5a7), 0xae);
        // AE 0039
        gbc.setState(0xc344, 0x5bf7, 0xbfb0, 0x7856, 0x1674, 0xb17e, 0x0, 0x0);
        gbc.writeMem(0xb17e, { 0xd5 });
        gbc.writeMem(0xc344, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5bf7);
        EXPECT(gbc.pc(), 0xc345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb17e), 0xd5);
        EXPECT(gbc.readMem(0xc344), 0xae);
        // AE 003A
        gbc.setState(0x6f2f, 0xf890, 0x3fe0, 0xbe22, 0xcfdb, 0x1503, 0x1, 0x1);
        gbc.writeMem(0x1503, { 0xe6 });
        gbc.writeMem(0x6f2f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf890);
        EXPECT(gbc.pc(), 0x6f30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 003B
        gbc.setState(0x8d4a, 0xe905, 0x3f00, 0x8c49, 0x3e4f, 0x3300, 0x1, 0x1);
        gbc.writeMem(0x3300, { 0xb });
        gbc.writeMem(0x8d4a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe905);
        EXPECT(gbc.pc(), 0x8d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d4a), 0xae);
        // AE 003C
        gbc.setState(0x6547, 0xd7b1, 0x730, 0x9b66, 0xb2b8, 0xa37b, 0x0, 0x1);
        gbc.writeMem(0x6547, { 0xae });
        gbc.writeMem(0xa37b, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd7b1);
        EXPECT(gbc.pc(), 0x6548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa37b), 0x64);
        // AE 003D
        gbc.setState(0xe6a6, 0x9888, 0xa010, 0x1aca, 0xf1f2, 0xcf3f, 0x1, 0x0);
        gbc.writeMem(0xcf3f, { 0x81 });
        gbc.writeMem(0xe6a6, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9888);
        EXPECT(gbc.pc(), 0xe6a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf3f), 0x81);
        EXPECT(gbc.readMem(0xe6a6), 0xae);
        // AE 003E
        gbc.setState(0x2dc1, 0xefa8, 0x2f40, 0x58d8, 0x20df, 0x7211, 0x0, 0x1);
        gbc.writeMem(0x2dc1, { 0xae });
        gbc.writeMem(0x7211, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xefa8);
        EXPECT(gbc.pc(), 0x2dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 003F
        gbc.setState(0x7741, 0x76f6, 0x3c30, 0x2bb7, 0xe9a6, 0x8735, 0x1, 0x0);
        gbc.writeMem(0x7741, { 0xae });
        gbc.writeMem(0x8735, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x76f6);
        EXPECT(gbc.pc(), 0x7742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8735), 0xec);
        // AE 0040
        gbc.setState(0xefb6, 0x2e71, 0x96e0, 0x4566, 0x6f45, 0xa632, 0x1, 0x0);
        gbc.writeMem(0xa632, { 0x9d });
        gbc.writeMem(0xefb6, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2e71);
        EXPECT(gbc.pc(), 0xefb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa632), 0x9d);
        EXPECT(gbc.readMem(0xefb6), 0xae);
        // AE 0041
        gbc.setState(0xad0a, 0x82cd, 0xd940, 0xad39, 0xfb4b, 0xf6c7, 0x1, 0x1);
        gbc.writeMem(0xad0a, { 0xae });
        gbc.writeMem(0xf6c7, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x82cd);
        EXPECT(gbc.pc(), 0xad0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad0a), 0xae);
        EXPECT(gbc.readMem(0xf6c7), 0xf0);
        // AE 0042
        gbc.setState(0x189f, 0x67f8, 0x9620, 0xc61b, 0xdd18, 0x9e16, 0x1, 0x1);
        gbc.writeMem(0x189f, { 0xae });
        gbc.writeMem(0x9e16, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x67f8);
        EXPECT(gbc.pc(), 0x18a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e16), 0x2e);
        // AE 0043
        gbc.setState(0x3b4c, 0x29dd, 0x9600, 0xad0f, 0xe0d5, 0xd4f5, 0x0, 0x0);
        gbc.writeMem(0x3b4c, { 0xae });
        gbc.writeMem(0xd4f5, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x29dd);
        EXPECT(gbc.pc(), 0x3b4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4f5), 0xe8);
        // AE 0045
        gbc.setState(0x688c, 0x2924, 0x7320, 0x42e0, 0x9448, 0x41ce, 0x1, 0x1);
        gbc.writeMem(0x41ce, { 0x5e });
        gbc.writeMem(0x688c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2924);
        EXPECT(gbc.pc(), 0x688d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0046
        gbc.setState(0xc899, 0xca9f, 0x7c10, 0x8231, 0xd6ad, 0x4e4f, 0x1, 0x0);
        gbc.writeMem(0x4e4f, { 0x90 });
        gbc.writeMem(0xc899, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xca9f);
        EXPECT(gbc.pc(), 0xc89a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc899), 0xae);
        // AE 0047
        gbc.setState(0x605b, 0x5389, 0xc290, 0x8310, 0xeffa, 0xc03a, 0x0, 0x0);
        gbc.writeMem(0x605b, { 0xae });
        gbc.writeMem(0xc03a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5389);
        EXPECT(gbc.pc(), 0x605c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc03a), 0x90);
        // AE 0048
        gbc.setState(0xbd15, 0x7981, 0x8900, 0x4037, 0x1aa8, 0x4b06, 0x0, 0x0);
        gbc.writeMem(0x4b06, { 0xca });
        gbc.writeMem(0xbd15, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7981);
        EXPECT(gbc.pc(), 0xbd16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd15), 0xae);
        // AE 0049
        gbc.setState(0xb9be, 0x994, 0x5590, 0xb99a, 0x6eef, 0xb58f, 0x0, 0x1);
        gbc.writeMem(0xb58f, { 0x56 });
        gbc.writeMem(0xb9be, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x994);
        EXPECT(gbc.pc(), 0xb9bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb58f), 0x56);
        EXPECT(gbc.readMem(0xb9be), 0xae);
        // AE 004A
        gbc.setState(0xd252, 0x343d, 0xd610, 0xf1e4, 0xcc4, 0x1b48, 0x0, 0x0);
        gbc.writeMem(0x1b48, { 0x70 });
        gbc.writeMem(0xd252, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x343d);
        EXPECT(gbc.pc(), 0xd253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd252), 0xae);
        // AE 004B
        gbc.setState(0xebda, 0x6aba, 0x1310, 0x6c45, 0x40d9, 0xa5c3, 0x1, 0x0);
        gbc.writeMem(0xa5c3, { 0x3d });
        gbc.writeMem(0xebda, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6aba);
        EXPECT(gbc.pc(), 0xebdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c3), 0x3d);
        EXPECT(gbc.readMem(0xebda), 0xae);
        // AE 004C
        gbc.setState(0x80dc, 0xb66b, 0x9930, 0x1a60, 0x4ca, 0x6280, 0x0, 0x0);
        gbc.writeMem(0x6280, { 0x1e });
        gbc.writeMem(0x80dc, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb66b);
        EXPECT(gbc.pc(), 0x80dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80dc), 0xae);
        // AE 004D
        gbc.setState(0x6207, 0x16e6, 0x2930, 0x6bd8, 0xe277, 0xfbb1, 0x0, 0x0);
        gbc.writeMem(0x6207, { 0xae });
        gbc.writeMem(0xfbb1, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x16e6);
        EXPECT(gbc.pc(), 0x6208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfbb1), 0xed);
        // AE 004E
        gbc.setState(0xa528, 0x6346, 0x1a30, 0x2551, 0xc85, 0xce79, 0x1, 0x0);
        gbc.writeMem(0xa528, { 0xae });
        gbc.writeMem(0xce79, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6346);
        EXPECT(gbc.pc(), 0xa529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa528), 0xae);
        EXPECT(gbc.readMem(0xce79), 0x2);
        // AE 004F
        gbc.setState(0x1b89, 0x4d43, 0xe660, 0x3ecb, 0xaf30, 0x2242, 0x1, 0x1);
        gbc.writeMem(0x1b89, { 0xae });
        gbc.writeMem(0x2242, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4d43);
        EXPECT(gbc.pc(), 0x1b8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0050
        gbc.setState(0x3df0, 0xed09, 0xc210, 0xf212, 0x50c, 0xea59, 0x1, 0x1);
        gbc.writeMem(0x3df0, { 0xae });
        gbc.writeMem(0xea59, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xed09);
        EXPECT(gbc.pc(), 0x3df1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea59), 0xe7);
        // AE 0051
        gbc.setState(0xe738, 0xd526, 0x1f90, 0x5c72, 0xaf9e, 0xcd21, 0x0, 0x0);
        gbc.writeMem(0xcd21, { 0xb6 });
        gbc.writeMem(0xe738, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd526);
        EXPECT(gbc.pc(), 0xe739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd21), 0xb6);
        EXPECT(gbc.readMem(0xe738), 0xae);
        // AE 0052
        gbc.setState(0xe59b, 0xa9a8, 0x8740, 0x7272, 0x77d5, 0x6ca2, 0x0, 0x1);
        gbc.writeMem(0x6ca2, { 0x54 });
        gbc.writeMem(0xe59b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa9a8);
        EXPECT(gbc.pc(), 0xe59c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe59b), 0xae);
        // AE 0053
        gbc.setState(0x55b6, 0x73eb, 0x26f0, 0x808a, 0xb795, 0xbf0b, 0x1, 0x0);
        gbc.writeMem(0x55b6, { 0xae });
        gbc.writeMem(0xbf0b, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x73eb);
        EXPECT(gbc.pc(), 0x55b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf0b), 0x82);
        // AE 0054
        gbc.setState(0x6453, 0xafc6, 0x5dd0, 0x9059, 0x4be9, 0x8a89, 0x1, 0x0);
        gbc.writeMem(0x6453, { 0xae });
        gbc.writeMem(0x8a89, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xafc6);
        EXPECT(gbc.pc(), 0x6454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a89), 0xbe);
        // AE 0055
        gbc.setState(0x8971, 0x2071, 0x7ea0, 0x18f5, 0xf847, 0x8215, 0x0, 0x0);
        gbc.writeMem(0x8215, { 0x73 });
        gbc.writeMem(0x8971, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2071);
        EXPECT(gbc.pc(), 0x8972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8215), 0x73);
        EXPECT(gbc.readMem(0x8971), 0xae);
        // AE 0056
        gbc.setState(0x261c, 0xba77, 0xd90, 0x95fb, 0xa3ff, 0x837c, 0x0, 0x0);
        gbc.writeMem(0x261c, { 0xae });
        gbc.writeMem(0x837c, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xba77);
        EXPECT(gbc.pc(), 0x261d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x837c), 0x3d);
        // AE 0057
        gbc.setState(0x236e, 0x6b16, 0xb630, 0x316d, 0x357c, 0xda2e, 0x1, 0x1);
        gbc.writeMem(0x236e, { 0xae });
        gbc.writeMem(0xda2e, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6b16);
        EXPECT(gbc.pc(), 0x236f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda2e), 0x8);
        // AE 0058
        gbc.setState(0xd705, 0x50b6, 0x3c0, 0x6bf5, 0xd5d6, 0x42c1, 0x1, 0x0);
        gbc.writeMem(0x42c1, { 0xa6 });
        gbc.writeMem(0xd705, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x50b6);
        EXPECT(gbc.pc(), 0xd706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd705), 0xae);
        // AE 0059
        gbc.setState(0x71e, 0x6784, 0xdd80, 0xb0a2, 0x9af9, 0x5912, 0x0, 0x1);
        gbc.writeMem(0x71e, { 0xae });
        gbc.writeMem(0x5912, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6784);
        EXPECT(gbc.pc(), 0x71f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 005B
        gbc.setState(0x344a, 0x9897, 0xe890, 0xf2d0, 0xf2bd, 0xbab4, 0x1, 0x1);
        gbc.writeMem(0x344a, { 0xae });
        gbc.writeMem(0xbab4, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9897);
        EXPECT(gbc.pc(), 0x344b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab4), 0xfc);
        // AE 005C
        gbc.setState(0xa6ba, 0x904b, 0xa6a0, 0x4fa1, 0xb506, 0x34fd, 0x0, 0x1);
        gbc.writeMem(0x34fd, { 0xf6 });
        gbc.writeMem(0xa6ba, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x904b);
        EXPECT(gbc.pc(), 0xa6bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ba), 0xae);
        // AE 005D
        gbc.setState(0xe988, 0x94f0, 0xfa80, 0x911c, 0xfec6, 0x1185, 0x1, 0x1);
        gbc.writeMem(0x1185, { 0x46 });
        gbc.writeMem(0xe988, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x94f0);
        EXPECT(gbc.pc(), 0xe989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe988), 0xae);
        // AE 005E
        gbc.setState(0x1d1a, 0x64ec, 0x1420, 0xd1c7, 0x87c3, 0x76a7, 0x1, 0x0);
        gbc.writeMem(0x1d1a, { 0xae });
        gbc.writeMem(0x76a7, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x64ec);
        EXPECT(gbc.pc(), 0x1d1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 005F
        gbc.setState(0xad56, 0xae9e, 0xce40, 0x8c7f, 0xbee1, 0x6b0a, 0x0, 0x1);
        gbc.writeMem(0x6b0a, { 0x7 });
        gbc.writeMem(0xad56, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xae9e);
        EXPECT(gbc.pc(), 0xad57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad56), 0xae);
        // AE 0060
        gbc.setState(0x2a19, 0x9f64, 0x5e40, 0x6ed6, 0xe43a, 0x3f54, 0x0, 0x0);
        gbc.writeMem(0x2a19, { 0xae });
        gbc.writeMem(0x3f54, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9f64);
        EXPECT(gbc.pc(), 0x2a1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0061
        gbc.setState(0x8095, 0x1513, 0xa3c0, 0x28f3, 0x1c4, 0xd6b3, 0x1, 0x1);
        gbc.writeMem(0x8095, { 0xae });
        gbc.writeMem(0xd6b3, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1513);
        EXPECT(gbc.pc(), 0x8096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8095), 0xae);
        EXPECT(gbc.readMem(0xd6b3), 0x7b);
        // AE 0062
        gbc.setState(0x1f3f, 0x8d5, 0x71e0, 0xb181, 0x45f5, 0x63f9, 0x0, 0x0);
        gbc.writeMem(0x1f3f, { 0xae });
        gbc.writeMem(0x63f9, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8d5);
        EXPECT(gbc.pc(), 0x1f40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0063
        gbc.setState(0xd90, 0x950a, 0x5f10, 0xb4a0, 0x96b4, 0x9921, 0x1, 0x1);
        gbc.writeMem(0xd90, { 0xae });
        gbc.writeMem(0x9921, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x950a);
        EXPECT(gbc.pc(), 0xd91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9921), 0x2b);
        // AE 0064
        gbc.setState(0x49e5, 0xe341, 0x9180, 0x18f9, 0x4e5f, 0x6392, 0x1, 0x1);
        gbc.writeMem(0x49e5, { 0xae });
        gbc.writeMem(0x6392, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe341);
        EXPECT(gbc.pc(), 0x49e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0066
        gbc.setState(0x7943, 0x1bef, 0x2290, 0x43a8, 0xe4ff, 0x9809, 0x0, 0x1);
        gbc.writeMem(0x7943, { 0xae });
        gbc.writeMem(0x9809, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1bef);
        EXPECT(gbc.pc(), 0x7944);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9809), 0x4f);
        // AE 0067
        gbc.setState(0x8943, 0xc521, 0xf960, 0x96d8, 0x2a8b, 0x603a, 0x1, 0x1);
        gbc.writeMem(0x603a, { 0xe0 });
        gbc.writeMem(0x8943, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc521);
        EXPECT(gbc.pc(), 0x8944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8943), 0xae);
        // AE 0069
        gbc.setState(0x9d0c, 0xbfdb, 0xf820, 0x4c62, 0x54fb, 0x73d0, 0x0, 0x0);
        gbc.writeMem(0x73d0, { 0x7d });
        gbc.writeMem(0x9d0c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbfdb);
        EXPECT(gbc.pc(), 0x9d0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d0c), 0xae);
        // AE 006A
        gbc.setState(0x8bc8, 0xc405, 0x5100, 0xf500, 0x9b23, 0x9cd6, 0x1, 0x1);
        gbc.writeMem(0x8bc8, { 0xae });
        gbc.writeMem(0x9cd6, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc405);
        EXPECT(gbc.pc(), 0x8bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc8), 0xae);
        EXPECT(gbc.readMem(0x9cd6), 0xe8);
        // AE 006B
        gbc.setState(0xc458, 0xa5d8, 0x1180, 0x7bdf, 0xf47b, 0x4090, 0x1, 0x1);
        gbc.writeMem(0x4090, { 0x19 });
        gbc.writeMem(0xc458, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa5d8);
        EXPECT(gbc.pc(), 0xc459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc458), 0xae);
        // AE 006C
        gbc.setState(0x6bc7, 0xdb3a, 0x9f40, 0x458a, 0x4483, 0x1003, 0x0, 0x1);
        gbc.writeMem(0x1003, { 0xc6 });
        gbc.writeMem(0x6bc7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdb3a);
        EXPECT(gbc.pc(), 0x6bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 006D
        gbc.setState(0xceb8, 0x6ef4, 0xc9f0, 0xf711, 0xfde2, 0x69e5, 0x1, 0x1);
        gbc.writeMem(0x69e5, { 0x50 });
        gbc.writeMem(0xceb8, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6ef4);
        EXPECT(gbc.pc(), 0xceb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceb8), 0xae);
        // AE 006E
        gbc.setState(0x7113, 0xece8, 0x6b40, 0x94c6, 0xa250, 0xfd57, 0x1, 0x1);
        gbc.writeMem(0x7113, { 0xae });
        gbc.writeMem(0xfd57, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xece8);
        EXPECT(gbc.pc(), 0x7114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfd57), 0x71);
        // AE 006F
        gbc.setState(0xc307, 0x4a31, 0x640, 0xb3, 0xbf82, 0x523b, 0x1, 0x1);
        gbc.writeMem(0x523b, { 0xa0 });
        gbc.writeMem(0xc307, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4a31);
        EXPECT(gbc.pc(), 0xc308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc307), 0xae);
        // AE 0071
        gbc.setState(0x1bfd, 0xf54a, 0x6860, 0xb054, 0xe6e9, 0xc287, 0x0, 0x1);
        gbc.writeMem(0x1bfd, { 0xae });
        gbc.writeMem(0xc287, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf54a);
        EXPECT(gbc.pc(), 0x1bfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc287), 0x71);
        // AE 0072
        gbc.setState(0x4c7c, 0xa0bc, 0xa4f0, 0xaa07, 0x280c, 0xaeaf, 0x0, 0x1);
        gbc.writeMem(0x4c7c, { 0xae });
        gbc.writeMem(0xaeaf, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa0bc);
        EXPECT(gbc.pc(), 0x4c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeaf), 0x25);
        // AE 0073
        gbc.setState(0x2637, 0xa20c, 0x75d0, 0x45f2, 0x47ff, 0x6f99, 0x1, 0x0);
        gbc.writeMem(0x2637, { 0xae });
        gbc.writeMem(0x6f99, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa20c);
        EXPECT(gbc.pc(), 0x2638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0074
        gbc.setState(0xeb3d, 0xa3b, 0xbb70, 0xd35b, 0x3bf4, 0xac9d, 0x1, 0x1);
        gbc.writeMem(0xac9d, { 0x1f });
        gbc.writeMem(0xeb3d, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa3b);
        EXPECT(gbc.pc(), 0xeb3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac9d), 0x1f);
        EXPECT(gbc.readMem(0xeb3d), 0xae);
        // AE 0075
        gbc.setState(0x9df1, 0x6d14, 0x1890, 0x62b9, 0xd565, 0xa848, 0x0, 0x1);
        gbc.writeMem(0x9df1, { 0xae });
        gbc.writeMem(0xa848, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6d14);
        EXPECT(gbc.pc(), 0x9df2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df1), 0xae);
        EXPECT(gbc.readMem(0xa848), 0x2a);
        // AE 0076
        gbc.setState(0x247, 0x78d3, 0x5980, 0x9151, 0x59d8, 0x91a4, 0x1, 0x0);
        gbc.writeMem(0x247, { 0xae });
        gbc.writeMem(0x91a4, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x78d3);
        EXPECT(gbc.pc(), 0x248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91a4), 0xf7);
        // AE 0077
        gbc.setState(0x4e4d, 0x5079, 0xa800, 0x47ee, 0x7ab9, 0x4c71, 0x0, 0x0);
        gbc.writeMem(0x4c71, { 0x69 });
        gbc.writeMem(0x4e4d, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5079);
        EXPECT(gbc.pc(), 0x4e4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0078
        gbc.setState(0x702e, 0xf3be, 0x5050, 0x48fd, 0xca9f, 0x256, 0x0, 0x0);
        gbc.writeMem(0x256, { 0x2c });
        gbc.writeMem(0x702e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf3be);
        EXPECT(gbc.pc(), 0x702f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 007A
        gbc.setState(0xd3d0, 0x45b7, 0x4400, 0x3021, 0xcfb2, 0x378d, 0x0, 0x1);
        gbc.writeMem(0x378d, { 0x12 });
        gbc.writeMem(0xd3d0, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x45b7);
        EXPECT(gbc.pc(), 0xd3d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3d0), 0xae);
        // AE 007B
        gbc.setState(0x6fd0, 0xe048, 0x9e30, 0x855e, 0xa88a, 0xe47b, 0x1, 0x1);
        gbc.writeMem(0x6fd0, { 0xae });
        gbc.writeMem(0xe47b, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe048);
        EXPECT(gbc.pc(), 0x6fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe47b), 0x2f);
        // AE 007C
        gbc.setState(0x8de5, 0xc6c9, 0x4720, 0x3909, 0x2c6f, 0x535a, 0x1, 0x0);
        gbc.writeMem(0x535a, { 0x4f });
        gbc.writeMem(0x8de5, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc6c9);
        EXPECT(gbc.pc(), 0x8de6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8de5), 0xae);
        // AE 007D
        gbc.setState(0xa705, 0x712b, 0x5af0, 0x7c7d, 0x7701, 0xad7f, 0x1, 0x0);
        gbc.writeMem(0xa705, { 0xae });
        gbc.writeMem(0xad7f, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x712b);
        EXPECT(gbc.pc(), 0xa706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa705), 0xae);
        EXPECT(gbc.readMem(0xad7f), 0xa9);
        // AE 007E
        gbc.setState(0x752d, 0x94a3, 0x82b0, 0x212, 0x99d, 0x69e7, 0x0, 0x0);
        gbc.writeMem(0x69e7, { 0x5d });
        gbc.writeMem(0x752d, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x94a3);
        EXPECT(gbc.pc(), 0x752e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 007F
        gbc.setState(0x9fcd, 0x7199, 0xc4d0, 0x5ed9, 0xf53, 0x6e5b, 0x1, 0x0);
        gbc.writeMem(0x6e5b, { 0xa5 });
        gbc.writeMem(0x9fcd, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7199);
        EXPECT(gbc.pc(), 0x9fce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fcd), 0xae);
        // AE 0080
        gbc.setState(0x99e3, 0x6a11, 0xa40, 0x1195, 0x6891, 0x16d4, 0x1, 0x1);
        gbc.writeMem(0x16d4, { 0xf8 });
        gbc.writeMem(0x99e3, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6a11);
        EXPECT(gbc.pc(), 0x99e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e3), 0xae);
        // AE 0081
        gbc.setState(0x9894, 0xcb02, 0x95c0, 0x9bfd, 0x7db8, 0xa0fd, 0x1, 0x1);
        gbc.writeMem(0x9894, { 0xae });
        gbc.writeMem(0xa0fd, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xcb02);
        EXPECT(gbc.pc(), 0x9895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9894), 0xae);
        EXPECT(gbc.readMem(0xa0fd), 0x72);
        // AE 0082
        gbc.setState(0x6ae5, 0x513a, 0xb0e0, 0xbebe, 0xb608, 0xecd9, 0x1, 0x1);
        gbc.writeMem(0x6ae5, { 0xae });
        gbc.writeMem(0xecd9, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x513a);
        EXPECT(gbc.pc(), 0x6ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecd9), 0xd5);
        // AE 0083
        gbc.setState(0x33f5, 0x81c, 0x66f0, 0x6121, 0xd944, 0xbc7f, 0x0, 0x0);
        gbc.writeMem(0x33f5, { 0xae });
        gbc.writeMem(0xbc7f, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x81c);
        EXPECT(gbc.pc(), 0x33f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7f), 0x3f);
        // AE 0084
        gbc.setState(0x5d46, 0xf6eb, 0x81c0, 0x4b30, 0xf492, 0xe5bb, 0x1, 0x1);
        gbc.writeMem(0x5d46, { 0xae });
        gbc.writeMem(0xe5bb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf6eb);
        EXPECT(gbc.pc(), 0x5d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5bb), 0xb8);
        // AE 0085
        gbc.setState(0x29b4, 0xba9f, 0xd1a0, 0x5524, 0xaefb, 0x577b, 0x1, 0x1);
        gbc.writeMem(0x29b4, { 0xae });
        gbc.writeMem(0x577b, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xba9f);
        EXPECT(gbc.pc(), 0x29b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0086
        gbc.setState(0x5923, 0xda69, 0x19b0, 0x835e, 0xdf52, 0xe104, 0x0, 0x1);
        gbc.writeMem(0x5923, { 0xae });
        gbc.writeMem(0xe104, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xda69);
        EXPECT(gbc.pc(), 0x5924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe104), 0xc2);
        // AE 0088
        gbc.setState(0x4301, 0xfc20, 0xed10, 0xbd14, 0xaf40, 0x8b0, 0x0, 0x0);
        gbc.writeMem(0x8b0, { 0xba });
        gbc.writeMem(0x4301, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfc20);
        EXPECT(gbc.pc(), 0x4302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0089
        gbc.setState(0x3594, 0x98d0, 0xf020, 0x6386, 0xc552, 0xcaac, 0x1, 0x1);
        gbc.writeMem(0x3594, { 0xae });
        gbc.writeMem(0xcaac, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x98d0);
        EXPECT(gbc.pc(), 0x3595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaac), 0x56);
        // AE 008A
        gbc.setState(0xc510, 0xcfbb, 0x9b90, 0xa2ae, 0xd34b, 0x66c5, 0x0, 0x1);
        gbc.writeMem(0x66c5, { 0x21 });
        gbc.writeMem(0xc510, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xcfbb);
        EXPECT(gbc.pc(), 0xc511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc510), 0xae);
        // AE 008B
        gbc.setState(0x22a8, 0xb093, 0x1d00, 0x50d, 0x5282, 0xcc6f, 0x1, 0x1);
        gbc.writeMem(0x22a8, { 0xae });
        gbc.writeMem(0xcc6f, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb093);
        EXPECT(gbc.pc(), 0x22a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc6f), 0xfb);
        // AE 008C
        gbc.setState(0xde6a, 0xd281, 0xb9d0, 0x5b5c, 0x1935, 0x6c29, 0x1, 0x1);
        gbc.writeMem(0x6c29, { 0xb2 });
        gbc.writeMem(0xde6a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd281);
        EXPECT(gbc.pc(), 0xde6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde6a), 0xae);
        // AE 008D
        gbc.setState(0x6654, 0x91c8, 0x7ca0, 0xbcc, 0xacae, 0x3eb8, 0x0, 0x1);
        gbc.writeMem(0x3eb8, { 0xf3 });
        gbc.writeMem(0x6654, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x91c8);
        EXPECT(gbc.pc(), 0x6655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 008E
        gbc.setState(0x633a, 0xad3f, 0xd1f0, 0x8fe6, 0x3438, 0xc17d, 0x1, 0x0);
        gbc.writeMem(0x633a, { 0xae });
        gbc.writeMem(0xc17d, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xad3f);
        EXPECT(gbc.pc(), 0x633b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc17d), 0x2e);
        // AE 008F
        gbc.setState(0xd022, 0x40da, 0x4b90, 0x6ce4, 0x43e0, 0x54ef, 0x1, 0x1);
        gbc.writeMem(0x54ef, { 0x2e });
        gbc.writeMem(0xd022, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x40da);
        EXPECT(gbc.pc(), 0xd023);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd022), 0xae);
        // AE 0090
        gbc.setState(0xc279, 0x2a06, 0xf700, 0xc5bc, 0x9e06, 0x1ce4, 0x0, 0x0);
        gbc.writeMem(0x1ce4, { 0xb8 });
        gbc.writeMem(0xc279, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2a06);
        EXPECT(gbc.pc(), 0xc27a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc279), 0xae);
        // AE 0091
        gbc.setState(0xc97c, 0xebad, 0x42e0, 0x20f9, 0x2ce0, 0x7927, 0x0, 0x1);
        gbc.writeMem(0x7927, { 0xe8 });
        gbc.writeMem(0xc97c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xebad);
        EXPECT(gbc.pc(), 0xc97d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc97c), 0xae);
        // AE 0092
        gbc.setState(0x2898, 0x19ea, 0x1d40, 0x958, 0x7e11, 0x73d6, 0x0, 0x0);
        gbc.writeMem(0x2898, { 0xae });
        gbc.writeMem(0x73d6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x19ea);
        EXPECT(gbc.pc(), 0x2899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0093
        gbc.setState(0x49eb, 0x7967, 0xdbe0, 0x5d8f, 0xe7d4, 0x1da7, 0x0, 0x0);
        gbc.writeMem(0x1da7, { 0x5e });
        gbc.writeMem(0x49eb, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7967);
        EXPECT(gbc.pc(), 0x49ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0094
        gbc.setState(0xd020, 0x892c, 0x5f60, 0xc29f, 0x8b92, 0x72e3, 0x0, 0x0);
        gbc.writeMem(0x72e3, { 0x25 });
        gbc.writeMem(0xd020, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x892c);
        EXPECT(gbc.pc(), 0xd021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd020), 0xae);
        // AE 0095
        gbc.setState(0x5b2b, 0xe533, 0xfab0, 0x7e36, 0xb4aa, 0xca34, 0x1, 0x0);
        gbc.writeMem(0x5b2b, { 0xae });
        gbc.writeMem(0xca34, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe533);
        EXPECT(gbc.pc(), 0x5b2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca34), 0xf4);
        // AE 0096
        gbc.setState(0xc322, 0x613f, 0x5600, 0x3508, 0x7b2c, 0x5c22, 0x0, 0x1);
        gbc.writeMem(0x5c22, { 0x39 });
        gbc.writeMem(0xc322, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x613f);
        EXPECT(gbc.pc(), 0xc323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc322), 0xae);
        // AE 0097
        gbc.setState(0xedac, 0x88b7, 0x6260, 0xfa60, 0x783e, 0x523c, 0x1, 0x1);
        gbc.writeMem(0x523c, { 0xb9 });
        gbc.writeMem(0xedac, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x88b7);
        EXPECT(gbc.pc(), 0xedad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedac), 0xae);
        // AE 0098
        gbc.setState(0xb02e, 0xe686, 0xa730, 0xe174, 0x450c, 0x2a95, 0x0, 0x0);
        gbc.writeMem(0x2a95, { 0x66 });
        gbc.writeMem(0xb02e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe686);
        EXPECT(gbc.pc(), 0xb02f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb02e), 0xae);
        // AE 0099
        gbc.setState(0x95a7, 0x3da3, 0xb660, 0x6f64, 0x58dd, 0x53b4, 0x0, 0x1);
        gbc.writeMem(0x53b4, { 0x93 });
        gbc.writeMem(0x95a7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3da3);
        EXPECT(gbc.pc(), 0x95a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a7), 0xae);
        // AE 009A
        gbc.setState(0x10f3, 0xa21b, 0x9eb0, 0x1, 0x9111, 0x156d, 0x0, 0x0);
        gbc.writeMem(0x10f3, { 0xae });
        gbc.writeMem(0x156d, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa21b);
        EXPECT(gbc.pc(), 0x10f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 009B
        gbc.setState(0xe2d4, 0xd457, 0xebf0, 0x92c7, 0x4438, 0xfd36, 0x1, 0x1);
        gbc.writeMem(0xe2d4, { 0xae });
        gbc.writeMem(0xfd36, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd457);
        EXPECT(gbc.pc(), 0xe2d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2d4), 0xae);
        EXPECT(gbc.readMem(0xfd36), 0xce);
        // AE 009C
        gbc.setState(0x9ce2, 0xdc3e, 0x5d30, 0xe124, 0x3a18, 0x40a9, 0x1, 0x1);
        gbc.writeMem(0x40a9, { 0xd8 });
        gbc.writeMem(0x9ce2, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xdc3e);
        EXPECT(gbc.pc(), 0x9ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ce2), 0xae);
        // AE 009D
        gbc.setState(0x4034, 0x7313, 0xb8d0, 0x1806, 0x3190, 0x881f, 0x1, 0x1);
        gbc.writeMem(0x4034, { 0xae });
        gbc.writeMem(0x881f, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7313);
        EXPECT(gbc.pc(), 0x4035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881f), 0xff);
        // AE 009F
        gbc.setState(0x16ae, 0x32ba, 0x6300, 0x6fa3, 0xbd73, 0x19c8, 0x0, 0x1);
        gbc.writeMem(0x16ae, { 0xae });
        gbc.writeMem(0x19c8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x32ba);
        EXPECT(gbc.pc(), 0x16af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00A0
        gbc.setState(0x10c7, 0x331b, 0xb4d0, 0x48c6, 0x588d, 0xff57, 0x0, 0x1);
        gbc.writeMem(0x10c7, { 0xae });
        gbc.writeMem(0xff57, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x331b);
        EXPECT(gbc.pc(), 0x10c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff57), 0xf1);
        // AE 00A1
        gbc.setState(0xe107, 0x62b, 0x2f10, 0xd1b2, 0x955b, 0xabb6, 0x0, 0x1);
        gbc.writeMem(0xabb6, { 0x52 });
        gbc.writeMem(0xe107, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x62b);
        EXPECT(gbc.pc(), 0xe108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb6), 0x52);
        EXPECT(gbc.readMem(0xe107), 0xae);
        // AE 00A2
        gbc.setState(0x6a90, 0x945c, 0xce70, 0x6794, 0x4b48, 0x2dec, 0x0, 0x0);
        gbc.writeMem(0x2dec, { 0x2d });
        gbc.writeMem(0x6a90, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x945c);
        EXPECT(gbc.pc(), 0x6a91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00A3
        gbc.setState(0x8f3a, 0x8403, 0x8450, 0x1f0a, 0xcfc7, 0xd8f1, 0x0, 0x0);
        gbc.writeMem(0x8f3a, { 0xae });
        gbc.writeMem(0xd8f1, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8403);
        EXPECT(gbc.pc(), 0x8f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f3a), 0xae);
        EXPECT(gbc.readMem(0xd8f1), 0x7e);
        // AE 00A4
        gbc.setState(0xa5df, 0x7164, 0x1e00, 0xaf17, 0x2014, 0x5da4, 0x1, 0x1);
        gbc.writeMem(0x5da4, { 0x5a });
        gbc.writeMem(0xa5df, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7164);
        EXPECT(gbc.pc(), 0xa5e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5df), 0xae);
        // AE 00A5
        gbc.setState(0x4378, 0xa9f9, 0xcc10, 0xa1c1, 0x8d6a, 0xb8f6, 0x1, 0x1);
        gbc.writeMem(0x4378, { 0xae });
        gbc.writeMem(0xb8f6, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa9f9);
        EXPECT(gbc.pc(), 0x4379);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f6), 0x3e);
        // AE 00A6
        gbc.setState(0xf04, 0xd156, 0x9a70, 0x48ba, 0x146a, 0x219e, 0x1, 0x0);
        gbc.writeMem(0xf04, { 0xae });
        gbc.writeMem(0x219e, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd156);
        EXPECT(gbc.pc(), 0xf05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00A7
        gbc.setState(0x2080, 0x2ffb, 0xbe0, 0xfa38, 0x263f, 0x681, 0x0, 0x1);
        gbc.writeMem(0x681, { 0xb0 });
        gbc.writeMem(0x2080, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2ffb);
        EXPECT(gbc.pc(), 0x2081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00A8
        gbc.setState(0xb9f6, 0xa89b, 0x10b0, 0x233e, 0x5745, 0x1f8a, 0x0, 0x0);
        gbc.writeMem(0x1f8a, { 0x71 });
        gbc.writeMem(0xb9f6, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa89b);
        EXPECT(gbc.pc(), 0xb9f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f6), 0xae);
        // AE 00A9
        gbc.setState(0x9b94, 0x112b, 0xa410, 0xc32, 0x1a7a, 0x6bd5, 0x1, 0x0);
        gbc.writeMem(0x6bd5, { 0xf4 });
        gbc.writeMem(0x9b94, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x112b);
        EXPECT(gbc.pc(), 0x9b95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b94), 0xae);
        // AE 00AA
        gbc.setState(0x8287, 0xb779, 0x1660, 0x3e2, 0xfae0, 0x8950, 0x1, 0x0);
        gbc.writeMem(0x8287, { 0xae });
        gbc.writeMem(0x8950, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb779);
        EXPECT(gbc.pc(), 0x8288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8287), 0xae);
        EXPECT(gbc.readMem(0x8950), 0x91);
        // AE 00AB
        gbc.setState(0x65ee, 0xb8a2, 0x3ad0, 0xcacd, 0x58b5, 0xa725, 0x1, 0x1);
        gbc.writeMem(0x65ee, { 0xae });
        gbc.writeMem(0xa725, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb8a2);
        EXPECT(gbc.pc(), 0x65ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa725), 0xc);
        // AE 00AC
        gbc.setState(0x7c53, 0xb26b, 0x8e80, 0x24f5, 0xcc9c, 0xa127, 0x0, 0x1);
        gbc.writeMem(0x7c53, { 0xae });
        gbc.writeMem(0xa127, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb26b);
        EXPECT(gbc.pc(), 0x7c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa127), 0x91);
        // AE 00AD
        gbc.setState(0xb209, 0x2cf3, 0xaf00, 0x371b, 0x3beb, 0x38e6, 0x0, 0x1);
        gbc.writeMem(0x38e6, { 0xbc });
        gbc.writeMem(0xb209, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2cf3);
        EXPECT(gbc.pc(), 0xb20a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb209), 0xae);
        // AE 00AE
        gbc.setState(0x12e1, 0x310a, 0x180, 0x5ab5, 0x29c0, 0x5071, 0x0, 0x0);
        gbc.writeMem(0x12e1, { 0xae });
        gbc.writeMem(0x5071, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x310a);
        EXPECT(gbc.pc(), 0x12e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00AF
        gbc.setState(0x9ebd, 0xf237, 0xa7e0, 0xe90, 0x91fd, 0xf3d4, 0x0, 0x0);
        gbc.writeMem(0x9ebd, { 0xae });
        gbc.writeMem(0xf3d4, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf237);
        EXPECT(gbc.pc(), 0x9ebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ebd), 0xae);
        EXPECT(gbc.readMem(0xf3d4), 0x2a);
        // AE 00B0
        gbc.setState(0xec2f, 0xf4f8, 0x7fd0, 0xa4b9, 0xccb9, 0xa06a, 0x0, 0x1);
        gbc.writeMem(0xa06a, { 0xc5 });
        gbc.writeMem(0xec2f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf4f8);
        EXPECT(gbc.pc(), 0xec30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa06a), 0xc5);
        EXPECT(gbc.readMem(0xec2f), 0xae);
        // AE 00B1
        gbc.setState(0x5c9, 0x5d58, 0xbf0, 0x13ab, 0x7a95, 0x3eda, 0x1, 0x0);
        gbc.writeMem(0x5c9, { 0xae });
        gbc.writeMem(0x3eda, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5d58);
        EXPECT(gbc.pc(), 0x5ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00B2
        gbc.setState(0x54f4, 0x2423, 0x5b10, 0xca5a, 0xc049, 0x51e, 0x1, 0x1);
        gbc.writeMem(0x51e, { 0xde });
        gbc.writeMem(0x54f4, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2423);
        EXPECT(gbc.pc(), 0x54f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00B3
        gbc.setState(0xca31, 0x1c6b, 0x7370, 0x6d8a, 0x2dbe, 0x7a7a, 0x0, 0x0);
        gbc.writeMem(0x7a7a, { 0x1f });
        gbc.writeMem(0xca31, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1c6b);
        EXPECT(gbc.pc(), 0xca32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca31), 0xae);
        // AE 00B4
        gbc.setState(0x1512, 0xb432, 0xd400, 0xdccb, 0x6172, 0xd9a2, 0x0, 0x0);
        gbc.writeMem(0x1512, { 0xae });
        gbc.writeMem(0xd9a2, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb432);
        EXPECT(gbc.pc(), 0x1513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9a2), 0x26);
        // AE 00B5
        gbc.setState(0x7050, 0xc11b, 0x3470, 0xb061, 0xdeac, 0x84b1, 0x0, 0x1);
        gbc.writeMem(0x7050, { 0xae });
        gbc.writeMem(0x84b1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc11b);
        EXPECT(gbc.pc(), 0x7051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b1), 0x58);
        // AE 00B6
        gbc.setState(0x47dd, 0xc55e, 0xcee0, 0xb24b, 0x1dee, 0xaac0, 0x1, 0x1);
        gbc.writeMem(0x47dd, { 0xae });
        gbc.writeMem(0xaac0, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc55e);
        EXPECT(gbc.pc(), 0x47de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaac0), 0xd9);
        // AE 00B7
        gbc.setState(0xaf74, 0xeda8, 0xd100, 0xfd8, 0x849, 0xfee9, 0x0, 0x0);
        gbc.writeMem(0xaf74, { 0xae });
        gbc.writeMem(0xfee9, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xeda8);
        EXPECT(gbc.pc(), 0xaf75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf74), 0xae);
        EXPECT(gbc.readMem(0xfee9), 0x41);
        // AE 00B8
        gbc.setState(0x5fcc, 0x43da, 0xccc0, 0xea3e, 0xb2e7, 0x92ed, 0x1, 0x0);
        gbc.writeMem(0x5fcc, { 0xae });
        gbc.writeMem(0x92ed, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x43da);
        EXPECT(gbc.pc(), 0x5fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ed), 0x71);
        // AE 00B9
        gbc.setState(0x5029, 0xf424, 0x1b20, 0x4f23, 0x8221, 0xb695, 0x0, 0x0);
        gbc.writeMem(0x5029, { 0xae });
        gbc.writeMem(0xb695, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf424);
        EXPECT(gbc.pc(), 0x502a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb695), 0xb6);
        // AE 00BA
        gbc.setState(0x447d, 0xb6be, 0xd4e0, 0x4382, 0xa9d6, 0xe1ca, 0x0, 0x1);
        gbc.writeMem(0x447d, { 0xae });
        gbc.writeMem(0xe1ca, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb6be);
        EXPECT(gbc.pc(), 0x447e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ca), 0x6b);
        // AE 00BB
        gbc.setState(0x369b, 0x5abe, 0xfd10, 0xdb3, 0x9451, 0x9c5c, 0x0, 0x0);
        gbc.writeMem(0x369b, { 0xae });
        gbc.writeMem(0x9c5c, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5abe);
        EXPECT(gbc.pc(), 0x369c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c5c), 0x6b);
        // AE 00BC
        gbc.setState(0x1aa4, 0xfbc, 0xf2c0, 0x1c47, 0x52c5, 0x8d5f, 0x1, 0x1);
        gbc.writeMem(0x1aa4, { 0xae });
        gbc.writeMem(0x8d5f, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfbc);
        EXPECT(gbc.pc(), 0x1aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5f), 0x61);
        // AE 00BD
        gbc.setState(0xdb46, 0xa7ce, 0x42b0, 0x7fab, 0x438, 0x6a45, 0x1, 0x1);
        gbc.writeMem(0x6a45, { 0x1d });
        gbc.writeMem(0xdb46, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa7ce);
        EXPECT(gbc.pc(), 0xdb47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb46), 0xae);
        // AE 00BE
        gbc.setState(0x9573, 0x36a6, 0xc410, 0x559a, 0x7c43, 0x672c, 0x1, 0x0);
        gbc.writeMem(0x672c, { 0x50 });
        gbc.writeMem(0x9573, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x36a6);
        EXPECT(gbc.pc(), 0x9574);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9573), 0xae);
        // AE 00BF
        gbc.setState(0x8207, 0x8a8e, 0xc8d0, 0xa8bd, 0x8ce2, 0xf764, 0x1, 0x1);
        gbc.writeMem(0x8207, { 0xae });
        gbc.writeMem(0xf764, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8a8e);
        EXPECT(gbc.pc(), 0x8208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8207), 0xae);
        EXPECT(gbc.readMem(0xf764), 0x97);
        // AE 00C0
        gbc.setState(0xb002, 0xf19e, 0x70e0, 0x13f5, 0xf580, 0xb2e5, 0x0, 0x0);
        gbc.writeMem(0xb002, { 0xae });
        gbc.writeMem(0xb2e5, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf19e);
        EXPECT(gbc.pc(), 0xb003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb002), 0xae);
        EXPECT(gbc.readMem(0xb2e5), 0xf1);
        // AE 00C1
        gbc.setState(0xb6ce, 0x397d, 0x8580, 0x9f6, 0x7433, 0x8d91, 0x0, 0x1);
        gbc.writeMem(0x8d91, { 0x21 });
        gbc.writeMem(0xb6ce, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x397d);
        EXPECT(gbc.pc(), 0xb6cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d91), 0x21);
        EXPECT(gbc.readMem(0xb6ce), 0xae);
        // AE 00C3
        gbc.setState(0x3334, 0x82ed, 0xde90, 0x2751, 0x966e, 0x5c51, 0x1, 0x1);
        gbc.writeMem(0x3334, { 0xae });
        gbc.writeMem(0x5c51, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x82ed);
        EXPECT(gbc.pc(), 0x3335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00C4
        gbc.setState(0xef68, 0x5daa, 0xe560, 0x6869, 0x931f, 0xc04, 0x0, 0x0);
        gbc.writeMem(0xc04, { 0xbf });
        gbc.writeMem(0xef68, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5daa);
        EXPECT(gbc.pc(), 0xef69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef68), 0xae);
        // AE 00C5
        gbc.setState(0x48ff, 0x7305, 0x530, 0x7dc5, 0x5ce4, 0x94c8, 0x1, 0x1);
        gbc.writeMem(0x48ff, { 0xae });
        gbc.writeMem(0x94c8, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7305);
        EXPECT(gbc.pc(), 0x4900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94c8), 0xda);
        // AE 00C6
        gbc.setState(0x9dfc, 0x5e20, 0x81a0, 0xc008, 0xd7ca, 0xc261, 0x0, 0x0);
        gbc.writeMem(0x9dfc, { 0xae });
        gbc.writeMem(0xc261, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5e20);
        EXPECT(gbc.pc(), 0x9dfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dfc), 0xae);
        EXPECT(gbc.readMem(0xc261), 0xc6);
        // AE 00C7
        gbc.setState(0xc0f0, 0xd344, 0x75e0, 0xd1a5, 0xfcc2, 0x19d4, 0x0, 0x0);
        gbc.writeMem(0x19d4, { 0xe1 });
        gbc.writeMem(0xc0f0, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd344);
        EXPECT(gbc.pc(), 0xc0f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0f0), 0xae);
        // AE 00C8
        gbc.setState(0x513c, 0xa636, 0x9bc0, 0xa06e, 0xecfd, 0xba54, 0x1, 0x1);
        gbc.writeMem(0x513c, { 0xae });
        gbc.writeMem(0xba54, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa636);
        EXPECT(gbc.pc(), 0x513d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba54), 0x9e);
        // AE 00C9
        gbc.setState(0x6945, 0xb9fd, 0x5880, 0x31bc, 0x7e3c, 0x8c8b, 0x1, 0x1);
        gbc.writeMem(0x6945, { 0xae });
        gbc.writeMem(0x8c8b, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb9fd);
        EXPECT(gbc.pc(), 0x6946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c8b), 0x46);
        // AE 00CA
        gbc.setState(0xe504, 0xe078, 0xd7d0, 0x40fc, 0xa50d, 0x8015, 0x1, 0x0);
        gbc.writeMem(0x8015, { 0x83 });
        gbc.writeMem(0xe504, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe078);
        EXPECT(gbc.pc(), 0xe505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8015), 0x83);
        EXPECT(gbc.readMem(0xe504), 0xae);
        // AE 00CB
        gbc.setState(0x43b, 0xe3ee, 0x43a0, 0xf170, 0xe86b, 0x2978, 0x0, 0x1);
        gbc.writeMem(0x43b, { 0xae });
        gbc.writeMem(0x2978, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe3ee);
        EXPECT(gbc.pc(), 0x43c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00CC
        gbc.setState(0x5873, 0x324, 0xb510, 0x654e, 0x2d44, 0xd486, 0x0, 0x1);
        gbc.writeMem(0x5873, { 0xae });
        gbc.writeMem(0xd486, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x324);
        EXPECT(gbc.pc(), 0x5874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd486), 0x6f);
        // AE 00CD
        gbc.setState(0x1c9a, 0x611, 0xf40, 0xdd7a, 0xee9, 0xd36d, 0x1, 0x0);
        gbc.writeMem(0x1c9a, { 0xae });
        gbc.writeMem(0xd36d, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x611);
        EXPECT(gbc.pc(), 0x1c9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd36d), 0xcd);
        // AE 00CE
        gbc.setState(0x20fa, 0xd36e, 0x80d0, 0x4233, 0x9ae1, 0xfdbb, 0x1, 0x0);
        gbc.writeMem(0x20fa, { 0xae });
        gbc.writeMem(0xfdbb, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd36e);
        EXPECT(gbc.pc(), 0x20fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfdbb), 0xee);
        // AE 00CF
        gbc.setState(0xe9b7, 0xd239, 0x1a00, 0x523f, 0xb24a, 0xa733, 0x1, 0x0);
        gbc.writeMem(0xa733, { 0x2d });
        gbc.writeMem(0xe9b7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd239);
        EXPECT(gbc.pc(), 0xe9b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa733), 0x2d);
        EXPECT(gbc.readMem(0xe9b7), 0xae);
        // AE 00D0
        gbc.setState(0x48c1, 0x4196, 0x81d0, 0x42e4, 0x661b, 0xecca, 0x0, 0x1);
        gbc.writeMem(0x48c1, { 0xae });
        gbc.writeMem(0xecca, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4196);
        EXPECT(gbc.pc(), 0x48c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecca), 0xf9);
        // AE 00D1
        gbc.setState(0x619, 0xc5f1, 0xb7e0, 0x6331, 0xe990, 0x5391, 0x0, 0x1);
        gbc.writeMem(0x619, { 0xae });
        gbc.writeMem(0x5391, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc5f1);
        EXPECT(gbc.pc(), 0x61a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00D2
        gbc.setState(0xbf07, 0x61a9, 0x1260, 0xec82, 0x999, 0xc914, 0x1, 0x1);
        gbc.writeMem(0xbf07, { 0xae });
        gbc.writeMem(0xc914, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x61a9);
        EXPECT(gbc.pc(), 0xbf08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf07), 0xae);
        EXPECT(gbc.readMem(0xc914), 0x7e);
        // AE 00D4
        gbc.setState(0x4a15, 0x721a, 0x6c20, 0x3cd1, 0x6d43, 0xa788, 0x0, 0x0);
        gbc.writeMem(0x4a15, { 0xae });
        gbc.writeMem(0xa788, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x721a);
        EXPECT(gbc.pc(), 0x4a16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa788), 0xbb);
        // AE 00D5
        gbc.setState(0x8eaf, 0xf251, 0x45f0, 0xc090, 0x818, 0x1e4d, 0x1, 0x1);
        gbc.writeMem(0x1e4d, { 0x97 });
        gbc.writeMem(0x8eaf, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf251);
        EXPECT(gbc.pc(), 0x8eb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eaf), 0xae);
        // AE 00D6
        gbc.setState(0xd41b, 0x2b5d, 0x2320, 0xc293, 0x74b9, 0xe4fe, 0x0, 0x1);
        gbc.writeMem(0xd41b, { 0xae });
        gbc.writeMem(0xe4fe, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2b5d);
        EXPECT(gbc.pc(), 0xd41c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd41b), 0xae);
        EXPECT(gbc.readMem(0xe4fe), 0x4c);
        // AE 00D7
        gbc.setState(0x5dd2, 0xd70c, 0x4e00, 0x2ca9, 0x4f8b, 0x4e7a, 0x1, 0x1);
        gbc.writeMem(0x4e7a, { 0x3e });
        gbc.writeMem(0x5dd2, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd70c);
        EXPECT(gbc.pc(), 0x5dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00D8
        gbc.setState(0x43bb, 0x87b1, 0xf380, 0x3f19, 0x3bd1, 0x51ba, 0x0, 0x0);
        gbc.writeMem(0x43bb, { 0xae });
        gbc.writeMem(0x51ba, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x87b1);
        EXPECT(gbc.pc(), 0x43bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00D9
        gbc.setState(0x757, 0xca62, 0xa130, 0xf384, 0x2df4, 0x915c, 0x1, 0x1);
        gbc.writeMem(0x757, { 0xae });
        gbc.writeMem(0x915c, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xca62);
        EXPECT(gbc.pc(), 0x758);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x915c), 0x84);
        // AE 00DA
        gbc.setState(0xac7f, 0x7388, 0x9ab0, 0xb8b7, 0x6a4f, 0x9e83, 0x1, 0x0);
        gbc.writeMem(0x9e83, { 0xca });
        gbc.writeMem(0xac7f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7388);
        EXPECT(gbc.pc(), 0xac80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e83), 0xca);
        EXPECT(gbc.readMem(0xac7f), 0xae);
        // AE 00DB
        gbc.setState(0x3d83, 0x9546, 0xa4a0, 0xf05f, 0xda19, 0xfef0, 0x0, 0x0);
        gbc.writeMem(0x3d83, { 0xae });
        gbc.writeMem(0xfef0, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9546);
        EXPECT(gbc.pc(), 0x3d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfef0), 0x35);
        // AE 00DC
        gbc.setState(0x4908, 0x8b9f, 0x6d90, 0x78a4, 0x1795, 0x9ed7, 0x1, 0x1);
        gbc.writeMem(0x4908, { 0xae });
        gbc.writeMem(0x9ed7, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8b9f);
        EXPECT(gbc.pc(), 0x4909);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ed7), 0xad);
        // AE 00DD
        gbc.setState(0x6ea4, 0xda04, 0xf3b0, 0xea41, 0x83f0, 0x508b, 0x0, 0x1);
        gbc.writeMem(0x508b, { 0xa7 });
        gbc.writeMem(0x6ea4, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xda04);
        EXPECT(gbc.pc(), 0x6ea5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00DE
        gbc.setState(0xab6c, 0x56e7, 0x19d0, 0x764f, 0xade3, 0x6669, 0x1, 0x0);
        gbc.writeMem(0x6669, { 0x38 });
        gbc.writeMem(0xab6c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x56e7);
        EXPECT(gbc.pc(), 0xab6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab6c), 0xae);
        // AE 00DF
        gbc.setState(0xbebb, 0x7e0d, 0x4830, 0xffae, 0x841a, 0x1780, 0x0, 0x0);
        gbc.writeMem(0x1780, { 0x32 });
        gbc.writeMem(0xbebb, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7e0d);
        EXPECT(gbc.pc(), 0xbebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbebb), 0xae);
        // AE 00E0
        gbc.setState(0x9c63, 0xce0f, 0xb7e0, 0xba45, 0x896c, 0xd035, 0x0, 0x1);
        gbc.writeMem(0x9c63, { 0xae });
        gbc.writeMem(0xd035, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xce0f);
        EXPECT(gbc.pc(), 0x9c64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c63), 0xae);
        EXPECT(gbc.readMem(0xd035), 0x85);
        // AE 00E1
        gbc.setState(0x999e, 0x9203, 0x7550, 0x3b54, 0xe927, 0x3182, 0x1, 0x1);
        gbc.writeMem(0x3182, { 0x3f });
        gbc.writeMem(0x999e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9203);
        EXPECT(gbc.pc(), 0x999f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x999e), 0xae);
        // AE 00E2
        gbc.setState(0x61e, 0xcdee, 0xe400, 0xceda, 0x1f85, 0x668f, 0x1, 0x0);
        gbc.writeMem(0x61e, { 0xae });
        gbc.writeMem(0x668f, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xcdee);
        EXPECT(gbc.pc(), 0x61f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00E3
        gbc.setState(0xc8bd, 0x4f02, 0xa2a0, 0xb9e, 0x5559, 0x8151, 0x1, 0x0);
        gbc.writeMem(0x8151, { 0xb4 });
        gbc.writeMem(0xc8bd, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4f02);
        EXPECT(gbc.pc(), 0xc8be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8151), 0xb4);
        EXPECT(gbc.readMem(0xc8bd), 0xae);
        // AE 00E4
        gbc.setState(0xc36c, 0xaf8, 0x6380, 0x18eb, 0x2543, 0x1c2c, 0x0, 0x1);
        gbc.writeMem(0x1c2c, { 0xe0 });
        gbc.writeMem(0xc36c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xaf8);
        EXPECT(gbc.pc(), 0xc36d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc36c), 0xae);
        // AE 00E5
        gbc.setState(0x38df, 0xc0a6, 0x49b0, 0x4de2, 0x24f1, 0x7805, 0x0, 0x1);
        gbc.writeMem(0x38df, { 0xae });
        gbc.writeMem(0x7805, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc0a6);
        EXPECT(gbc.pc(), 0x38e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00E6
        gbc.setState(0x866e, 0xb1dc, 0xafa0, 0xcc41, 0xdba4, 0x9256, 0x0, 0x1);
        gbc.writeMem(0x866e, { 0xae });
        gbc.writeMem(0x9256, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb1dc);
        EXPECT(gbc.pc(), 0x866f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x866e), 0xae);
        EXPECT(gbc.readMem(0x9256), 0x9b);
        // AE 00E7
        gbc.setState(0x8c36, 0x89f0, 0x4eb0, 0xbad9, 0xc78b, 0x50e5, 0x0, 0x0);
        gbc.writeMem(0x50e5, { 0x35 });
        gbc.writeMem(0x8c36, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x89f0);
        EXPECT(gbc.pc(), 0x8c37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c36), 0xae);
        // AE 00E8
        gbc.setState(0x5e0c, 0xb18e, 0x7af0, 0xf002, 0x1c28, 0xc6bf, 0x1, 0x1);
        gbc.writeMem(0x5e0c, { 0xae });
        gbc.writeMem(0xc6bf, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb18e);
        EXPECT(gbc.pc(), 0x5e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6bf), 0x1f);
        // AE 00E9
        gbc.setState(0x169f, 0xe289, 0x28a0, 0x5542, 0x93be, 0x5ae3, 0x0, 0x1);
        gbc.writeMem(0x169f, { 0xae });
        gbc.writeMem(0x5ae3, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe289);
        EXPECT(gbc.pc(), 0x16a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00EA
        gbc.setState(0x4721, 0xa593, 0x3ac0, 0x23e8, 0x1032, 0x2355, 0x1, 0x1);
        gbc.writeMem(0x2355, { 0x8d });
        gbc.writeMem(0x4721, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa593);
        EXPECT(gbc.pc(), 0x4722);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00EB
        gbc.setState(0x2dde, 0x2b5, 0x7c40, 0xc36d, 0x64e5, 0x8a4c, 0x0, 0x0);
        gbc.writeMem(0x2dde, { 0xae });
        gbc.writeMem(0x8a4c, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2b5);
        EXPECT(gbc.pc(), 0x2ddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a4c), 0xd2);
        // AE 00EC
        gbc.setState(0x3a47, 0x5de0, 0x6bd0, 0x664e, 0x1bd9, 0x30e0, 0x0, 0x0);
        gbc.writeMem(0x30e0, { 0x70 });
        gbc.writeMem(0x3a47, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5de0);
        EXPECT(gbc.pc(), 0x3a48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00ED
        gbc.setState(0x1a9d, 0xafc6, 0x4de0, 0xf4d0, 0x3f6c, 0x588, 0x0, 0x0);
        gbc.writeMem(0x588, { 0xa3 });
        gbc.writeMem(0x1a9d, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xafc6);
        EXPECT(gbc.pc(), 0x1a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00EE
        gbc.setState(0xc1b8, 0x578e, 0x5630, 0x833d, 0xb20c, 0x74f2, 0x0, 0x1);
        gbc.writeMem(0x74f2, { 0x5f });
        gbc.writeMem(0xc1b8, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x578e);
        EXPECT(gbc.pc(), 0xc1b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b8), 0xae);
        // AE 00EF
        gbc.setState(0x8169, 0x69d3, 0x5420, 0xd394, 0xdd3a, 0x13d1, 0x1, 0x0);
        gbc.writeMem(0x13d1, { 0x14 });
        gbc.writeMem(0x8169, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x69d3);
        EXPECT(gbc.pc(), 0x816a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8169), 0xae);
        // AE 00F1
        gbc.setState(0x4826, 0x437f, 0xf0f0, 0x61a3, 0xe90c, 0x5c66, 0x0, 0x0);
        gbc.writeMem(0x4826, { 0xae });
        gbc.writeMem(0x5c66, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x437f);
        EXPECT(gbc.pc(), 0x4827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00F2
        gbc.setState(0x1081, 0x2a32, 0x4ef0, 0x5e5c, 0x10ea, 0x7d29, 0x1, 0x0);
        gbc.writeMem(0x1081, { 0xae });
        gbc.writeMem(0x7d29, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2a32);
        EXPECT(gbc.pc(), 0x1082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00F3
        gbc.setState(0x8c83, 0x617e, 0x3280, 0xeed4, 0x8dee, 0xdb04, 0x0, 0x0);
        gbc.writeMem(0x8c83, { 0xae });
        gbc.writeMem(0xdb04, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x617e);
        EXPECT(gbc.pc(), 0x8c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c83), 0xae);
        EXPECT(gbc.readMem(0xdb04), 0xe3);
        // AE 00F4
        gbc.setState(0xe4b3, 0x72c0, 0x6770, 0x27ae, 0x63cf, 0x4ca0, 0x0, 0x1);
        gbc.writeMem(0x4ca0, { 0xe });
        gbc.writeMem(0xe4b3, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x72c0);
        EXPECT(gbc.pc(), 0xe4b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4b3), 0xae);
        // AE 00F5
        gbc.setState(0x117c, 0xba7a, 0xe380, 0xba2e, 0x4848, 0x4073, 0x1, 0x1);
        gbc.writeMem(0x117c, { 0xae });
        gbc.writeMem(0x4073, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xba7a);
        EXPECT(gbc.pc(), 0x117d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 00F6
        gbc.setState(0x9932, 0x5aef, 0x9c00, 0x9311, 0xa4ff, 0x762a, 0x0, 0x0);
        gbc.writeMem(0x762a, { 0x7b });
        gbc.writeMem(0x9932, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5aef);
        EXPECT(gbc.pc(), 0x9933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9932), 0xae);
        // AE 00F7
        gbc.setState(0xdcf6, 0x6fb6, 0xb80, 0xd72e, 0x551f, 0x732e, 0x1, 0x0);
        gbc.writeMem(0x732e, { 0xd2 });
        gbc.writeMem(0xdcf6, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6fb6);
        EXPECT(gbc.pc(), 0xdcf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf6), 0xae);
        // AE 00F9
        gbc.setState(0x551b, 0xcc10, 0x2cf0, 0x76f2, 0xa0d5, 0x8306, 0x1, 0x1);
        gbc.writeMem(0x551b, { 0xae });
        gbc.writeMem(0x8306, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xcc10);
        EXPECT(gbc.pc(), 0x551c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8306), 0x67);
        // AE 00FA
        gbc.setState(0xae84, 0x3bc2, 0x4960, 0x69a2, 0xfda, 0x3bc, 0x0, 0x1);
        gbc.writeMem(0x3bc, { 0xca });
        gbc.writeMem(0xae84, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3bc2);
        EXPECT(gbc.pc(), 0xae85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae84), 0xae);
        // AE 00FB
        gbc.setState(0x4331, 0x859a, 0x7dd0, 0xcd14, 0x3b31, 0x802b, 0x1, 0x1);
        gbc.writeMem(0x4331, { 0xae });
        gbc.writeMem(0x802b, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x859a);
        EXPECT(gbc.pc(), 0x4332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x802b), 0xdd);
        // AE 00FC
        gbc.setState(0xcfb5, 0xd47a, 0xca00, 0x6a1f, 0x4f47, 0x8db, 0x0, 0x1);
        gbc.writeMem(0x8db, { 0x1a });
        gbc.writeMem(0xcfb5, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd47a);
        EXPECT(gbc.pc(), 0xcfb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb5), 0xae);
        // AE 00FD
        gbc.setState(0x640c, 0x2b0b, 0x9650, 0xbeed, 0xf4, 0xb560, 0x1, 0x0);
        gbc.writeMem(0x640c, { 0xae });
        gbc.writeMem(0xb560, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2b0b);
        EXPECT(gbc.pc(), 0x640d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb560), 0xf5);
        // AE 00FE
        gbc.setState(0x4073, 0xcfa2, 0xfa80, 0x64fe, 0xd5fb, 0x80ca, 0x1, 0x1);
        gbc.writeMem(0x4073, { 0xae });
        gbc.writeMem(0x80ca, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xcfa2);
        EXPECT(gbc.pc(), 0x4074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ca), 0xd9);
        // AE 00FF
        gbc.setState(0xccff, 0x14fb, 0xacc0, 0x3039, 0x4d3, 0xe010, 0x0, 0x0);
        gbc.writeMem(0xccff, { 0xae });
        gbc.writeMem(0xe010, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x14fb);
        EXPECT(gbc.pc(), 0xcd00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccff), 0xae);
        EXPECT(gbc.readMem(0xe010), 0x81);
        // AE 0100
        gbc.setState(0x79f9, 0x8d09, 0x66a0, 0xbe06, 0xf29e, 0xe2bc, 0x1, 0x1);
        gbc.writeMem(0x79f9, { 0xae });
        gbc.writeMem(0xe2bc, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8d09);
        EXPECT(gbc.pc(), 0x79fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2bc), 0x66);
        // AE 0101
        gbc.setState(0xb8f5, 0x1699, 0x12b0, 0xfbfb, 0xf057, 0x2355, 0x0, 0x1);
        gbc.writeMem(0x2355, { 0x8d });
        gbc.writeMem(0xb8f5, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1699);
        EXPECT(gbc.pc(), 0xb8f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f5), 0xae);
        // AE 0102
        gbc.setState(0xe535, 0x7843, 0x6de0, 0x8ea6, 0x33b2, 0xef41, 0x1, 0x0);
        gbc.writeMem(0xe535, { 0xae });
        gbc.writeMem(0xef41, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7843);
        EXPECT(gbc.pc(), 0xe536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe535), 0xae);
        EXPECT(gbc.readMem(0xef41), 0xbd);
        // AE 0103
        gbc.setState(0xa022, 0x47a4, 0x8da0, 0xca31, 0x2b50, 0xc7cc, 0x0, 0x0);
        gbc.writeMem(0xa022, { 0xae });
        gbc.writeMem(0xc7cc, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x47a4);
        EXPECT(gbc.pc(), 0xa023);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa022), 0xae);
        EXPECT(gbc.readMem(0xc7cc), 0xef);
        // AE 0104
        gbc.setState(0x3174, 0x6900, 0x6050, 0x72b4, 0x55ad, 0xa4e1, 0x1, 0x1);
        gbc.writeMem(0x3174, { 0xae });
        gbc.writeMem(0xa4e1, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6900);
        EXPECT(gbc.pc(), 0x3175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e1), 0x16);
        // AE 0106
        gbc.setState(0x33fb, 0x7033, 0x16d0, 0xe4b9, 0x236, 0xda1b, 0x0, 0x0);
        gbc.writeMem(0x33fb, { 0xae });
        gbc.writeMem(0xda1b, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7033);
        EXPECT(gbc.pc(), 0x33fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda1b), 0xde);
        // AE 0107
        gbc.setState(0x9a57, 0xa4f0, 0xfcb0, 0xa053, 0x7750, 0x60ab, 0x1, 0x1);
        gbc.writeMem(0x60ab, { 0xd4 });
        gbc.writeMem(0x9a57, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa4f0);
        EXPECT(gbc.pc(), 0x9a58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a57), 0xae);
        // AE 0108
        gbc.setState(0xd9e9, 0x43b3, 0x9f0, 0x22af, 0x3c2d, 0x3e4e, 0x1, 0x0);
        gbc.writeMem(0x3e4e, { 0x4b });
        gbc.writeMem(0xd9e9, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x43b3);
        EXPECT(gbc.pc(), 0xd9ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9e9), 0xae);
        // AE 010A
        gbc.setState(0x381e, 0x3bcf, 0x1390, 0x7fb4, 0xb356, 0x6eb0, 0x0, 0x1);
        gbc.writeMem(0x381e, { 0xae });
        gbc.writeMem(0x6eb0, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3bcf);
        EXPECT(gbc.pc(), 0x381f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 010B
        gbc.setState(0xcd32, 0x5756, 0xff00, 0x6434, 0x63f7, 0x4336, 0x1, 0x0);
        gbc.writeMem(0x4336, { 0x47 });
        gbc.writeMem(0xcd32, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5756);
        EXPECT(gbc.pc(), 0xcd33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd32), 0xae);
        // AE 010C
        gbc.setState(0x9d8, 0x89d7, 0x45c0, 0xb71f, 0x557b, 0x51c8, 0x1, 0x0);
        gbc.writeMem(0x9d8, { 0xae });
        gbc.writeMem(0x51c8, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x89d7);
        EXPECT(gbc.pc(), 0x9d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 010D
        gbc.setState(0x106b, 0x8247, 0xa020, 0x8fee, 0x6f22, 0x55db, 0x1, 0x0);
        gbc.writeMem(0x106b, { 0xae });
        gbc.writeMem(0x55db, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8247);
        EXPECT(gbc.pc(), 0x106c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 010E
        gbc.setState(0xdc19, 0xa8ea, 0xcc0, 0xd90d, 0xfddb, 0xe58b, 0x1, 0x1);
        gbc.writeMem(0xdc19, { 0xae });
        gbc.writeMem(0xe58b, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa8ea);
        EXPECT(gbc.pc(), 0xdc1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc19), 0xae);
        EXPECT(gbc.readMem(0xe58b), 0x77);
        // AE 0111
        gbc.setState(0xc9b0, 0x2b5c, 0x800, 0x8386, 0xab38, 0xdddd, 0x0, 0x1);
        gbc.writeMem(0xc9b0, { 0xae });
        gbc.writeMem(0xdddd, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2b5c);
        EXPECT(gbc.pc(), 0xc9b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b0), 0xae);
        EXPECT(gbc.readMem(0xdddd), 0x1d);
        // AE 0112
        gbc.setState(0x37e6, 0x9ac7, 0x9c10, 0x33a, 0xd9f9, 0x66c0, 0x1, 0x1);
        gbc.writeMem(0x37e6, { 0xae });
        gbc.writeMem(0x66c0, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9ac7);
        EXPECT(gbc.pc(), 0x37e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0113
        gbc.setState(0x38ae, 0x915, 0x7770, 0xd4eb, 0xe9de, 0x8c8e, 0x0, 0x1);
        gbc.writeMem(0x38ae, { 0xae });
        gbc.writeMem(0x8c8e, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x915);
        EXPECT(gbc.pc(), 0x38af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c8e), 0x3d);
        // AE 0114
        gbc.setState(0x5a64, 0xee1e, 0x5430, 0x6d2f, 0x1348, 0xa59c, 0x1, 0x1);
        gbc.writeMem(0x5a64, { 0xae });
        gbc.writeMem(0xa59c, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xee1e);
        EXPECT(gbc.pc(), 0x5a65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa59c), 0xeb);
        // AE 0115
        gbc.setState(0xe98f, 0xd399, 0x6a00, 0xc8f8, 0x3d06, 0xcf2, 0x1, 0x1);
        gbc.writeMem(0xcf2, { 0xbd });
        gbc.writeMem(0xe98f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd399);
        EXPECT(gbc.pc(), 0xe990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe98f), 0xae);
        // AE 0116
        gbc.setState(0x7014, 0x894d, 0x5140, 0x13ba, 0x231d, 0xb2fd, 0x0, 0x0);
        gbc.writeMem(0x7014, { 0xae });
        gbc.writeMem(0xb2fd, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x894d);
        EXPECT(gbc.pc(), 0x7015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2fd), 0x8e);
        // AE 0117
        gbc.setState(0x32f2, 0xc417, 0x5500, 0x98b0, 0xdce0, 0x51be, 0x1, 0x1);
        gbc.writeMem(0x32f2, { 0xae });
        gbc.writeMem(0x51be, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc417);
        EXPECT(gbc.pc(), 0x32f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0118
        gbc.setState(0x45db, 0x686f, 0xb630, 0x3725, 0xa309, 0x1e30, 0x0, 0x0);
        gbc.writeMem(0x1e30, { 0xad });
        gbc.writeMem(0x45db, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x686f);
        EXPECT(gbc.pc(), 0x45dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0119
        gbc.setState(0x979, 0x8dac, 0xc5e0, 0xff23, 0x1c13, 0x5ad5, 0x1, 0x0);
        gbc.writeMem(0x979, { 0xae });
        gbc.writeMem(0x5ad5, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8dac);
        EXPECT(gbc.pc(), 0x97a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 011A
        gbc.setState(0x4a26, 0xae0a, 0xa690, 0xb4b4, 0x5dcc, 0xa86e, 0x1, 0x1);
        gbc.writeMem(0x4a26, { 0xae });
        gbc.writeMem(0xa86e, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xae0a);
        EXPECT(gbc.pc(), 0x4a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86e), 0xdd);
        // AE 011C
        gbc.setState(0xb63b, 0xd5d8, 0x11e0, 0x59f9, 0x8f01, 0x2f53, 0x1, 0x1);
        gbc.writeMem(0x2f53, { 0xb1 });
        gbc.writeMem(0xb63b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd5d8);
        EXPECT(gbc.pc(), 0xb63c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb63b), 0xae);
        // AE 011D
        gbc.setState(0xd977, 0x94d0, 0x7f70, 0x4bd4, 0x36ad, 0x1d32, 0x1, 0x1);
        gbc.writeMem(0x1d32, { 0x33 });
        gbc.writeMem(0xd977, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x94d0);
        EXPECT(gbc.pc(), 0xd978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd977), 0xae);
        // AE 011E
        gbc.setState(0x3c90, 0x4d8b, 0xe440, 0xad47, 0x9bbe, 0xe20f, 0x0, 0x1);
        gbc.writeMem(0x3c90, { 0xae });
        gbc.writeMem(0xe20f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4d8b);
        EXPECT(gbc.pc(), 0x3c91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe20f), 0x2a);
        // AE 011F
        gbc.setState(0x451, 0xbb75, 0xbfb0, 0xadb9, 0x449d, 0x579, 0x1, 0x0);
        gbc.writeMem(0x451, { 0xae });
        gbc.writeMem(0x579, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbb75);
        EXPECT(gbc.pc(), 0x452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0120
        gbc.setState(0x1d9e, 0x7302, 0xc310, 0x4c57, 0xe175, 0xc8a, 0x0, 0x1);
        gbc.writeMem(0xc8a, { 0x2 });
        gbc.writeMem(0x1d9e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7302);
        EXPECT(gbc.pc(), 0x1d9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0121
        gbc.setState(0x1297, 0xe084, 0x51a0, 0xe151, 0x332d, 0x3b57, 0x1, 0x0);
        gbc.writeMem(0x1297, { 0xae });
        gbc.writeMem(0x3b57, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe084);
        EXPECT(gbc.pc(), 0x1298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0122
        gbc.setState(0xef8e, 0x12f3, 0xbf70, 0xa46, 0x44b5, 0x28b0, 0x0, 0x0);
        gbc.writeMem(0x28b0, { 0xfb });
        gbc.writeMem(0xef8e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x12f3);
        EXPECT(gbc.pc(), 0xef8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef8e), 0xae);
        // AE 0123
        gbc.setState(0xdaaf, 0xfad6, 0x5650, 0x7072, 0x9259, 0xb797, 0x1, 0x1);
        gbc.writeMem(0xb797, { 0x1d });
        gbc.writeMem(0xdaaf, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xfad6);
        EXPECT(gbc.pc(), 0xdab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb797), 0x1d);
        EXPECT(gbc.readMem(0xdaaf), 0xae);
        // AE 0124
        gbc.setState(0x6e15, 0x3152, 0x8100, 0x2497, 0xfc71, 0x3b61, 0x0, 0x1);
        gbc.writeMem(0x3b61, { 0x52 });
        gbc.writeMem(0x6e15, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3152);
        EXPECT(gbc.pc(), 0x6e16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0125
        gbc.setState(0x2d03, 0x3907, 0x5280, 0xd99, 0x708, 0xe873, 0x0, 0x0);
        gbc.writeMem(0x2d03, { 0xae });
        gbc.writeMem(0xe873, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3907);
        EXPECT(gbc.pc(), 0x2d04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe873), 0x7c);
        // AE 0126
        gbc.setState(0xdab9, 0x31f3, 0xdce0, 0x8790, 0x4ff5, 0x76be, 0x1, 0x1);
        gbc.writeMem(0x76be, { 0xd4 });
        gbc.writeMem(0xdab9, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x31f3);
        EXPECT(gbc.pc(), 0xdaba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdab9), 0xae);
        // AE 0127
        gbc.setState(0xcec7, 0x38a6, 0xd1f0, 0xe130, 0x6017, 0x2ee9, 0x1, 0x1);
        gbc.writeMem(0x2ee9, { 0x4a });
        gbc.writeMem(0xcec7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x38a6);
        EXPECT(gbc.pc(), 0xcec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec7), 0xae);
        // AE 0128
        gbc.setState(0xa48d, 0xd766, 0x510, 0xf7df, 0x54bb, 0x4c28, 0x1, 0x0);
        gbc.writeMem(0x4c28, { 0x42 });
        gbc.writeMem(0xa48d, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd766);
        EXPECT(gbc.pc(), 0xa48e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa48d), 0xae);
        // AE 0129
        gbc.setState(0xe544, 0x7aba, 0x86d0, 0x5d7a, 0x123a, 0x815f, 0x1, 0x0);
        gbc.writeMem(0x815f, { 0xc2 });
        gbc.writeMem(0xe544, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7aba);
        EXPECT(gbc.pc(), 0xe545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x815f), 0xc2);
        EXPECT(gbc.readMem(0xe544), 0xae);
        // AE 012A
        gbc.setState(0x1c2, 0x5858, 0x4d10, 0xd4d1, 0x3141, 0xa693, 0x1, 0x1);
        gbc.writeMem(0x1c2, { 0xae });
        gbc.writeMem(0xa693, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5858);
        EXPECT(gbc.pc(), 0x1c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa693), 0xd);
        // AE 012B
        gbc.setState(0x3e27, 0x271b, 0x3db0, 0x7077, 0xc631, 0xbad4, 0x0, 0x1);
        gbc.writeMem(0x3e27, { 0xae });
        gbc.writeMem(0xbad4, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x271b);
        EXPECT(gbc.pc(), 0x3e28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbad4), 0x39);
        // AE 012C
        gbc.setState(0xb3fd, 0xbff9, 0xfc00, 0x63da, 0x4259, 0xe70f, 0x1, 0x0);
        gbc.writeMem(0xb3fd, { 0xae });
        gbc.writeMem(0xe70f, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xbff9);
        EXPECT(gbc.pc(), 0xb3fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3fd), 0xae);
        EXPECT(gbc.readMem(0xe70f), 0xff);
        // AE 012D
        gbc.setState(0x4587, 0x71f, 0x62e0, 0x3e99, 0xe495, 0xd7a4, 0x0, 0x1);
        gbc.writeMem(0x4587, { 0xae });
        gbc.writeMem(0xd7a4, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x71f);
        EXPECT(gbc.pc(), 0x4588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a4), 0x8f);
        // AE 012E
        gbc.setState(0x1dbc, 0x4332, 0x96d0, 0x9760, 0x1e79, 0x43f3, 0x0, 0x0);
        gbc.writeMem(0x1dbc, { 0xae });
        gbc.writeMem(0x43f3, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4332);
        EXPECT(gbc.pc(), 0x1dbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 012F
        gbc.setState(0x92b0, 0xbc54, 0xd830, 0x596a, 0x7c12, 0x4b4b, 0x0, 0x0);
        gbc.writeMem(0x4b4b, { 0x60 });
        gbc.writeMem(0x92b0, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbc54);
        EXPECT(gbc.pc(), 0x92b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92b0), 0xae);
        // AE 0130
        gbc.setState(0xb343, 0x7988, 0x8fc0, 0x32f7, 0x317c, 0x548f, 0x1, 0x1);
        gbc.writeMem(0x548f, { 0xa2 });
        gbc.writeMem(0xb343, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7988);
        EXPECT(gbc.pc(), 0xb344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb343), 0xae);
        // AE 0131
        gbc.setState(0xe3da, 0x7caf, 0x24b0, 0xc816, 0xb75b, 0xdfe8, 0x1, 0x0);
        gbc.writeMem(0xdfe8, { 0x1b });
        gbc.writeMem(0xe3da, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7caf);
        EXPECT(gbc.pc(), 0xe3db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfe8), 0x1b);
        EXPECT(gbc.readMem(0xe3da), 0xae);
        // AE 0132
        gbc.setState(0xaf1b, 0x6139, 0x9be0, 0x4511, 0xc6f0, 0x6506, 0x1, 0x0);
        gbc.writeMem(0x6506, { 0xa4 });
        gbc.writeMem(0xaf1b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6139);
        EXPECT(gbc.pc(), 0xaf1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf1b), 0xae);
        // AE 0133
        gbc.setState(0xe8ec, 0x2601, 0x4f20, 0x5d32, 0x8a20, 0xef5e, 0x0, 0x0);
        gbc.writeMem(0xe8ec, { 0xae });
        gbc.writeMem(0xef5e, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2601);
        EXPECT(gbc.pc(), 0xe8ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ec), 0xae);
        EXPECT(gbc.readMem(0xef5e), 0x7a);
        // AE 0134
        gbc.setState(0xefcc, 0xa531, 0x8e50, 0xa6af, 0x9a67, 0x37f7, 0x1, 0x0);
        gbc.writeMem(0x37f7, { 0x9b });
        gbc.writeMem(0xefcc, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa531);
        EXPECT(gbc.pc(), 0xefcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefcc), 0xae);
        // AE 0135
        gbc.setState(0x4540, 0xbe5a, 0x59a0, 0x4e3f, 0x6c93, 0x2cad, 0x0, 0x1);
        gbc.writeMem(0x2cad, { 0xed });
        gbc.writeMem(0x4540, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbe5a);
        EXPECT(gbc.pc(), 0x4541);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0136
        gbc.setState(0xbec5, 0xab8d, 0x9ad0, 0x2969, 0xcc78, 0x4dae, 0x1, 0x1);
        gbc.writeMem(0x4dae, { 0xad });
        gbc.writeMem(0xbec5, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xab8d);
        EXPECT(gbc.pc(), 0xbec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec5), 0xae);
        // AE 0137
        gbc.setState(0xb31b, 0x4176, 0xb370, 0xeec3, 0xdc89, 0xdea1, 0x0, 0x0);
        gbc.writeMem(0xb31b, { 0xae });
        gbc.writeMem(0xdea1, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4176);
        EXPECT(gbc.pc(), 0xb31c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb31b), 0xae);
        EXPECT(gbc.readMem(0xdea1), 0x82);
        // AE 0138
        gbc.setState(0x42d9, 0x40ba, 0xc9b0, 0x4801, 0x8214, 0x7e9c, 0x0, 0x0);
        gbc.writeMem(0x42d9, { 0xae });
        gbc.writeMem(0x7e9c, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x40ba);
        EXPECT(gbc.pc(), 0x42da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0139
        gbc.setState(0x1a78, 0xf709, 0x3b10, 0xf059, 0x4454, 0x109b, 0x0, 0x0);
        gbc.writeMem(0x109b, { 0xa6 });
        gbc.writeMem(0x1a78, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf709);
        EXPECT(gbc.pc(), 0x1a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 013A
        gbc.setState(0xde7b, 0x6b07, 0x3c0, 0xfe24, 0xb352, 0x475, 0x0, 0x1);
        gbc.writeMem(0x475, { 0x6f });
        gbc.writeMem(0xde7b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6b07);
        EXPECT(gbc.pc(), 0xde7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde7b), 0xae);
        // AE 013B
        gbc.setState(0x28b, 0xdb5a, 0x8d20, 0x7b2e, 0x44e1, 0x9c, 0x0, 0x0);
        gbc.writeMem(0x9c, { 0x78 });
        gbc.writeMem(0x28b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xdb5a);
        EXPECT(gbc.pc(), 0x28c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 013C
        gbc.setState(0xc332, 0xcbd8, 0x44c0, 0xf5a9, 0x3de4, 0xfb46, 0x0, 0x1);
        gbc.writeMem(0xc332, { 0xae });
        gbc.writeMem(0xfb46, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xcbd8);
        EXPECT(gbc.pc(), 0xc333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc332), 0xae);
        EXPECT(gbc.readMem(0xfb46), 0x95);
        // AE 013D
        gbc.setState(0xd8de, 0xa806, 0x7100, 0xc0e7, 0x8968, 0x8e37, 0x1, 0x1);
        gbc.writeMem(0x8e37, { 0x47 });
        gbc.writeMem(0xd8de, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa806);
        EXPECT(gbc.pc(), 0xd8df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e37), 0x47);
        EXPECT(gbc.readMem(0xd8de), 0xae);
        // AE 013E
        gbc.setState(0x9734, 0xce1c, 0x1380, 0xbbef, 0xc800, 0x419, 0x0, 0x1);
        gbc.writeMem(0x419, { 0xa });
        gbc.writeMem(0x9734, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xce1c);
        EXPECT(gbc.pc(), 0x9735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9734), 0xae);
        // AE 013F
        gbc.setState(0x1f4, 0xd931, 0x64d0, 0xa354, 0x7b3b, 0x4ba1, 0x1, 0x1);
        gbc.writeMem(0x1f4, { 0xae });
        gbc.writeMem(0x4ba1, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd931);
        EXPECT(gbc.pc(), 0x1f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0140
        gbc.setState(0x2db1, 0xfb8a, 0x63e0, 0x1bea, 0xf19e, 0x443f, 0x0, 0x1);
        gbc.writeMem(0x2db1, { 0xae });
        gbc.writeMem(0x443f, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xfb8a);
        EXPECT(gbc.pc(), 0x2db2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0141
        gbc.setState(0x3638, 0x3725, 0x20d0, 0x49db, 0x7fbd, 0xa245, 0x0, 0x0);
        gbc.writeMem(0x3638, { 0xae });
        gbc.writeMem(0xa245, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3725);
        EXPECT(gbc.pc(), 0x3639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa245), 0x7c);
        // AE 0142
        gbc.setState(0xac83, 0x110b, 0xb650, 0xfc98, 0xfdee, 0x3be9, 0x1, 0x0);
        gbc.writeMem(0x3be9, { 0xfa });
        gbc.writeMem(0xac83, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x110b);
        EXPECT(gbc.pc(), 0xac84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac83), 0xae);
        // AE 0143
        gbc.setState(0x99fb, 0xae2b, 0x83c0, 0x6355, 0xcd39, 0x7d25, 0x0, 0x1);
        gbc.writeMem(0x7d25, { 0xe0 });
        gbc.writeMem(0x99fb, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xae2b);
        EXPECT(gbc.pc(), 0x99fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99fb), 0xae);
        // AE 0144
        gbc.setState(0x490d, 0x95a2, 0x4430, 0x1bf0, 0x8c56, 0xe9c1, 0x1, 0x1);
        gbc.writeMem(0x490d, { 0xae });
        gbc.writeMem(0xe9c1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x95a2);
        EXPECT(gbc.pc(), 0x490e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c1), 0x51);
        // AE 0145
        gbc.setState(0x1c3e, 0xa21e, 0xb330, 0xe169, 0xd487, 0x1df5, 0x0, 0x1);
        gbc.writeMem(0x1c3e, { 0xae });
        gbc.writeMem(0x1df5, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa21e);
        EXPECT(gbc.pc(), 0x1c3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0146
        gbc.setState(0xe685, 0xb5be, 0x2100, 0x931e, 0x51f4, 0x5f6d, 0x0, 0x1);
        gbc.writeMem(0x5f6d, { 0x82 });
        gbc.writeMem(0xe685, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb5be);
        EXPECT(gbc.pc(), 0xe686);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe685), 0xae);
        // AE 0147
        gbc.setState(0x4334, 0x307b, 0xcfe0, 0x4560, 0xc72a, 0x2f1d, 0x1, 0x0);
        gbc.writeMem(0x2f1d, { 0xdb });
        gbc.writeMem(0x4334, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x307b);
        EXPECT(gbc.pc(), 0x4335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0148
        gbc.setState(0x2a4a, 0x4b54, 0xd230, 0x79ea, 0xcdfa, 0x7430, 0x0, 0x0);
        gbc.writeMem(0x2a4a, { 0xae });
        gbc.writeMem(0x7430, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4b54);
        EXPECT(gbc.pc(), 0x2a4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0149
        gbc.setState(0x945b, 0x9bc7, 0x6b0, 0x8ce9, 0x2fcc, 0x7f27, 0x0, 0x0);
        gbc.writeMem(0x7f27, { 0x44 });
        gbc.writeMem(0x945b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9bc7);
        EXPECT(gbc.pc(), 0x945c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x945b), 0xae);
        // AE 014A
        gbc.setState(0x2cdb, 0xfba0, 0x38b0, 0x2924, 0xf3cf, 0xf0d7, 0x0, 0x1);
        gbc.writeMem(0x2cdb, { 0xae });
        gbc.writeMem(0xf0d7, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xfba0);
        EXPECT(gbc.pc(), 0x2cdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf0d7), 0x6);
        // AE 014B
        gbc.setState(0x9a06, 0xa5f3, 0x54b0, 0x5016, 0xd7a8, 0xa29, 0x1, 0x1);
        gbc.writeMem(0xa29, { 0xeb });
        gbc.writeMem(0x9a06, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa5f3);
        EXPECT(gbc.pc(), 0x9a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a06), 0xae);
        // AE 014C
        gbc.setState(0x64cb, 0x6254, 0x2a90, 0x613d, 0x5061, 0xae5, 0x1, 0x0);
        gbc.writeMem(0xae5, { 0x4b });
        gbc.writeMem(0x64cb, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6254);
        EXPECT(gbc.pc(), 0x64cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 014D
        gbc.setState(0x35d3, 0x42fd, 0x6f50, 0x3fa7, 0x568a, 0x9e4, 0x1, 0x0);
        gbc.writeMem(0x9e4, { 0x56 });
        gbc.writeMem(0x35d3, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x42fd);
        EXPECT(gbc.pc(), 0x35d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 014E
        gbc.setState(0x1e5d, 0xfa49, 0x6d50, 0x90e9, 0x405e, 0x7e2d, 0x0, 0x0);
        gbc.writeMem(0x1e5d, { 0xae });
        gbc.writeMem(0x7e2d, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xfa49);
        EXPECT(gbc.pc(), 0x1e5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 014F
        gbc.setState(0x5530, 0x5695, 0xfc50, 0x295, 0x8821, 0x4d10, 0x1, 0x1);
        gbc.writeMem(0x4d10, { 0x9d });
        gbc.writeMem(0x5530, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5695);
        EXPECT(gbc.pc(), 0x5531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0150
        gbc.setState(0xba31, 0xc5be, 0x5800, 0xfef1, 0x3de6, 0xb8d7, 0x0, 0x0);
        gbc.writeMem(0xb8d7, { 0x7c });
        gbc.writeMem(0xba31, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc5be);
        EXPECT(gbc.pc(), 0xba32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d7), 0x7c);
        EXPECT(gbc.readMem(0xba31), 0xae);
        // AE 0151
        gbc.setState(0x588d, 0x197b, 0x1dc0, 0xcd1a, 0xd63b, 0x96c5, 0x1, 0x1);
        gbc.writeMem(0x588d, { 0xae });
        gbc.writeMem(0x96c5, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x197b);
        EXPECT(gbc.pc(), 0x588e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96c5), 0x14);
        // AE 0153
        gbc.setState(0x83ef, 0xe24a, 0x1f90, 0x178e, 0x1b02, 0xaa62, 0x0, 0x0);
        gbc.writeMem(0x83ef, { 0xae });
        gbc.writeMem(0xaa62, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe24a);
        EXPECT(gbc.pc(), 0x83f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ef), 0xae);
        EXPECT(gbc.readMem(0xaa62), 0x73);
        // AE 0154
        gbc.setState(0x5fff, 0xf2d4, 0xe7f0, 0x3a23, 0xe2f1, 0x5d31, 0x1, 0x0);
        gbc.writeMem(0x5d31, { 0xcb });
        gbc.writeMem(0x5fff, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf2d4);
        EXPECT(gbc.pc(), 0x6000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0155
        gbc.setState(0xc740, 0x6f4c, 0x5a40, 0xb833, 0xde30, 0x6dd6, 0x1, 0x1);
        gbc.writeMem(0x6dd6, { 0x4c });
        gbc.writeMem(0xc740, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6f4c);
        EXPECT(gbc.pc(), 0xc741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc740), 0xae);
        // AE 0156
        gbc.setState(0x3b25, 0x5a4b, 0x5000, 0x51a8, 0x6645, 0x54a, 0x1, 0x1);
        gbc.writeMem(0x54a, { 0xdf });
        gbc.writeMem(0x3b25, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5a4b);
        EXPECT(gbc.pc(), 0x3b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0157
        gbc.setState(0x5620, 0x73a3, 0xa820, 0xbb31, 0x6dc3, 0xd1a0, 0x1, 0x1);
        gbc.writeMem(0x5620, { 0xae });
        gbc.writeMem(0xd1a0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x73a3);
        EXPECT(gbc.pc(), 0x5621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a0), 0x0);
        // AE 0159
        gbc.setState(0xe1d6, 0xc0f3, 0xb3f0, 0xbacd, 0xe5, 0xadd3, 0x1, 0x0);
        gbc.writeMem(0xadd3, { 0x4c });
        gbc.writeMem(0xe1d6, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xc0f3);
        EXPECT(gbc.pc(), 0xe1d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadd3), 0x4c);
        EXPECT(gbc.readMem(0xe1d6), 0xae);
        // AE 015A
        gbc.setState(0xc78, 0x3cff, 0x2cf0, 0x41dc, 0xe3f6, 0x9e76, 0x1, 0x0);
        gbc.writeMem(0xc78, { 0xae });
        gbc.writeMem(0x9e76, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3cff);
        EXPECT(gbc.pc(), 0xc79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e76), 0x6f);
        // AE 015B
        gbc.setState(0x5791, 0x462c, 0x9b40, 0x6d1e, 0x81d8, 0xa796, 0x1, 0x1);
        gbc.writeMem(0x5791, { 0xae });
        gbc.writeMem(0xa796, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x462c);
        EXPECT(gbc.pc(), 0x5792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa796), 0x8d);
        // AE 015C
        gbc.setState(0x2fd2, 0xea7a, 0x2a70, 0x18a2, 0x59bd, 0x81bf, 0x0, 0x0);
        gbc.writeMem(0x2fd2, { 0xae });
        gbc.writeMem(0x81bf, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xea7a);
        EXPECT(gbc.pc(), 0x2fd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81bf), 0xac);
        // AE 015D
        gbc.setState(0x175f, 0xa1f8, 0x88b0, 0x3fb1, 0xa993, 0xa686, 0x1, 0x0);
        gbc.writeMem(0x175f, { 0xae });
        gbc.writeMem(0xa686, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa1f8);
        EXPECT(gbc.pc(), 0x1760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa686), 0x89);
        // AE 015E
        gbc.setState(0x3b54, 0x2f6f, 0x3780, 0xca66, 0x9ff4, 0xb957, 0x1, 0x1);
        gbc.writeMem(0x3b54, { 0xae });
        gbc.writeMem(0xb957, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2f6f);
        EXPECT(gbc.pc(), 0x3b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb957), 0x96);
        // AE 015F
        gbc.setState(0x7c14, 0xecc1, 0xe790, 0xa523, 0x1dda, 0x6b4, 0x0, 0x1);
        gbc.writeMem(0x6b4, { 0xcf });
        gbc.writeMem(0x7c14, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xecc1);
        EXPECT(gbc.pc(), 0x7c15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0160
        gbc.setState(0x6d7f, 0x12ff, 0x3610, 0x601c, 0xed33, 0xc3be, 0x1, 0x1);
        gbc.writeMem(0x6d7f, { 0xae });
        gbc.writeMem(0xc3be, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x12ff);
        EXPECT(gbc.pc(), 0x6d80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3be), 0x91);
        // AE 0161
        gbc.setState(0x483c, 0x228, 0x4150, 0xc33, 0xdda5, 0xe70d, 0x1, 0x1);
        gbc.writeMem(0x483c, { 0xae });
        gbc.writeMem(0xe70d, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x228);
        EXPECT(gbc.pc(), 0x483d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe70d), 0x5e);
        // AE 0162
        gbc.setState(0x720f, 0x667f, 0x4fe0, 0x7675, 0x2537, 0x3ad3, 0x0, 0x0);
        gbc.writeMem(0x3ad3, { 0x98 });
        gbc.writeMem(0x720f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x667f);
        EXPECT(gbc.pc(), 0x7210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0163
        gbc.setState(0xc904, 0xbadd, 0x47e0, 0xdaa5, 0x2a6f, 0x8dfb, 0x0, 0x1);
        gbc.writeMem(0x8dfb, { 0x39 });
        gbc.writeMem(0xc904, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbadd);
        EXPECT(gbc.pc(), 0xc905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dfb), 0x39);
        EXPECT(gbc.readMem(0xc904), 0xae);
        // AE 0164
        gbc.setState(0x82f3, 0xb822, 0x4ab0, 0xbbc2, 0x7426, 0x8de6, 0x0, 0x0);
        gbc.writeMem(0x82f3, { 0xae });
        gbc.writeMem(0x8de6, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb822);
        EXPECT(gbc.pc(), 0x82f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82f3), 0xae);
        EXPECT(gbc.readMem(0x8de6), 0xad);
        // AE 0165
        gbc.setState(0xcdd7, 0x6cb6, 0xb7a0, 0x83e8, 0x2f99, 0xb23f, 0x0, 0x1);
        gbc.writeMem(0xb23f, { 0xbd });
        gbc.writeMem(0xcdd7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6cb6);
        EXPECT(gbc.pc(), 0xcdd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb23f), 0xbd);
        EXPECT(gbc.readMem(0xcdd7), 0xae);
        // AE 0166
        gbc.setState(0x573, 0xd634, 0xa500, 0x3eaa, 0x32e0, 0x5da8, 0x0, 0x0);
        gbc.writeMem(0x573, { 0xae });
        gbc.writeMem(0x5da8, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd634);
        EXPECT(gbc.pc(), 0x574);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0167
        gbc.setState(0x24ab, 0x7b50, 0xb5e0, 0x8527, 0x1c59, 0xe03e, 0x1, 0x1);
        gbc.writeMem(0x24ab, { 0xae });
        gbc.writeMem(0xe03e, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7b50);
        EXPECT(gbc.pc(), 0x24ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe03e), 0x69);
        // AE 0168
        gbc.setState(0xe284, 0x266c, 0x4c70, 0xb490, 0xfb3, 0x8ece, 0x1, 0x0);
        gbc.writeMem(0x8ece, { 0x85 });
        gbc.writeMem(0xe284, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x266c);
        EXPECT(gbc.pc(), 0xe285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ece), 0x85);
        EXPECT(gbc.readMem(0xe284), 0xae);
        // AE 0169
        gbc.setState(0x39d7, 0x3522, 0x35f0, 0x670b, 0x5d3d, 0x440d, 0x1, 0x1);
        gbc.writeMem(0x39d7, { 0xae });
        gbc.writeMem(0x440d, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3522);
        EXPECT(gbc.pc(), 0x39d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 016A
        gbc.setState(0x30fb, 0xbfaa, 0x6440, 0xfc47, 0xce7b, 0xdcc2, 0x0, 0x1);
        gbc.writeMem(0x30fb, { 0xae });
        gbc.writeMem(0xdcc2, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbfaa);
        EXPECT(gbc.pc(), 0x30fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcc2), 0x4d);
        // AE 016B
        gbc.setState(0x9994, 0xeafa, 0xff50, 0x48e2, 0x205e, 0x822, 0x1, 0x0);
        gbc.writeMem(0x822, { 0x45 });
        gbc.writeMem(0x9994, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xeafa);
        EXPECT(gbc.pc(), 0x9995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9994), 0xae);
        // AE 016C
        gbc.setState(0x29a1, 0x6e4e, 0xfde0, 0x4eff, 0xe602, 0x3058, 0x0, 0x0);
        gbc.writeMem(0x29a1, { 0xae });
        gbc.writeMem(0x3058, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6e4e);
        EXPECT(gbc.pc(), 0x29a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 016D
        gbc.setState(0x81e9, 0xe343, 0x6d0, 0x6237, 0xfb12, 0x95ab, 0x1, 0x1);
        gbc.writeMem(0x81e9, { 0xae });
        gbc.writeMem(0x95ab, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe343);
        EXPECT(gbc.pc(), 0x81ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e9), 0xae);
        EXPECT(gbc.readMem(0x95ab), 0x28);
        // AE 016E
        gbc.setState(0xc736, 0x15fc, 0xe470, 0x79ea, 0x1145, 0xfa5f, 0x1, 0x0);
        gbc.writeMem(0xc736, { 0xae });
        gbc.writeMem(0xfa5f, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x15fc);
        EXPECT(gbc.pc(), 0xc737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc736), 0xae);
        EXPECT(gbc.readMem(0xfa5f), 0x4e);
        // AE 016F
        gbc.setState(0x9dbe, 0xf87a, 0x9340, 0x6b94, 0xc1f4, 0xd0b0, 0x1, 0x1);
        gbc.writeMem(0x9dbe, { 0xae });
        gbc.writeMem(0xd0b0, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf87a);
        EXPECT(gbc.pc(), 0x9dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dbe), 0xae);
        EXPECT(gbc.readMem(0xd0b0), 0x6d);
        // AE 0171
        gbc.setState(0x5fb1, 0xd9c, 0xe9c0, 0x5704, 0xe439, 0x1376, 0x0, 0x1);
        gbc.writeMem(0x1376, { 0x3 });
        gbc.writeMem(0x5fb1, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd9c);
        EXPECT(gbc.pc(), 0x5fb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0172
        gbc.setState(0x50d0, 0x1f30, 0x6a00, 0x984, 0xda10, 0x3341, 0x1, 0x0);
        gbc.writeMem(0x3341, { 0xbd });
        gbc.writeMem(0x50d0, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1f30);
        EXPECT(gbc.pc(), 0x50d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0173
        gbc.setState(0x4489, 0x3315, 0xa320, 0x39cc, 0x4282, 0xa18e, 0x0, 0x0);
        gbc.writeMem(0x4489, { 0xae });
        gbc.writeMem(0xa18e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3315);
        EXPECT(gbc.pc(), 0x448a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18e), 0x78);
        // AE 0174
        gbc.setState(0x3bb1, 0xbbb1, 0x9f40, 0x9271, 0xde41, 0xcd95, 0x1, 0x0);
        gbc.writeMem(0x3bb1, { 0xae });
        gbc.writeMem(0xcd95, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xbbb1);
        EXPECT(gbc.pc(), 0x3bb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd95), 0x58);
        // AE 0175
        gbc.setState(0xd9dc, 0xaaf6, 0x1830, 0x81a5, 0x5cfd, 0xd721, 0x1, 0x1);
        gbc.writeMem(0xd721, { 0x83 });
        gbc.writeMem(0xd9dc, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xaaf6);
        EXPECT(gbc.pc(), 0xd9dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd721), 0x83);
        EXPECT(gbc.readMem(0xd9dc), 0xae);
        // AE 0176
        gbc.setState(0xadf9, 0x94ae, 0x2be0, 0x792e, 0x586c, 0xcb2a, 0x0, 0x1);
        gbc.writeMem(0xadf9, { 0xae });
        gbc.writeMem(0xcb2a, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x94ae);
        EXPECT(gbc.pc(), 0xadfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadf9), 0xae);
        EXPECT(gbc.readMem(0xcb2a), 0xa7);
        // AE 0177
        gbc.setState(0x83ac, 0x396d, 0x2b00, 0xf99f, 0xc9a6, 0xd14b, 0x0, 0x0);
        gbc.writeMem(0x83ac, { 0xae });
        gbc.writeMem(0xd14b, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x396d);
        EXPECT(gbc.pc(), 0x83ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ac), 0xae);
        EXPECT(gbc.readMem(0xd14b), 0xdc);
        // AE 0178
        gbc.setState(0xd565, 0x1710, 0x7cf0, 0x80a9, 0x43f1, 0x247e, 0x0, 0x0);
        gbc.writeMem(0x247e, { 0xfb });
        gbc.writeMem(0xd565, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1710);
        EXPECT(gbc.pc(), 0xd566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd565), 0xae);
        // AE 017A
        gbc.setState(0x4d91, 0xd9, 0x7370, 0x4be1, 0x595f, 0x5787, 0x0, 0x1);
        gbc.writeMem(0x4d91, { 0xae });
        gbc.writeMem(0x5787, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd9);
        EXPECT(gbc.pc(), 0x4d92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 017B
        gbc.setState(0x11c0, 0xcc36, 0x79d0, 0x8280, 0xdc6a, 0xd5ab, 0x0, 0x0);
        gbc.writeMem(0x11c0, { 0xae });
        gbc.writeMem(0xd5ab, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcc36);
        EXPECT(gbc.pc(), 0x11c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ab), 0x83);
        // AE 017C
        gbc.setState(0x17a3, 0x4a73, 0xd060, 0x79c5, 0xa19, 0x5c08, 0x0, 0x1);
        gbc.writeMem(0x17a3, { 0xae });
        gbc.writeMem(0x5c08, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4a73);
        EXPECT(gbc.pc(), 0x17a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 017D
        gbc.setState(0x65b6, 0x9ca4, 0x5b90, 0x1d15, 0x95ad, 0x6174, 0x1, 0x1);
        gbc.writeMem(0x6174, { 0x2b });
        gbc.writeMem(0x65b6, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9ca4);
        EXPECT(gbc.pc(), 0x65b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 017E
        gbc.setState(0x5eda, 0x6fb, 0xf870, 0xe0de, 0x5061, 0x943d, 0x1, 0x0);
        gbc.writeMem(0x5eda, { 0xae });
        gbc.writeMem(0x943d, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6fb);
        EXPECT(gbc.pc(), 0x5edb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x943d), 0x26);
        // AE 017F
        gbc.setState(0x1297, 0x6c42, 0x7be0, 0xec34, 0xacd8, 0x55f6, 0x1, 0x0);
        gbc.writeMem(0x1297, { 0xae });
        gbc.writeMem(0x55f6, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6c42);
        EXPECT(gbc.pc(), 0x1298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0181
        gbc.setState(0x9a88, 0x6e9b, 0xdeb0, 0xe27f, 0x898, 0x1d72, 0x0, 0x0);
        gbc.writeMem(0x1d72, { 0x4a });
        gbc.writeMem(0x9a88, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6e9b);
        EXPECT(gbc.pc(), 0x9a89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a88), 0xae);
        // AE 0182
        gbc.setState(0x2250, 0x6cde, 0xd830, 0x3788, 0x293, 0xab6d, 0x0, 0x1);
        gbc.writeMem(0x2250, { 0xae });
        gbc.writeMem(0xab6d, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6cde);
        EXPECT(gbc.pc(), 0x2251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab6d), 0xea);
        // AE 0183
        gbc.setState(0x35a4, 0x482d, 0x3ae0, 0x65c7, 0xaf5, 0x1bad, 0x1, 0x1);
        gbc.writeMem(0x1bad, { 0x37 });
        gbc.writeMem(0x35a4, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x482d);
        EXPECT(gbc.pc(), 0x35a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0184
        gbc.setState(0x19b4, 0x524d, 0xbdc0, 0xc1a4, 0x58d9, 0xaa00, 0x1, 0x0);
        gbc.writeMem(0x19b4, { 0xae });
        gbc.writeMem(0xaa00, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x524d);
        EXPECT(gbc.pc(), 0x19b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa00), 0x50);
        // AE 0185
        gbc.setState(0x925e, 0xc03e, 0xacd0, 0x8926, 0x7caa, 0xb7c6, 0x1, 0x1);
        gbc.writeMem(0x925e, { 0xae });
        gbc.writeMem(0xb7c6, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc03e);
        EXPECT(gbc.pc(), 0x925f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x925e), 0xae);
        EXPECT(gbc.readMem(0xb7c6), 0xef);
        // AE 0186
        gbc.setState(0xddd7, 0x97cd, 0x14d0, 0x5d6a, 0xa075, 0xd1cc, 0x0, 0x1);
        gbc.writeMem(0xd1cc, { 0x3 });
        gbc.writeMem(0xddd7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x97cd);
        EXPECT(gbc.pc(), 0xddd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1cc), 0x3);
        EXPECT(gbc.readMem(0xddd7), 0xae);
        // AE 0187
        gbc.setState(0xcba, 0x1f, 0x94c0, 0xcb8a, 0xb78c, 0xe23, 0x1, 0x1);
        gbc.writeMem(0xcba, { 0xae });
        gbc.writeMem(0xe23, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1f);
        EXPECT(gbc.pc(), 0xcbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0188
        gbc.setState(0xae73, 0xcfd0, 0xc8f0, 0xee65, 0x25cd, 0x86be, 0x1, 0x0);
        gbc.writeMem(0x86be, { 0x2c });
        gbc.writeMem(0xae73, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xcfd0);
        EXPECT(gbc.pc(), 0xae74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86be), 0x2c);
        EXPECT(gbc.readMem(0xae73), 0xae);
        // AE 0189
        gbc.setState(0x527d, 0xee5a, 0x79b0, 0xc5d2, 0x48d6, 0xc099, 0x1, 0x1);
        gbc.writeMem(0x527d, { 0xae });
        gbc.writeMem(0xc099, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xee5a);
        EXPECT(gbc.pc(), 0x527e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc099), 0xae);
        // AE 018A
        gbc.setState(0x7251, 0xb3a7, 0x6e00, 0x68ce, 0x18a9, 0xcc32, 0x1, 0x0);
        gbc.writeMem(0x7251, { 0xae });
        gbc.writeMem(0xcc32, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb3a7);
        EXPECT(gbc.pc(), 0x7252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc32), 0xc2);
        // AE 018B
        gbc.setState(0x659d, 0x90f5, 0xc730, 0xfbc0, 0x61bd, 0x6605, 0x1, 0x1);
        gbc.writeMem(0x659d, { 0xae });
        gbc.writeMem(0x6605, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x90f5);
        EXPECT(gbc.pc(), 0x659e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 018C
        gbc.setState(0xabe0, 0x66d9, 0xb1e0, 0x96c5, 0xf8e9, 0x83ed, 0x0, 0x0);
        gbc.writeMem(0x83ed, { 0x18 });
        gbc.writeMem(0xabe0, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x66d9);
        EXPECT(gbc.pc(), 0xabe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ed), 0x18);
        EXPECT(gbc.readMem(0xabe0), 0xae);
        // AE 018D
        gbc.setState(0x660c, 0xff7e, 0xe2f0, 0x6e25, 0x445, 0x87f1, 0x0, 0x1);
        gbc.writeMem(0x660c, { 0xae });
        gbc.writeMem(0x87f1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xff7e);
        EXPECT(gbc.pc(), 0x660d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f1), 0x55);
        // AE 018E
        gbc.setState(0xa0ac, 0xcc4, 0x3d60, 0x6981, 0xdcf3, 0xc885, 0x0, 0x1);
        gbc.writeMem(0xa0ac, { 0xae });
        gbc.writeMem(0xc885, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xcc4);
        EXPECT(gbc.pc(), 0xa0ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ac), 0xae);
        EXPECT(gbc.readMem(0xc885), 0x5d);
        // AE 018F
        gbc.setState(0x494c, 0x7498, 0x8ed0, 0x7a08, 0xd8d3, 0x5b27, 0x1, 0x1);
        gbc.writeMem(0x494c, { 0xae });
        gbc.writeMem(0x5b27, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7498);
        EXPECT(gbc.pc(), 0x494d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0190
        gbc.setState(0x3da4, 0xa558, 0x41d0, 0x4213, 0x1d73, 0x50bd, 0x1, 0x0);
        gbc.writeMem(0x3da4, { 0xae });
        gbc.writeMem(0x50bd, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa558);
        EXPECT(gbc.pc(), 0x3da5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0191
        gbc.setState(0x557f, 0xe0b2, 0x9a60, 0x2e3a, 0xf13d, 0xfce0, 0x1, 0x1);
        gbc.writeMem(0x557f, { 0xae });
        gbc.writeMem(0xfce0, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe0b2);
        EXPECT(gbc.pc(), 0x5580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfce0), 0x14);
        // AE 0193
        gbc.setState(0xf08, 0x7927, 0xab30, 0xa3b7, 0x5ea6, 0x7184, 0x0, 0x0);
        gbc.writeMem(0xf08, { 0xae });
        gbc.writeMem(0x7184, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7927);
        EXPECT(gbc.pc(), 0xf09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0194
        gbc.setState(0x4c3, 0x3586, 0x4600, 0xa079, 0x4c81, 0xe807, 0x1, 0x1);
        gbc.writeMem(0x4c3, { 0xae });
        gbc.writeMem(0xe807, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3586);
        EXPECT(gbc.pc(), 0x4c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe807), 0x80);
        // AE 0195
        gbc.setState(0xad8b, 0x275c, 0xfba0, 0xd098, 0x493, 0x160b, 0x1, 0x0);
        gbc.writeMem(0x160b, { 0x5 });
        gbc.writeMem(0xad8b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x275c);
        EXPECT(gbc.pc(), 0xad8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad8b), 0xae);
        // AE 0196
        gbc.setState(0x4102, 0x901, 0x6de0, 0xb768, 0xa58f, 0x1a59, 0x0, 0x1);
        gbc.writeMem(0x1a59, { 0x26 });
        gbc.writeMem(0x4102, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x901);
        EXPECT(gbc.pc(), 0x4103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0197
        gbc.setState(0xe5d9, 0xb682, 0x22b0, 0x5822, 0x3ba5, 0x1b9b, 0x1, 0x0);
        gbc.writeMem(0x1b9b, { 0xc0 });
        gbc.writeMem(0xe5d9, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb682);
        EXPECT(gbc.pc(), 0xe5da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d9), 0xae);
        // AE 0198
        gbc.setState(0x148d, 0x9279, 0x8180, 0x5096, 0x2965, 0x73ec, 0x1, 0x0);
        gbc.writeMem(0x148d, { 0xae });
        gbc.writeMem(0x73ec, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9279);
        EXPECT(gbc.pc(), 0x148e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0199
        gbc.setState(0x2de5, 0xd598, 0xeb90, 0x877c, 0x7064, 0x30d, 0x0, 0x0);
        gbc.writeMem(0x30d, { 0x32 });
        gbc.writeMem(0x2de5, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd598);
        EXPECT(gbc.pc(), 0x2de6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 019A
        gbc.setState(0x49eb, 0xd880, 0xceb0, 0xa198, 0xb564, 0xa468, 0x0, 0x1);
        gbc.writeMem(0x49eb, { 0xae });
        gbc.writeMem(0xa468, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd880);
        EXPECT(gbc.pc(), 0x49ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa468), 0xf9);
        // AE 019B
        gbc.setState(0x5467, 0x6483, 0xcd70, 0xcc14, 0xb011, 0xf88d, 0x1, 0x0);
        gbc.writeMem(0x5467, { 0xae });
        gbc.writeMem(0xf88d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6483);
        EXPECT(gbc.pc(), 0x5468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf88d), 0x51);
        // AE 019C
        gbc.setState(0xd49d, 0x6b64, 0x1050, 0xd8a1, 0xd287, 0x16af, 0x0, 0x0);
        gbc.writeMem(0x16af, { 0xc5 });
        gbc.writeMem(0xd49d, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6b64);
        EXPECT(gbc.pc(), 0xd49e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd49d), 0xae);
        // AE 019D
        gbc.setState(0xae49, 0xb30d, 0x2670, 0x13cf, 0x8449, 0x6d, 0x0, 0x0);
        gbc.writeMem(0x6d, { 0x13 });
        gbc.writeMem(0xae49, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb30d);
        EXPECT(gbc.pc(), 0xae4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae49), 0xae);
        // AE 019E
        gbc.setState(0x8b36, 0x70ec, 0x85d0, 0xb9e4, 0xfe4, 0xc436, 0x1, 0x1);
        gbc.writeMem(0x8b36, { 0xae });
        gbc.writeMem(0xc436, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x70ec);
        EXPECT(gbc.pc(), 0x8b37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b36), 0xae);
        EXPECT(gbc.readMem(0xc436), 0x9e);
        // AE 019F
        gbc.setState(0xd941, 0x3b6c, 0x9040, 0xf6ed, 0xfaa3, 0x6e61, 0x1, 0x0);
        gbc.writeMem(0x6e61, { 0x1b });
        gbc.writeMem(0xd941, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3b6c);
        EXPECT(gbc.pc(), 0xd942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd941), 0xae);
        // AE 01A0
        gbc.setState(0xcbc5, 0xee7a, 0x8250, 0x446e, 0xdbda, 0xe5d6, 0x0, 0x0);
        gbc.writeMem(0xcbc5, { 0xae });
        gbc.writeMem(0xe5d6, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xee7a);
        EXPECT(gbc.pc(), 0xcbc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc5), 0xae);
        EXPECT(gbc.readMem(0xe5d6), 0x49);
        // AE 01A1
        gbc.setState(0x96a5, 0x6e15, 0x1c10, 0xf35e, 0x39ba, 0xacb4, 0x0, 0x0);
        gbc.writeMem(0x96a5, { 0xae });
        gbc.writeMem(0xacb4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6e15);
        EXPECT(gbc.pc(), 0x96a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a5), 0xae);
        EXPECT(gbc.readMem(0xacb4), 0x23);
        // AE 01A2
        gbc.setState(0x239b, 0xe519, 0x6d0, 0x910e, 0x6ba7, 0xad67, 0x1, 0x1);
        gbc.writeMem(0x239b, { 0xae });
        gbc.writeMem(0xad67, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe519);
        EXPECT(gbc.pc(), 0x239c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad67), 0x79);
        // AE 01A3
        gbc.setState(0xafe, 0xded2, 0xba40, 0x3cd3, 0xa134, 0x5da5, 0x1, 0x1);
        gbc.writeMem(0xafe, { 0xae });
        gbc.writeMem(0x5da5, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xded2);
        EXPECT(gbc.pc(), 0xaff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01A4
        gbc.setState(0x5003, 0xb44c, 0xe610, 0x5cc, 0x477a, 0x578f, 0x0, 0x1);
        gbc.writeMem(0x5003, { 0xae });
        gbc.writeMem(0x578f, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb44c);
        EXPECT(gbc.pc(), 0x5004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01A5
        gbc.setState(0x5e46, 0x3143, 0xb1e0, 0xb037, 0x5b0d, 0x4ad8, 0x1, 0x1);
        gbc.writeMem(0x4ad8, { 0x43 });
        gbc.writeMem(0x5e46, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3143);
        EXPECT(gbc.pc(), 0x5e47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01A6
        gbc.setState(0x9cf8, 0xb63b, 0xb460, 0xd1ef, 0x9ab7, 0x922a, 0x0, 0x0);
        gbc.writeMem(0x922a, { 0x92 });
        gbc.writeMem(0x9cf8, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb63b);
        EXPECT(gbc.pc(), 0x9cf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x922a), 0x92);
        EXPECT(gbc.readMem(0x9cf8), 0xae);
        // AE 01A7
        gbc.setState(0xb9ad, 0x74fa, 0xa1e0, 0xd997, 0x5cb0, 0xf3c0, 0x1, 0x0);
        gbc.writeMem(0xb9ad, { 0xae });
        gbc.writeMem(0xf3c0, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x74fa);
        EXPECT(gbc.pc(), 0xb9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9ad), 0xae);
        EXPECT(gbc.readMem(0xf3c0), 0x18);
        // AE 01A8
        gbc.setState(0x16ac, 0xa56d, 0xf630, 0xd92e, 0x60bc, 0x5def, 0x1, 0x0);
        gbc.writeMem(0x16ac, { 0xae });
        gbc.writeMem(0x5def, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa56d);
        EXPECT(gbc.pc(), 0x16ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01A9
        gbc.setState(0xea6f, 0xa05e, 0x8b0, 0x1aec, 0x56e6, 0xf48e, 0x0, 0x1);
        gbc.writeMem(0xea6f, { 0xae });
        gbc.writeMem(0xf48e, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa05e);
        EXPECT(gbc.pc(), 0xea70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea6f), 0xae);
        EXPECT(gbc.readMem(0xf48e), 0x27);
        // AE 01AA
        gbc.setState(0xa6cb, 0xfbc3, 0xc380, 0xed53, 0xc318, 0xeb36, 0x0, 0x0);
        gbc.writeMem(0xa6cb, { 0xae });
        gbc.writeMem(0xeb36, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xfbc3);
        EXPECT(gbc.pc(), 0xa6cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6cb), 0xae);
        EXPECT(gbc.readMem(0xeb36), 0x38);
        // AE 01AB
        gbc.setState(0x7595, 0xa9dc, 0xf220, 0x8f39, 0x2dd2, 0x63d8, 0x1, 0x0);
        gbc.writeMem(0x63d8, { 0x34 });
        gbc.writeMem(0x7595, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa9dc);
        EXPECT(gbc.pc(), 0x7596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01AC
        gbc.setState(0xb58a, 0xd547, 0xb360, 0xbb0e, 0xd915, 0x3cc, 0x1, 0x1);
        gbc.writeMem(0x3cc, { 0x8a });
        gbc.writeMem(0xb58a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd547);
        EXPECT(gbc.pc(), 0xb58b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb58a), 0xae);
        // AE 01AD
        gbc.setState(0xbe6b, 0x6816, 0xb7b0, 0x3edd, 0xdfdc, 0x55f7, 0x0, 0x1);
        gbc.writeMem(0x55f7, { 0xfd });
        gbc.writeMem(0xbe6b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6816);
        EXPECT(gbc.pc(), 0xbe6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe6b), 0xae);
        // AE 01AE
        gbc.setState(0x47f5, 0x84e0, 0x5cd0, 0x241a, 0xf663, 0x2ac8, 0x1, 0x1);
        gbc.writeMem(0x2ac8, { 0x80 });
        gbc.writeMem(0x47f5, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x84e0);
        EXPECT(gbc.pc(), 0x47f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01AF
        gbc.setState(0xbbcc, 0x463c, 0xbcb0, 0x49df, 0x1810, 0x8ae5, 0x1, 0x1);
        gbc.writeMem(0x8ae5, { 0x55 });
        gbc.writeMem(0xbbcc, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x463c);
        EXPECT(gbc.pc(), 0xbbcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ae5), 0x55);
        EXPECT(gbc.readMem(0xbbcc), 0xae);
        // AE 01B0
        gbc.setState(0x9612, 0xe0c3, 0x630, 0xc59c, 0x1497, 0xbc59, 0x1, 0x0);
        gbc.writeMem(0x9612, { 0xae });
        gbc.writeMem(0xbc59, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe0c3);
        EXPECT(gbc.pc(), 0x9613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9612), 0xae);
        EXPECT(gbc.readMem(0xbc59), 0x8c);
        // AE 01B1
        gbc.setState(0xd3cc, 0x183d, 0xb170, 0xd3b4, 0xaa85, 0x75a6, 0x1, 0x0);
        gbc.writeMem(0x75a6, { 0x1d });
        gbc.writeMem(0xd3cc, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x183d);
        EXPECT(gbc.pc(), 0xd3cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3cc), 0xae);
        // AE 01B2
        gbc.setState(0x7ced, 0x776a, 0xdf80, 0xd7d8, 0x6198, 0x1000, 0x1, 0x0);
        gbc.writeMem(0x1000, { 0xfe });
        gbc.writeMem(0x7ced, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x776a);
        EXPECT(gbc.pc(), 0x7cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01B3
        gbc.setState(0x911e, 0xb8f2, 0xb220, 0x232e, 0xab88, 0xdb87, 0x0, 0x0);
        gbc.writeMem(0x911e, { 0xae });
        gbc.writeMem(0xdb87, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb8f2);
        EXPECT(gbc.pc(), 0x911f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x911e), 0xae);
        EXPECT(gbc.readMem(0xdb87), 0x3e);
        // AE 01B4
        gbc.setState(0x8f61, 0x6ea, 0xd150, 0xb213, 0xe0b7, 0x26fc, 0x0, 0x0);
        gbc.writeMem(0x26fc, { 0x45 });
        gbc.writeMem(0x8f61, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6ea);
        EXPECT(gbc.pc(), 0x8f62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f61), 0xae);
        // AE 01B5
        gbc.setState(0xdd18, 0x7cbd, 0xae0, 0xfd2, 0x869, 0xb0c8, 0x1, 0x1);
        gbc.writeMem(0xb0c8, { 0x43 });
        gbc.writeMem(0xdd18, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7cbd);
        EXPECT(gbc.pc(), 0xdd19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0c8), 0x43);
        EXPECT(gbc.readMem(0xdd18), 0xae);
        // AE 01B6
        gbc.setState(0x7587, 0x7d43, 0xd3c0, 0xa740, 0xef13, 0x5f79, 0x1, 0x1);
        gbc.writeMem(0x5f79, { 0x7 });
        gbc.writeMem(0x7587, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7d43);
        EXPECT(gbc.pc(), 0x7588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01B7
        gbc.setState(0x7456, 0x3aeb, 0x58e0, 0x38f3, 0xa490, 0x2fd6, 0x0, 0x1);
        gbc.writeMem(0x2fd6, { 0x38 });
        gbc.writeMem(0x7456, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3aeb);
        EXPECT(gbc.pc(), 0x7457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01B8
        gbc.setState(0x7e74, 0x38dc, 0x9ad0, 0xc5e4, 0x4018, 0x4c0d, 0x1, 0x0);
        gbc.writeMem(0x4c0d, { 0x9c });
        gbc.writeMem(0x7e74, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x38dc);
        EXPECT(gbc.pc(), 0x7e75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01B9
        gbc.setState(0xa641, 0x4677, 0x1110, 0x5035, 0xaa23, 0x5aff, 0x0, 0x1);
        gbc.writeMem(0x5aff, { 0x28 });
        gbc.writeMem(0xa641, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4677);
        EXPECT(gbc.pc(), 0xa642);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa641), 0xae);
        // AE 01BA
        gbc.setState(0x34ee, 0x3589, 0xea70, 0xecc4, 0xdf94, 0xbdfd, 0x1, 0x0);
        gbc.writeMem(0x34ee, { 0xae });
        gbc.writeMem(0xbdfd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3589);
        EXPECT(gbc.pc(), 0x34ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdfd), 0x10);
        // AE 01BB
        gbc.setState(0x1b79, 0x8206, 0xd2d0, 0xa7d1, 0x88ea, 0xe4f7, 0x0, 0x1);
        gbc.writeMem(0x1b79, { 0xae });
        gbc.writeMem(0xe4f7, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8206);
        EXPECT(gbc.pc(), 0x1b7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4f7), 0x3f);
        // AE 01BC
        gbc.setState(0x6de6, 0x5395, 0x7b00, 0x7bf, 0x6b66, 0x20b3, 0x0, 0x1);
        gbc.writeMem(0x20b3, { 0xa7 });
        gbc.writeMem(0x6de6, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5395);
        EXPECT(gbc.pc(), 0x6de7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01BD
        gbc.setState(0x33a8, 0x8412, 0xb5d0, 0xedba, 0xa1b2, 0xf47a, 0x0, 0x0);
        gbc.writeMem(0x33a8, { 0xae });
        gbc.writeMem(0xf47a, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8412);
        EXPECT(gbc.pc(), 0x33a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf47a), 0x19);
        // AE 01BE
        gbc.setState(0xba5a, 0x51c7, 0x4f10, 0xf373, 0x460, 0x5c1c, 0x1, 0x1);
        gbc.writeMem(0x5c1c, { 0xaf });
        gbc.writeMem(0xba5a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x51c7);
        EXPECT(gbc.pc(), 0xba5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba5a), 0xae);
        // AE 01BF
        gbc.setState(0xa13a, 0x3489, 0x83c0, 0x63d5, 0xc1a9, 0x83e8, 0x0, 0x0);
        gbc.writeMem(0x83e8, { 0xd2 });
        gbc.writeMem(0xa13a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3489);
        EXPECT(gbc.pc(), 0xa13b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e8), 0xd2);
        EXPECT(gbc.readMem(0xa13a), 0xae);
        // AE 01C0
        gbc.setState(0xfb6, 0xb001, 0x3340, 0xe004, 0xf443, 0xe24e, 0x1, 0x0);
        gbc.writeMem(0xfb6, { 0xae });
        gbc.writeMem(0xe24e, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb001);
        EXPECT(gbc.pc(), 0xfb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe24e), 0xc8);
        // AE 01C1
        gbc.setState(0xd910, 0x11f1, 0xe600, 0x2f6, 0xc668, 0x8de9, 0x0, 0x0);
        gbc.writeMem(0x8de9, { 0x19 });
        gbc.writeMem(0xd910, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x11f1);
        EXPECT(gbc.pc(), 0xd911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8de9), 0x19);
        EXPECT(gbc.readMem(0xd910), 0xae);
        // AE 01C2
        gbc.setState(0x7dbc, 0x47fc, 0x4130, 0x6a21, 0x2fa1, 0x46f1, 0x1, 0x0);
        gbc.writeMem(0x46f1, { 0xa5 });
        gbc.writeMem(0x7dbc, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x47fc);
        EXPECT(gbc.pc(), 0x7dbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01C3
        gbc.setState(0xe8c7, 0x3639, 0xfc40, 0x4df8, 0xaa77, 0x14b5, 0x1, 0x0);
        gbc.writeMem(0x14b5, { 0x2 });
        gbc.writeMem(0xe8c7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3639);
        EXPECT(gbc.pc(), 0xe8c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c7), 0xae);
        // AE 01C4
        gbc.setState(0xd7ad, 0x209d, 0xfb30, 0x966a, 0x948c, 0xdcb5, 0x0, 0x1);
        gbc.writeMem(0xd7ad, { 0xae });
        gbc.writeMem(0xdcb5, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x209d);
        EXPECT(gbc.pc(), 0xd7ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ad), 0xae);
        EXPECT(gbc.readMem(0xdcb5), 0x1b);
        // AE 01C5
        gbc.setState(0x87bd, 0x9a30, 0xf3c0, 0x7a00, 0x7a52, 0xf9ff, 0x1, 0x0);
        gbc.writeMem(0x87bd, { 0xae });
        gbc.writeMem(0xf9ff, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9a30);
        EXPECT(gbc.pc(), 0x87be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87bd), 0xae);
        EXPECT(gbc.readMem(0xf9ff), 0x6a);
        // AE 01C6
        gbc.setState(0xd4d8, 0xf470, 0x1eb0, 0x3604, 0xe924, 0x98cf, 0x1, 0x1);
        gbc.writeMem(0x98cf, { 0x8b });
        gbc.writeMem(0xd4d8, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf470);
        EXPECT(gbc.pc(), 0xd4d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98cf), 0x8b);
        EXPECT(gbc.readMem(0xd4d8), 0xae);
        // AE 01C7
        gbc.setState(0xb685, 0xa21b, 0x8470, 0xcc99, 0xf954, 0x24e5, 0x1, 0x0);
        gbc.writeMem(0x24e5, { 0xb2 });
        gbc.writeMem(0xb685, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa21b);
        EXPECT(gbc.pc(), 0xb686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb685), 0xae);
        // AE 01C8
        gbc.setState(0xbcff, 0xc8db, 0xe160, 0x9067, 0x16b4, 0x2c42, 0x1, 0x1);
        gbc.writeMem(0x2c42, { 0x8a });
        gbc.writeMem(0xbcff, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc8db);
        EXPECT(gbc.pc(), 0xbd00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcff), 0xae);
        // AE 01C9
        gbc.setState(0x45a6, 0xc838, 0x94a0, 0x4977, 0x11e, 0xabf5, 0x1, 0x0);
        gbc.writeMem(0x45a6, { 0xae });
        gbc.writeMem(0xabf5, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc838);
        EXPECT(gbc.pc(), 0x45a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf5), 0x14);
        // AE 01CB
        gbc.setState(0x3bd1, 0x522e, 0x4960, 0x9150, 0x6386, 0x695a, 0x1, 0x1);
        gbc.writeMem(0x3bd1, { 0xae });
        gbc.writeMem(0x695a, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x522e);
        EXPECT(gbc.pc(), 0x3bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01CC
        gbc.setState(0x6f26, 0x6336, 0xc4f0, 0x4f7a, 0x91aa, 0xef13, 0x1, 0x1);
        gbc.writeMem(0x6f26, { 0xae });
        gbc.writeMem(0xef13, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6336);
        EXPECT(gbc.pc(), 0x6f27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef13), 0x9a);
        // AE 01CD
        gbc.setState(0x7104, 0x7466, 0xb50, 0x27a4, 0xfc57, 0x135a, 0x1, 0x1);
        gbc.writeMem(0x135a, { 0x81 });
        gbc.writeMem(0x7104, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7466);
        EXPECT(gbc.pc(), 0x7105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01CE
        gbc.setState(0x5171, 0x4cc, 0x74b0, 0xd1c4, 0xbdbb, 0x5e93, 0x1, 0x0);
        gbc.writeMem(0x5171, { 0xae });
        gbc.writeMem(0x5e93, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4cc);
        EXPECT(gbc.pc(), 0x5172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01CF
        gbc.setState(0xb9a, 0x1b9b, 0x8bd0, 0xf835, 0x59bb, 0x70b4, 0x0, 0x0);
        gbc.writeMem(0xb9a, { 0xae });
        gbc.writeMem(0x70b4, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1b9b);
        EXPECT(gbc.pc(), 0xb9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01D0
        gbc.setState(0xce34, 0xb8d4, 0x7820, 0x74dd, 0x8f9a, 0xf30f, 0x0, 0x1);
        gbc.writeMem(0xce34, { 0xae });
        gbc.writeMem(0xf30f, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb8d4);
        EXPECT(gbc.pc(), 0xce35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce34), 0xae);
        EXPECT(gbc.readMem(0xf30f), 0xb0);
        // AE 01D1
        gbc.setState(0xe709, 0x8797, 0xd420, 0xf056, 0xeb72, 0x8ca0, 0x0, 0x1);
        gbc.writeMem(0x8ca0, { 0xe0 });
        gbc.writeMem(0xe709, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8797);
        EXPECT(gbc.pc(), 0xe70a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca0), 0xe0);
        EXPECT(gbc.readMem(0xe709), 0xae);
        // AE 01D2
        gbc.setState(0xc080, 0x7651, 0xcc10, 0xd2f7, 0x32e5, 0x8390, 0x1, 0x0);
        gbc.writeMem(0x8390, { 0xbd });
        gbc.writeMem(0xc080, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7651);
        EXPECT(gbc.pc(), 0xc081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8390), 0xbd);
        EXPECT(gbc.readMem(0xc080), 0xae);
        // AE 01D3
        gbc.setState(0xc4ee, 0x72ab, 0x8420, 0x3880, 0xf8a8, 0x3d7b, 0x1, 0x1);
        gbc.writeMem(0x3d7b, { 0xf9 });
        gbc.writeMem(0xc4ee, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x72ab);
        EXPECT(gbc.pc(), 0xc4ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ee), 0xae);
        // AE 01D4
        gbc.setState(0x865e, 0xfb95, 0xe9d0, 0x6254, 0xa0e8, 0x89db, 0x0, 0x1);
        gbc.writeMem(0x865e, { 0xae });
        gbc.writeMem(0x89db, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xfb95);
        EXPECT(gbc.pc(), 0x865f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x865e), 0xae);
        EXPECT(gbc.readMem(0x89db), 0xc7);
        // AE 01D6
        gbc.setState(0x145, 0x6bc7, 0x4f40, 0x2b33, 0x37e3, 0xee0e, 0x1, 0x0);
        gbc.writeMem(0x145, { 0xae });
        gbc.writeMem(0xee0e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6bc7);
        EXPECT(gbc.pc(), 0x146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee0e), 0x2a);
        // AE 01D7
        gbc.setState(0x7ffd, 0xb0ef, 0xf0b0, 0xbf7, 0x65be, 0x629c, 0x0, 0x1);
        gbc.writeMem(0x629c, { 0xc5 });
        gbc.writeMem(0x7ffd, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb0ef);
        EXPECT(gbc.pc(), 0x7ffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01D8
        gbc.setState(0x6e43, 0xdcc5, 0xada0, 0x8464, 0x14f1, 0x25d5, 0x0, 0x0);
        gbc.writeMem(0x25d5, { 0x8a });
        gbc.writeMem(0x6e43, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdcc5);
        EXPECT(gbc.pc(), 0x6e44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01D9
        gbc.setState(0xd599, 0x5745, 0xedb0, 0x3153, 0x63e7, 0x1cf6, 0x0, 0x0);
        gbc.writeMem(0x1cf6, { 0xd3 });
        gbc.writeMem(0xd599, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5745);
        EXPECT(gbc.pc(), 0xd59a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd599), 0xae);
        // AE 01DA
        gbc.setState(0xedbb, 0x9da3, 0x9900, 0x9887, 0xdcff, 0xbc14, 0x0, 0x1);
        gbc.writeMem(0xbc14, { 0x54 });
        gbc.writeMem(0xedbb, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9da3);
        EXPECT(gbc.pc(), 0xedbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc14), 0x54);
        EXPECT(gbc.readMem(0xedbb), 0xae);
        // AE 01DB
        gbc.setState(0xeeab, 0x973c, 0xe10, 0xcedd, 0x60ce, 0x80a0, 0x0, 0x0);
        gbc.writeMem(0x80a0, { 0xec });
        gbc.writeMem(0xeeab, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x973c);
        EXPECT(gbc.pc(), 0xeeac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80a0), 0xec);
        EXPECT(gbc.readMem(0xeeab), 0xae);
        // AE 01DC
        gbc.setState(0xf52, 0xdd3e, 0x5160, 0x7c15, 0xc493, 0xd556, 0x0, 0x0);
        gbc.writeMem(0xf52, { 0xae });
        gbc.writeMem(0xd556, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xdd3e);
        EXPECT(gbc.pc(), 0xf53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd556), 0x7);
        // AE 01DD
        gbc.setState(0xbba9, 0x2995, 0xd9e0, 0x473, 0x44e4, 0x63b5, 0x1, 0x0);
        gbc.writeMem(0x63b5, { 0x94 });
        gbc.writeMem(0xbba9, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2995);
        EXPECT(gbc.pc(), 0xbbaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba9), 0xae);
        // AE 01DE
        gbc.setState(0xe785, 0x39b9, 0xec60, 0x2f18, 0x9f4a, 0x63a1, 0x0, 0x1);
        gbc.writeMem(0x63a1, { 0x66 });
        gbc.writeMem(0xe785, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x39b9);
        EXPECT(gbc.pc(), 0xe786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe785), 0xae);
        // AE 01DF
        gbc.setState(0xd1ea, 0xe6ac, 0x6820, 0xcf98, 0xbae, 0x44c8, 0x0, 0x1);
        gbc.writeMem(0x44c8, { 0x76 });
        gbc.writeMem(0xd1ea, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe6ac);
        EXPECT(gbc.pc(), 0xd1eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ea), 0xae);
        // AE 01E0
        gbc.setState(0x1e1c, 0x885e, 0x5150, 0xa0f8, 0x26ca, 0x8d55, 0x0, 0x0);
        gbc.writeMem(0x1e1c, { 0xae });
        gbc.writeMem(0x8d55, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x885e);
        EXPECT(gbc.pc(), 0x1e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d55), 0x2b);
        // AE 01E1
        gbc.setState(0xd556, 0x868c, 0x4fb0, 0xd218, 0xd488, 0x4b25, 0x0, 0x1);
        gbc.writeMem(0x4b25, { 0x9c });
        gbc.writeMem(0xd556, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x868c);
        EXPECT(gbc.pc(), 0xd557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd556), 0xae);
        // AE 01E2
        gbc.setState(0x1a4f, 0x5705, 0x2b10, 0x8246, 0xd582, 0xf8d2, 0x0, 0x0);
        gbc.writeMem(0x1a4f, { 0xae });
        gbc.writeMem(0xf8d2, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5705);
        EXPECT(gbc.pc(), 0x1a50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8d2), 0xf);
        // AE 01E3
        gbc.setState(0x9d8e, 0x5d57, 0x8760, 0xd070, 0x2532, 0xd326, 0x0, 0x0);
        gbc.writeMem(0x9d8e, { 0xae });
        gbc.writeMem(0xd326, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5d57);
        EXPECT(gbc.pc(), 0x9d8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d8e), 0xae);
        EXPECT(gbc.readMem(0xd326), 0xad);
        // AE 01E4
        gbc.setState(0xc8df, 0xee5b, 0xf510, 0x5a72, 0x47a0, 0x73da, 0x1, 0x1);
        gbc.writeMem(0x73da, { 0x84 });
        gbc.writeMem(0xc8df, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xee5b);
        EXPECT(gbc.pc(), 0xc8e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8df), 0xae);
        // AE 01E5
        gbc.setState(0x9f84, 0xdc2e, 0xbac0, 0xd175, 0xea81, 0x3303, 0x0, 0x1);
        gbc.writeMem(0x3303, { 0x93 });
        gbc.writeMem(0x9f84, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdc2e);
        EXPECT(gbc.pc(), 0x9f85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f84), 0xae);
        // AE 01E6
        gbc.setState(0x83d4, 0x157a, 0xa970, 0x186e, 0x9c1d, 0x61e0, 0x0, 0x0);
        gbc.writeMem(0x61e0, { 0x6a });
        gbc.writeMem(0x83d4, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x157a);
        EXPECT(gbc.pc(), 0x83d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83d4), 0xae);
        // AE 01E7
        gbc.setState(0x2a70, 0x88b9, 0x9100, 0xb6ee, 0x1bd5, 0x254e, 0x1, 0x1);
        gbc.writeMem(0x254e, { 0xbd });
        gbc.writeMem(0x2a70, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x88b9);
        EXPECT(gbc.pc(), 0x2a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01E8
        gbc.setState(0x7b88, 0xd721, 0x9170, 0x4d11, 0x1739, 0xd0fb, 0x1, 0x0);
        gbc.writeMem(0x7b88, { 0xae });
        gbc.writeMem(0xd0fb, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd721);
        EXPECT(gbc.pc(), 0x7b89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0fb), 0x45);
        // AE 01E9
        gbc.setState(0x836e, 0xeff1, 0xd0d0, 0xb419, 0xaf1e, 0xaca0, 0x1, 0x0);
        gbc.writeMem(0x836e, { 0xae });
        gbc.writeMem(0xaca0, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xeff1);
        EXPECT(gbc.pc(), 0x836f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x836e), 0xae);
        EXPECT(gbc.readMem(0xaca0), 0xe6);
        // AE 01EA
        gbc.setState(0xcde7, 0x9ddd, 0xefe0, 0x3abb, 0x1880, 0xae9c, 0x0, 0x1);
        gbc.writeMem(0xae9c, { 0x2 });
        gbc.writeMem(0xcde7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9ddd);
        EXPECT(gbc.pc(), 0xcde8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae9c), 0x2);
        EXPECT(gbc.readMem(0xcde7), 0xae);
        // AE 01EB
        gbc.setState(0x4373, 0x9281, 0x8520, 0xd929, 0xce11, 0xeda4, 0x1, 0x1);
        gbc.writeMem(0x4373, { 0xae });
        gbc.writeMem(0xeda4, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9281);
        EXPECT(gbc.pc(), 0x4374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda4), 0x6f);
        // AE 01EC
        gbc.setState(0xae60, 0x47e0, 0xe180, 0x8d4d, 0x2b85, 0xf04f, 0x1, 0x0);
        gbc.writeMem(0xae60, { 0xae });
        gbc.writeMem(0xf04f, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x47e0);
        EXPECT(gbc.pc(), 0xae61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae60), 0xae);
        EXPECT(gbc.readMem(0xf04f), 0x5f);
        // AE 01ED
        gbc.setState(0xc60c, 0xa476, 0xed10, 0x3cfc, 0x4967, 0xdfe9, 0x1, 0x1);
        gbc.writeMem(0xc60c, { 0xae });
        gbc.writeMem(0xdfe9, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa476);
        EXPECT(gbc.pc(), 0xc60d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc60c), 0xae);
        EXPECT(gbc.readMem(0xdfe9), 0x1f);
        // AE 01EE
        gbc.setState(0x720e, 0x1c28, 0xefc0, 0xcc32, 0x999a, 0x4905, 0x0, 0x1);
        gbc.writeMem(0x4905, { 0xfc });
        gbc.writeMem(0x720e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1c28);
        EXPECT(gbc.pc(), 0x720f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01EF
        gbc.setState(0x3965, 0x8369, 0x1970, 0xc373, 0x79a, 0xc854, 0x0, 0x0);
        gbc.writeMem(0x3965, { 0xae });
        gbc.writeMem(0xc854, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8369);
        EXPECT(gbc.pc(), 0x3966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc854), 0xad);
        // AE 01F0
        gbc.setState(0x889e, 0x1b36, 0x3020, 0x9695, 0xdd65, 0x248a, 0x1, 0x1);
        gbc.writeMem(0x248a, { 0xa1 });
        gbc.writeMem(0x889e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1b36);
        EXPECT(gbc.pc(), 0x889f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x889e), 0xae);
        // AE 01F2
        gbc.setState(0x900b, 0x3d13, 0xb330, 0x6f61, 0xe5ab, 0xc1fb, 0x1, 0x0);
        gbc.writeMem(0x900b, { 0xae });
        gbc.writeMem(0xc1fb, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3d13);
        EXPECT(gbc.pc(), 0x900c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x900b), 0xae);
        EXPECT(gbc.readMem(0xc1fb), 0x4);
        // AE 01F3
        gbc.setState(0x7ff7, 0x456f, 0x3c30, 0x2915, 0x1652, 0x46d2, 0x1, 0x0);
        gbc.writeMem(0x46d2, { 0xd });
        gbc.writeMem(0x7ff7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x456f);
        EXPECT(gbc.pc(), 0x7ff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01F4
        gbc.setState(0x3165, 0xd892, 0xa680, 0x73fe, 0x6710, 0xe0a9, 0x0, 0x0);
        gbc.writeMem(0x3165, { 0xae });
        gbc.writeMem(0xe0a9, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd892);
        EXPECT(gbc.pc(), 0x3166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a9), 0x74);
        // AE 01F5
        gbc.setState(0x148b, 0x4fab, 0x4260, 0xace, 0x1a7b, 0xdff9, 0x0, 0x0);
        gbc.writeMem(0x148b, { 0xae });
        gbc.writeMem(0xdff9, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4fab);
        EXPECT(gbc.pc(), 0x148c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdff9), 0x13);
        // AE 01F6
        gbc.setState(0xddee, 0xecf6, 0xc980, 0x513e, 0xe142, 0x3bc6, 0x0, 0x0);
        gbc.writeMem(0x3bc6, { 0x34 });
        gbc.writeMem(0xddee, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xecf6);
        EXPECT(gbc.pc(), 0xddef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddee), 0xae);
        // AE 01F7
        gbc.setState(0x1ca7, 0xbc43, 0x5b20, 0xe0a4, 0xdf1d, 0xf91, 0x0, 0x1);
        gbc.writeMem(0xf91, { 0x7a });
        gbc.writeMem(0x1ca7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbc43);
        EXPECT(gbc.pc(), 0x1ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01F8
        gbc.setState(0x5e2e, 0x828a, 0xef0, 0x2db3, 0x23c0, 0xd155, 0x0, 0x1);
        gbc.writeMem(0x5e2e, { 0xae });
        gbc.writeMem(0xd155, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x828a);
        EXPECT(gbc.pc(), 0x5e2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd155), 0x3b);
        // AE 01F9
        gbc.setState(0xe236, 0xf0ee, 0xa20, 0xac1, 0x1ce6, 0x52d2, 0x1, 0x0);
        gbc.writeMem(0x52d2, { 0x4d });
        gbc.writeMem(0xe236, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xf0ee);
        EXPECT(gbc.pc(), 0xe237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe236), 0xae);
        // AE 01FA
        gbc.setState(0xebc1, 0xf280, 0x2780, 0x58b4, 0x8ba, 0xafaa, 0x0, 0x0);
        gbc.writeMem(0xafaa, { 0xa2 });
        gbc.writeMem(0xebc1, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf280);
        EXPECT(gbc.pc(), 0xebc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafaa), 0xa2);
        EXPECT(gbc.readMem(0xebc1), 0xae);
        // AE 01FB
        gbc.setState(0x5c39, 0x9d1e, 0x3f60, 0x6758, 0x53f5, 0x2f82, 0x0, 0x0);
        gbc.writeMem(0x2f82, { 0x35 });
        gbc.writeMem(0x5c39, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9d1e);
        EXPECT(gbc.pc(), 0x5c3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 01FC
        gbc.setState(0x384a, 0x3851, 0x7820, 0xfc0f, 0xb562, 0xf026, 0x0, 0x1);
        gbc.writeMem(0x384a, { 0xae });
        gbc.writeMem(0xf026, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3851);
        EXPECT(gbc.pc(), 0x384b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf026), 0xea);
        // AE 01FD
        gbc.setState(0xbc3c, 0x22e, 0x1a60, 0xb0c1, 0x7dd9, 0xae6a, 0x0, 0x1);
        gbc.writeMem(0xae6a, { 0xb4 });
        gbc.writeMem(0xbc3c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x22e);
        EXPECT(gbc.pc(), 0xbc3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae6a), 0xb4);
        EXPECT(gbc.readMem(0xbc3c), 0xae);
        // AE 01FE
        gbc.setState(0x56e3, 0xb2db, 0x2000, 0xc544, 0x86cb, 0xeab1, 0x1, 0x0);
        gbc.writeMem(0x56e3, { 0xae });
        gbc.writeMem(0xeab1, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb2db);
        EXPECT(gbc.pc(), 0x56e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeab1), 0xd1);
        // AE 01FF
        gbc.setState(0x4fde, 0x9591, 0xa260, 0xd30f, 0xe373, 0xfb41, 0x0, 0x1);
        gbc.writeMem(0x4fde, { 0xae });
        gbc.writeMem(0xfb41, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9591);
        EXPECT(gbc.pc(), 0x4fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb41), 0x14);
        // AE 0200
        gbc.setState(0x5928, 0xfd15, 0x51a0, 0x94be, 0x2794, 0x5e60, 0x1, 0x0);
        gbc.writeMem(0x5928, { 0xae });
        gbc.writeMem(0x5e60, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfd15);
        EXPECT(gbc.pc(), 0x5929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0201
        gbc.setState(0xd676, 0x6a95, 0xb510, 0x3470, 0x6a34, 0xa938, 0x0, 0x0);
        gbc.writeMem(0xa938, { 0x6a });
        gbc.writeMem(0xd676, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6a95);
        EXPECT(gbc.pc(), 0xd677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa938), 0x6a);
        EXPECT(gbc.readMem(0xd676), 0xae);
        // AE 0203
        gbc.setState(0xb7cf, 0x762f, 0x1100, 0xc669, 0x50da, 0x9733, 0x1, 0x0);
        gbc.writeMem(0x9733, { 0x3c });
        gbc.writeMem(0xb7cf, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x762f);
        EXPECT(gbc.pc(), 0xb7d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9733), 0x3c);
        EXPECT(gbc.readMem(0xb7cf), 0xae);
        // AE 0204
        gbc.setState(0xda0c, 0x4d74, 0x410, 0xb237, 0x41e7, 0xdf24, 0x0, 0x1);
        gbc.writeMem(0xda0c, { 0xae });
        gbc.writeMem(0xdf24, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4d74);
        EXPECT(gbc.pc(), 0xda0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda0c), 0xae);
        EXPECT(gbc.readMem(0xdf24), 0xca);
        // AE 0205
        gbc.setState(0x2286, 0xe256, 0xf2b0, 0xcdde, 0x5cac, 0x900b, 0x1, 0x0);
        gbc.writeMem(0x2286, { 0xae });
        gbc.writeMem(0x900b, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe256);
        EXPECT(gbc.pc(), 0x2287);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x900b), 0xf4);
        // AE 0206
        gbc.setState(0x2e0, 0x1f3b, 0xbc20, 0x81f4, 0x619c, 0xc90, 0x1, 0x1);
        gbc.writeMem(0x2e0, { 0xae });
        gbc.writeMem(0xc90, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1f3b);
        EXPECT(gbc.pc(), 0x2e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0207
        gbc.setState(0xc8e5, 0x7f56, 0x8b70, 0x4ed5, 0x6aef, 0x91c8, 0x0, 0x1);
        gbc.writeMem(0x91c8, { 0x9 });
        gbc.writeMem(0xc8e5, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7f56);
        EXPECT(gbc.pc(), 0xc8e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c8), 0x9);
        EXPECT(gbc.readMem(0xc8e5), 0xae);
        // AE 0208
        gbc.setState(0x575a, 0xe57a, 0x1940, 0x85cd, 0x4b97, 0x662d, 0x0, 0x1);
        gbc.writeMem(0x575a, { 0xae });
        gbc.writeMem(0x662d, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe57a);
        EXPECT(gbc.pc(), 0x575b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0209
        gbc.setState(0xc31f, 0xcdbc, 0xff20, 0x4d4d, 0xef1d, 0xfda, 0x1, 0x1);
        gbc.writeMem(0xfda, { 0xf8 });
        gbc.writeMem(0xc31f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xcdbc);
        EXPECT(gbc.pc(), 0xc320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc31f), 0xae);
        // AE 020A
        gbc.setState(0xb5c, 0xb230, 0xb4d0, 0x6576, 0xf873, 0x516, 0x1, 0x1);
        gbc.writeMem(0x516, { 0xb5 });
        gbc.writeMem(0xb5c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb230);
        EXPECT(gbc.pc(), 0xb5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 020B
        gbc.setState(0x6dbd, 0xdf7a, 0xe610, 0x6d8a, 0x9dbc, 0x2b85, 0x0, 0x1);
        gbc.writeMem(0x2b85, { 0x43 });
        gbc.writeMem(0x6dbd, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xdf7a);
        EXPECT(gbc.pc(), 0x6dbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 020C
        gbc.setState(0x2922, 0x2aa1, 0x3560, 0x12a2, 0x197e, 0x8dc4, 0x1, 0x1);
        gbc.writeMem(0x2922, { 0xae });
        gbc.writeMem(0x8dc4, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2aa1);
        EXPECT(gbc.pc(), 0x2923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc4), 0x35);
        // AE 020D
        gbc.setState(0x7485, 0xe446, 0x5770, 0x63cb, 0xa64f, 0x382f, 0x1, 0x0);
        gbc.writeMem(0x382f, { 0x72 });
        gbc.writeMem(0x7485, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe446);
        EXPECT(gbc.pc(), 0x7486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 020E
        gbc.setState(0xd5af, 0x97b6, 0x2e80, 0xd2fb, 0xec42, 0xcae6, 0x0, 0x0);
        gbc.writeMem(0xcae6, { 0xd3 });
        gbc.writeMem(0xd5af, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x97b6);
        EXPECT(gbc.pc(), 0xd5b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae6), 0xd3);
        EXPECT(gbc.readMem(0xd5af), 0xae);
        // AE 020F
        gbc.setState(0x8f62, 0xba93, 0x600, 0xa3b0, 0xbc25, 0x4457, 0x0, 0x0);
        gbc.writeMem(0x4457, { 0x1f });
        gbc.writeMem(0x8f62, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xba93);
        EXPECT(gbc.pc(), 0x8f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f62), 0xae);
        // AE 0210
        gbc.setState(0x5f7f, 0x93ff, 0xcc10, 0x8c6d, 0xf522, 0x39ba, 0x1, 0x1);
        gbc.writeMem(0x39ba, { 0x47 });
        gbc.writeMem(0x5f7f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x93ff);
        EXPECT(gbc.pc(), 0x5f80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0211
        gbc.setState(0x8076, 0xcf82, 0x5ee0, 0xf612, 0x60b5, 0x1f6e, 0x0, 0x1);
        gbc.writeMem(0x1f6e, { 0x2a });
        gbc.writeMem(0x8076, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcf82);
        EXPECT(gbc.pc(), 0x8077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8076), 0xae);
        // AE 0212
        gbc.setState(0xc5a2, 0x98b2, 0x6300, 0x3f81, 0x30a5, 0xeafb, 0x1, 0x1);
        gbc.writeMem(0xc5a2, { 0xae });
        gbc.writeMem(0xeafb, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x98b2);
        EXPECT(gbc.pc(), 0xc5a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5a2), 0xae);
        EXPECT(gbc.readMem(0xeafb), 0x3c);
        // AE 0213
        gbc.setState(0xb087, 0x6707, 0xa460, 0x5573, 0xa03, 0x3152, 0x0, 0x0);
        gbc.writeMem(0x3152, { 0xc1 });
        gbc.writeMem(0xb087, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6707);
        EXPECT(gbc.pc(), 0xb088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb087), 0xae);
        // AE 0215
        gbc.setState(0x464d, 0xcc91, 0x3450, 0xa96d, 0x834, 0x3469, 0x0, 0x1);
        gbc.writeMem(0x3469, { 0x43 });
        gbc.writeMem(0x464d, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcc91);
        EXPECT(gbc.pc(), 0x464e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0216
        gbc.setState(0x84b1, 0xa247, 0x24b0, 0x2208, 0xb012, 0xdae5, 0x0, 0x0);
        gbc.writeMem(0x84b1, { 0xae });
        gbc.writeMem(0xdae5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa247);
        EXPECT(gbc.pc(), 0x84b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b1), 0xae);
        EXPECT(gbc.readMem(0xdae5), 0x10);
        // AE 0217
        gbc.setState(0xdf27, 0xb90d, 0x8430, 0x750e, 0xd997, 0xd305, 0x1, 0x1);
        gbc.writeMem(0xd305, { 0xa7 });
        gbc.writeMem(0xdf27, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb90d);
        EXPECT(gbc.pc(), 0xdf28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd305), 0xa7);
        EXPECT(gbc.readMem(0xdf27), 0xae);
        // AE 0218
        gbc.setState(0xe20f, 0xdaa2, 0x3bd0, 0x22b1, 0xc98b, 0x74f3, 0x0, 0x1);
        gbc.writeMem(0x74f3, { 0x57 });
        gbc.writeMem(0xe20f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xdaa2);
        EXPECT(gbc.pc(), 0xe210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe20f), 0xae);
        // AE 0219
        gbc.setState(0xd7ca, 0x4dda, 0xb340, 0x4cfe, 0x4deb, 0x6ec0, 0x1, 0x0);
        gbc.writeMem(0x6ec0, { 0xa });
        gbc.writeMem(0xd7ca, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4dda);
        EXPECT(gbc.pc(), 0xd7cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ca), 0xae);
        // AE 021A
        gbc.setState(0x3c16, 0x4b7f, 0xc580, 0x2fe5, 0x7d52, 0x46d6, 0x0, 0x1);
        gbc.writeMem(0x3c16, { 0xae });
        gbc.writeMem(0x46d6, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4b7f);
        EXPECT(gbc.pc(), 0x3c17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 021B
        gbc.setState(0x3b16, 0x93c, 0xd3f0, 0x2083, 0x9794, 0x864e, 0x1, 0x1);
        gbc.writeMem(0x3b16, { 0xae });
        gbc.writeMem(0x864e, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x93c);
        EXPECT(gbc.pc(), 0x3b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x864e), 0xb6);
        // AE 021C
        gbc.setState(0x1bf1, 0x674c, 0x980, 0x8c1, 0x6503, 0xddd4, 0x1, 0x0);
        gbc.writeMem(0x1bf1, { 0xae });
        gbc.writeMem(0xddd4, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x674c);
        EXPECT(gbc.pc(), 0x1bf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd4), 0x94);
        // AE 021D
        gbc.setState(0xd5c0, 0xe6dc, 0x3860, 0xb205, 0xb98, 0x7410, 0x1, 0x1);
        gbc.writeMem(0x7410, { 0xd8 });
        gbc.writeMem(0xd5c0, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe6dc);
        EXPECT(gbc.pc(), 0xd5c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5c0), 0xae);
        // AE 021E
        gbc.setState(0xd2c1, 0x773a, 0x4b30, 0x47da, 0xe3eb, 0xa906, 0x0, 0x0);
        gbc.writeMem(0xa906, { 0x72 });
        gbc.writeMem(0xd2c1, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x773a);
        EXPECT(gbc.pc(), 0xd2c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa906), 0x72);
        EXPECT(gbc.readMem(0xd2c1), 0xae);
        // AE 021F
        gbc.setState(0xa5a2, 0xc8d6, 0x5070, 0x74d3, 0x64e1, 0x22e7, 0x1, 0x0);
        gbc.writeMem(0x22e7, { 0x7c });
        gbc.writeMem(0xa5a2, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc8d6);
        EXPECT(gbc.pc(), 0xa5a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a2), 0xae);
        // AE 0220
        gbc.setState(0x72db, 0x3be5, 0xcda0, 0x8ed4, 0x3fd3, 0xca52, 0x1, 0x1);
        gbc.writeMem(0x72db, { 0xae });
        gbc.writeMem(0xca52, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3be5);
        EXPECT(gbc.pc(), 0x72dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca52), 0x1e);
        // AE 0221
        gbc.setState(0x655c, 0xf6b7, 0xbb20, 0xf440, 0x8cf7, 0x66b3, 0x0, 0x1);
        gbc.writeMem(0x655c, { 0xae });
        gbc.writeMem(0x66b3, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf6b7);
        EXPECT(gbc.pc(), 0x655d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0222
        gbc.setState(0x29c1, 0x9896, 0xd5c0, 0x7590, 0x2418, 0x566, 0x0, 0x1);
        gbc.writeMem(0x566, { 0xb0 });
        gbc.writeMem(0x29c1, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9896);
        EXPECT(gbc.pc(), 0x29c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0223
        gbc.setState(0x6ab, 0xbe04, 0xad50, 0x1d34, 0x553c, 0xce1a, 0x1, 0x0);
        gbc.writeMem(0x6ab, { 0xae });
        gbc.writeMem(0xce1a, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbe04);
        EXPECT(gbc.pc(), 0x6ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce1a), 0xf4);
        // AE 0224
        gbc.setState(0x1e0e, 0xf0ea, 0x1ad0, 0x2bdc, 0xefd3, 0x6fd, 0x0, 0x0);
        gbc.writeMem(0x6fd, { 0x14 });
        gbc.writeMem(0x1e0e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf0ea);
        EXPECT(gbc.pc(), 0x1e0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0225
        gbc.setState(0x7f6d, 0xc83e, 0xee20, 0xffd2, 0x704, 0x6b91, 0x0, 0x1);
        gbc.writeMem(0x6b91, { 0x7b });
        gbc.writeMem(0x7f6d, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc83e);
        EXPECT(gbc.pc(), 0x7f6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0226
        gbc.setState(0x754b, 0x3ee7, 0xb4a0, 0x3478, 0xb648, 0xd791, 0x1, 0x0);
        gbc.writeMem(0x754b, { 0xae });
        gbc.writeMem(0xd791, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3ee7);
        EXPECT(gbc.pc(), 0x754c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd791), 0xa7);
        // AE 0227
        gbc.setState(0xa8b3, 0x21a7, 0x9390, 0xcbba, 0xca62, 0xf48c, 0x1, 0x1);
        gbc.writeMem(0xa8b3, { 0xae });
        gbc.writeMem(0xf48c, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x21a7);
        EXPECT(gbc.pc(), 0xa8b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b3), 0xae);
        EXPECT(gbc.readMem(0xf48c), 0x32);
        // AE 0228
        gbc.setState(0xe165, 0x2fb6, 0x6f90, 0x1094, 0xa953, 0xc5dc, 0x0, 0x1);
        gbc.writeMem(0xc5dc, { 0xf4 });
        gbc.writeMem(0xe165, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2fb6);
        EXPECT(gbc.pc(), 0xe166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5dc), 0xf4);
        EXPECT(gbc.readMem(0xe165), 0xae);
        // AE 0229
        gbc.setState(0xbd0, 0xa6c6, 0xad90, 0x2e04, 0xbc07, 0xf032, 0x1, 0x1);
        gbc.writeMem(0xbd0, { 0xae });
        gbc.writeMem(0xf032, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa6c6);
        EXPECT(gbc.pc(), 0xbd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf032), 0xe8);
        // AE 022B
        gbc.setState(0xa080, 0x2939, 0xcf40, 0xdee0, 0x8c05, 0x40e1, 0x1, 0x0);
        gbc.writeMem(0x40e1, { 0x3e });
        gbc.writeMem(0xa080, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2939);
        EXPECT(gbc.pc(), 0xa081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa080), 0xae);
        // AE 022C
        gbc.setState(0x8423, 0x2930, 0x3ef0, 0x3596, 0xecee, 0xdc4, 0x1, 0x0);
        gbc.writeMem(0xdc4, { 0xea });
        gbc.writeMem(0x8423, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2930);
        EXPECT(gbc.pc(), 0x8424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8423), 0xae);
        // AE 022D
        gbc.setState(0xb3f2, 0x719e, 0x3ff0, 0xa63, 0xa0d0, 0x6db, 0x0, 0x1);
        gbc.writeMem(0x6db, { 0x9 });
        gbc.writeMem(0xb3f2, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x719e);
        EXPECT(gbc.pc(), 0xb3f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f2), 0xae);
        // AE 022E
        gbc.setState(0x17d, 0xdfe6, 0x3230, 0x4eaa, 0xa02c, 0x5045, 0x1, 0x0);
        gbc.writeMem(0x17d, { 0xae });
        gbc.writeMem(0x5045, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xdfe6);
        EXPECT(gbc.pc(), 0x17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0230
        gbc.setState(0x1c58, 0x957f, 0x1b30, 0x778e, 0x9ae6, 0x1d71, 0x0, 0x1);
        gbc.writeMem(0x1c58, { 0xae });
        gbc.writeMem(0x1d71, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x957f);
        EXPECT(gbc.pc(), 0x1c59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0231
        gbc.setState(0x8037, 0xfe8, 0xd060, 0xd85e, 0xf7df, 0x44f5, 0x0, 0x0);
        gbc.writeMem(0x44f5, { 0xc7 });
        gbc.writeMem(0x8037, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xfe8);
        EXPECT(gbc.pc(), 0x8038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8037), 0xae);
        // AE 0232
        gbc.setState(0x8d6, 0xcbe3, 0x93e0, 0x7f46, 0x656, 0xc87a, 0x1, 0x1);
        gbc.writeMem(0x8d6, { 0xae });
        gbc.writeMem(0xc87a, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcbe3);
        EXPECT(gbc.pc(), 0x8d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc87a), 0xe0);
        // AE 0233
        gbc.setState(0xa287, 0xd04c, 0x1e60, 0x6e1, 0x2e21, 0x879e, 0x1, 0x0);
        gbc.writeMem(0x879e, { 0xdf });
        gbc.writeMem(0xa287, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd04c);
        EXPECT(gbc.pc(), 0xa288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x879e), 0xdf);
        EXPECT(gbc.readMem(0xa287), 0xae);
        // AE 0234
        gbc.setState(0xc2f6, 0xbff0, 0xeb00, 0x5aca, 0x91e3, 0x508c, 0x0, 0x0);
        gbc.writeMem(0x508c, { 0x41 });
        gbc.writeMem(0xc2f6, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbff0);
        EXPECT(gbc.pc(), 0xc2f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2f6), 0xae);
        // AE 0235
        gbc.setState(0xd6bd, 0xa036, 0x7e50, 0x8de6, 0xe566, 0xcf76, 0x1, 0x0);
        gbc.writeMem(0xcf76, { 0xc3 });
        gbc.writeMem(0xd6bd, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa036);
        EXPECT(gbc.pc(), 0xd6be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf76), 0xc3);
        EXPECT(gbc.readMem(0xd6bd), 0xae);
        // AE 0236
        gbc.setState(0x2389, 0x5359, 0xf090, 0x9a38, 0x1978, 0x31f5, 0x0, 0x0);
        gbc.writeMem(0x2389, { 0xae });
        gbc.writeMem(0x31f5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5359);
        EXPECT(gbc.pc(), 0x238a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0237
        gbc.setState(0x3ac0, 0xdd25, 0xdeb0, 0xf7d1, 0x78b2, 0xd800, 0x0, 0x1);
        gbc.writeMem(0x3ac0, { 0xae });
        gbc.writeMem(0xd800, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xdd25);
        EXPECT(gbc.pc(), 0x3ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd800), 0x53);
        // AE 0238
        gbc.setState(0x4632, 0x24de, 0xd550, 0xe60d, 0x4060, 0x87ae, 0x0, 0x1);
        gbc.writeMem(0x4632, { 0xae });
        gbc.writeMem(0x87ae, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x24de);
        EXPECT(gbc.pc(), 0x4633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ae), 0x43);
        // AE 0239
        gbc.setState(0x6d62, 0x9fea, 0x6d0, 0xda71, 0xe0af, 0x4c8e, 0x1, 0x0);
        gbc.writeMem(0x4c8e, { 0x91 });
        gbc.writeMem(0x6d62, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9fea);
        EXPECT(gbc.pc(), 0x6d63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 023A
        gbc.setState(0xa6c3, 0x33a4, 0x9d50, 0xbb3b, 0x367e, 0x888c, 0x0, 0x1);
        gbc.writeMem(0x888c, { 0x1c });
        gbc.writeMem(0xa6c3, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x33a4);
        EXPECT(gbc.pc(), 0xa6c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x888c), 0x1c);
        EXPECT(gbc.readMem(0xa6c3), 0xae);
        // AE 023B
        gbc.setState(0x5bb8, 0x40b4, 0xe790, 0x1784, 0x2678, 0x988f, 0x0, 0x0);
        gbc.writeMem(0x5bb8, { 0xae });
        gbc.writeMem(0x988f, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x40b4);
        EXPECT(gbc.pc(), 0x5bb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x988f), 0xa9);
        // AE 023C
        gbc.setState(0x57d3, 0xf45a, 0xf340, 0x1bcf, 0x453c, 0x4348, 0x1, 0x0);
        gbc.writeMem(0x4348, { 0xfe });
        gbc.writeMem(0x57d3, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf45a);
        EXPECT(gbc.pc(), 0x57d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 023D
        gbc.setState(0x348d, 0xe758, 0x2f10, 0x2555, 0xfd77, 0x98ad, 0x0, 0x0);
        gbc.writeMem(0x348d, { 0xae });
        gbc.writeMem(0x98ad, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe758);
        EXPECT(gbc.pc(), 0x348e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98ad), 0x1);
        // AE 023E
        gbc.setState(0xe791, 0xfe7b, 0x8740, 0xbb66, 0x356, 0xd13a, 0x0, 0x0);
        gbc.writeMem(0xd13a, { 0x37 });
        gbc.writeMem(0xe791, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xfe7b);
        EXPECT(gbc.pc(), 0xe792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd13a), 0x37);
        EXPECT(gbc.readMem(0xe791), 0xae);
        // AE 023F
        gbc.setState(0x4faa, 0x726b, 0xc250, 0x8a94, 0x3bec, 0x855c, 0x1, 0x1);
        gbc.writeMem(0x4faa, { 0xae });
        gbc.writeMem(0x855c, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x726b);
        EXPECT(gbc.pc(), 0x4fab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x855c), 0x38);
        // AE 0240
        gbc.setState(0x486b, 0xa975, 0xf9a0, 0x9121, 0x50bd, 0x3629, 0x1, 0x1);
        gbc.writeMem(0x3629, { 0xc6 });
        gbc.writeMem(0x486b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa975);
        EXPECT(gbc.pc(), 0x486c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0241
        gbc.setState(0x65de, 0xc2e7, 0xc660, 0xcae7, 0x3893, 0xa2a, 0x0, 0x0);
        gbc.writeMem(0xa2a, { 0x77 });
        gbc.writeMem(0x65de, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc2e7);
        EXPECT(gbc.pc(), 0x65df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0242
        gbc.setState(0xc723, 0xeb62, 0x1c60, 0x2919, 0x5a02, 0xb851, 0x1, 0x1);
        gbc.writeMem(0xb851, { 0x61 });
        gbc.writeMem(0xc723, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xeb62);
        EXPECT(gbc.pc(), 0xc724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb851), 0x61);
        EXPECT(gbc.readMem(0xc723), 0xae);
        // AE 0244
        gbc.setState(0xbd1d, 0x40dc, 0x68a0, 0x3bf, 0xb202, 0xacfc, 0x0, 0x0);
        gbc.writeMem(0xacfc, { 0x98 });
        gbc.writeMem(0xbd1d, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x40dc);
        EXPECT(gbc.pc(), 0xbd1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacfc), 0x98);
        EXPECT(gbc.readMem(0xbd1d), 0xae);
        // AE 0245
        gbc.setState(0x2f88, 0x2b4d, 0x9b90, 0xe5f, 0xc9d7, 0xb944, 0x1, 0x1);
        gbc.writeMem(0x2f88, { 0xae });
        gbc.writeMem(0xb944, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2b4d);
        EXPECT(gbc.pc(), 0x2f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb944), 0xd1);
        // AE 0246
        gbc.setState(0xddf8, 0xe22d, 0x4820, 0x3aa1, 0x3f, 0x7153, 0x0, 0x0);
        gbc.writeMem(0x7153, { 0x0 });
        gbc.writeMem(0xddf8, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe22d);
        EXPECT(gbc.pc(), 0xddf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf8), 0xae);
        // AE 0247
        gbc.setState(0x9e27, 0x3274, 0x8c50, 0xca94, 0x13ee, 0xd651, 0x1, 0x0);
        gbc.writeMem(0x9e27, { 0xae });
        gbc.writeMem(0xd651, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3274);
        EXPECT(gbc.pc(), 0x9e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e27), 0xae);
        EXPECT(gbc.readMem(0xd651), 0x12);
        // AE 0249
        gbc.setState(0xdb78, 0x72f1, 0x62a0, 0x38f4, 0x5f65, 0xb771, 0x0, 0x0);
        gbc.writeMem(0xb771, { 0xda });
        gbc.writeMem(0xdb78, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x72f1);
        EXPECT(gbc.pc(), 0xdb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb771), 0xda);
        EXPECT(gbc.readMem(0xdb78), 0xae);
        // AE 024A
        gbc.setState(0x2970, 0x3c69, 0xa900, 0x6e72, 0x2e12, 0xbcd0, 0x1, 0x1);
        gbc.writeMem(0x2970, { 0xae });
        gbc.writeMem(0xbcd0, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3c69);
        EXPECT(gbc.pc(), 0x2971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcd0), 0x15);
        // AE 024B
        gbc.setState(0xa834, 0xe94f, 0x3a90, 0x90aa, 0x2c19, 0xeee1, 0x1, 0x1);
        gbc.writeMem(0xa834, { 0xae });
        gbc.writeMem(0xeee1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe94f);
        EXPECT(gbc.pc(), 0xa835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa834), 0xae);
        EXPECT(gbc.readMem(0xeee1), 0x45);
        // AE 024C
        gbc.setState(0xc375, 0xa61, 0x4e90, 0x508, 0xb308, 0xe9e7, 0x1, 0x0);
        gbc.writeMem(0xc375, { 0xae });
        gbc.writeMem(0xe9e7, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa61);
        EXPECT(gbc.pc(), 0xc376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc375), 0xae);
        EXPECT(gbc.readMem(0xe9e7), 0xb5);
        // AE 024D
        gbc.setState(0x3a6d, 0x2686, 0x8f40, 0xb8aa, 0x96a7, 0x5b5e, 0x0, 0x0);
        gbc.writeMem(0x3a6d, { 0xae });
        gbc.writeMem(0x5b5e, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2686);
        EXPECT(gbc.pc(), 0x3a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 024E
        gbc.setState(0xd637, 0x63cc, 0x8ee0, 0x836d, 0xd5f2, 0x75db, 0x0, 0x1);
        gbc.writeMem(0x75db, { 0x47 });
        gbc.writeMem(0xd637, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x63cc);
        EXPECT(gbc.pc(), 0xd638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd637), 0xae);
        // AE 024F
        gbc.setState(0x94b8, 0xc338, 0xa3d0, 0x4fdd, 0x7104, 0xa77f, 0x0, 0x0);
        gbc.writeMem(0x94b8, { 0xae });
        gbc.writeMem(0xa77f, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc338);
        EXPECT(gbc.pc(), 0x94b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b8), 0xae);
        EXPECT(gbc.readMem(0xa77f), 0x53);
        // AE 0250
        gbc.setState(0x9214, 0x21a0, 0xea20, 0x92ac, 0xf965, 0xfef6, 0x0, 0x1);
        gbc.writeMem(0x9214, { 0xae });
        gbc.writeMem(0xfef6, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x21a0);
        EXPECT(gbc.pc(), 0x9215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9214), 0xae);
        EXPECT(gbc.readMem(0xfef6), 0x67);
        // AE 0251
        gbc.setState(0x69a4, 0x43e8, 0xea80, 0xa32f, 0xf244, 0xecbb, 0x0, 0x0);
        gbc.writeMem(0x69a4, { 0xae });
        gbc.writeMem(0xecbb, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x43e8);
        EXPECT(gbc.pc(), 0x69a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecbb), 0x5a);
        // AE 0252
        gbc.setState(0x759e, 0x33d0, 0x74a0, 0x941a, 0x2bc, 0x8ff8, 0x0, 0x0);
        gbc.writeMem(0x759e, { 0xae });
        gbc.writeMem(0x8ff8, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x33d0);
        EXPECT(gbc.pc(), 0x759f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff8), 0x36);
        // AE 0253
        gbc.setState(0xe650, 0xdf75, 0x52a0, 0xfaec, 0x494f, 0x5c71, 0x0, 0x1);
        gbc.writeMem(0x5c71, { 0xc2 });
        gbc.writeMem(0xe650, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xdf75);
        EXPECT(gbc.pc(), 0xe651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe650), 0xae);
        // AE 0254
        gbc.setState(0x4cf, 0x6baa, 0x9410, 0x5baf, 0x2e37, 0x657c, 0x0, 0x1);
        gbc.writeMem(0x4cf, { 0xae });
        gbc.writeMem(0x657c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6baa);
        EXPECT(gbc.pc(), 0x4d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0255
        gbc.setState(0x18fc, 0x2853, 0x1af0, 0x35b3, 0xfc0, 0xcd5a, 0x1, 0x1);
        gbc.writeMem(0x18fc, { 0xae });
        gbc.writeMem(0xcd5a, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2853);
        EXPECT(gbc.pc(), 0x18fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd5a), 0x5e);
        // AE 0256
        gbc.setState(0x60a4, 0xa54f, 0xcf40, 0xe775, 0x4d6e, 0x7dc2, 0x0, 0x1);
        gbc.writeMem(0x60a4, { 0xae });
        gbc.writeMem(0x7dc2, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa54f);
        EXPECT(gbc.pc(), 0x60a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0257
        gbc.setState(0x441e, 0x41c3, 0xc640, 0xc489, 0xffaf, 0xb653, 0x0, 0x1);
        gbc.writeMem(0x441e, { 0xae });
        gbc.writeMem(0xb653, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x41c3);
        EXPECT(gbc.pc(), 0x441f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb653), 0xba);
        // AE 0258
        gbc.setState(0x9c1a, 0x7406, 0x1fa0, 0x4e55, 0xc8de, 0x558f, 0x0, 0x0);
        gbc.writeMem(0x558f, { 0x0 });
        gbc.writeMem(0x9c1a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7406);
        EXPECT(gbc.pc(), 0x9c1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c1a), 0xae);
        // AE 0259
        gbc.setState(0x5ce7, 0xa2bd, 0xe800, 0x6b45, 0x3ed5, 0xbbdb, 0x0, 0x1);
        gbc.writeMem(0x5ce7, { 0xae });
        gbc.writeMem(0xbbdb, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa2bd);
        EXPECT(gbc.pc(), 0x5ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbdb), 0x20);
        // AE 025A
        gbc.setState(0x8e13, 0xe2aa, 0xd6e0, 0x95da, 0x582, 0xe37, 0x0, 0x0);
        gbc.writeMem(0xe37, { 0xc });
        gbc.writeMem(0x8e13, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe2aa);
        EXPECT(gbc.pc(), 0x8e14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e13), 0xae);
        // AE 025B
        gbc.setState(0x9572, 0xb818, 0x8300, 0xfdda, 0x3371, 0xd4ce, 0x1, 0x0);
        gbc.writeMem(0x9572, { 0xae });
        gbc.writeMem(0xd4ce, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb818);
        EXPECT(gbc.pc(), 0x9573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9572), 0xae);
        EXPECT(gbc.readMem(0xd4ce), 0xdd);
        // AE 025C
        gbc.setState(0xec7d, 0xd63, 0x7290, 0x8c0f, 0xc5ea, 0x62bf, 0x1, 0x1);
        gbc.writeMem(0x62bf, { 0x9c });
        gbc.writeMem(0xec7d, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd63);
        EXPECT(gbc.pc(), 0xec7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec7d), 0xae);
        // AE 025D
        gbc.setState(0x6143, 0xbd9, 0x6450, 0x3669, 0x2d06, 0xe0fd, 0x1, 0x0);
        gbc.writeMem(0x6143, { 0xae });
        gbc.writeMem(0xe0fd, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbd9);
        EXPECT(gbc.pc(), 0x6144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0fd), 0xcc);
        // AE 025E
        gbc.setState(0x840, 0xfe02, 0xa190, 0x87be, 0xc8e0, 0xc436, 0x1, 0x1);
        gbc.writeMem(0x840, { 0xae });
        gbc.writeMem(0xc436, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xfe02);
        EXPECT(gbc.pc(), 0x841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc436), 0x9e);
        // AE 025F
        gbc.setState(0x87bc, 0x9024, 0x9a40, 0x4287, 0x4f9f, 0xb136, 0x0, 0x0);
        gbc.writeMem(0x87bc, { 0xae });
        gbc.writeMem(0xb136, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9024);
        EXPECT(gbc.pc(), 0x87bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87bc), 0xae);
        EXPECT(gbc.readMem(0xb136), 0x1b);
        // AE 0260
        gbc.setState(0x1856, 0xbdbc, 0xc480, 0x1ee3, 0xe7fd, 0xc684, 0x1, 0x0);
        gbc.writeMem(0x1856, { 0xae });
        gbc.writeMem(0xc684, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbdbc);
        EXPECT(gbc.pc(), 0x1857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc684), 0xc1);
        // AE 0261
        gbc.setState(0x56d8, 0x5b8b, 0xfb90, 0x7c4d, 0xff61, 0x779, 0x1, 0x0);
        gbc.writeMem(0x779, { 0x99 });
        gbc.writeMem(0x56d8, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5b8b);
        EXPECT(gbc.pc(), 0x56d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0262
        gbc.setState(0xb1c2, 0x8684, 0xf6a0, 0x985f, 0x4537, 0xc53b, 0x1, 0x0);
        gbc.writeMem(0xb1c2, { 0xae });
        gbc.writeMem(0xc53b, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8684);
        EXPECT(gbc.pc(), 0xb1c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c2), 0xae);
        EXPECT(gbc.readMem(0xc53b), 0xbe);
        // AE 0263
        gbc.setState(0x1f6a, 0x87b2, 0xb230, 0x8402, 0xc777, 0xbedd, 0x0, 0x1);
        gbc.writeMem(0x1f6a, { 0xae });
        gbc.writeMem(0xbedd, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x87b2);
        EXPECT(gbc.pc(), 0x1f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbedd), 0x64);
        // AE 0264
        gbc.setState(0xcb2, 0x7f25, 0x1870, 0xaef5, 0xc4c8, 0x5998, 0x1, 0x0);
        gbc.writeMem(0xcb2, { 0xae });
        gbc.writeMem(0x5998, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7f25);
        EXPECT(gbc.pc(), 0xcb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0265
        gbc.setState(0xe51f, 0xd201, 0xf550, 0xed74, 0x4ddc, 0xa114, 0x1, 0x0);
        gbc.writeMem(0xa114, { 0x82 });
        gbc.writeMem(0xe51f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd201);
        EXPECT(gbc.pc(), 0xe520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa114), 0x82);
        EXPECT(gbc.readMem(0xe51f), 0xae);
        // AE 0266
        gbc.setState(0x14eb, 0x4a4e, 0x380, 0x48f8, 0xa6ae, 0x8108, 0x1, 0x0);
        gbc.writeMem(0x14eb, { 0xae });
        gbc.writeMem(0x8108, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4a4e);
        EXPECT(gbc.pc(), 0x14ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8108), 0xa2);
        // AE 0267
        gbc.setState(0xcfef, 0xa230, 0x8380, 0xefb, 0x9d32, 0x368e, 0x0, 0x0);
        gbc.writeMem(0x368e, { 0xe2 });
        gbc.writeMem(0xcfef, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa230);
        EXPECT(gbc.pc(), 0xcff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfef), 0xae);
        // AE 026A
        gbc.setState(0x846, 0x687b, 0x1190, 0x8611, 0x466f, 0x2014, 0x0, 0x1);
        gbc.writeMem(0x846, { 0xae });
        gbc.writeMem(0x2014, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x687b);
        EXPECT(gbc.pc(), 0x847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 026B
        gbc.setState(0x2767, 0x74ad, 0x3780, 0xaeda, 0xd910, 0x2130, 0x1, 0x0);
        gbc.writeMem(0x2130, { 0x8c });
        gbc.writeMem(0x2767, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x74ad);
        EXPECT(gbc.pc(), 0x2768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 026C
        gbc.setState(0xd131, 0x2914, 0x83f0, 0x68f8, 0xe4b2, 0xfa77, 0x0, 0x1);
        gbc.writeMem(0xd131, { 0xae });
        gbc.writeMem(0xfa77, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2914);
        EXPECT(gbc.pc(), 0xd132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd131), 0xae);
        EXPECT(gbc.readMem(0xfa77), 0x4b);
        // AE 026E
        gbc.setState(0xcd3e, 0xeb13, 0xb770, 0xbcf7, 0x81a, 0xe42, 0x1, 0x0);
        gbc.writeMem(0xe42, { 0x46 });
        gbc.writeMem(0xcd3e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xeb13);
        EXPECT(gbc.pc(), 0xcd3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3e), 0xae);
        // AE 026F
        gbc.setState(0x49ff, 0xeadb, 0x23b0, 0xf536, 0x6ec5, 0x273d, 0x0, 0x1);
        gbc.writeMem(0x273d, { 0xeb });
        gbc.writeMem(0x49ff, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xeadb);
        EXPECT(gbc.pc(), 0x4a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0270
        gbc.setState(0xb274, 0xf06c, 0x5700, 0xfd04, 0x8f4f, 0x8344, 0x0, 0x1);
        gbc.writeMem(0x8344, { 0xcc });
        gbc.writeMem(0xb274, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf06c);
        EXPECT(gbc.pc(), 0xb275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8344), 0xcc);
        EXPECT(gbc.readMem(0xb274), 0xae);
        // AE 0271
        gbc.setState(0x6635, 0x886f, 0xbc00, 0x5da9, 0xf91f, 0xfc67, 0x1, 0x1);
        gbc.writeMem(0x6635, { 0xae });
        gbc.writeMem(0xfc67, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x886f);
        EXPECT(gbc.pc(), 0x6636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc67), 0x6d);
        // AE 0272
        gbc.setState(0xa657, 0xfa6c, 0x890, 0xba08, 0xb430, 0x4d69, 0x1, 0x1);
        gbc.writeMem(0x4d69, { 0xf5 });
        gbc.writeMem(0xa657, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xfa6c);
        EXPECT(gbc.pc(), 0xa658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa657), 0xae);
        // AE 0275
        gbc.setState(0x3324, 0x4f41, 0x3ca0, 0x5601, 0xd0c9, 0x3bdb, 0x0, 0x0);
        gbc.writeMem(0x3324, { 0xae });
        gbc.writeMem(0x3bdb, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4f41);
        EXPECT(gbc.pc(), 0x3325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0276
        gbc.setState(0x2ed4, 0x8204, 0x25f0, 0x4549, 0x52e1, 0xf909, 0x0, 0x0);
        gbc.writeMem(0x2ed4, { 0xae });
        gbc.writeMem(0xf909, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8204);
        EXPECT(gbc.pc(), 0x2ed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf909), 0x46);
        // AE 0277
        gbc.setState(0xc91b, 0x8dd6, 0xb3d0, 0xd41d, 0x374f, 0x38dd, 0x1, 0x1);
        gbc.writeMem(0x38dd, { 0xb2 });
        gbc.writeMem(0xc91b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8dd6);
        EXPECT(gbc.pc(), 0xc91c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc91b), 0xae);
        // AE 0278
        gbc.setState(0xaa29, 0x8edc, 0xe4a0, 0xd76e, 0x3d8f, 0x8c2a, 0x0, 0x1);
        gbc.writeMem(0x8c2a, { 0x97 });
        gbc.writeMem(0xaa29, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8edc);
        EXPECT(gbc.pc(), 0xaa2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c2a), 0x97);
        EXPECT(gbc.readMem(0xaa29), 0xae);
        // AE 0279
        gbc.setState(0x2f5a, 0xcfe0, 0x22a0, 0xee47, 0xf352, 0x7dde, 0x1, 0x1);
        gbc.writeMem(0x2f5a, { 0xae });
        gbc.writeMem(0x7dde, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xcfe0);
        EXPECT(gbc.pc(), 0x2f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 027A
        gbc.setState(0x89c2, 0x6442, 0x820, 0x3b8b, 0x651e, 0x387, 0x0, 0x0);
        gbc.writeMem(0x387, { 0xeb });
        gbc.writeMem(0x89c2, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6442);
        EXPECT(gbc.pc(), 0x89c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89c2), 0xae);
        // AE 027B
        gbc.setState(0x704c, 0x4e49, 0x66f0, 0xd4e3, 0xd574, 0x3cc, 0x0, 0x1);
        gbc.writeMem(0x3cc, { 0x8a });
        gbc.writeMem(0x704c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4e49);
        EXPECT(gbc.pc(), 0x704d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 027C
        gbc.setState(0x6a81, 0x991c, 0xc580, 0xafda, 0x615e, 0x2918, 0x0, 0x1);
        gbc.writeMem(0x2918, { 0x9a });
        gbc.writeMem(0x6a81, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x991c);
        EXPECT(gbc.pc(), 0x6a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 027E
        gbc.setState(0xbeff, 0x888, 0x14d0, 0x64d2, 0x21b0, 0xb6aa, 0x1, 0x0);
        gbc.writeMem(0xb6aa, { 0xd2 });
        gbc.writeMem(0xbeff, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x888);
        EXPECT(gbc.pc(), 0xbf00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6aa), 0xd2);
        EXPECT(gbc.readMem(0xbeff), 0xae);
        // AE 027F
        gbc.setState(0xa3d, 0x6550, 0xbcf0, 0x384a, 0x743f, 0x4f76, 0x1, 0x0);
        gbc.writeMem(0xa3d, { 0xae });
        gbc.writeMem(0x4f76, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6550);
        EXPECT(gbc.pc(), 0xa3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0280
        gbc.setState(0xc85d, 0xecdc, 0xf2b0, 0xbc65, 0x43ca, 0x54a5, 0x0, 0x0);
        gbc.writeMem(0x54a5, { 0xe });
        gbc.writeMem(0xc85d, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xecdc);
        EXPECT(gbc.pc(), 0xc85e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc85d), 0xae);
        // AE 0281
        gbc.setState(0x425b, 0xa23c, 0x5390, 0x8369, 0xc280, 0x91bc, 0x1, 0x0);
        gbc.writeMem(0x425b, { 0xae });
        gbc.writeMem(0x91bc, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa23c);
        EXPECT(gbc.pc(), 0x425c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91bc), 0x9);
        // AE 0282
        gbc.setState(0x4635, 0xbef4, 0x73d0, 0xe3ce, 0x1c58, 0xeaf5, 0x0, 0x0);
        gbc.writeMem(0x4635, { 0xae });
        gbc.writeMem(0xeaf5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbef4);
        EXPECT(gbc.pc(), 0x4636);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf5), 0xb8);
        // AE 0283
        gbc.setState(0x8152, 0x3ee9, 0x2ae0, 0x6f22, 0x9bae, 0xdd2, 0x1, 0x1);
        gbc.writeMem(0xdd2, { 0xf7 });
        gbc.writeMem(0x8152, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3ee9);
        EXPECT(gbc.pc(), 0x8153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8152), 0xae);
        // AE 0284
        gbc.setState(0x66e5, 0xadd4, 0xc10, 0x1068, 0xbd76, 0xac86, 0x1, 0x0);
        gbc.writeMem(0x66e5, { 0xae });
        gbc.writeMem(0xac86, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xadd4);
        EXPECT(gbc.pc(), 0x66e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac86), 0x28);
        // AE 0285
        gbc.setState(0x5929, 0xf7d, 0x47a0, 0x87b1, 0xca31, 0xc97b, 0x0, 0x1);
        gbc.writeMem(0x5929, { 0xae });
        gbc.writeMem(0xc97b, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf7d);
        EXPECT(gbc.pc(), 0x592a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc97b), 0x62);
        // AE 0287
        gbc.setState(0x755a, 0xe039, 0x3590, 0xd03e, 0x378, 0x11d9, 0x0, 0x1);
        gbc.writeMem(0x11d9, { 0xfd });
        gbc.writeMem(0x755a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe039);
        EXPECT(gbc.pc(), 0x755b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0288
        gbc.setState(0xaf1e, 0xb4d2, 0x1060, 0xb394, 0x661d, 0x6c6c, 0x1, 0x0);
        gbc.writeMem(0x6c6c, { 0xe5 });
        gbc.writeMem(0xaf1e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb4d2);
        EXPECT(gbc.pc(), 0xaf1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf1e), 0xae);
        // AE 0289
        gbc.setState(0xd2b0, 0xaf83, 0xcab0, 0x4b80, 0x27c5, 0x8fdb, 0x1, 0x1);
        gbc.writeMem(0x8fdb, { 0xb7 });
        gbc.writeMem(0xd2b0, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xaf83);
        EXPECT(gbc.pc(), 0xd2b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fdb), 0xb7);
        EXPECT(gbc.readMem(0xd2b0), 0xae);
        // AE 028A
        gbc.setState(0x3e44, 0xf82, 0xd6a0, 0x4f74, 0x3058, 0x474, 0x0, 0x0);
        gbc.writeMem(0x474, { 0xf6 });
        gbc.writeMem(0x3e44, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf82);
        EXPECT(gbc.pc(), 0x3e45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 028B
        gbc.setState(0xab55, 0xafe8, 0x5dc0, 0xc837, 0xaf3a, 0x88bb, 0x0, 0x0);
        gbc.writeMem(0x88bb, { 0xfb });
        gbc.writeMem(0xab55, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xafe8);
        EXPECT(gbc.pc(), 0xab56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88bb), 0xfb);
        EXPECT(gbc.readMem(0xab55), 0xae);
        // AE 028C
        gbc.setState(0x286e, 0x302, 0x8bd0, 0x514f, 0x7e46, 0xc7bc, 0x0, 0x1);
        gbc.writeMem(0x286e, { 0xae });
        gbc.writeMem(0xc7bc, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x302);
        EXPECT(gbc.pc(), 0x286f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7bc), 0x6);
        // AE 028D
        gbc.setState(0x36d0, 0xce27, 0x5ea0, 0xed60, 0x9643, 0xa03c, 0x1, 0x0);
        gbc.writeMem(0x36d0, { 0xae });
        gbc.writeMem(0xa03c, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xce27);
        EXPECT(gbc.pc(), 0x36d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa03c), 0xdf);
        // AE 028E
        gbc.setState(0xb4ab, 0x72ee, 0x66b0, 0x2e33, 0xe48c, 0x7923, 0x1, 0x0);
        gbc.writeMem(0x7923, { 0xb2 });
        gbc.writeMem(0xb4ab, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x72ee);
        EXPECT(gbc.pc(), 0xb4ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ab), 0xae);
        // AE 028F
        gbc.setState(0xc759, 0xc247, 0x17e0, 0xd8d4, 0xdf77, 0xf409, 0x1, 0x0);
        gbc.writeMem(0xc759, { 0xae });
        gbc.writeMem(0xf409, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc247);
        EXPECT(gbc.pc(), 0xc75a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc759), 0xae);
        EXPECT(gbc.readMem(0xf409), 0x75);
        // AE 0290
        gbc.setState(0x5287, 0xd952, 0x97e0, 0xb803, 0xcd2d, 0xe9e0, 0x1, 0x1);
        gbc.writeMem(0x5287, { 0xae });
        gbc.writeMem(0xe9e0, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd952);
        EXPECT(gbc.pc(), 0x5288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9e0), 0xc);
        // AE 0291
        gbc.setState(0x7b16, 0xa512, 0xedf0, 0x3ffb, 0xb371, 0x74a8, 0x1, 0x1);
        gbc.writeMem(0x74a8, { 0xfa });
        gbc.writeMem(0x7b16, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa512);
        EXPECT(gbc.pc(), 0x7b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0292
        gbc.setState(0x10f, 0x352b, 0xe210, 0xd50e, 0x8865, 0x6ffe, 0x0, 0x1);
        gbc.writeMem(0x10f, { 0xae });
        gbc.writeMem(0x6ffe, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x352b);
        EXPECT(gbc.pc(), 0x110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0293
        gbc.setState(0x5f74, 0x20ad, 0xe3f0, 0x5e3e, 0x6b09, 0xf7f6, 0x0, 0x0);
        gbc.writeMem(0x5f74, { 0xae });
        gbc.writeMem(0xf7f6, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x20ad);
        EXPECT(gbc.pc(), 0x5f75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf7f6), 0x52);
        // AE 0294
        gbc.setState(0xb877, 0xe09, 0x5d0, 0x809a, 0xb2a5, 0x7a2c, 0x1, 0x1);
        gbc.writeMem(0x7a2c, { 0xf1 });
        gbc.writeMem(0xb877, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe09);
        EXPECT(gbc.pc(), 0xb878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb877), 0xae);
        // AE 0295
        gbc.setState(0xea57, 0xf4e2, 0x70f0, 0x5373, 0xdcb1, 0x8bda, 0x0, 0x0);
        gbc.writeMem(0x8bda, { 0xa6 });
        gbc.writeMem(0xea57, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf4e2);
        EXPECT(gbc.pc(), 0xea58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bda), 0xa6);
        EXPECT(gbc.readMem(0xea57), 0xae);
        // AE 0296
        gbc.setState(0xb7d1, 0xde18, 0x6be0, 0xd31d, 0xc732, 0x2d71, 0x1, 0x1);
        gbc.writeMem(0x2d71, { 0x92 });
        gbc.writeMem(0xb7d1, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xde18);
        EXPECT(gbc.pc(), 0xb7d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d1), 0xae);
        // AE 0297
        gbc.setState(0xadfe, 0xec7, 0x2fa0, 0xe386, 0x46c9, 0xc0b, 0x0, 0x1);
        gbc.writeMem(0xc0b, { 0xce });
        gbc.writeMem(0xadfe, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xec7);
        EXPECT(gbc.pc(), 0xadff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadfe), 0xae);
        // AE 0298
        gbc.setState(0x3c7c, 0x6db, 0x8d30, 0xfbd1, 0xcc13, 0x5d99, 0x0, 0x1);
        gbc.writeMem(0x3c7c, { 0xae });
        gbc.writeMem(0x5d99, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6db);
        EXPECT(gbc.pc(), 0x3c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0299
        gbc.setState(0x1c2f, 0x100a, 0xda50, 0xc46b, 0x1273, 0x7ce1, 0x1, 0x1);
        gbc.writeMem(0x1c2f, { 0xae });
        gbc.writeMem(0x7ce1, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x100a);
        EXPECT(gbc.pc(), 0x1c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 029A
        gbc.setState(0x2b8b, 0xb428, 0xc2e0, 0x77e6, 0x79b2, 0x3930, 0x0, 0x0);
        gbc.writeMem(0x2b8b, { 0xae });
        gbc.writeMem(0x3930, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb428);
        EXPECT(gbc.pc(), 0x2b8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 029B
        gbc.setState(0xe6e6, 0x9662, 0x7a60, 0x524c, 0x2fb6, 0x61bc, 0x0, 0x0);
        gbc.writeMem(0x61bc, { 0xa3 });
        gbc.writeMem(0xe6e6, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9662);
        EXPECT(gbc.pc(), 0xe6e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6e6), 0xae);
        // AE 029C
        gbc.setState(0xee99, 0x9099, 0x6e00, 0xa21f, 0x1ab3, 0x3a28, 0x1, 0x0);
        gbc.writeMem(0x3a28, { 0xa3 });
        gbc.writeMem(0xee99, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9099);
        EXPECT(gbc.pc(), 0xee9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee99), 0xae);
        // AE 029D
        gbc.setState(0x6264, 0xedc2, 0x720, 0x7816, 0x67be, 0x9d9a, 0x1, 0x0);
        gbc.writeMem(0x6264, { 0xae });
        gbc.writeMem(0x9d9a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xedc2);
        EXPECT(gbc.pc(), 0x6265);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d9a), 0x8c);
        // AE 029E
        gbc.setState(0x7761, 0xaaa0, 0xeb70, 0x830e, 0x6881, 0xc7eb, 0x1, 0x1);
        gbc.writeMem(0x7761, { 0xae });
        gbc.writeMem(0xc7eb, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xaaa0);
        EXPECT(gbc.pc(), 0x7762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7eb), 0x39);
        // AE 029F
        gbc.setState(0x2750, 0x1ae8, 0xc00, 0xd877, 0xeebb, 0xa5de, 0x0, 0x1);
        gbc.writeMem(0x2750, { 0xae });
        gbc.writeMem(0xa5de, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1ae8);
        EXPECT(gbc.pc(), 0x2751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5de), 0x25);
        // AE 02A0
        gbc.setState(0x6c85, 0xd91a, 0x59a0, 0xa623, 0xcd61, 0x973, 0x0, 0x1);
        gbc.writeMem(0x973, { 0x58 });
        gbc.writeMem(0x6c85, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd91a);
        EXPECT(gbc.pc(), 0x6c86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02A1
        gbc.setState(0x6fb, 0xa82c, 0x3910, 0xc90a, 0x977c, 0x11b2, 0x1, 0x1);
        gbc.writeMem(0x6fb, { 0xae });
        gbc.writeMem(0x11b2, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa82c);
        EXPECT(gbc.pc(), 0x6fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02A2
        gbc.setState(0x28fa, 0xa257, 0x5970, 0xb147, 0xf670, 0xbd07, 0x1, 0x0);
        gbc.writeMem(0x28fa, { 0xae });
        gbc.writeMem(0xbd07, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa257);
        EXPECT(gbc.pc(), 0x28fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd07), 0x93);
        // AE 02A3
        gbc.setState(0x9ae8, 0x3078, 0xaae0, 0x46a2, 0x1dad, 0xe5c9, 0x0, 0x1);
        gbc.writeMem(0x9ae8, { 0xae });
        gbc.writeMem(0xe5c9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3078);
        EXPECT(gbc.pc(), 0x9ae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae8), 0xae);
        EXPECT(gbc.readMem(0xe5c9), 0x97);
        // AE 02A4
        gbc.setState(0x7a2e, 0x4cfe, 0x38c0, 0x8eaa, 0xd100, 0x8b62, 0x0, 0x0);
        gbc.writeMem(0x7a2e, { 0xae });
        gbc.writeMem(0x8b62, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4cfe);
        EXPECT(gbc.pc(), 0x7a2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b62), 0x7f);
        // AE 02A5
        gbc.setState(0xbefd, 0x78f3, 0x8e50, 0xf2eb, 0xfbdb, 0x1cde, 0x1, 0x0);
        gbc.writeMem(0x1cde, { 0x1f });
        gbc.writeMem(0xbefd, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x78f3);
        EXPECT(gbc.pc(), 0xbefe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbefd), 0xae);
        // AE 02A6
        gbc.setState(0x98e3, 0xec41, 0x4080, 0xadd4, 0x927, 0x33eb, 0x1, 0x1);
        gbc.writeMem(0x33eb, { 0xd });
        gbc.writeMem(0x98e3, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xec41);
        EXPECT(gbc.pc(), 0x98e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e3), 0xae);
        // AE 02A7
        gbc.setState(0x3911, 0xf0a4, 0x4820, 0x516, 0x1260, 0x4a5d, 0x1, 0x0);
        gbc.writeMem(0x3911, { 0xae });
        gbc.writeMem(0x4a5d, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf0a4);
        EXPECT(gbc.pc(), 0x3912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02A8
        gbc.setState(0x62ca, 0x10d6, 0x2500, 0xa128, 0x10f6, 0x5b0f, 0x0, 0x1);
        gbc.writeMem(0x5b0f, { 0x97 });
        gbc.writeMem(0x62ca, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x10d6);
        EXPECT(gbc.pc(), 0x62cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02A9
        gbc.setState(0x58e1, 0x52af, 0x9040, 0x2450, 0xecaa, 0xb4e6, 0x1, 0x0);
        gbc.writeMem(0x58e1, { 0xae });
        gbc.writeMem(0xb4e6, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x52af);
        EXPECT(gbc.pc(), 0x58e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e6), 0xaa);
        // AE 02AA
        gbc.setState(0x6834, 0xcce0, 0x50, 0x621b, 0xfa1b, 0x24a4, 0x0, 0x0);
        gbc.writeMem(0x24a4, { 0xda });
        gbc.writeMem(0x6834, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xcce0);
        EXPECT(gbc.pc(), 0x6835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02AB
        gbc.setState(0xe8be, 0x899, 0x9dc0, 0x9205, 0xe567, 0x9bc1, 0x0, 0x1);
        gbc.writeMem(0x9bc1, { 0x7 });
        gbc.writeMem(0xe8be, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x899);
        EXPECT(gbc.pc(), 0xe8bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bc1), 0x7);
        EXPECT(gbc.readMem(0xe8be), 0xae);
        // AE 02AC
        gbc.setState(0xb1df, 0xb4d, 0x36b0, 0xbfa2, 0x4ced, 0x1554, 0x1, 0x0);
        gbc.writeMem(0x1554, { 0x52 });
        gbc.writeMem(0xb1df, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb4d);
        EXPECT(gbc.pc(), 0xb1e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1df), 0xae);
        // AE 02AD
        gbc.setState(0x8d68, 0x2b73, 0x3450, 0xf61d, 0x5e75, 0xd983, 0x1, 0x0);
        gbc.writeMem(0x8d68, { 0xae });
        gbc.writeMem(0xd983, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2b73);
        EXPECT(gbc.pc(), 0x8d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d68), 0xae);
        EXPECT(gbc.readMem(0xd983), 0xd0);
        // AE 02AE
        gbc.setState(0x1143, 0xdf0c, 0x8330, 0xefb3, 0x1694, 0xf4c6, 0x0, 0x1);
        gbc.writeMem(0x1143, { 0xae });
        gbc.writeMem(0xf4c6, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xdf0c);
        EXPECT(gbc.pc(), 0x1144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf4c6), 0x7);
        // AE 02AF
        gbc.setState(0x55bc, 0x8937, 0xac90, 0x9598, 0xb95e, 0x6bd5, 0x1, 0x0);
        gbc.writeMem(0x55bc, { 0xae });
        gbc.writeMem(0x6bd5, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8937);
        EXPECT(gbc.pc(), 0x55bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02B0
        gbc.setState(0x8cd7, 0x52ab, 0x6ac0, 0x1461, 0xc5ac, 0xd905, 0x0, 0x1);
        gbc.writeMem(0x8cd7, { 0xae });
        gbc.writeMem(0xd905, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x52ab);
        EXPECT(gbc.pc(), 0x8cd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cd7), 0xae);
        EXPECT(gbc.readMem(0xd905), 0xa0);
        // AE 02B1
        gbc.setState(0x226, 0xf96b, 0x4640, 0x4f38, 0xd4fb, 0x50b, 0x0, 0x0);
        gbc.writeMem(0x226, { 0xae });
        gbc.writeMem(0x50b, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf96b);
        EXPECT(gbc.pc(), 0x227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02B3
        gbc.setState(0x4e88, 0xab42, 0x33a0, 0x5257, 0x8c60, 0x1a1a, 0x1, 0x0);
        gbc.writeMem(0x1a1a, { 0x53 });
        gbc.writeMem(0x4e88, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xab42);
        EXPECT(gbc.pc(), 0x4e89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02B4
        gbc.setState(0xdc07, 0xce5f, 0xd170, 0x7f24, 0xa6e6, 0x3929, 0x0, 0x0);
        gbc.writeMem(0x3929, { 0xf1 });
        gbc.writeMem(0xdc07, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xce5f);
        EXPECT(gbc.pc(), 0xdc08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc07), 0xae);
        // AE 02B5
        gbc.setState(0x2fc2, 0xc2db, 0xbcb0, 0xc796, 0xd7b3, 0x1bef, 0x1, 0x0);
        gbc.writeMem(0x1bef, { 0x19 });
        gbc.writeMem(0x2fc2, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc2db);
        EXPECT(gbc.pc(), 0x2fc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02B6
        gbc.setState(0x5aec, 0xed26, 0xda40, 0x5921, 0x254, 0xf445, 0x1, 0x0);
        gbc.writeMem(0x5aec, { 0xae });
        gbc.writeMem(0xf445, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xed26);
        EXPECT(gbc.pc(), 0x5aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf445), 0x16);
        // AE 02B7
        gbc.setState(0xc101, 0xbe8c, 0x5c50, 0x860a, 0xa371, 0xdeb9, 0x1, 0x1);
        gbc.writeMem(0xc101, { 0xae });
        gbc.writeMem(0xdeb9, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbe8c);
        EXPECT(gbc.pc(), 0xc102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc101), 0xae);
        EXPECT(gbc.readMem(0xdeb9), 0xae);
        // AE 02B8
        gbc.setState(0xcbd0, 0xb7bb, 0xdb80, 0x4516, 0x9b88, 0x2c18, 0x1, 0x0);
        gbc.writeMem(0x2c18, { 0xcd });
        gbc.writeMem(0xcbd0, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb7bb);
        EXPECT(gbc.pc(), 0xcbd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbd0), 0xae);
        // AE 02B9
        gbc.setState(0xce27, 0xfb54, 0x8870, 0x5301, 0xde1c, 0xd993, 0x0, 0x1);
        gbc.writeMem(0xce27, { 0xae });
        gbc.writeMem(0xd993, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xfb54);
        EXPECT(gbc.pc(), 0xce28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce27), 0xae);
        EXPECT(gbc.readMem(0xd993), 0xf9);
        // AE 02BA
        gbc.setState(0x342a, 0x8932, 0x3c60, 0x577e, 0x2b89, 0x6501, 0x1, 0x0);
        gbc.writeMem(0x342a, { 0xae });
        gbc.writeMem(0x6501, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8932);
        EXPECT(gbc.pc(), 0x342b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02BB
        gbc.setState(0x7bd1, 0xa2c1, 0x8640, 0x52aa, 0xdcd7, 0x58ce, 0x1, 0x1);
        gbc.writeMem(0x58ce, { 0xd7 });
        gbc.writeMem(0x7bd1, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa2c1);
        EXPECT(gbc.pc(), 0x7bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02BC
        gbc.setState(0x3be0, 0xf35a, 0xe490, 0x4ba5, 0xa716, 0x380d, 0x0, 0x0);
        gbc.writeMem(0x380d, { 0x99 });
        gbc.writeMem(0x3be0, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf35a);
        EXPECT(gbc.pc(), 0x3be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02BD
        gbc.setState(0xdcda, 0xd8ec, 0x9f10, 0xc250, 0x616c, 0x85f4, 0x0, 0x0);
        gbc.writeMem(0x85f4, { 0x8b });
        gbc.writeMem(0xdcda, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd8ec);
        EXPECT(gbc.pc(), 0xdcdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85f4), 0x8b);
        EXPECT(gbc.readMem(0xdcda), 0xae);
        // AE 02BF
        gbc.setState(0x4b43, 0x9ff0, 0x920, 0x91fd, 0xa357, 0x821d, 0x1, 0x1);
        gbc.writeMem(0x4b43, { 0xae });
        gbc.writeMem(0x821d, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9ff0);
        EXPECT(gbc.pc(), 0x4b44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821d), 0x53);
        // AE 02C0
        gbc.setState(0x4331, 0xf524, 0xe910, 0x6f99, 0xfacc, 0xb323, 0x1, 0x0);
        gbc.writeMem(0x4331, { 0xae });
        gbc.writeMem(0xb323, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf524);
        EXPECT(gbc.pc(), 0x4332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb323), 0x4c);
        // AE 02C1
        gbc.setState(0xce52, 0x15c8, 0xba00, 0x9e8, 0x5f24, 0xc74c, 0x1, 0x0);
        gbc.writeMem(0xc74c, { 0x86 });
        gbc.writeMem(0xce52, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x15c8);
        EXPECT(gbc.pc(), 0xce53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc74c), 0x86);
        EXPECT(gbc.readMem(0xce52), 0xae);
        // AE 02C2
        gbc.setState(0xc458, 0x6f82, 0x4c60, 0xf9b0, 0xc0c4, 0xe8a4, 0x0, 0x0);
        gbc.writeMem(0xc458, { 0xae });
        gbc.writeMem(0xe8a4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6f82);
        EXPECT(gbc.pc(), 0xc459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc458), 0xae);
        EXPECT(gbc.readMem(0xe8a4), 0x8c);
        // AE 02C3
        gbc.setState(0x9a8e, 0xd4c1, 0x63d0, 0x8ba8, 0x67f3, 0x98fa, 0x0, 0x0);
        gbc.writeMem(0x98fa, { 0xf0 });
        gbc.writeMem(0x9a8e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd4c1);
        EXPECT(gbc.pc(), 0x9a8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98fa), 0xf0);
        EXPECT(gbc.readMem(0x9a8e), 0xae);
        // AE 02C4
        gbc.setState(0x89ed, 0x37, 0xa7f0, 0x7721, 0x89cf, 0x81af, 0x0, 0x1);
        gbc.writeMem(0x81af, { 0x2c });
        gbc.writeMem(0x89ed, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x37);
        EXPECT(gbc.pc(), 0x89ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81af), 0x2c);
        EXPECT(gbc.readMem(0x89ed), 0xae);
        // AE 02C5
        gbc.setState(0x707c, 0x6798, 0x7690, 0x6ba2, 0x8997, 0x784f, 0x1, 0x1);
        gbc.writeMem(0x707c, { 0xae });
        gbc.writeMem(0x784f, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6798);
        EXPECT(gbc.pc(), 0x707d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02C6
        gbc.setState(0xc024, 0x1a0f, 0xdf60, 0xad3e, 0x6d2c, 0x13f, 0x1, 0x1);
        gbc.writeMem(0x13f, { 0xf3 });
        gbc.writeMem(0xc024, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1a0f);
        EXPECT(gbc.pc(), 0xc025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc024), 0xae);
        // AE 02C7
        gbc.setState(0x8f47, 0x35f5, 0x6cb0, 0xd006, 0xabd1, 0x565f, 0x0, 0x0);
        gbc.writeMem(0x565f, { 0xe2 });
        gbc.writeMem(0x8f47, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x35f5);
        EXPECT(gbc.pc(), 0x8f48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f47), 0xae);
        // AE 02C8
        gbc.setState(0x34b, 0xfcd7, 0x6640, 0x13b9, 0x43a7, 0xd422, 0x0, 0x0);
        gbc.writeMem(0x34b, { 0xae });
        gbc.writeMem(0xd422, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xfcd7);
        EXPECT(gbc.pc(), 0x34c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd422), 0x8f);
        // AE 02C9
        gbc.setState(0xcf19, 0x9aa, 0x5e90, 0x9c89, 0x2047, 0x4be1, 0x0, 0x1);
        gbc.writeMem(0x4be1, { 0x19 });
        gbc.writeMem(0xcf19, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9aa);
        EXPECT(gbc.pc(), 0xcf1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf19), 0xae);
        // AE 02CA
        gbc.setState(0xdaae, 0x6f0, 0x5ee0, 0x72d4, 0xab92, 0x32e8, 0x1, 0x0);
        gbc.writeMem(0x32e8, { 0x1f });
        gbc.writeMem(0xdaae, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6f0);
        EXPECT(gbc.pc(), 0xdaaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaae), 0xae);
        // AE 02CB
        gbc.setState(0xbb0f, 0xccb2, 0x2ba0, 0x3bb5, 0xb5ad, 0x66f, 0x1, 0x1);
        gbc.writeMem(0x66f, { 0xa9 });
        gbc.writeMem(0xbb0f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xccb2);
        EXPECT(gbc.pc(), 0xbb10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb0f), 0xae);
        // AE 02CC
        gbc.setState(0xc5ce, 0x5a44, 0xe650, 0x90c0, 0xffb, 0xee40, 0x1, 0x1);
        gbc.writeMem(0xc5ce, { 0xae });
        gbc.writeMem(0xee40, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5a44);
        EXPECT(gbc.pc(), 0xc5cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ce), 0xae);
        EXPECT(gbc.readMem(0xee40), 0xf2);
        // AE 02CD
        gbc.setState(0xa37b, 0x63b8, 0x94f0, 0x382c, 0xcce0, 0x65cc, 0x0, 0x1);
        gbc.writeMem(0x65cc, { 0xb6 });
        gbc.writeMem(0xa37b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x63b8);
        EXPECT(gbc.pc(), 0xa37c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa37b), 0xae);
        // AE 02CE
        gbc.setState(0x9064, 0x28d4, 0x99d0, 0x4c3, 0x1c0c, 0x25bf, 0x0, 0x1);
        gbc.writeMem(0x25bf, { 0xa3 });
        gbc.writeMem(0x9064, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x28d4);
        EXPECT(gbc.pc(), 0x9065);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9064), 0xae);
        // AE 02CF
        gbc.setState(0x86a4, 0xc1a, 0xc170, 0x6289, 0x1ea8, 0x5c40, 0x0, 0x0);
        gbc.writeMem(0x5c40, { 0x5 });
        gbc.writeMem(0x86a4, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc1a);
        EXPECT(gbc.pc(), 0x86a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a4), 0xae);
        // AE 02D0
        gbc.setState(0x44f1, 0xc85e, 0xc940, 0xea9d, 0xb8f6, 0x447, 0x1, 0x0);
        gbc.writeMem(0x447, { 0x74 });
        gbc.writeMem(0x44f1, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc85e);
        EXPECT(gbc.pc(), 0x44f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02D1
        gbc.setState(0x82ba, 0xa181, 0xd780, 0x10a8, 0x15a1, 0x91ca, 0x1, 0x0);
        gbc.writeMem(0x82ba, { 0xae });
        gbc.writeMem(0x91ca, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa181);
        EXPECT(gbc.pc(), 0x82bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ba), 0xae);
        EXPECT(gbc.readMem(0x91ca), 0xa2);
        // AE 02D2
        gbc.setState(0x888a, 0x2f10, 0x5070, 0xeba8, 0x13e, 0x2c0e, 0x0, 0x0);
        gbc.writeMem(0x2c0e, { 0x69 });
        gbc.writeMem(0x888a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2f10);
        EXPECT(gbc.pc(), 0x888b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x888a), 0xae);
        // AE 02D3
        gbc.setState(0x8e8a, 0x88ed, 0x150, 0x1aad, 0xe46b, 0x2c5a, 0x1, 0x1);
        gbc.writeMem(0x2c5a, { 0x6a });
        gbc.writeMem(0x8e8a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x88ed);
        EXPECT(gbc.pc(), 0x8e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e8a), 0xae);
        // AE 02D4
        gbc.setState(0x78fe, 0xa18b, 0x5580, 0x7a40, 0x1c3f, 0x4794, 0x0, 0x0);
        gbc.writeMem(0x4794, { 0x46 });
        gbc.writeMem(0x78fe, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa18b);
        EXPECT(gbc.pc(), 0x78ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02D5
        gbc.setState(0x64d1, 0x5d30, 0x7ab0, 0x189b, 0xd886, 0x57b3, 0x1, 0x1);
        gbc.writeMem(0x57b3, { 0xad });
        gbc.writeMem(0x64d1, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5d30);
        EXPECT(gbc.pc(), 0x64d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02D6
        gbc.setState(0x4160, 0x4615, 0x9650, 0xd5ca, 0xa07a, 0x49a2, 0x1, 0x1);
        gbc.writeMem(0x4160, { 0xae });
        gbc.writeMem(0x49a2, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4615);
        EXPECT(gbc.pc(), 0x4161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02D7
        gbc.setState(0x7a86, 0x69b3, 0x7b60, 0xda68, 0x1176, 0x7d56, 0x0, 0x0);
        gbc.writeMem(0x7a86, { 0xae });
        gbc.writeMem(0x7d56, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x69b3);
        EXPECT(gbc.pc(), 0x7a87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02D9
        gbc.setState(0xc95e, 0xecf0, 0xd470, 0xccf9, 0x4fd6, 0x4bd8, 0x0, 0x0);
        gbc.writeMem(0x4bd8, { 0x95 });
        gbc.writeMem(0xc95e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xecf0);
        EXPECT(gbc.pc(), 0xc95f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc95e), 0xae);
        // AE 02DA
        gbc.setState(0xedbc, 0x6d4b, 0x6640, 0x171d, 0x4876, 0x487f, 0x0, 0x0);
        gbc.writeMem(0x487f, { 0x25 });
        gbc.writeMem(0xedbc, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6d4b);
        EXPECT(gbc.pc(), 0xedbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedbc), 0xae);
        // AE 02DB
        gbc.setState(0x9d42, 0x4b80, 0x8a60, 0x22ab, 0xd647, 0xda23, 0x0, 0x0);
        gbc.writeMem(0x9d42, { 0xae });
        gbc.writeMem(0xda23, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4b80);
        EXPECT(gbc.pc(), 0x9d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d42), 0xae);
        EXPECT(gbc.readMem(0xda23), 0xa1);
        // AE 02DC
        gbc.setState(0x9bc5, 0xa350, 0xc4e0, 0x8a8a, 0xa9dd, 0x576e, 0x0, 0x0);
        gbc.writeMem(0x576e, { 0xd9 });
        gbc.writeMem(0x9bc5, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa350);
        EXPECT(gbc.pc(), 0x9bc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bc5), 0xae);
        // AE 02DD
        gbc.setState(0x6cc3, 0x218c, 0xf660, 0xf557, 0x2234, 0x6b6f, 0x0, 0x1);
        gbc.writeMem(0x6b6f, { 0x57 });
        gbc.writeMem(0x6cc3, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x218c);
        EXPECT(gbc.pc(), 0x6cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02DF
        gbc.setState(0xbe89, 0x8ee6, 0x7630, 0x7136, 0x3d82, 0x31b7, 0x1, 0x1);
        gbc.writeMem(0x31b7, { 0xae });
        gbc.writeMem(0xbe89, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8ee6);
        EXPECT(gbc.pc(), 0xbe8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe89), 0xae);
        // AE 02E0
        gbc.setState(0x801d, 0x37bf, 0x4770, 0xaacc, 0x3a46, 0xc0e, 0x1, 0x1);
        gbc.writeMem(0xc0e, { 0x1a });
        gbc.writeMem(0x801d, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x37bf);
        EXPECT(gbc.pc(), 0x801e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x801d), 0xae);
        // AE 02E1
        gbc.setState(0x71a7, 0xfa3d, 0xeaf0, 0x48b4, 0x4be0, 0xc6, 0x0, 0x1);
        gbc.writeMem(0xc6, { 0xdc });
        gbc.writeMem(0x71a7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfa3d);
        EXPECT(gbc.pc(), 0x71a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02E4
        gbc.setState(0x6dc2, 0xc234, 0xbb00, 0xf17d, 0xe318, 0x8410, 0x0, 0x0);
        gbc.writeMem(0x6dc2, { 0xae });
        gbc.writeMem(0x8410, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc234);
        EXPECT(gbc.pc(), 0x6dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8410), 0xca);
        // AE 02E6
        gbc.setState(0x7c9, 0xabf9, 0x31d0, 0xed53, 0x8768, 0x3610, 0x0, 0x1);
        gbc.writeMem(0x7c9, { 0xae });
        gbc.writeMem(0x3610, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xabf9);
        EXPECT(gbc.pc(), 0x7ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02E7
        gbc.setState(0x87c, 0xac7d, 0x2f10, 0x2293, 0x47f0, 0x5a50, 0x1, 0x0);
        gbc.writeMem(0x87c, { 0xae });
        gbc.writeMem(0x5a50, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xac7d);
        EXPECT(gbc.pc(), 0x87d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02E9
        gbc.setState(0x6008, 0x2eb3, 0xddd0, 0x2235, 0x2f09, 0x9a35, 0x0, 0x1);
        gbc.writeMem(0x6008, { 0xae });
        gbc.writeMem(0x9a35, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2eb3);
        EXPECT(gbc.pc(), 0x6009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a35), 0xce);
        // AE 02EA
        gbc.setState(0xdf97, 0x9130, 0xe460, 0x2e3c, 0x9914, 0x2a60, 0x1, 0x1);
        gbc.writeMem(0x2a60, { 0x81 });
        gbc.writeMem(0xdf97, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9130);
        EXPECT(gbc.pc(), 0xdf98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf97), 0xae);
        // AE 02EB
        gbc.setState(0x8798, 0xa797, 0xbb40, 0x4aa7, 0xf23b, 0x2a10, 0x1, 0x0);
        gbc.writeMem(0x2a10, { 0x56 });
        gbc.writeMem(0x8798, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa797);
        EXPECT(gbc.pc(), 0x8799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8798), 0xae);
        // AE 02EC
        gbc.setState(0x7d55, 0xf8ed, 0x4360, 0x1666, 0x57b0, 0xb612, 0x0, 0x0);
        gbc.writeMem(0x7d55, { 0xae });
        gbc.writeMem(0xb612, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf8ed);
        EXPECT(gbc.pc(), 0x7d56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb612), 0xe7);
        // AE 02ED
        gbc.setState(0x4fd5, 0x81f3, 0xce70, 0xc785, 0x6341, 0x3913, 0x1, 0x1);
        gbc.writeMem(0x3913, { 0x86 });
        gbc.writeMem(0x4fd5, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x81f3);
        EXPECT(gbc.pc(), 0x4fd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02EE
        gbc.setState(0x706d, 0xb7e0, 0xed80, 0xba75, 0x9603, 0x7900, 0x1, 0x1);
        gbc.writeMem(0x706d, { 0xae });
        gbc.writeMem(0x7900, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb7e0);
        EXPECT(gbc.pc(), 0x706e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02EF
        gbc.setState(0x7a30, 0x2050, 0xba70, 0x77fe, 0x42ba, 0x9512, 0x1, 0x0);
        gbc.writeMem(0x7a30, { 0xae });
        gbc.writeMem(0x9512, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2050);
        EXPECT(gbc.pc(), 0x7a31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9512), 0xdf);
        // AE 02F0
        gbc.setState(0x762b, 0x6ae6, 0xb640, 0xa444, 0xa8ca, 0xcc4f, 0x0, 0x1);
        gbc.writeMem(0x762b, { 0xae });
        gbc.writeMem(0xcc4f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6ae6);
        EXPECT(gbc.pc(), 0x762c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4f), 0xd9);
        // AE 02F1
        gbc.setState(0xee4f, 0x93c1, 0xf5e0, 0x927c, 0x3596, 0x8b9f, 0x0, 0x1);
        gbc.writeMem(0x8b9f, { 0x65 });
        gbc.writeMem(0xee4f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x93c1);
        EXPECT(gbc.pc(), 0xee50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b9f), 0x65);
        EXPECT(gbc.readMem(0xee4f), 0xae);
        // AE 02F2
        gbc.setState(0x3841, 0x95c1, 0x240, 0x4de3, 0xc99e, 0x4f9e, 0x0, 0x0);
        gbc.writeMem(0x3841, { 0xae });
        gbc.writeMem(0x4f9e, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x95c1);
        EXPECT(gbc.pc(), 0x3842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02F3
        gbc.setState(0xbc4, 0x92c, 0x7f90, 0xa0ef, 0x2e54, 0x7703, 0x1, 0x0);
        gbc.writeMem(0xbc4, { 0xae });
        gbc.writeMem(0x7703, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x92c);
        EXPECT(gbc.pc(), 0xbc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02F4
        gbc.setState(0x9b70, 0x1ed6, 0x8340, 0x64ee, 0xaf54, 0x1305, 0x0, 0x0);
        gbc.writeMem(0x1305, { 0xb9 });
        gbc.writeMem(0x9b70, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1ed6);
        EXPECT(gbc.pc(), 0x9b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b70), 0xae);
        // AE 02F5
        gbc.setState(0x1a53, 0x2cd8, 0x7b10, 0xcebb, 0x3bae, 0x1b72, 0x0, 0x1);
        gbc.writeMem(0x1a53, { 0xae });
        gbc.writeMem(0x1b72, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2cd8);
        EXPECT(gbc.pc(), 0x1a54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02F6
        gbc.setState(0x94d7, 0x6756, 0x7270, 0x305f, 0x316c, 0x3653, 0x0, 0x0);
        gbc.writeMem(0x3653, { 0x88 });
        gbc.writeMem(0x94d7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6756);
        EXPECT(gbc.pc(), 0x94d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d7), 0xae);
        // AE 02F7
        gbc.setState(0x633d, 0x1393, 0x6a60, 0xbc2b, 0x9e9b, 0xd130, 0x0, 0x0);
        gbc.writeMem(0x633d, { 0xae });
        gbc.writeMem(0xd130, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1393);
        EXPECT(gbc.pc(), 0x633e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd130), 0xc8);
        // AE 02F8
        gbc.setState(0x455b, 0xb29, 0x4b30, 0x7377, 0x3253, 0x6602, 0x0, 0x1);
        gbc.writeMem(0x455b, { 0xae });
        gbc.writeMem(0x6602, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb29);
        EXPECT(gbc.pc(), 0x455c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02F9
        gbc.setState(0xe6c6, 0xd43b, 0x8e70, 0xbc1f, 0x33b3, 0xc5a7, 0x1, 0x1);
        gbc.writeMem(0xc5a7, { 0x5d });
        gbc.writeMem(0xe6c6, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd43b);
        EXPECT(gbc.pc(), 0xe6c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5a7), 0x5d);
        EXPECT(gbc.readMem(0xe6c6), 0xae);
        // AE 02FA
        gbc.setState(0x2b5a, 0x9a55, 0x1400, 0x1cf0, 0xb969, 0xcf8d, 0x1, 0x0);
        gbc.writeMem(0x2b5a, { 0xae });
        gbc.writeMem(0xcf8d, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9a55);
        EXPECT(gbc.pc(), 0x2b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf8d), 0xe3);
        // AE 02FB
        gbc.setState(0xa86c, 0xe45b, 0x58f0, 0x331e, 0xf259, 0x2ef5, 0x0, 0x0);
        gbc.writeMem(0x2ef5, { 0x58 });
        gbc.writeMem(0xa86c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe45b);
        EXPECT(gbc.pc(), 0xa86d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86c), 0xae);
        // AE 02FC
        gbc.setState(0x7fb5, 0x77f, 0x6b70, 0x65da, 0xf567, 0x6bed, 0x0, 0x1);
        gbc.writeMem(0x6bed, { 0xec });
        gbc.writeMem(0x7fb5, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x77f);
        EXPECT(gbc.pc(), 0x7fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02FD
        gbc.setState(0x1a38, 0xed6c, 0xff10, 0x35b5, 0xccb4, 0x5b4d, 0x1, 0x0);
        gbc.writeMem(0x1a38, { 0xae });
        gbc.writeMem(0x5b4d, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xed6c);
        EXPECT(gbc.pc(), 0x1a39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 02FE
        gbc.setState(0x9b9a, 0x517c, 0x8310, 0xb501, 0xe045, 0x756d, 0x1, 0x1);
        gbc.writeMem(0x756d, { 0xfe });
        gbc.writeMem(0x9b9a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x517c);
        EXPECT(gbc.pc(), 0x9b9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b9a), 0xae);
        // AE 02FF
        gbc.setState(0x14a7, 0x76bd, 0x5470, 0x1f2f, 0x239c, 0x487a, 0x1, 0x1);
        gbc.writeMem(0x14a7, { 0xae });
        gbc.writeMem(0x487a, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x76bd);
        EXPECT(gbc.pc(), 0x14a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0300
        gbc.setState(0xfdd, 0x38f2, 0x7ea0, 0x7b0, 0x94c1, 0xf386, 0x1, 0x0);
        gbc.writeMem(0xfdd, { 0xae });
        gbc.writeMem(0xf386, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x38f2);
        EXPECT(gbc.pc(), 0xfde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf386), 0xb0);
        // AE 0301
        gbc.setState(0xecf2, 0x9eeb, 0x7e70, 0xc90c, 0xdef9, 0x9115, 0x1, 0x1);
        gbc.writeMem(0x9115, { 0xe5 });
        gbc.writeMem(0xecf2, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9eeb);
        EXPECT(gbc.pc(), 0xecf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9115), 0xe5);
        EXPECT(gbc.readMem(0xecf2), 0xae);
        // AE 0302
        gbc.setState(0xa746, 0x6de7, 0x66d0, 0xde33, 0xe3c0, 0x4b1e, 0x0, 0x0);
        gbc.writeMem(0x4b1e, { 0x45 });
        gbc.writeMem(0xa746, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6de7);
        EXPECT(gbc.pc(), 0xa747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa746), 0xae);
        // AE 0303
        gbc.setState(0xcf1f, 0x3965, 0xe4f0, 0xeec9, 0x4b84, 0x57fa, 0x0, 0x1);
        gbc.writeMem(0x57fa, { 0x5 });
        gbc.writeMem(0xcf1f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3965);
        EXPECT(gbc.pc(), 0xcf20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf1f), 0xae);
        // AE 0304
        gbc.setState(0xbdf0, 0xc249, 0x89e0, 0xa362, 0xf4f6, 0xb021, 0x0, 0x1);
        gbc.writeMem(0xb021, { 0x68 });
        gbc.writeMem(0xbdf0, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc249);
        EXPECT(gbc.pc(), 0xbdf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb021), 0x68);
        EXPECT(gbc.readMem(0xbdf0), 0xae);
        // AE 0305
        gbc.setState(0xd41e, 0x279c, 0xd040, 0x661b, 0x615b, 0xaf61, 0x0, 0x1);
        gbc.writeMem(0xaf61, { 0xcd });
        gbc.writeMem(0xd41e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x279c);
        EXPECT(gbc.pc(), 0xd41f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf61), 0xcd);
        EXPECT(gbc.readMem(0xd41e), 0xae);
        // AE 0306
        gbc.setState(0x70d2, 0xf90d, 0xb8f0, 0xca4d, 0x7a31, 0xdc79, 0x0, 0x1);
        gbc.writeMem(0x70d2, { 0xae });
        gbc.writeMem(0xdc79, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf90d);
        EXPECT(gbc.pc(), 0x70d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc79), 0x4f);
        // AE 0307
        gbc.setState(0xdf07, 0xf898, 0x67d0, 0x1f0f, 0x9d5c, 0x3afa, 0x1, 0x0);
        gbc.writeMem(0x3afa, { 0xf2 });
        gbc.writeMem(0xdf07, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf898);
        EXPECT(gbc.pc(), 0xdf08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf07), 0xae);
        // AE 0308
        gbc.setState(0x2fb3, 0x9c45, 0x11d0, 0x6a3b, 0xd88c, 0xebaf, 0x1, 0x1);
        gbc.writeMem(0x2fb3, { 0xae });
        gbc.writeMem(0xebaf, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9c45);
        EXPECT(gbc.pc(), 0x2fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebaf), 0xca);
        // AE 0309
        gbc.setState(0xb9e3, 0x6f, 0x9f10, 0x4ede, 0x3312, 0x6170, 0x0, 0x1);
        gbc.writeMem(0x6170, { 0x85 });
        gbc.writeMem(0xb9e3, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6f);
        EXPECT(gbc.pc(), 0xb9e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9e3), 0xae);
        // AE 030A
        gbc.setState(0x3cd3, 0x23e9, 0x1e70, 0x1b4e, 0x9678, 0x57e2, 0x0, 0x0);
        gbc.writeMem(0x3cd3, { 0xae });
        gbc.writeMem(0x57e2, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x23e9);
        EXPECT(gbc.pc(), 0x3cd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 030B
        gbc.setState(0x6985, 0xfa9b, 0xba0, 0xc1c9, 0xf5ed, 0xd04b, 0x1, 0x1);
        gbc.writeMem(0x6985, { 0xae });
        gbc.writeMem(0xd04b, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xfa9b);
        EXPECT(gbc.pc(), 0x6986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd04b), 0x6c);
        // AE 030C
        gbc.setState(0x448b, 0x68e, 0x880, 0x954a, 0x2208, 0x37c, 0x1, 0x1);
        gbc.writeMem(0x37c, { 0xa0 });
        gbc.writeMem(0x448b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x68e);
        EXPECT(gbc.pc(), 0x448c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 030D
        gbc.setState(0x14d7, 0xd095, 0x54b0, 0xe6ad, 0xdb68, 0x96c2, 0x0, 0x1);
        gbc.writeMem(0x14d7, { 0xae });
        gbc.writeMem(0x96c2, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd095);
        EXPECT(gbc.pc(), 0x14d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96c2), 0xc8);
        // AE 030E
        gbc.setState(0x34e2, 0x4f05, 0x2ca0, 0xd2c0, 0x3c8e, 0xa56a, 0x0, 0x1);
        gbc.writeMem(0x34e2, { 0xae });
        gbc.writeMem(0xa56a, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4f05);
        EXPECT(gbc.pc(), 0x34e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa56a), 0x98);
        // AE 030F
        gbc.setState(0x3c1a, 0x2048, 0x6b30, 0x8d4a, 0x1dc7, 0xa7e9, 0x1, 0x0);
        gbc.writeMem(0x3c1a, { 0xae });
        gbc.writeMem(0xa7e9, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2048);
        EXPECT(gbc.pc(), 0x3c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7e9), 0x3);
        // AE 0310
        gbc.setState(0x61b2, 0x3d0f, 0x91f0, 0x4a8b, 0x591, 0x3c63, 0x0, 0x1);
        gbc.writeMem(0x3c63, { 0xe0 });
        gbc.writeMem(0x61b2, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3d0f);
        EXPECT(gbc.pc(), 0x61b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0311
        gbc.setState(0x9db6, 0xe5cd, 0x15f0, 0xe838, 0xa91d, 0xdd67, 0x1, 0x1);
        gbc.writeMem(0x9db6, { 0xae });
        gbc.writeMem(0xdd67, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe5cd);
        EXPECT(gbc.pc(), 0x9db7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db6), 0xae);
        EXPECT(gbc.readMem(0xdd67), 0xa4);
        // AE 0312
        gbc.setState(0x3158, 0x4c82, 0x14a0, 0xe7fe, 0x1b89, 0x3a4, 0x0, 0x1);
        gbc.writeMem(0x3a4, { 0x13 });
        gbc.writeMem(0x3158, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4c82);
        EXPECT(gbc.pc(), 0x3159);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0313
        gbc.setState(0x1c63, 0xd316, 0x6e90, 0x113f, 0x81ca, 0x4118, 0x1, 0x0);
        gbc.writeMem(0x1c63, { 0xae });
        gbc.writeMem(0x4118, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd316);
        EXPECT(gbc.pc(), 0x1c64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0314
        gbc.setState(0x8604, 0x484a, 0xb610, 0xdac0, 0xa7cd, 0x35dd, 0x0, 0x1);
        gbc.writeMem(0x35dd, { 0x2 });
        gbc.writeMem(0x8604, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x484a);
        EXPECT(gbc.pc(), 0x8605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8604), 0xae);
        // AE 0315
        gbc.setState(0x6b74, 0x742f, 0x1560, 0xe136, 0xb5b8, 0xd91f, 0x0, 0x0);
        gbc.writeMem(0x6b74, { 0xae });
        gbc.writeMem(0xd91f, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x742f);
        EXPECT(gbc.pc(), 0x6b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd91f), 0xec);
        // AE 0316
        gbc.setState(0x2c80, 0x2abd, 0x3c30, 0xac8, 0x6822, 0x9955, 0x1, 0x0);
        gbc.writeMem(0x2c80, { 0xae });
        gbc.writeMem(0x9955, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2abd);
        EXPECT(gbc.pc(), 0x2c81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9955), 0x35);
        // AE 0317
        gbc.setState(0xe558, 0x828f, 0xd170, 0x79cc, 0x82c4, 0xc0ec, 0x1, 0x0);
        gbc.writeMem(0xc0ec, { 0x7c });
        gbc.writeMem(0xe558, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x828f);
        EXPECT(gbc.pc(), 0xe559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ec), 0x7c);
        EXPECT(gbc.readMem(0xe558), 0xae);
        // AE 0318
        gbc.setState(0xa831, 0xb850, 0x3e90, 0x9ca, 0x2124, 0x37d9, 0x1, 0x0);
        gbc.writeMem(0x37d9, { 0x59 });
        gbc.writeMem(0xa831, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb850);
        EXPECT(gbc.pc(), 0xa832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa831), 0xae);
        // AE 0319
        gbc.setState(0xe250, 0x591, 0xfb50, 0x23c9, 0x3a97, 0x9123, 0x0, 0x0);
        gbc.writeMem(0x9123, { 0x8 });
        gbc.writeMem(0xe250, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x591);
        EXPECT(gbc.pc(), 0xe251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9123), 0x8);
        EXPECT(gbc.readMem(0xe250), 0xae);
        // AE 031A
        gbc.setState(0xd38, 0x3718, 0xf070, 0xf215, 0x8c4c, 0x3e4d, 0x1, 0x0);
        gbc.writeMem(0xd38, { 0xae });
        gbc.writeMem(0x3e4d, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3718);
        EXPECT(gbc.pc(), 0xd39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 031B
        gbc.setState(0xbe0e, 0x7d0, 0xd260, 0xd7ba, 0x15ae, 0xe2b3, 0x1, 0x0);
        gbc.writeMem(0xbe0e, { 0xae });
        gbc.writeMem(0xe2b3, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7d0);
        EXPECT(gbc.pc(), 0xbe0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe0e), 0xae);
        EXPECT(gbc.readMem(0xe2b3), 0xe2);
        // AE 031C
        gbc.setState(0x6817, 0x5313, 0x1430, 0x1669, 0x2de3, 0x7cda, 0x1, 0x1);
        gbc.writeMem(0x6817, { 0xae });
        gbc.writeMem(0x7cda, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5313);
        EXPECT(gbc.pc(), 0x6818);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 031D
        gbc.setState(0xe9d6, 0xab2, 0xc240, 0x5c41, 0xa36b, 0x3853, 0x1, 0x0);
        gbc.writeMem(0x3853, { 0x7 });
        gbc.writeMem(0xe9d6, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xab2);
        EXPECT(gbc.pc(), 0xe9d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9d6), 0xae);
        // AE 031F
        gbc.setState(0x73cd, 0x36e3, 0x790, 0xee3c, 0x3e78, 0xd953, 0x0, 0x0);
        gbc.writeMem(0x73cd, { 0xae });
        gbc.writeMem(0xd953, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x36e3);
        EXPECT(gbc.pc(), 0x73ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd953), 0xb7);
        // AE 0320
        gbc.setState(0xe29f, 0x9881, 0x5030, 0xb51c, 0x1c5d, 0x5df8, 0x1, 0x0);
        gbc.writeMem(0x5df8, { 0x2d });
        gbc.writeMem(0xe29f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9881);
        EXPECT(gbc.pc(), 0xe2a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe29f), 0xae);
        // AE 0321
        gbc.setState(0xdd65, 0x9d4b, 0x4b30, 0x8d97, 0x78bc, 0xbdd4, 0x0, 0x1);
        gbc.writeMem(0xbdd4, { 0x1c });
        gbc.writeMem(0xdd65, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9d4b);
        EXPECT(gbc.pc(), 0xdd66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdd4), 0x1c);
        EXPECT(gbc.readMem(0xdd65), 0xae);
        // AE 0322
        gbc.setState(0xc93f, 0x1405, 0xbf40, 0xb90d, 0xf686, 0x6e82, 0x1, 0x0);
        gbc.writeMem(0x6e82, { 0xed });
        gbc.writeMem(0xc93f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1405);
        EXPECT(gbc.pc(), 0xc940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc93f), 0xae);
        // AE 0323
        gbc.setState(0x1075, 0x464e, 0x3a0, 0x5251, 0x1559, 0x90c9, 0x1, 0x1);
        gbc.writeMem(0x1075, { 0xae });
        gbc.writeMem(0x90c9, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x464e);
        EXPECT(gbc.pc(), 0x1076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c9), 0x82);
        // AE 0324
        gbc.setState(0x8460, 0xf884, 0x7260, 0xcf58, 0x8640, 0x3e13, 0x0, 0x0);
        gbc.writeMem(0x3e13, { 0xcb });
        gbc.writeMem(0x8460, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf884);
        EXPECT(gbc.pc(), 0x8461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8460), 0xae);
        // AE 0325
        gbc.setState(0x7e64, 0x96a1, 0x1340, 0x6ba1, 0x9183, 0x50aa, 0x1, 0x1);
        gbc.writeMem(0x50aa, { 0x89 });
        gbc.writeMem(0x7e64, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x96a1);
        EXPECT(gbc.pc(), 0x7e65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0326
        gbc.setState(0xccb4, 0xf960, 0xa800, 0x2184, 0xd517, 0xdef6, 0x0, 0x0);
        gbc.writeMem(0xccb4, { 0xae });
        gbc.writeMem(0xdef6, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf960);
        EXPECT(gbc.pc(), 0xccb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccb4), 0xae);
        EXPECT(gbc.readMem(0xdef6), 0xa0);
        // AE 0327
        gbc.setState(0x1b31, 0x9fa6, 0xad20, 0x81d3, 0x9af, 0x1894, 0x1, 0x1);
        gbc.writeMem(0x1894, { 0x96 });
        gbc.writeMem(0x1b31, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9fa6);
        EXPECT(gbc.pc(), 0x1b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0328
        gbc.setState(0xb0ea, 0xedb8, 0x4d0, 0xb7d9, 0x351f, 0x1128, 0x1, 0x1);
        gbc.writeMem(0x1128, { 0xcd });
        gbc.writeMem(0xb0ea, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xedb8);
        EXPECT(gbc.pc(), 0xb0eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ea), 0xae);
        // AE 0329
        gbc.setState(0x2d76, 0x6e42, 0xb4a0, 0x1222, 0x4c2c, 0xe874, 0x0, 0x0);
        gbc.writeMem(0x2d76, { 0xae });
        gbc.writeMem(0xe874, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6e42);
        EXPECT(gbc.pc(), 0x2d77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe874), 0x32);
        // AE 032A
        gbc.setState(0x2584, 0xbcbf, 0x2980, 0x13f8, 0x5449, 0xab31, 0x0, 0x1);
        gbc.writeMem(0x2584, { 0xae });
        gbc.writeMem(0xab31, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbcbf);
        EXPECT(gbc.pc(), 0x2585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab31), 0x56);
        // AE 032B
        gbc.setState(0x5f69, 0x4123, 0xccb0, 0xde83, 0x662f, 0x4c1b, 0x0, 0x0);
        gbc.writeMem(0x4c1b, { 0x57 });
        gbc.writeMem(0x5f69, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4123);
        EXPECT(gbc.pc(), 0x5f6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 032C
        gbc.setState(0xb709, 0x53ab, 0x40a0, 0x335e, 0xf084, 0x3f21, 0x0, 0x1);
        gbc.writeMem(0x3f21, { 0xf5 });
        gbc.writeMem(0xb709, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x53ab);
        EXPECT(gbc.pc(), 0xb70a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb709), 0xae);
        // AE 032D
        gbc.setState(0x62d, 0x7ab4, 0xa280, 0x5df7, 0x9e4b, 0xbbc, 0x0, 0x0);
        gbc.writeMem(0x62d, { 0xae });
        gbc.writeMem(0xbbc, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7ab4);
        EXPECT(gbc.pc(), 0x62e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 032E
        gbc.setState(0x4c11, 0x855, 0x6a0, 0xd387, 0xe7cf, 0x9764, 0x0, 0x0);
        gbc.writeMem(0x4c11, { 0xae });
        gbc.writeMem(0x9764, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x855);
        EXPECT(gbc.pc(), 0x4c12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9764), 0x21);
        // AE 032F
        gbc.setState(0xa306, 0x36ed, 0x1c90, 0xb953, 0x7b6a, 0x3953, 0x1, 0x1);
        gbc.writeMem(0x3953, { 0xa5 });
        gbc.writeMem(0xa306, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x36ed);
        EXPECT(gbc.pc(), 0xa307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa306), 0xae);
        // AE 0330
        gbc.setState(0x4252, 0xd416, 0x6cf0, 0xc7a7, 0xf6a8, 0x775c, 0x1, 0x0);
        gbc.writeMem(0x4252, { 0xae });
        gbc.writeMem(0x775c, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd416);
        EXPECT(gbc.pc(), 0x4253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0331
        gbc.setState(0x7660, 0xc2f4, 0x6260, 0x2bdf, 0x9d1c, 0x5054, 0x0, 0x0);
        gbc.writeMem(0x5054, { 0x32 });
        gbc.writeMem(0x7660, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc2f4);
        EXPECT(gbc.pc(), 0x7661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0332
        gbc.setState(0xaaec, 0x8ec9, 0x7a90, 0x6f3a, 0x2a69, 0x4e09, 0x0, 0x0);
        gbc.writeMem(0x4e09, { 0x24 });
        gbc.writeMem(0xaaec, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8ec9);
        EXPECT(gbc.pc(), 0xaaed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaec), 0xae);
        // AE 0333
        gbc.setState(0x32d9, 0x6f9f, 0xfc0, 0xf3dd, 0x219, 0x96ab, 0x1, 0x1);
        gbc.writeMem(0x32d9, { 0xae });
        gbc.writeMem(0x96ab, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6f9f);
        EXPECT(gbc.pc(), 0x32da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ab), 0xbb);
        // AE 0334
        gbc.setState(0xabb0, 0xbac2, 0xb430, 0x729b, 0x77, 0xe21f, 0x1, 0x1);
        gbc.writeMem(0xabb0, { 0xae });
        gbc.writeMem(0xe21f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbac2);
        EXPECT(gbc.pc(), 0xabb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb0), 0xae);
        EXPECT(gbc.readMem(0xe21f), 0xc0);
        // AE 0335
        gbc.setState(0x2493, 0x8d1e, 0x8ea0, 0x1d5a, 0xdf31, 0x4a3d, 0x1, 0x1);
        gbc.writeMem(0x2493, { 0xae });
        gbc.writeMem(0x4a3d, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8d1e);
        EXPECT(gbc.pc(), 0x2494);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0336
        gbc.setState(0xd2eb, 0xd4b5, 0xef10, 0x3a0d, 0x9a42, 0xc017, 0x1, 0x1);
        gbc.writeMem(0xc017, { 0xda });
        gbc.writeMem(0xd2eb, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd4b5);
        EXPECT(gbc.pc(), 0xd2ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc017), 0xda);
        EXPECT(gbc.readMem(0xd2eb), 0xae);
        // AE 0337
        gbc.setState(0x9fdf, 0xccb9, 0xf490, 0xd4b3, 0x175a, 0xecd3, 0x1, 0x1);
        gbc.writeMem(0x9fdf, { 0xae });
        gbc.writeMem(0xecd3, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xccb9);
        EXPECT(gbc.pc(), 0x9fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fdf), 0xae);
        EXPECT(gbc.readMem(0xecd3), 0xca);
        // AE 0338
        gbc.setState(0xbd78, 0x5be7, 0x26b0, 0x659a, 0xb9cf, 0xcd1e, 0x1, 0x0);
        gbc.writeMem(0xbd78, { 0xae });
        gbc.writeMem(0xcd1e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5be7);
        EXPECT(gbc.pc(), 0xbd79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd78), 0xae);
        EXPECT(gbc.readMem(0xcd1e), 0xbe);
        // AE 0339
        gbc.setState(0x2970, 0xe1e9, 0x1e90, 0xf2bf, 0xbc8e, 0xe87b, 0x1, 0x0);
        gbc.writeMem(0x2970, { 0xae });
        gbc.writeMem(0xe87b, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe1e9);
        EXPECT(gbc.pc(), 0x2971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe87b), 0xfc);
        // AE 033A
        gbc.setState(0x4842, 0xaba5, 0x5d00, 0xb6f7, 0x8802, 0x7bf8, 0x0, 0x1);
        gbc.writeMem(0x4842, { 0xae });
        gbc.writeMem(0x7bf8, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xaba5);
        EXPECT(gbc.pc(), 0x4843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 033B
        gbc.setState(0x805e, 0x1c8c, 0xc830, 0x543c, 0x21a5, 0xfbb9, 0x0, 0x0);
        gbc.writeMem(0x805e, { 0xae });
        gbc.writeMem(0xfbb9, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1c8c);
        EXPECT(gbc.pc(), 0x805f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x805e), 0xae);
        EXPECT(gbc.readMem(0xfbb9), 0x15);
        // AE 033C
        gbc.setState(0xaf44, 0xb43f, 0x1bb0, 0x433e, 0x5fe6, 0x4261, 0x0, 0x1);
        gbc.writeMem(0x4261, { 0xe3 });
        gbc.writeMem(0xaf44, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb43f);
        EXPECT(gbc.pc(), 0xaf45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf44), 0xae);
        // AE 033D
        gbc.setState(0x9b16, 0xb805, 0x26c0, 0xdd0a, 0x72e5, 0x318a, 0x0, 0x1);
        gbc.writeMem(0x318a, { 0x20 });
        gbc.writeMem(0x9b16, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb805);
        EXPECT(gbc.pc(), 0x9b17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b16), 0xae);
        // AE 033E
        gbc.setState(0x892b, 0xa81c, 0x29c0, 0x74ce, 0xc54c, 0xc955, 0x0, 0x1);
        gbc.writeMem(0x892b, { 0xae });
        gbc.writeMem(0xc955, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa81c);
        EXPECT(gbc.pc(), 0x892c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x892b), 0xae);
        EXPECT(gbc.readMem(0xc955), 0x56);
        // AE 033F
        gbc.setState(0x5946, 0x9542, 0x21e0, 0x916d, 0x3c40, 0x115c, 0x1, 0x1);
        gbc.writeMem(0x115c, { 0x2f });
        gbc.writeMem(0x5946, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9542);
        EXPECT(gbc.pc(), 0x5947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0340
        gbc.setState(0x8f4a, 0xbdda, 0xb600, 0xf245, 0x834f, 0xed60, 0x0, 0x1);
        gbc.writeMem(0x8f4a, { 0xae });
        gbc.writeMem(0xed60, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xbdda);
        EXPECT(gbc.pc(), 0x8f4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f4a), 0xae);
        EXPECT(gbc.readMem(0xed60), 0x3a);
        // AE 0341
        gbc.setState(0xbe9b, 0x96c3, 0xb930, 0x2e4a, 0x19a1, 0xffaa, 0x1, 0x0);
        gbc.writeMem(0xbe9b, { 0xae });
        gbc.writeMem(0xffaa, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x96c3);
        EXPECT(gbc.pc(), 0xbe9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe9b), 0xae);
        EXPECT(gbc.readMem(0xffaa), 0x24);
        // AE 0342
        gbc.setState(0x4410, 0xd139, 0x2e70, 0xb710, 0x23f6, 0xd07c, 0x1, 0x1);
        gbc.writeMem(0x4410, { 0xae });
        gbc.writeMem(0xd07c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd139);
        EXPECT(gbc.pc(), 0x4411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd07c), 0x83);
        // AE 0343
        gbc.setState(0x694e, 0x49fe, 0xfaf0, 0x18b1, 0x3a40, 0x99fc, 0x0, 0x1);
        gbc.writeMem(0x694e, { 0xae });
        gbc.writeMem(0x99fc, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x49fe);
        EXPECT(gbc.pc(), 0x694f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99fc), 0xac);
        // AE 0344
        gbc.setState(0xc24c, 0x81dc, 0xb760, 0x79b2, 0x840d, 0xf7e0, 0x0, 0x1);
        gbc.writeMem(0xc24c, { 0xae });
        gbc.writeMem(0xf7e0, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x81dc);
        EXPECT(gbc.pc(), 0xc24d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc24c), 0xae);
        EXPECT(gbc.readMem(0xf7e0), 0xcf);
        // AE 0345
        gbc.setState(0xc111, 0x728f, 0x1890, 0x8d54, 0xbdc0, 0x2fb2, 0x0, 0x0);
        gbc.writeMem(0x2fb2, { 0x7b });
        gbc.writeMem(0xc111, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x728f);
        EXPECT(gbc.pc(), 0xc112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc111), 0xae);
        // AE 0346
        gbc.setState(0xe3f9, 0xcfb8, 0x7b00, 0xd793, 0xf98b, 0x94ae, 0x1, 0x1);
        gbc.writeMem(0x94ae, { 0x74 });
        gbc.writeMem(0xe3f9, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xcfb8);
        EXPECT(gbc.pc(), 0xe3fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ae), 0x74);
        EXPECT(gbc.readMem(0xe3f9), 0xae);
        // AE 0347
        gbc.setState(0x8271, 0xc7c2, 0xa990, 0x4227, 0x90e5, 0x9584, 0x0, 0x0);
        gbc.writeMem(0x8271, { 0xae });
        gbc.writeMem(0x9584, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc7c2);
        EXPECT(gbc.pc(), 0x8272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8271), 0xae);
        EXPECT(gbc.readMem(0x9584), 0x93);
        // AE 0348
        gbc.setState(0x40aa, 0x2303, 0x7120, 0x4059, 0x72ea, 0xfab5, 0x1, 0x1);
        gbc.writeMem(0x40aa, { 0xae });
        gbc.writeMem(0xfab5, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2303);
        EXPECT(gbc.pc(), 0x40ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfab5), 0x6f);
        // AE 0349
        gbc.setState(0xd32b, 0xd8d, 0xd5b0, 0xb032, 0x1d17, 0x193e, 0x1, 0x0);
        gbc.writeMem(0x193e, { 0xc });
        gbc.writeMem(0xd32b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd8d);
        EXPECT(gbc.pc(), 0xd32c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd32b), 0xae);
        // AE 034A
        gbc.setState(0x1495, 0x2924, 0x31f0, 0xb5d2, 0x7fc2, 0x93fa, 0x0, 0x0);
        gbc.writeMem(0x1495, { 0xae });
        gbc.writeMem(0x93fa, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2924);
        EXPECT(gbc.pc(), 0x1496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93fa), 0xfe);
        // AE 034B
        gbc.setState(0xe870, 0xa572, 0xc220, 0x4585, 0xe330, 0x5305, 0x0, 0x1);
        gbc.writeMem(0x5305, { 0x51 });
        gbc.writeMem(0xe870, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa572);
        EXPECT(gbc.pc(), 0xe871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe870), 0xae);
        // AE 034C
        gbc.setState(0x53e7, 0xd1f, 0xf1e0, 0x9681, 0xa079, 0x8d72, 0x1, 0x0);
        gbc.writeMem(0x53e7, { 0xae });
        gbc.writeMem(0x8d72, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd1f);
        EXPECT(gbc.pc(), 0x53e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d72), 0x4);
        // AE 034D
        gbc.setState(0x62fa, 0x8bf4, 0x5140, 0xf4b9, 0x9565, 0xad93, 0x0, 0x1);
        gbc.writeMem(0x62fa, { 0xae });
        gbc.writeMem(0xad93, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8bf4);
        EXPECT(gbc.pc(), 0x62fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad93), 0x62);
        // AE 034E
        gbc.setState(0xc972, 0xd80a, 0xb970, 0x6623, 0xe8c8, 0xf496, 0x1, 0x1);
        gbc.writeMem(0xc972, { 0xae });
        gbc.writeMem(0xf496, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd80a);
        EXPECT(gbc.pc(), 0xc973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc972), 0xae);
        EXPECT(gbc.readMem(0xf496), 0x96);
        // AE 034F
        gbc.setState(0x7081, 0x83ed, 0xe660, 0x9cfb, 0x4b7a, 0x94d8, 0x1, 0x1);
        gbc.writeMem(0x7081, { 0xae });
        gbc.writeMem(0x94d8, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x83ed);
        EXPECT(gbc.pc(), 0x7082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d8), 0xec);
        // AE 0350
        gbc.setState(0xbbcd, 0x73a, 0xa0a0, 0xcfee, 0x8a03, 0x5988, 0x1, 0x1);
        gbc.writeMem(0x5988, { 0x47 });
        gbc.writeMem(0xbbcd, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x73a);
        EXPECT(gbc.pc(), 0xbbce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbcd), 0xae);
        // AE 0351
        gbc.setState(0x46f6, 0x1231, 0x4f80, 0x8c82, 0x7f03, 0x707, 0x0, 0x1);
        gbc.writeMem(0x707, { 0x5f });
        gbc.writeMem(0x46f6, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1231);
        EXPECT(gbc.pc(), 0x46f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0352
        gbc.setState(0x5c3c, 0x95f3, 0x470, 0xe96b, 0xbae7, 0x9df9, 0x1, 0x1);
        gbc.writeMem(0x5c3c, { 0xae });
        gbc.writeMem(0x9df9, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x95f3);
        EXPECT(gbc.pc(), 0x5c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df9), 0x1c);
        // AE 0353
        gbc.setState(0x2eae, 0x6311, 0x1950, 0x7611, 0xf04f, 0x6f51, 0x1, 0x0);
        gbc.writeMem(0x2eae, { 0xae });
        gbc.writeMem(0x6f51, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6311);
        EXPECT(gbc.pc(), 0x2eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0354
        gbc.setState(0x1846, 0x649c, 0xd210, 0x865e, 0xd7da, 0x3b1d, 0x1, 0x0);
        gbc.writeMem(0x1846, { 0xae });
        gbc.writeMem(0x3b1d, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x649c);
        EXPECT(gbc.pc(), 0x1847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0355
        gbc.setState(0x2a90, 0x8b93, 0xcc30, 0x3ec7, 0xd068, 0xbe9, 0x1, 0x0);
        gbc.writeMem(0xbe9, { 0xb1 });
        gbc.writeMem(0x2a90, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8b93);
        EXPECT(gbc.pc(), 0x2a91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0356
        gbc.setState(0xe6b3, 0x343d, 0xbfa0, 0x4123, 0xc290, 0xbca, 0x0, 0x0);
        gbc.writeMem(0xbca, { 0x95 });
        gbc.writeMem(0xe6b3, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x343d);
        EXPECT(gbc.pc(), 0xe6b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6b3), 0xae);
        // AE 0357
        gbc.setState(0x51b5, 0x5f01, 0x7030, 0x4512, 0x5af1, 0xf5e2, 0x1, 0x1);
        gbc.writeMem(0x51b5, { 0xae });
        gbc.writeMem(0xf5e2, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5f01);
        EXPECT(gbc.pc(), 0x51b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf5e2), 0x66);
        // AE 0358
        gbc.setState(0xeaa, 0xe92b, 0x4590, 0x5e10, 0xb10d, 0xf891, 0x1, 0x1);
        gbc.writeMem(0xeaa, { 0xae });
        gbc.writeMem(0xf891, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe92b);
        EXPECT(gbc.pc(), 0xeab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf891), 0xf4);
        // AE 0359
        gbc.setState(0xebd5, 0x8bc0, 0x890, 0x86ea, 0x4960, 0x5623, 0x0, 0x1);
        gbc.writeMem(0x5623, { 0xb0 });
        gbc.writeMem(0xebd5, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8bc0);
        EXPECT(gbc.pc(), 0xebd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd5), 0xae);
        // AE 035A
        gbc.setState(0xec07, 0x2fef, 0x32e0, 0xafdc, 0x556d, 0xa01, 0x1, 0x1);
        gbc.writeMem(0xa01, { 0xb6 });
        gbc.writeMem(0xec07, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2fef);
        EXPECT(gbc.pc(), 0xec08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec07), 0xae);
        // AE 035B
        gbc.setState(0x9ef0, 0xad80, 0x8ea0, 0xf415, 0xffe1, 0x7858, 0x0, 0x0);
        gbc.writeMem(0x7858, { 0xc1 });
        gbc.writeMem(0x9ef0, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xad80);
        EXPECT(gbc.pc(), 0x9ef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ef0), 0xae);
        // AE 035D
        gbc.setState(0xbfd6, 0x88e, 0x5ce0, 0xfa56, 0x856c, 0xac93, 0x0, 0x0);
        gbc.writeMem(0xac93, { 0x12 });
        gbc.writeMem(0xbfd6, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x88e);
        EXPECT(gbc.pc(), 0xbfd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac93), 0x12);
        EXPECT(gbc.readMem(0xbfd6), 0xae);
        // AE 035E
        gbc.setState(0x8559, 0xd7c1, 0xc60, 0xbcc, 0xe124, 0xd2df, 0x0, 0x0);
        gbc.writeMem(0x8559, { 0xae });
        gbc.writeMem(0xd2df, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd7c1);
        EXPECT(gbc.pc(), 0x855a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8559), 0xae);
        EXPECT(gbc.readMem(0xd2df), 0xb2);
        // AE 035F
        gbc.setState(0xb1dc, 0x21b9, 0xff50, 0xbe38, 0xcd00, 0x2640, 0x0, 0x1);
        gbc.writeMem(0x2640, { 0x2a });
        gbc.writeMem(0xb1dc, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x21b9);
        EXPECT(gbc.pc(), 0xb1dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1dc), 0xae);
        // AE 0360
        gbc.setState(0x1e01, 0x9698, 0xb870, 0xbbfe, 0xd8e, 0x970e, 0x0, 0x0);
        gbc.writeMem(0x1e01, { 0xae });
        gbc.writeMem(0x970e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9698);
        EXPECT(gbc.pc(), 0x1e02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x970e), 0x96);
        // AE 0361
        gbc.setState(0xb4f9, 0x276d, 0x74e0, 0xabe5, 0x8f63, 0x156e, 0x1, 0x1);
        gbc.writeMem(0x156e, { 0xa9 });
        gbc.writeMem(0xb4f9, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x276d);
        EXPECT(gbc.pc(), 0xb4fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f9), 0xae);
        // AE 0362
        gbc.setState(0xd66c, 0x4a8e, 0xef30, 0xae33, 0xd57a, 0xddd7, 0x0, 0x1);
        gbc.writeMem(0xd66c, { 0xae });
        gbc.writeMem(0xddd7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4a8e);
        EXPECT(gbc.pc(), 0xd66d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd66c), 0xae);
        EXPECT(gbc.readMem(0xddd7), 0x58);
        // AE 0363
        gbc.setState(0xd053, 0x914a, 0xd280, 0x2a86, 0x46a4, 0x5267, 0x1, 0x0);
        gbc.writeMem(0x5267, { 0xd5 });
        gbc.writeMem(0xd053, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x914a);
        EXPECT(gbc.pc(), 0xd054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd053), 0xae);
        // AE 0364
        gbc.setState(0xb5c5, 0x4860, 0x58f0, 0x5afd, 0x1a3c, 0xca26, 0x1, 0x0);
        gbc.writeMem(0xb5c5, { 0xae });
        gbc.writeMem(0xca26, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4860);
        EXPECT(gbc.pc(), 0xb5c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c5), 0xae);
        EXPECT(gbc.readMem(0xca26), 0xf0);
        // AE 0365
        gbc.setState(0xa413, 0x108d, 0xbf90, 0xbf73, 0x98a5, 0x7ad7, 0x0, 0x1);
        gbc.writeMem(0x7ad7, { 0x2a });
        gbc.writeMem(0xa413, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x108d);
        EXPECT(gbc.pc(), 0xa414);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa413), 0xae);
        // AE 0366
        gbc.setState(0x5f9e, 0xfd03, 0x2260, 0xd20f, 0xf052, 0x7b8c, 0x1, 0x1);
        gbc.writeMem(0x5f9e, { 0xae });
        gbc.writeMem(0x7b8c, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xfd03);
        EXPECT(gbc.pc(), 0x5f9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0367
        gbc.setState(0xe750, 0x72a5, 0x9fd0, 0x2ec7, 0xca31, 0x3a66, 0x1, 0x0);
        gbc.writeMem(0x3a66, { 0xa3 });
        gbc.writeMem(0xe750, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x72a5);
        EXPECT(gbc.pc(), 0xe751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe750), 0xae);
        // AE 0368
        gbc.setState(0x79b5, 0x5d8d, 0x7ec0, 0xf38a, 0x6b6e, 0xa88d, 0x1, 0x1);
        gbc.writeMem(0x79b5, { 0xae });
        gbc.writeMem(0xa88d, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5d8d);
        EXPECT(gbc.pc(), 0x79b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88d), 0xbd);
        // AE 0369
        gbc.setState(0xc5ae, 0x5cb8, 0x6dd0, 0xdfa5, 0x1485, 0x5483, 0x1, 0x0);
        gbc.writeMem(0x5483, { 0xa0 });
        gbc.writeMem(0xc5ae, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5cb8);
        EXPECT(gbc.pc(), 0xc5af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ae), 0xae);
        // AE 036A
        gbc.setState(0x4f34, 0x6dfd, 0xab0, 0xa8f7, 0x9e36, 0x6a3, 0x0, 0x1);
        gbc.writeMem(0x6a3, { 0x9a });
        gbc.writeMem(0x4f34, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6dfd);
        EXPECT(gbc.pc(), 0x4f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 036C
        gbc.setState(0xb58, 0x1334, 0xc1f0, 0x333, 0xa4e2, 0x7b03, 0x1, 0x0);
        gbc.writeMem(0xb58, { 0xae });
        gbc.writeMem(0x7b03, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1334);
        EXPECT(gbc.pc(), 0xb59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 036E
        gbc.setState(0x1416, 0x86e2, 0x3bf0, 0xf027, 0x46a6, 0x51f2, 0x1, 0x0);
        gbc.writeMem(0x1416, { 0xae });
        gbc.writeMem(0x51f2, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x86e2);
        EXPECT(gbc.pc(), 0x1417);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 036F
        gbc.setState(0xc111, 0x1556, 0x55b0, 0x4770, 0x7326, 0x9efd, 0x0, 0x1);
        gbc.writeMem(0x9efd, { 0x35 });
        gbc.writeMem(0xc111, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1556);
        EXPECT(gbc.pc(), 0xc112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9efd), 0x35);
        EXPECT(gbc.readMem(0xc111), 0xae);
        // AE 0370
        gbc.setState(0xc127, 0x69c, 0xac80, 0xd693, 0xb0c8, 0x76a6, 0x1, 0x1);
        gbc.writeMem(0x76a6, { 0xf1 });
        gbc.writeMem(0xc127, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x69c);
        EXPECT(gbc.pc(), 0xc128);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc127), 0xae);
        // AE 0371
        gbc.setState(0x21a3, 0xedd8, 0xd2c0, 0x24e8, 0x9b37, 0x9c74, 0x0, 0x1);
        gbc.writeMem(0x21a3, { 0xae });
        gbc.writeMem(0x9c74, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xedd8);
        EXPECT(gbc.pc(), 0x21a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c74), 0xc2);
        // AE 0372
        gbc.setState(0x3a31, 0xc2d0, 0xc10, 0x401f, 0x16d8, 0xba0, 0x1, 0x1);
        gbc.writeMem(0xba0, { 0x72 });
        gbc.writeMem(0x3a31, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc2d0);
        EXPECT(gbc.pc(), 0x3a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0373
        gbc.setState(0x9538, 0x2186, 0x2780, 0x1c8a, 0xe398, 0x62ec, 0x0, 0x1);
        gbc.writeMem(0x62ec, { 0x7a });
        gbc.writeMem(0x9538, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2186);
        EXPECT(gbc.pc(), 0x9539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9538), 0xae);
        // AE 0374
        gbc.setState(0x35e9, 0x74e7, 0x6670, 0xa8db, 0xa415, 0x158, 0x1, 0x1);
        gbc.writeMem(0x158, { 0x0 });
        gbc.writeMem(0x35e9, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x74e7);
        EXPECT(gbc.pc(), 0x35ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0375
        gbc.setState(0x4b24, 0x6582, 0x79d0, 0x1362, 0xa2a8, 0xcb2b, 0x1, 0x1);
        gbc.writeMem(0x4b24, { 0xae });
        gbc.writeMem(0xcb2b, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6582);
        EXPECT(gbc.pc(), 0x4b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb2b), 0xd);
        // AE 0376
        gbc.setState(0x9a91, 0x14b2, 0xa9b0, 0x7add, 0xd37, 0x5052, 0x1, 0x0);
        gbc.writeMem(0x5052, { 0x14 });
        gbc.writeMem(0x9a91, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x14b2);
        EXPECT(gbc.pc(), 0x9a92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a91), 0xae);
        // AE 0377
        gbc.setState(0x7c0c, 0xa061, 0x5160, 0x3af2, 0xe83e, 0x5e7e, 0x1, 0x1);
        gbc.writeMem(0x5e7e, { 0xba });
        gbc.writeMem(0x7c0c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa061);
        EXPECT(gbc.pc(), 0x7c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0378
        gbc.setState(0x3427, 0xefbd, 0x7130, 0x806, 0xd282, 0x168b, 0x0, 0x0);
        gbc.writeMem(0x168b, { 0xd2 });
        gbc.writeMem(0x3427, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xefbd);
        EXPECT(gbc.pc(), 0x3428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0379
        gbc.setState(0x227c, 0x54ad, 0xfa30, 0xdcdd, 0x9219, 0xa85f, 0x0, 0x0);
        gbc.writeMem(0x227c, { 0xae });
        gbc.writeMem(0xa85f, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x54ad);
        EXPECT(gbc.pc(), 0x227d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa85f), 0xf8);
        // AE 037A
        gbc.setState(0xe9ca, 0x94bd, 0xa4d0, 0xc048, 0x314, 0x7475, 0x1, 0x1);
        gbc.writeMem(0x7475, { 0xe1 });
        gbc.writeMem(0xe9ca, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x94bd);
        EXPECT(gbc.pc(), 0xe9cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ca), 0xae);
        // AE 037B
        gbc.setState(0xec3e, 0x7ed8, 0x4ef0, 0xb843, 0x4820, 0x100d, 0x0, 0x1);
        gbc.writeMem(0x100d, { 0xa7 });
        gbc.writeMem(0xec3e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7ed8);
        EXPECT(gbc.pc(), 0xec3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec3e), 0xae);
        // AE 037D
        gbc.setState(0x933e, 0xb734, 0xf110, 0xed11, 0xa1a4, 0xd4c7, 0x1, 0x1);
        gbc.writeMem(0x933e, { 0xae });
        gbc.writeMem(0xd4c7, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb734);
        EXPECT(gbc.pc(), 0x933f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x933e), 0xae);
        EXPECT(gbc.readMem(0xd4c7), 0xce);
        // AE 037E
        gbc.setState(0xb170, 0xb42e, 0x84e0, 0x1ad7, 0x93b3, 0x708d, 0x0, 0x1);
        gbc.writeMem(0x708d, { 0x16 });
        gbc.writeMem(0xb170, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb42e);
        EXPECT(gbc.pc(), 0xb171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb170), 0xae);
        // AE 037F
        gbc.setState(0x15e6, 0xde6a, 0x6e30, 0xaf08, 0x5d60, 0xebd9, 0x1, 0x1);
        gbc.writeMem(0x15e6, { 0xae });
        gbc.writeMem(0xebd9, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xde6a);
        EXPECT(gbc.pc(), 0x15e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd9), 0x65);
        // AE 0380
        gbc.setState(0xb50c, 0xa0ce, 0x40b0, 0x30e8, 0xc46f, 0x4ddc, 0x1, 0x1);
        gbc.writeMem(0x4ddc, { 0xfb });
        gbc.writeMem(0xb50c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa0ce);
        EXPECT(gbc.pc(), 0xb50d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb50c), 0xae);
        // AE 0381
        gbc.setState(0x78cf, 0xaf0b, 0x3170, 0xfd76, 0x66ac, 0x4fcf, 0x1, 0x1);
        gbc.writeMem(0x4fcf, { 0x54 });
        gbc.writeMem(0x78cf, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xaf0b);
        EXPECT(gbc.pc(), 0x78d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0382
        gbc.setState(0x68a9, 0xd52, 0xe8a0, 0x2897, 0xef94, 0xca64, 0x0, 0x1);
        gbc.writeMem(0x68a9, { 0xae });
        gbc.writeMem(0xca64, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd52);
        EXPECT(gbc.pc(), 0x68aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca64), 0xd5);
        // AE 0383
        gbc.setState(0x8cc2, 0xb876, 0xc1a0, 0x85e3, 0xb32b, 0x6b0b, 0x0, 0x1);
        gbc.writeMem(0x6b0b, { 0x3a });
        gbc.writeMem(0x8cc2, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb876);
        EXPECT(gbc.pc(), 0x8cc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cc2), 0xae);
        // AE 0384
        gbc.setState(0xae8, 0xc864, 0x3790, 0x38d5, 0x208a, 0x18a6, 0x0, 0x1);
        gbc.writeMem(0xae8, { 0xae });
        gbc.writeMem(0x18a6, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc864);
        EXPECT(gbc.pc(), 0xae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0385
        gbc.setState(0x5028, 0x7096, 0x8ae0, 0xc93a, 0x16fb, 0x2e17, 0x1, 0x1);
        gbc.writeMem(0x2e17, { 0xfd });
        gbc.writeMem(0x5028, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7096);
        EXPECT(gbc.pc(), 0x5029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0386
        gbc.setState(0xbb19, 0x7457, 0xd3d0, 0x40cc, 0xa497, 0xd186, 0x1, 0x1);
        gbc.writeMem(0xbb19, { 0xae });
        gbc.writeMem(0xd186, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7457);
        EXPECT(gbc.pc(), 0xbb1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb19), 0xae);
        EXPECT(gbc.readMem(0xd186), 0xa2);
        // AE 0387
        gbc.setState(0xad4e, 0xa9fb, 0xa390, 0xac68, 0xbfc5, 0xbde9, 0x1, 0x0);
        gbc.writeMem(0xad4e, { 0xae });
        gbc.writeMem(0xbde9, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa9fb);
        EXPECT(gbc.pc(), 0xad4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad4e), 0xae);
        EXPECT(gbc.readMem(0xbde9), 0xac);
        // AE 0388
        gbc.setState(0x42da, 0x7db4, 0xf890, 0x17f, 0x70a0, 0x9cf0, 0x0, 0x1);
        gbc.writeMem(0x42da, { 0xae });
        gbc.writeMem(0x9cf0, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7db4);
        EXPECT(gbc.pc(), 0x42db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf0), 0x94);
        // AE 0389
        gbc.setState(0xdd4a, 0x45b3, 0xe890, 0xc7de, 0xcbf3, 0x9e65, 0x0, 0x1);
        gbc.writeMem(0x9e65, { 0x95 });
        gbc.writeMem(0xdd4a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x45b3);
        EXPECT(gbc.pc(), 0xdd4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e65), 0x95);
        EXPECT(gbc.readMem(0xdd4a), 0xae);
        // AE 038A
        gbc.setState(0x8696, 0x578c, 0xc730, 0x5894, 0xb9dc, 0xf20c, 0x0, 0x1);
        gbc.writeMem(0x8696, { 0xae });
        gbc.writeMem(0xf20c, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x578c);
        EXPECT(gbc.pc(), 0x8697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8696), 0xae);
        EXPECT(gbc.readMem(0xf20c), 0x28);
        // AE 038B
        gbc.setState(0xac74, 0xac2f, 0x3740, 0xe02b, 0x3281, 0x1703, 0x1, 0x1);
        gbc.writeMem(0x1703, { 0xa0 });
        gbc.writeMem(0xac74, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xac2f);
        EXPECT(gbc.pc(), 0xac75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac74), 0xae);
        // AE 038C
        gbc.setState(0x3648, 0x6cac, 0x3340, 0x54da, 0xab53, 0xc60a, 0x1, 0x1);
        gbc.writeMem(0x3648, { 0xae });
        gbc.writeMem(0xc60a, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6cac);
        EXPECT(gbc.pc(), 0x3649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc60a), 0xa1);
        // AE 038D
        gbc.setState(0x531f, 0x7c4b, 0x2bf0, 0xb33b, 0x74f9, 0xb12, 0x1, 0x0);
        gbc.writeMem(0xb12, { 0x3 });
        gbc.writeMem(0x531f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7c4b);
        EXPECT(gbc.pc(), 0x5320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 038E
        gbc.setState(0x5ff9, 0x553a, 0x4520, 0xfd61, 0x894, 0x75f3, 0x1, 0x1);
        gbc.writeMem(0x5ff9, { 0xae });
        gbc.writeMem(0x75f3, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x553a);
        EXPECT(gbc.pc(), 0x5ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 038F
        gbc.setState(0x909a, 0x2944, 0xe0a0, 0x2825, 0x902c, 0xe81c, 0x1, 0x0);
        gbc.writeMem(0x909a, { 0xae });
        gbc.writeMem(0xe81c, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2944);
        EXPECT(gbc.pc(), 0x909b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909a), 0xae);
        EXPECT(gbc.readMem(0xe81c), 0x48);
        // AE 0391
        gbc.setState(0xed4, 0xe1e7, 0x35f0, 0xc3bb, 0x506, 0x749c, 0x1, 0x1);
        gbc.writeMem(0xed4, { 0xae });
        gbc.writeMem(0x749c, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe1e7);
        EXPECT(gbc.pc(), 0xed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0392
        gbc.setState(0xc446, 0x9f3f, 0xe50, 0x7bc9, 0x1fa7, 0xfcd, 0x1, 0x0);
        gbc.writeMem(0xfcd, { 0x15 });
        gbc.writeMem(0xc446, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9f3f);
        EXPECT(gbc.pc(), 0xc447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc446), 0xae);
        // AE 0393
        gbc.setState(0x70c0, 0x7fc7, 0xfaa0, 0x3f83, 0xa978, 0x9b93, 0x0, 0x1);
        gbc.writeMem(0x70c0, { 0xae });
        gbc.writeMem(0x9b93, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7fc7);
        EXPECT(gbc.pc(), 0x70c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b93), 0xc1);
        // AE 0394
        gbc.setState(0x1434, 0x412b, 0x1360, 0x1d1e, 0xcc11, 0x6c35, 0x0, 0x0);
        gbc.writeMem(0x1434, { 0xae });
        gbc.writeMem(0x6c35, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x412b);
        EXPECT(gbc.pc(), 0x1435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 0395
        gbc.setState(0xd9f0, 0x3271, 0xef30, 0x7b4, 0xd243, 0x7706, 0x1, 0x1);
        gbc.writeMem(0x7706, { 0xcc });
        gbc.writeMem(0xd9f0, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3271);
        EXPECT(gbc.pc(), 0xd9f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f0), 0xae);
        // AE 0396
        gbc.setState(0xe37b, 0xd943, 0x5150, 0xd8bc, 0x7b, 0xdbbf, 0x0, 0x1);
        gbc.writeMem(0xdbbf, { 0x6b });
        gbc.writeMem(0xe37b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd943);
        EXPECT(gbc.pc(), 0xe37c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbbf), 0x6b);
        EXPECT(gbc.readMem(0xe37b), 0xae);
        // AE 0397
        gbc.setState(0xdf62, 0x99ed, 0x4390, 0x4a8d, 0x85a6, 0x775b, 0x0, 0x0);
        gbc.writeMem(0x775b, { 0xe9 });
        gbc.writeMem(0xdf62, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x99ed);
        EXPECT(gbc.pc(), 0xdf63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf62), 0xae);
        // AE 0398
        gbc.setState(0x5868, 0x6fd5, 0x2750, 0x3bd9, 0x1f28, 0x982c, 0x0, 0x0);
        gbc.writeMem(0x5868, { 0xae });
        gbc.writeMem(0x982c, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6fd5);
        EXPECT(gbc.pc(), 0x5869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x982c), 0xca);
        // AE 0399
        gbc.setState(0xbe27, 0xe4c, 0xebb0, 0x729d, 0xc6b2, 0x6bb9, 0x0, 0x0);
        gbc.writeMem(0x6bb9, { 0x14 });
        gbc.writeMem(0xbe27, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe4c);
        EXPECT(gbc.pc(), 0xbe28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe27), 0xae);
        // AE 039A
        gbc.setState(0x3223, 0x943f, 0xe700, 0xc224, 0xeffe, 0x6fac, 0x1, 0x0);
        gbc.writeMem(0x3223, { 0xae });
        gbc.writeMem(0x6fac, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x943f);
        EXPECT(gbc.pc(), 0x3224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 039B
        gbc.setState(0x3e1a, 0x2de8, 0xb230, 0x4e7f, 0x6039, 0xce01, 0x1, 0x0);
        gbc.writeMem(0x3e1a, { 0xae });
        gbc.writeMem(0xce01, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2de8);
        EXPECT(gbc.pc(), 0x3e1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce01), 0xd5);
        // AE 039C
        gbc.setState(0xd0d2, 0x3af3, 0x7fe0, 0xa249, 0x8fbd, 0xb8cd, 0x0, 0x0);
        gbc.writeMem(0xb8cd, { 0xfc });
        gbc.writeMem(0xd0d2, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3af3);
        EXPECT(gbc.pc(), 0xd0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8cd), 0xfc);
        EXPECT(gbc.readMem(0xd0d2), 0xae);
        // AE 039D
        gbc.setState(0x41b1, 0x87a, 0xdda0, 0xddab, 0xbdd0, 0x56c9, 0x0, 0x1);
        gbc.writeMem(0x41b1, { 0xae });
        gbc.writeMem(0x56c9, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x87a);
        EXPECT(gbc.pc(), 0x41b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 039E
        gbc.setState(0x758d, 0x812d, 0x6750, 0xee0d, 0x74c8, 0xe13f, 0x0, 0x1);
        gbc.writeMem(0x758d, { 0xae });
        gbc.writeMem(0xe13f, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x812d);
        EXPECT(gbc.pc(), 0x758e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe13f), 0x61);
        // AE 039F
        gbc.setState(0x8709, 0x31c3, 0x99e0, 0x7ffd, 0xa2b, 0x8bb9, 0x1, 0x0);
        gbc.writeMem(0x8709, { 0xae });
        gbc.writeMem(0x8bb9, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x31c3);
        EXPECT(gbc.pc(), 0x870a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8709), 0xae);
        EXPECT(gbc.readMem(0x8bb9), 0xad);
        // AE 03A0
        gbc.setState(0xab47, 0x34fc, 0xeff0, 0x9ee3, 0xdd4, 0x9965, 0x1, 0x0);
        gbc.writeMem(0x9965, { 0x86 });
        gbc.writeMem(0xab47, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x34fc);
        EXPECT(gbc.pc(), 0xab48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9965), 0x86);
        EXPECT(gbc.readMem(0xab47), 0xae);
        // AE 03A1
        gbc.setState(0xdfcf, 0x6141, 0x3ec0, 0x6dc1, 0xf7f3, 0x35f8, 0x0, 0x0);
        gbc.writeMem(0x35f8, { 0x57 });
        gbc.writeMem(0xdfcf, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6141);
        EXPECT(gbc.pc(), 0xdfd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfcf), 0xae);
        // AE 03A2
        gbc.setState(0x509f, 0x88d, 0x5d50, 0x8c33, 0x1d12, 0x73b8, 0x0, 0x1);
        gbc.writeMem(0x509f, { 0xae });
        gbc.writeMem(0x73b8, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x88d);
        EXPECT(gbc.pc(), 0x50a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03A3
        gbc.setState(0xe78b, 0xabf6, 0xf90, 0x4100, 0x13b4, 0x353, 0x1, 0x0);
        gbc.writeMem(0x353, { 0x4c });
        gbc.writeMem(0xe78b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xabf6);
        EXPECT(gbc.pc(), 0xe78c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe78b), 0xae);
        // AE 03A4
        gbc.setState(0x52d6, 0x7615, 0x3620, 0x7356, 0xf572, 0x3688, 0x1, 0x1);
        gbc.writeMem(0x3688, { 0xeb });
        gbc.writeMem(0x52d6, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7615);
        EXPECT(gbc.pc(), 0x52d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03A6
        gbc.setState(0x8e67, 0x248b, 0xba80, 0xda2e, 0x6362, 0x442d, 0x1, 0x0);
        gbc.writeMem(0x442d, { 0x20 });
        gbc.writeMem(0x8e67, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x248b);
        EXPECT(gbc.pc(), 0x8e68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e67), 0xae);
        // AE 03A7
        gbc.setState(0x519, 0x7277, 0xe000, 0x1cf9, 0xc6d1, 0xdc02, 0x0, 0x1);
        gbc.writeMem(0x519, { 0xae });
        gbc.writeMem(0xdc02, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7277);
        EXPECT(gbc.pc(), 0x51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc02), 0x37);
        // AE 03A8
        gbc.setState(0x28ed, 0xb315, 0xd000, 0xb205, 0x5523, 0xbb7c, 0x0, 0x1);
        gbc.writeMem(0x28ed, { 0xae });
        gbc.writeMem(0xbb7c, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb315);
        EXPECT(gbc.pc(), 0x28ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb7c), 0xc9);
        // AE 03A9
        gbc.setState(0x9d22, 0x5a82, 0x40d0, 0xab05, 0x887e, 0x10b8, 0x1, 0x1);
        gbc.writeMem(0x10b8, { 0xf8 });
        gbc.writeMem(0x9d22, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5a82);
        EXPECT(gbc.pc(), 0x9d23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d22), 0xae);
        // AE 03AA
        gbc.setState(0x54c, 0x809b, 0x72b0, 0x5477, 0xa030, 0x787d, 0x0, 0x1);
        gbc.writeMem(0x54c, { 0xae });
        gbc.writeMem(0x787d, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x809b);
        EXPECT(gbc.pc(), 0x54d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03AB
        gbc.setState(0x3e75, 0x6ebd, 0x7dc0, 0x995b, 0x8cfe, 0xe625, 0x1, 0x0);
        gbc.writeMem(0x3e75, { 0xae });
        gbc.writeMem(0xe625, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6ebd);
        EXPECT(gbc.pc(), 0x3e76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe625), 0x21);
        // AE 03AC
        gbc.setState(0xcc74, 0x255e, 0x8ee0, 0x14c1, 0x9003, 0x731b, 0x0, 0x1);
        gbc.writeMem(0x731b, { 0x81 });
        gbc.writeMem(0xcc74, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x255e);
        EXPECT(gbc.pc(), 0xcc75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc74), 0xae);
        // AE 03AD
        gbc.setState(0x159, 0x5352, 0x2230, 0x6eab, 0x430a, 0x9d27, 0x1, 0x1);
        gbc.writeMem(0x159, { 0xae });
        gbc.writeMem(0x9d27, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5352);
        EXPECT(gbc.pc(), 0x15a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d27), 0x72);
        // AE 03AE
        gbc.setState(0x55e2, 0x3d45, 0x9390, 0xe520, 0x3e08, 0x8494, 0x1, 0x1);
        gbc.writeMem(0x55e2, { 0xae });
        gbc.writeMem(0x8494, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3d45);
        EXPECT(gbc.pc(), 0x55e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8494), 0xdc);
        // AE 03AF
        gbc.setState(0xcf9a, 0x3d00, 0x42a0, 0xa50d, 0x4727, 0x981c, 0x1, 0x0);
        gbc.writeMem(0x981c, { 0x91 });
        gbc.writeMem(0xcf9a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3d00);
        EXPECT(gbc.pc(), 0xcf9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x981c), 0x91);
        EXPECT(gbc.readMem(0xcf9a), 0xae);
        // AE 03B0
        gbc.setState(0x3e0, 0xc701, 0xdb20, 0x3f4c, 0xfbea, 0xaa85, 0x0, 0x1);
        gbc.writeMem(0x3e0, { 0xae });
        gbc.writeMem(0xaa85, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc701);
        EXPECT(gbc.pc(), 0x3e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa85), 0xc1);
        // AE 03B1
        gbc.setState(0xa681, 0x31ab, 0x24d0, 0xe5dc, 0xc1bc, 0x4d42, 0x1, 0x0);
        gbc.writeMem(0x4d42, { 0x6c });
        gbc.writeMem(0xa681, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x31ab);
        EXPECT(gbc.pc(), 0xa682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa681), 0xae);
        // AE 03B2
        gbc.setState(0x5c3, 0x594e, 0x25e0, 0x269f, 0x9b52, 0x74d9, 0x1, 0x0);
        gbc.writeMem(0x5c3, { 0xae });
        gbc.writeMem(0x74d9, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x594e);
        EXPECT(gbc.pc(), 0x5c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03B3
        gbc.setState(0x5fb0, 0x2c1d, 0x4ba0, 0x38c8, 0x961c, 0x8bca, 0x1, 0x1);
        gbc.writeMem(0x5fb0, { 0xae });
        gbc.writeMem(0x8bca, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2c1d);
        EXPECT(gbc.pc(), 0x5fb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bca), 0xd1);
        // AE 03B4
        gbc.setState(0xb63d, 0x4a89, 0x2950, 0x7446, 0x2940, 0x5e2a, 0x1, 0x0);
        gbc.writeMem(0x5e2a, { 0x40 });
        gbc.writeMem(0xb63d, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4a89);
        EXPECT(gbc.pc(), 0xb63e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb63d), 0xae);
        // AE 03B5
        gbc.setState(0x87c4, 0xc128, 0x6520, 0x1a75, 0xfe14, 0x9eee, 0x1, 0x0);
        gbc.writeMem(0x87c4, { 0xae });
        gbc.writeMem(0x9eee, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc128);
        EXPECT(gbc.pc(), 0x87c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c4), 0xae);
        EXPECT(gbc.readMem(0x9eee), 0x3b);
        // AE 03B6
        gbc.setState(0xd4e4, 0x4b2c, 0xd80, 0x3a3, 0x9a1, 0xcdcc, 0x0, 0x1);
        gbc.writeMem(0xcdcc, { 0x1b });
        gbc.writeMem(0xd4e4, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4b2c);
        EXPECT(gbc.pc(), 0xd4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdcc), 0x1b);
        EXPECT(gbc.readMem(0xd4e4), 0xae);
        // AE 03B7
        gbc.setState(0xbbd4, 0x91ed, 0xf5e0, 0xa01, 0x6dfd, 0x42b2, 0x0, 0x1);
        gbc.writeMem(0x42b2, { 0xce });
        gbc.writeMem(0xbbd4, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x91ed);
        EXPECT(gbc.pc(), 0xbbd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbd4), 0xae);
        // AE 03B8
        gbc.setState(0xcafd, 0x65fd, 0xe090, 0x2e77, 0x3792, 0xc3fe, 0x1, 0x1);
        gbc.writeMem(0xc3fe, { 0x8c });
        gbc.writeMem(0xcafd, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x65fd);
        EXPECT(gbc.pc(), 0xcafe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3fe), 0x8c);
        EXPECT(gbc.readMem(0xcafd), 0xae);
        // AE 03B9
        gbc.setState(0x2804, 0xace9, 0xd690, 0xf469, 0xddeb, 0x66e5, 0x0, 0x0);
        gbc.writeMem(0x2804, { 0xae });
        gbc.writeMem(0x66e5, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xace9);
        EXPECT(gbc.pc(), 0x2805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03BA
        gbc.setState(0x3ac4, 0x58ea, 0xcb70, 0xae95, 0x5abf, 0xcd00, 0x0, 0x0);
        gbc.writeMem(0x3ac4, { 0xae });
        gbc.writeMem(0xcd00, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x58ea);
        EXPECT(gbc.pc(), 0x3ac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd00), 0xbe);
        // AE 03BB
        gbc.setState(0x6297, 0x623d, 0x58c0, 0x6c06, 0xd5da, 0x21e5, 0x1, 0x1);
        gbc.writeMem(0x21e5, { 0x56 });
        gbc.writeMem(0x6297, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x623d);
        EXPECT(gbc.pc(), 0x6298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03BC
        gbc.setState(0x42eb, 0xe9c, 0x1d0, 0xa47b, 0xc73f, 0x5863, 0x1, 0x0);
        gbc.writeMem(0x42eb, { 0xae });
        gbc.writeMem(0x5863, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe9c);
        EXPECT(gbc.pc(), 0x42ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03BD
        gbc.setState(0x818f, 0xbefb, 0x7ad0, 0x96e5, 0x7cd5, 0x9fd6, 0x1, 0x0);
        gbc.writeMem(0x818f, { 0xae });
        gbc.writeMem(0x9fd6, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xbefb);
        EXPECT(gbc.pc(), 0x8190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x818f), 0xae);
        EXPECT(gbc.readMem(0x9fd6), 0x59);
        // AE 03BE
        gbc.setState(0x6554, 0x9178, 0xeab0, 0x3106, 0x8a3f, 0x3e0e, 0x1, 0x0);
        gbc.writeMem(0x3e0e, { 0x9f });
        gbc.writeMem(0x6554, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9178);
        EXPECT(gbc.pc(), 0x6555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03BF
        gbc.setState(0x1e01, 0xc0fe, 0xaa00, 0x9e55, 0xd03e, 0xea4a, 0x0, 0x1);
        gbc.writeMem(0x1e01, { 0xae });
        gbc.writeMem(0xea4a, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc0fe);
        EXPECT(gbc.pc(), 0x1e02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea4a), 0x4b);
        // AE 03C0
        gbc.setState(0x3e10, 0xa5db, 0xfe0, 0xb929, 0x206c, 0x240c, 0x0, 0x0);
        gbc.writeMem(0x240c, { 0x20 });
        gbc.writeMem(0x3e10, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa5db);
        EXPECT(gbc.pc(), 0x3e11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03C1
        gbc.setState(0x504b, 0xb41c, 0x8a80, 0xc41d, 0xbb12, 0x4561, 0x1, 0x0);
        gbc.writeMem(0x4561, { 0xe9 });
        gbc.writeMem(0x504b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb41c);
        EXPECT(gbc.pc(), 0x504c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03C2
        gbc.setState(0x3b2b, 0xe6dc, 0xa050, 0x4b18, 0x2ecd, 0xdb76, 0x1, 0x1);
        gbc.writeMem(0x3b2b, { 0xae });
        gbc.writeMem(0xdb76, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe6dc);
        EXPECT(gbc.pc(), 0x3b2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb76), 0xf);
        // AE 03C3
        gbc.setState(0xc7c9, 0x7684, 0xd790, 0xac74, 0x90d8, 0x9eee, 0x1, 0x1);
        gbc.writeMem(0x9eee, { 0x3b });
        gbc.writeMem(0xc7c9, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7684);
        EXPECT(gbc.pc(), 0xc7ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eee), 0x3b);
        EXPECT(gbc.readMem(0xc7c9), 0xae);
        // AE 03C4
        gbc.setState(0x85ac, 0xd2, 0xbc80, 0xb86d, 0x256e, 0x204a, 0x1, 0x1);
        gbc.writeMem(0x204a, { 0xd7 });
        gbc.writeMem(0x85ac, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd2);
        EXPECT(gbc.pc(), 0x85ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ac), 0xae);
        // AE 03C5
        gbc.setState(0xb416, 0x97df, 0xca80, 0xa6e, 0x879a, 0x3bd1, 0x1, 0x1);
        gbc.writeMem(0x3bd1, { 0xbf });
        gbc.writeMem(0xb416, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x97df);
        EXPECT(gbc.pc(), 0xb417);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb416), 0xae);
        // AE 03C6
        gbc.setState(0xef47, 0x3b6c, 0x18c0, 0x2a6b, 0x52c8, 0xba26, 0x1, 0x1);
        gbc.writeMem(0xba26, { 0xba });
        gbc.writeMem(0xef47, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3b6c);
        EXPECT(gbc.pc(), 0xef48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba26), 0xba);
        EXPECT(gbc.readMem(0xef47), 0xae);
        // AE 03C7
        gbc.setState(0x718f, 0x2fad, 0xb900, 0x8ef7, 0xed4f, 0xee27, 0x1, 0x0);
        gbc.writeMem(0x718f, { 0xae });
        gbc.writeMem(0xee27, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2fad);
        EXPECT(gbc.pc(), 0x7190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee27), 0x6);
        // AE 03C8
        gbc.setState(0xd8b3, 0x60cb, 0xba60, 0x6765, 0x4840, 0xb306, 0x0, 0x0);
        gbc.writeMem(0xb306, { 0xad });
        gbc.writeMem(0xd8b3, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x60cb);
        EXPECT(gbc.pc(), 0xd8b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb306), 0xad);
        EXPECT(gbc.readMem(0xd8b3), 0xae);
        // AE 03C9
        gbc.setState(0x1a55, 0xad59, 0x5560, 0xf838, 0x43e8, 0xe2de, 0x0, 0x0);
        gbc.writeMem(0x1a55, { 0xae });
        gbc.writeMem(0xe2de, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xad59);
        EXPECT(gbc.pc(), 0x1a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2de), 0xc6);
        // AE 03CA
        gbc.setState(0x2ccd, 0xc321, 0x1c0, 0xe3ef, 0x628a, 0x2568, 0x0, 0x0);
        gbc.writeMem(0x2568, { 0x1e });
        gbc.writeMem(0x2ccd, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc321);
        EXPECT(gbc.pc(), 0x2cce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03CB
        gbc.setState(0x4736, 0x1475, 0x1570, 0x1eb2, 0x9bf6, 0xd133, 0x1, 0x0);
        gbc.writeMem(0x4736, { 0xae });
        gbc.writeMem(0xd133, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1475);
        EXPECT(gbc.pc(), 0x4737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd133), 0x37);
        // AE 03CC
        gbc.setState(0x6694, 0xc8c1, 0xf7d0, 0x1742, 0x911b, 0xadb7, 0x1, 0x0);
        gbc.writeMem(0x6694, { 0xae });
        gbc.writeMem(0xadb7, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc8c1);
        EXPECT(gbc.pc(), 0x6695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadb7), 0x38);
        // AE 03CD
        gbc.setState(0xe145, 0xaa8b, 0xde0, 0xbd9f, 0x64a0, 0x4f54, 0x0, 0x0);
        gbc.writeMem(0x4f54, { 0x1 });
        gbc.writeMem(0xe145, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xaa8b);
        EXPECT(gbc.pc(), 0xe146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe145), 0xae);
        // AE 03CE
        gbc.setState(0x6664, 0x1cac, 0x3a0, 0x6c2a, 0x5ebf, 0x14e2, 0x1, 0x1);
        gbc.writeMem(0x14e2, { 0x16 });
        gbc.writeMem(0x6664, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1cac);
        EXPECT(gbc.pc(), 0x6665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03CF
        gbc.setState(0xc227, 0x77df, 0xfff0, 0xb631, 0x1e87, 0xff24, 0x0, 0x0);
        gbc.writeMem(0xc227, { 0xae });
        gbc.writeMem(0xff24, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x77df);
        EXPECT(gbc.pc(), 0xc228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc227), 0xae);
        EXPECT(gbc.readMem(0xff24), 0x2c);
        // AE 03D0
        gbc.setState(0xca09, 0x8e22, 0xd8a0, 0x4d7b, 0xfe60, 0x285a, 0x1, 0x1);
        gbc.writeMem(0x285a, { 0x6d });
        gbc.writeMem(0xca09, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8e22);
        EXPECT(gbc.pc(), 0xca0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca09), 0xae);
        // AE 03D1
        gbc.setState(0xe7e0, 0xf44e, 0x8820, 0x495e, 0x54f9, 0xfec5, 0x1, 0x1);
        gbc.writeMem(0xe7e0, { 0xae });
        gbc.writeMem(0xfec5, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf44e);
        EXPECT(gbc.pc(), 0xe7e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7e0), 0xae);
        EXPECT(gbc.readMem(0xfec5), 0x64);
        // AE 03D2
        gbc.setState(0xb3f7, 0x96fe, 0x3690, 0xfe56, 0xfa8, 0x28fd, 0x0, 0x0);
        gbc.writeMem(0x28fd, { 0xcb });
        gbc.writeMem(0xb3f7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x96fe);
        EXPECT(gbc.pc(), 0xb3f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f7), 0xae);
        // AE 03D3
        gbc.setState(0x890f, 0x3ddd, 0xe250, 0x92ec, 0x71cc, 0xe963, 0x1, 0x1);
        gbc.writeMem(0x890f, { 0xae });
        gbc.writeMem(0xe963, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3ddd);
        EXPECT(gbc.pc(), 0x8910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890f), 0xae);
        EXPECT(gbc.readMem(0xe963), 0xa);
        // AE 03D4
        gbc.setState(0xe50b, 0x6ce6, 0x31b0, 0x1cc4, 0x50d9, 0x3fec, 0x1, 0x1);
        gbc.writeMem(0x3fec, { 0xe });
        gbc.writeMem(0xe50b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6ce6);
        EXPECT(gbc.pc(), 0xe50c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe50b), 0xae);
        // AE 03D5
        gbc.setState(0xccd5, 0xdcda, 0x450, 0xc0a7, 0x8238, 0xf618, 0x1, 0x0);
        gbc.writeMem(0xccd5, { 0xae });
        gbc.writeMem(0xf618, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xdcda);
        EXPECT(gbc.pc(), 0xccd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd5), 0xae);
        EXPECT(gbc.readMem(0xf618), 0xf);
        // AE 03D7
        gbc.setState(0x4e7c, 0x5539, 0x6140, 0xa6d2, 0x97a5, 0x715, 0x1, 0x0);
        gbc.writeMem(0x715, { 0xd });
        gbc.writeMem(0x4e7c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5539);
        EXPECT(gbc.pc(), 0x4e7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03D8
        gbc.setState(0x7365, 0x4956, 0xb290, 0x32c6, 0x41d9, 0x1362, 0x0, 0x0);
        gbc.writeMem(0x1362, { 0xb });
        gbc.writeMem(0x7365, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4956);
        EXPECT(gbc.pc(), 0x7366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03D9
        gbc.setState(0xa82c, 0xea1f, 0x8ad0, 0x8bc1, 0xdf09, 0xc0d9, 0x0, 0x0);
        gbc.writeMem(0xa82c, { 0xae });
        gbc.writeMem(0xc0d9, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xea1f);
        EXPECT(gbc.pc(), 0xa82d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82c), 0xae);
        EXPECT(gbc.readMem(0xc0d9), 0xed);
        // AE 03DA
        gbc.setState(0xab6a, 0x396b, 0xc420, 0xf9bf, 0x9e5, 0x345f, 0x0, 0x1);
        gbc.writeMem(0x345f, { 0x4d });
        gbc.writeMem(0xab6a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x396b);
        EXPECT(gbc.pc(), 0xab6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab6a), 0xae);
        // AE 03DB
        gbc.setState(0x93c2, 0xe2a4, 0x8de0, 0x8bff, 0x54a9, 0xa842, 0x1, 0x0);
        gbc.writeMem(0x93c2, { 0xae });
        gbc.writeMem(0xa842, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe2a4);
        EXPECT(gbc.pc(), 0x93c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c2), 0xae);
        EXPECT(gbc.readMem(0xa842), 0xba);
        // AE 03DC
        gbc.setState(0x56c7, 0x8aa1, 0xdab0, 0xcee8, 0x8719, 0x4c72, 0x1, 0x1);
        gbc.writeMem(0x4c72, { 0xe4 });
        gbc.writeMem(0x56c7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8aa1);
        EXPECT(gbc.pc(), 0x56c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03DD
        gbc.setState(0x3c2b, 0x144f, 0x7e80, 0xa44c, 0x5385, 0x2d85, 0x1, 0x0);
        gbc.writeMem(0x2d85, { 0xe });
        gbc.writeMem(0x3c2b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x144f);
        EXPECT(gbc.pc(), 0x3c2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03DE
        gbc.setState(0xe5b2, 0xee5e, 0x5800, 0x832d, 0xe9c3, 0xa61b, 0x0, 0x0);
        gbc.writeMem(0xa61b, { 0xb });
        gbc.writeMem(0xe5b2, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xee5e);
        EXPECT(gbc.pc(), 0xe5b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa61b), 0xb);
        EXPECT(gbc.readMem(0xe5b2), 0xae);
        // AE 03DF
        gbc.setState(0x844, 0x24c0, 0x4a40, 0xef4e, 0x3006, 0x539f, 0x1, 0x1);
        gbc.writeMem(0x844, { 0xae });
        gbc.writeMem(0x539f, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x24c0);
        EXPECT(gbc.pc(), 0x845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AE 03E0
        gbc.setState(0xd5f7, 0x1f51, 0x8b0, 0xee74, 0xc724, 0x60fd, 0x1, 0x0);
        gbc.writeMem(0x60fd, { 0xc8 });
        gbc.writeMem(0xd5f7, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1f51);
        EXPECT(gbc.pc(), 0xd5f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5f7), 0xae);
        // AE 03E1
        gbc.setState(0x751e, 0x59db, 0x4d40, 0x9fe2, 0xf486, 0xcfd4, 0x0, 0x0);
        gbc.writeMem(0x751e, { 0xae });
        gbc.writeMem(0xcfd4, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x59db);
        EXPECT(gbc.pc(), 0x751f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd4), 0x3d);
        // AE 03E3
        gbc.setState(0x939b, 0x170e, 0xd400, 0x1da, 0xda6e, 0x5ac4, 0x1, 0x0);
        gbc.writeMem(0x5ac4, { 0x8a });
        gbc.writeMem(0x939b, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x170e);
        EXPECT(gbc.pc(), 0x939c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939b), 0xae);
        // AE 03E4
        gbc.setState(0xc606, 0x4cc4, 0xf120, 0x3049, 0xf14a, 0x545a, 0x1, 0x1);
        gbc.writeMem(0x545a, { 0xf7 });
        gbc.writeMem(0xc606, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4cc4);
        EXPECT(gbc.pc(), 0xc607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc606), 0xae);
        // AE 03E5
        gbc.setState(0xefcb, 0x30cb, 0x4fb0, 0x754, 0xfbc0, 0x2568, 0x0, 0x0);
        gbc.writeMem(0x2568, { 0x1e });
        gbc.writeMem(0xefcb, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x30cb);
        EXPECT(gbc.pc(), 0xefcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefcb), 0xae);
        // AE 03E6
        gbc.setState(0xc515, 0x8012, 0x220, 0x9bcf, 0x2eeb, 0xac10, 0x1, 0x1);
        gbc.writeMem(0xac10, { 0x8e });
        gbc.writeMem(0xc515, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8012);
        EXPECT(gbc.pc(), 0xc516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac10), 0x8e);
        EXPECT(gbc.readMem(0xc515), 0xae);
        // AE 03E7
        gbc.setState(0xdeca, 0x4cb1, 0xcae0, 0x4762, 0x8d0b, 0x82c6, 0x1, 0x0);
        gbc.writeMem(0x82c6, { 0x84 });
        gbc.writeMem(0xdeca, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4cb1);
        EXPECT(gbc.pc(), 0xdecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82c6), 0x84);
        EXPECT(gbc.readMem(0xdeca), 0xae);
    }
}
#endif
