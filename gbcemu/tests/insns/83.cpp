#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_83)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_83) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 83 0000
        gbc.setState(0x7b9d, 0xe3b0, 0x1590, 0x8fa4, 0x88f3, 0xc760, 0x0, 0x1);
        gbc.writeMem(0x7b9d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe3b0);
        EXPECT(gbc.pc(), 0x7b9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0001
        gbc.setState(0x9925, 0xcf8f, 0x40, 0xcaa9, 0x8426, 0x7275, 0x1, 0x0);
        gbc.writeMem(0x9925, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xcf8f);
        EXPECT(gbc.pc(), 0x9926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9925), 0x83);
        // 83 0002
        gbc.setState(0xb694, 0xb559, 0xb6a0, 0x2634, 0x87b1, 0x6f06, 0x1, 0x1);
        gbc.writeMem(0xb694, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb559);
        EXPECT(gbc.pc(), 0xb695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb694), 0x83);
        // 83 0003
        gbc.setState(0x73d, 0x1bde, 0x7590, 0x16fa, 0x5dcd, 0xaf40, 0x0, 0x1);
        gbc.writeMem(0x73d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1bde);
        EXPECT(gbc.pc(), 0x73e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0004
        gbc.setState(0x192f, 0xe3e7, 0xd9f0, 0xf779, 0x4583, 0xe105, 0x0, 0x0);
        gbc.writeMem(0x192f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe3e7);
        EXPECT(gbc.pc(), 0x1930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0005
        gbc.setState(0x1a85, 0x4fe4, 0x9a0, 0xb2f8, 0x4cc0, 0x18f9, 0x1, 0x0);
        gbc.writeMem(0x1a85, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4fe4);
        EXPECT(gbc.pc(), 0x1a86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0006
        gbc.setState(0x8b7b, 0x92f4, 0xd50, 0x5522, 0xf079, 0x75a2, 0x1, 0x0);
        gbc.writeMem(0x8b7b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x92f4);
        EXPECT(gbc.pc(), 0x8b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b7b), 0x83);
        // 83 0007
        gbc.setState(0x7d47, 0x533e, 0x95d0, 0x2dfb, 0x5981, 0x7755, 0x1, 0x1);
        gbc.writeMem(0x7d47, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x533e);
        EXPECT(gbc.pc(), 0x7d48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0008
        gbc.setState(0x8fa5, 0xb18a, 0xb960, 0x417f, 0x9fe, 0xbcad, 0x1, 0x0);
        gbc.writeMem(0x8fa5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb18a);
        EXPECT(gbc.pc(), 0x8fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fa5), 0x83);
        // 83 0009
        gbc.setState(0x72a2, 0xb4e9, 0xe1d0, 0xa24e, 0x73b2, 0xae0a, 0x1, 0x0);
        gbc.writeMem(0x72a2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb4e9);
        EXPECT(gbc.pc(), 0x72a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 000A
        gbc.setState(0x6a8d, 0xdbd3, 0x5230, 0xed5f, 0xf510, 0xd5e9, 0x1, 0x1);
        gbc.writeMem(0x6a8d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdbd3);
        EXPECT(gbc.pc(), 0x6a8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 000C
        gbc.setState(0x73e8, 0x9466, 0x5070, 0x5d9a, 0xa66c, 0xd1c9, 0x1, 0x1);
        gbc.writeMem(0x73e8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9466);
        EXPECT(gbc.pc(), 0x73e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 000D
        gbc.setState(0x93b0, 0x2bba, 0x82c0, 0x7f85, 0xe7b6, 0x7b51, 0x0, 0x1);
        gbc.writeMem(0x93b0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2bba);
        EXPECT(gbc.pc(), 0x93b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93b0), 0x83);
        // 83 000E
        gbc.setState(0x9449, 0xbe41, 0x24f0, 0xb654, 0x7462, 0xcdd2, 0x0, 0x1);
        gbc.writeMem(0x9449, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xbe41);
        EXPECT(gbc.pc(), 0x944a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9449), 0x83);
        // 83 000F
        gbc.setState(0x20fa, 0xd4d4, 0x9780, 0x7747, 0xe3eb, 0x7f7c, 0x0, 0x0);
        gbc.writeMem(0x20fa, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd4d4);
        EXPECT(gbc.pc(), 0x20fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0010
        gbc.setState(0xc123, 0x1947, 0x40e0, 0x7d96, 0xe012, 0xa2c2, 0x0, 0x1);
        gbc.writeMem(0xc123, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1947);
        EXPECT(gbc.pc(), 0xc124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc123), 0x83);
        // 83 0011
        gbc.setState(0xc537, 0xc3f, 0xf890, 0x5cbf, 0x2634, 0xc084, 0x1, 0x1);
        gbc.writeMem(0xc537, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc3f);
        EXPECT(gbc.pc(), 0xc538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc537), 0x83);
        // 83 0012
        gbc.setState(0xa760, 0xdd7a, 0x5170, 0x4835, 0x76c8, 0xe7dd, 0x0, 0x1);
        gbc.writeMem(0xa760, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xdd7a);
        EXPECT(gbc.pc(), 0xa761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa760), 0x83);
        // 83 0013
        gbc.setState(0x3d2a, 0x8376, 0x7100, 0x2409, 0xd878, 0xcfa2, 0x0, 0x0);
        gbc.writeMem(0x3d2a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8376);
        EXPECT(gbc.pc(), 0x3d2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0014
        gbc.setState(0x9f8a, 0x268a, 0x35d0, 0xd3fa, 0x34b4, 0xf5d9, 0x0, 0x1);
        gbc.writeMem(0x9f8a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x268a);
        EXPECT(gbc.pc(), 0x9f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f8a), 0x83);
        // 83 0015
        gbc.setState(0x76e3, 0x79d3, 0x3540, 0xb47f, 0x59bb, 0x6621, 0x1, 0x1);
        gbc.writeMem(0x76e3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x79d3);
        EXPECT(gbc.pc(), 0x76e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0016
        gbc.setState(0xe5fb, 0xb86e, 0x6040, 0x3bf3, 0x1f6a, 0x6e5d, 0x1, 0x1);
        gbc.writeMem(0xe5fb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb86e);
        EXPECT(gbc.pc(), 0xe5fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5fb), 0x83);
        // 83 0017
        gbc.setState(0xe436, 0x2e7, 0xd8c0, 0xcce0, 0x5e9d, 0xcf2b, 0x0, 0x0);
        gbc.writeMem(0xe436, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2e7);
        EXPECT(gbc.pc(), 0xe437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe436), 0x83);
        // 83 0018
        gbc.setState(0x530b, 0x66af, 0xd090, 0x9bf0, 0x6f67, 0x9112, 0x0, 0x0);
        gbc.writeMem(0x530b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x66af);
        EXPECT(gbc.pc(), 0x530c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0019
        gbc.setState(0xe765, 0x9412, 0x1980, 0xa90e, 0x9220, 0x1c70, 0x0, 0x0);
        gbc.writeMem(0xe765, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9412);
        EXPECT(gbc.pc(), 0xe766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe765), 0x83);
        // 83 001A
        gbc.setState(0x59e2, 0x991b, 0x42d0, 0x33e5, 0x56c6, 0xe294, 0x1, 0x0);
        gbc.writeMem(0x59e2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x991b);
        EXPECT(gbc.pc(), 0x59e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 001B
        gbc.setState(0x47a2, 0xe45a, 0x610, 0xb1aa, 0x7742, 0x367, 0x0, 0x1);
        gbc.writeMem(0x47a2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe45a);
        EXPECT(gbc.pc(), 0x47a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 001C
        gbc.setState(0x71d6, 0x68d2, 0x5d00, 0xcae4, 0xc5ef, 0xb65f, 0x1, 0x0);
        gbc.writeMem(0x71d6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x68d2);
        EXPECT(gbc.pc(), 0x71d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 001D
        gbc.setState(0x8e03, 0x3403, 0x4680, 0xd036, 0xd93f, 0xc5c4, 0x1, 0x1);
        gbc.writeMem(0x8e03, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3403);
        EXPECT(gbc.pc(), 0x8e04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e03), 0x83);
        // 83 001E
        gbc.setState(0x2044, 0x5fe0, 0x1ce0, 0x40cb, 0x444e, 0x1496, 0x1, 0x1);
        gbc.writeMem(0x2044, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5fe0);
        EXPECT(gbc.pc(), 0x2045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 001F
        gbc.setState(0x8410, 0x4438, 0x8270, 0xbd00, 0x8bad, 0x5dde, 0x0, 0x0);
        gbc.writeMem(0x8410, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4438);
        EXPECT(gbc.pc(), 0x8411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8410), 0x83);
        // 83 0021
        gbc.setState(0x8f9a, 0x8645, 0x9640, 0x3fa6, 0xcfa8, 0x70c4, 0x0, 0x1);
        gbc.writeMem(0x8f9a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8645);
        EXPECT(gbc.pc(), 0x8f9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f9a), 0x83);
        // 83 0022
        gbc.setState(0xa49f, 0x62aa, 0x7b60, 0x103f, 0x9e2c, 0x8fbc, 0x1, 0x1);
        gbc.writeMem(0xa49f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x62aa);
        EXPECT(gbc.pc(), 0xa4a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49f), 0x83);
        // 83 0023
        gbc.setState(0x85e9, 0x960f, 0x10c0, 0x5c42, 0x8654, 0x4591, 0x1, 0x0);
        gbc.writeMem(0x85e9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x960f);
        EXPECT(gbc.pc(), 0x85ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85e9), 0x83);
        // 83 0024
        gbc.setState(0x16d0, 0xbd67, 0x8e70, 0x7abc, 0xe461, 0xb2b8, 0x0, 0x0);
        gbc.writeMem(0x16d0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbd67);
        EXPECT(gbc.pc(), 0x16d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0025
        gbc.setState(0x6328, 0xab82, 0x3740, 0x64fe, 0xd052, 0x40cc, 0x1, 0x0);
        gbc.writeMem(0x6328, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xab82);
        EXPECT(gbc.pc(), 0x6329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0026
        gbc.setState(0xc36f, 0x72a4, 0x4b40, 0x435b, 0x9f68, 0x30a9, 0x1, 0x1);
        gbc.writeMem(0xc36f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x72a4);
        EXPECT(gbc.pc(), 0xc370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc36f), 0x83);
        // 83 0028
        gbc.setState(0x861b, 0xcee7, 0xa040, 0x6fd1, 0x1417, 0x592b, 0x0, 0x0);
        gbc.writeMem(0x861b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xcee7);
        EXPECT(gbc.pc(), 0x861c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x861b), 0x83);
        // 83 0029
        gbc.setState(0x629b, 0x91a3, 0x4ca0, 0x4eba, 0x2921, 0xc011, 0x0, 0x0);
        gbc.writeMem(0x629b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x91a3);
        EXPECT(gbc.pc(), 0x629c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 002A
        gbc.setState(0x911, 0x602, 0xe730, 0xf19, 0x7bb, 0xbfa1, 0x1, 0x0);
        gbc.writeMem(0x911, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x602);
        EXPECT(gbc.pc(), 0x912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 002B
        gbc.setState(0x5aab, 0xdef, 0x5b10, 0x194c, 0x32ed, 0xe021, 0x0, 0x1);
        gbc.writeMem(0x5aab, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xdef);
        EXPECT(gbc.pc(), 0x5aac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 002C
        gbc.setState(0x496, 0x79a3, 0x9020, 0xd6ee, 0x187d, 0x4710, 0x0, 0x1);
        gbc.writeMem(0x496, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x79a3);
        EXPECT(gbc.pc(), 0x497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 002D
        gbc.setState(0x54a9, 0xa8e9, 0x2590, 0x91df, 0xc3be, 0xef12, 0x0, 0x1);
        gbc.writeMem(0x54a9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa8e9);
        EXPECT(gbc.pc(), 0x54aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 002E
        gbc.setState(0xcb97, 0x7c4a, 0x69e0, 0x325a, 0xce23, 0xd202, 0x0, 0x1);
        gbc.writeMem(0xcb97, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7c4a);
        EXPECT(gbc.pc(), 0xcb98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb97), 0x83);
        // 83 002F
        gbc.setState(0x3217, 0x9a64, 0x9160, 0x3a8b, 0xf750, 0xaf8f, 0x1, 0x0);
        gbc.writeMem(0x3217, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9a64);
        EXPECT(gbc.pc(), 0x3218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0030
        gbc.setState(0x508c, 0xf4e9, 0xcb0, 0xbbb5, 0xdd7f, 0x552d, 0x1, 0x1);
        gbc.writeMem(0x508c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf4e9);
        EXPECT(gbc.pc(), 0x508d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0031
        gbc.setState(0xdfde, 0x8711, 0x4720, 0x272b, 0x4f71, 0xf78f, 0x1, 0x0);
        gbc.writeMem(0xdfde, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8711);
        EXPECT(gbc.pc(), 0xdfdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfde), 0x83);
        // 83 0032
        gbc.setState(0x39d4, 0x4068, 0x6c0, 0x2b81, 0x91ff, 0xf0ad, 0x0, 0x1);
        gbc.writeMem(0x39d4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4068);
        EXPECT(gbc.pc(), 0x39d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0033
        gbc.setState(0x4e25, 0x6846, 0xe980, 0x7e4, 0xf58c, 0xa5cc, 0x0, 0x0);
        gbc.writeMem(0x4e25, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6846);
        EXPECT(gbc.pc(), 0x4e26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0034
        gbc.setState(0xb83, 0x79c4, 0x9d40, 0x4521, 0x321c, 0x85e1, 0x1, 0x1);
        gbc.writeMem(0xb83, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x79c4);
        EXPECT(gbc.pc(), 0xb84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0035
        gbc.setState(0x7e3d, 0xc456, 0x7e0, 0x854, 0xf543, 0xae3b, 0x0, 0x0);
        gbc.writeMem(0x7e3d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc456);
        EXPECT(gbc.pc(), 0x7e3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0036
        gbc.setState(0xa0a1, 0x8e9e, 0xf660, 0xc3e7, 0xd4a6, 0x68c1, 0x0, 0x1);
        gbc.writeMem(0xa0a1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8e9e);
        EXPECT(gbc.pc(), 0xa0a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0a1), 0x83);
        // 83 0037
        gbc.setState(0x3230, 0x4491, 0x1030, 0xe4cb, 0x7ef2, 0x75c, 0x1, 0x0);
        gbc.writeMem(0x3230, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4491);
        EXPECT(gbc.pc(), 0x3231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0038
        gbc.setState(0x20c5, 0x4820, 0x7f80, 0xdaa0, 0xbc67, 0x137a, 0x1, 0x0);
        gbc.writeMem(0x20c5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4820);
        EXPECT(gbc.pc(), 0x20c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0039
        gbc.setState(0x1b00, 0x3f8a, 0x2f10, 0xf1f3, 0x6bd8, 0x222b, 0x1, 0x1);
        gbc.writeMem(0x1b00, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3f8a);
        EXPECT(gbc.pc(), 0x1b01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 003A
        gbc.setState(0xc2ac, 0x682f, 0xe1f0, 0x3801, 0x4f79, 0x8399, 0x1, 0x0);
        gbc.writeMem(0xc2ac, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x682f);
        EXPECT(gbc.pc(), 0xc2ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ac), 0x83);
        // 83 003B
        gbc.setState(0xa1e8, 0xdb23, 0xc80, 0x13a8, 0xf8ca, 0x8db6, 0x0, 0x0);
        gbc.writeMem(0xa1e8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdb23);
        EXPECT(gbc.pc(), 0xa1e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e8), 0x83);
        // 83 003C
        gbc.setState(0x4a9b, 0x4feb, 0xe1c0, 0xacd4, 0x251e, 0x106c, 0x0, 0x0);
        gbc.writeMem(0x4a9b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4feb);
        EXPECT(gbc.pc(), 0x4a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 003E
        gbc.setState(0xf77, 0x41ed, 0x6250, 0xf964, 0x81d1, 0x80fa, 0x1, 0x1);
        gbc.writeMem(0xf77, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x41ed);
        EXPECT(gbc.pc(), 0xf78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 003F
        gbc.setState(0x9947, 0x5efe, 0xe2f0, 0x87a6, 0x800c, 0x92a8, 0x1, 0x0);
        gbc.writeMem(0x9947, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5efe);
        EXPECT(gbc.pc(), 0x9948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9947), 0x83);
        // 83 0041
        gbc.setState(0x18fb, 0xee6c, 0x8d30, 0x695, 0x2ae4, 0x183f, 0x1, 0x0);
        gbc.writeMem(0x18fb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xee6c);
        EXPECT(gbc.pc(), 0x18fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0042
        gbc.setState(0x922c, 0xfaeb, 0xf5b0, 0xb008, 0xc606, 0xec05, 0x0, 0x1);
        gbc.writeMem(0x922c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xfaeb);
        EXPECT(gbc.pc(), 0x922d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x922c), 0x83);
        // 83 0043
        gbc.setState(0x9e39, 0x289c, 0x4060, 0xaa09, 0x1d88, 0x8e38, 0x1, 0x0);
        gbc.writeMem(0x9e39, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x289c);
        EXPECT(gbc.pc(), 0x9e3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e39), 0x83);
        // 83 0045
        gbc.setState(0x4ada, 0x4554, 0x67e0, 0xc376, 0x7872, 0xd69c, 0x1, 0x1);
        gbc.writeMem(0x4ada, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4554);
        EXPECT(gbc.pc(), 0x4adb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0047
        gbc.setState(0xa15c, 0xb84b, 0x5930, 0xda2e, 0xe3f2, 0x609c, 0x0, 0x1);
        gbc.writeMem(0xa15c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb84b);
        EXPECT(gbc.pc(), 0xa15d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa15c), 0x83);
        // 83 0048
        gbc.setState(0x82c5, 0x4720, 0x9070, 0xb9d0, 0x9974, 0xbea9, 0x1, 0x0);
        gbc.writeMem(0x82c5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4720);
        EXPECT(gbc.pc(), 0x82c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82c5), 0x83);
        // 83 0049
        gbc.setState(0xa19b, 0x17ad, 0x4c70, 0x2590, 0xf727, 0x45d5, 0x1, 0x1);
        gbc.writeMem(0xa19b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x17ad);
        EXPECT(gbc.pc(), 0xa19c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa19b), 0x83);
        // 83 004A
        gbc.setState(0x94ca, 0xa809, 0xaab0, 0xb6fe, 0x4ee7, 0x29ea, 0x1, 0x0);
        gbc.writeMem(0x94ca, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa809);
        EXPECT(gbc.pc(), 0x94cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ca), 0x83);
        // 83 004B
        gbc.setState(0xb56b, 0x1f68, 0xd380, 0x1793, 0x3937, 0xdc20, 0x0, 0x1);
        gbc.writeMem(0xb56b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1f68);
        EXPECT(gbc.pc(), 0xb56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb56b), 0x83);
        // 83 004C
        gbc.setState(0xb10e, 0x1fb9, 0x43f0, 0x7754, 0x2bdc, 0x2f81, 0x1, 0x0);
        gbc.writeMem(0xb10e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1fb9);
        EXPECT(gbc.pc(), 0xb10f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb10e), 0x83);
        // 83 004D
        gbc.setState(0x588f, 0xcf21, 0x5110, 0xaf44, 0x91fa, 0x84c, 0x1, 0x0);
        gbc.writeMem(0x588f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xcf21);
        EXPECT(gbc.pc(), 0x5890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 004F
        gbc.setState(0xea3d, 0x5aea, 0x9200, 0x3c4b, 0x512d, 0x1700, 0x0, 0x0);
        gbc.writeMem(0xea3d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5aea);
        EXPECT(gbc.pc(), 0xea3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea3d), 0x83);
        // 83 0050
        gbc.setState(0x609e, 0x9d88, 0x4fe0, 0x979f, 0xd800, 0x9cb7, 0x1, 0x0);
        gbc.writeMem(0x609e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9d88);
        EXPECT(gbc.pc(), 0x609f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0051
        gbc.setState(0xbb9d, 0x3d40, 0x2670, 0xa44c, 0x8b9d, 0x99b1, 0x1, 0x0);
        gbc.writeMem(0xbb9d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3d40);
        EXPECT(gbc.pc(), 0xbb9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb9d), 0x83);
        // 83 0052
        gbc.setState(0xa106, 0x6657, 0xa930, 0x1d53, 0xeae3, 0x4fb0, 0x1, 0x1);
        gbc.writeMem(0xa106, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6657);
        EXPECT(gbc.pc(), 0xa107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa106), 0x83);
        // 83 0053
        gbc.setState(0x7bd2, 0x9304, 0xdca0, 0x4a7, 0xda4d, 0xa2c0, 0x0, 0x0);
        gbc.writeMem(0x7bd2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9304);
        EXPECT(gbc.pc(), 0x7bd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0054
        gbc.setState(0x6d26, 0xb0bd, 0xda80, 0x2325, 0x4635, 0x3afe, 0x0, 0x1);
        gbc.writeMem(0x6d26, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb0bd);
        EXPECT(gbc.pc(), 0x6d27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0055
        gbc.setState(0x1456, 0x370a, 0x23d0, 0xd266, 0x6f93, 0x552, 0x0, 0x1);
        gbc.writeMem(0x1456, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x370a);
        EXPECT(gbc.pc(), 0x1457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0056
        gbc.setState(0xa1fc, 0x9c8a, 0x9630, 0x9031, 0x977e, 0x81bc, 0x1, 0x1);
        gbc.writeMem(0xa1fc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9c8a);
        EXPECT(gbc.pc(), 0xa1fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1fc), 0x83);
        // 83 0057
        gbc.setState(0x116, 0xcc74, 0xa2d0, 0xdd77, 0xd86d, 0xe976, 0x0, 0x0);
        gbc.writeMem(0x116, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xcc74);
        EXPECT(gbc.pc(), 0x117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0058
        gbc.setState(0xca71, 0xb60a, 0x5190, 0xf11d, 0x9197, 0x8310, 0x1, 0x0);
        gbc.writeMem(0xca71, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb60a);
        EXPECT(gbc.pc(), 0xca72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca71), 0x83);
        // 83 0059
        gbc.setState(0xd7c6, 0x172f, 0x2ce0, 0x70b1, 0xb009, 0x611, 0x1, 0x0);
        gbc.writeMem(0xd7c6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x172f);
        EXPECT(gbc.pc(), 0xd7c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c6), 0x83);
        // 83 005A
        gbc.setState(0x9e82, 0xa4dd, 0xc640, 0xa76a, 0x76bc, 0xf519, 0x0, 0x1);
        gbc.writeMem(0x9e82, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa4dd);
        EXPECT(gbc.pc(), 0x9e83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e82), 0x83);
        // 83 005B
        gbc.setState(0xa8f6, 0xbcc2, 0x7ea0, 0x3b2f, 0x6e39, 0x6680, 0x0, 0x1);
        gbc.writeMem(0xa8f6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbcc2);
        EXPECT(gbc.pc(), 0xa8f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f6), 0x83);
        // 83 005D
        gbc.setState(0xd44e, 0xccb7, 0x13f0, 0xbb5b, 0xb432, 0xd521, 0x1, 0x0);
        gbc.writeMem(0xd44e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xccb7);
        EXPECT(gbc.pc(), 0xd44f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd44e), 0x83);
        // 83 005E
        gbc.setState(0x5082, 0xf51, 0x5030, 0xa262, 0x971e, 0x796d, 0x1, 0x1);
        gbc.writeMem(0x5082, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf51);
        EXPECT(gbc.pc(), 0x5083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 005F
        gbc.setState(0x1dee, 0x1496, 0xf720, 0xb131, 0x921d, 0xe4be, 0x1, 0x1);
        gbc.writeMem(0x1dee, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1496);
        EXPECT(gbc.pc(), 0x1def);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0060
        gbc.setState(0xe905, 0x73a4, 0xd00, 0x54b0, 0x61bf, 0x371a, 0x1, 0x0);
        gbc.writeMem(0xe905, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x73a4);
        EXPECT(gbc.pc(), 0xe906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe905), 0x83);
        // 83 0061
        gbc.setState(0x56a5, 0x2dd5, 0xf030, 0x19a2, 0x758e, 0xd6d9, 0x0, 0x0);
        gbc.writeMem(0x56a5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2dd5);
        EXPECT(gbc.pc(), 0x56a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0062
        gbc.setState(0x2df3, 0x5cfd, 0xc890, 0x8bfd, 0x6ef8, 0x803e, 0x1, 0x1);
        gbc.writeMem(0x2df3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5cfd);
        EXPECT(gbc.pc(), 0x2df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0063
        gbc.setState(0xa028, 0xaded, 0x680, 0xa011, 0x304a, 0x913a, 0x0, 0x0);
        gbc.writeMem(0xa028, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xaded);
        EXPECT(gbc.pc(), 0xa029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa028), 0x83);
        // 83 0064
        gbc.setState(0xa931, 0x635d, 0x280, 0x8082, 0x9545, 0x9dea, 0x0, 0x0);
        gbc.writeMem(0xa931, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x635d);
        EXPECT(gbc.pc(), 0xa932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa931), 0x83);
        // 83 0065
        gbc.setState(0x540f, 0xe8a0, 0xb600, 0xfc7a, 0xf549, 0x8801, 0x1, 0x0);
        gbc.writeMem(0x540f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe8a0);
        EXPECT(gbc.pc(), 0x5410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0066
        gbc.setState(0x126e, 0xd03, 0xc390, 0xa29a, 0xf49, 0x8775, 0x0, 0x0);
        gbc.writeMem(0x126e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd03);
        EXPECT(gbc.pc(), 0x126f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0067
        gbc.setState(0x9b3d, 0x966c, 0x32e0, 0x59d9, 0xbc3a, 0x3d85, 0x0, 0x1);
        gbc.writeMem(0x9b3d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x966c);
        EXPECT(gbc.pc(), 0x9b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b3d), 0x83);
        // 83 0068
        gbc.setState(0x9a81, 0xbab1, 0x45a0, 0xe753, 0x55d6, 0x65a1, 0x0, 0x0);
        gbc.writeMem(0x9a81, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbab1);
        EXPECT(gbc.pc(), 0x9a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a81), 0x83);
        // 83 0069
        gbc.setState(0x31d5, 0x4583, 0x6c60, 0xd9bc, 0xffad, 0x6f77, 0x1, 0x0);
        gbc.writeMem(0x31d5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4583);
        EXPECT(gbc.pc(), 0x31d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 006A
        gbc.setState(0xfb8, 0x1d63, 0xc390, 0x68b8, 0xc999, 0xde97, 0x0, 0x0);
        gbc.writeMem(0xfb8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1d63);
        EXPECT(gbc.pc(), 0xfb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 006C
        gbc.setState(0x6b4c, 0x8715, 0x9f00, 0xe6a5, 0x9e21, 0x7cad, 0x1, 0x1);
        gbc.writeMem(0x6b4c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8715);
        EXPECT(gbc.pc(), 0x6b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 006D
        gbc.setState(0xc2fe, 0x13d, 0xe9a0, 0xc88d, 0xd55a, 0xaa7a, 0x0, 0x1);
        gbc.writeMem(0xc2fe, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x13d);
        EXPECT(gbc.pc(), 0xc2ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2fe), 0x83);
        // 83 006E
        gbc.setState(0x94e3, 0xbeef, 0x8b20, 0x14d2, 0xe39, 0x6e41, 0x1, 0x1);
        gbc.writeMem(0x94e3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbeef);
        EXPECT(gbc.pc(), 0x94e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94e3), 0x83);
        // 83 006F
        gbc.setState(0xa54e, 0x9e53, 0xdd70, 0x1ba4, 0x7df9, 0x5109, 0x1, 0x1);
        gbc.writeMem(0xa54e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9e53);
        EXPECT(gbc.pc(), 0xa54f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa54e), 0x83);
        // 83 0070
        gbc.setState(0xbf76, 0x7ac2, 0xdb00, 0x2b29, 0x82fa, 0x1ad6, 0x0, 0x0);
        gbc.writeMem(0xbf76, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7ac2);
        EXPECT(gbc.pc(), 0xbf77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf76), 0x83);
        // 83 0071
        gbc.setState(0x6887, 0x6767, 0x8350, 0xaf44, 0x7a50, 0xb04c, 0x1, 0x1);
        gbc.writeMem(0x6887, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6767);
        EXPECT(gbc.pc(), 0x6888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0072
        gbc.setState(0xb566, 0xfde3, 0x2f0, 0x1468, 0xdac6, 0x1f56, 0x1, 0x0);
        gbc.writeMem(0xb566, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfde3);
        EXPECT(gbc.pc(), 0xb567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb566), 0x83);
        // 83 0073
        gbc.setState(0xe86c, 0x46e6, 0x550, 0xc4b5, 0x2ff1, 0x5618, 0x0, 0x0);
        gbc.writeMem(0xe86c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x46e6);
        EXPECT(gbc.pc(), 0xe86d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe86c), 0x83);
        // 83 0074
        gbc.setState(0x9249, 0xc88, 0x5f20, 0xe3b3, 0xec5f, 0x925d, 0x1, 0x1);
        gbc.writeMem(0x9249, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc88);
        EXPECT(gbc.pc(), 0x924a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9249), 0x83);
        // 83 0075
        gbc.setState(0x6a30, 0x577f, 0x68d0, 0xbf4c, 0x4a0a, 0x555f, 0x0, 0x0);
        gbc.writeMem(0x6a30, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x577f);
        EXPECT(gbc.pc(), 0x6a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0076
        gbc.setState(0xeb99, 0xb06b, 0xe2d0, 0x7ced, 0x8600, 0x7d15, 0x0, 0x0);
        gbc.writeMem(0xeb99, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb06b);
        EXPECT(gbc.pc(), 0xeb9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb99), 0x83);
        // 83 0077
        gbc.setState(0x83ae, 0x137c, 0xf030, 0xfc0d, 0x72d3, 0x1404, 0x1, 0x1);
        gbc.writeMem(0x83ae, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x137c);
        EXPECT(gbc.pc(), 0x83af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ae), 0x83);
        // 83 0078
        gbc.setState(0x5cc0, 0xfa1d, 0x7e30, 0x1375, 0xe7a2, 0x2b10, 0x1, 0x0);
        gbc.writeMem(0x5cc0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfa1d);
        EXPECT(gbc.pc(), 0x5cc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0079
        gbc.setState(0x2f50, 0xe912, 0x33c0, 0xea9f, 0xef10, 0x4a3b, 0x1, 0x0);
        gbc.writeMem(0x2f50, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe912);
        EXPECT(gbc.pc(), 0x2f51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 007A
        gbc.setState(0x243f, 0x2264, 0x13e0, 0xc802, 0xd2eb, 0x7975, 0x0, 0x1);
        gbc.writeMem(0x243f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2264);
        EXPECT(gbc.pc(), 0x2440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 007B
        gbc.setState(0xb8eb, 0x767f, 0x8790, 0x83bc, 0x3f5d, 0xd82b, 0x0, 0x1);
        gbc.writeMem(0xb8eb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x767f);
        EXPECT(gbc.pc(), 0xb8ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8eb), 0x83);
        // 83 007C
        gbc.setState(0x9441, 0xfcb6, 0x9e90, 0x8132, 0x94f9, 0xe40c, 0x0, 0x0);
        gbc.writeMem(0x9441, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfcb6);
        EXPECT(gbc.pc(), 0x9442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9441), 0x83);
        // 83 007E
        gbc.setState(0xea28, 0x7dc8, 0x23d0, 0xf002, 0x81dc, 0x8387, 0x1, 0x1);
        gbc.writeMem(0xea28, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7dc8);
        EXPECT(gbc.pc(), 0xea29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea28), 0x83);
        // 83 007F
        gbc.setState(0x28ee, 0xc42b, 0xed50, 0x666b, 0xf95a, 0xc15d, 0x0, 0x0);
        gbc.writeMem(0x28ee, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc42b);
        EXPECT(gbc.pc(), 0x28ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0080
        gbc.setState(0x8741, 0x63f3, 0xddd0, 0x9333, 0xee2a, 0x338b, 0x0, 0x1);
        gbc.writeMem(0x8741, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x63f3);
        EXPECT(gbc.pc(), 0x8742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8741), 0x83);
        // 83 0081
        gbc.setState(0x847c, 0xd1d1, 0x370, 0x820f, 0x67b8, 0x9936, 0x1, 0x0);
        gbc.writeMem(0x847c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd1d1);
        EXPECT(gbc.pc(), 0x847d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x847c), 0x83);
        // 83 0082
        gbc.setState(0xa59d, 0x5af6, 0x43a0, 0x5ab0, 0x1489, 0x776, 0x0, 0x1);
        gbc.writeMem(0xa59d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5af6);
        EXPECT(gbc.pc(), 0xa59e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa59d), 0x83);
        // 83 0083
        gbc.setState(0x57c4, 0x2d0d, 0xd410, 0x96eb, 0x481e, 0xdb82, 0x1, 0x0);
        gbc.writeMem(0x57c4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2d0d);
        EXPECT(gbc.pc(), 0x57c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0084
        gbc.setState(0x68ca, 0xb04f, 0x5690, 0xa661, 0x8577, 0x4e26, 0x1, 0x1);
        gbc.writeMem(0x68ca, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb04f);
        EXPECT(gbc.pc(), 0x68cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0085
        gbc.setState(0xbd63, 0x35ab, 0xd050, 0xc4b8, 0xe8c4, 0x446f, 0x1, 0x0);
        gbc.writeMem(0xbd63, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x35ab);
        EXPECT(gbc.pc(), 0xbd64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd63), 0x83);
        // 83 0086
        gbc.setState(0x8852, 0xa954, 0xce10, 0x4c22, 0xaa54, 0x78ea, 0x0, 0x0);
        gbc.writeMem(0x8852, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa954);
        EXPECT(gbc.pc(), 0x8853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8852), 0x83);
        // 83 0087
        gbc.setState(0x2c49, 0x26fd, 0x69b0, 0x6d90, 0x90e5, 0xde7f, 0x1, 0x0);
        gbc.writeMem(0x2c49, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x26fd);
        EXPECT(gbc.pc(), 0x2c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0088
        gbc.setState(0x4505, 0xf213, 0x18e0, 0x3ac7, 0x51f6, 0xac1c, 0x0, 0x1);
        gbc.writeMem(0x4505, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf213);
        EXPECT(gbc.pc(), 0x4506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0089
        gbc.setState(0x24e, 0x23f2, 0x1780, 0x6aa, 0xc06b, 0xe323, 0x0, 0x0);
        gbc.writeMem(0x24e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x23f2);
        EXPECT(gbc.pc(), 0x24f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 008A
        gbc.setState(0x134, 0xbca9, 0x5dc0, 0x38ea, 0x5ce5, 0xea08, 0x1, 0x0);
        gbc.writeMem(0x134, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xbca9);
        EXPECT(gbc.pc(), 0x135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 008B
        gbc.setState(0x4eeb, 0xf2c8, 0xf230, 0xd9fa, 0x1199, 0x92e1, 0x1, 0x0);
        gbc.writeMem(0x4eeb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf2c8);
        EXPECT(gbc.pc(), 0x4eec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 008C
        gbc.setState(0x2ffe, 0x3fd9, 0xa3b0, 0x87f0, 0x401a, 0xb92e, 0x1, 0x1);
        gbc.writeMem(0x2ffe, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3fd9);
        EXPECT(gbc.pc(), 0x2fff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 008D
        gbc.setState(0xe7e0, 0xce94, 0xac40, 0x3c05, 0xeb5e, 0xdb4c, 0x1, 0x1);
        gbc.writeMem(0xe7e0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xce94);
        EXPECT(gbc.pc(), 0xe7e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7e0), 0x83);
        // 83 008E
        gbc.setState(0x2be0, 0x89f9, 0x3ce0, 0xc8aa, 0x4fb3, 0x67b5, 0x0, 0x1);
        gbc.writeMem(0x2be0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x89f9);
        EXPECT(gbc.pc(), 0x2be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0090
        gbc.setState(0x362d, 0xbdde, 0x77a0, 0x5a66, 0xf282, 0x6b0b, 0x1, 0x0);
        gbc.writeMem(0x362d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbdde);
        EXPECT(gbc.pc(), 0x362e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0091
        gbc.setState(0x29f6, 0x9757, 0x7270, 0xc67c, 0xf7ed, 0x1961, 0x0, 0x1);
        gbc.writeMem(0x29f6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9757);
        EXPECT(gbc.pc(), 0x29f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0092
        gbc.setState(0x9dd4, 0x28a2, 0x44e0, 0xffd9, 0x96ad, 0x32b0, 0x0, 0x1);
        gbc.writeMem(0x9dd4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x28a2);
        EXPECT(gbc.pc(), 0x9dd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dd4), 0x83);
        // 83 0093
        gbc.setState(0xc247, 0x308, 0x8fc0, 0x93be, 0x3cd1, 0x1102, 0x0, 0x0);
        gbc.writeMem(0xc247, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x308);
        EXPECT(gbc.pc(), 0xc248);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc247), 0x83);
        // 83 0094
        gbc.setState(0xa0c7, 0x7770, 0xe620, 0x9be9, 0xa1, 0x903a, 0x1, 0x1);
        gbc.writeMem(0xa0c7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7770);
        EXPECT(gbc.pc(), 0xa0c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0c7), 0x83);
        // 83 0095
        gbc.setState(0x617f, 0x5945, 0xffd0, 0x176c, 0x690d, 0x3cef, 0x1, 0x1);
        gbc.writeMem(0x617f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5945);
        EXPECT(gbc.pc(), 0x6180);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0096
        gbc.setState(0xe15e, 0x3063, 0x26e0, 0xfc77, 0xadb2, 0x995a, 0x0, 0x1);
        gbc.writeMem(0xe15e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3063);
        EXPECT(gbc.pc(), 0xe15f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe15e), 0x83);
        // 83 0097
        gbc.setState(0x8e28, 0xf777, 0xe990, 0x6c9f, 0x9fe6, 0x5ab2, 0x1, 0x1);
        gbc.writeMem(0x8e28, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf777);
        EXPECT(gbc.pc(), 0x8e29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e28), 0x83);
        // 83 0098
        gbc.setState(0x8009, 0xea2b, 0x73a0, 0xcd8c, 0xbdce, 0x6af9, 0x0, 0x0);
        gbc.writeMem(0x8009, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xea2b);
        EXPECT(gbc.pc(), 0x800a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8009), 0x83);
        // 83 0099
        gbc.setState(0x27ed, 0x9f49, 0xd270, 0xef8d, 0x5a44, 0x83f3, 0x1, 0x0);
        gbc.writeMem(0x27ed, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9f49);
        EXPECT(gbc.pc(), 0x27ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 009A
        gbc.setState(0xd1df, 0x5d06, 0xedd0, 0xa4b7, 0x3d89, 0x390b, 0x0, 0x0);
        gbc.writeMem(0xd1df, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5d06);
        EXPECT(gbc.pc(), 0xd1e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1df), 0x83);
        // 83 009B
        gbc.setState(0x75fa, 0x609c, 0xcaa0, 0xd467, 0xd235, 0xcb39, 0x1, 0x1);
        gbc.writeMem(0x75fa, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x609c);
        EXPECT(gbc.pc(), 0x75fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 009C
        gbc.setState(0xc0e3, 0xfd74, 0x9d80, 0x3885, 0x23ae, 0x2606, 0x0, 0x1);
        gbc.writeMem(0xc0e3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfd74);
        EXPECT(gbc.pc(), 0xc0e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e3), 0x83);
        // 83 009D
        gbc.setState(0xb0cc, 0xf6fc, 0xfbc0, 0x45bd, 0x44c0, 0x2203, 0x1, 0x0);
        gbc.writeMem(0xb0cc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf6fc);
        EXPECT(gbc.pc(), 0xb0cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0cc), 0x83);
        // 83 009E
        gbc.setState(0x6f7, 0xa370, 0xd780, 0x79b8, 0x9908, 0x2532, 0x0, 0x1);
        gbc.writeMem(0x6f7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa370);
        EXPECT(gbc.pc(), 0x6f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 009F
        gbc.setState(0xaa5c, 0x236, 0x8c50, 0xf65b, 0x5a13, 0xa05d, 0x0, 0x1);
        gbc.writeMem(0xaa5c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x236);
        EXPECT(gbc.pc(), 0xaa5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa5c), 0x83);
        // 83 00A0
        gbc.setState(0xeb9, 0x1fdd, 0x41b0, 0xeda9, 0x8a0a, 0xda0c, 0x0, 0x0);
        gbc.writeMem(0xeb9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1fdd);
        EXPECT(gbc.pc(), 0xeba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00A1
        gbc.setState(0x445a, 0x8fa9, 0x6c10, 0x3c6d, 0x51dc, 0x4f19, 0x0, 0x0);
        gbc.writeMem(0x445a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8fa9);
        EXPECT(gbc.pc(), 0x445b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 00A2
        gbc.setState(0x2f04, 0x7577, 0x8cb0, 0x4d1a, 0xe3aa, 0x329c, 0x0, 0x0);
        gbc.writeMem(0x2f04, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7577);
        EXPECT(gbc.pc(), 0x2f05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 00A3
        gbc.setState(0x3650, 0xfbb, 0xe540, 0x9117, 0x3c02, 0x3675, 0x0, 0x1);
        gbc.writeMem(0x3650, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfbb);
        EXPECT(gbc.pc(), 0x3651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00A4
        gbc.setState(0x560f, 0xb16b, 0xf970, 0x61d7, 0x8f65, 0xf03d, 0x0, 0x1);
        gbc.writeMem(0x560f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb16b);
        EXPECT(gbc.pc(), 0x5610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00A5
        gbc.setState(0xbb9a, 0xd84e, 0xd6b0, 0xd8c3, 0xc72, 0x24ad, 0x0, 0x1);
        gbc.writeMem(0xbb9a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd84e);
        EXPECT(gbc.pc(), 0xbb9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb9a), 0x83);
        // 83 00A6
        gbc.setState(0x6336, 0x8e3c, 0x6340, 0xf7fc, 0x52f1, 0xd679, 0x1, 0x1);
        gbc.writeMem(0x6336, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8e3c);
        EXPECT(gbc.pc(), 0x6337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00A7
        gbc.setState(0x9fba, 0x6b21, 0xe1b0, 0x5bcc, 0xc02b, 0xe2ac, 0x1, 0x1);
        gbc.writeMem(0x9fba, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6b21);
        EXPECT(gbc.pc(), 0x9fbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fba), 0x83);
        // 83 00A8
        gbc.setState(0x141c, 0xd987, 0x7010, 0xc1a, 0xe533, 0x7f64, 0x1, 0x1);
        gbc.writeMem(0x141c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd987);
        EXPECT(gbc.pc(), 0x141d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00AA
        gbc.setState(0xdd2c, 0xbaad, 0xa3b0, 0xb306, 0x435d, 0x6a32, 0x0, 0x1);
        gbc.writeMem(0xdd2c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbaad);
        EXPECT(gbc.pc(), 0xdd2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd2c), 0x83);
        // 83 00AB
        gbc.setState(0xcdfb, 0x7900, 0xeb80, 0x7192, 0xa02, 0xb445, 0x1, 0x1);
        gbc.writeMem(0xcdfb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7900);
        EXPECT(gbc.pc(), 0xcdfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdfb), 0x83);
        // 83 00B0
        gbc.setState(0xa1a4, 0x6eee, 0x3e50, 0x7fd0, 0xfbc, 0xf9f6, 0x1, 0x1);
        gbc.writeMem(0xa1a4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6eee);
        EXPECT(gbc.pc(), 0xa1a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1a4), 0x83);
        // 83 00B1
        gbc.setState(0xaa20, 0x1492, 0x8d0, 0x5bd5, 0xadf8, 0x85e7, 0x0, 0x1);
        gbc.writeMem(0xaa20, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1492);
        EXPECT(gbc.pc(), 0xaa21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa20), 0x83);
        // 83 00B2
        gbc.setState(0xef7a, 0x17fd, 0x5bb0, 0x9324, 0x4232, 0x6e17, 0x1, 0x1);
        gbc.writeMem(0xef7a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x17fd);
        EXPECT(gbc.pc(), 0xef7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef7a), 0x83);
        // 83 00B3
        gbc.setState(0x71fa, 0xa9d8, 0xf880, 0x9de4, 0xb61, 0xddd4, 0x0, 0x1);
        gbc.writeMem(0x71fa, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa9d8);
        EXPECT(gbc.pc(), 0x71fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00B4
        gbc.setState(0x7ff1, 0x278a, 0x9700, 0x6f78, 0xeb9f, 0x4194, 0x1, 0x1);
        gbc.writeMem(0x7ff1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x278a);
        EXPECT(gbc.pc(), 0x7ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 00B5
        gbc.setState(0x1a7d, 0xa554, 0x3e10, 0x983d, 0x859f, 0xeadc, 0x0, 0x1);
        gbc.writeMem(0x1a7d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa554);
        EXPECT(gbc.pc(), 0x1a7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 00B6
        gbc.setState(0x19d, 0x224a, 0xa40, 0x94bd, 0x217d, 0xd217, 0x0, 0x1);
        gbc.writeMem(0x19d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x224a);
        EXPECT(gbc.pc(), 0x19e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 00B7
        gbc.setState(0x3bcf, 0xa80d, 0xb960, 0xba7, 0x4bb6, 0xe718, 0x0, 0x0);
        gbc.writeMem(0x3bcf, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa80d);
        EXPECT(gbc.pc(), 0x3bd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00B8
        gbc.setState(0x6ed4, 0x3784, 0x73e0, 0x4e4f, 0x2303, 0x3074, 0x1, 0x0);
        gbc.writeMem(0x6ed4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3784);
        EXPECT(gbc.pc(), 0x6ed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00B9
        gbc.setState(0x4845, 0x1137, 0x6ca0, 0xc2dd, 0xa3e9, 0x3803, 0x0, 0x1);
        gbc.writeMem(0x4845, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1137);
        EXPECT(gbc.pc(), 0x4846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 00BA
        gbc.setState(0xd164, 0xcd16, 0xf910, 0x518e, 0x61d0, 0x1f65, 0x0, 0x1);
        gbc.writeMem(0xd164, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xcd16);
        EXPECT(gbc.pc(), 0xd165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd164), 0x83);
        // 83 00BB
        gbc.setState(0xdb8f, 0x2b17, 0x5d60, 0xee18, 0x79b7, 0xa92, 0x0, 0x0);
        gbc.writeMem(0xdb8f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2b17);
        EXPECT(gbc.pc(), 0xdb90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb8f), 0x83);
        // 83 00BC
        gbc.setState(0xe145, 0x62e1, 0x5f00, 0xb6a, 0xdd78, 0xafaf, 0x1, 0x1);
        gbc.writeMem(0xe145, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x62e1);
        EXPECT(gbc.pc(), 0xe146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe145), 0x83);
        // 83 00BD
        gbc.setState(0x97d0, 0x4e9f, 0xb2a0, 0x6a57, 0x56a4, 0x5ca3, 0x1, 0x1);
        gbc.writeMem(0x97d0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4e9f);
        EXPECT(gbc.pc(), 0x97d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97d0), 0x83);
        // 83 00BE
        gbc.setState(0x471, 0x225c, 0xdf0, 0x76da, 0x215f, 0x1150, 0x1, 0x0);
        gbc.writeMem(0x471, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x225c);
        EXPECT(gbc.pc(), 0x472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 00BF
        gbc.setState(0xbf8d, 0xa188, 0x47b0, 0x5dc4, 0xab25, 0x1a2, 0x0, 0x0);
        gbc.writeMem(0xbf8d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa188);
        EXPECT(gbc.pc(), 0xbf8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf8d), 0x83);
        // 83 00C0
        gbc.setState(0xe9cb, 0x4421, 0x6de0, 0x6a1b, 0x51a0, 0x52b, 0x1, 0x1);
        gbc.writeMem(0xe9cb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4421);
        EXPECT(gbc.pc(), 0xe9cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9cb), 0x83);
        // 83 00C2
        gbc.setState(0xe816, 0x44e7, 0xaec0, 0x2bb3, 0xb6c8, 0x9f02, 0x1, 0x1);
        gbc.writeMem(0xe816, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x44e7);
        EXPECT(gbc.pc(), 0xe817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe816), 0x83);
        // 83 00C3
        gbc.setState(0x5ec2, 0x7093, 0xd590, 0x42ec, 0xa9f7, 0x7b4d, 0x0, 0x0);
        gbc.writeMem(0x5ec2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7093);
        EXPECT(gbc.pc(), 0x5ec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00C4
        gbc.setState(0xec21, 0x605f, 0x37b0, 0x13a5, 0x5705, 0x199a, 0x0, 0x0);
        gbc.writeMem(0xec21, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x605f);
        EXPECT(gbc.pc(), 0xec22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec21), 0x83);
        // 83 00C5
        gbc.setState(0x6303, 0xa9d3, 0x1230, 0x782d, 0x56c2, 0x39e8, 0x0, 0x0);
        gbc.writeMem(0x6303, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa9d3);
        EXPECT(gbc.pc(), 0x6304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00C6
        gbc.setState(0x8b76, 0xe670, 0xb1b0, 0x23fd, 0xc6dc, 0x490b, 0x0, 0x1);
        gbc.writeMem(0x8b76, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe670);
        EXPECT(gbc.pc(), 0x8b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b76), 0x83);
        // 83 00C9
        gbc.setState(0x4126, 0x972e, 0xa990, 0x9200, 0x2a81, 0x5586, 0x0, 0x0);
        gbc.writeMem(0x4126, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x972e);
        EXPECT(gbc.pc(), 0x4127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00CA
        gbc.setState(0x16dc, 0x2181, 0x63b0, 0x3de2, 0x4693, 0xb597, 0x0, 0x0);
        gbc.writeMem(0x16dc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2181);
        EXPECT(gbc.pc(), 0x16dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00CB
        gbc.setState(0xcd3d, 0x243c, 0x3a60, 0x2d4f, 0xdd62, 0x9372, 0x0, 0x0);
        gbc.writeMem(0xcd3d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x243c);
        EXPECT(gbc.pc(), 0xcd3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3d), 0x83);
        // 83 00CC
        gbc.setState(0x747e, 0xaad1, 0xec80, 0xab26, 0x4a0d, 0x45bd, 0x1, 0x1);
        gbc.writeMem(0x747e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xaad1);
        EXPECT(gbc.pc(), 0x747f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 00CD
        gbc.setState(0xcc60, 0x404a, 0x5160, 0x8873, 0xdd6d, 0x3c7c, 0x0, 0x1);
        gbc.writeMem(0xcc60, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x404a);
        EXPECT(gbc.pc(), 0xcc61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc60), 0x83);
        // 83 00CE
        gbc.setState(0x10a5, 0x959a, 0x9350, 0xc3ec, 0xc073, 0xdc12, 0x0, 0x1);
        gbc.writeMem(0x10a5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x959a);
        EXPECT(gbc.pc(), 0x10a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00CF
        gbc.setState(0xc66f, 0xc0bd, 0x3d80, 0xebde, 0x3579, 0x759b, 0x1, 0x1);
        gbc.writeMem(0xc66f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc0bd);
        EXPECT(gbc.pc(), 0xc670);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc66f), 0x83);
        // 83 00D0
        gbc.setState(0xaa52, 0xc432, 0x5af0, 0x2172, 0x4ec7, 0x766e, 0x0, 0x0);
        gbc.writeMem(0xaa52, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc432);
        EXPECT(gbc.pc(), 0xaa53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa52), 0x83);
        // 83 00D1
        gbc.setState(0x21da, 0xe09e, 0xd820, 0xb1d2, 0x9551, 0x2bd, 0x1, 0x0);
        gbc.writeMem(0x21da, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe09e);
        EXPECT(gbc.pc(), 0x21db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00D2
        gbc.setState(0x14f0, 0xa824, 0x59a0, 0x2f81, 0xd638, 0xc4a4, 0x0, 0x1);
        gbc.writeMem(0x14f0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa824);
        EXPECT(gbc.pc(), 0x14f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 00D3
        gbc.setState(0x3c73, 0xdb8d, 0xacc0, 0x1315, 0xf27a, 0x35c4, 0x0, 0x0);
        gbc.writeMem(0x3c73, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdb8d);
        EXPECT(gbc.pc(), 0x3c74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 00D4
        gbc.setState(0xc6f1, 0x4531, 0x7d80, 0x48f5, 0x1d7f, 0x35ec, 0x0, 0x0);
        gbc.writeMem(0xc6f1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4531);
        EXPECT(gbc.pc(), 0xc6f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6f1), 0x83);
        // 83 00D5
        gbc.setState(0x3703, 0xafc4, 0x35e0, 0xe431, 0x713, 0x65ed, 0x1, 0x1);
        gbc.writeMem(0x3703, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xafc4);
        EXPECT(gbc.pc(), 0x3704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00D6
        gbc.setState(0x74b2, 0x49dc, 0x4610, 0xd6c2, 0x6507, 0xe0d0, 0x1, 0x1);
        gbc.writeMem(0x74b2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x49dc);
        EXPECT(gbc.pc(), 0x74b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00D7
        gbc.setState(0x959d, 0x3dbf, 0x8a60, 0x2e3e, 0x2dc4, 0x4499, 0x0, 0x0);
        gbc.writeMem(0x959d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3dbf);
        EXPECT(gbc.pc(), 0x959e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x959d), 0x83);
        // 83 00D8
        gbc.setState(0xb704, 0x9548, 0xd910, 0xd5a7, 0x2c61, 0x7a88, 0x0, 0x1);
        gbc.writeMem(0xb704, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9548);
        EXPECT(gbc.pc(), 0xb705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb704), 0x83);
        // 83 00D9
        gbc.setState(0x3b07, 0xabd3, 0x97e0, 0xa92c, 0x4c90, 0x594a, 0x1, 0x0);
        gbc.writeMem(0x3b07, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xabd3);
        EXPECT(gbc.pc(), 0x3b08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00DA
        gbc.setState(0x85c1, 0xc8db, 0xf090, 0xc500, 0xf46c, 0xe3e0, 0x0, 0x0);
        gbc.writeMem(0x85c1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc8db);
        EXPECT(gbc.pc(), 0x85c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85c1), 0x83);
        // 83 00DB
        gbc.setState(0x3383, 0xfa64, 0x9880, 0x70c9, 0x8caa, 0x772d, 0x0, 0x0);
        gbc.writeMem(0x3383, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xfa64);
        EXPECT(gbc.pc(), 0x3384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 00DC
        gbc.setState(0x20a9, 0xa457, 0xaae0, 0xf1ec, 0x71a1, 0x1a8f, 0x0, 0x1);
        gbc.writeMem(0x20a9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa457);
        EXPECT(gbc.pc(), 0x20aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00DD
        gbc.setState(0x890b, 0xec87, 0x40d0, 0x41e2, 0x68d8, 0xb673, 0x0, 0x0);
        gbc.writeMem(0x890b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xec87);
        EXPECT(gbc.pc(), 0x890c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x890b), 0x83);
        // 83 00DE
        gbc.setState(0x7add, 0x90cf, 0xce40, 0x8b37, 0x744e, 0xb501, 0x0, 0x0);
        gbc.writeMem(0x7add, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x90cf);
        EXPECT(gbc.pc(), 0x7ade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 00DF
        gbc.setState(0x2328, 0xc60b, 0xe40, 0xc2bb, 0x83a, 0xe6aa, 0x0, 0x1);
        gbc.writeMem(0x2328, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc60b);
        EXPECT(gbc.pc(), 0x2329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 00E1
        gbc.setState(0x2686, 0xc217, 0xf6d0, 0x21b0, 0x830a, 0xf35c, 0x0, 0x1);
        gbc.writeMem(0x2686, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc217);
        EXPECT(gbc.pc(), 0x2687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 00E2
        gbc.setState(0xe697, 0x8938, 0xf250, 0x7487, 0x7ba, 0x882b, 0x0, 0x1);
        gbc.writeMem(0xe697, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8938);
        EXPECT(gbc.pc(), 0xe698);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe697), 0x83);
        // 83 00E3
        gbc.setState(0xb2c1, 0xfb00, 0xf8a0, 0xb0ef, 0xe006, 0x6f0b, 0x1, 0x0);
        gbc.writeMem(0xb2c1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xfb00);
        EXPECT(gbc.pc(), 0xb2c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2c1), 0x83);
        // 83 00E4
        gbc.setState(0x6eba, 0x545d, 0x4a20, 0x4f5a, 0x7c1c, 0xf343, 0x0, 0x1);
        gbc.writeMem(0x6eba, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x545d);
        EXPECT(gbc.pc(), 0x6ebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 00E5
        gbc.setState(0x4462, 0x7670, 0xbb50, 0xb3da, 0x18c9, 0x21e2, 0x1, 0x1);
        gbc.writeMem(0x4462, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7670);
        EXPECT(gbc.pc(), 0x4463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 00E6
        gbc.setState(0x968, 0x971d, 0x1e50, 0xa885, 0x4750, 0xfb4b, 0x0, 0x1);
        gbc.writeMem(0x968, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x971d);
        EXPECT(gbc.pc(), 0x969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00E7
        gbc.setState(0x335e, 0x7818, 0x28a0, 0xcdd6, 0xda77, 0xdb6f, 0x0, 0x0);
        gbc.writeMem(0x335e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7818);
        EXPECT(gbc.pc(), 0x335f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00E8
        gbc.setState(0x3af, 0xb21f, 0x8680, 0xd4d9, 0xf825, 0x8785, 0x0, 0x0);
        gbc.writeMem(0x3af, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb21f);
        EXPECT(gbc.pc(), 0x3b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00E9
        gbc.setState(0x3870, 0x5af0, 0xd2d0, 0xdda2, 0x50b7, 0x5ed9, 0x1, 0x1);
        gbc.writeMem(0x3870, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5af0);
        EXPECT(gbc.pc(), 0x3871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00EA
        gbc.setState(0x8d08, 0x248c, 0xa4c0, 0x66ce, 0xda25, 0xfe33, 0x1, 0x0);
        gbc.writeMem(0x8d08, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x248c);
        EXPECT(gbc.pc(), 0x8d09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d08), 0x83);
        // 83 00EB
        gbc.setState(0x5fc4, 0x5332, 0xa4e0, 0x652c, 0x1ce2, 0x8214, 0x1, 0x1);
        gbc.writeMem(0x5fc4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5332);
        EXPECT(gbc.pc(), 0x5fc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00EC
        gbc.setState(0xc9d4, 0xe63e, 0xbec0, 0x7e31, 0xaffd, 0xbd8a, 0x0, 0x0);
        gbc.writeMem(0xc9d4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe63e);
        EXPECT(gbc.pc(), 0xc9d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9d4), 0x83);
        // 83 00ED
        gbc.setState(0x7773, 0x3fc, 0x14f0, 0x649a, 0xcf39, 0xa8b6, 0x0, 0x0);
        gbc.writeMem(0x7773, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3fc);
        EXPECT(gbc.pc(), 0x7774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00EE
        gbc.setState(0xe78, 0xdd44, 0x33e0, 0x8340, 0x2cb8, 0x9f94, 0x0, 0x1);
        gbc.writeMem(0xe78, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xdd44);
        EXPECT(gbc.pc(), 0xe79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00EF
        gbc.setState(0x6805, 0xa12d, 0x8880, 0xee6b, 0xd71, 0x969e, 0x1, 0x0);
        gbc.writeMem(0x6805, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa12d);
        EXPECT(gbc.pc(), 0x6806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00F0
        gbc.setState(0xaac0, 0x6efb, 0x9d0, 0x251a, 0xb4bf, 0xe0ca, 0x0, 0x1);
        gbc.writeMem(0xaac0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6efb);
        EXPECT(gbc.pc(), 0xaac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaac0), 0x83);
        // 83 00F1
        gbc.setState(0xd7f4, 0xc6ad, 0x23a0, 0x31f6, 0xd82e, 0x836a, 0x1, 0x0);
        gbc.writeMem(0xd7f4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc6ad);
        EXPECT(gbc.pc(), 0xd7f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f4), 0x83);
        // 83 00F2
        gbc.setState(0x7226, 0xb765, 0xe500, 0x5362, 0x12a0, 0x24e4, 0x1, 0x0);
        gbc.writeMem(0x7226, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb765);
        EXPECT(gbc.pc(), 0x7227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00F3
        gbc.setState(0x60f7, 0xfd23, 0x47f0, 0xa3a0, 0x9c17, 0x6797, 0x0, 0x1);
        gbc.writeMem(0x60f7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xfd23);
        EXPECT(gbc.pc(), 0x60f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00F4
        gbc.setState(0xa203, 0x8479, 0x1bd0, 0x6564, 0xdacc, 0xbcd6, 0x1, 0x1);
        gbc.writeMem(0xa203, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8479);
        EXPECT(gbc.pc(), 0xa204);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa203), 0x83);
        // 83 00F5
        gbc.setState(0x4aa4, 0xc9c3, 0xd080, 0xc9cc, 0xf6e4, 0xa777, 0x1, 0x1);
        gbc.writeMem(0x4aa4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc9c3);
        EXPECT(gbc.pc(), 0x4aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00F6
        gbc.setState(0xba62, 0xaee9, 0xda0, 0x16c4, 0x8bb4, 0xc609, 0x0, 0x1);
        gbc.writeMem(0xba62, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xaee9);
        EXPECT(gbc.pc(), 0xba63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba62), 0x83);
        // 83 00F7
        gbc.setState(0x6ab2, 0xcb75, 0xb5c0, 0x3b03, 0xd6b4, 0xd749, 0x0, 0x1);
        gbc.writeMem(0x6ab2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xcb75);
        EXPECT(gbc.pc(), 0x6ab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00F8
        gbc.setState(0x56ed, 0x1dfb, 0xbbb0, 0x87e2, 0xa17e, 0xc90, 0x1, 0x0);
        gbc.writeMem(0x56ed, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1dfb);
        EXPECT(gbc.pc(), 0x56ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 00F9
        gbc.setState(0x2798, 0x8aba, 0xa0, 0x707a, 0x8bce, 0xd42b, 0x1, 0x1);
        gbc.writeMem(0x2798, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8aba);
        EXPECT(gbc.pc(), 0x2799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00FA
        gbc.setState(0x68d3, 0xbc46, 0x6070, 0x8a4f, 0x8c48, 0xd878, 0x1, 0x0);
        gbc.writeMem(0x68d3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbc46);
        EXPECT(gbc.pc(), 0x68d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00FB
        gbc.setState(0xb95c, 0x5a3b, 0xdb80, 0xca27, 0x3237, 0xf9b3, 0x1, 0x0);
        gbc.writeMem(0xb95c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5a3b);
        EXPECT(gbc.pc(), 0xb95d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb95c), 0x83);
        // 83 00FC
        gbc.setState(0xdd8, 0x1559, 0xef60, 0x28e6, 0xa1a6, 0x1216, 0x1, 0x0);
        gbc.writeMem(0xdd8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1559);
        EXPECT(gbc.pc(), 0xdd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 00FD
        gbc.setState(0x271b, 0x8593, 0x74c0, 0x36a2, 0x24fa, 0xec18, 0x1, 0x1);
        gbc.writeMem(0x271b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8593);
        EXPECT(gbc.pc(), 0x271c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 00FE
        gbc.setState(0x12cc, 0xef69, 0x5cd0, 0xc17e, 0x1072, 0xe295, 0x1, 0x1);
        gbc.writeMem(0x12cc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xef69);
        EXPECT(gbc.pc(), 0x12cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 00FF
        gbc.setState(0x7a8f, 0x6ab0, 0xa970, 0x7752, 0x43bb, 0x5a24, 0x0, 0x0);
        gbc.writeMem(0x7a8f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6ab0);
        EXPECT(gbc.pc(), 0x7a90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0100
        gbc.setState(0x59e9, 0x5e6f, 0x39a0, 0x8cf, 0x5939, 0xf5e2, 0x0, 0x1);
        gbc.writeMem(0x59e9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5e6f);
        EXPECT(gbc.pc(), 0x59ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0101
        gbc.setState(0xcf2f, 0xdfea, 0x8a70, 0x9644, 0xd891, 0x74d3, 0x0, 0x1);
        gbc.writeMem(0xcf2f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xdfea);
        EXPECT(gbc.pc(), 0xcf30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf2f), 0x83);
        // 83 0102
        gbc.setState(0x4b50, 0xbe8, 0x4c20, 0xce56, 0x750f, 0x67d8, 0x0, 0x1);
        gbc.writeMem(0x4b50, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbe8);
        EXPECT(gbc.pc(), 0x4b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0103
        gbc.setState(0x63d3, 0xbb27, 0x1110, 0x7bb8, 0xc728, 0x8089, 0x0, 0x1);
        gbc.writeMem(0x63d3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbb27);
        EXPECT(gbc.pc(), 0x63d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0104
        gbc.setState(0xdf3, 0x5bf, 0x7430, 0xdc93, 0xf7b, 0x9f4a, 0x0, 0x0);
        gbc.writeMem(0xdf3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5bf);
        EXPECT(gbc.pc(), 0xdf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0105
        gbc.setState(0xaadb, 0xbc0f, 0x2240, 0x392b, 0x5a23, 0x511a, 0x0, 0x0);
        gbc.writeMem(0xaadb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbc0f);
        EXPECT(gbc.pc(), 0xaadc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaadb), 0x83);
        // 83 0106
        gbc.setState(0x3627, 0xff49, 0xa730, 0x7857, 0x9a24, 0x5032, 0x1, 0x1);
        gbc.writeMem(0x3627, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xff49);
        EXPECT(gbc.pc(), 0x3628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0107
        gbc.setState(0x6b9d, 0x1680, 0xcb40, 0x8957, 0x7cf6, 0xb8e4, 0x1, 0x0);
        gbc.writeMem(0x6b9d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1680);
        EXPECT(gbc.pc(), 0x6b9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0108
        gbc.setState(0x7811, 0x1d7a, 0xd9c0, 0x1228, 0xc459, 0x2b7, 0x0, 0x1);
        gbc.writeMem(0x7811, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1d7a);
        EXPECT(gbc.pc(), 0x7812);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0109
        gbc.setState(0xcc9, 0x19dd, 0x7990, 0x719a, 0xe686, 0x5583, 0x1, 0x1);
        gbc.writeMem(0xcc9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x19dd);
        EXPECT(gbc.pc(), 0xcca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 010A
        gbc.setState(0x3fbd, 0x50a5, 0x7ca0, 0xc13d, 0x44aa, 0xcb8f, 0x0, 0x1);
        gbc.writeMem(0x3fbd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x50a5);
        EXPECT(gbc.pc(), 0x3fbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 010B
        gbc.setState(0x8e6a, 0xecfc, 0x8bd0, 0xbe98, 0xe376, 0x634c, 0x0, 0x0);
        gbc.writeMem(0x8e6a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xecfc);
        EXPECT(gbc.pc(), 0x8e6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e6a), 0x83);
        // 83 010D
        gbc.setState(0xc8e8, 0x260d, 0xf210, 0x4bcc, 0x745e, 0xd54f, 0x0, 0x1);
        gbc.writeMem(0xc8e8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x260d);
        EXPECT(gbc.pc(), 0xc8e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8e8), 0x83);
        // 83 010E
        gbc.setState(0x322, 0x2aec, 0xc6d0, 0x38dd, 0x9a91, 0xeee, 0x1, 0x0);
        gbc.writeMem(0x322, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2aec);
        EXPECT(gbc.pc(), 0x323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 010F
        gbc.setState(0x87bc, 0xf594, 0xcc70, 0x6387, 0x5202, 0x5db3, 0x0, 0x1);
        gbc.writeMem(0x87bc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf594);
        EXPECT(gbc.pc(), 0x87bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87bc), 0x83);
        // 83 0110
        gbc.setState(0x6b41, 0x4985, 0xf6f0, 0xb6d6, 0xfa05, 0x2ad9, 0x0, 0x1);
        gbc.writeMem(0x6b41, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4985);
        EXPECT(gbc.pc(), 0x6b42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0111
        gbc.setState(0x18bf, 0xc2a7, 0xc290, 0x6e1f, 0xc6dd, 0x2ff9, 0x0, 0x0);
        gbc.writeMem(0x18bf, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc2a7);
        EXPECT(gbc.pc(), 0x18c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0112
        gbc.setState(0xdc31, 0x979e, 0xc5c0, 0x2e8, 0x4f2e, 0x2a13, 0x1, 0x0);
        gbc.writeMem(0xdc31, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x979e);
        EXPECT(gbc.pc(), 0xdc32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc31), 0x83);
        // 83 0113
        gbc.setState(0x60a7, 0x1d02, 0x8d40, 0x75d2, 0xc618, 0x453, 0x1, 0x1);
        gbc.writeMem(0x60a7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x1d02);
        EXPECT(gbc.pc(), 0x60a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0114
        gbc.setState(0xa844, 0x279e, 0xc670, 0xf53a, 0x5bef, 0xf669, 0x0, 0x1);
        gbc.writeMem(0xa844, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x279e);
        EXPECT(gbc.pc(), 0xa845);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa844), 0x83);
        // 83 0115
        gbc.setState(0x8f78, 0x6cd4, 0xdce0, 0xedd2, 0x2aec, 0xd818, 0x0, 0x0);
        gbc.writeMem(0x8f78, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6cd4);
        EXPECT(gbc.pc(), 0x8f79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f78), 0x83);
        // 83 0116
        gbc.setState(0x5fcc, 0xe2f9, 0x3530, 0xf68b, 0x85a8, 0xb547, 0x1, 0x0);
        gbc.writeMem(0x5fcc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe2f9);
        EXPECT(gbc.pc(), 0x5fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0118
        gbc.setState(0x8291, 0x6c30, 0x8880, 0x1b62, 0x1da6, 0xede7, 0x0, 0x1);
        gbc.writeMem(0x8291, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6c30);
        EXPECT(gbc.pc(), 0x8292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8291), 0x83);
        // 83 0119
        gbc.setState(0x3601, 0xa6b0, 0xdff0, 0xe994, 0x80d6, 0x79fc, 0x0, 0x0);
        gbc.writeMem(0x3601, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa6b0);
        EXPECT(gbc.pc(), 0x3602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 011A
        gbc.setState(0x5889, 0x7061, 0xba10, 0x5c06, 0x7cd2, 0x8658, 0x1, 0x0);
        gbc.writeMem(0x5889, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7061);
        EXPECT(gbc.pc(), 0x588a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 011B
        gbc.setState(0xe2ff, 0xac97, 0xdbb0, 0xa02d, 0x95d4, 0x24e1, 0x1, 0x0);
        gbc.writeMem(0xe2ff, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xac97);
        EXPECT(gbc.pc(), 0xe300);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ff), 0x83);
        // 83 011C
        gbc.setState(0x6832, 0x44d, 0xd800, 0x9d13, 0xc21f, 0x91dc, 0x1, 0x0);
        gbc.writeMem(0x6832, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x44d);
        EXPECT(gbc.pc(), 0x6833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 011D
        gbc.setState(0xa900, 0x4ad6, 0xe4c0, 0xb65d, 0xbd7e, 0xf0c0, 0x0, 0x0);
        gbc.writeMem(0xa900, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4ad6);
        EXPECT(gbc.pc(), 0xa901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa900), 0x83);
        // 83 011E
        gbc.setState(0x6b79, 0xe70b, 0xe800, 0x2247, 0x1dfb, 0xf06c, 0x0, 0x1);
        gbc.writeMem(0x6b79, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe70b);
        EXPECT(gbc.pc(), 0x6b7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 011F
        gbc.setState(0xd32f, 0x86d3, 0x5450, 0x9823, 0x16b6, 0xec5c, 0x1, 0x1);
        gbc.writeMem(0xd32f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x86d3);
        EXPECT(gbc.pc(), 0xd330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd32f), 0x83);
        // 83 0120
        gbc.setState(0x1353, 0xa05f, 0x64b0, 0x7383, 0x605c, 0xef11, 0x1, 0x1);
        gbc.writeMem(0x1353, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa05f);
        EXPECT(gbc.pc(), 0x1354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0121
        gbc.setState(0xd337, 0x9930, 0xeb10, 0x22c4, 0x452a, 0xf1b8, 0x1, 0x1);
        gbc.writeMem(0xd337, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9930);
        EXPECT(gbc.pc(), 0xd338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd337), 0x83);
        // 83 0122
        gbc.setState(0xe6da, 0x6fec, 0x3ba0, 0xf898, 0x2026, 0xe9a6, 0x1, 0x1);
        gbc.writeMem(0xe6da, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6fec);
        EXPECT(gbc.pc(), 0xe6db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6da), 0x83);
        // 83 0123
        gbc.setState(0xefc1, 0x1010, 0xd470, 0x3974, 0xa09f, 0xd09d, 0x0, 0x1);
        gbc.writeMem(0xefc1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1010);
        EXPECT(gbc.pc(), 0xefc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefc1), 0x83);
        // 83 0124
        gbc.setState(0xa083, 0x75ef, 0xbf80, 0xae9d, 0x463f, 0x477c, 0x0, 0x0);
        gbc.writeMem(0xa083, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x75ef);
        EXPECT(gbc.pc(), 0xa084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa083), 0x83);
        // 83 0125
        gbc.setState(0xc2a1, 0x3843, 0x3370, 0xaf5d, 0xaa22, 0x1d95, 0x0, 0x1);
        gbc.writeMem(0xc2a1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3843);
        EXPECT(gbc.pc(), 0xc2a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a1), 0x83);
        // 83 0126
        gbc.setState(0xe5cd, 0xe2fe, 0xfe70, 0xd3db, 0x8568, 0xf526, 0x0, 0x0);
        gbc.writeMem(0xe5cd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe2fe);
        EXPECT(gbc.pc(), 0xe5ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5cd), 0x83);
        // 83 0127
        gbc.setState(0x6712, 0x4acd, 0xdf70, 0x8095, 0x17ec, 0x4dd8, 0x0, 0x0);
        gbc.writeMem(0x6712, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4acd);
        EXPECT(gbc.pc(), 0x6713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0128
        gbc.setState(0x151f, 0xc947, 0xa310, 0x330e, 0x4fd7, 0x5a60, 0x1, 0x0);
        gbc.writeMem(0x151f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc947);
        EXPECT(gbc.pc(), 0x1520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0129
        gbc.setState(0x7154, 0xf2fc, 0x4800, 0xc011, 0xc85e, 0x25fd, 0x1, 0x0);
        gbc.writeMem(0x7154, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf2fc);
        EXPECT(gbc.pc(), 0x7155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 012A
        gbc.setState(0x174, 0x2e0, 0xec00, 0x26a4, 0x8002, 0xf672, 0x1, 0x1);
        gbc.writeMem(0x174, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2e0);
        EXPECT(gbc.pc(), 0x175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 012B
        gbc.setState(0x6e68, 0xdb55, 0x5870, 0x1a20, 0xfbfe, 0x538, 0x0, 0x1);
        gbc.writeMem(0x6e68, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xdb55);
        EXPECT(gbc.pc(), 0x6e69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 012C
        gbc.setState(0x829c, 0xe5fd, 0x57c0, 0xe2f7, 0x9a2e, 0x7ae4, 0x1, 0x1);
        gbc.writeMem(0x829c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe5fd);
        EXPECT(gbc.pc(), 0x829d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x829c), 0x83);
        // 83 012D
        gbc.setState(0x93b9, 0x7f5b, 0x8910, 0xfe7d, 0x18d4, 0x4468, 0x0, 0x1);
        gbc.writeMem(0x93b9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7f5b);
        EXPECT(gbc.pc(), 0x93ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93b9), 0x83);
        // 83 012E
        gbc.setState(0xd126, 0x20e2, 0x7470, 0x7d3, 0xdb71, 0x161a, 0x0, 0x0);
        gbc.writeMem(0xd126, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x20e2);
        EXPECT(gbc.pc(), 0xd127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd126), 0x83);
        // 83 012F
        gbc.setState(0xbd9e, 0x84, 0xbc90, 0x55c3, 0xaade, 0x31b, 0x0, 0x1);
        gbc.writeMem(0xbd9e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x84);
        EXPECT(gbc.pc(), 0xbd9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd9e), 0x83);
        // 83 0130
        gbc.setState(0x10a6, 0x3e66, 0x6fe0, 0xb8ba, 0xb9bc, 0x32a2, 0x0, 0x1);
        gbc.writeMem(0x10a6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x3e66);
        EXPECT(gbc.pc(), 0x10a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0131
        gbc.setState(0x56cb, 0x8999, 0x31c0, 0x1c36, 0x13a8, 0xc896, 0x0, 0x1);
        gbc.writeMem(0x56cb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8999);
        EXPECT(gbc.pc(), 0x56cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0132
        gbc.setState(0x62af, 0xf028, 0xb060, 0x2b83, 0xa959, 0xfdd0, 0x0, 0x0);
        gbc.writeMem(0x62af, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf028);
        EXPECT(gbc.pc(), 0x62b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0133
        gbc.setState(0x7abb, 0xab1b, 0x8600, 0xcdb, 0x91f0, 0x6ef2, 0x0, 0x1);
        gbc.writeMem(0x7abb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xab1b);
        EXPECT(gbc.pc(), 0x7abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0134
        gbc.setState(0x19c3, 0x2b92, 0xbfc0, 0xdb58, 0xa529, 0xbe4c, 0x1, 0x0);
        gbc.writeMem(0x19c3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2b92);
        EXPECT(gbc.pc(), 0x19c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0135
        gbc.setState(0x7263, 0xdee3, 0x8e40, 0x19f6, 0xd55b, 0x5e36, 0x1, 0x1);
        gbc.writeMem(0x7263, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xdee3);
        EXPECT(gbc.pc(), 0x7264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0136
        gbc.setState(0x7961, 0x132d, 0x3120, 0xcac2, 0x5c69, 0x803e, 0x0, 0x1);
        gbc.writeMem(0x7961, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x132d);
        EXPECT(gbc.pc(), 0x7962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0137
        gbc.setState(0x2fd1, 0x5ec5, 0x190, 0x4015, 0xefe1, 0x7613, 0x1, 0x0);
        gbc.writeMem(0x2fd1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5ec5);
        EXPECT(gbc.pc(), 0x2fd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0138
        gbc.setState(0x601b, 0xb6a9, 0xe440, 0xe2c3, 0xba3f, 0xa3b3, 0x1, 0x1);
        gbc.writeMem(0x601b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb6a9);
        EXPECT(gbc.pc(), 0x601c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0139
        gbc.setState(0x9b28, 0x772c, 0x9990, 0x9920, 0x3e92, 0x6d53, 0x1, 0x0);
        gbc.writeMem(0x9b28, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x772c);
        EXPECT(gbc.pc(), 0x9b29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b28), 0x83);
        // 83 013A
        gbc.setState(0xb779, 0x2b34, 0xfb20, 0x5205, 0x7bbc, 0xec85, 0x1, 0x0);
        gbc.writeMem(0xb779, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2b34);
        EXPECT(gbc.pc(), 0xb77a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb779), 0x83);
        // 83 013B
        gbc.setState(0x839f, 0xcbd0, 0x6dd0, 0x86ae, 0x1b8f, 0xdbec, 0x1, 0x1);
        gbc.writeMem(0x839f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xcbd0);
        EXPECT(gbc.pc(), 0x83a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x839f), 0x83);
        // 83 013C
        gbc.setState(0x67d4, 0x1403, 0x97a0, 0xe161, 0x892d, 0x1139, 0x0, 0x1);
        gbc.writeMem(0x67d4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1403);
        EXPECT(gbc.pc(), 0x67d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 013D
        gbc.setState(0x198e, 0x5622, 0xed60, 0xa6ff, 0x7685, 0xf59f, 0x1, 0x0);
        gbc.writeMem(0x198e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5622);
        EXPECT(gbc.pc(), 0x198f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 013E
        gbc.setState(0x2e24, 0xd7a9, 0xa70, 0xe466, 0xe155, 0x2325, 0x0, 0x1);
        gbc.writeMem(0x2e24, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd7a9);
        EXPECT(gbc.pc(), 0x2e25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 013F
        gbc.setState(0x254b, 0xc09b, 0xd630, 0x3d3c, 0xa117, 0xeaa2, 0x1, 0x0);
        gbc.writeMem(0x254b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc09b);
        EXPECT(gbc.pc(), 0x254c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0141
        gbc.setState(0x5866, 0xd525, 0xdbc0, 0x13b7, 0xefc0, 0x4068, 0x1, 0x1);
        gbc.writeMem(0x5866, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd525);
        EXPECT(gbc.pc(), 0x5867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0142
        gbc.setState(0x14ed, 0xed2e, 0x23b0, 0x6bcc, 0xa99b, 0x98c3, 0x0, 0x0);
        gbc.writeMem(0x14ed, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xed2e);
        EXPECT(gbc.pc(), 0x14ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0143
        gbc.setState(0x548c, 0xc509, 0xc970, 0xa8a9, 0x47b2, 0x60ac, 0x0, 0x0);
        gbc.writeMem(0x548c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc509);
        EXPECT(gbc.pc(), 0x548d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0144
        gbc.setState(0xb11e, 0xca5a, 0xe150, 0x5708, 0x42dd, 0xe785, 0x0, 0x1);
        gbc.writeMem(0xb11e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xca5a);
        EXPECT(gbc.pc(), 0xb11f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb11e), 0x83);
        // 83 0145
        gbc.setState(0x2c56, 0xe486, 0x7b70, 0x104c, 0x94fa, 0x39aa, 0x0, 0x0);
        gbc.writeMem(0x2c56, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe486);
        EXPECT(gbc.pc(), 0x2c57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0146
        gbc.setState(0x40a6, 0x21a5, 0x8920, 0xd162, 0x5ab2, 0x70f8, 0x0, 0x0);
        gbc.writeMem(0x40a6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x21a5);
        EXPECT(gbc.pc(), 0x40a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0147
        gbc.setState(0x5fc9, 0x3e59, 0x97c0, 0x7148, 0xdfd6, 0x54b7, 0x0, 0x1);
        gbc.writeMem(0x5fc9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3e59);
        EXPECT(gbc.pc(), 0x5fca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0148
        gbc.setState(0x821, 0x8ca0, 0x6f10, 0x52a8, 0x9cc0, 0x47c, 0x1, 0x0);
        gbc.writeMem(0x821, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8ca0);
        EXPECT(gbc.pc(), 0x822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0149
        gbc.setState(0x9180, 0x18f1, 0x5960, 0xe2c7, 0x2518, 0x4c52, 0x1, 0x0);
        gbc.writeMem(0x9180, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x18f1);
        EXPECT(gbc.pc(), 0x9181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9180), 0x83);
        // 83 014A
        gbc.setState(0xd018, 0xf287, 0x8f00, 0x49fd, 0xc557, 0xb6e7, 0x1, 0x1);
        gbc.writeMem(0xd018, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf287);
        EXPECT(gbc.pc(), 0xd019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd018), 0x83);
        // 83 014B
        gbc.setState(0xbab4, 0xd452, 0x20f0, 0xa195, 0x8554, 0xd182, 0x0, 0x1);
        gbc.writeMem(0xbab4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd452);
        EXPECT(gbc.pc(), 0xbab5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab4), 0x83);
        // 83 014C
        gbc.setState(0x814e, 0x274c, 0x8450, 0xd52c, 0xe57a, 0x248b, 0x0, 0x0);
        gbc.writeMem(0x814e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x274c);
        EXPECT(gbc.pc(), 0x814f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x814e), 0x83);
        // 83 014D
        gbc.setState(0x689a, 0xa154, 0x5060, 0x237e, 0xfe50, 0xe91, 0x1, 0x1);
        gbc.writeMem(0x689a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa154);
        EXPECT(gbc.pc(), 0x689b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 014E
        gbc.setState(0xa9f8, 0x3aa3, 0x6850, 0x6e50, 0x72a8, 0x59cf, 0x0, 0x0);
        gbc.writeMem(0xa9f8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3aa3);
        EXPECT(gbc.pc(), 0xa9f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9f8), 0x83);
        // 83 014F
        gbc.setState(0x52dd, 0x8352, 0xe800, 0x51bb, 0x82df, 0xafdc, 0x0, 0x1);
        gbc.writeMem(0x52dd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8352);
        EXPECT(gbc.pc(), 0x52de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0150
        gbc.setState(0x32ab, 0x1b0b, 0x1fd0, 0x165b, 0xdd8a, 0x5e82, 0x1, 0x0);
        gbc.writeMem(0x32ab, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1b0b);
        EXPECT(gbc.pc(), 0x32ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0151
        gbc.setState(0x2a8f, 0xf7ef, 0xc7e0, 0xd4e1, 0xebfe, 0x25c3, 0x0, 0x0);
        gbc.writeMem(0x2a8f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf7ef);
        EXPECT(gbc.pc(), 0x2a90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0152
        gbc.setState(0x3f49, 0x702a, 0xe190, 0x7672, 0x45b, 0xe2ea, 0x1, 0x1);
        gbc.writeMem(0x3f49, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x702a);
        EXPECT(gbc.pc(), 0x3f4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0153
        gbc.setState(0xa2d8, 0x8b4c, 0x59a0, 0xa6fa, 0x3183, 0x1e4e, 0x0, 0x1);
        gbc.writeMem(0xa2d8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8b4c);
        EXPECT(gbc.pc(), 0xa2d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d8), 0x83);
        // 83 0154
        gbc.setState(0xce, 0x322a, 0x2160, 0x2b24, 0x35d8, 0xfb19, 0x1, 0x0);
        gbc.writeMem(0xce, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x322a);
        EXPECT(gbc.pc(), 0xcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0155
        gbc.setState(0x1889, 0x66bf, 0xd730, 0xc7ac, 0xa9a1, 0x3e05, 0x0, 0x1);
        gbc.writeMem(0x1889, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x66bf);
        EXPECT(gbc.pc(), 0x188a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0157
        gbc.setState(0xb95b, 0x99e1, 0xf280, 0xe0e4, 0xccd3, 0x8f63, 0x1, 0x0);
        gbc.writeMem(0xb95b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x99e1);
        EXPECT(gbc.pc(), 0xb95c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb95b), 0x83);
        // 83 0158
        gbc.setState(0x4ee, 0x3123, 0x81b0, 0xa1b7, 0xcd34, 0xab23, 0x0, 0x0);
        gbc.writeMem(0x4ee, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3123);
        EXPECT(gbc.pc(), 0x4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0159
        gbc.setState(0x16, 0xb130, 0x1960, 0x92ab, 0x4072, 0xd2a3, 0x0, 0x1);
        gbc.writeMem(0x16, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb130);
        EXPECT(gbc.pc(), 0x17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 015A
        gbc.setState(0x6b68, 0x620f, 0x3450, 0x3791, 0xfef8, 0x60fb, 0x1, 0x0);
        gbc.writeMem(0x6b68, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x620f);
        EXPECT(gbc.pc(), 0x6b69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 015B
        gbc.setState(0xbc5b, 0x77b2, 0x7900, 0xd5fc, 0x1cfc, 0x9973, 0x0, 0x1);
        gbc.writeMem(0xbc5b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x77b2);
        EXPECT(gbc.pc(), 0xbc5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc5b), 0x83);
        // 83 015C
        gbc.setState(0x4671, 0xb0f7, 0xca00, 0xf435, 0x408, 0x396f, 0x1, 0x0);
        gbc.writeMem(0x4671, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb0f7);
        EXPECT(gbc.pc(), 0x4672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 015D
        gbc.setState(0x89a6, 0x108e, 0x6490, 0x190a, 0x2ae8, 0xaeee, 0x1, 0x0);
        gbc.writeMem(0x89a6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x108e);
        EXPECT(gbc.pc(), 0x89a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a6), 0x83);
        // 83 015E
        gbc.setState(0x5fff, 0x6669, 0x8a50, 0x9b56, 0xff4b, 0x633, 0x1, 0x1);
        gbc.writeMem(0x5fff, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6669);
        EXPECT(gbc.pc(), 0x6000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 015F
        gbc.setState(0x6a7b, 0x3448, 0x4ab0, 0xb815, 0x659b, 0x4e08, 0x0, 0x1);
        gbc.writeMem(0x6a7b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3448);
        EXPECT(gbc.pc(), 0x6a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0160
        gbc.setState(0x64aa, 0xde2a, 0xa90, 0xc0ff, 0x2d51, 0xba0b, 0x1, 0x0);
        gbc.writeMem(0x64aa, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xde2a);
        EXPECT(gbc.pc(), 0x64ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0161
        gbc.setState(0xbdb5, 0x4fdd, 0x7510, 0xb600, 0xc0e1, 0x1a38, 0x0, 0x0);
        gbc.writeMem(0xbdb5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4fdd);
        EXPECT(gbc.pc(), 0xbdb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb5), 0x83);
        // 83 0162
        gbc.setState(0xd3b1, 0x7e7e, 0x6d40, 0x2ef7, 0xcfba, 0x3fb8, 0x0, 0x1);
        gbc.writeMem(0xd3b1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7e7e);
        EXPECT(gbc.pc(), 0xd3b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b1), 0x83);
        // 83 0163
        gbc.setState(0xa077, 0xc8aa, 0x65f0, 0x6119, 0xf3b7, 0x23e0, 0x1, 0x1);
        gbc.writeMem(0xa077, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc8aa);
        EXPECT(gbc.pc(), 0xa078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa077), 0x83);
        // 83 0164
        gbc.setState(0x4dc9, 0x17ec, 0xcc20, 0x7633, 0x70c2, 0xfcb9, 0x1, 0x0);
        gbc.writeMem(0x4dc9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x17ec);
        EXPECT(gbc.pc(), 0x4dca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0165
        gbc.setState(0xca6f, 0x48bf, 0xe930, 0xb000, 0xecf0, 0x333a, 0x1, 0x0);
        gbc.writeMem(0xca6f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x48bf);
        EXPECT(gbc.pc(), 0xca70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca6f), 0x83);
        // 83 0166
        gbc.setState(0x7714, 0xfbb7, 0x3670, 0x5458, 0x7478, 0x22e8, 0x0, 0x1);
        gbc.writeMem(0x7714, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xfbb7);
        EXPECT(gbc.pc(), 0x7715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0167
        gbc.setState(0x6dfe, 0x3230, 0xa120, 0xa01e, 0xca61, 0x7bfd, 0x0, 0x1);
        gbc.writeMem(0x6dfe, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3230);
        EXPECT(gbc.pc(), 0x6dff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0168
        gbc.setState(0xabfe, 0xd049, 0x4420, 0x9f70, 0x35a8, 0x1582, 0x1, 0x0);
        gbc.writeMem(0xabfe, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd049);
        EXPECT(gbc.pc(), 0xabff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabfe), 0x83);
        // 83 0169
        gbc.setState(0xcab6, 0x9efe, 0x9540, 0x4add, 0x95bd, 0x80c, 0x1, 0x1);
        gbc.writeMem(0xcab6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9efe);
        EXPECT(gbc.pc(), 0xcab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab6), 0x83);
        // 83 016A
        gbc.setState(0xd924, 0xe0eb, 0x7b0, 0x783a, 0x5f83, 0xfdba, 0x0, 0x0);
        gbc.writeMem(0xd924, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe0eb);
        EXPECT(gbc.pc(), 0xd925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd924), 0x83);
        // 83 016B
        gbc.setState(0xa5e4, 0x2a2a, 0xf400, 0x13f6, 0x9ed8, 0x977, 0x0, 0x0);
        gbc.writeMem(0xa5e4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2a2a);
        EXPECT(gbc.pc(), 0xa5e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5e4), 0x83);
        // 83 016C
        gbc.setState(0x6971, 0x8fe0, 0xee20, 0x1b8, 0xbf7f, 0xd767, 0x0, 0x0);
        gbc.writeMem(0x6971, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8fe0);
        EXPECT(gbc.pc(), 0x6972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 016D
        gbc.setState(0x8fcb, 0x87f1, 0x4340, 0xe5a, 0x6fca, 0xb8d2, 0x1, 0x0);
        gbc.writeMem(0x8fcb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x87f1);
        EXPECT(gbc.pc(), 0x8fcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fcb), 0x83);
        // 83 016E
        gbc.setState(0x9e43, 0xed1c, 0x8480, 0xd66b, 0xdaf3, 0x6efa, 0x1, 0x0);
        gbc.writeMem(0x9e43, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xed1c);
        EXPECT(gbc.pc(), 0x9e44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e43), 0x83);
        // 83 016F
        gbc.setState(0xe73d, 0xbfe7, 0xd110, 0x8d5b, 0xaef5, 0x2099, 0x0, 0x0);
        gbc.writeMem(0xe73d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbfe7);
        EXPECT(gbc.pc(), 0xe73e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe73d), 0x83);
        // 83 0170
        gbc.setState(0xd930, 0xccb0, 0x96d0, 0xb851, 0x4f5c, 0xcc93, 0x1, 0x1);
        gbc.writeMem(0xd930, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xccb0);
        EXPECT(gbc.pc(), 0xd931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd930), 0x83);
        // 83 0171
        gbc.setState(0xd905, 0x5800, 0xbea0, 0x79c4, 0x871a, 0x124d, 0x1, 0x1);
        gbc.writeMem(0xd905, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5800);
        EXPECT(gbc.pc(), 0xd906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd905), 0x83);
        // 83 0172
        gbc.setState(0x36bc, 0x3709, 0x4c80, 0x1757, 0x9a6c, 0x51fd, 0x0, 0x1);
        gbc.writeMem(0x36bc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3709);
        EXPECT(gbc.pc(), 0x36bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0173
        gbc.setState(0xb7dc, 0x18ff, 0x1190, 0x87cc, 0x5525, 0x6fe5, 0x1, 0x0);
        gbc.writeMem(0xb7dc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x18ff);
        EXPECT(gbc.pc(), 0xb7dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7dc), 0x83);
        // 83 0174
        gbc.setState(0x8ac9, 0x3fd5, 0x3de0, 0x45e9, 0xea86, 0xdb0, 0x1, 0x0);
        gbc.writeMem(0x8ac9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3fd5);
        EXPECT(gbc.pc(), 0x8aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac9), 0x83);
        // 83 0175
        gbc.setState(0xa645, 0x829a, 0xe040, 0x8fea, 0x5597, 0x93b2, 0x1, 0x1);
        gbc.writeMem(0xa645, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x829a);
        EXPECT(gbc.pc(), 0xa646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa645), 0x83);
        // 83 0176
        gbc.setState(0x15ef, 0xe03, 0xc170, 0xb158, 0x85ef, 0x9a87, 0x1, 0x0);
        gbc.writeMem(0x15ef, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe03);
        EXPECT(gbc.pc(), 0x15f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0177
        gbc.setState(0x8238, 0x181b, 0x2a90, 0xd6f4, 0x7008, 0x8333, 0x0, 0x0);
        gbc.writeMem(0x8238, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x181b);
        EXPECT(gbc.pc(), 0x8239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8238), 0x83);
        // 83 0178
        gbc.setState(0x7fbf, 0x6010, 0x820, 0xdcc3, 0xe8ed, 0xc1d4, 0x1, 0x0);
        gbc.writeMem(0x7fbf, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6010);
        EXPECT(gbc.pc(), 0x7fc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0179
        gbc.setState(0x4aa8, 0xe172, 0x42c0, 0xb325, 0xf611, 0x8d9c, 0x0, 0x0);
        gbc.writeMem(0x4aa8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe172);
        EXPECT(gbc.pc(), 0x4aa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 017A
        gbc.setState(0xd6e6, 0xd16a, 0xb3f0, 0x38e6, 0x11df, 0xbd8d, 0x1, 0x0);
        gbc.writeMem(0xd6e6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd16a);
        EXPECT(gbc.pc(), 0xd6e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6e6), 0x83);
        // 83 017B
        gbc.setState(0xd6d9, 0xdbca, 0xcfa0, 0x8341, 0x6450, 0xd274, 0x0, 0x1);
        gbc.writeMem(0xd6d9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xdbca);
        EXPECT(gbc.pc(), 0xd6da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6d9), 0x83);
        // 83 017C
        gbc.setState(0x5d80, 0x7ac5, 0x5860, 0x7d5, 0x902c, 0x521e, 0x0, 0x1);
        gbc.writeMem(0x5d80, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7ac5);
        EXPECT(gbc.pc(), 0x5d81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 017D
        gbc.setState(0x5bbb, 0x204c, 0xbd20, 0xd572, 0x990e, 0x5cab, 0x1, 0x1);
        gbc.writeMem(0x5bbb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x204c);
        EXPECT(gbc.pc(), 0x5bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 017E
        gbc.setState(0x1dc2, 0x225c, 0xc920, 0x7ba1, 0x6ccf, 0xc8ac, 0x0, 0x0);
        gbc.writeMem(0x1dc2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x225c);
        EXPECT(gbc.pc(), 0x1dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0180
        gbc.setState(0x87ec, 0xa28a, 0xa950, 0x5bd6, 0x8557, 0x2c6c, 0x0, 0x0);
        gbc.writeMem(0x87ec, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa28a);
        EXPECT(gbc.pc(), 0x87ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ec), 0x83);
        // 83 0181
        gbc.setState(0xcca, 0x3b7c, 0x5d00, 0x2b63, 0x652f, 0xb540, 0x0, 0x0);
        gbc.writeMem(0xcca, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3b7c);
        EXPECT(gbc.pc(), 0xccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0182
        gbc.setState(0xc52, 0x450e, 0xc410, 0xb7e, 0x8c03, 0x874b, 0x1, 0x0);
        gbc.writeMem(0xc52, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x450e);
        EXPECT(gbc.pc(), 0xc53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0183
        gbc.setState(0x5942, 0x58f4, 0xc60, 0xfdce, 0xaa5e, 0x12ef, 0x0, 0x0);
        gbc.writeMem(0x5942, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x58f4);
        EXPECT(gbc.pc(), 0x5943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0184
        gbc.setState(0x8a0, 0x1a14, 0xc810, 0x6a3c, 0xe7e1, 0x9ced, 0x0, 0x1);
        gbc.writeMem(0x8a0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1a14);
        EXPECT(gbc.pc(), 0x8a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0185
        gbc.setState(0xa286, 0x3f86, 0xa880, 0x5cd9, 0x5dcf, 0xba87, 0x0, 0x0);
        gbc.writeMem(0xa286, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3f86);
        EXPECT(gbc.pc(), 0xa287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa286), 0x83);
        // 83 0186
        gbc.setState(0x917b, 0x34c6, 0x64b0, 0xcdb2, 0xcbb7, 0xd956, 0x1, 0x1);
        gbc.writeMem(0x917b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x34c6);
        EXPECT(gbc.pc(), 0x917c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x917b), 0x83);
        // 83 0187
        gbc.setState(0x79eb, 0xb305, 0x1fc0, 0xa22b, 0xdc1c, 0x996, 0x0, 0x1);
        gbc.writeMem(0x79eb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb305);
        EXPECT(gbc.pc(), 0x79ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0188
        gbc.setState(0x7da4, 0xd22f, 0xe770, 0x9714, 0x1f3c, 0xa13e, 0x0, 0x1);
        gbc.writeMem(0x7da4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd22f);
        EXPECT(gbc.pc(), 0x7da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0189
        gbc.setState(0x8ac6, 0x54e3, 0x1c90, 0xb5a, 0xfcc2, 0x37f7, 0x1, 0x0);
        gbc.writeMem(0x8ac6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x54e3);
        EXPECT(gbc.pc(), 0x8ac7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac6), 0x83);
        // 83 018A
        gbc.setState(0xb267, 0x30be, 0x1210, 0xd128, 0xe295, 0x1eab, 0x1, 0x1);
        gbc.writeMem(0xb267, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x30be);
        EXPECT(gbc.pc(), 0xb268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb267), 0x83);
        // 83 018B
        gbc.setState(0xcd61, 0xbb47, 0x6f90, 0x5534, 0xdf42, 0x202b, 0x1, 0x1);
        gbc.writeMem(0xcd61, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbb47);
        EXPECT(gbc.pc(), 0xcd62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd61), 0x83);
        // 83 018C
        gbc.setState(0xd9c5, 0x6ebd, 0xd7c0, 0x4be8, 0xc5a9, 0x4b41, 0x1, 0x0);
        gbc.writeMem(0xd9c5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6ebd);
        EXPECT(gbc.pc(), 0xd9c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9c5), 0x83);
        // 83 018D
        gbc.setState(0x8032, 0xeaac, 0x4c0, 0xa84e, 0xa8f7, 0xf789, 0x0, 0x1);
        gbc.writeMem(0x8032, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xeaac);
        EXPECT(gbc.pc(), 0x8033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8032), 0x83);
        // 83 018E
        gbc.setState(0xdeed, 0x23d7, 0x7b40, 0x8419, 0x81fc, 0x2a25, 0x0, 0x1);
        gbc.writeMem(0xdeed, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x23d7);
        EXPECT(gbc.pc(), 0xdeee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeed), 0x83);
        // 83 018F
        gbc.setState(0xa5a4, 0x336c, 0x3ee0, 0x891e, 0x41b, 0xacc7, 0x1, 0x1);
        gbc.writeMem(0xa5a4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x336c);
        EXPECT(gbc.pc(), 0xa5a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a4), 0x83);
        // 83 0191
        gbc.setState(0x618c, 0xdf7b, 0xefe0, 0x22da, 0x7213, 0xd029, 0x1, 0x0);
        gbc.writeMem(0x618c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xdf7b);
        EXPECT(gbc.pc(), 0x618d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0192
        gbc.setState(0x7d95, 0x8358, 0xf360, 0xabc5, 0x62e4, 0x8ada, 0x0, 0x1);
        gbc.writeMem(0x7d95, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8358);
        EXPECT(gbc.pc(), 0x7d96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0193
        gbc.setState(0x47f7, 0xf1e9, 0x11c0, 0x4ef3, 0x7cb1, 0x191e, 0x0, 0x0);
        gbc.writeMem(0x47f7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf1e9);
        EXPECT(gbc.pc(), 0x47f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0194
        gbc.setState(0x95b, 0x9c92, 0x7d30, 0xf06, 0xca3e, 0x8559, 0x0, 0x0);
        gbc.writeMem(0x95b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9c92);
        EXPECT(gbc.pc(), 0x95c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0195
        gbc.setState(0x4e05, 0x8352, 0xad0, 0x606e, 0x5048, 0xa55a, 0x1, 0x1);
        gbc.writeMem(0x4e05, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8352);
        EXPECT(gbc.pc(), 0x4e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0196
        gbc.setState(0x9e2c, 0xf7ac, 0xabd0, 0x612f, 0x1d12, 0xbf3b, 0x1, 0x1);
        gbc.writeMem(0x9e2c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf7ac);
        EXPECT(gbc.pc(), 0x9e2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e2c), 0x83);
        // 83 0197
        gbc.setState(0x8799, 0xe53a, 0x7d0, 0xad97, 0x1aa3, 0x7d47, 0x0, 0x1);
        gbc.writeMem(0x8799, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe53a);
        EXPECT(gbc.pc(), 0x879a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8799), 0x83);
        // 83 0198
        gbc.setState(0x7df5, 0x6e72, 0x5f30, 0xfaee, 0xc8f6, 0xb8f, 0x0, 0x0);
        gbc.writeMem(0x7df5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6e72);
        EXPECT(gbc.pc(), 0x7df6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0199
        gbc.setState(0x84b, 0x57f1, 0x8bb0, 0xf604, 0x63c, 0xe9fd, 0x0, 0x0);
        gbc.writeMem(0x84b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x57f1);
        EXPECT(gbc.pc(), 0x84c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 019C
        gbc.setState(0x7b38, 0x9847, 0x8150, 0x79ed, 0x4f8f, 0x851e, 0x1, 0x0);
        gbc.writeMem(0x7b38, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9847);
        EXPECT(gbc.pc(), 0x7b39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 019D
        gbc.setState(0xa1b5, 0x2cd, 0x34d0, 0x9bc1, 0x93f0, 0x51d8, 0x1, 0x1);
        gbc.writeMem(0xa1b5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2cd);
        EXPECT(gbc.pc(), 0xa1b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b5), 0x83);
        // 83 019E
        gbc.setState(0x42c7, 0x1fe8, 0x2b50, 0x15fc, 0xfba7, 0xd331, 0x1, 0x1);
        gbc.writeMem(0x42c7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1fe8);
        EXPECT(gbc.pc(), 0x42c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 019F
        gbc.setState(0x78c4, 0x8bdf, 0x4330, 0x845d, 0x6b4d, 0x18c0, 0x1, 0x0);
        gbc.writeMem(0x78c4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8bdf);
        EXPECT(gbc.pc(), 0x78c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 01A0
        gbc.setState(0x74d8, 0x64f5, 0xe900, 0x77f9, 0xa93a, 0xb153, 0x1, 0x1);
        gbc.writeMem(0x74d8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x64f5);
        EXPECT(gbc.pc(), 0x74d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01A1
        gbc.setState(0xa82e, 0x8897, 0x9320, 0xc07f, 0xf6f, 0x67e7, 0x1, 0x0);
        gbc.writeMem(0xa82e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8897);
        EXPECT(gbc.pc(), 0xa82f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa82e), 0x83);
        // 83 01A2
        gbc.setState(0x1cbd, 0x8a6b, 0x3850, 0x8288, 0x923c, 0xd986, 0x0, 0x1);
        gbc.writeMem(0x1cbd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8a6b);
        EXPECT(gbc.pc(), 0x1cbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 01A3
        gbc.setState(0xbd7a, 0x808, 0x7aa0, 0x908, 0x6266, 0x6558, 0x0, 0x1);
        gbc.writeMem(0xbd7a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x808);
        EXPECT(gbc.pc(), 0xbd7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7a), 0x83);
        // 83 01A4
        gbc.setState(0x89e9, 0xe6d1, 0x9430, 0x7855, 0xe2d2, 0x6333, 0x0, 0x0);
        gbc.writeMem(0x89e9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe6d1);
        EXPECT(gbc.pc(), 0x89ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89e9), 0x83);
        // 83 01A5
        gbc.setState(0xbc46, 0x131e, 0x5b00, 0xfe93, 0x3a6d, 0xb3d9, 0x0, 0x1);
        gbc.writeMem(0xbc46, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x131e);
        EXPECT(gbc.pc(), 0xbc47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc46), 0x83);
        // 83 01A6
        gbc.setState(0x4369, 0x506e, 0xeca0, 0xefc0, 0xb53e, 0x28a6, 0x0, 0x0);
        gbc.writeMem(0x4369, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x506e);
        EXPECT(gbc.pc(), 0x436a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01A7
        gbc.setState(0x2cd0, 0xd040, 0xe6f0, 0x269a, 0xc249, 0xc5fb, 0x0, 0x1);
        gbc.writeMem(0x2cd0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd040);
        EXPECT(gbc.pc(), 0x2cd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 01A8
        gbc.setState(0x5e04, 0xf6c4, 0xc80, 0x343a, 0x7551, 0x39f1, 0x1, 0x0);
        gbc.writeMem(0x5e04, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf6c4);
        EXPECT(gbc.pc(), 0x5e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 01A9
        gbc.setState(0x7dcb, 0xf616, 0xe260, 0x3124, 0xe5f, 0x3d6d, 0x1, 0x0);
        gbc.writeMem(0x7dcb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf616);
        EXPECT(gbc.pc(), 0x7dcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01AA
        gbc.setState(0x6dd2, 0xfb56, 0x8540, 0xf015, 0x3269, 0xa26a, 0x1, 0x1);
        gbc.writeMem(0x6dd2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfb56);
        EXPECT(gbc.pc(), 0x6dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 01AB
        gbc.setState(0x22c, 0x23a2, 0x6710, 0xc89f, 0xcc34, 0x5e1c, 0x0, 0x1);
        gbc.writeMem(0x22c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x23a2);
        EXPECT(gbc.pc(), 0x22d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 01AC
        gbc.setState(0xa523, 0x2975, 0x7ef0, 0x88f1, 0xdce7, 0x514d, 0x0, 0x0);
        gbc.writeMem(0xa523, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2975);
        EXPECT(gbc.pc(), 0xa524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa523), 0x83);
        // 83 01AD
        gbc.setState(0x58eb, 0xcf0f, 0x65b0, 0x74a0, 0x3dca, 0xe402, 0x1, 0x1);
        gbc.writeMem(0x58eb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcf0f);
        EXPECT(gbc.pc(), 0x58ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 01AE
        gbc.setState(0xcbaa, 0x756d, 0x35e0, 0xfb48, 0x30bc, 0x19ea, 0x0, 0x0);
        gbc.writeMem(0xcbaa, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x756d);
        EXPECT(gbc.pc(), 0xcbab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbaa), 0x83);
        // 83 01AF
        gbc.setState(0xbe8f, 0x9198, 0xb80, 0x3be3, 0x7b5e, 0x905c, 0x0, 0x1);
        gbc.writeMem(0xbe8f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9198);
        EXPECT(gbc.pc(), 0xbe90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe8f), 0x83);
        // 83 01B0
        gbc.setState(0xb3a, 0xa118, 0xf2b0, 0xb532, 0x547d, 0xbb01, 0x0, 0x0);
        gbc.writeMem(0xb3a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa118);
        EXPECT(gbc.pc(), 0xb3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 01B1
        gbc.setState(0xe28f, 0xf5a3, 0x3500, 0x3eeb, 0x2e7c, 0x87fe, 0x0, 0x0);
        gbc.writeMem(0xe28f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf5a3);
        EXPECT(gbc.pc(), 0xe290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe28f), 0x83);
        // 83 01B2
        gbc.setState(0x823d, 0x3040, 0x50b0, 0x7862, 0xc62b, 0x2b2d, 0x1, 0x1);
        gbc.writeMem(0x823d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3040);
        EXPECT(gbc.pc(), 0x823e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x823d), 0x83);
        // 83 01B3
        gbc.setState(0x8c4d, 0xc968, 0x2d50, 0x3235, 0xca96, 0x97c3, 0x1, 0x1);
        gbc.writeMem(0x8c4d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc968);
        EXPECT(gbc.pc(), 0x8c4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c4d), 0x83);
        // 83 01B4
        gbc.setState(0x92fb, 0x6b4a, 0xe880, 0xdb9d, 0x3eab, 0xfd23, 0x1, 0x1);
        gbc.writeMem(0x92fb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6b4a);
        EXPECT(gbc.pc(), 0x92fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92fb), 0x83);
        // 83 01B5
        gbc.setState(0x500, 0x1dc3, 0xf770, 0xd3c, 0x5160, 0x7e50, 0x0, 0x0);
        gbc.writeMem(0x500, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1dc3);
        EXPECT(gbc.pc(), 0x501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 01B6
        gbc.setState(0xdd10, 0xf3be, 0x520, 0xbd28, 0x4c38, 0x6766, 0x0, 0x0);
        gbc.writeMem(0xdd10, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf3be);
        EXPECT(gbc.pc(), 0xdd11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd10), 0x83);
        // 83 01B7
        gbc.setState(0x4fe2, 0x74d4, 0x53e0, 0x5bd3, 0x5950, 0x42a6, 0x0, 0x1);
        gbc.writeMem(0x4fe2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x74d4);
        EXPECT(gbc.pc(), 0x4fe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 01B8
        gbc.setState(0x57b7, 0x24c6, 0xdd20, 0xe5d8, 0x53f6, 0x70ef, 0x1, 0x1);
        gbc.writeMem(0x57b7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x24c6);
        EXPECT(gbc.pc(), 0x57b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01B9
        gbc.setState(0x6476, 0x7d0, 0x6e80, 0x42ba, 0x6b08, 0xaaae, 0x1, 0x0);
        gbc.writeMem(0x6476, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7d0);
        EXPECT(gbc.pc(), 0x6477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 01BA
        gbc.setState(0xb3fc, 0x6ecf, 0x20d0, 0xaea6, 0x5e4f, 0xada3, 0x1, 0x1);
        gbc.writeMem(0xb3fc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6ecf);
        EXPECT(gbc.pc(), 0xb3fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3fc), 0x83);
        // 83 01BB
        gbc.setState(0xae9e, 0xef39, 0xe9e0, 0x4076, 0xe95b, 0x653c, 0x1, 0x1);
        gbc.writeMem(0xae9e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xef39);
        EXPECT(gbc.pc(), 0xae9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae9e), 0x83);
        // 83 01BC
        gbc.setState(0xbdd0, 0x21cb, 0x1a90, 0xe321, 0xaf8a, 0xb91e, 0x0, 0x1);
        gbc.writeMem(0xbdd0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x21cb);
        EXPECT(gbc.pc(), 0xbdd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdd0), 0x83);
        // 83 01BD
        gbc.setState(0x1e37, 0xc405, 0x9190, 0xc247, 0xa1f7, 0xbe6, 0x1, 0x0);
        gbc.writeMem(0x1e37, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc405);
        EXPECT(gbc.pc(), 0x1e38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 01BF
        gbc.setState(0x5eef, 0xc847, 0x3dc0, 0x1967, 0x223b, 0xa56b, 0x0, 0x1);
        gbc.writeMem(0x5eef, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc847);
        EXPECT(gbc.pc(), 0x5ef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 01C0
        gbc.setState(0x1e5f, 0xd3b1, 0xd910, 0x4e9f, 0xd7fe, 0x6343, 0x0, 0x0);
        gbc.writeMem(0x1e5f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd3b1);
        EXPECT(gbc.pc(), 0x1e60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01C1
        gbc.setState(0x2be5, 0xa5ef, 0x71e0, 0xb880, 0x71f2, 0x888c, 0x1, 0x1);
        gbc.writeMem(0x2be5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa5ef);
        EXPECT(gbc.pc(), 0x2be6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 01C2
        gbc.setState(0x9755, 0x1243, 0xd790, 0xc3da, 0xd980, 0xe1d, 0x0, 0x1);
        gbc.writeMem(0x9755, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1243);
        EXPECT(gbc.pc(), 0x9756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9755), 0x83);
        // 83 01C4
        gbc.setState(0x741a, 0xa819, 0x7550, 0x5d73, 0x61c9, 0xa0fc, 0x0, 0x1);
        gbc.writeMem(0x741a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa819);
        EXPECT(gbc.pc(), 0x741b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 01C5
        gbc.setState(0x7b55, 0x761b, 0xe90, 0xd67d, 0xd5fb, 0xabcf, 0x0, 0x1);
        gbc.writeMem(0x7b55, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x761b);
        EXPECT(gbc.pc(), 0x7b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01C6
        gbc.setState(0x68e9, 0x7d89, 0x43f0, 0xca07, 0x4478, 0x3a4e, 0x0, 0x0);
        gbc.writeMem(0x68e9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7d89);
        EXPECT(gbc.pc(), 0x68ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 01C7
        gbc.setState(0x86b3, 0x3771, 0xa1a0, 0x8151, 0xc136, 0x10cf, 0x0, 0x1);
        gbc.writeMem(0x86b3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3771);
        EXPECT(gbc.pc(), 0x86b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b3), 0x83);
        // 83 01C8
        gbc.setState(0x71e7, 0xb6c0, 0xe3a0, 0x70ee, 0xc7df, 0x2509, 0x1, 0x0);
        gbc.writeMem(0x71e7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb6c0);
        EXPECT(gbc.pc(), 0x71e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01CA
        gbc.setState(0xd36, 0x71a2, 0xc4d0, 0xfeda, 0x1e70, 0xbba6, 0x1, 0x1);
        gbc.writeMem(0xd36, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x71a2);
        EXPECT(gbc.pc(), 0xd37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 01CB
        gbc.setState(0xaa94, 0xc41a, 0xfd0, 0x44ca, 0x8ad8, 0xa59b, 0x1, 0x1);
        gbc.writeMem(0xaa94, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc41a);
        EXPECT(gbc.pc(), 0xaa95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa94), 0x83);
        // 83 01CC
        gbc.setState(0xa3b3, 0xbd96, 0xbd70, 0x8b94, 0x2986, 0x4a0e, 0x1, 0x0);
        gbc.writeMem(0xa3b3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xbd96);
        EXPECT(gbc.pc(), 0xa3b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3b3), 0x83);
        // 83 01CD
        gbc.setState(0xb73b, 0x78f3, 0x8230, 0xccb4, 0xc251, 0xdbc5, 0x0, 0x0);
        gbc.writeMem(0xb73b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x78f3);
        EXPECT(gbc.pc(), 0xb73c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb73b), 0x83);
        // 83 01CE
        gbc.setState(0x1ede, 0x51bc, 0x8c60, 0xb184, 0x93b7, 0xe9ae, 0x0, 0x0);
        gbc.writeMem(0x1ede, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x51bc);
        EXPECT(gbc.pc(), 0x1edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01CF
        gbc.setState(0x3634, 0x9bdc, 0xaed0, 0x694e, 0x322f, 0x192a, 0x0, 0x0);
        gbc.writeMem(0x3634, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9bdc);
        EXPECT(gbc.pc(), 0x3635);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 01D1
        gbc.setState(0x47cd, 0xa290, 0x5d50, 0x7ae, 0xed4d, 0x13a5, 0x0, 0x1);
        gbc.writeMem(0x47cd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa290);
        EXPECT(gbc.pc(), 0x47ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 01D2
        gbc.setState(0x5db2, 0xc4b2, 0x9550, 0x3567, 0xf4ba, 0x15db, 0x1, 0x1);
        gbc.writeMem(0x5db2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc4b2);
        EXPECT(gbc.pc(), 0x5db3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 01D3
        gbc.setState(0x253d, 0x3cae, 0xa3e0, 0xde09, 0x2a58, 0xa7c2, 0x0, 0x0);
        gbc.writeMem(0x253d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3cae);
        EXPECT(gbc.pc(), 0x253e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 01D4
        gbc.setState(0xcc71, 0xa0ea, 0x6c0, 0xc732, 0x20a3, 0x7879, 0x1, 0x0);
        gbc.writeMem(0xcc71, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa0ea);
        EXPECT(gbc.pc(), 0xcc72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc71), 0x83);
        // 83 01D5
        gbc.setState(0x75e8, 0xcf31, 0xdfc0, 0xa56e, 0xfb6e, 0x22fb, 0x0, 0x0);
        gbc.writeMem(0x75e8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xcf31);
        EXPECT(gbc.pc(), 0x75e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01D6
        gbc.setState(0x7920, 0xa4b3, 0x2530, 0x4961, 0x6876, 0xa2a7, 0x0, 0x1);
        gbc.writeMem(0x7920, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa4b3);
        EXPECT(gbc.pc(), 0x7921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 01D7
        gbc.setState(0xc674, 0xb313, 0x7290, 0x7d4b, 0xf285, 0x1d7a, 0x1, 0x0);
        gbc.writeMem(0xc674, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb313);
        EXPECT(gbc.pc(), 0xc675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc674), 0x83);
        // 83 01D8
        gbc.setState(0x5517, 0xe55f, 0x6f50, 0xeb90, 0x40b6, 0x8846, 0x1, 0x1);
        gbc.writeMem(0x5517, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe55f);
        EXPECT(gbc.pc(), 0x5518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01D9
        gbc.setState(0x6bd1, 0x5b73, 0x9e70, 0x4e16, 0x4d7e, 0x641e, 0x0, 0x0);
        gbc.writeMem(0x6bd1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5b73);
        EXPECT(gbc.pc(), 0x6bd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01DB
        gbc.setState(0x68de, 0xc045, 0xb840, 0xf6d9, 0xc2f7, 0xe70b, 0x0, 0x1);
        gbc.writeMem(0x68de, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc045);
        EXPECT(gbc.pc(), 0x68df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 01DC
        gbc.setState(0x8438, 0x918b, 0x9300, 0x189d, 0x79ab, 0x8bd9, 0x1, 0x0);
        gbc.writeMem(0x8438, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x918b);
        EXPECT(gbc.pc(), 0x8439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8438), 0x83);
        // 83 01DD
        gbc.setState(0x9f1a, 0xf4c0, 0x10, 0xfe5d, 0x4e9a, 0xbf4e, 0x1, 0x0);
        gbc.writeMem(0x9f1a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf4c0);
        EXPECT(gbc.pc(), 0x9f1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f1a), 0x83);
        // 83 01DE
        gbc.setState(0x502, 0x43e7, 0xb250, 0xb680, 0xfcc6, 0xee06, 0x1, 0x1);
        gbc.writeMem(0x502, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x43e7);
        EXPECT(gbc.pc(), 0x503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 01DF
        gbc.setState(0x6e39, 0x257a, 0x2270, 0xd8ad, 0x2aa9, 0xa0db, 0x0, 0x1);
        gbc.writeMem(0x6e39, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x257a);
        EXPECT(gbc.pc(), 0x6e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 01E1
        gbc.setState(0x4e9f, 0x5076, 0x3960, 0xf61e, 0xe09, 0x9df0, 0x0, 0x1);
        gbc.writeMem(0x4e9f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5076);
        EXPECT(gbc.pc(), 0x4ea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 01E2
        gbc.setState(0x492a, 0xe526, 0x6b00, 0xf81d, 0x9b5d, 0x3356, 0x1, 0x1);
        gbc.writeMem(0x492a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe526);
        EXPECT(gbc.pc(), 0x492b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 01E3
        gbc.setState(0xc252, 0x59b2, 0xce80, 0x9266, 0x265b, 0x9d5, 0x0, 0x1);
        gbc.writeMem(0xc252, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x59b2);
        EXPECT(gbc.pc(), 0xc253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc252), 0x83);
        // 83 01E4
        gbc.setState(0xef7b, 0x63c5, 0x2fd0, 0xf8af, 0x5fca, 0xa071, 0x0, 0x1);
        gbc.writeMem(0xef7b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x63c5);
        EXPECT(gbc.pc(), 0xef7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef7b), 0x83);
        // 83 01E5
        gbc.setState(0xea2e, 0xdce4, 0x7ee0, 0xc7e4, 0x58b5, 0xd9ab, 0x1, 0x1);
        gbc.writeMem(0xea2e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xdce4);
        EXPECT(gbc.pc(), 0xea2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea2e), 0x83);
        // 83 01E6
        gbc.setState(0xbe53, 0xd8cc, 0xa030, 0x96b5, 0xdf74, 0x10ae, 0x0, 0x0);
        gbc.writeMem(0xbe53, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd8cc);
        EXPECT(gbc.pc(), 0xbe54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe53), 0x83);
        // 83 01E7
        gbc.setState(0xaf88, 0x22d8, 0xa730, 0x90b1, 0x132e, 0x8a85, 0x1, 0x0);
        gbc.writeMem(0xaf88, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x22d8);
        EXPECT(gbc.pc(), 0xaf89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf88), 0x83);
        // 83 01E8
        gbc.setState(0x5be0, 0xa887, 0xdc10, 0x9b96, 0x3a9e, 0xa7e7, 0x1, 0x1);
        gbc.writeMem(0x5be0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa887);
        EXPECT(gbc.pc(), 0x5be1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01E9
        gbc.setState(0xabe1, 0x5dee, 0x7df0, 0xa481, 0x4d67, 0x4b6c, 0x1, 0x1);
        gbc.writeMem(0xabe1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5dee);
        EXPECT(gbc.pc(), 0xabe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe1), 0x83);
        // 83 01EA
        gbc.setState(0x7a2f, 0x5af2, 0x4cb0, 0xa8c7, 0x9217, 0xbb27, 0x0, 0x1);
        gbc.writeMem(0x7a2f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5af2);
        EXPECT(gbc.pc(), 0x7a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 01EB
        gbc.setState(0x3f15, 0xb9e7, 0x18e0, 0x4cc4, 0xa378, 0x9db7, 0x0, 0x0);
        gbc.writeMem(0x3f15, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb9e7);
        EXPECT(gbc.pc(), 0x3f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 01EC
        gbc.setState(0x761f, 0x196, 0x1450, 0xb87e, 0x1e80, 0xf7c4, 0x0, 0x0);
        gbc.writeMem(0x761f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x196);
        EXPECT(gbc.pc(), 0x7620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 01ED
        gbc.setState(0xcf49, 0xded5, 0x4fd0, 0x98f9, 0x1f13, 0x6771, 0x1, 0x1);
        gbc.writeMem(0xcf49, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xded5);
        EXPECT(gbc.pc(), 0xcf4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf49), 0x83);
        // 83 01EE
        gbc.setState(0x4990, 0xf20, 0x8080, 0x57fe, 0xd08, 0x49e8, 0x1, 0x0);
        gbc.writeMem(0x4990, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf20);
        EXPECT(gbc.pc(), 0x4991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 01F0
        gbc.setState(0x79a0, 0x289, 0xbcb0, 0x81ae, 0x3214, 0x708a, 0x0, 0x0);
        gbc.writeMem(0x79a0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x289);
        EXPECT(gbc.pc(), 0x79a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 01F1
        gbc.setState(0xc165, 0x1bf1, 0xa1d0, 0x2f9a, 0xbe04, 0xc07e, 0x0, 0x1);
        gbc.writeMem(0xc165, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1bf1);
        EXPECT(gbc.pc(), 0xc166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc165), 0x83);
        // 83 01F2
        gbc.setState(0xeb37, 0x407, 0x6850, 0x69f, 0xd762, 0x9e74, 0x0, 0x0);
        gbc.writeMem(0xeb37, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x407);
        EXPECT(gbc.pc(), 0xeb38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb37), 0x83);
        // 83 01F3
        gbc.setState(0x54a2, 0x2a15, 0xcfa0, 0x667e, 0x97ac, 0x2b75, 0x1, 0x1);
        gbc.writeMem(0x54a2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2a15);
        EXPECT(gbc.pc(), 0x54a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01F5
        gbc.setState(0x57a3, 0x3509, 0xdb30, 0x9b7e, 0x48c7, 0xff5b, 0x1, 0x1);
        gbc.writeMem(0x57a3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3509);
        EXPECT(gbc.pc(), 0x57a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01F6
        gbc.setState(0x2b3c, 0xb55c, 0x59c0, 0x7e1c, 0x4e43, 0xfc3f, 0x0, 0x1);
        gbc.writeMem(0x2b3c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb55c);
        EXPECT(gbc.pc(), 0x2b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 01F7
        gbc.setState(0x3692, 0xcbe1, 0x6b20, 0xb7fd, 0x8a9b, 0x9003, 0x0, 0x1);
        gbc.writeMem(0x3692, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xcbe1);
        EXPECT(gbc.pc(), 0x3693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01F8
        gbc.setState(0x83fb, 0x74af, 0x4dd0, 0xe2fe, 0x4ec3, 0x72cd, 0x0, 0x0);
        gbc.writeMem(0x83fb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x74af);
        EXPECT(gbc.pc(), 0x83fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fb), 0x83);
        // 83 01F9
        gbc.setState(0x89e4, 0x74bc, 0xf040, 0x4909, 0xdeb0, 0x90f6, 0x0, 0x1);
        gbc.writeMem(0x89e4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x74bc);
        EXPECT(gbc.pc(), 0x89e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89e4), 0x83);
        // 83 01FA
        gbc.setState(0xe58a, 0x12f8, 0xab70, 0x9392, 0x412c, 0xfb43, 0x1, 0x0);
        gbc.writeMem(0xe58a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x12f8);
        EXPECT(gbc.pc(), 0xe58b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe58a), 0x83);
        // 83 01FB
        gbc.setState(0x672b, 0x1857, 0xc660, 0x197c, 0xd9c0, 0x9e3, 0x1, 0x1);
        gbc.writeMem(0x672b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1857);
        EXPECT(gbc.pc(), 0x672c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 01FC
        gbc.setState(0x2ae3, 0x2c0b, 0xb890, 0xeb7b, 0x49ed, 0x2316, 0x0, 0x1);
        gbc.writeMem(0x2ae3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2c0b);
        EXPECT(gbc.pc(), 0x2ae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01FD
        gbc.setState(0xc20e, 0x6f69, 0x9930, 0x8b71, 0xef33, 0x9c67, 0x0, 0x0);
        gbc.writeMem(0xc20e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6f69);
        EXPECT(gbc.pc(), 0xc20f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc20e), 0x83);
        // 83 01FE
        gbc.setState(0x6c28, 0x7064, 0xc970, 0x68e1, 0x9b8d, 0xbb11, 0x1, 0x1);
        gbc.writeMem(0x6c28, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7064);
        EXPECT(gbc.pc(), 0x6c29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 01FF
        gbc.setState(0x6f94, 0x76af, 0xc130, 0xa7a5, 0xeec3, 0xd9a1, 0x1, 0x1);
        gbc.writeMem(0x6f94, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x76af);
        EXPECT(gbc.pc(), 0x6f95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0200
        gbc.setState(0x2e46, 0x6e30, 0xea60, 0x436c, 0xa9d1, 0x8945, 0x0, 0x0);
        gbc.writeMem(0x2e46, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6e30);
        EXPECT(gbc.pc(), 0x2e47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0201
        gbc.setState(0x7f1d, 0xe47d, 0x57e0, 0x3de3, 0x103b, 0x184, 0x0, 0x1);
        gbc.writeMem(0x7f1d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe47d);
        EXPECT(gbc.pc(), 0x7f1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0202
        gbc.setState(0x9bfd, 0x5ede, 0x52d0, 0xc823, 0xa6d7, 0x17ae, 0x1, 0x0);
        gbc.writeMem(0x9bfd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5ede);
        EXPECT(gbc.pc(), 0x9bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bfd), 0x83);
        // 83 0203
        gbc.setState(0x8a44, 0x409a, 0x1790, 0x951c, 0xc903, 0x585, 0x0, 0x1);
        gbc.writeMem(0x8a44, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x409a);
        EXPECT(gbc.pc(), 0x8a45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a44), 0x83);
        // 83 0204
        gbc.setState(0x131b, 0xbfbc, 0x1350, 0xaa81, 0xa61, 0x61fd, 0x1, 0x0);
        gbc.writeMem(0x131b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbfbc);
        EXPECT(gbc.pc(), 0x131c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0206
        gbc.setState(0x3da6, 0x25be, 0xf090, 0xa11f, 0xdf7d, 0x8daf, 0x0, 0x1);
        gbc.writeMem(0x3da6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x25be);
        EXPECT(gbc.pc(), 0x3da7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0207
        gbc.setState(0x81d, 0xd191, 0x5d60, 0x11d0, 0x4a5f, 0xd65e, 0x0, 0x0);
        gbc.writeMem(0x81d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd191);
        EXPECT(gbc.pc(), 0x81e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0208
        gbc.setState(0x6c07, 0xecaa, 0x7510, 0x79f5, 0x4f32, 0x48a, 0x0, 0x1);
        gbc.writeMem(0x6c07, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xecaa);
        EXPECT(gbc.pc(), 0x6c08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0209
        gbc.setState(0x51c, 0x3c5f, 0x8bc0, 0x2f4d, 0x13ab, 0x4829, 0x0, 0x0);
        gbc.writeMem(0x51c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3c5f);
        EXPECT(gbc.pc(), 0x51d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 020A
        gbc.setState(0x1820, 0x170f, 0x5ba0, 0xbdba, 0x69ee, 0x1523, 0x1, 0x0);
        gbc.writeMem(0x1820, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x170f);
        EXPECT(gbc.pc(), 0x1821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 020B
        gbc.setState(0x8333, 0x54c3, 0xb630, 0x32c4, 0x5c00, 0xfeb4, 0x1, 0x0);
        gbc.writeMem(0x8333, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x54c3);
        EXPECT(gbc.pc(), 0x8334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8333), 0x83);
        // 83 020C
        gbc.setState(0x9564, 0x994b, 0x950, 0x8d3e, 0xc968, 0xd81a, 0x1, 0x1);
        gbc.writeMem(0x9564, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x994b);
        EXPECT(gbc.pc(), 0x9565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9564), 0x83);
        // 83 020D
        gbc.setState(0x5334, 0x7f39, 0xa1d0, 0x2a8f, 0x2913, 0xce2e, 0x1, 0x1);
        gbc.writeMem(0x5334, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7f39);
        EXPECT(gbc.pc(), 0x5335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 020E
        gbc.setState(0x5df8, 0x388c, 0x8ca0, 0xf5bd, 0xdbd, 0x2c83, 0x0, 0x0);
        gbc.writeMem(0x5df8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x388c);
        EXPECT(gbc.pc(), 0x5df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 020F
        gbc.setState(0xb16e, 0xeb7a, 0xd8e0, 0xa097, 0xd4d8, 0xf8ee, 0x1, 0x0);
        gbc.writeMem(0xb16e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xeb7a);
        EXPECT(gbc.pc(), 0xb16f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16e), 0x83);
        // 83 0210
        gbc.setState(0xa78b, 0x48e3, 0x88a0, 0xdcd1, 0xcaaf, 0x3b47, 0x1, 0x0);
        gbc.writeMem(0xa78b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x48e3);
        EXPECT(gbc.pc(), 0xa78c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa78b), 0x83);
        // 83 0211
        gbc.setState(0xbc9e, 0x5461, 0x1f20, 0xaa63, 0x78f3, 0x44ee, 0x0, 0x0);
        gbc.writeMem(0xbc9e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5461);
        EXPECT(gbc.pc(), 0xbc9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc9e), 0x83);
        // 83 0212
        gbc.setState(0x4309, 0xac61, 0x6dd0, 0x415a, 0x4ac6, 0xf7ca, 0x1, 0x0);
        gbc.writeMem(0x4309, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xac61);
        EXPECT(gbc.pc(), 0x430a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0213
        gbc.setState(0x6ff6, 0xb7ba, 0xa1c0, 0xa3f1, 0xf56b, 0x844e, 0x1, 0x1);
        gbc.writeMem(0x6ff6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb7ba);
        EXPECT(gbc.pc(), 0x6ff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0214
        gbc.setState(0xcbe2, 0x3110, 0xad0, 0x94d9, 0x3f96, 0xc1c3, 0x1, 0x0);
        gbc.writeMem(0xcbe2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3110);
        EXPECT(gbc.pc(), 0xcbe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbe2), 0x83);
        // 83 0215
        gbc.setState(0x8754, 0xbae5, 0xdef0, 0x72f1, 0xb336, 0x8860, 0x1, 0x1);
        gbc.writeMem(0x8754, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xbae5);
        EXPECT(gbc.pc(), 0x8755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8754), 0x83);
        // 83 0216
        gbc.setState(0x9769, 0x176a, 0xc1b0, 0xf28e, 0xb22, 0xa696, 0x1, 0x1);
        gbc.writeMem(0x9769, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x176a);
        EXPECT(gbc.pc(), 0x976a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9769), 0x83);
        // 83 0217
        gbc.setState(0x132f, 0x9c0f, 0x5f0, 0x2557, 0x47a1, 0xc3f8, 0x1, 0x1);
        gbc.writeMem(0x132f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9c0f);
        EXPECT(gbc.pc(), 0x1330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0218
        gbc.setState(0x1225, 0x2a93, 0x2df0, 0xef53, 0x51ca, 0xdbae, 0x0, 0x1);
        gbc.writeMem(0x1225, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2a93);
        EXPECT(gbc.pc(), 0x1226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 021A
        gbc.setState(0xa75c, 0x1d8a, 0xf610, 0x10c9, 0x3685, 0xfd85, 0x0, 0x0);
        gbc.writeMem(0xa75c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1d8a);
        EXPECT(gbc.pc(), 0xa75d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa75c), 0x83);
        // 83 021B
        gbc.setState(0x62b2, 0x156f, 0x25f0, 0x184, 0xf83f, 0x59f5, 0x0, 0x1);
        gbc.writeMem(0x62b2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x156f);
        EXPECT(gbc.pc(), 0x62b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 021C
        gbc.setState(0x1129, 0x29ae, 0x6450, 0x8c5b, 0x7d4b, 0x709, 0x1, 0x0);
        gbc.writeMem(0x1129, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x29ae);
        EXPECT(gbc.pc(), 0x112a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 021D
        gbc.setState(0x3917, 0x4873, 0x9060, 0x3b8a, 0x75db, 0x570e, 0x1, 0x0);
        gbc.writeMem(0x3917, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4873);
        EXPECT(gbc.pc(), 0x3918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 021E
        gbc.setState(0x20ce, 0xbb31, 0x8500, 0xbb11, 0x9a80, 0x3748, 0x0, 0x0);
        gbc.writeMem(0x20ce, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbb31);
        EXPECT(gbc.pc(), 0x20cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 021F
        gbc.setState(0x8cff, 0xa9d2, 0xc620, 0xd49f, 0x6d66, 0x7517, 0x1, 0x0);
        gbc.writeMem(0x8cff, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa9d2);
        EXPECT(gbc.pc(), 0x8d00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cff), 0x83);
        // 83 0220
        gbc.setState(0x4e6c, 0x78ba, 0x3e60, 0x9391, 0x371e, 0xa038, 0x0, 0x0);
        gbc.writeMem(0x4e6c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x78ba);
        EXPECT(gbc.pc(), 0x4e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0221
        gbc.setState(0x97f9, 0x7935, 0x8e30, 0xafc5, 0xf4d, 0xaf, 0x0, 0x1);
        gbc.writeMem(0x97f9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7935);
        EXPECT(gbc.pc(), 0x97fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97f9), 0x83);
        // 83 0222
        gbc.setState(0xf35, 0xf83b, 0x5b0, 0x3834, 0x521f, 0xe008, 0x0, 0x0);
        gbc.writeMem(0xf35, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf83b);
        EXPECT(gbc.pc(), 0xf36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0223
        gbc.setState(0xd0d2, 0xd236, 0xb7e0, 0xccb, 0x647a, 0xad95, 0x0, 0x0);
        gbc.writeMem(0xd0d2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd236);
        EXPECT(gbc.pc(), 0xd0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d2), 0x83);
        // 83 0224
        gbc.setState(0x1118, 0x7d69, 0x3af0, 0xdba1, 0x458c, 0x653c, 0x0, 0x1);
        gbc.writeMem(0x1118, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7d69);
        EXPECT(gbc.pc(), 0x1119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0225
        gbc.setState(0xe99c, 0x2cf1, 0xff10, 0x2f3d, 0x10bc, 0x23d7, 0x1, 0x1);
        gbc.writeMem(0xe99c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2cf1);
        EXPECT(gbc.pc(), 0xe99d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe99c), 0x83);
        // 83 0226
        gbc.setState(0x3dcb, 0x467a, 0x8f50, 0x8c22, 0x6d2, 0xb68, 0x1, 0x0);
        gbc.writeMem(0x3dcb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x467a);
        EXPECT(gbc.pc(), 0x3dcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0227
        gbc.setState(0x5016, 0x5bd9, 0xa080, 0x87ca, 0xece5, 0x5fab, 0x1, 0x0);
        gbc.writeMem(0x5016, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5bd9);
        EXPECT(gbc.pc(), 0x5017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0228
        gbc.setState(0xb863, 0xca62, 0xe2d0, 0x2943, 0x17d6, 0x6208, 0x1, 0x1);
        gbc.writeMem(0xb863, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xca62);
        EXPECT(gbc.pc(), 0xb864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb863), 0x83);
        // 83 0229
        gbc.setState(0xa149, 0xfdf7, 0x8be0, 0xebca, 0x7c49, 0x506d, 0x1, 0x0);
        gbc.writeMem(0xa149, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xfdf7);
        EXPECT(gbc.pc(), 0xa14a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa149), 0x83);
        // 83 022A
        gbc.setState(0x556a, 0xd172, 0x39e0, 0x92fa, 0x51d, 0x392, 0x0, 0x1);
        gbc.writeMem(0x556a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd172);
        EXPECT(gbc.pc(), 0x556b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 022B
        gbc.setState(0xdd8d, 0x4f15, 0x6fa0, 0x412a, 0x2acc, 0xa21b, 0x0, 0x1);
        gbc.writeMem(0xdd8d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4f15);
        EXPECT(gbc.pc(), 0xdd8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd8d), 0x83);
        // 83 022C
        gbc.setState(0xbde5, 0xb6e9, 0x9150, 0xa145, 0x433b, 0x811, 0x1, 0x1);
        gbc.writeMem(0xbde5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb6e9);
        EXPECT(gbc.pc(), 0xbde6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde5), 0x83);
        // 83 022D
        gbc.setState(0xe73b, 0x7c0f, 0xa200, 0xaa57, 0xfef4, 0xdb82, 0x1, 0x1);
        gbc.writeMem(0xe73b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7c0f);
        EXPECT(gbc.pc(), 0xe73c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe73b), 0x83);
        // 83 022E
        gbc.setState(0x6ddd, 0xa7ac, 0x5750, 0x14b2, 0x19a9, 0x9347, 0x0, 0x0);
        gbc.writeMem(0x6ddd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa7ac);
        EXPECT(gbc.pc(), 0x6dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 022F
        gbc.setState(0x6e47, 0x3efe, 0xfef0, 0xf602, 0x5f62, 0xee38, 0x1, 0x1);
        gbc.writeMem(0x6e47, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3efe);
        EXPECT(gbc.pc(), 0x6e48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0230
        gbc.setState(0xc5bf, 0xf562, 0x8270, 0x6ae3, 0x2bf3, 0x5600, 0x1, 0x1);
        gbc.writeMem(0xc5bf, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf562);
        EXPECT(gbc.pc(), 0xc5c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5bf), 0x83);
        // 83 0231
        gbc.setState(0x3133, 0x60fd, 0xf070, 0xfce5, 0x6681, 0x563a, 0x0, 0x0);
        gbc.writeMem(0x3133, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x60fd);
        EXPECT(gbc.pc(), 0x3134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0233
        gbc.setState(0x58d7, 0x48bf, 0x1210, 0x4c6c, 0x202b, 0x2803, 0x0, 0x1);
        gbc.writeMem(0x58d7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x48bf);
        EXPECT(gbc.pc(), 0x58d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0234
        gbc.setState(0xc371, 0xa3bc, 0x6080, 0xcae4, 0x325e, 0xae5b, 0x1, 0x1);
        gbc.writeMem(0xc371, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa3bc);
        EXPECT(gbc.pc(), 0xc372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc371), 0x83);
        // 83 0235
        gbc.setState(0xa0de, 0xd466, 0xac40, 0x28be, 0xaa8e, 0x282a, 0x1, 0x0);
        gbc.writeMem(0xa0de, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd466);
        EXPECT(gbc.pc(), 0xa0df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0de), 0x83);
        // 83 0236
        gbc.setState(0xaefc, 0x132f, 0x6650, 0x2a30, 0x8a9, 0x1a8e, 0x1, 0x0);
        gbc.writeMem(0xaefc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x132f);
        EXPECT(gbc.pc(), 0xaefd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaefc), 0x83);
        // 83 0237
        gbc.setState(0xce1c, 0x82f0, 0x20c0, 0xd17f, 0x9b1a, 0xec46, 0x1, 0x0);
        gbc.writeMem(0xce1c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x82f0);
        EXPECT(gbc.pc(), 0xce1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce1c), 0x83);
        // 83 0238
        gbc.setState(0xe096, 0xf657, 0x1300, 0xd90d, 0x4849, 0x60c0, 0x0, 0x1);
        gbc.writeMem(0xe096, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf657);
        EXPECT(gbc.pc(), 0xe097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe096), 0x83);
        // 83 0239
        gbc.setState(0x2fc3, 0xf2ac, 0x2d10, 0x874b, 0x37c1, 0x2f87, 0x0, 0x0);
        gbc.writeMem(0x2fc3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf2ac);
        EXPECT(gbc.pc(), 0x2fc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 023A
        gbc.setState(0xcd8f, 0x49d2, 0xce10, 0x5460, 0xf7d4, 0xbbfe, 0x0, 0x1);
        gbc.writeMem(0xcd8f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x49d2);
        EXPECT(gbc.pc(), 0xcd90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd8f), 0x83);
        // 83 023B
        gbc.setState(0xd960, 0xaecf, 0xf090, 0x34f8, 0x9515, 0xb4d4, 0x0, 0x0);
        gbc.writeMem(0xd960, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xaecf);
        EXPECT(gbc.pc(), 0xd961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd960), 0x83);
        // 83 023C
        gbc.setState(0x664c, 0x2c64, 0x7590, 0xd2d8, 0x1c75, 0x9a96, 0x0, 0x0);
        gbc.writeMem(0x664c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2c64);
        EXPECT(gbc.pc(), 0x664d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 023D
        gbc.setState(0x5ca7, 0xab6b, 0xd590, 0xbc5f, 0xe666, 0xd3e5, 0x0, 0x0);
        gbc.writeMem(0x5ca7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xab6b);
        EXPECT(gbc.pc(), 0x5ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 023E
        gbc.setState(0x67ae, 0xcf24, 0x7030, 0x65c2, 0x6450, 0xfe82, 0x1, 0x1);
        gbc.writeMem(0x67ae, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xcf24);
        EXPECT(gbc.pc(), 0x67af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 023F
        gbc.setState(0x5952, 0xb561, 0xb1e0, 0xb52e, 0xa6dd, 0xdc53, 0x0, 0x0);
        gbc.writeMem(0x5952, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb561);
        EXPECT(gbc.pc(), 0x5953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0240
        gbc.setState(0x57a, 0xc55a, 0xae20, 0x2409, 0xdbb2, 0x5e75, 0x1, 0x0);
        gbc.writeMem(0x57a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc55a);
        EXPECT(gbc.pc(), 0x57b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0242
        gbc.setState(0x1621, 0xc8d9, 0x90c0, 0x9c26, 0x3ac0, 0x6691, 0x1, 0x1);
        gbc.writeMem(0x1621, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc8d9);
        EXPECT(gbc.pc(), 0x1622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0243
        gbc.setState(0x84a8, 0xba48, 0x1e0, 0x14e, 0x4e1f, 0xc94f, 0x1, 0x0);
        gbc.writeMem(0x84a8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xba48);
        EXPECT(gbc.pc(), 0x84a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a8), 0x83);
        // 83 0244
        gbc.setState(0x91b9, 0x5531, 0x93d0, 0x5a07, 0xa158, 0x2afe, 0x1, 0x1);
        gbc.writeMem(0x91b9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5531);
        EXPECT(gbc.pc(), 0x91ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b9), 0x83);
        // 83 0245
        gbc.setState(0x4e96, 0xa357, 0xa8c0, 0x28bd, 0x43e3, 0xd6bf, 0x0, 0x0);
        gbc.writeMem(0x4e96, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa357);
        EXPECT(gbc.pc(), 0x4e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0246
        gbc.setState(0x5f26, 0x2d99, 0x4b20, 0xbfd5, 0xfac, 0x5a7c, 0x1, 0x1);
        gbc.writeMem(0x5f26, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x2d99);
        EXPECT(gbc.pc(), 0x5f27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0247
        gbc.setState(0xae8f, 0x6ec, 0xa870, 0xe5c4, 0x414, 0x630c, 0x0, 0x1);
        gbc.writeMem(0xae8f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x6ec);
        EXPECT(gbc.pc(), 0xae90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae8f), 0x83);
        // 83 0248
        gbc.setState(0x9ce0, 0x4be4, 0xa7b0, 0x41a1, 0x8119, 0x9548, 0x0, 0x1);
        gbc.writeMem(0x9ce0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4be4);
        EXPECT(gbc.pc(), 0x9ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ce0), 0x83);
        // 83 0249
        gbc.setState(0xed1a, 0xaa52, 0xc7a0, 0xbaea, 0xc762, 0x6fa9, 0x0, 0x0);
        gbc.writeMem(0xed1a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xaa52);
        EXPECT(gbc.pc(), 0xed1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed1a), 0x83);
        // 83 024A
        gbc.setState(0xea43, 0xc2da, 0xd630, 0x2c25, 0xf45d, 0x375c, 0x0, 0x0);
        gbc.writeMem(0xea43, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc2da);
        EXPECT(gbc.pc(), 0xea44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea43), 0x83);
        // 83 024B
        gbc.setState(0x8df2, 0xa8fe, 0x75f0, 0xca2c, 0x952e, 0xee33, 0x1, 0x1);
        gbc.writeMem(0x8df2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa8fe);
        EXPECT(gbc.pc(), 0x8df3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df2), 0x83);
        // 83 024C
        gbc.setState(0x6cc8, 0xefbe, 0xe430, 0x2ecb, 0x38ba, 0x5fe0, 0x0, 0x1);
        gbc.writeMem(0x6cc8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xefbe);
        EXPECT(gbc.pc(), 0x6cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 024D
        gbc.setState(0x3fb8, 0x511a, 0xe920, 0x6a77, 0x97b7, 0xf23d, 0x0, 0x1);
        gbc.writeMem(0x3fb8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x511a);
        EXPECT(gbc.pc(), 0x3fb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 024E
        gbc.setState(0x7972, 0xf972, 0xa580, 0x9349, 0x82eb, 0xdfcc, 0x1, 0x1);
        gbc.writeMem(0x7972, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf972);
        EXPECT(gbc.pc(), 0x7973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 024F
        gbc.setState(0xddcd, 0xf82c, 0x9f60, 0x6510, 0x502, 0x2ee, 0x1, 0x0);
        gbc.writeMem(0xddcd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf82c);
        EXPECT(gbc.pc(), 0xddce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddcd), 0x83);
        // 83 0250
        gbc.setState(0x4967, 0xdd5d, 0x2fd0, 0x6922, 0x87c9, 0x9fc3, 0x0, 0x1);
        gbc.writeMem(0x4967, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdd5d);
        EXPECT(gbc.pc(), 0x4968);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0251
        gbc.setState(0xcc4d, 0xee0d, 0xd060, 0xedc2, 0xd683, 0x9ad4, 0x0, 0x1);
        gbc.writeMem(0xcc4d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xee0d);
        EXPECT(gbc.pc(), 0xcc4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc4d), 0x83);
        // 83 0252
        gbc.setState(0xb6, 0x7863, 0x3680, 0x6d93, 0x7858, 0xb7d7, 0x0, 0x0);
        gbc.writeMem(0xb6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x7863);
        EXPECT(gbc.pc(), 0xb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0253
        gbc.setState(0x3603, 0xd575, 0x88b0, 0xd0fe, 0x471f, 0x23bc, 0x0, 0x1);
        gbc.writeMem(0x3603, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd575);
        EXPECT(gbc.pc(), 0x3604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0254
        gbc.setState(0xa1be, 0x41f3, 0x3510, 0xc68b, 0x2601, 0x50db, 0x0, 0x1);
        gbc.writeMem(0xa1be, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x41f3);
        EXPECT(gbc.pc(), 0xa1bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1be), 0x83);
        // 83 0255
        gbc.setState(0x3d2c, 0x4a42, 0x8d50, 0xf6b3, 0xc791, 0xbab, 0x0, 0x0);
        gbc.writeMem(0x3d2c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4a42);
        EXPECT(gbc.pc(), 0x3d2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0256
        gbc.setState(0xd5c5, 0x7285, 0xb50, 0x3929, 0x2e01, 0x5f3f, 0x0, 0x0);
        gbc.writeMem(0xd5c5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7285);
        EXPECT(gbc.pc(), 0xd5c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5c5), 0x83);
        // 83 0257
        gbc.setState(0xe1c, 0x4614, 0xf380, 0x2b4b, 0x2042, 0x42, 0x1, 0x1);
        gbc.writeMem(0xe1c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4614);
        EXPECT(gbc.pc(), 0xe1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0258
        gbc.setState(0xcac6, 0x5884, 0xdfb0, 0xa865, 0x3438, 0x229b, 0x1, 0x1);
        gbc.writeMem(0xcac6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5884);
        EXPECT(gbc.pc(), 0xcac7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac6), 0x83);
        // 83 025A
        gbc.setState(0x7890, 0x394c, 0x8e00, 0xae9b, 0x68ae, 0xaf2, 0x1, 0x0);
        gbc.writeMem(0x7890, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x394c);
        EXPECT(gbc.pc(), 0x7891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 025B
        gbc.setState(0x4b80, 0xb61, 0x6250, 0xcf84, 0xb052, 0xa2fe, 0x1, 0x1);
        gbc.writeMem(0x4b80, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb61);
        EXPECT(gbc.pc(), 0x4b81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 025C
        gbc.setState(0xc10b, 0x865d, 0xd110, 0x4a83, 0x408b, 0x389, 0x1, 0x0);
        gbc.writeMem(0xc10b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x865d);
        EXPECT(gbc.pc(), 0xc10c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc10b), 0x83);
        // 83 025D
        gbc.setState(0x40de, 0x7dc7, 0x5680, 0xaefc, 0x9160, 0x75ca, 0x1, 0x1);
        gbc.writeMem(0x40de, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7dc7);
        EXPECT(gbc.pc(), 0x40df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 025E
        gbc.setState(0x61d2, 0xe208, 0x6180, 0xc967, 0x4a48, 0x229, 0x1, 0x0);
        gbc.writeMem(0x61d2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe208);
        EXPECT(gbc.pc(), 0x61d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 025F
        gbc.setState(0xdb60, 0x8f84, 0x5bc0, 0xb3ea, 0x93ea, 0x86c8, 0x1, 0x0);
        gbc.writeMem(0xdb60, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8f84);
        EXPECT(gbc.pc(), 0xdb61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb60), 0x83);
        // 83 0260
        gbc.setState(0x7e24, 0x80ff, 0x1730, 0xb584, 0xdc5a, 0xcbc6, 0x1, 0x1);
        gbc.writeMem(0x7e24, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x80ff);
        EXPECT(gbc.pc(), 0x7e25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0261
        gbc.setState(0x818b, 0x259c, 0x44e0, 0xb9b3, 0xf63b, 0xef80, 0x0, 0x1);
        gbc.writeMem(0x818b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x259c);
        EXPECT(gbc.pc(), 0x818c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x818b), 0x83);
        // 83 0262
        gbc.setState(0xa318, 0x6b11, 0x7790, 0x16ed, 0x59ac, 0x41ab, 0x0, 0x0);
        gbc.writeMem(0xa318, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6b11);
        EXPECT(gbc.pc(), 0xa319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa318), 0x83);
        // 83 0263
        gbc.setState(0x8a8a, 0xab69, 0x8ef0, 0x4290, 0xeca2, 0x23f8, 0x1, 0x0);
        gbc.writeMem(0x8a8a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xab69);
        EXPECT(gbc.pc(), 0x8a8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a8a), 0x83);
        // 83 0264
        gbc.setState(0xd2ef, 0xb424, 0xe760, 0x47ab, 0x36a1, 0xda03, 0x0, 0x1);
        gbc.writeMem(0xd2ef, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb424);
        EXPECT(gbc.pc(), 0xd2f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ef), 0x83);
        // 83 0265
        gbc.setState(0xed86, 0x959f, 0x8fe0, 0x612e, 0x405e, 0xaac5, 0x0, 0x0);
        gbc.writeMem(0xed86, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x959f);
        EXPECT(gbc.pc(), 0xed87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed86), 0x83);
        // 83 0266
        gbc.setState(0x43e9, 0x6b09, 0xeb10, 0xc8f0, 0x31d2, 0x8a38, 0x1, 0x1);
        gbc.writeMem(0x43e9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6b09);
        EXPECT(gbc.pc(), 0x43ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0267
        gbc.setState(0xd10c, 0xe86a, 0xab0, 0x2ebf, 0xcd01, 0x1946, 0x1, 0x0);
        gbc.writeMem(0xd10c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe86a);
        EXPECT(gbc.pc(), 0xd10d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd10c), 0x83);
        // 83 0268
        gbc.setState(0x8f23, 0xbbc6, 0xfaf0, 0xd6c6, 0xeca7, 0x2362, 0x0, 0x0);
        gbc.writeMem(0x8f23, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xbbc6);
        EXPECT(gbc.pc(), 0x8f24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f23), 0x83);
        // 83 0269
        gbc.setState(0x9581, 0x2c0a, 0x6b70, 0xe655, 0x18a1, 0x6343, 0x1, 0x1);
        gbc.writeMem(0x9581, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2c0a);
        EXPECT(gbc.pc(), 0x9582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9581), 0x83);
        // 83 026A
        gbc.setState(0xec5e, 0x4053, 0x7210, 0x77cc, 0x607f, 0x867a, 0x1, 0x0);
        gbc.writeMem(0xec5e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4053);
        EXPECT(gbc.pc(), 0xec5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec5e), 0x83);
        // 83 026B
        gbc.setState(0x89ec, 0x1342, 0x45b0, 0xa02a, 0x8fd3, 0x9140, 0x1, 0x1);
        gbc.writeMem(0x89ec, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1342);
        EXPECT(gbc.pc(), 0x89ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ec), 0x83);
        // 83 026C
        gbc.setState(0x4306, 0x2809, 0x48b0, 0x1530, 0x505f, 0xc0cd, 0x0, 0x0);
        gbc.writeMem(0x4306, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2809);
        EXPECT(gbc.pc(), 0x4307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 026D
        gbc.setState(0xaf3b, 0x2a1f, 0xa4a0, 0xe27e, 0xb466, 0xb075, 0x0, 0x1);
        gbc.writeMem(0xaf3b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2a1f);
        EXPECT(gbc.pc(), 0xaf3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf3b), 0x83);
        // 83 026E
        gbc.setState(0x44ad, 0x264d, 0xc180, 0x3723, 0x5952, 0x9f2f, 0x0, 0x1);
        gbc.writeMem(0x44ad, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x264d);
        EXPECT(gbc.pc(), 0x44ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0270
        gbc.setState(0xb9df, 0x166e, 0x6250, 0x5a50, 0x9694, 0x408c, 0x1, 0x1);
        gbc.writeMem(0xb9df, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x166e);
        EXPECT(gbc.pc(), 0xb9e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9df), 0x83);
        // 83 0271
        gbc.setState(0x9e7a, 0xd411, 0xd860, 0x7f41, 0x60ba, 0x9f09, 0x0, 0x0);
        gbc.writeMem(0x9e7a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd411);
        EXPECT(gbc.pc(), 0x9e7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e7a), 0x83);
        // 83 0272
        gbc.setState(0xc45e, 0x52e4, 0xae40, 0x6a46, 0xe6c8, 0x3bd3, 0x1, 0x0);
        gbc.writeMem(0xc45e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x52e4);
        EXPECT(gbc.pc(), 0xc45f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc45e), 0x83);
        // 83 0273
        gbc.setState(0xab19, 0x2e10, 0xb5b0, 0xc7e7, 0xf08c, 0x44ad, 0x1, 0x0);
        gbc.writeMem(0xab19, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2e10);
        EXPECT(gbc.pc(), 0xab1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab19), 0x83);
        // 83 0274
        gbc.setState(0x5c4, 0x13ba, 0x77e0, 0x794f, 0x72a, 0x8851, 0x1, 0x0);
        gbc.writeMem(0x5c4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x13ba);
        EXPECT(gbc.pc(), 0x5c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0275
        gbc.setState(0x5a5, 0x3d15, 0x22b0, 0x4e22, 0x69f8, 0x4b43, 0x1, 0x1);
        gbc.writeMem(0x5a5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3d15);
        EXPECT(gbc.pc(), 0x5a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0276
        gbc.setState(0x70cb, 0x923d, 0x52a0, 0x604a, 0xfc12, 0x75b9, 0x0, 0x0);
        gbc.writeMem(0x70cb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x923d);
        EXPECT(gbc.pc(), 0x70cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0278
        gbc.setState(0x7aa, 0x4bea, 0x8e30, 0x4e2f, 0x5be, 0x9aa7, 0x0, 0x1);
        gbc.writeMem(0x7aa, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4bea);
        EXPECT(gbc.pc(), 0x7ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0279
        gbc.setState(0x643c, 0x87ea, 0x8770, 0xcd52, 0x4e33, 0x505c, 0x0, 0x0);
        gbc.writeMem(0x643c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x87ea);
        EXPECT(gbc.pc(), 0x643d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 027A
        gbc.setState(0xc350, 0x7178, 0x6c10, 0xeaf6, 0x9b11, 0xa9a9, 0x0, 0x0);
        gbc.writeMem(0xc350, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7178);
        EXPECT(gbc.pc(), 0xc351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc350), 0x83);
        // 83 027B
        gbc.setState(0x2a24, 0x7194, 0xb2a0, 0xe744, 0x5640, 0x1a38, 0x1, 0x0);
        gbc.writeMem(0x2a24, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7194);
        EXPECT(gbc.pc(), 0x2a25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 027C
        gbc.setState(0xad50, 0xa1ae, 0x5c80, 0xa131, 0x1447, 0xcd24, 0x0, 0x1);
        gbc.writeMem(0xad50, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa1ae);
        EXPECT(gbc.pc(), 0xad51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad50), 0x83);
        // 83 027D
        gbc.setState(0x7d2f, 0x148f, 0x8af0, 0x1fee, 0x5e67, 0xe0ba, 0x1, 0x0);
        gbc.writeMem(0x7d2f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x148f);
        EXPECT(gbc.pc(), 0x7d30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 027E
        gbc.setState(0x46b4, 0x4644, 0x1510, 0x5019, 0x46c2, 0x6b6f, 0x0, 0x1);
        gbc.writeMem(0x46b4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4644);
        EXPECT(gbc.pc(), 0x46b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 027F
        gbc.setState(0xe22a, 0xfbb9, 0x93c0, 0x5a80, 0x96f1, 0xd8bd, 0x1, 0x0);
        gbc.writeMem(0xe22a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfbb9);
        EXPECT(gbc.pc(), 0xe22b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe22a), 0x83);
        // 83 0280
        gbc.setState(0x73ca, 0xe490, 0x1d0, 0xd786, 0xc6e0, 0x8b92, 0x1, 0x1);
        gbc.writeMem(0x73ca, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe490);
        EXPECT(gbc.pc(), 0x73cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0281
        gbc.setState(0x3983, 0x3e10, 0xb5c0, 0x2d56, 0xd001, 0xc338, 0x0, 0x0);
        gbc.writeMem(0x3983, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3e10);
        EXPECT(gbc.pc(), 0x3984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0282
        gbc.setState(0x11f4, 0x4acb, 0x3eb0, 0x19f3, 0x566b, 0x65d7, 0x0, 0x1);
        gbc.writeMem(0x11f4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4acb);
        EXPECT(gbc.pc(), 0x11f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0283
        gbc.setState(0x9ac2, 0x8104, 0x7fa0, 0xdfd1, 0x5875, 0x736, 0x1, 0x0);
        gbc.writeMem(0x9ac2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8104);
        EXPECT(gbc.pc(), 0x9ac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac2), 0x83);
        // 83 0284
        gbc.setState(0xc070, 0x73f5, 0xf0f0, 0x25bb, 0xde0c, 0x426, 0x0, 0x0);
        gbc.writeMem(0xc070, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x73f5);
        EXPECT(gbc.pc(), 0xc071);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc070), 0x83);
        // 83 0285
        gbc.setState(0x1cfd, 0xa8dd, 0xf000, 0xa48d, 0x8b9d, 0xca52, 0x1, 0x0);
        gbc.writeMem(0x1cfd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa8dd);
        EXPECT(gbc.pc(), 0x1cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0286
        gbc.setState(0xb982, 0x8c7e, 0xd340, 0x57a1, 0x70f6, 0xde72, 0x1, 0x1);
        gbc.writeMem(0xb982, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8c7e);
        EXPECT(gbc.pc(), 0xb983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb982), 0x83);
        // 83 0287
        gbc.setState(0xc4c8, 0x9175, 0x43f0, 0xc755, 0x64f5, 0xdcd0, 0x1, 0x0);
        gbc.writeMem(0xc4c8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9175);
        EXPECT(gbc.pc(), 0xc4c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c8), 0x83);
        // 83 0288
        gbc.setState(0x2b90, 0x8f06, 0x78c0, 0x4c2e, 0x3ef1, 0xb623, 0x1, 0x1);
        gbc.writeMem(0x2b90, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8f06);
        EXPECT(gbc.pc(), 0x2b91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0289
        gbc.setState(0xe2a2, 0x182e, 0xcd40, 0x9a2f, 0x47aa, 0x8df1, 0x1, 0x1);
        gbc.writeMem(0xe2a2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x182e);
        EXPECT(gbc.pc(), 0xe2a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2a2), 0x83);
        // 83 028B
        gbc.setState(0xe847, 0xc620, 0xc760, 0x81b0, 0x75b9, 0x8bea, 0x0, 0x0);
        gbc.writeMem(0xe847, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc620);
        EXPECT(gbc.pc(), 0xe848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe847), 0x83);
        // 83 028C
        gbc.setState(0xa95, 0x19d9, 0x6e30, 0x147a, 0xbac3, 0xbc5b, 0x1, 0x0);
        gbc.writeMem(0xa95, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x19d9);
        EXPECT(gbc.pc(), 0xa96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 028D
        gbc.setState(0x68fd, 0x9c9d, 0x9eb0, 0x8a3a, 0x68ba, 0xdf78, 0x1, 0x1);
        gbc.writeMem(0x68fd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9c9d);
        EXPECT(gbc.pc(), 0x68fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 028E
        gbc.setState(0x30f, 0xf30b, 0x630, 0xf06, 0xbfae, 0xa978, 0x0, 0x1);
        gbc.writeMem(0x30f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf30b);
        EXPECT(gbc.pc(), 0x310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 028F
        gbc.setState(0x357d, 0x1802, 0x43b0, 0xd76e, 0xf681, 0x4945, 0x0, 0x0);
        gbc.writeMem(0x357d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1802);
        EXPECT(gbc.pc(), 0x357e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0290
        gbc.setState(0xafbc, 0x9704, 0x5390, 0x13a0, 0xa8e0, 0x8328, 0x1, 0x0);
        gbc.writeMem(0xafbc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9704);
        EXPECT(gbc.pc(), 0xafbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafbc), 0x83);
        // 83 0291
        gbc.setState(0x8bef, 0xbf74, 0x5c90, 0x7d9e, 0xb0ea, 0x3b7b, 0x0, 0x1);
        gbc.writeMem(0x8bef, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xbf74);
        EXPECT(gbc.pc(), 0x8bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bef), 0x83);
        // 83 0292
        gbc.setState(0x9f3f, 0x1e05, 0x4510, 0xd650, 0x3d99, 0x89c5, 0x1, 0x1);
        gbc.writeMem(0x9f3f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1e05);
        EXPECT(gbc.pc(), 0x9f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f3f), 0x83);
        // 83 0293
        gbc.setState(0x8866, 0x38eb, 0x3d10, 0x9b56, 0x737, 0x2007, 0x1, 0x0);
        gbc.writeMem(0x8866, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x38eb);
        EXPECT(gbc.pc(), 0x8867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8866), 0x83);
        // 83 0294
        gbc.setState(0xc124, 0x2438, 0x9680, 0xcf5b, 0x7ce3, 0x794b, 0x1, 0x0);
        gbc.writeMem(0xc124, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2438);
        EXPECT(gbc.pc(), 0xc125);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc124), 0x83);
        // 83 0295
        gbc.setState(0x787e, 0x1c76, 0x1800, 0xe0c6, 0x22, 0xa8b1, 0x1, 0x0);
        gbc.writeMem(0x787e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1c76);
        EXPECT(gbc.pc(), 0x787f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0296
        gbc.setState(0xe47b, 0xd07b, 0x3b50, 0xf6ca, 0xaf8d, 0xab7d, 0x0, 0x0);
        gbc.writeMem(0xe47b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd07b);
        EXPECT(gbc.pc(), 0xe47c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe47b), 0x83);
        // 83 0297
        gbc.setState(0x4e7b, 0xa359, 0x95e0, 0x89d4, 0x30c7, 0xdc74, 0x0, 0x1);
        gbc.writeMem(0x4e7b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa359);
        EXPECT(gbc.pc(), 0x4e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0298
        gbc.setState(0x45e6, 0x5ff, 0x32b0, 0xd6fd, 0xa325, 0xb043, 0x0, 0x0);
        gbc.writeMem(0x45e6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x5ff);
        EXPECT(gbc.pc(), 0x45e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0299
        gbc.setState(0x8aa9, 0x154b, 0x6390, 0xc687, 0x2eaf, 0x598d, 0x1, 0x1);
        gbc.writeMem(0x8aa9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x154b);
        EXPECT(gbc.pc(), 0x8aaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aa9), 0x83);
        // 83 029A
        gbc.setState(0x2d7a, 0x7e74, 0x8f60, 0x9769, 0xcfd3, 0x6ead, 0x1, 0x1);
        gbc.writeMem(0x2d7a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7e74);
        EXPECT(gbc.pc(), 0x2d7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 029B
        gbc.setState(0x1dfb, 0xccd5, 0xb9c0, 0xb3ce, 0x27bf, 0xb548, 0x1, 0x0);
        gbc.writeMem(0x1dfb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xccd5);
        EXPECT(gbc.pc(), 0x1dfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 029C
        gbc.setState(0x3100, 0x2c0c, 0xc890, 0xdb7, 0xb297, 0xe72d, 0x0, 0x1);
        gbc.writeMem(0x3100, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2c0c);
        EXPECT(gbc.pc(), 0x3101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 029D
        gbc.setState(0xa0e6, 0x651, 0x9680, 0x3d6c, 0x4710, 0xa5fa, 0x1, 0x0);
        gbc.writeMem(0xa0e6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x651);
        EXPECT(gbc.pc(), 0xa0e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e6), 0x83);
        // 83 029E
        gbc.setState(0x9339, 0x9a64, 0x6550, 0x4639, 0xbd25, 0xb301, 0x0, 0x1);
        gbc.writeMem(0x9339, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9a64);
        EXPECT(gbc.pc(), 0x933a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9339), 0x83);
        // 83 029F
        gbc.setState(0xd6a6, 0x88fd, 0xedb0, 0x78a3, 0x264, 0x40ce, 0x0, 0x0);
        gbc.writeMem(0xd6a6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x88fd);
        EXPECT(gbc.pc(), 0xd6a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6a6), 0x83);
        // 83 02A0
        gbc.setState(0x758, 0xdcae, 0x6740, 0x1ca, 0x71e8, 0xe71d, 0x0, 0x1);
        gbc.writeMem(0x758, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xdcae);
        EXPECT(gbc.pc(), 0x759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02A1
        gbc.setState(0xbf02, 0xedf2, 0x6800, 0xb10d, 0x794, 0xb2ec, 0x1, 0x1);
        gbc.writeMem(0xbf02, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xedf2);
        EXPECT(gbc.pc(), 0xbf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf02), 0x83);
        // 83 02A2
        gbc.setState(0x5f00, 0xf66a, 0x4c50, 0x4f23, 0x1270, 0x1913, 0x1, 0x1);
        gbc.writeMem(0x5f00, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf66a);
        EXPECT(gbc.pc(), 0x5f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02A3
        gbc.setState(0xeb3c, 0xc6d5, 0x5620, 0x910, 0x77e7, 0xb797, 0x0, 0x1);
        gbc.writeMem(0xeb3c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc6d5);
        EXPECT(gbc.pc(), 0xeb3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb3c), 0x83);
        // 83 02A4
        gbc.setState(0x74f5, 0xe132, 0xa1e0, 0xa8c9, 0x129f, 0xd3c5, 0x1, 0x1);
        gbc.writeMem(0x74f5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe132);
        EXPECT(gbc.pc(), 0x74f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 02A5
        gbc.setState(0x48ee, 0x401f, 0x6410, 0xdf7f, 0x49a0, 0xf37e, 0x0, 0x0);
        gbc.writeMem(0x48ee, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x401f);
        EXPECT(gbc.pc(), 0x48ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02A6
        gbc.setState(0x7fa8, 0xeac3, 0x8fd0, 0xa444, 0xf05e, 0x1847, 0x1, 0x0);
        gbc.writeMem(0x7fa8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xeac3);
        EXPECT(gbc.pc(), 0x7fa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 02A7
        gbc.setState(0x6bcf, 0xdb0a, 0xfde0, 0x6770, 0x7124, 0x4d6c, 0x1, 0x0);
        gbc.writeMem(0x6bcf, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdb0a);
        EXPECT(gbc.pc(), 0x6bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 02A8
        gbc.setState(0x815b, 0xef8f, 0xd330, 0xb956, 0x5f09, 0x21d7, 0x0, 0x0);
        gbc.writeMem(0x815b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xef8f);
        EXPECT(gbc.pc(), 0x815c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x815b), 0x83);
        // 83 02A9
        gbc.setState(0xc6d4, 0x733a, 0x89f0, 0x37fe, 0x1fdb, 0x8165, 0x1, 0x1);
        gbc.writeMem(0xc6d4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x733a);
        EXPECT(gbc.pc(), 0xc6d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d4), 0x83);
        // 83 02AA
        gbc.setState(0x18bf, 0xe510, 0x4ed0, 0x5de1, 0x5dad, 0x943c, 0x1, 0x1);
        gbc.writeMem(0x18bf, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe510);
        EXPECT(gbc.pc(), 0x18c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 02AB
        gbc.setState(0x3a5b, 0x7096, 0x3760, 0xe4d4, 0xbc6, 0xcec9, 0x1, 0x0);
        gbc.writeMem(0x3a5b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7096);
        EXPECT(gbc.pc(), 0x3a5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02AC
        gbc.setState(0xd293, 0x2ad8, 0xcd00, 0xf416, 0x2c8f, 0xd528, 0x1, 0x1);
        gbc.writeMem(0xd293, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2ad8);
        EXPECT(gbc.pc(), 0xd294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd293), 0x83);
        // 83 02AD
        gbc.setState(0xbb51, 0xc023, 0x6e90, 0x7cf, 0x7166, 0x5865, 0x1, 0x1);
        gbc.writeMem(0xbb51, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc023);
        EXPECT(gbc.pc(), 0xbb52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb51), 0x83);
        // 83 02AE
        gbc.setState(0x3cb9, 0x7f8b, 0xff60, 0xb371, 0x13c0, 0xa6eb, 0x1, 0x1);
        gbc.writeMem(0x3cb9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7f8b);
        EXPECT(gbc.pc(), 0x3cba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02B0
        gbc.setState(0x47b9, 0x2ac3, 0xc570, 0xe9d3, 0x9425, 0x3450, 0x1, 0x0);
        gbc.writeMem(0x47b9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2ac3);
        EXPECT(gbc.pc(), 0x47ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02B1
        gbc.setState(0xca, 0x11e0, 0x44a0, 0x56f5, 0x3717, 0x1d37, 0x1, 0x1);
        gbc.writeMem(0xca, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x11e0);
        EXPECT(gbc.pc(), 0xcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02B2
        gbc.setState(0xd497, 0xf3b0, 0x43c0, 0x73c, 0x8abc, 0xfa25, 0x0, 0x1);
        gbc.writeMem(0xd497, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf3b0);
        EXPECT(gbc.pc(), 0xd498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd497), 0x83);
        // 83 02B3
        gbc.setState(0x5a1, 0x339d, 0x24c0, 0x1ded, 0x9bd5, 0x4dc6, 0x1, 0x1);
        gbc.writeMem(0x5a1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x339d);
        EXPECT(gbc.pc(), 0x5a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02B4
        gbc.setState(0xaa9c, 0xc973, 0xa90, 0xcee2, 0x81b0, 0x43cc, 0x1, 0x0);
        gbc.writeMem(0xaa9c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc973);
        EXPECT(gbc.pc(), 0xaa9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa9c), 0x83);
        // 83 02B5
        gbc.setState(0x3f0a, 0x757d, 0xdae0, 0x75cd, 0x18ac, 0xfaab, 0x1, 0x0);
        gbc.writeMem(0x3f0a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x757d);
        EXPECT(gbc.pc(), 0x3f0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 02B7
        gbc.setState(0xb71e, 0x65d8, 0x7990, 0xe614, 0x4e41, 0x179, 0x0, 0x0);
        gbc.writeMem(0xb71e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x65d8);
        EXPECT(gbc.pc(), 0xb71f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb71e), 0x83);
        // 83 02B8
        gbc.setState(0x2231, 0xf88c, 0xc410, 0x6d0f, 0x55c, 0xa35, 0x0, 0x1);
        gbc.writeMem(0x2231, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf88c);
        EXPECT(gbc.pc(), 0x2232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 02B9
        gbc.setState(0xe4a, 0x7cc7, 0x3e0, 0xe805, 0x6d46, 0xc17c, 0x1, 0x0);
        gbc.writeMem(0xe4a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7cc7);
        EXPECT(gbc.pc(), 0xe4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02BA
        gbc.setState(0xa35a, 0x9795, 0xd700, 0x9966, 0xd69a, 0x9e19, 0x1, 0x0);
        gbc.writeMem(0xa35a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9795);
        EXPECT(gbc.pc(), 0xa35b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa35a), 0x83);
        // 83 02BB
        gbc.setState(0x49cc, 0x6c1a, 0x96c0, 0x57b7, 0xabf6, 0xf25d, 0x0, 0x1);
        gbc.writeMem(0x49cc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6c1a);
        EXPECT(gbc.pc(), 0x49cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02BC
        gbc.setState(0x5a8, 0xb82, 0x6080, 0x5f1c, 0x79ac, 0x816, 0x1, 0x1);
        gbc.writeMem(0x5a8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb82);
        EXPECT(gbc.pc(), 0x5a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02BD
        gbc.setState(0x9027, 0x6495, 0xfef0, 0x9896, 0x8e5e, 0x7afc, 0x0, 0x0);
        gbc.writeMem(0x9027, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6495);
        EXPECT(gbc.pc(), 0x9028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9027), 0x83);
        // 83 02BE
        gbc.setState(0xdd09, 0xb8e3, 0xdfb0, 0x9ebe, 0xf762, 0xa3c3, 0x1, 0x1);
        gbc.writeMem(0xdd09, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb8e3);
        EXPECT(gbc.pc(), 0xdd0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd09), 0x83);
        // 83 02BF
        gbc.setState(0x96a3, 0x17f2, 0x1f80, 0x3e1a, 0xe293, 0x71ad, 0x1, 0x1);
        gbc.writeMem(0x96a3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x17f2);
        EXPECT(gbc.pc(), 0x96a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a3), 0x83);
        // 83 02C0
        gbc.setState(0x3ca5, 0xec9a, 0xbbd0, 0x8951, 0xeb40, 0x39f8, 0x0, 0x0);
        gbc.writeMem(0x3ca5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xec9a);
        EXPECT(gbc.pc(), 0x3ca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02C1
        gbc.setState(0x4818, 0x2d2b, 0xee80, 0xff4e, 0xee64, 0x4829, 0x1, 0x1);
        gbc.writeMem(0x4818, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2d2b);
        EXPECT(gbc.pc(), 0x4819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 02C2
        gbc.setState(0x91ab, 0x603c, 0xc000, 0xf3ce, 0xc62a, 0x1c7f, 0x1, 0x0);
        gbc.writeMem(0x91ab, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x603c);
        EXPECT(gbc.pc(), 0x91ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ab), 0x83);
        // 83 02C3
        gbc.setState(0x2d64, 0x2638, 0x5cf0, 0xa204, 0xe1a6, 0x14f7, 0x0, 0x0);
        gbc.writeMem(0x2d64, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2638);
        EXPECT(gbc.pc(), 0x2d65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 02C4
        gbc.setState(0x7c7b, 0xfded, 0x43c0, 0x97cc, 0x3589, 0x26c7, 0x1, 0x1);
        gbc.writeMem(0x7c7b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xfded);
        EXPECT(gbc.pc(), 0x7c7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02C5
        gbc.setState(0x6225, 0xb513, 0x8510, 0x7f28, 0xa98f, 0xfd33, 0x0, 0x1);
        gbc.writeMem(0x6225, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb513);
        EXPECT(gbc.pc(), 0x6226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 02C6
        gbc.setState(0xef77, 0x3ead, 0x2090, 0x862d, 0x8046, 0x79e7, 0x1, 0x0);
        gbc.writeMem(0xef77, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3ead);
        EXPECT(gbc.pc(), 0xef78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef77), 0x83);
        // 83 02C7
        gbc.setState(0x41d7, 0x7826, 0x9940, 0xa2e4, 0x911c, 0x4ee2, 0x0, 0x1);
        gbc.writeMem(0x41d7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7826);
        EXPECT(gbc.pc(), 0x41d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 02C8
        gbc.setState(0x314, 0x28bc, 0x2a50, 0x3799, 0x4242, 0x6650, 0x1, 0x0);
        gbc.writeMem(0x314, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x28bc);
        EXPECT(gbc.pc(), 0x315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02CA
        gbc.setState(0xe009, 0x909, 0x2870, 0xc6d8, 0xba75, 0xc044, 0x0, 0x0);
        gbc.writeMem(0xe009, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x909);
        EXPECT(gbc.pc(), 0xe00a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe009), 0x83);
        // 83 02CB
        gbc.setState(0x1a59, 0xec26, 0xad20, 0x9de2, 0xfa10, 0x589d, 0x0, 0x0);
        gbc.writeMem(0x1a59, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xec26);
        EXPECT(gbc.pc(), 0x1a5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02CC
        gbc.setState(0x4637, 0x3bc4, 0xeee0, 0x7691, 0x7489, 0x927d, 0x1, 0x0);
        gbc.writeMem(0x4637, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3bc4);
        EXPECT(gbc.pc(), 0x4638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 02CD
        gbc.setState(0x1b11, 0xf5f, 0x22c0, 0xb2e6, 0xa453, 0x710a, 0x0, 0x1);
        gbc.writeMem(0x1b11, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf5f);
        EXPECT(gbc.pc(), 0x1b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02CE
        gbc.setState(0xd803, 0x46de, 0xe8a0, 0xf87e, 0x200, 0x2c1a, 0x1, 0x1);
        gbc.writeMem(0xd803, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x46de);
        EXPECT(gbc.pc(), 0xd804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd803), 0x83);
        // 83 02CF
        gbc.setState(0x3be5, 0x545f, 0xceb0, 0xa432, 0xd97e, 0x7cdd, 0x1, 0x0);
        gbc.writeMem(0x3be5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x545f);
        EXPECT(gbc.pc(), 0x3be6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 02D0
        gbc.setState(0xfe6, 0x16eb, 0xe1c0, 0xc487, 0x341b, 0xf87e, 0x1, 0x1);
        gbc.writeMem(0xfe6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x16eb);
        EXPECT(gbc.pc(), 0xfe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02D1
        gbc.setState(0x9419, 0xcb7c, 0x2f10, 0x69b7, 0xc74f, 0x29c4, 0x0, 0x0);
        gbc.writeMem(0x9419, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xcb7c);
        EXPECT(gbc.pc(), 0x941a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9419), 0x83);
        // 83 02D2
        gbc.setState(0xea0c, 0x5f3d, 0xb3d0, 0x8758, 0x4500, 0xad24, 0x0, 0x1);
        gbc.writeMem(0xea0c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5f3d);
        EXPECT(gbc.pc(), 0xea0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea0c), 0x83);
        // 83 02D3
        gbc.setState(0xea33, 0x8e38, 0xfa80, 0x1b28, 0xa5bd, 0x47cb, 0x0, 0x0);
        gbc.writeMem(0xea33, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8e38);
        EXPECT(gbc.pc(), 0xea34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea33), 0x83);
        // 83 02D4
        gbc.setState(0xa484, 0x9d84, 0xe980, 0x103f, 0x1562, 0x190d, 0x1, 0x0);
        gbc.writeMem(0xa484, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9d84);
        EXPECT(gbc.pc(), 0xa485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa484), 0x83);
        // 83 02D5
        gbc.setState(0xd9bd, 0x6e2, 0xb1d0, 0xcf4a, 0xf166, 0xaaad, 0x1, 0x1);
        gbc.writeMem(0xd9bd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6e2);
        EXPECT(gbc.pc(), 0xd9be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9bd), 0x83);
        // 83 02D6
        gbc.setState(0x3e22, 0x1729, 0x8ff0, 0xe0bd, 0x8276, 0xb94, 0x1, 0x0);
        gbc.writeMem(0x3e22, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1729);
        EXPECT(gbc.pc(), 0x3e23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 02D7
        gbc.setState(0x40c3, 0xbc92, 0x52a0, 0xeb1b, 0xb562, 0xfd67, 0x0, 0x1);
        gbc.writeMem(0x40c3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbc92);
        EXPECT(gbc.pc(), 0x40c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02D8
        gbc.setState(0xdd97, 0x10da, 0x5bc0, 0x6c06, 0xb75, 0x1d29, 0x1, 0x0);
        gbc.writeMem(0xdd97, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x10da);
        EXPECT(gbc.pc(), 0xdd98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd97), 0x83);
        // 83 02D9
        gbc.setState(0x103, 0x67dc, 0xbb10, 0x84d4, 0x41e3, 0xf293, 0x1, 0x0);
        gbc.writeMem(0x103, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x67dc);
        EXPECT(gbc.pc(), 0x104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02DA
        gbc.setState(0x8ea4, 0x807e, 0x72d0, 0x282b, 0x86e1, 0x4ec, 0x0, 0x0);
        gbc.writeMem(0x8ea4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x807e);
        EXPECT(gbc.pc(), 0x8ea5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea4), 0x83);
        // 83 02DB
        gbc.setState(0x1c03, 0xa19e, 0x8ce0, 0x1624, 0x294, 0xfcdd, 0x0, 0x1);
        gbc.writeMem(0x1c03, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa19e);
        EXPECT(gbc.pc(), 0x1c04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 02DC
        gbc.setState(0x2567, 0x86b0, 0xa0d0, 0x5118, 0xc87, 0xfbbf, 0x1, 0x1);
        gbc.writeMem(0x2567, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x86b0);
        EXPECT(gbc.pc(), 0x2568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02DD
        gbc.setState(0xafe, 0xee7a, 0x3e50, 0xac36, 0xdd94, 0xdc5, 0x0, 0x1);
        gbc.writeMem(0xafe, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xee7a);
        EXPECT(gbc.pc(), 0xaff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 02DE
        gbc.setState(0x6846, 0x67a5, 0x9220, 0x8997, 0x8427, 0x30f8, 0x1, 0x1);
        gbc.writeMem(0x6846, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x67a5);
        EXPECT(gbc.pc(), 0x6847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02DF
        gbc.setState(0x2461, 0x9774, 0xf070, 0xef64, 0x8735, 0xd41a, 0x0, 0x1);
        gbc.writeMem(0x2461, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9774);
        EXPECT(gbc.pc(), 0x2462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02E0
        gbc.setState(0xd38b, 0x29be, 0x5520, 0x9bb5, 0x1807, 0xa989, 0x0, 0x0);
        gbc.writeMem(0xd38b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x29be);
        EXPECT(gbc.pc(), 0xd38c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd38b), 0x83);
        // 83 02E1
        gbc.setState(0xbc06, 0x46c, 0x2550, 0xe9fb, 0x8805, 0x1ac5, 0x1, 0x1);
        gbc.writeMem(0xbc06, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x46c);
        EXPECT(gbc.pc(), 0xbc07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc06), 0x83);
        // 83 02E2
        gbc.setState(0xa148, 0xfc89, 0xd1c0, 0x6b4d, 0x2bdd, 0x7429, 0x0, 0x0);
        gbc.writeMem(0xa148, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xfc89);
        EXPECT(gbc.pc(), 0xa149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa148), 0x83);
        // 83 02E3
        gbc.setState(0x2c8d, 0xa095, 0xdb60, 0xbdca, 0x5fc1, 0x5836, 0x0, 0x0);
        gbc.writeMem(0x2c8d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa095);
        EXPECT(gbc.pc(), 0x2c8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02E4
        gbc.setState(0xb770, 0xfd1e, 0x4170, 0xde1, 0xffe6, 0xcd0e, 0x1, 0x1);
        gbc.writeMem(0xb770, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xfd1e);
        EXPECT(gbc.pc(), 0xb771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb770), 0x83);
        // 83 02E5
        gbc.setState(0xce30, 0xa27f, 0x7060, 0xa47f, 0x6890, 0xad1f, 0x0, 0x1);
        gbc.writeMem(0xce30, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa27f);
        EXPECT(gbc.pc(), 0xce31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce30), 0x83);
        // 83 02E6
        gbc.setState(0x3e08, 0xdb07, 0xaa0, 0x1d97, 0x9e1c, 0xa35d, 0x0, 0x0);
        gbc.writeMem(0x3e08, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xdb07);
        EXPECT(gbc.pc(), 0x3e09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 02E7
        gbc.setState(0x2d8b, 0x1b69, 0xf70, 0x9608, 0xb3bb, 0x3f, 0x1, 0x0);
        gbc.writeMem(0x2d8b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1b69);
        EXPECT(gbc.pc(), 0x2d8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 02E8
        gbc.setState(0x9f94, 0x97a4, 0xab90, 0xc02, 0xb46, 0x606f, 0x1, 0x1);
        gbc.writeMem(0x9f94, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x97a4);
        EXPECT(gbc.pc(), 0x9f95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f94), 0x83);
        // 83 02E9
        gbc.setState(0x7ac0, 0x391f, 0xc3f0, 0x47c, 0x52c3, 0x9ee6, 0x0, 0x0);
        gbc.writeMem(0x7ac0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x391f);
        EXPECT(gbc.pc(), 0x7ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02EA
        gbc.setState(0x6e3f, 0x1b4e, 0xe910, 0xd216, 0x3641, 0x5e7e, 0x0, 0x0);
        gbc.writeMem(0x6e3f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1b4e);
        EXPECT(gbc.pc(), 0x6e40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02EB
        gbc.setState(0xca8f, 0x7090, 0x9250, 0x9cd4, 0xedd1, 0x1372, 0x1, 0x0);
        gbc.writeMem(0xca8f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7090);
        EXPECT(gbc.pc(), 0xca90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8f), 0x83);
        // 83 02EC
        gbc.setState(0x22c8, 0x163d, 0x4570, 0x5513, 0x3ece, 0xa88a, 0x0, 0x0);
        gbc.writeMem(0x22c8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x163d);
        EXPECT(gbc.pc(), 0x22c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 02ED
        gbc.setState(0xbd87, 0x5f94, 0x3700, 0xf305, 0x76a7, 0x101b, 0x1, 0x1);
        gbc.writeMem(0xbd87, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5f94);
        EXPECT(gbc.pc(), 0xbd88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd87), 0x83);
        // 83 02EE
        gbc.setState(0xfc1, 0x9214, 0x2630, 0xc668, 0x5328, 0x670, 0x1, 0x0);
        gbc.writeMem(0xfc1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9214);
        EXPECT(gbc.pc(), 0xfc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 02EF
        gbc.setState(0x9f4d, 0x47f2, 0x4d50, 0xac38, 0x37ea, 0xf5ae, 0x1, 0x0);
        gbc.writeMem(0x9f4d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x47f2);
        EXPECT(gbc.pc(), 0x9f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f4d), 0x83);
        // 83 02F0
        gbc.setState(0xa235, 0x43ee, 0xf870, 0xa37f, 0x418e, 0x11b6, 0x1, 0x1);
        gbc.writeMem(0xa235, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x43ee);
        EXPECT(gbc.pc(), 0xa236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa235), 0x83);
        // 83 02F1
        gbc.setState(0xdf70, 0xd7c3, 0x9a50, 0x54c2, 0x8de0, 0xb8b0, 0x0, 0x1);
        gbc.writeMem(0xdf70, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd7c3);
        EXPECT(gbc.pc(), 0xdf71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf70), 0x83);
        // 83 02F2
        gbc.setState(0x2f70, 0xbcf6, 0xf5b0, 0x6aa0, 0x9c81, 0x7625, 0x1, 0x0);
        gbc.writeMem(0x2f70, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xbcf6);
        EXPECT(gbc.pc(), 0x2f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02F3
        gbc.setState(0xb556, 0x9832, 0x7150, 0x8804, 0xe39a, 0xae4b, 0x1, 0x1);
        gbc.writeMem(0xb556, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9832);
        EXPECT(gbc.pc(), 0xb557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb556), 0x83);
        // 83 02F4
        gbc.setState(0xb342, 0xfeca, 0xde90, 0x980c, 0xe08a, 0x7cb8, 0x1, 0x1);
        gbc.writeMem(0xb342, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xfeca);
        EXPECT(gbc.pc(), 0xb343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb342), 0x83);
        // 83 02F5
        gbc.setState(0xd3b7, 0xfbb, 0xbc50, 0xc999, 0xf87e, 0xc5d, 0x0, 0x0);
        gbc.writeMem(0xd3b7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfbb);
        EXPECT(gbc.pc(), 0xd3b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b7), 0x83);
        // 83 02F6
        gbc.setState(0xc874, 0x1bde, 0xe610, 0xcb9d, 0x3129, 0xef60, 0x1, 0x0);
        gbc.writeMem(0xc874, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1bde);
        EXPECT(gbc.pc(), 0xc875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc874), 0x83);
        // 83 02F7
        gbc.setState(0x4426, 0xc91c, 0x1f40, 0xd15f, 0x152f, 0xca5f, 0x1, 0x0);
        gbc.writeMem(0x4426, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc91c);
        EXPECT(gbc.pc(), 0x4427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 02F8
        gbc.setState(0x989a, 0x52c8, 0xdac0, 0x5494, 0xce62, 0x4a39, 0x0, 0x0);
        gbc.writeMem(0x989a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x52c8);
        EXPECT(gbc.pc(), 0x989b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x989a), 0x83);
        // 83 02F9
        gbc.setState(0x6724, 0x4049, 0xe770, 0x4db7, 0x7e74, 0xa390, 0x0, 0x1);
        gbc.writeMem(0x6724, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4049);
        EXPECT(gbc.pc(), 0x6725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02FA
        gbc.setState(0x7a1e, 0x7cd2, 0xb3e0, 0x1ca9, 0x4cd9, 0xa020, 0x1, 0x1);
        gbc.writeMem(0x7a1e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7cd2);
        EXPECT(gbc.pc(), 0x7a1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02FB
        gbc.setState(0xacb3, 0xbbaa, 0xbc40, 0xe614, 0x663, 0x217e, 0x1, 0x1);
        gbc.writeMem(0xacb3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xbbaa);
        EXPECT(gbc.pc(), 0xacb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacb3), 0x83);
        // 83 02FC
        gbc.setState(0x68fb, 0xeeb9, 0xf100, 0xe975, 0x63ee, 0xd413, 0x0, 0x1);
        gbc.writeMem(0x68fb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xeeb9);
        EXPECT(gbc.pc(), 0x68fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 02FD
        gbc.setState(0x8af4, 0x966, 0xe970, 0xa87, 0xcd11, 0x8a5d, 0x1, 0x1);
        gbc.writeMem(0x8af4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x966);
        EXPECT(gbc.pc(), 0x8af5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af4), 0x83);
        // 83 02FE
        gbc.setState(0x337d, 0x6488, 0xf30, 0x3e87, 0x2f4d, 0x5579, 0x1, 0x1);
        gbc.writeMem(0x337d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6488);
        EXPECT(gbc.pc(), 0x337e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 02FF
        gbc.setState(0x8819, 0xdfd, 0x11b0, 0x52f4, 0xe75, 0x3196, 0x0, 0x1);
        gbc.writeMem(0x8819, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xdfd);
        EXPECT(gbc.pc(), 0x881a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8819), 0x83);
        // 83 0300
        gbc.setState(0x7198, 0x3606, 0x6420, 0xc917, 0xbf2c, 0x3b8c, 0x1, 0x0);
        gbc.writeMem(0x7198, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3606);
        EXPECT(gbc.pc(), 0x7199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0301
        gbc.setState(0x9e29, 0xb125, 0xb100, 0xa87, 0x26c4, 0xa7b2, 0x0, 0x0);
        gbc.writeMem(0x9e29, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb125);
        EXPECT(gbc.pc(), 0x9e2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e29), 0x83);
        // 83 0302
        gbc.setState(0xc6c7, 0x596e, 0x65f0, 0x3ffd, 0x2119, 0xbaa7, 0x0, 0x0);
        gbc.writeMem(0xc6c7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x596e);
        EXPECT(gbc.pc(), 0xc6c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c7), 0x83);
        // 83 0303
        gbc.setState(0x6e59, 0xc2cd, 0x4810, 0xfa02, 0x4cf7, 0xda01, 0x0, 0x1);
        gbc.writeMem(0x6e59, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc2cd);
        EXPECT(gbc.pc(), 0x6e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0304
        gbc.setState(0x7fe, 0xc620, 0x2eb0, 0xc970, 0x7c90, 0x6ab6, 0x0, 0x0);
        gbc.writeMem(0x7fe, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc620);
        EXPECT(gbc.pc(), 0x7ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0305
        gbc.setState(0xbd0, 0xe8b2, 0x1f60, 0x9284, 0x2b2b, 0x8ee2, 0x0, 0x1);
        gbc.writeMem(0xbd0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe8b2);
        EXPECT(gbc.pc(), 0xbd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0306
        gbc.setState(0x9e56, 0x28e2, 0x1fe0, 0x29c6, 0xf928, 0x4f84, 0x0, 0x1);
        gbc.writeMem(0x9e56, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x28e2);
        EXPECT(gbc.pc(), 0x9e57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e56), 0x83);
        // 83 0308
        gbc.setState(0xef09, 0x3ece, 0xfc60, 0x4128, 0x5235, 0xb7bb, 0x0, 0x1);
        gbc.writeMem(0xef09, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3ece);
        EXPECT(gbc.pc(), 0xef0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef09), 0x83);
        // 83 0309
        gbc.setState(0xdb56, 0xb79d, 0xa030, 0x6ebd, 0x386e, 0xb919, 0x0, 0x1);
        gbc.writeMem(0xdb56, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb79d);
        EXPECT(gbc.pc(), 0xdb57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb56), 0x83);
        // 83 030A
        gbc.setState(0xb226, 0xd7be, 0xe850, 0x167d, 0xc88d, 0x7be1, 0x1, 0x0);
        gbc.writeMem(0xb226, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd7be);
        EXPECT(gbc.pc(), 0xb227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb226), 0x83);
        // 83 030B
        gbc.setState(0xb2fa, 0xc416, 0x41d0, 0xa3a2, 0x3e1c, 0xf355, 0x1, 0x1);
        gbc.writeMem(0xb2fa, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc416);
        EXPECT(gbc.pc(), 0xb2fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2fa), 0x83);
        // 83 030C
        gbc.setState(0x7f4b, 0x56be, 0x6be0, 0x4411, 0xe9ec, 0xdbe9, 0x1, 0x0);
        gbc.writeMem(0x7f4b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x56be);
        EXPECT(gbc.pc(), 0x7f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 030D
        gbc.setState(0x592d, 0x8760, 0x2e60, 0x414b, 0x9c5, 0xab59, 0x1, 0x1);
        gbc.writeMem(0x592d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8760);
        EXPECT(gbc.pc(), 0x592e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 030F
        gbc.setState(0x21b8, 0x4c1e, 0xd330, 0x3abe, 0x830e, 0x98ee, 0x0, 0x1);
        gbc.writeMem(0x21b8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4c1e);
        EXPECT(gbc.pc(), 0x21b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0310
        gbc.setState(0xe5aa, 0x98db, 0x6a70, 0x9b86, 0x6bac, 0xd09d, 0x1, 0x0);
        gbc.writeMem(0xe5aa, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x98db);
        EXPECT(gbc.pc(), 0xe5ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5aa), 0x83);
        // 83 0311
        gbc.setState(0x1682, 0x6c93, 0xdd0, 0xde21, 0x3c12, 0xfbd9, 0x1, 0x0);
        gbc.writeMem(0x1682, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6c93);
        EXPECT(gbc.pc(), 0x1683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0312
        gbc.setState(0x24f4, 0x659b, 0x140, 0x11db, 0x4209, 0x668b, 0x0, 0x0);
        gbc.writeMem(0x24f4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x659b);
        EXPECT(gbc.pc(), 0x24f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0313
        gbc.setState(0x3072, 0xe312, 0x9c30, 0xb753, 0x2493, 0x6253, 0x1, 0x0);
        gbc.writeMem(0x3072, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe312);
        EXPECT(gbc.pc(), 0x3073);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0314
        gbc.setState(0xecbd, 0x5ab1, 0x1a80, 0x39ed, 0x11c4, 0x5b55, 0x1, 0x1);
        gbc.writeMem(0xecbd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5ab1);
        EXPECT(gbc.pc(), 0xecbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecbd), 0x83);
        // 83 0315
        gbc.setState(0xec4, 0x313, 0xe4e0, 0x8f09, 0xf4a3, 0x22e, 0x0, 0x1);
        gbc.writeMem(0xec4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x313);
        EXPECT(gbc.pc(), 0xec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0316
        gbc.setState(0x8862, 0xbad1, 0x4420, 0x87c4, 0x9172, 0x4792, 0x1, 0x0);
        gbc.writeMem(0x8862, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbad1);
        EXPECT(gbc.pc(), 0x8863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8862), 0x83);
        // 83 0317
        gbc.setState(0x9226, 0xc8b5, 0x3100, 0x2053, 0xb66c, 0xab56, 0x0, 0x1);
        gbc.writeMem(0x9226, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc8b5);
        EXPECT(gbc.pc(), 0x9227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9226), 0x83);
        // 83 0318
        gbc.setState(0xe005, 0x3fd1, 0x6160, 0x4623, 0xcb3a, 0xa5e2, 0x0, 0x0);
        gbc.writeMem(0xe005, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3fd1);
        EXPECT(gbc.pc(), 0xe006);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe005), 0x83);
        // 83 0319
        gbc.setState(0xc93c, 0xa378, 0x9990, 0xfcd, 0x97c8, 0xf24d, 0x0, 0x1);
        gbc.writeMem(0xc93c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa378);
        EXPECT(gbc.pc(), 0xc93d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc93c), 0x83);
        // 83 031A
        gbc.setState(0x66b4, 0x8733, 0x4550, 0xfb31, 0xa843, 0xf3c7, 0x1, 0x0);
        gbc.writeMem(0x66b4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8733);
        EXPECT(gbc.pc(), 0x66b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 031B
        gbc.setState(0x5f23, 0x74fa, 0x2100, 0xe157, 0xd1bc, 0x868, 0x1, 0x0);
        gbc.writeMem(0x5f23, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x74fa);
        EXPECT(gbc.pc(), 0x5f24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 031C
        gbc.setState(0x7c82, 0x8d68, 0xdba0, 0x9b99, 0xab9d, 0x1b3a, 0x1, 0x0);
        gbc.writeMem(0x7c82, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8d68);
        EXPECT(gbc.pc(), 0x7c83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 031D
        gbc.setState(0x4183, 0x1aeb, 0x5f0, 0x957d, 0x782f, 0xd259, 0x1, 0x1);
        gbc.writeMem(0x4183, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1aeb);
        EXPECT(gbc.pc(), 0x4184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 031E
        gbc.setState(0x6ae2, 0x7bfc, 0x3dc0, 0xd6f6, 0x6f82, 0xc8c2, 0x0, 0x0);
        gbc.writeMem(0x6ae2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7bfc);
        EXPECT(gbc.pc(), 0x6ae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 031F
        gbc.setState(0x3389, 0xd38a, 0x15b0, 0xdd9a, 0x1159, 0xe57b, 0x0, 0x1);
        gbc.writeMem(0x3389, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd38a);
        EXPECT(gbc.pc(), 0x338a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0320
        gbc.setState(0xb708, 0xc8da, 0xe200, 0xd420, 0x2f47, 0xc130, 0x1, 0x0);
        gbc.writeMem(0xb708, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc8da);
        EXPECT(gbc.pc(), 0xb709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb708), 0x83);
        // 83 0321
        gbc.setState(0xc343, 0x8bd5, 0x6c80, 0x7568, 0x6cca, 0x4f0c, 0x1, 0x1);
        gbc.writeMem(0xc343, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8bd5);
        EXPECT(gbc.pc(), 0xc344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc343), 0x83);
        // 83 0322
        gbc.setState(0xaa0, 0x29f8, 0x84e0, 0x68e6, 0x901b, 0x7e0c, 0x1, 0x1);
        gbc.writeMem(0xaa0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x29f8);
        EXPECT(gbc.pc(), 0xaa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0323
        gbc.setState(0x8f27, 0xd6d6, 0x3f00, 0x9388, 0x54e6, 0xc11c, 0x1, 0x0);
        gbc.writeMem(0x8f27, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd6d6);
        EXPECT(gbc.pc(), 0x8f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f27), 0x83);
        // 83 0324
        gbc.setState(0xa663, 0xcba9, 0x1000, 0x32f3, 0xb64e, 0x3f1, 0x0, 0x1);
        gbc.writeMem(0xa663, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xcba9);
        EXPECT(gbc.pc(), 0xa664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa663), 0x83);
        // 83 0325
        gbc.setState(0x108e, 0xe230, 0xbb10, 0x1bb4, 0x47e7, 0x2873, 0x1, 0x1);
        gbc.writeMem(0x108e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe230);
        EXPECT(gbc.pc(), 0x108f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0326
        gbc.setState(0xb24a, 0xf6be, 0x5ed0, 0xea19, 0xcedd, 0xc941, 0x0, 0x0);
        gbc.writeMem(0xb24a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf6be);
        EXPECT(gbc.pc(), 0xb24b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb24a), 0x83);
        // 83 0327
        gbc.setState(0xb59f, 0x2b0e, 0xe500, 0xa65c, 0xeeeb, 0xab25, 0x1, 0x0);
        gbc.writeMem(0xb59f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2b0e);
        EXPECT(gbc.pc(), 0xb5a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb59f), 0x83);
        // 83 0328
        gbc.setState(0x877c, 0xb2be, 0x3010, 0x87f8, 0x665b, 0x6e99, 0x0, 0x1);
        gbc.writeMem(0x877c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb2be);
        EXPECT(gbc.pc(), 0x877d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x877c), 0x83);
        // 83 0329
        gbc.setState(0xc685, 0x391, 0x840, 0xff65, 0x8efb, 0xa054, 0x1, 0x0);
        gbc.writeMem(0xc685, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x391);
        EXPECT(gbc.pc(), 0xc686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc685), 0x83);
        // 83 032A
        gbc.setState(0xd120, 0xaca5, 0xc500, 0xdbfd, 0xbb8, 0x932d, 0x0, 0x0);
        gbc.writeMem(0xd120, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xaca5);
        EXPECT(gbc.pc(), 0xd121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd120), 0x83);
        // 83 032B
        gbc.setState(0x3f36, 0xdb18, 0x66d0, 0xd289, 0xac41, 0x6531, 0x1, 0x0);
        gbc.writeMem(0x3f36, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdb18);
        EXPECT(gbc.pc(), 0x3f37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 032C
        gbc.setState(0x6fdf, 0x7f9c, 0xec60, 0xfd72, 0x6520, 0x5d8e, 0x0, 0x0);
        gbc.writeMem(0x6fdf, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7f9c);
        EXPECT(gbc.pc(), 0x6fe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 032D
        gbc.setState(0xcbdd, 0x91d9, 0x4c40, 0x2d80, 0x849e, 0x65c8, 0x0, 0x1);
        gbc.writeMem(0xcbdd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x91d9);
        EXPECT(gbc.pc(), 0xcbde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbdd), 0x83);
        // 83 032E
        gbc.setState(0x6d82, 0x4ffb, 0xa520, 0xd4f8, 0xbc5, 0xaa11, 0x0, 0x1);
        gbc.writeMem(0x6d82, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4ffb);
        EXPECT(gbc.pc(), 0x6d83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 032F
        gbc.setState(0x1536, 0x42ca, 0x6350, 0xcc2e, 0x951f, 0x13f3, 0x1, 0x0);
        gbc.writeMem(0x1536, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x42ca);
        EXPECT(gbc.pc(), 0x1537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0331
        gbc.setState(0x82bd, 0x8a64, 0x95c0, 0x780a, 0xd0c5, 0xbc99, 0x1, 0x1);
        gbc.writeMem(0x82bd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8a64);
        EXPECT(gbc.pc(), 0x82be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82bd), 0x83);
        // 83 0332
        gbc.setState(0xcd12, 0x70bb, 0xabc0, 0xa164, 0xb2f2, 0x93e9, 0x0, 0x1);
        gbc.writeMem(0xcd12, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x70bb);
        EXPECT(gbc.pc(), 0xcd13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd12), 0x83);
        // 83 0333
        gbc.setState(0xd8f4, 0x7cd9, 0x7350, 0x7e1f, 0x6b9f, 0xda90, 0x1, 0x1);
        gbc.writeMem(0xd8f4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7cd9);
        EXPECT(gbc.pc(), 0xd8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8f4), 0x83);
        // 83 0334
        gbc.setState(0x5434, 0x8fef, 0x4560, 0x2385, 0x732a, 0x2007, 0x1, 0x0);
        gbc.writeMem(0x5434, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8fef);
        EXPECT(gbc.pc(), 0x5435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0335
        gbc.setState(0xa207, 0xba7a, 0x2cb0, 0x4548, 0x16fa, 0x608, 0x0, 0x1);
        gbc.writeMem(0xa207, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xba7a);
        EXPECT(gbc.pc(), 0xa208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa207), 0x83);
        // 83 0336
        gbc.setState(0xedac, 0x914a, 0x8030, 0x4f76, 0x8f21, 0x2944, 0x0, 0x1);
        gbc.writeMem(0xedac, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x914a);
        EXPECT(gbc.pc(), 0xedad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedac), 0x83);
        // 83 0337
        gbc.setState(0xd954, 0x88ee, 0x5200, 0x2352, 0x2998, 0x69b7, 0x1, 0x1);
        gbc.writeMem(0xd954, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x88ee);
        EXPECT(gbc.pc(), 0xd955);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd954), 0x83);
        // 83 0338
        gbc.setState(0xa96b, 0xd1fe, 0x7d20, 0x13e5, 0x791f, 0x261c, 0x0, 0x1);
        gbc.writeMem(0xa96b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd1fe);
        EXPECT(gbc.pc(), 0xa96c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa96b), 0x83);
        // 83 0339
        gbc.setState(0xa4ca, 0x9bd2, 0x5d60, 0x11e4, 0x7aba, 0x8db1, 0x1, 0x1);
        gbc.writeMem(0xa4ca, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9bd2);
        EXPECT(gbc.pc(), 0xa4cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ca), 0x83);
        // 83 033A
        gbc.setState(0x3d48, 0x903c, 0x92a0, 0xf572, 0xe245, 0x89d0, 0x1, 0x0);
        gbc.writeMem(0x3d48, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x903c);
        EXPECT(gbc.pc(), 0x3d49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 033B
        gbc.setState(0x79f5, 0x98b1, 0xd110, 0x840, 0xd7f4, 0x6af5, 0x0, 0x0);
        gbc.writeMem(0x79f5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x98b1);
        EXPECT(gbc.pc(), 0x79f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 033C
        gbc.setState(0x9d6d, 0x9981, 0x13b0, 0x55ae, 0x5c83, 0x6b63, 0x1, 0x1);
        gbc.writeMem(0x9d6d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9981);
        EXPECT(gbc.pc(), 0x9d6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d6d), 0x83);
        // 83 033D
        gbc.setState(0x59c, 0x2bcb, 0xdc30, 0x3f7e, 0x8f81, 0xb549, 0x0, 0x0);
        gbc.writeMem(0x59c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2bcb);
        EXPECT(gbc.pc(), 0x59d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 033E
        gbc.setState(0xd2d8, 0x8f53, 0x15c0, 0x54b2, 0xb7a2, 0x9098, 0x1, 0x0);
        gbc.writeMem(0xd2d8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8f53);
        EXPECT(gbc.pc(), 0xd2d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d8), 0x83);
        // 83 033F
        gbc.setState(0x1c93, 0x6bc, 0xc0b0, 0x17cf, 0x36cb, 0xb671, 0x1, 0x1);
        gbc.writeMem(0x1c93, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6bc);
        EXPECT(gbc.pc(), 0x1c94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0340
        gbc.setState(0xb98, 0x3105, 0xfa70, 0x51d3, 0x2c47, 0x97c2, 0x1, 0x1);
        gbc.writeMem(0xb98, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3105);
        EXPECT(gbc.pc(), 0xb99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0341
        gbc.setState(0x68ce, 0x756a, 0xb8c0, 0xd346, 0x7fe3, 0x7190, 0x0, 0x1);
        gbc.writeMem(0x68ce, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x756a);
        EXPECT(gbc.pc(), 0x68cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0342
        gbc.setState(0xb386, 0xed8d, 0xba00, 0x6e8d, 0xcebd, 0xdadc, 0x0, 0x0);
        gbc.writeMem(0xb386, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xed8d);
        EXPECT(gbc.pc(), 0xb387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb386), 0x83);
        // 83 0343
        gbc.setState(0xa664, 0xdf39, 0x7ab0, 0xb5bb, 0xd791, 0x9cfb, 0x0, 0x0);
        gbc.writeMem(0xa664, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xdf39);
        EXPECT(gbc.pc(), 0xa665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa664), 0x83);
        // 83 0344
        gbc.setState(0x27d2, 0x8220, 0x2410, 0x5210, 0xe90a, 0x28fb, 0x0, 0x0);
        gbc.writeMem(0x27d2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8220);
        EXPECT(gbc.pc(), 0x27d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0345
        gbc.setState(0xb50d, 0x84b3, 0x2b30, 0xc1bb, 0x37fc, 0x600a, 0x0, 0x1);
        gbc.writeMem(0xb50d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x84b3);
        EXPECT(gbc.pc(), 0xb50e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb50d), 0x83);
        // 83 0346
        gbc.setState(0xe8, 0xc877, 0x4330, 0xc7e2, 0x1973, 0x8927, 0x1, 0x0);
        gbc.writeMem(0xe8, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xc877);
        EXPECT(gbc.pc(), 0xe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0347
        gbc.setState(0xb407, 0x6859, 0x41c0, 0x8361, 0x1da1, 0xd05b, 0x1, 0x0);
        gbc.writeMem(0xb407, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6859);
        EXPECT(gbc.pc(), 0xb408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb407), 0x83);
        // 83 0348
        gbc.setState(0x159f, 0x8a27, 0x7b0, 0xdeda, 0xa73c, 0xe6db, 0x0, 0x1);
        gbc.writeMem(0x159f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8a27);
        EXPECT(gbc.pc(), 0x15a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 034A
        gbc.setState(0x386f, 0x82e4, 0x6690, 0x98dc, 0x21fa, 0x3718, 0x0, 0x0);
        gbc.writeMem(0x386f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x82e4);
        EXPECT(gbc.pc(), 0x3870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 034B
        gbc.setState(0x3e1f, 0x14d8, 0x7b10, 0x61c3, 0x407d, 0x87eb, 0x0, 0x1);
        gbc.writeMem(0x3e1f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x14d8);
        EXPECT(gbc.pc(), 0x3e20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 034C
        gbc.setState(0xe83c, 0x1005, 0xf260, 0x7088, 0xd2eb, 0x692d, 0x0, 0x0);
        gbc.writeMem(0xe83c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1005);
        EXPECT(gbc.pc(), 0xe83d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe83c), 0x83);
        // 83 034D
        gbc.setState(0x418c, 0x2324, 0xe5c0, 0xc1ec, 0xc687, 0x2b63, 0x1, 0x1);
        gbc.writeMem(0x418c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2324);
        EXPECT(gbc.pc(), 0x418d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 034E
        gbc.setState(0x1e57, 0x656d, 0xb0a0, 0xbb95, 0xd705, 0x3508, 0x0, 0x1);
        gbc.writeMem(0x1e57, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x656d);
        EXPECT(gbc.pc(), 0x1e58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0350
        gbc.setState(0xbad6, 0xf9b1, 0xf0c0, 0xadfc, 0x62cc, 0xec2, 0x1, 0x1);
        gbc.writeMem(0xbad6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf9b1);
        EXPECT(gbc.pc(), 0xbad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad6), 0x83);
        // 83 0351
        gbc.setState(0x709b, 0xe45b, 0x290, 0xfc36, 0x9eeb, 0x2b3, 0x0, 0x0);
        gbc.writeMem(0x709b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe45b);
        EXPECT(gbc.pc(), 0x709c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0352
        gbc.setState(0xb3e3, 0x8d7d, 0x16e0, 0x9db6, 0x9402, 0xc67, 0x0, 0x1);
        gbc.writeMem(0xb3e3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8d7d);
        EXPECT(gbc.pc(), 0xb3e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3e3), 0x83);
        // 83 0353
        gbc.setState(0x6a81, 0xe5fb, 0x6010, 0x6091, 0xc780, 0x54c0, 0x1, 0x1);
        gbc.writeMem(0x6a81, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe5fb);
        EXPECT(gbc.pc(), 0x6a82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0355
        gbc.setState(0xaedb, 0x1f28, 0xb240, 0xe827, 0x2c8, 0xb0c, 0x1, 0x1);
        gbc.writeMem(0xaedb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1f28);
        EXPECT(gbc.pc(), 0xaedc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaedb), 0x83);
        // 83 0356
        gbc.setState(0x7821, 0xd766, 0xb550, 0x9f9a, 0x820c, 0xc2b5, 0x1, 0x0);
        gbc.writeMem(0x7821, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd766);
        EXPECT(gbc.pc(), 0x7822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0357
        gbc.setState(0x1f34, 0x4485, 0x1600, 0x825, 0xd9f1, 0x705d, 0x1, 0x0);
        gbc.writeMem(0x1f34, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4485);
        EXPECT(gbc.pc(), 0x1f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0358
        gbc.setState(0xe945, 0x98ea, 0xcf10, 0x32c1, 0x18a, 0xe4d9, 0x1, 0x1);
        gbc.writeMem(0xe945, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x98ea);
        EXPECT(gbc.pc(), 0xe946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe945), 0x83);
        // 83 0359
        gbc.setState(0xd3ae, 0x8f85, 0x50a0, 0x14c9, 0xc786, 0x47b, 0x1, 0x0);
        gbc.writeMem(0xd3ae, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8f85);
        EXPECT(gbc.pc(), 0xd3af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ae), 0x83);
        // 83 035A
        gbc.setState(0x4bd5, 0xd146, 0x7ca0, 0x789b, 0x8aa, 0xf540, 0x1, 0x1);
        gbc.writeMem(0x4bd5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd146);
        EXPECT(gbc.pc(), 0x4bd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 035B
        gbc.setState(0x55aa, 0xb507, 0xeb30, 0x8432, 0x2aa5, 0xa75d, 0x1, 0x1);
        gbc.writeMem(0x55aa, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb507);
        EXPECT(gbc.pc(), 0x55ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 035C
        gbc.setState(0x3fd2, 0x2294, 0x5110, 0x29c8, 0x91e2, 0x9f30, 0x0, 0x1);
        gbc.writeMem(0x3fd2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2294);
        EXPECT(gbc.pc(), 0x3fd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 035D
        gbc.setState(0xbe07, 0x4f24, 0x7bd0, 0x3c8, 0xe428, 0x8bbe, 0x0, 0x0);
        gbc.writeMem(0xbe07, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4f24);
        EXPECT(gbc.pc(), 0xbe08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe07), 0x83);
        // 83 035E
        gbc.setState(0x73c4, 0x2a8a, 0xdd00, 0x1d20, 0x99ab, 0xcbe1, 0x1, 0x0);
        gbc.writeMem(0x73c4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2a8a);
        EXPECT(gbc.pc(), 0x73c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 035F
        gbc.setState(0xedbb, 0xf5cc, 0xcd90, 0x60a8, 0xdab9, 0xccaf, 0x1, 0x0);
        gbc.writeMem(0xedbb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf5cc);
        EXPECT(gbc.pc(), 0xedbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedbb), 0x83);
        // 83 0360
        gbc.setState(0x6c86, 0x3d39, 0x8b10, 0x2cb4, 0xc332, 0x908f, 0x1, 0x1);
        gbc.writeMem(0x6c86, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3d39);
        EXPECT(gbc.pc(), 0x6c87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0361
        gbc.setState(0xe907, 0xe4, 0x6f30, 0x4aca, 0x815f, 0xdd03, 0x0, 0x0);
        gbc.writeMem(0xe907, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe4);
        EXPECT(gbc.pc(), 0xe908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe907), 0x83);
        // 83 0362
        gbc.setState(0x1186, 0xfab3, 0x3f50, 0x23cd, 0x4f32, 0xf84f, 0x1, 0x0);
        gbc.writeMem(0x1186, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xfab3);
        EXPECT(gbc.pc(), 0x1187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0363
        gbc.setState(0x39f3, 0x2778, 0x4640, 0x4fbc, 0xae00, 0x9692, 0x1, 0x0);
        gbc.writeMem(0x39f3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2778);
        EXPECT(gbc.pc(), 0x39f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0364
        gbc.setState(0xd360, 0x67ef, 0xa20, 0x1a06, 0xa613, 0x269c, 0x1, 0x0);
        gbc.writeMem(0xd360, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x67ef);
        EXPECT(gbc.pc(), 0xd361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd360), 0x83);
        // 83 0365
        gbc.setState(0x993e, 0x618f, 0x93f0, 0x13da, 0x8992, 0x2492, 0x0, 0x0);
        gbc.writeMem(0x993e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x618f);
        EXPECT(gbc.pc(), 0x993f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x993e), 0x83);
        // 83 0366
        gbc.setState(0xa1a9, 0xd9c6, 0xeee0, 0xcfae, 0x107a, 0x5d, 0x0, 0x0);
        gbc.writeMem(0xa1a9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd9c6);
        EXPECT(gbc.pc(), 0xa1aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a9), 0x83);
        // 83 0367
        gbc.setState(0x3a0c, 0x7386, 0xe560, 0x968a, 0x28f8, 0x5ca4, 0x0, 0x0);
        gbc.writeMem(0x3a0c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7386);
        EXPECT(gbc.pc(), 0x3a0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0368
        gbc.setState(0xd61f, 0xd228, 0xeaa0, 0x17b1, 0x52a7, 0x96ef, 0x1, 0x1);
        gbc.writeMem(0xd61f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd228);
        EXPECT(gbc.pc(), 0xd620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd61f), 0x83);
        // 83 0369
        gbc.setState(0x91e4, 0x5782, 0x5da0, 0x2587, 0x9c82, 0xa14e, 0x1, 0x1);
        gbc.writeMem(0x91e4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5782);
        EXPECT(gbc.pc(), 0x91e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91e4), 0x83);
        // 83 036A
        gbc.setState(0xc81, 0xb1f6, 0xc0e0, 0x234b, 0xd66b, 0xe64c, 0x1, 0x0);
        gbc.writeMem(0xc81, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb1f6);
        EXPECT(gbc.pc(), 0xc82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 036B
        gbc.setState(0xa2fe, 0xc1b, 0xe300, 0xdc5, 0xfa45, 0xad1d, 0x1, 0x0);
        gbc.writeMem(0xa2fe, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc1b);
        EXPECT(gbc.pc(), 0xa2ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2fe), 0x83);
        // 83 036C
        gbc.setState(0xc7bb, 0x1b4c, 0xf270, 0xab70, 0x8a04, 0x359c, 0x0, 0x0);
        gbc.writeMem(0xc7bb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1b4c);
        EXPECT(gbc.pc(), 0xc7bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7bb), 0x83);
        // 83 036D
        gbc.setState(0x5928, 0xfca1, 0x2c40, 0x52c3, 0xb88c, 0x1e60, 0x1, 0x1);
        gbc.writeMem(0x5928, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfca1);
        EXPECT(gbc.pc(), 0x5929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 036E
        gbc.setState(0xacb7, 0xda35, 0x9b40, 0xe8, 0x8be9, 0x925c, 0x0, 0x0);
        gbc.writeMem(0xacb7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xda35);
        EXPECT(gbc.pc(), 0xacb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacb7), 0x83);
        // 83 036F
        gbc.setState(0x3919, 0x536, 0xfc40, 0x42ab, 0x4a56, 0xc6ef, 0x1, 0x0);
        gbc.writeMem(0x3919, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x536);
        EXPECT(gbc.pc(), 0x391a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0370
        gbc.setState(0xddb4, 0xbaa1, 0x8ed0, 0x2824, 0xd854, 0x1cfb, 0x0, 0x0);
        gbc.writeMem(0xddb4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbaa1);
        EXPECT(gbc.pc(), 0xddb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddb4), 0x83);
        // 83 0371
        gbc.setState(0x6ff, 0x745e, 0x920, 0xc2d7, 0xb8ec, 0xdc9c, 0x1, 0x1);
        gbc.writeMem(0x6ff, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x745e);
        EXPECT(gbc.pc(), 0x700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0372
        gbc.setState(0x4dd0, 0xd548, 0xe460, 0x6282, 0xa272, 0x4e99, 0x0, 0x1);
        gbc.writeMem(0x4dd0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd548);
        EXPECT(gbc.pc(), 0x4dd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0373
        gbc.setState(0xab0d, 0xb7da, 0x28b0, 0xeb15, 0xe83f, 0x1f76, 0x0, 0x1);
        gbc.writeMem(0xab0d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb7da);
        EXPECT(gbc.pc(), 0xab0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab0d), 0x83);
        // 83 0374
        gbc.setState(0xe7b7, 0x2ff8, 0x8760, 0x4111, 0xf298, 0x7f51, 0x1, 0x0);
        gbc.writeMem(0xe7b7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2ff8);
        EXPECT(gbc.pc(), 0xe7b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7b7), 0x83);
        // 83 0375
        gbc.setState(0xce3c, 0x3848, 0xfe90, 0xfe20, 0x71a0, 0xf87c, 0x0, 0x1);
        gbc.writeMem(0xce3c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3848);
        EXPECT(gbc.pc(), 0xce3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce3c), 0x83);
        // 83 0376
        gbc.setState(0x3d33, 0x78a8, 0x2c40, 0x661, 0xa915, 0xe3ae, 0x1, 0x0);
        gbc.writeMem(0x3d33, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x78a8);
        EXPECT(gbc.pc(), 0x3d34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0378
        gbc.setState(0xa2bd, 0xef9d, 0x1af0, 0x2a31, 0x67b4, 0xe153, 0x0, 0x1);
        gbc.writeMem(0xa2bd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xef9d);
        EXPECT(gbc.pc(), 0xa2be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2bd), 0x83);
        // 83 037A
        gbc.setState(0x5fd6, 0x819a, 0x230, 0x19fc, 0xd89b, 0xf7b9, 0x0, 0x1);
        gbc.writeMem(0x5fd6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x819a);
        EXPECT(gbc.pc(), 0x5fd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 037B
        gbc.setState(0x490, 0x8ba9, 0x4c90, 0x6d7, 0x581, 0xd621, 0x0, 0x1);
        gbc.writeMem(0x490, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8ba9);
        EXPECT(gbc.pc(), 0x491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 037C
        gbc.setState(0x30c2, 0x4335, 0x1aa0, 0xbd4c, 0x1c8c, 0x514d, 0x0, 0x1);
        gbc.writeMem(0x30c2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4335);
        EXPECT(gbc.pc(), 0x30c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 037D
        gbc.setState(0xd8d4, 0x9270, 0x6ef0, 0x5e49, 0x1be, 0x3f81, 0x1, 0x0);
        gbc.writeMem(0xd8d4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9270);
        EXPECT(gbc.pc(), 0xd8d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d4), 0x83);
        // 83 037F
        gbc.setState(0xe6cf, 0xe4e5, 0x22a0, 0xba0a, 0x8a4d, 0x8f90, 0x0, 0x1);
        gbc.writeMem(0xe6cf, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe4e5);
        EXPECT(gbc.pc(), 0xe6d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6cf), 0x83);
        // 83 0380
        gbc.setState(0x6df1, 0x8688, 0xe520, 0x8ded, 0x71ee, 0x675a, 0x0, 0x1);
        gbc.writeMem(0x6df1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8688);
        EXPECT(gbc.pc(), 0x6df2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0381
        gbc.setState(0xdb48, 0x6b7e, 0xe3e0, 0xd210, 0x60ba, 0x3224, 0x0, 0x1);
        gbc.writeMem(0xdb48, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6b7e);
        EXPECT(gbc.pc(), 0xdb49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb48), 0x83);
        // 83 0383
        gbc.setState(0x8ccf, 0x1853, 0x3fc0, 0xb544, 0xa764, 0xe339, 0x0, 0x0);
        gbc.writeMem(0x8ccf, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1853);
        EXPECT(gbc.pc(), 0x8cd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ccf), 0x83);
        // 83 0384
        gbc.setState(0x8d6, 0xd4fd, 0xdb20, 0x5e9f, 0x8e0d, 0xe601, 0x0, 0x0);
        gbc.writeMem(0x8d6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd4fd);
        EXPECT(gbc.pc(), 0x8d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0385
        gbc.setState(0x7382, 0xddfa, 0x2c0, 0xf314, 0xd74, 0x432b, 0x1, 0x1);
        gbc.writeMem(0x7382, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xddfa);
        EXPECT(gbc.pc(), 0x7383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0386
        gbc.setState(0x9f12, 0xb7af, 0xf800, 0xdf4a, 0xa2d3, 0xa64a, 0x0, 0x1);
        gbc.writeMem(0x9f12, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb7af);
        EXPECT(gbc.pc(), 0x9f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f12), 0x83);
        // 83 0387
        gbc.setState(0x1fb2, 0x1f2, 0xfc10, 0x919c, 0x8460, 0xb215, 0x0, 0x1);
        gbc.writeMem(0x1fb2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1f2);
        EXPECT(gbc.pc(), 0x1fb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0388
        gbc.setState(0x24b9, 0xbb27, 0x5340, 0xa655, 0x6bce, 0xcf2c, 0x0, 0x1);
        gbc.writeMem(0x24b9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbb27);
        EXPECT(gbc.pc(), 0x24ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0389
        gbc.setState(0x3fc6, 0x38c0, 0xab20, 0x1e6c, 0x5913, 0xe40c, 0x0, 0x0);
        gbc.writeMem(0x3fc6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x38c0);
        EXPECT(gbc.pc(), 0x3fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 038A
        gbc.setState(0xa5a3, 0xaf26, 0x42c0, 0x592f, 0xcdff, 0x7ca0, 0x0, 0x1);
        gbc.writeMem(0xa5a3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xaf26);
        EXPECT(gbc.pc(), 0xa5a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5a3), 0x83);
        // 83 038B
        gbc.setState(0x9e2, 0xfd8, 0x73b0, 0x23d6, 0xd310, 0xf089, 0x0, 0x1);
        gbc.writeMem(0x9e2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfd8);
        EXPECT(gbc.pc(), 0x9e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 038C
        gbc.setState(0xa5e6, 0x9234, 0x4d40, 0xe1dd, 0x476f, 0x42fa, 0x0, 0x0);
        gbc.writeMem(0xa5e6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9234);
        EXPECT(gbc.pc(), 0xa5e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e6), 0x83);
        // 83 038D
        gbc.setState(0x573d, 0xa091, 0xd820, 0x9978, 0x72de, 0x5272, 0x1, 0x0);
        gbc.writeMem(0x573d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa091);
        EXPECT(gbc.pc(), 0x573e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 038E
        gbc.setState(0xc007, 0xd09, 0x6f70, 0x851e, 0x2b6a, 0x7b04, 0x1, 0x1);
        gbc.writeMem(0xc007, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd09);
        EXPECT(gbc.pc(), 0xc008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc007), 0x83);
        // 83 038F
        gbc.setState(0x8a78, 0x5985, 0xbb30, 0x4f7, 0xbf13, 0x2ea9, 0x1, 0x0);
        gbc.writeMem(0x8a78, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5985);
        EXPECT(gbc.pc(), 0x8a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a78), 0x83);
        // 83 0390
        gbc.setState(0x3dd, 0x3a46, 0x6740, 0x4ff5, 0x297d, 0xd680, 0x1, 0x0);
        gbc.writeMem(0x3dd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3a46);
        EXPECT(gbc.pc(), 0x3de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0391
        gbc.setState(0xd5dc, 0x5368, 0xcbd0, 0xba59, 0x4790, 0x2741, 0x0, 0x1);
        gbc.writeMem(0xd5dc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5368);
        EXPECT(gbc.pc(), 0xd5dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5dc), 0x83);
        // 83 0392
        gbc.setState(0x1049, 0xb48a, 0xb1e0, 0xf5d9, 0xada2, 0x6a99, 0x0, 0x0);
        gbc.writeMem(0x1049, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb48a);
        EXPECT(gbc.pc(), 0x104a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 0393
        gbc.setState(0x5f6e, 0xc39e, 0x1190, 0x7a54, 0x8a62, 0x24bf, 0x0, 0x0);
        gbc.writeMem(0x5f6e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc39e);
        EXPECT(gbc.pc(), 0x5f6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0394
        gbc.setState(0x33f4, 0x8c74, 0x8b70, 0xd91b, 0xd652, 0xbf07, 0x0, 0x0);
        gbc.writeMem(0x33f4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8c74);
        EXPECT(gbc.pc(), 0x33f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0395
        gbc.setState(0xe332, 0x920a, 0x9e60, 0x9f63, 0xaa10, 0xe25b, 0x0, 0x0);
        gbc.writeMem(0xe332, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x920a);
        EXPECT(gbc.pc(), 0xe333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe332), 0x83);
        // 83 0396
        gbc.setState(0x576b, 0xc8b1, 0xcb90, 0x9c7, 0x59e7, 0x268f, 0x0, 0x0);
        gbc.writeMem(0x576b, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc8b1);
        EXPECT(gbc.pc(), 0x576c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 0397
        gbc.setState(0xbda, 0xa746, 0x3770, 0xc3b3, 0xa9a1, 0x5cbd, 0x0, 0x1);
        gbc.writeMem(0xbda, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa746);
        EXPECT(gbc.pc(), 0xbdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 0398
        gbc.setState(0x32a2, 0xd6d9, 0x25a0, 0xde9f, 0x657d, 0x30e6, 0x1, 0x1);
        gbc.writeMem(0x32a2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd6d9);
        EXPECT(gbc.pc(), 0x32a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 0399
        gbc.setState(0x7ca7, 0x2599, 0x6240, 0xe129, 0x530e, 0xe622, 0x0, 0x1);
        gbc.writeMem(0x7ca7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2599);
        EXPECT(gbc.pc(), 0x7ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 039A
        gbc.setState(0xa70a, 0xa5b4, 0x5da0, 0x820c, 0x45fb, 0x293, 0x0, 0x1);
        gbc.writeMem(0xa70a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa5b4);
        EXPECT(gbc.pc(), 0xa70b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa70a), 0x83);
        // 83 039B
        gbc.setState(0xd374, 0x2091, 0xbd80, 0x90d9, 0x2a4c, 0x4966, 0x1, 0x0);
        gbc.writeMem(0xd374, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2091);
        EXPECT(gbc.pc(), 0xd375);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd374), 0x83);
        // 83 039C
        gbc.setState(0xe53d, 0xf3dc, 0x3610, 0x6aff, 0x5021, 0xc8e5, 0x1, 0x1);
        gbc.writeMem(0xe53d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf3dc);
        EXPECT(gbc.pc(), 0xe53e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe53d), 0x83);
        // 83 039D
        gbc.setState(0x2ac4, 0x95ee, 0x2010, 0x36d, 0xe931, 0x2adf, 0x0, 0x0);
        gbc.writeMem(0x2ac4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x95ee);
        EXPECT(gbc.pc(), 0x2ac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 039E
        gbc.setState(0xcfbc, 0x11de, 0x44c0, 0x9f1a, 0xef0e, 0x4914, 0x0, 0x1);
        gbc.writeMem(0xcfbc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x11de);
        EXPECT(gbc.pc(), 0xcfbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfbc), 0x83);
        // 83 039F
        gbc.setState(0x2403, 0x5254, 0xc750, 0xc2c1, 0xb1ee, 0xfbae, 0x1, 0x0);
        gbc.writeMem(0x2403, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5254);
        EXPECT(gbc.pc(), 0x2404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03A0
        gbc.setState(0x4bcc, 0xb01c, 0x250, 0x81cf, 0x4609, 0x99ec, 0x1, 0x0);
        gbc.writeMem(0x4bcc, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb01c);
        EXPECT(gbc.pc(), 0x4bcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 03A1
        gbc.setState(0x48f, 0xca84, 0xe980, 0x9a4, 0x9db7, 0xbfa2, 0x1, 0x1);
        gbc.writeMem(0x48f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xca84);
        EXPECT(gbc.pc(), 0x490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03A3
        gbc.setState(0x8d78, 0xa9cc, 0x7750, 0x78c3, 0x36b8, 0xbdf, 0x1, 0x1);
        gbc.writeMem(0x8d78, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa9cc);
        EXPECT(gbc.pc(), 0x8d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d78), 0x83);
        // 83 03A4
        gbc.setState(0x5e0c, 0x4b57, 0xcee0, 0xb9d5, 0x793f, 0x742c, 0x0, 0x0);
        gbc.writeMem(0x5e0c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4b57);
        EXPECT(gbc.pc(), 0x5e0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03A5
        gbc.setState(0xbdf2, 0xb0cd, 0xcc50, 0xbf98, 0x6b27, 0x99bc, 0x0, 0x0);
        gbc.writeMem(0xbdf2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb0cd);
        EXPECT(gbc.pc(), 0xbdf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdf2), 0x83);
        // 83 03A6
        gbc.setState(0x4a7f, 0x9782, 0x9d60, 0xd171, 0x1cfc, 0x572a, 0x1, 0x0);
        gbc.writeMem(0x4a7f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9782);
        EXPECT(gbc.pc(), 0x4a80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03A7
        gbc.setState(0xb207, 0xa809, 0xd860, 0xb680, 0x4737, 0xf40, 0x1, 0x0);
        gbc.writeMem(0xb207, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa809);
        EXPECT(gbc.pc(), 0xb208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb207), 0x83);
        // 83 03A8
        gbc.setState(0x5a50, 0xa44e, 0xdb70, 0x42c4, 0xc4e4, 0x457a, 0x0, 0x1);
        gbc.writeMem(0x5a50, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa44e);
        EXPECT(gbc.pc(), 0x5a51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 03A9
        gbc.setState(0x12a0, 0x97c7, 0x3350, 0xaffb, 0x985c, 0x527d, 0x1, 0x1);
        gbc.writeMem(0x12a0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x97c7);
        EXPECT(gbc.pc(), 0x12a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 03AA
        gbc.setState(0x6152, 0xf74e, 0xcff0, 0x45c, 0x2bee, 0x73d, 0x0, 0x1);
        gbc.writeMem(0x6152, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf74e);
        EXPECT(gbc.pc(), 0x6153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03AB
        gbc.setState(0x8189, 0x1b60, 0x1860, 0x2f15, 0x694b, 0x5ea3, 0x1, 0x1);
        gbc.writeMem(0x8189, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1b60);
        EXPECT(gbc.pc(), 0x818a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8189), 0x83);
        // 83 03AC
        gbc.setState(0xcc44, 0x65c9, 0x1fe0, 0x1753, 0x2cf9, 0xadbe, 0x0, 0x1);
        gbc.writeMem(0xcc44, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x65c9);
        EXPECT(gbc.pc(), 0xcc45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc44), 0x83);
        // 83 03AD
        gbc.setState(0x4f12, 0x2f6b, 0x5970, 0x6670, 0xdb0b, 0xe297, 0x1, 0x0);
        gbc.writeMem(0x4f12, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2f6b);
        EXPECT(gbc.pc(), 0x4f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 03AE
        gbc.setState(0x9c0c, 0xe626, 0x3880, 0x6a95, 0x8cbf, 0x21ef, 0x0, 0x1);
        gbc.writeMem(0x9c0c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe626);
        EXPECT(gbc.pc(), 0x9c0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c0c), 0x83);
        // 83 03AF
        gbc.setState(0xa1fe, 0x31f, 0x1d20, 0xaa4a, 0x33bf, 0xa23a, 0x1, 0x0);
        gbc.writeMem(0xa1fe, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x31f);
        EXPECT(gbc.pc(), 0xa1ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1fe), 0x83);
        // 83 03B0
        gbc.setState(0xb527, 0x1732, 0x36f0, 0x3dfc, 0x285b, 0xe740, 0x0, 0x0);
        gbc.writeMem(0xb527, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1732);
        EXPECT(gbc.pc(), 0xb528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb527), 0x83);
        // 83 03B1
        gbc.setState(0x1f42, 0x3c29, 0x6f90, 0x1da2, 0x3f5a, 0xf1e1, 0x1, 0x0);
        gbc.writeMem(0x1f42, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3c29);
        EXPECT(gbc.pc(), 0x1f43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 03B2
        gbc.setState(0xcbcb, 0xed7, 0x1f60, 0x2bb4, 0x9500, 0xc0c5, 0x0, 0x1);
        gbc.writeMem(0xcbcb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xed7);
        EXPECT(gbc.pc(), 0xcbcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbcb), 0x83);
        // 83 03B3
        gbc.setState(0x6672, 0x3549, 0x6e90, 0xa346, 0x2908, 0x97ee, 0x1, 0x0);
        gbc.writeMem(0x6672, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3549);
        EXPECT(gbc.pc(), 0x6673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 03B4
        gbc.setState(0xabf1, 0xf270, 0x5dd0, 0x45d7, 0xde52, 0x8b99, 0x0, 0x1);
        gbc.writeMem(0xabf1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf270);
        EXPECT(gbc.pc(), 0xabf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf1), 0x83);
        // 83 03B6
        gbc.setState(0x9d9a, 0x3413, 0x73a0, 0x3c78, 0xea74, 0xa323, 0x1, 0x0);
        gbc.writeMem(0x9d9a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3413);
        EXPECT(gbc.pc(), 0x9d9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d9a), 0x83);
        // 83 03B8
        gbc.setState(0x1ced, 0x5746, 0xaea0, 0xb1c2, 0x68a3, 0xeee7, 0x0, 0x1);
        gbc.writeMem(0x1ced, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5746);
        EXPECT(gbc.pc(), 0x1cee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03B9
        gbc.setState(0xb628, 0x1c05, 0x73d0, 0x27f4, 0xb5c0, 0xd5a4, 0x0, 0x1);
        gbc.writeMem(0xb628, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1c05);
        EXPECT(gbc.pc(), 0xb629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb628), 0x83);
        // 83 03BA
        gbc.setState(0x25b0, 0x36ea, 0xc8c0, 0xc7dd, 0x5d06, 0x586c, 0x1, 0x1);
        gbc.writeMem(0x25b0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x36ea);
        EXPECT(gbc.pc(), 0x25b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 03BB
        gbc.setState(0x9bc2, 0x5bb, 0x19c0, 0xd41b, 0x44d6, 0x675e, 0x0, 0x0);
        gbc.writeMem(0x9bc2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5bb);
        EXPECT(gbc.pc(), 0x9bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bc2), 0x83);
        // 83 03BC
        gbc.setState(0x1bd9, 0xb994, 0xcf00, 0xf0db, 0xbd57, 0x2389, 0x1, 0x1);
        gbc.writeMem(0x1bd9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb994);
        EXPECT(gbc.pc(), 0x1bda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03BD
        gbc.setState(0xba85, 0x756b, 0xb790, 0xe1d, 0x902c, 0x2384, 0x0, 0x1);
        gbc.writeMem(0xba85, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x756b);
        EXPECT(gbc.pc(), 0xba86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba85), 0x83);
        // 83 03BE
        gbc.setState(0x10b0, 0x2335, 0xb220, 0x813e, 0xa071, 0x8f58, 0x0, 0x0);
        gbc.writeMem(0x10b0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2335);
        EXPECT(gbc.pc(), 0x10b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 03BF
        gbc.setState(0xb26, 0x3f17, 0x9af0, 0x71b7, 0x3185, 0x968c, 0x0, 0x1);
        gbc.writeMem(0xb26, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3f17);
        EXPECT(gbc.pc(), 0xb27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 03C0
        gbc.setState(0x7ce4, 0x8f2c, 0x5480, 0x5281, 0xa79e, 0xa18a, 0x0, 0x1);
        gbc.writeMem(0x7ce4, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8f2c);
        EXPECT(gbc.pc(), 0x7ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 03C1
        gbc.setState(0x9555, 0xced4, 0x3010, 0x8c7a, 0xbe62, 0x2a06, 0x1, 0x1);
        gbc.writeMem(0x9555, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xced4);
        EXPECT(gbc.pc(), 0x9556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9555), 0x83);
        // 83 03C2
        gbc.setState(0x4775, 0xf8b9, 0x4d70, 0x2b58, 0x39a2, 0xb6e3, 0x1, 0x0);
        gbc.writeMem(0x4775, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf8b9);
        EXPECT(gbc.pc(), 0x4776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 03C3
        gbc.setState(0x7cd5, 0x6bc7, 0xb50, 0x2077, 0x8783, 0x3516, 0x0, 0x1);
        gbc.writeMem(0x7cd5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6bc7);
        EXPECT(gbc.pc(), 0x7cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 03C4
        gbc.setState(0x502, 0x4927, 0xd0, 0x8503, 0x2f46, 0xcff4, 0x0, 0x0);
        gbc.writeMem(0x502, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4927);
        EXPECT(gbc.pc(), 0x503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 03C5
        gbc.setState(0x1676, 0x8835, 0xe460, 0xbb02, 0x85fc, 0x936d, 0x1, 0x0);
        gbc.writeMem(0x1676, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8835);
        EXPECT(gbc.pc(), 0x1677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03C6
        gbc.setState(0x2acb, 0x7d05, 0x9010, 0x1913, 0x727, 0xf814, 0x1, 0x0);
        gbc.writeMem(0x2acb, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7d05);
        EXPECT(gbc.pc(), 0x2acc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 03C7
        gbc.setState(0x4e0e, 0x3e2e, 0xad80, 0x741c, 0xa3ea, 0x3854, 0x0, 0x0);
        gbc.writeMem(0x4e0e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3e2e);
        EXPECT(gbc.pc(), 0x4e0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03C8
        gbc.setState(0xc71c, 0xd480, 0xb550, 0x2a9d, 0x2e1d, 0xef6d, 0x1, 0x0);
        gbc.writeMem(0xc71c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd480);
        EXPECT(gbc.pc(), 0xc71d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc71c), 0x83);
        // 83 03C9
        gbc.setState(0xef8f, 0x3979, 0xab00, 0x9a9f, 0xe045, 0x5c6e, 0x1, 0x0);
        gbc.writeMem(0xef8f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3979);
        EXPECT(gbc.pc(), 0xef90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef8f), 0x83);
        // 83 03CA
        gbc.setState(0x35e7, 0xa5b3, 0x4e90, 0xbf38, 0x8df8, 0x6993, 0x1, 0x0);
        gbc.writeMem(0x35e7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa5b3);
        EXPECT(gbc.pc(), 0x35e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03CB
        gbc.setState(0xbdf6, 0x2786, 0x9b60, 0x281, 0x4919, 0x1eaa, 0x1, 0x0);
        gbc.writeMem(0xbdf6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2786);
        EXPECT(gbc.pc(), 0xbdf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdf6), 0x83);
        // 83 03CC
        gbc.setState(0x8ec2, 0x5ac3, 0xda60, 0x775c, 0x71d0, 0xf34b, 0x1, 0x0);
        gbc.writeMem(0x8ec2, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5ac3);
        EXPECT(gbc.pc(), 0x8ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ec2), 0x83);
        // 83 03CD
        gbc.setState(0x40d5, 0xb553, 0xc440, 0x1bc4, 0xfaea, 0xf026, 0x1, 0x1);
        gbc.writeMem(0x40d5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb553);
        EXPECT(gbc.pc(), 0x40d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 03CE
        gbc.setState(0x51b1, 0x3022, 0xcd40, 0x20b1, 0x3c59, 0x131e, 0x1, 0x0);
        gbc.writeMem(0x51b1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3022);
        EXPECT(gbc.pc(), 0x51b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03CF
        gbc.setState(0x87a6, 0x3ff8, 0x70c0, 0x38f2, 0xca30, 0x53eb, 0x0, 0x0);
        gbc.writeMem(0x87a6, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3ff8);
        EXPECT(gbc.pc(), 0x87a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a6), 0x83);
        // 83 03D1
        gbc.setState(0x7b96, 0xac54, 0x4400, 0x22c9, 0x984e, 0x85a1, 0x0, 0x0);
        gbc.writeMem(0x7b96, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xac54);
        EXPECT(gbc.pc(), 0x7b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 03D2
        gbc.setState(0x3c23, 0xc032, 0x4550, 0xbcf7, 0x2dab, 0xdc6e, 0x1, 0x1);
        gbc.writeMem(0x3c23, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc032);
        EXPECT(gbc.pc(), 0x3c24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 03D3
        gbc.setState(0x954c, 0x6ca, 0xea10, 0x33d2, 0x5039, 0xa5c5, 0x0, 0x0);
        gbc.writeMem(0x954c, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6ca);
        EXPECT(gbc.pc(), 0x954d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x954c), 0x83);
        // 83 03D4
        gbc.setState(0xb172, 0x60c4, 0xf650, 0xc3b, 0xde59, 0x4dd8, 0x1, 0x0);
        gbc.writeMem(0xb172, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x60c4);
        EXPECT(gbc.pc(), 0xb173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb172), 0x83);
        // 83 03D5
        gbc.setState(0x4115, 0x223, 0xc70, 0x2e96, 0x2efe, 0x4f9f, 0x1, 0x1);
        gbc.writeMem(0x4115, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x223);
        EXPECT(gbc.pc(), 0x4116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03D6
        gbc.setState(0x9506, 0x44b7, 0xbd00, 0xfdc4, 0xc02d, 0xc66d, 0x1, 0x1);
        gbc.writeMem(0x9506, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x44b7);
        EXPECT(gbc.pc(), 0x9507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9506), 0x83);
        // 83 03D7
        gbc.setState(0x102f, 0xf842, 0x7140, 0xd4e4, 0x24ed, 0x7e6e, 0x1, 0x1);
        gbc.writeMem(0x102f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf842);
        EXPECT(gbc.pc(), 0x1030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 03D8
        gbc.setState(0x36c1, 0x3a68, 0xe770, 0x24f4, 0x7ec4, 0xf77e, 0x1, 0x0);
        gbc.writeMem(0x36c1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3a68);
        EXPECT(gbc.pc(), 0x36c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 03D9
        gbc.setState(0x4528, 0x1be7, 0x5730, 0x5022, 0x716a, 0x6b3d, 0x0, 0x1);
        gbc.writeMem(0x4528, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1be7);
        EXPECT(gbc.pc(), 0x4529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 83 03DA
        gbc.setState(0xe375, 0x4148, 0x7c30, 0x39f, 0x488, 0xe984, 0x1, 0x1);
        gbc.writeMem(0xe375, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4148);
        EXPECT(gbc.pc(), 0xe376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe375), 0x83);
        // 83 03DB
        gbc.setState(0x3b37, 0xd966, 0x2b40, 0xfff6, 0xe54, 0x27f2, 0x0, 0x1);
        gbc.writeMem(0x3b37, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd966);
        EXPECT(gbc.pc(), 0x3b38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 83 03DC
        gbc.setState(0x70b3, 0x22c0, 0xd7b0, 0xf313, 0x2dfe, 0xa186, 0x1, 0x1);
        gbc.writeMem(0x70b3, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x22c0);
        EXPECT(gbc.pc(), 0x70b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03DD
        gbc.setState(0x3277, 0x979e, 0xe7f0, 0xa86a, 0xd3f0, 0xf1d2, 0x1, 0x0);
        gbc.writeMem(0x3277, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x979e);
        EXPECT(gbc.pc(), 0x3278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 03DE
        gbc.setState(0xb752, 0x4757, 0x3da0, 0x62d2, 0x880a, 0xef66, 0x0, 0x0);
        gbc.writeMem(0xb752, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4757);
        EXPECT(gbc.pc(), 0xb753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb752), 0x83);
        // 83 03DF
        gbc.setState(0xcbc5, 0xd44c, 0x7930, 0xefab, 0x44b1, 0xa60c, 0x1, 0x1);
        gbc.writeMem(0xcbc5, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd44c);
        EXPECT(gbc.pc(), 0xcbc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbc5), 0x83);
        // 83 03E0
        gbc.setState(0x3b4d, 0x3b95, 0xfc30, 0x30f1, 0x4ac8, 0x2ace, 0x0, 0x0);
        gbc.writeMem(0x3b4d, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3b95);
        EXPECT(gbc.pc(), 0x3b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03E1
        gbc.setState(0x5cf0, 0x101b, 0xcdf0, 0x9bee, 0x75d8, 0x7766, 0x1, 0x1);
        gbc.writeMem(0x5cf0, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x101b);
        EXPECT(gbc.pc(), 0x5cf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 83 03E2
        gbc.setState(0x99f1, 0xe90f, 0x4d60, 0xb796, 0x5960, 0xd158, 0x1, 0x1);
        gbc.writeMem(0x99f1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe90f);
        EXPECT(gbc.pc(), 0x99f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f1), 0x83);
        // 83 03E3
        gbc.setState(0xc008, 0x7a3b, 0x2bf0, 0x37ff, 0x7d9e, 0xd0c0, 0x1, 0x0);
        gbc.writeMem(0xc008, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x7a3b);
        EXPECT(gbc.pc(), 0xc009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc008), 0x83);
        // 83 03E4
        gbc.setState(0xc8c7, 0xac87, 0x25a0, 0x91c, 0xc430, 0xfe7f, 0x0, 0x1);
        gbc.writeMem(0xc8c7, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xac87);
        EXPECT(gbc.pc(), 0xc8c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c7), 0x83);
        // 83 03E5
        gbc.setState(0x2606, 0xe02c, 0xfbc0, 0xc596, 0x9013, 0xda08, 0x0, 0x0);
        gbc.writeMem(0x2606, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe02c);
        EXPECT(gbc.pc(), 0x2607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 83 03E6
        gbc.setState(0xa50e, 0xf573, 0x8e90, 0xf893, 0xb946, 0xf8ef, 0x0, 0x0);
        gbc.writeMem(0xa50e, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf573);
        EXPECT(gbc.pc(), 0xa50f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa50e), 0x83);
        // 83 03E7
        gbc.setState(0x27fa, 0x362f, 0xe820, 0x7d2c, 0xa27, 0xba37, 0x0, 0x1);
        gbc.writeMem(0x27fa, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x362f);
        EXPECT(gbc.pc(), 0x27fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
