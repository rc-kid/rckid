    TEST(gbcemu, opcode_cb_73) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 73 0000
        gbc.setState(0x6dbc, 0xad59, 0x49f0, 0x532c, 0x2f94, 0xee03, 0x1, 0x1);
        gbc.writeMem(0x6dbc, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xad59, gbc.sp());
        EXPECT(0x6dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0001
        gbc.setState(0xb956, 0xda93, 0x6160, 0x9e8f, 0xd51b, 0xa3fe, 0x1, 0x1);
        gbc.writeMem(0xb956, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xda93, gbc.sp());
        EXPECT(0xb958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb956));
        EXPECT(0x73, gbc.readMem(0xb957));
        // CB 73 0002
        gbc.setState(0x315d, 0x20af, 0x2630, 0xd6a4, 0xe1dc, 0xad3e, 0x1, 0x0);
        gbc.writeMem(0x315d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x20af, gbc.sp());
        EXPECT(0x315f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0003
        gbc.setState(0x1829, 0x393f, 0xd050, 0xde49, 0x56e1, 0x83b4, 0x0, 0x0);
        gbc.writeMem(0x1829, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x393f, gbc.sp());
        EXPECT(0x182b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0004
        gbc.setState(0xa475, 0x802c, 0x9dd0, 0x35dc, 0xd874, 0x3e2e, 0x0, 0x1);
        gbc.writeMem(0xa475, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x802c, gbc.sp());
        EXPECT(0xa477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa475));
        EXPECT(0x73, gbc.readMem(0xa476));
        // CB 73 0005
        gbc.setState(0x679a, 0xe3c8, 0x2fa0, 0xc616, 0xbd7, 0xe3d0, 0x0, 0x0);
        gbc.writeMem(0x679a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe3c8, gbc.sp());
        EXPECT(0x679c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0006
        gbc.setState(0x6d2a, 0x3654, 0xafa0, 0xfe74, 0xdad6, 0xb7c9, 0x1, 0x0);
        gbc.writeMem(0x6d2a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3654, gbc.sp());
        EXPECT(0x6d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0007
        gbc.setState(0xcbcf, 0xcfb9, 0xf410, 0x3f3e, 0xa11e, 0xdd34, 0x1, 0x0);
        gbc.writeMem(0xcbcf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcfb9, gbc.sp());
        EXPECT(0xcbd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbcf));
        EXPECT(0x73, gbc.readMem(0xcbd0));
        // CB 73 0008
        gbc.setState(0x5a05, 0x68c4, 0x90e0, 0x8f0d, 0x5799, 0x33f3, 0x1, 0x0);
        gbc.writeMem(0x5a05, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x68c4, gbc.sp());
        EXPECT(0x5a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0009
        gbc.setState(0xb979, 0xcf81, 0xb900, 0x4855, 0xcb14, 0xb9fd, 0x0, 0x0);
        gbc.writeMem(0xb979, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcf81, gbc.sp());
        EXPECT(0xb97b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb979));
        EXPECT(0x73, gbc.readMem(0xb97a));
        // CB 73 000A
        gbc.setState(0x3ed0, 0xfb1d, 0x98f0, 0x69a5, 0xb044, 0x83e7, 0x1, 0x0);
        gbc.writeMem(0x3ed0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfb1d, gbc.sp());
        EXPECT(0x3ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 000B
        gbc.setState(0x37aa, 0xd599, 0x4660, 0xf074, 0xe66c, 0xf56f, 0x0, 0x0);
        gbc.writeMem(0x37aa, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd599, gbc.sp());
        EXPECT(0x37ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 000C
        gbc.setState(0x33f5, 0x99f4, 0x6530, 0xaf5f, 0x6aa2, 0x8295, 0x0, 0x1);
        gbc.writeMem(0x33f5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x99f4, gbc.sp());
        EXPECT(0x33f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 000D
        gbc.setState(0x84c, 0xa01d, 0x10c0, 0xf71c, 0x5b5c, 0x8740, 0x1, 0x0);
        gbc.writeMem(0x84c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa01d, gbc.sp());
        EXPECT(0x84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 000E
        gbc.setState(0xe775, 0x66ff, 0x37e0, 0x27c8, 0xd5cc, 0x2283, 0x1, 0x1);
        gbc.writeMem(0xe775, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x66ff, gbc.sp());
        EXPECT(0xe777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe775));
        EXPECT(0x73, gbc.readMem(0xe776));
        // CB 73 000F
        gbc.setState(0x646e, 0x9dad, 0x3bb0, 0x526b, 0x6f87, 0xa7c2, 0x1, 0x0);
        gbc.writeMem(0x646e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9dad, gbc.sp());
        EXPECT(0x6470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0010
        gbc.setState(0xe3ac, 0x17b2, 0x4260, 0xfde9, 0x96aa, 0xf03f, 0x1, 0x0);
        gbc.writeMem(0xe3ac, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x17b2, gbc.sp());
        EXPECT(0xe3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ac));
        EXPECT(0x73, gbc.readMem(0xe3ad));
        // CB 73 0011
        gbc.setState(0xc7a3, 0x2c17, 0x2880, 0x55fd, 0x7b6b, 0x4376, 0x0, 0x1);
        gbc.writeMem(0xc7a3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2c17, gbc.sp());
        EXPECT(0xc7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a3));
        EXPECT(0x73, gbc.readMem(0xc7a4));
        // CB 73 0012
        gbc.setState(0x2580, 0xdb58, 0x8a90, 0xd829, 0xb8bb, 0x8318, 0x1, 0x0);
        gbc.writeMem(0x2580, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdb58, gbc.sp());
        EXPECT(0x2582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0013
        gbc.setState(0x1565, 0x9a56, 0x9a20, 0xd5d2, 0x9965, 0x5c71, 0x0, 0x1);
        gbc.writeMem(0x1565, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9a56, gbc.sp());
        EXPECT(0x1567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0014
        gbc.setState(0x63f5, 0x2ef2, 0x30f0, 0xd187, 0x7d98, 0x7939, 0x1, 0x1);
        gbc.writeMem(0x63f5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2ef2, gbc.sp());
        EXPECT(0x63f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0015
        gbc.setState(0x6b1c, 0x9fd8, 0xd740, 0x2361, 0xbc0b, 0xbf65, 0x1, 0x0);
        gbc.writeMem(0x6b1c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9fd8, gbc.sp());
        EXPECT(0x6b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0016
        gbc.setState(0x1c62, 0x1df5, 0x3730, 0xdb4d, 0x49be, 0x5651, 0x0, 0x1);
        gbc.writeMem(0x1c62, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1df5, gbc.sp());
        EXPECT(0x1c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0017
        gbc.setState(0xb6f2, 0xabc8, 0xb240, 0xa23c, 0x2e76, 0xba45, 0x0, 0x0);
        gbc.writeMem(0xb6f2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xabc8, gbc.sp());
        EXPECT(0xb6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f2));
        EXPECT(0x73, gbc.readMem(0xb6f3));
        // CB 73 0018
        gbc.setState(0x5ef1, 0x48e3, 0xcab0, 0x5ea4, 0x3938, 0x6723, 0x0, 0x1);
        gbc.writeMem(0x5ef1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x48e3, gbc.sp());
        EXPECT(0x5ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0019
        gbc.setState(0x59b3, 0x9cc0, 0x2580, 0xb4a5, 0xaeda, 0x74f6, 0x0, 0x0);
        gbc.writeMem(0x59b3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9cc0, gbc.sp());
        EXPECT(0x59b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 001A
        gbc.setState(0x366f, 0x21b6, 0x5de0, 0xf931, 0x36c6, 0x385, 0x0, 0x1);
        gbc.writeMem(0x366f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x21b6, gbc.sp());
        EXPECT(0x3671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 001B
        gbc.setState(0x96f, 0x7587, 0x7ce0, 0x8593, 0xd48, 0xd37c, 0x1, 0x0);
        gbc.writeMem(0x96f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7587, gbc.sp());
        EXPECT(0x971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 001C
        gbc.setState(0xda47, 0x9e17, 0x8f80, 0x2fcb, 0x5f73, 0x8351, 0x1, 0x0);
        gbc.writeMem(0xda47, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9e17, gbc.sp());
        EXPECT(0xda49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda47));
        EXPECT(0x73, gbc.readMem(0xda48));
        // CB 73 001D
        gbc.setState(0xc9cf, 0x4d08, 0xcce0, 0x35bd, 0x9ef5, 0x932, 0x0, 0x1);
        gbc.writeMem(0xc9cf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4d08, gbc.sp());
        EXPECT(0xc9d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9cf));
        EXPECT(0x73, gbc.readMem(0xc9d0));
        // CB 73 001E
        gbc.setState(0x9e4, 0x1e57, 0xe730, 0xb2de, 0x336a, 0x779c, 0x0, 0x1);
        gbc.writeMem(0x9e4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1e57, gbc.sp());
        EXPECT(0x9e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 001F
        gbc.setState(0x750a, 0x3b26, 0x51c0, 0xff3, 0xef1a, 0xc233, 0x1, 0x1);
        gbc.writeMem(0x750a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3b26, gbc.sp());
        EXPECT(0x750c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0020
        gbc.setState(0x6c1a, 0x78a9, 0xddc0, 0x5654, 0x918a, 0xd1c8, 0x0, 0x1);
        gbc.writeMem(0x6c1a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x78a9, gbc.sp());
        EXPECT(0x6c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0021
        gbc.setState(0xb134, 0x50ec, 0x83a0, 0x1a7f, 0x8c0d, 0x7a10, 0x1, 0x1);
        gbc.writeMem(0xb134, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x50ec, gbc.sp());
        EXPECT(0xb136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb134));
        EXPECT(0x73, gbc.readMem(0xb135));
        // CB 73 0022
        gbc.setState(0x313b, 0x4da3, 0xe990, 0xe220, 0xac36, 0x1116, 0x0, 0x1);
        gbc.writeMem(0x313b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4da3, gbc.sp());
        EXPECT(0x313d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0023
        gbc.setState(0x58eb, 0x89e9, 0xed70, 0x7015, 0x587a, 0xfdc5, 0x0, 0x1);
        gbc.writeMem(0x58eb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x89e9, gbc.sp());
        EXPECT(0x58ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0024
        gbc.setState(0x259d, 0x146c, 0xfa70, 0xe75c, 0x9280, 0x1aa9, 0x1, 0x1);
        gbc.writeMem(0x259d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x146c, gbc.sp());
        EXPECT(0x259f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0025
        gbc.setState(0xd7ee, 0xce07, 0xd990, 0x20dc, 0x79f0, 0xb8e8, 0x1, 0x1);
        gbc.writeMem(0xd7ee, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xce07, gbc.sp());
        EXPECT(0xd7f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ee));
        EXPECT(0x73, gbc.readMem(0xd7ef));
        // CB 73 0026
        gbc.setState(0x7d50, 0x1b1b, 0x6800, 0xbe51, 0xee0f, 0x3c66, 0x0, 0x1);
        gbc.writeMem(0x7d50, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1b1b, gbc.sp());
        EXPECT(0x7d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0027
        gbc.setState(0x2161, 0x9fff, 0xf5e0, 0x10ae, 0xa262, 0xc8, 0x1, 0x0);
        gbc.writeMem(0x2161, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9fff, gbc.sp());
        EXPECT(0x2163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0028
        gbc.setState(0x38eb, 0x720, 0x95c0, 0xae14, 0x288e, 0xb171, 0x0, 0x1);
        gbc.writeMem(0x38eb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x720, gbc.sp());
        EXPECT(0x38ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0029
        gbc.setState(0x3f4f, 0x46a9, 0xdf90, 0x9920, 0x7e0d, 0x1a27, 0x1, 0x1);
        gbc.writeMem(0x3f4f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x46a9, gbc.sp());
        EXPECT(0x3f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 002A
        gbc.setState(0xa4e2, 0x9b00, 0x4d10, 0xd2f8, 0xa170, 0x83e9, 0x0, 0x1);
        gbc.writeMem(0xa4e2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9b00, gbc.sp());
        EXPECT(0xa4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e2));
        EXPECT(0x73, gbc.readMem(0xa4e3));
        // CB 73 002B
        gbc.setState(0xd214, 0xbb36, 0x6e00, 0xd5c2, 0x7fda, 0xf394, 0x1, 0x0);
        gbc.writeMem(0xd214, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbb36, gbc.sp());
        EXPECT(0xd216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd214));
        EXPECT(0x73, gbc.readMem(0xd215));
        // CB 73 002C
        gbc.setState(0x970f, 0xadb6, 0xd100, 0x9196, 0xd696, 0xa01d, 0x1, 0x1);
        gbc.writeMem(0x970f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xadb6, gbc.sp());
        EXPECT(0x9711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x970f));
        EXPECT(0x73, gbc.readMem(0x9710));
        // CB 73 002D
        gbc.setState(0xe38, 0xcd06, 0x9cc0, 0x1282, 0x6bb9, 0x7d7c, 0x1, 0x0);
        gbc.writeMem(0xe38, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcd06, gbc.sp());
        EXPECT(0xe3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 002E
        gbc.setState(0xcf89, 0x7e6b, 0x9280, 0xe84e, 0xd0d7, 0x90fc, 0x1, 0x1);
        gbc.writeMem(0xcf89, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7e6b, gbc.sp());
        EXPECT(0xcf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf89));
        EXPECT(0x73, gbc.readMem(0xcf8a));
        // CB 73 002F
        gbc.setState(0x2c52, 0x46ad, 0x5570, 0x93e9, 0xf5d7, 0x69a3, 0x1, 0x1);
        gbc.writeMem(0x2c52, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x46ad, gbc.sp());
        EXPECT(0x2c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0031
        gbc.setState(0x8707, 0x2262, 0x8ec0, 0xe35c, 0xc5bf, 0xfa9, 0x1, 0x1);
        gbc.writeMem(0x8707, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2262, gbc.sp());
        EXPECT(0x8709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8707));
        EXPECT(0x73, gbc.readMem(0x8708));
        // CB 73 0032
        gbc.setState(0x5209, 0x9605, 0xbf00, 0x4267, 0xbe6c, 0x3ca4, 0x0, 0x1);
        gbc.writeMem(0x5209, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9605, gbc.sp());
        EXPECT(0x520b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0033
        gbc.setState(0xebd6, 0xaf64, 0xb130, 0x3ebd, 0xb7c9, 0xcd65, 0x1, 0x0);
        gbc.writeMem(0xebd6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xaf64, gbc.sp());
        EXPECT(0xebd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd6));
        EXPECT(0x73, gbc.readMem(0xebd7));
        // CB 73 0034
        gbc.setState(0xe77c, 0x7154, 0x2aa0, 0xf2f8, 0x3054, 0x198a, 0x0, 0x0);
        gbc.writeMem(0xe77c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7154, gbc.sp());
        EXPECT(0xe77e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77c));
        EXPECT(0x73, gbc.readMem(0xe77d));
        // CB 73 0035
        gbc.setState(0x26e8, 0xbf9, 0x10b0, 0xeb4f, 0x7aee, 0x76b4, 0x0, 0x1);
        gbc.writeMem(0x26e8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbf9, gbc.sp());
        EXPECT(0x26ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0036
        gbc.setState(0xd14b, 0x2985, 0x3a20, 0x6bac, 0x4fa1, 0x73f5, 0x1, 0x1);
        gbc.writeMem(0xd14b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2985, gbc.sp());
        EXPECT(0xd14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd14b));
        EXPECT(0x73, gbc.readMem(0xd14c));
        // CB 73 0037
        gbc.setState(0x6e4d, 0x8359, 0x61b0, 0xb274, 0x1d48, 0x86be, 0x0, 0x0);
        gbc.writeMem(0x6e4d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8359, gbc.sp());
        EXPECT(0x6e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0038
        gbc.setState(0xccf1, 0x250c, 0xf7e0, 0x3b57, 0x3224, 0x8612, 0x1, 0x0);
        gbc.writeMem(0xccf1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x250c, gbc.sp());
        EXPECT(0xccf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf1));
        EXPECT(0x73, gbc.readMem(0xccf2));
        // CB 73 0039
        gbc.setState(0x70a7, 0x6d37, 0x8a20, 0x61b6, 0x8231, 0xc706, 0x0, 0x0);
        gbc.writeMem(0x70a7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6d37, gbc.sp());
        EXPECT(0x70a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 003A
        gbc.setState(0x43cb, 0x9c4c, 0x590, 0xcb51, 0xcd14, 0x179e, 0x1, 0x1);
        gbc.writeMem(0x43cb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9c4c, gbc.sp());
        EXPECT(0x43cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 003B
        gbc.setState(0x754e, 0xdb8a, 0x1800, 0x2541, 0x208, 0xfc48, 0x0, 0x0);
        gbc.writeMem(0x754e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdb8a, gbc.sp());
        EXPECT(0x7550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 003C
        gbc.setState(0x1280, 0xbe07, 0xedc0, 0x9b2f, 0x14e0, 0xc12b, 0x1, 0x1);
        gbc.writeMem(0x1280, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbe07, gbc.sp());
        EXPECT(0x1282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 003E
        gbc.setState(0x8858, 0xe1b1, 0xf3d0, 0x524a, 0x65da, 0xbf75, 0x0, 0x0);
        gbc.writeMem(0x8858, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe1b1, gbc.sp());
        EXPECT(0x885a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8858));
        EXPECT(0x73, gbc.readMem(0x8859));
        // CB 73 003F
        gbc.setState(0xce10, 0xbfa5, 0xf6b0, 0x815c, 0xbd, 0x3b43, 0x0, 0x0);
        gbc.writeMem(0xce10, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbfa5, gbc.sp());
        EXPECT(0xce12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce10));
        EXPECT(0x73, gbc.readMem(0xce11));
        // CB 73 0040
        gbc.setState(0xb24d, 0x58eb, 0xa50, 0x4c33, 0xce61, 0x539b, 0x0, 0x1);
        gbc.writeMem(0xb24d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x58eb, gbc.sp());
        EXPECT(0xb24f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb24d));
        EXPECT(0x73, gbc.readMem(0xb24e));
        // CB 73 0041
        gbc.setState(0xcbc9, 0x7aed, 0x6ec0, 0xc81f, 0xfb5b, 0xb530, 0x0, 0x1);
        gbc.writeMem(0xcbc9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7aed, gbc.sp());
        EXPECT(0xcbcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc9));
        EXPECT(0x73, gbc.readMem(0xcbca));
        // CB 73 0042
        gbc.setState(0xbb16, 0x8652, 0xd40, 0x7445, 0x805b, 0xeeaa, 0x0, 0x1);
        gbc.writeMem(0xbb16, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8652, gbc.sp());
        EXPECT(0xbb18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb16));
        EXPECT(0x73, gbc.readMem(0xbb17));
        // CB 73 0043
        gbc.setState(0x9961, 0x7f3e, 0xfb40, 0xc73c, 0x8c37, 0x1e5e, 0x0, 0x0);
        gbc.writeMem(0x9961, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7f3e, gbc.sp());
        EXPECT(0x9963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9961));
        EXPECT(0x73, gbc.readMem(0x9962));
        // CB 73 0044
        gbc.setState(0x42ce, 0x41c3, 0x9750, 0x3b42, 0xf53, 0x144a, 0x1, 0x1);
        gbc.writeMem(0x42ce, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x41c3, gbc.sp());
        EXPECT(0x42d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0045
        gbc.setState(0x2c14, 0x5cff, 0x9f40, 0x6fc3, 0x112, 0x409d, 0x0, 0x0);
        gbc.writeMem(0x2c14, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5cff, gbc.sp());
        EXPECT(0x2c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0046
        gbc.setState(0x398f, 0x561c, 0xb030, 0x80e4, 0x8e18, 0xf6b8, 0x1, 0x0);
        gbc.writeMem(0x398f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x561c, gbc.sp());
        EXPECT(0x3991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0047
        gbc.setState(0xb759, 0x104f, 0x290, 0xddf0, 0x401c, 0x4308, 0x1, 0x1);
        gbc.writeMem(0xb759, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x104f, gbc.sp());
        EXPECT(0xb75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb759));
        EXPECT(0x73, gbc.readMem(0xb75a));
        // CB 73 0048
        gbc.setState(0x7d35, 0xda87, 0xa270, 0xed7f, 0xf00e, 0x41c8, 0x0, 0x1);
        gbc.writeMem(0x7d35, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xda87, gbc.sp());
        EXPECT(0x7d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0049
        gbc.setState(0xba53, 0x7d14, 0x5c40, 0x2cf5, 0x1a74, 0x58b0, 0x0, 0x1);
        gbc.writeMem(0xba53, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7d14, gbc.sp());
        EXPECT(0xba55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba53));
        EXPECT(0x73, gbc.readMem(0xba54));
        // CB 73 004A
        gbc.setState(0x67db, 0x6f9c, 0x5bb0, 0x49d, 0x882f, 0xccf3, 0x1, 0x1);
        gbc.writeMem(0x67db, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6f9c, gbc.sp());
        EXPECT(0x67dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 004B
        gbc.setState(0x1fee, 0x5201, 0x3ca0, 0x59a5, 0xd71d, 0xd2ff, 0x0, 0x0);
        gbc.writeMem(0x1fee, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5201, gbc.sp());
        EXPECT(0x1ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 004C
        gbc.setState(0xe741, 0x7826, 0x50b0, 0xa328, 0x5055, 0x7d72, 0x0, 0x1);
        gbc.writeMem(0xe741, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7826, gbc.sp());
        EXPECT(0xe743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe741));
        EXPECT(0x73, gbc.readMem(0xe742));
        // CB 73 004D
        gbc.setState(0x7ff9, 0x7fc8, 0xba80, 0x6ac7, 0xfc8e, 0xeeaa, 0x1, 0x0);
        gbc.writeMem(0x7ff9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7fc8, gbc.sp());
        EXPECT(0x7ffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 004E
        gbc.setState(0xdf10, 0x31b3, 0xcc40, 0x3ec8, 0xcabf, 0x6087, 0x1, 0x0);
        gbc.writeMem(0xdf10, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x31b3, gbc.sp());
        EXPECT(0xdf12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf10));
        EXPECT(0x73, gbc.readMem(0xdf11));
        // CB 73 004F
        gbc.setState(0x8cf8, 0x42ca, 0x7b60, 0x732, 0x21ca, 0x2805, 0x0, 0x0);
        gbc.writeMem(0x8cf8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x42ca, gbc.sp());
        EXPECT(0x8cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf8));
        EXPECT(0x73, gbc.readMem(0x8cf9));
        // CB 73 0050
        gbc.setState(0x8e81, 0x3a36, 0xc980, 0x4321, 0x8e7e, 0x95aa, 0x1, 0x1);
        gbc.writeMem(0x8e81, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3a36, gbc.sp());
        EXPECT(0x8e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e81));
        EXPECT(0x73, gbc.readMem(0x8e82));
        // CB 73 0051
        gbc.setState(0xbe80, 0x451e, 0xadc0, 0x589f, 0xd188, 0x8a55, 0x1, 0x1);
        gbc.writeMem(0xbe80, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x451e, gbc.sp());
        EXPECT(0xbe82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe80));
        EXPECT(0x73, gbc.readMem(0xbe81));
        // CB 73 0052
        gbc.setState(0xa422, 0xa133, 0x19d0, 0x6040, 0x1f2, 0x61db, 0x0, 0x1);
        gbc.writeMem(0xa422, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa133, gbc.sp());
        EXPECT(0xa424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa422));
        EXPECT(0x73, gbc.readMem(0xa423));
        // CB 73 0053
        gbc.setState(0xafc0, 0x524a, 0xb4d0, 0x22e6, 0xe7d, 0x35fd, 0x0, 0x1);
        gbc.writeMem(0xafc0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x524a, gbc.sp());
        EXPECT(0xafc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc0));
        EXPECT(0x73, gbc.readMem(0xafc1));
        // CB 73 0054
        gbc.setState(0x9958, 0x366, 0x2b10, 0x6c1b, 0xa63c, 0x978e, 0x0, 0x1);
        gbc.writeMem(0x9958, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x366, gbc.sp());
        EXPECT(0x995a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9958));
        EXPECT(0x73, gbc.readMem(0x9959));
        // CB 73 0056
        gbc.setState(0x5629, 0xfb, 0x7660, 0x3380, 0xcc93, 0x84b4, 0x1, 0x1);
        gbc.writeMem(0x5629, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfb, gbc.sp());
        EXPECT(0x562b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0057
        gbc.setState(0x2185, 0xcdfb, 0x2040, 0x5040, 0x1cc4, 0x1acf, 0x0, 0x1);
        gbc.writeMem(0x2185, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcdfb, gbc.sp());
        EXPECT(0x2187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0058
        gbc.setState(0x5aa5, 0x1445, 0x7360, 0x9bef, 0x7603, 0x9d87, 0x1, 0x0);
        gbc.writeMem(0x5aa5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1445, gbc.sp());
        EXPECT(0x5aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0059
        gbc.setState(0xf3a, 0x7f47, 0xc650, 0x1c35, 0x5311, 0x749c, 0x0, 0x1);
        gbc.writeMem(0xf3a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7f47, gbc.sp());
        EXPECT(0xf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 005A
        gbc.setState(0x2ab0, 0xffca, 0xb6d0, 0xda72, 0xf4ba, 0xe152, 0x1, 0x1);
        gbc.writeMem(0x2ab0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xffca, gbc.sp());
        EXPECT(0x2ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 005B
        gbc.setState(0xa61f, 0xbc51, 0x570, 0x45d1, 0xc410, 0xe707, 0x0, 0x1);
        gbc.writeMem(0xa61f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbc51, gbc.sp());
        EXPECT(0xa621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa61f));
        EXPECT(0x73, gbc.readMem(0xa620));
        // CB 73 005C
        gbc.setState(0xc98d, 0x68e0, 0xcd10, 0xde58, 0xcd7, 0x9de, 0x1, 0x0);
        gbc.writeMem(0xc98d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x68e0, gbc.sp());
        EXPECT(0xc98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98d));
        EXPECT(0x73, gbc.readMem(0xc98e));
        // CB 73 005D
        gbc.setState(0xb03e, 0xdef3, 0x79f0, 0x749d, 0x3a78, 0x9e6, 0x0, 0x0);
        gbc.writeMem(0xb03e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdef3, gbc.sp());
        EXPECT(0xb040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb03e));
        EXPECT(0x73, gbc.readMem(0xb03f));
        // CB 73 005E
        gbc.setState(0x93e8, 0xa150, 0x5640, 0x3547, 0x38b3, 0xc2df, 0x1, 0x0);
        gbc.writeMem(0x93e8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa150, gbc.sp());
        EXPECT(0x93ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e8));
        EXPECT(0x73, gbc.readMem(0x93e9));
        // CB 73 005F
        gbc.setState(0x438e, 0x8ab5, 0x5f10, 0xef28, 0xd8ae, 0x4688, 0x1, 0x1);
        gbc.writeMem(0x438e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8ab5, gbc.sp());
        EXPECT(0x4390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0061
        gbc.setState(0x5264, 0xfa1, 0x4350, 0x2b21, 0x5aea, 0xb4c0, 0x0, 0x0);
        gbc.writeMem(0x5264, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfa1, gbc.sp());
        EXPECT(0x5266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0062
        gbc.setState(0xb8c8, 0xd10f, 0x2590, 0xc2c5, 0x57b2, 0xb186, 0x0, 0x1);
        gbc.writeMem(0xb8c8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd10f, gbc.sp());
        EXPECT(0xb8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c8));
        EXPECT(0x73, gbc.readMem(0xb8c9));
        // CB 73 0063
        gbc.setState(0x6553, 0x88d3, 0x5d0, 0xe343, 0xefbf, 0x64cb, 0x1, 0x1);
        gbc.writeMem(0x6553, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x88d3, gbc.sp());
        EXPECT(0x6555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0064
        gbc.setState(0xc44f, 0x86a4, 0xeaf0, 0x513, 0x74ee, 0x83ea, 0x1, 0x0);
        gbc.writeMem(0xc44f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x86a4, gbc.sp());
        EXPECT(0xc451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc44f));
        EXPECT(0x73, gbc.readMem(0xc450));
        // CB 73 0065
        gbc.setState(0x6208, 0xf5c6, 0x5760, 0xb892, 0x6589, 0xed9d, 0x0, 0x1);
        gbc.writeMem(0x6208, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf5c6, gbc.sp());
        EXPECT(0x620a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0066
        gbc.setState(0x5c7, 0x9290, 0xd400, 0xf7a2, 0x8678, 0xde9c, 0x0, 0x0);
        gbc.writeMem(0x5c7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9290, gbc.sp());
        EXPECT(0x5c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0067
        gbc.setState(0xbc2b, 0x582c, 0x67b0, 0x3334, 0x1633, 0x682, 0x0, 0x0);
        gbc.writeMem(0xbc2b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x582c, gbc.sp());
        EXPECT(0xbc2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2b));
        EXPECT(0x73, gbc.readMem(0xbc2c));
        // CB 73 0068
        gbc.setState(0x7cbf, 0x289b, 0x9290, 0xe65d, 0x1844, 0xc4a5, 0x0, 0x1);
        gbc.writeMem(0x7cbf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x289b, gbc.sp());
        EXPECT(0x7cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0069
        gbc.setState(0x4dde, 0xdc7d, 0xc5f0, 0x339f, 0xea85, 0xbc57, 0x0, 0x0);
        gbc.writeMem(0x4dde, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdc7d, gbc.sp());
        EXPECT(0x4de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 006A
        gbc.setState(0x8f7d, 0xc94d, 0x5f30, 0x4c6b, 0x147e, 0xbd22, 0x1, 0x1);
        gbc.writeMem(0x8f7d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc94d, gbc.sp());
        EXPECT(0x8f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f7d));
        EXPECT(0x73, gbc.readMem(0x8f7e));
        // CB 73 006B
        gbc.setState(0x9044, 0x2244, 0xf600, 0xa146, 0xcc70, 0x823d, 0x1, 0x0);
        gbc.writeMem(0x9044, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2244, gbc.sp());
        EXPECT(0x9046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9044));
        EXPECT(0x73, gbc.readMem(0x9045));
        // CB 73 006C
        gbc.setState(0x1e09, 0x33b3, 0x4570, 0x68e0, 0x286, 0xe0da, 0x1, 0x1);
        gbc.writeMem(0x1e09, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x33b3, gbc.sp());
        EXPECT(0x1e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 006D
        gbc.setState(0xb477, 0xd3bd, 0xf1c0, 0x8176, 0x533b, 0xd486, 0x0, 0x0);
        gbc.writeMem(0xb477, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd3bd, gbc.sp());
        EXPECT(0xb479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb477));
        EXPECT(0x73, gbc.readMem(0xb478));
        // CB 73 006E
        gbc.setState(0x2b2c, 0x8b5c, 0xfb90, 0xccf7, 0x655c, 0x3fe, 0x0, 0x0);
        gbc.writeMem(0x2b2c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8b5c, gbc.sp());
        EXPECT(0x2b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 006F
        gbc.setState(0x53eb, 0x4279, 0x4ca0, 0x54cc, 0x16ac, 0x7f23, 0x0, 0x0);
        gbc.writeMem(0x53eb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4279, gbc.sp());
        EXPECT(0x53ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0070
        gbc.setState(0x30f4, 0xc33d, 0xb4c0, 0xfc2c, 0xf7a0, 0xa9a5, 0x0, 0x1);
        gbc.writeMem(0x30f4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc33d, gbc.sp());
        EXPECT(0x30f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0071
        gbc.setState(0x6f39, 0x5e6, 0xb0a0, 0xd8da, 0x9dca, 0x94d2, 0x0, 0x1);
        gbc.writeMem(0x6f39, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5e6, gbc.sp());
        EXPECT(0x6f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0072
        gbc.setState(0x9e50, 0x3d1d, 0xa460, 0xc88d, 0xddbe, 0xb158, 0x0, 0x0);
        gbc.writeMem(0x9e50, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3d1d, gbc.sp());
        EXPECT(0x9e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e50));
        EXPECT(0x73, gbc.readMem(0x9e51));
        // CB 73 0073
        gbc.setState(0x2a0, 0x2f2a, 0x46d0, 0xb070, 0x7b69, 0xc517, 0x0, 0x1);
        gbc.writeMem(0x2a0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2f2a, gbc.sp());
        EXPECT(0x2a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0074
        gbc.setState(0xde48, 0x8e1a, 0x75c0, 0x72c, 0xd56a, 0x3550, 0x0, 0x1);
        gbc.writeMem(0xde48, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8e1a, gbc.sp());
        EXPECT(0xde4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde48));
        EXPECT(0x73, gbc.readMem(0xde49));
        // CB 73 0075
        gbc.setState(0xee05, 0xf78c, 0x830, 0x7184, 0x944d, 0xfd26, 0x1, 0x1);
        gbc.writeMem(0xee05, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf78c, gbc.sp());
        EXPECT(0xee07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee05));
        EXPECT(0x73, gbc.readMem(0xee06));
        // CB 73 0076
        gbc.setState(0xaf04, 0x45f0, 0x9720, 0xefa6, 0x1c8e, 0x74ef, 0x1, 0x1);
        gbc.writeMem(0xaf04, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x45f0, gbc.sp());
        EXPECT(0xaf06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf04));
        EXPECT(0x73, gbc.readMem(0xaf05));
        // CB 73 0077
        gbc.setState(0x9bb6, 0x34ec, 0x9690, 0xf05a, 0x94ee, 0x6750, 0x0, 0x0);
        gbc.writeMem(0x9bb6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x34ec, gbc.sp());
        EXPECT(0x9bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb6));
        EXPECT(0x73, gbc.readMem(0x9bb7));
        // CB 73 0078
        gbc.setState(0x24a1, 0x993b, 0x5b50, 0x9ade, 0xdedc, 0x5789, 0x1, 0x1);
        gbc.writeMem(0x24a1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x993b, gbc.sp());
        EXPECT(0x24a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0079
        gbc.setState(0x7f21, 0x9b8, 0xa50, 0x1f16, 0xaeb3, 0x5ad4, 0x0, 0x1);
        gbc.writeMem(0x7f21, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9b8, gbc.sp());
        EXPECT(0x7f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 007A
        gbc.setState(0x521e, 0x5164, 0x95a0, 0x23b4, 0x1a09, 0x7e26, 0x1, 0x1);
        gbc.writeMem(0x521e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5164, gbc.sp());
        EXPECT(0x5220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 007B
        gbc.setState(0xfd8, 0xf658, 0x2160, 0x81af, 0xa34f, 0x81ac, 0x1, 0x0);
        gbc.writeMem(0xfd8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf658, gbc.sp());
        EXPECT(0xfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 007C
        gbc.setState(0xd7fb, 0x86df, 0x1020, 0x61c5, 0xbb7f, 0xcc50, 0x1, 0x0);
        gbc.writeMem(0xd7fb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x86df, gbc.sp());
        EXPECT(0xd7fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7fb));
        EXPECT(0x73, gbc.readMem(0xd7fc));
        // CB 73 007D
        gbc.setState(0xebe1, 0x58a2, 0x2cb0, 0x5452, 0xbd11, 0xc2d2, 0x0, 0x0);
        gbc.writeMem(0xebe1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x58a2, gbc.sp());
        EXPECT(0xebe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe1));
        EXPECT(0x73, gbc.readMem(0xebe2));
        // CB 73 007E
        gbc.setState(0x2ab9, 0x5b59, 0x1fb0, 0x7d77, 0xa57f, 0x293e, 0x0, 0x1);
        gbc.writeMem(0x2ab9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5b59, gbc.sp());
        EXPECT(0x2abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 007F
        gbc.setState(0xad81, 0xff08, 0x1d20, 0x5adc, 0xd167, 0xd225, 0x1, 0x0);
        gbc.writeMem(0xad81, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xff08, gbc.sp());
        EXPECT(0xad83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad81));
        EXPECT(0x73, gbc.readMem(0xad82));
        // CB 73 0080
        gbc.setState(0xdd89, 0xee4, 0xcbd0, 0xe545, 0x8636, 0x7819, 0x0, 0x1);
        gbc.writeMem(0xdd89, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xee4, gbc.sp());
        EXPECT(0xdd8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd89));
        EXPECT(0x73, gbc.readMem(0xdd8a));
        // CB 73 0081
        gbc.setState(0x1b9b, 0xda67, 0x140, 0x3d63, 0x4ce5, 0x6ca8, 0x1, 0x1);
        gbc.writeMem(0x1b9b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xda67, gbc.sp());
        EXPECT(0x1b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0082
        gbc.setState(0xbbfe, 0x65b8, 0x4e90, 0x34ac, 0xe3b6, 0x311e, 0x1, 0x0);
        gbc.writeMem(0xbbfe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x65b8, gbc.sp());
        EXPECT(0xbc00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfe));
        EXPECT(0x73, gbc.readMem(0xbbff));
        // CB 73 0083
        gbc.setState(0x1ab7, 0xe022, 0xd540, 0xb4a2, 0x3a86, 0x9cfc, 0x1, 0x1);
        gbc.writeMem(0x1ab7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe022, gbc.sp());
        EXPECT(0x1ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0084
        gbc.setState(0x2931, 0xb9dc, 0x360, 0x3735, 0x48a3, 0x32a2, 0x1, 0x0);
        gbc.writeMem(0x2931, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb9dc, gbc.sp());
        EXPECT(0x2933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0085
        gbc.setState(0x31a9, 0xc8fe, 0x4e70, 0x1cc4, 0x8496, 0x8997, 0x0, 0x0);
        gbc.writeMem(0x31a9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc8fe, gbc.sp());
        EXPECT(0x31ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0088
        gbc.setState(0xb266, 0xd17b, 0x4fc0, 0x23e6, 0xd50f, 0xdaee, 0x0, 0x1);
        gbc.writeMem(0xb266, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd17b, gbc.sp());
        EXPECT(0xb268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb266));
        EXPECT(0x73, gbc.readMem(0xb267));
        // CB 73 0089
        gbc.setState(0x9492, 0x21e1, 0xd8c0, 0xb83d, 0xba82, 0x4583, 0x0, 0x1);
        gbc.writeMem(0x9492, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x21e1, gbc.sp());
        EXPECT(0x9494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9492));
        EXPECT(0x73, gbc.readMem(0x9493));
        // CB 73 008B
        gbc.setState(0x8dc1, 0xe1b, 0x7480, 0xa110, 0x1777, 0x2b05, 0x0, 0x1);
        gbc.writeMem(0x8dc1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe1b, gbc.sp());
        EXPECT(0x8dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc1));
        EXPECT(0x73, gbc.readMem(0x8dc2));
        // CB 73 008C
        gbc.setState(0x8a65, 0x9e1d, 0xbb80, 0x8685, 0x3028, 0x8e6d, 0x0, 0x0);
        gbc.writeMem(0x8a65, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9e1d, gbc.sp());
        EXPECT(0x8a67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a65));
        EXPECT(0x73, gbc.readMem(0x8a66));
        // CB 73 008D
        gbc.setState(0x6b2f, 0x20b1, 0x87f0, 0x20f1, 0xb1fb, 0xb250, 0x0, 0x0);
        gbc.writeMem(0x6b2f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x20b1, gbc.sp());
        EXPECT(0x6b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 008E
        gbc.setState(0xcc4c, 0x30f0, 0xf2e0, 0x8e5d, 0x7f4f, 0xf52c, 0x0, 0x1);
        gbc.writeMem(0xcc4c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x30f0, gbc.sp());
        EXPECT(0xcc4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4c));
        EXPECT(0x73, gbc.readMem(0xcc4d));
        // CB 73 008F
        gbc.setState(0x2888, 0x5f89, 0xb1d0, 0xec82, 0x1eaa, 0x3ddd, 0x0, 0x1);
        gbc.writeMem(0x2888, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5f89, gbc.sp());
        EXPECT(0x288a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0090
        gbc.setState(0x4c71, 0x3354, 0x5e30, 0x7f6f, 0xb969, 0x94c5, 0x0, 0x1);
        gbc.writeMem(0x4c71, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3354, gbc.sp());
        EXPECT(0x4c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0091
        gbc.setState(0xcd9, 0xfd93, 0x71c0, 0xbd9f, 0xe544, 0x6395, 0x1, 0x0);
        gbc.writeMem(0xcd9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfd93, gbc.sp());
        EXPECT(0xcdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0092
        gbc.setState(0x4c2f, 0xdf86, 0x9480, 0x1380, 0xb219, 0x3b0f, 0x1, 0x0);
        gbc.writeMem(0x4c2f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdf86, gbc.sp());
        EXPECT(0x4c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0093
        gbc.setState(0xd670, 0xe979, 0xea60, 0x2ef1, 0x4b82, 0xfb11, 0x0, 0x0);
        gbc.writeMem(0xd670, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe979, gbc.sp());
        EXPECT(0xd672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd670));
        EXPECT(0x73, gbc.readMem(0xd671));
        // CB 73 0094
        gbc.setState(0x9009, 0xbea6, 0x79b0, 0xe6fc, 0xbfd8, 0xfc88, 0x1, 0x1);
        gbc.writeMem(0x9009, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbea6, gbc.sp());
        EXPECT(0x900b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9009));
        EXPECT(0x73, gbc.readMem(0x900a));
        // CB 73 0095
        gbc.setState(0x7794, 0x7030, 0xeef0, 0x5009, 0xaed2, 0x1e19, 0x0, 0x1);
        gbc.writeMem(0x7794, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7030, gbc.sp());
        EXPECT(0x7796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0097
        gbc.setState(0x2eca, 0xe9d6, 0xd180, 0x3617, 0x2f9e, 0x2f3, 0x1, 0x0);
        gbc.writeMem(0x2eca, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe9d6, gbc.sp());
        EXPECT(0x2ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0098
        gbc.setState(0xe846, 0xfc48, 0xbf90, 0xd094, 0xbd6c, 0x2089, 0x0, 0x0);
        gbc.writeMem(0xe846, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfc48, gbc.sp());
        EXPECT(0xe848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe846));
        EXPECT(0x73, gbc.readMem(0xe847));
        // CB 73 0099
        gbc.setState(0x9b53, 0x6c8c, 0xf3b0, 0x6513, 0x9e65, 0x814d, 0x0, 0x1);
        gbc.writeMem(0x9b53, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6c8c, gbc.sp());
        EXPECT(0x9b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b53));
        EXPECT(0x73, gbc.readMem(0x9b54));
        // CB 73 009A
        gbc.setState(0xa00c, 0x5b4, 0xf60, 0xd4f3, 0x542a, 0x4068, 0x1, 0x1);
        gbc.writeMem(0xa00c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5b4, gbc.sp());
        EXPECT(0xa00e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00c));
        EXPECT(0x73, gbc.readMem(0xa00d));
        // CB 73 009B
        gbc.setState(0x2126, 0x96a8, 0x2c30, 0xe6ae, 0xef95, 0xdd7c, 0x0, 0x1);
        gbc.writeMem(0x2126, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x96a8, gbc.sp());
        EXPECT(0x2128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 009C
        gbc.setState(0xb860, 0x41d6, 0xd2c0, 0x68d7, 0x9555, 0x74e4, 0x0, 0x1);
        gbc.writeMem(0xb860, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x41d6, gbc.sp());
        EXPECT(0xb862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb860));
        EXPECT(0x73, gbc.readMem(0xb861));
        // CB 73 009D
        gbc.setState(0xb97e, 0xa8e4, 0x4810, 0xa27, 0xc46e, 0x969a, 0x0, 0x0);
        gbc.writeMem(0xb97e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa8e4, gbc.sp());
        EXPECT(0xb980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97e));
        EXPECT(0x73, gbc.readMem(0xb97f));
        // CB 73 009E
        gbc.setState(0xeff3, 0xeebf, 0xe880, 0x98c9, 0x13fd, 0xc2c1, 0x0, 0x0);
        gbc.writeMem(0xeff3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xeebf, gbc.sp());
        EXPECT(0xeff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff3));
        EXPECT(0x73, gbc.readMem(0xeff4));
        // CB 73 009F
        gbc.setState(0xb1a6, 0xeec, 0x1570, 0x36fc, 0xe565, 0xd639, 0x1, 0x1);
        gbc.writeMem(0xb1a6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xeec, gbc.sp());
        EXPECT(0xb1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a6));
        EXPECT(0x73, gbc.readMem(0xb1a7));
        // CB 73 00A0
        gbc.setState(0x452d, 0xcd45, 0x2220, 0x7876, 0xb52f, 0xbdc9, 0x0, 0x0);
        gbc.writeMem(0x452d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcd45, gbc.sp());
        EXPECT(0x452f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00A1
        gbc.setState(0x9138, 0x245f, 0x5350, 0xc54e, 0xed2b, 0xd005, 0x0, 0x1);
        gbc.writeMem(0x9138, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x245f, gbc.sp());
        EXPECT(0x913a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9138));
        EXPECT(0x73, gbc.readMem(0x9139));
        // CB 73 00A2
        gbc.setState(0x6167, 0xb6d, 0xd2b0, 0xc215, 0xfb40, 0xad8e, 0x1, 0x1);
        gbc.writeMem(0x6167, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb6d, gbc.sp());
        EXPECT(0x6169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00A3
        gbc.setState(0x18f, 0xe3bc, 0xb060, 0x5696, 0x666d, 0x5884, 0x0, 0x1);
        gbc.writeMem(0x18f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe3bc, gbc.sp());
        EXPECT(0x191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00A4
        gbc.setState(0x4705, 0x12a3, 0x9750, 0xea80, 0xef37, 0xfea2, 0x1, 0x1);
        gbc.writeMem(0x4705, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x12a3, gbc.sp());
        EXPECT(0x4707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00A5
        gbc.setState(0x28d7, 0x7e9, 0xfac0, 0x9c2f, 0xf43, 0x19ef, 0x0, 0x1);
        gbc.writeMem(0x28d7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7e9, gbc.sp());
        EXPECT(0x28d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00A6
        gbc.setState(0x39e5, 0xfe01, 0xc700, 0xd726, 0xcbc7, 0x557e, 0x1, 0x1);
        gbc.writeMem(0x39e5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfe01, gbc.sp());
        EXPECT(0x39e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00A7
        gbc.setState(0x908, 0x2124, 0xf2b0, 0x3a65, 0x7fae, 0xf6a9, 0x0, 0x1);
        gbc.writeMem(0x908, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2124, gbc.sp());
        EXPECT(0x90a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00A8
        gbc.setState(0x83e9, 0xc9e8, 0x9d0, 0x8092, 0x1d61, 0xa147, 0x1, 0x0);
        gbc.writeMem(0x83e9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc9e8, gbc.sp());
        EXPECT(0x83eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e9));
        EXPECT(0x73, gbc.readMem(0x83ea));
        // CB 73 00A9
        gbc.setState(0xa4ae, 0x5e76, 0x2fe0, 0x6bde, 0xe42b, 0x3be5, 0x0, 0x1);
        gbc.writeMem(0xa4ae, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5e76, gbc.sp());
        EXPECT(0xa4b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ae));
        EXPECT(0x73, gbc.readMem(0xa4af));
        // CB 73 00AA
        gbc.setState(0xdb8d, 0x6733, 0xce90, 0xccbd, 0xf88b, 0x8c1b, 0x1, 0x0);
        gbc.writeMem(0xdb8d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6733, gbc.sp());
        EXPECT(0xdb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8d));
        EXPECT(0x73, gbc.readMem(0xdb8e));
        // CB 73 00AB
        gbc.setState(0x9250, 0x2722, 0xd680, 0xdcd0, 0x4706, 0x8611, 0x1, 0x0);
        gbc.writeMem(0x9250, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2722, gbc.sp());
        EXPECT(0x9252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9250));
        EXPECT(0x73, gbc.readMem(0x9251));
        // CB 73 00AC
        gbc.setState(0x373c, 0x2d2, 0x4bd0, 0xb4f4, 0x8aee, 0xc72c, 0x0, 0x0);
        gbc.writeMem(0x373c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2d2, gbc.sp());
        EXPECT(0x373e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00AD
        gbc.setState(0x3d43, 0x60a6, 0x3ce0, 0x87c9, 0x6cca, 0xba75, 0x0, 0x0);
        gbc.writeMem(0x3d43, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x60a6, gbc.sp());
        EXPECT(0x3d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00AE
        gbc.setState(0xd75b, 0x34ba, 0xe370, 0xd1f3, 0xb749, 0x2885, 0x1, 0x0);
        gbc.writeMem(0xd75b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x34ba, gbc.sp());
        EXPECT(0xd75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75b));
        EXPECT(0x73, gbc.readMem(0xd75c));
        // CB 73 00AF
        gbc.setState(0xb273, 0x8974, 0x260, 0x18ad, 0x5c8a, 0x7e1b, 0x1, 0x1);
        gbc.writeMem(0xb273, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8974, gbc.sp());
        EXPECT(0xb275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb273));
        EXPECT(0x73, gbc.readMem(0xb274));
        // CB 73 00B0
        gbc.setState(0x9144, 0xb571, 0xf770, 0x8c15, 0x9cc2, 0xbbb0, 0x1, 0x1);
        gbc.writeMem(0x9144, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb571, gbc.sp());
        EXPECT(0x9146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9144));
        EXPECT(0x73, gbc.readMem(0x9145));
        // CB 73 00B1
        gbc.setState(0x8821, 0x3944, 0x2e40, 0xa77, 0x29f7, 0x684b, 0x1, 0x1);
        gbc.writeMem(0x8821, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3944, gbc.sp());
        EXPECT(0x8823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8821));
        EXPECT(0x73, gbc.readMem(0x8822));
        // CB 73 00B2
        gbc.setState(0x3bdb, 0xb630, 0x3710, 0xcc42, 0xb566, 0xc43e, 0x1, 0x1);
        gbc.writeMem(0x3bdb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb630, gbc.sp());
        EXPECT(0x3bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00B3
        gbc.setState(0xb18d, 0x5917, 0x6110, 0x7ad0, 0xa846, 0xe449, 0x0, 0x0);
        gbc.writeMem(0xb18d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5917, gbc.sp());
        EXPECT(0xb18f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18d));
        EXPECT(0x73, gbc.readMem(0xb18e));
        // CB 73 00B4
        gbc.setState(0xb1c6, 0x8379, 0xffa0, 0xb9e6, 0x43c2, 0xe852, 0x1, 0x1);
        gbc.writeMem(0xb1c6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8379, gbc.sp());
        EXPECT(0xb1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c6));
        EXPECT(0x73, gbc.readMem(0xb1c7));
        // CB 73 00B5
        gbc.setState(0x1be9, 0xd35d, 0x49c0, 0x5486, 0x5741, 0xe61d, 0x1, 0x1);
        gbc.writeMem(0x1be9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd35d, gbc.sp());
        EXPECT(0x1beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00B6
        gbc.setState(0x1a6e, 0xca10, 0x94c0, 0x1bb, 0xcd3b, 0xcd5d, 0x0, 0x1);
        gbc.writeMem(0x1a6e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xca10, gbc.sp());
        EXPECT(0x1a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00B7
        gbc.setState(0xc492, 0x575e, 0x5300, 0x5c2a, 0x7d0d, 0x3b22, 0x0, 0x1);
        gbc.writeMem(0xc492, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x575e, gbc.sp());
        EXPECT(0xc494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc492));
        EXPECT(0x73, gbc.readMem(0xc493));
        // CB 73 00B8
        gbc.setState(0xc93c, 0xe353, 0xebf0, 0x8eb2, 0x476c, 0xb224, 0x1, 0x1);
        gbc.writeMem(0xc93c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe353, gbc.sp());
        EXPECT(0xc93e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93c));
        EXPECT(0x73, gbc.readMem(0xc93d));
        // CB 73 00B9
        gbc.setState(0xc9b6, 0x9b26, 0x29e0, 0x35c5, 0x4039, 0x4d54, 0x1, 0x1);
        gbc.writeMem(0xc9b6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9b26, gbc.sp());
        EXPECT(0xc9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b6));
        EXPECT(0x73, gbc.readMem(0xc9b7));
        // CB 73 00BA
        gbc.setState(0x5a4e, 0x3901, 0x4080, 0x4638, 0x672b, 0x66df, 0x0, 0x0);
        gbc.writeMem(0x5a4e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3901, gbc.sp());
        EXPECT(0x5a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00BC
        gbc.setState(0x1a82, 0x2235, 0xb880, 0xbbc3, 0xeb63, 0x5e13, 0x1, 0x0);
        gbc.writeMem(0x1a82, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2235, gbc.sp());
        EXPECT(0x1a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00BD
        gbc.setState(0xa526, 0x45dc, 0xd2a0, 0x1bd4, 0x5889, 0x1279, 0x1, 0x0);
        gbc.writeMem(0xa526, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x45dc, gbc.sp());
        EXPECT(0xa528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa526));
        EXPECT(0x73, gbc.readMem(0xa527));
        // CB 73 00BE
        gbc.setState(0x25e9, 0x4cb1, 0xaeb0, 0xb806, 0x38aa, 0x8f13, 0x0, 0x1);
        gbc.writeMem(0x25e9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4cb1, gbc.sp());
        EXPECT(0x25eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00BF
        gbc.setState(0x9b1, 0xd838, 0xf9a0, 0x8389, 0x8108, 0x7207, 0x0, 0x1);
        gbc.writeMem(0x9b1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd838, gbc.sp());
        EXPECT(0x9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00C0
        gbc.setState(0x6c70, 0x5778, 0x56b0, 0xd2b7, 0xa30d, 0xea8f, 0x0, 0x1);
        gbc.writeMem(0x6c70, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5778, gbc.sp());
        EXPECT(0x6c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00C1
        gbc.setState(0x8948, 0x200b, 0xdb00, 0x2a55, 0xd734, 0x6982, 0x0, 0x0);
        gbc.writeMem(0x8948, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x200b, gbc.sp());
        EXPECT(0x894a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8948));
        EXPECT(0x73, gbc.readMem(0x8949));
        // CB 73 00C2
        gbc.setState(0x3e84, 0xce52, 0x590, 0xb364, 0x46da, 0x9258, 0x0, 0x1);
        gbc.writeMem(0x3e84, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xce52, gbc.sp());
        EXPECT(0x3e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00C3
        gbc.setState(0x9af0, 0xcf04, 0xe9a0, 0xdf5d, 0x8212, 0x7d1f, 0x1, 0x0);
        gbc.writeMem(0x9af0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcf04, gbc.sp());
        EXPECT(0x9af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af0));
        EXPECT(0x73, gbc.readMem(0x9af1));
        // CB 73 00C4
        gbc.setState(0x175a, 0x66ed, 0x4c10, 0x861f, 0xfafc, 0x9a0e, 0x0, 0x0);
        gbc.writeMem(0x175a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x66ed, gbc.sp());
        EXPECT(0x175c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00C5
        gbc.setState(0xbd94, 0xde10, 0xd080, 0x321a, 0xc2a1, 0x9e4c, 0x0, 0x1);
        gbc.writeMem(0xbd94, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xde10, gbc.sp());
        EXPECT(0xbd96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd94));
        EXPECT(0x73, gbc.readMem(0xbd95));
        // CB 73 00C6
        gbc.setState(0x3254, 0x96ff, 0xf020, 0x36b7, 0xd21a, 0xe4be, 0x0, 0x0);
        gbc.writeMem(0x3254, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x96ff, gbc.sp());
        EXPECT(0x3256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00C7
        gbc.setState(0xe0c0, 0x7a67, 0xd0c0, 0xb967, 0x4ea1, 0x72d4, 0x0, 0x0);
        gbc.writeMem(0xe0c0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7a67, gbc.sp());
        EXPECT(0xe0c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c0));
        EXPECT(0x73, gbc.readMem(0xe0c1));
        // CB 73 00C8
        gbc.setState(0xe5cd, 0x2e58, 0xda70, 0x1dfd, 0x247e, 0x13c, 0x0, 0x1);
        gbc.writeMem(0xe5cd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2e58, gbc.sp());
        EXPECT(0xe5cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5cd));
        EXPECT(0x73, gbc.readMem(0xe5ce));
        // CB 73 00C9
        gbc.setState(0xe46a, 0xc025, 0x4d90, 0x5222, 0x85f4, 0xee98, 0x0, 0x1);
        gbc.writeMem(0xe46a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc025, gbc.sp());
        EXPECT(0xe46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe46a));
        EXPECT(0x73, gbc.readMem(0xe46b));
        // CB 73 00CA
        gbc.setState(0x22f5, 0x5cb6, 0xb250, 0xc13, 0x897f, 0x4a5, 0x0, 0x0);
        gbc.writeMem(0x22f5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5cb6, gbc.sp());
        EXPECT(0x22f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00CB
        gbc.setState(0x185f, 0x6f18, 0x2870, 0x8e2, 0x7915, 0xfbd6, 0x1, 0x0);
        gbc.writeMem(0x185f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6f18, gbc.sp());
        EXPECT(0x1861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00CC
        gbc.setState(0x26e1, 0x57d7, 0xa940, 0x86d2, 0x605a, 0x6651, 0x0, 0x1);
        gbc.writeMem(0x26e1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x57d7, gbc.sp());
        EXPECT(0x26e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00CD
        gbc.setState(0xc8d3, 0xd21c, 0xb540, 0x94d0, 0xa944, 0x67c8, 0x1, 0x0);
        gbc.writeMem(0xc8d3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd21c, gbc.sp());
        EXPECT(0xc8d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d3));
        EXPECT(0x73, gbc.readMem(0xc8d4));
        // CB 73 00CE
        gbc.setState(0x1da2, 0x259c, 0x140, 0xd0bb, 0xff93, 0xec6a, 0x1, 0x1);
        gbc.writeMem(0x1da2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x259c, gbc.sp());
        EXPECT(0x1da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00CF
        gbc.setState(0x32b6, 0xa6b8, 0x9660, 0x8193, 0x368e, 0xea36, 0x1, 0x0);
        gbc.writeMem(0x32b6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa6b8, gbc.sp());
        EXPECT(0x32b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00D0
        gbc.setState(0x2d2e, 0xcf95, 0xec50, 0x5827, 0x4adb, 0xcb65, 0x0, 0x0);
        gbc.writeMem(0x2d2e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcf95, gbc.sp());
        EXPECT(0x2d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00D1
        gbc.setState(0x2a19, 0xa286, 0x1e70, 0xd1ce, 0xd9b1, 0x81b5, 0x0, 0x0);
        gbc.writeMem(0x2a19, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa286, gbc.sp());
        EXPECT(0x2a1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00D3
        gbc.setState(0x150e, 0x1135, 0x8500, 0x35da, 0xc855, 0xe08d, 0x1, 0x0);
        gbc.writeMem(0x150e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1135, gbc.sp());
        EXPECT(0x1510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00D4
        gbc.setState(0x4ec, 0x8102, 0xd020, 0x8ef, 0x7f34, 0xa44, 0x1, 0x1);
        gbc.writeMem(0x4ec, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8102, gbc.sp());
        EXPECT(0x4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00D5
        gbc.setState(0xcdce, 0xe75c, 0x4e40, 0xf45c, 0xa368, 0x5e60, 0x0, 0x0);
        gbc.writeMem(0xcdce, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe75c, gbc.sp());
        EXPECT(0xcdd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdce));
        EXPECT(0x73, gbc.readMem(0xcdcf));
        // CB 73 00D6
        gbc.setState(0x645, 0x1a98, 0x9d10, 0x1f4c, 0x6252, 0xa4e5, 0x1, 0x0);
        gbc.writeMem(0x645, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1a98, gbc.sp());
        EXPECT(0x647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00D7
        gbc.setState(0xb7ca, 0x6fa2, 0xe6c0, 0x7c05, 0xbb90, 0x88b2, 0x0, 0x0);
        gbc.writeMem(0xb7ca, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6fa2, gbc.sp());
        EXPECT(0xb7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ca));
        EXPECT(0x73, gbc.readMem(0xb7cb));
        // CB 73 00D8
        gbc.setState(0xca39, 0xec8c, 0x2490, 0x9212, 0x4223, 0x7bcf, 0x1, 0x1);
        gbc.writeMem(0xca39, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xec8c, gbc.sp());
        EXPECT(0xca3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca39));
        EXPECT(0x73, gbc.readMem(0xca3a));
        // CB 73 00D9
        gbc.setState(0x6c42, 0xd0df, 0x6aa0, 0x9b30, 0xe45, 0x8d97, 0x1, 0x1);
        gbc.writeMem(0x6c42, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd0df, gbc.sp());
        EXPECT(0x6c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00DA
        gbc.setState(0xbd2d, 0xea90, 0xf440, 0x66b3, 0xa35e, 0x45ad, 0x0, 0x1);
        gbc.writeMem(0xbd2d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xea90, gbc.sp());
        EXPECT(0xbd2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2d));
        EXPECT(0x73, gbc.readMem(0xbd2e));
        // CB 73 00DB
        gbc.setState(0x6225, 0x122c, 0xed20, 0x7b14, 0x6ecd, 0xfbfa, 0x0, 0x1);
        gbc.writeMem(0x6225, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x122c, gbc.sp());
        EXPECT(0x6227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00DC
        gbc.setState(0xd1da, 0x1c63, 0x2160, 0xc33f, 0x62c, 0x20cc, 0x0, 0x1);
        gbc.writeMem(0xd1da, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1c63, gbc.sp());
        EXPECT(0xd1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1da));
        EXPECT(0x73, gbc.readMem(0xd1db));
        // CB 73 00DD
        gbc.setState(0x7a55, 0x71c0, 0xe550, 0x377, 0xc3f9, 0x78b2, 0x1, 0x1);
        gbc.writeMem(0x7a55, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x71c0, gbc.sp());
        EXPECT(0x7a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00DE
        gbc.setState(0x4f6, 0x80a3, 0xcc0, 0x114e, 0x2483, 0x8146, 0x0, 0x0);
        gbc.writeMem(0x4f6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x80a3, gbc.sp());
        EXPECT(0x4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00DF
        gbc.setState(0xc5c4, 0x30be, 0x40a0, 0x123, 0x5940, 0xf477, 0x0, 0x1);
        gbc.writeMem(0xc5c4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x30be, gbc.sp());
        EXPECT(0xc5c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c4));
        EXPECT(0x73, gbc.readMem(0xc5c5));
        // CB 73 00E0
        gbc.setState(0x2e, 0x9f79, 0xb2c0, 0x7040, 0xff0f, 0x2b33, 0x1, 0x1);
        gbc.writeMem(0x2e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9f79, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00E1
        gbc.setState(0xd1c5, 0x8430, 0xe480, 0xa62d, 0x8fe6, 0xefc7, 0x1, 0x0);
        gbc.writeMem(0xd1c5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8430, gbc.sp());
        EXPECT(0xd1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c5));
        EXPECT(0x73, gbc.readMem(0xd1c6));
        // CB 73 00E2
        gbc.setState(0xa789, 0xbf06, 0x2e60, 0x53f7, 0x1fc7, 0x848f, 0x0, 0x0);
        gbc.writeMem(0xa789, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbf06, gbc.sp());
        EXPECT(0xa78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa789));
        EXPECT(0x73, gbc.readMem(0xa78a));
        // CB 73 00E3
        gbc.setState(0x735, 0x96f3, 0x9c20, 0x6722, 0x90f9, 0x1622, 0x1, 0x1);
        gbc.writeMem(0x735, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x96f3, gbc.sp());
        EXPECT(0x737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00E4
        gbc.setState(0xa33c, 0xf400, 0xac00, 0xde13, 0xf2bd, 0xf90c, 0x0, 0x1);
        gbc.writeMem(0xa33c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf400, gbc.sp());
        EXPECT(0xa33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33c));
        EXPECT(0x73, gbc.readMem(0xa33d));
        // CB 73 00E5
        gbc.setState(0x76af, 0xef7a, 0x8740, 0x9269, 0xe9cf, 0xaaec, 0x1, 0x0);
        gbc.writeMem(0x76af, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xef7a, gbc.sp());
        EXPECT(0x76b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00E6
        gbc.setState(0xb9dd, 0xce38, 0x4030, 0xe61e, 0xca83, 0x9dbf, 0x0, 0x0);
        gbc.writeMem(0xb9dd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xce38, gbc.sp());
        EXPECT(0xb9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9dd));
        EXPECT(0x73, gbc.readMem(0xb9de));
        // CB 73 00E7
        gbc.setState(0x2eca, 0x44ff, 0xfa40, 0xb075, 0xed86, 0x140, 0x1, 0x1);
        gbc.writeMem(0x2eca, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x44ff, gbc.sp());
        EXPECT(0x2ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00E8
        gbc.setState(0xd5fb, 0x694d, 0x31e0, 0x6e77, 0x526d, 0x6013, 0x1, 0x0);
        gbc.writeMem(0xd5fb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x694d, gbc.sp());
        EXPECT(0xd5fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5fb));
        EXPECT(0x73, gbc.readMem(0xd5fc));
        // CB 73 00E9
        gbc.setState(0x9c10, 0x948d, 0x99d0, 0x846f, 0x635b, 0xc8a2, 0x1, 0x1);
        gbc.writeMem(0x9c10, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x948d, gbc.sp());
        EXPECT(0x9c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c10));
        EXPECT(0x73, gbc.readMem(0x9c11));
        // CB 73 00EA
        gbc.setState(0x46f7, 0x19a0, 0x9180, 0x5e73, 0xa952, 0x545a, 0x1, 0x0);
        gbc.writeMem(0x46f7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x19a0, gbc.sp());
        EXPECT(0x46f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00EB
        gbc.setState(0x2ae0, 0xb9f4, 0xfc0, 0xc438, 0x77f, 0xfe98, 0x0, 0x0);
        gbc.writeMem(0x2ae0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb9f4, gbc.sp());
        EXPECT(0x2ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00EC
        gbc.setState(0x5242, 0x93eb, 0xbda0, 0x2cdf, 0xed66, 0x3402, 0x1, 0x0);
        gbc.writeMem(0x5242, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x93eb, gbc.sp());
        EXPECT(0x5244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00ED
        gbc.setState(0x4807, 0x87ab, 0x8580, 0xec6, 0x63ad, 0x60cf, 0x0, 0x0);
        gbc.writeMem(0x4807, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x87ab, gbc.sp());
        EXPECT(0x4809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00EE
        gbc.setState(0x2877, 0xdc88, 0xeea0, 0x5912, 0xa93e, 0x4fc, 0x0, 0x0);
        gbc.writeMem(0x2877, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdc88, gbc.sp());
        EXPECT(0x2879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00EF
        gbc.setState(0xbdf1, 0x8256, 0x10b0, 0x285e, 0xfea7, 0x9c87, 0x1, 0x0);
        gbc.writeMem(0xbdf1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8256, gbc.sp());
        EXPECT(0xbdf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf1));
        EXPECT(0x73, gbc.readMem(0xbdf2));
        // CB 73 00F0
        gbc.setState(0x501b, 0xfe5c, 0xe5a0, 0x86d8, 0xa637, 0x2042, 0x1, 0x1);
        gbc.writeMem(0x501b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfe5c, gbc.sp());
        EXPECT(0x501d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00F1
        gbc.setState(0x1a6b, 0x682f, 0x94e0, 0x86ce, 0x4055, 0xb82a, 0x0, 0x0);
        gbc.writeMem(0x1a6b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x682f, gbc.sp());
        EXPECT(0x1a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00F2
        gbc.setState(0x874e, 0x3f2f, 0x5200, 0xe1, 0xcbb2, 0x48fa, 0x1, 0x1);
        gbc.writeMem(0x874e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3f2f, gbc.sp());
        EXPECT(0x8750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874e));
        EXPECT(0x73, gbc.readMem(0x874f));
        // CB 73 00F3
        gbc.setState(0x7d08, 0xc100, 0xc530, 0x33d, 0xba2f, 0x358d, 0x1, 0x0);
        gbc.writeMem(0x7d08, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc100, gbc.sp());
        EXPECT(0x7d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00F4
        gbc.setState(0x6e38, 0x3f2f, 0x660, 0x204a, 0x7618, 0x1b9e, 0x0, 0x0);
        gbc.writeMem(0x6e38, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3f2f, gbc.sp());
        EXPECT(0x6e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00F5
        gbc.setState(0x83ee, 0xe39d, 0x9440, 0xe0bb, 0xa3a, 0xa87b, 0x0, 0x1);
        gbc.writeMem(0x83ee, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe39d, gbc.sp());
        EXPECT(0x83f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ee));
        EXPECT(0x73, gbc.readMem(0x83ef));
        // CB 73 00F6
        gbc.setState(0x6bd0, 0x5058, 0xbfa0, 0xb863, 0xcdac, 0xaa21, 0x0, 0x0);
        gbc.writeMem(0x6bd0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5058, gbc.sp());
        EXPECT(0x6bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00F7
        gbc.setState(0xb18, 0xfde0, 0x9f00, 0xd29d, 0xbfeb, 0x50e4, 0x0, 0x0);
        gbc.writeMem(0xb18, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfde0, gbc.sp());
        EXPECT(0xb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00F8
        gbc.setState(0x78ab, 0xf329, 0x5d90, 0x9175, 0x19b3, 0x81f8, 0x0, 0x0);
        gbc.writeMem(0x78ab, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf329, gbc.sp());
        EXPECT(0x78ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00F9
        gbc.setState(0xe28d, 0xc71b, 0x9910, 0x5eda, 0xd302, 0x7a37, 0x1, 0x1);
        gbc.writeMem(0xe28d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc71b, gbc.sp());
        EXPECT(0xe28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe28d));
        EXPECT(0x73, gbc.readMem(0xe28e));
        // CB 73 00FA
        gbc.setState(0x19f0, 0x414a, 0xfee0, 0x3be5, 0xa582, 0x90bf, 0x1, 0x0);
        gbc.writeMem(0x19f0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x414a, gbc.sp());
        EXPECT(0x19f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 00FB
        gbc.setState(0xa64f, 0xc4cf, 0x1a10, 0xd319, 0x1ac3, 0x174c, 0x1, 0x1);
        gbc.writeMem(0xa64f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc4cf, gbc.sp());
        EXPECT(0xa651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64f));
        EXPECT(0x73, gbc.readMem(0xa650));
        // CB 73 00FC
        gbc.setState(0x2c0e, 0x70eb, 0x8cb0, 0xdaf9, 0x4e3, 0x6698, 0x1, 0x0);
        gbc.writeMem(0x2c0e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x70eb, gbc.sp());
        EXPECT(0x2c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00FD
        gbc.setState(0x9864, 0xbb24, 0x2cb0, 0x515e, 0xb424, 0xfa8b, 0x1, 0x0);
        gbc.writeMem(0x9864, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbb24, gbc.sp());
        EXPECT(0x9866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9864));
        EXPECT(0x73, gbc.readMem(0x9865));
        // CB 73 00FE
        gbc.setState(0x5de8, 0xe3e1, 0xdb70, 0x1988, 0x6085, 0xb993, 0x1, 0x1);
        gbc.writeMem(0x5de8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe3e1, gbc.sp());
        EXPECT(0x5dea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 00FF
        gbc.setState(0xdf0e, 0xc85, 0xbd0, 0x23fd, 0x25ce, 0x6ec7, 0x1, 0x1);
        gbc.writeMem(0xdf0e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc85, gbc.sp());
        EXPECT(0xdf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf0e));
        EXPECT(0x73, gbc.readMem(0xdf0f));
        // CB 73 0100
        gbc.setState(0x6a04, 0x422, 0x5bc0, 0x83de, 0x8e05, 0x1350, 0x0, 0x0);
        gbc.writeMem(0x6a04, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x422, gbc.sp());
        EXPECT(0x6a06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0101
        gbc.setState(0x69df, 0x2224, 0x5210, 0x6675, 0x2d60, 0x3bb5, 0x0, 0x0);
        gbc.writeMem(0x69df, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2224, gbc.sp());
        EXPECT(0x69e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0102
        gbc.setState(0x5b4d, 0xd4ab, 0xbe40, 0x7846, 0xf699, 0x6979, 0x1, 0x0);
        gbc.writeMem(0x5b4d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd4ab, gbc.sp());
        EXPECT(0x5b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0103
        gbc.setState(0xa0d5, 0x98b7, 0x8890, 0xac05, 0x78ee, 0x48d8, 0x1, 0x0);
        gbc.writeMem(0xa0d5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x98b7, gbc.sp());
        EXPECT(0xa0d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d5));
        EXPECT(0x73, gbc.readMem(0xa0d6));
        // CB 73 0104
        gbc.setState(0x29d3, 0x2dd6, 0x3ec0, 0x4e7, 0x7030, 0xee33, 0x0, 0x0);
        gbc.writeMem(0x29d3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2dd6, gbc.sp());
        EXPECT(0x29d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0105
        gbc.setState(0xe533, 0x4853, 0xd1a0, 0xeee2, 0xcef6, 0x40a, 0x1, 0x1);
        gbc.writeMem(0xe533, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4853, gbc.sp());
        EXPECT(0xe535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe533));
        EXPECT(0x73, gbc.readMem(0xe534));
        // CB 73 0106
        gbc.setState(0xb9da, 0x3557, 0xaa20, 0xf7e9, 0x86c, 0x3a52, 0x0, 0x0);
        gbc.writeMem(0xb9da, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3557, gbc.sp());
        EXPECT(0xb9dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9da));
        EXPECT(0x73, gbc.readMem(0xb9db));
        // CB 73 0107
        gbc.setState(0xa9e6, 0xb94b, 0x3f0, 0x965b, 0x446d, 0xfd1b, 0x0, 0x0);
        gbc.writeMem(0xa9e6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb94b, gbc.sp());
        EXPECT(0xa9e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e6));
        EXPECT(0x73, gbc.readMem(0xa9e7));
        // CB 73 0108
        gbc.setState(0xc8e4, 0x5f78, 0x9f0, 0x92cd, 0xc656, 0xd64b, 0x0, 0x1);
        gbc.writeMem(0xc8e4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5f78, gbc.sp());
        EXPECT(0xc8e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e4));
        EXPECT(0x73, gbc.readMem(0xc8e5));
        // CB 73 0109
        gbc.setState(0xc736, 0xf5b9, 0x5100, 0x9618, 0x3220, 0x26e5, 0x0, 0x0);
        gbc.writeMem(0xc736, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf5b9, gbc.sp());
        EXPECT(0xc738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc736));
        EXPECT(0x73, gbc.readMem(0xc737));
        // CB 73 010A
        gbc.setState(0x529b, 0xb75, 0xfe30, 0x2baa, 0x715e, 0x90a6, 0x1, 0x1);
        gbc.writeMem(0x529b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb75, gbc.sp());
        EXPECT(0x529d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 010C
        gbc.setState(0x6107, 0x16cc, 0x5e70, 0xce68, 0xea9, 0xc2f7, 0x0, 0x0);
        gbc.writeMem(0x6107, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x16cc, gbc.sp());
        EXPECT(0x6109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 010D
        gbc.setState(0x96c1, 0x2963, 0x69c0, 0x5546, 0xa603, 0xb2ad, 0x0, 0x1);
        gbc.writeMem(0x96c1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2963, gbc.sp());
        EXPECT(0x96c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c1));
        EXPECT(0x73, gbc.readMem(0x96c2));
        // CB 73 010E
        gbc.setState(0x2174, 0x1dfc, 0xf850, 0x8bdd, 0x9f01, 0x42de, 0x1, 0x0);
        gbc.writeMem(0x2174, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1dfc, gbc.sp());
        EXPECT(0x2176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 010F
        gbc.setState(0x8c01, 0x4783, 0x7a80, 0x4c90, 0xcc97, 0x5b2a, 0x1, 0x0);
        gbc.writeMem(0x8c01, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4783, gbc.sp());
        EXPECT(0x8c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c01));
        EXPECT(0x73, gbc.readMem(0x8c02));
        // CB 73 0110
        gbc.setState(0x5b0c, 0x9e65, 0x44f0, 0x9d83, 0x1732, 0x997b, 0x1, 0x1);
        gbc.writeMem(0x5b0c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9e65, gbc.sp());
        EXPECT(0x5b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0111
        gbc.setState(0x78e2, 0x8646, 0x3ad0, 0x58d5, 0xd019, 0x926, 0x1, 0x1);
        gbc.writeMem(0x78e2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8646, gbc.sp());
        EXPECT(0x78e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0112
        gbc.setState(0x7180, 0x72bb, 0x1f40, 0x5848, 0x9f0b, 0x46bf, 0x1, 0x1);
        gbc.writeMem(0x7180, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x72bb, gbc.sp());
        EXPECT(0x7182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0113
        gbc.setState(0x15ba, 0x8337, 0x6030, 0x6e31, 0x5a51, 0x15cf, 0x1, 0x0);
        gbc.writeMem(0x15ba, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8337, gbc.sp());
        EXPECT(0x15bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0114
        gbc.setState(0x76d7, 0x427, 0xfa00, 0xee0e, 0x3864, 0x9bc8, 0x0, 0x0);
        gbc.writeMem(0x76d7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x427, gbc.sp());
        EXPECT(0x76d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0115
        gbc.setState(0x79c6, 0x93fd, 0x2cd0, 0xab36, 0xffc7, 0xc4d5, 0x0, 0x0);
        gbc.writeMem(0x79c6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x93fd, gbc.sp());
        EXPECT(0x79c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0116
        gbc.setState(0xcd4e, 0x80cf, 0xbd0, 0x3ff2, 0xb3ff, 0x50c0, 0x0, 0x0);
        gbc.writeMem(0xcd4e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x80cf, gbc.sp());
        EXPECT(0xcd50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd4e));
        EXPECT(0x73, gbc.readMem(0xcd4f));
        // CB 73 0117
        gbc.setState(0xdcec, 0x5fae, 0xa460, 0xc28e, 0x71f2, 0x6108, 0x1, 0x1);
        gbc.writeMem(0xdcec, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5fae, gbc.sp());
        EXPECT(0xdcee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcec));
        EXPECT(0x73, gbc.readMem(0xdced));
        // CB 73 0118
        gbc.setState(0xcfc5, 0x72a6, 0x2270, 0x40cf, 0x8838, 0x58e2, 0x0, 0x1);
        gbc.writeMem(0xcfc5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x72a6, gbc.sp());
        EXPECT(0xcfc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc5));
        EXPECT(0x73, gbc.readMem(0xcfc6));
        // CB 73 0119
        gbc.setState(0x276f, 0x8261, 0xedc0, 0x7e39, 0x1aa1, 0x500e, 0x0, 0x1);
        gbc.writeMem(0x276f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8261, gbc.sp());
        EXPECT(0x2771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 011A
        gbc.setState(0xb0a4, 0x4059, 0x5a30, 0x4f82, 0x9c45, 0x9b6a, 0x0, 0x0);
        gbc.writeMem(0xb0a4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4059, gbc.sp());
        EXPECT(0xb0a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a4));
        EXPECT(0x73, gbc.readMem(0xb0a5));
        // CB 73 011B
        gbc.setState(0x4bf, 0x9f0c, 0x2e00, 0x64bf, 0x7a90, 0x6e0b, 0x0, 0x1);
        gbc.writeMem(0x4bf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9f0c, gbc.sp());
        EXPECT(0x4c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 011C
        gbc.setState(0xc0c9, 0xa739, 0xf3e0, 0x3ca0, 0xc573, 0x8914, 0x0, 0x1);
        gbc.writeMem(0xc0c9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa739, gbc.sp());
        EXPECT(0xc0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c9));
        EXPECT(0x73, gbc.readMem(0xc0ca));
        // CB 73 011D
        gbc.setState(0x8790, 0xf746, 0xa900, 0xc2b7, 0x7040, 0xc8e8, 0x0, 0x1);
        gbc.writeMem(0x8790, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf746, gbc.sp());
        EXPECT(0x8792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8790));
        EXPECT(0x73, gbc.readMem(0x8791));
        // CB 73 011E
        gbc.setState(0x5bb9, 0x8be6, 0x5ef0, 0x5d27, 0x136a, 0x5ae8, 0x0, 0x1);
        gbc.writeMem(0x5bb9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8be6, gbc.sp());
        EXPECT(0x5bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 011F
        gbc.setState(0xa5ad, 0x928b, 0xa980, 0xf882, 0xdf35, 0x7f09, 0x1, 0x1);
        gbc.writeMem(0xa5ad, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x928b, gbc.sp());
        EXPECT(0xa5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ad));
        EXPECT(0x73, gbc.readMem(0xa5ae));
        // CB 73 0120
        gbc.setState(0x8e0e, 0x4142, 0x3050, 0x29ab, 0xf00c, 0x6d00, 0x0, 0x0);
        gbc.writeMem(0x8e0e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4142, gbc.sp());
        EXPECT(0x8e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0e));
        EXPECT(0x73, gbc.readMem(0x8e0f));
        // CB 73 0121
        gbc.setState(0x439a, 0xfaeb, 0x4a90, 0x236d, 0x8553, 0xe842, 0x1, 0x0);
        gbc.writeMem(0x439a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfaeb, gbc.sp());
        EXPECT(0x439c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0122
        gbc.setState(0xa837, 0xbf52, 0x2900, 0xe313, 0x11ad, 0x246c, 0x0, 0x0);
        gbc.writeMem(0xa837, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbf52, gbc.sp());
        EXPECT(0xa839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa837));
        EXPECT(0x73, gbc.readMem(0xa838));
        // CB 73 0123
        gbc.setState(0x40fe, 0xc166, 0x91d0, 0x1ee, 0xcaae, 0x7d08, 0x1, 0x0);
        gbc.writeMem(0x40fe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc166, gbc.sp());
        EXPECT(0x4100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0124
        gbc.setState(0xd529, 0xf22d, 0xe650, 0x59d7, 0x71a5, 0xe317, 0x1, 0x0);
        gbc.writeMem(0xd529, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf22d, gbc.sp());
        EXPECT(0xd52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd529));
        EXPECT(0x73, gbc.readMem(0xd52a));
        // CB 73 0125
        gbc.setState(0xcd13, 0x78c7, 0xe170, 0x5b33, 0x1cdf, 0x5b95, 0x0, 0x1);
        gbc.writeMem(0xcd13, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x78c7, gbc.sp());
        EXPECT(0xcd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd13));
        EXPECT(0x73, gbc.readMem(0xcd14));
        // CB 73 0126
        gbc.setState(0x978, 0x288a, 0x4950, 0x3188, 0x3e82, 0x8b5f, 0x1, 0x0);
        gbc.writeMem(0x978, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x288a, gbc.sp());
        EXPECT(0x97a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0127
        gbc.setState(0xa79a, 0x9c6f, 0xadb0, 0x9eb8, 0x2914, 0x325, 0x1, 0x1);
        gbc.writeMem(0xa79a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9c6f, gbc.sp());
        EXPECT(0xa79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79a));
        EXPECT(0x73, gbc.readMem(0xa79b));
        // CB 73 0128
        gbc.setState(0x1fdf, 0xf020, 0x29f0, 0x752b, 0x443b, 0x5b0, 0x0, 0x0);
        gbc.writeMem(0x1fdf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf020, gbc.sp());
        EXPECT(0x1fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0129
        gbc.setState(0x544, 0x4f82, 0x8630, 0xe2ac, 0x5a1a, 0xa0c2, 0x1, 0x1);
        gbc.writeMem(0x544, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4f82, gbc.sp());
        EXPECT(0x546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 012A
        gbc.setState(0x3ca3, 0x6f32, 0x7250, 0x77f0, 0x4f61, 0x4c38, 0x0, 0x0);
        gbc.writeMem(0x3ca3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6f32, gbc.sp());
        EXPECT(0x3ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 012B
        gbc.setState(0xd9f5, 0x2378, 0x5f60, 0xea20, 0x2245, 0x5331, 0x0, 0x0);
        gbc.writeMem(0xd9f5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2378, gbc.sp());
        EXPECT(0xd9f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f5));
        EXPECT(0x73, gbc.readMem(0xd9f6));
        // CB 73 012D
        gbc.setState(0xd23a, 0xa4fa, 0x96a0, 0x8c2b, 0x7f56, 0xbb11, 0x1, 0x0);
        gbc.writeMem(0xd23a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa4fa, gbc.sp());
        EXPECT(0xd23c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd23a));
        EXPECT(0x73, gbc.readMem(0xd23b));
        // CB 73 012E
        gbc.setState(0x66bb, 0xc3be, 0xcd40, 0x3e16, 0x3c7a, 0xbbb1, 0x0, 0x1);
        gbc.writeMem(0x66bb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc3be, gbc.sp());
        EXPECT(0x66bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 012F
        gbc.setState(0xb25e, 0x60, 0xff10, 0x8bcd, 0x62b3, 0x50c, 0x0, 0x1);
        gbc.writeMem(0xb25e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x60, gbc.sp());
        EXPECT(0xb260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25e));
        EXPECT(0x73, gbc.readMem(0xb25f));
        // CB 73 0130
        gbc.setState(0x97e7, 0xe1b3, 0x6660, 0x59b7, 0xe82a, 0x9748, 0x0, 0x1);
        gbc.writeMem(0x97e7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe1b3, gbc.sp());
        EXPECT(0x97e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e7));
        EXPECT(0x73, gbc.readMem(0x97e8));
        // CB 73 0132
        gbc.setState(0x3732, 0xbddc, 0x49d0, 0x2c31, 0xff8f, 0x15b, 0x0, 0x0);
        gbc.writeMem(0x3732, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbddc, gbc.sp());
        EXPECT(0x3734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0133
        gbc.setState(0x1bbb, 0x35e3, 0x21b0, 0xa492, 0x495d, 0xff5, 0x0, 0x1);
        gbc.writeMem(0x1bbb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x35e3, gbc.sp());
        EXPECT(0x1bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0134
        gbc.setState(0x3396, 0x37ca, 0xcc40, 0x7105, 0xc452, 0x3123, 0x1, 0x1);
        gbc.writeMem(0x3396, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x37ca, gbc.sp());
        EXPECT(0x3398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0135
        gbc.setState(0xa99, 0x4423, 0x7e60, 0xec41, 0x3faa, 0x9362, 0x0, 0x0);
        gbc.writeMem(0xa99, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4423, gbc.sp());
        EXPECT(0xa9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0136
        gbc.setState(0x42d4, 0x9e05, 0x9a40, 0xaf33, 0x2964, 0x8242, 0x0, 0x0);
        gbc.writeMem(0x42d4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9e05, gbc.sp());
        EXPECT(0x42d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0137
        gbc.setState(0x3abe, 0x872f, 0x7a20, 0xc4a1, 0x84b6, 0x7983, 0x1, 0x0);
        gbc.writeMem(0x3abe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x872f, gbc.sp());
        EXPECT(0x3ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0139
        gbc.setState(0x777, 0xba2, 0x4aa0, 0x5478, 0x447f, 0x5131, 0x0, 0x0);
        gbc.writeMem(0x777, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xba2, gbc.sp());
        EXPECT(0x779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 013A
        gbc.setState(0xb446, 0x4f3f, 0x2470, 0x9670, 0x8af5, 0xbbe2, 0x0, 0x1);
        gbc.writeMem(0xb446, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4f3f, gbc.sp());
        EXPECT(0xb448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb446));
        EXPECT(0x73, gbc.readMem(0xb447));
        // CB 73 013B
        gbc.setState(0x92cf, 0x421e, 0x80d0, 0xe1d7, 0x85d2, 0x5a45, 0x1, 0x0);
        gbc.writeMem(0x92cf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x421e, gbc.sp());
        EXPECT(0x92d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92cf));
        EXPECT(0x73, gbc.readMem(0x92d0));
        // CB 73 013C
        gbc.setState(0xa50a, 0x6599, 0xbe00, 0x624c, 0x606f, 0x917, 0x0, 0x0);
        gbc.writeMem(0xa50a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6599, gbc.sp());
        EXPECT(0xa50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50a));
        EXPECT(0x73, gbc.readMem(0xa50b));
        // CB 73 013D
        gbc.setState(0x4dae, 0xe48e, 0x5d20, 0xa4e5, 0x201a, 0x6497, 0x1, 0x1);
        gbc.writeMem(0x4dae, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe48e, gbc.sp());
        EXPECT(0x4db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 013F
        gbc.setState(0x4e44, 0xc9b8, 0x7880, 0xa8fa, 0x2b26, 0x5e9, 0x0, 0x0);
        gbc.writeMem(0x4e44, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc9b8, gbc.sp());
        EXPECT(0x4e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0140
        gbc.setState(0x9d75, 0x2e3, 0x78b0, 0x7c56, 0x71c, 0x805a, 0x0, 0x0);
        gbc.writeMem(0x9d75, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2e3, gbc.sp());
        EXPECT(0x9d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d75));
        EXPECT(0x73, gbc.readMem(0x9d76));
        // CB 73 0141
        gbc.setState(0xbb11, 0x2686, 0xa9e0, 0xe49, 0x9e4e, 0xbe95, 0x0, 0x1);
        gbc.writeMem(0xbb11, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2686, gbc.sp());
        EXPECT(0xbb13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb11));
        EXPECT(0x73, gbc.readMem(0xbb12));
        // CB 73 0142
        gbc.setState(0xe9ad, 0x2a23, 0x8190, 0x111e, 0x7df7, 0x3f4d, 0x0, 0x1);
        gbc.writeMem(0xe9ad, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2a23, gbc.sp());
        EXPECT(0xe9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ad));
        EXPECT(0x73, gbc.readMem(0xe9ae));
        // CB 73 0143
        gbc.setState(0x9900, 0xf7a8, 0x2c30, 0x1c7f, 0x4a47, 0xe0a6, 0x0, 0x1);
        gbc.writeMem(0x9900, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf7a8, gbc.sp());
        EXPECT(0x9902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9900));
        EXPECT(0x73, gbc.readMem(0x9901));
        // CB 73 0144
        gbc.setState(0xb2ba, 0x35f7, 0xf160, 0xe872, 0x7bdc, 0x925f, 0x0, 0x1);
        gbc.writeMem(0xb2ba, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x35f7, gbc.sp());
        EXPECT(0xb2bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ba));
        EXPECT(0x73, gbc.readMem(0xb2bb));
        // CB 73 0145
        gbc.setState(0x27af, 0x6bea, 0xb810, 0x641f, 0x9b7, 0xee8d, 0x0, 0x0);
        gbc.writeMem(0x27af, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6bea, gbc.sp());
        EXPECT(0x27b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0146
        gbc.setState(0x845c, 0x40ea, 0x9560, 0xc01a, 0x5d90, 0xf633, 0x0, 0x0);
        gbc.writeMem(0x845c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x40ea, gbc.sp());
        EXPECT(0x845e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845c));
        EXPECT(0x73, gbc.readMem(0x845d));
        // CB 73 0147
        gbc.setState(0x131f, 0xebc4, 0xc580, 0xddb2, 0x4245, 0x229e, 0x1, 0x1);
        gbc.writeMem(0x131f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xebc4, gbc.sp());
        EXPECT(0x1321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0149
        gbc.setState(0xa918, 0xf563, 0x4d80, 0x52ee, 0x7f7f, 0x2e6c, 0x0, 0x1);
        gbc.writeMem(0xa918, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf563, gbc.sp());
        EXPECT(0xa91a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa918));
        EXPECT(0x73, gbc.readMem(0xa919));
        // CB 73 014A
        gbc.setState(0x8b50, 0xef82, 0x2450, 0xef29, 0x50dc, 0x730b, 0x0, 0x1);
        gbc.writeMem(0x8b50, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xef82, gbc.sp());
        EXPECT(0x8b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b50));
        EXPECT(0x73, gbc.readMem(0x8b51));
        // CB 73 014B
        gbc.setState(0x479f, 0x7c74, 0xb0f0, 0xb54, 0x817e, 0xbec2, 0x1, 0x1);
        gbc.writeMem(0x479f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7c74, gbc.sp());
        EXPECT(0x47a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 014C
        gbc.setState(0xc336, 0x5f7f, 0x6f30, 0xc917, 0x3e3c, 0xd6d8, 0x0, 0x1);
        gbc.writeMem(0xc336, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5f7f, gbc.sp());
        EXPECT(0xc338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc336));
        EXPECT(0x73, gbc.readMem(0xc337));
        // CB 73 014D
        gbc.setState(0x4107, 0xabb5, 0xada0, 0x4ca6, 0x86e9, 0x8d49, 0x1, 0x0);
        gbc.writeMem(0x4107, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xabb5, gbc.sp());
        EXPECT(0x4109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 014F
        gbc.setState(0xdccd, 0x6f17, 0xf0, 0xcaf3, 0x4d09, 0x1cda, 0x1, 0x0);
        gbc.writeMem(0xdccd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6f17, gbc.sp());
        EXPECT(0xdccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdccd));
        EXPECT(0x73, gbc.readMem(0xdcce));
        // CB 73 0150
        gbc.setState(0x715, 0xacd8, 0xf0, 0x8193, 0x7fe9, 0xcbb4, 0x0, 0x0);
        gbc.writeMem(0x715, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xacd8, gbc.sp());
        EXPECT(0x717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0151
        gbc.setState(0x9fc9, 0xef15, 0x680, 0x5a0c, 0x66f3, 0xa42b, 0x0, 0x0);
        gbc.writeMem(0x9fc9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xef15, gbc.sp());
        EXPECT(0x9fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc9));
        EXPECT(0x73, gbc.readMem(0x9fca));
        // CB 73 0152
        gbc.setState(0xa033, 0xf1be, 0x6a50, 0x3a6a, 0x213d, 0x49ad, 0x1, 0x0);
        gbc.writeMem(0xa033, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf1be, gbc.sp());
        EXPECT(0xa035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa033));
        EXPECT(0x73, gbc.readMem(0xa034));
        // CB 73 0153
        gbc.setState(0xb10c, 0x3e59, 0xb1f0, 0xf635, 0x2aaa, 0x872d, 0x1, 0x0);
        gbc.writeMem(0xb10c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3e59, gbc.sp());
        EXPECT(0xb10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10c));
        EXPECT(0x73, gbc.readMem(0xb10d));
        // CB 73 0154
        gbc.setState(0x94a0, 0x9bf8, 0xb720, 0xab36, 0xff74, 0x5a4d, 0x0, 0x1);
        gbc.writeMem(0x94a0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9bf8, gbc.sp());
        EXPECT(0x94a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94a0));
        EXPECT(0x73, gbc.readMem(0x94a1));
        // CB 73 0155
        gbc.setState(0x5f8b, 0xdf7c, 0x6a90, 0x3f66, 0xbd48, 0xe48e, 0x1, 0x1);
        gbc.writeMem(0x5f8b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdf7c, gbc.sp());
        EXPECT(0x5f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0156
        gbc.setState(0xdd1f, 0x103b, 0x8920, 0x2c08, 0x9b8, 0xb619, 0x0, 0x0);
        gbc.writeMem(0xdd1f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x103b, gbc.sp());
        EXPECT(0xdd21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1f));
        EXPECT(0x73, gbc.readMem(0xdd20));
        // CB 73 0157
        gbc.setState(0x12da, 0x8c48, 0x6f90, 0x587f, 0xec68, 0xd131, 0x0, 0x0);
        gbc.writeMem(0x12da, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8c48, gbc.sp());
        EXPECT(0x12dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0158
        gbc.setState(0x2fd1, 0xfd70, 0x470, 0x9d7e, 0x3eaf, 0xdd07, 0x1, 0x0);
        gbc.writeMem(0x2fd1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfd70, gbc.sp());
        EXPECT(0x2fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0159
        gbc.setState(0x87e9, 0xa416, 0x1b60, 0xbc7a, 0x28c, 0xd80b, 0x0, 0x1);
        gbc.writeMem(0x87e9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa416, gbc.sp());
        EXPECT(0x87eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e9));
        EXPECT(0x73, gbc.readMem(0x87ea));
        // CB 73 015A
        gbc.setState(0x795b, 0x7506, 0xcf30, 0xc0c8, 0xc80d, 0xaf04, 0x1, 0x0);
        gbc.writeMem(0x795b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7506, gbc.sp());
        EXPECT(0x795d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 015B
        gbc.setState(0xb9a8, 0x372, 0x8300, 0xb347, 0x43f1, 0x8a71, 0x1, 0x0);
        gbc.writeMem(0xb9a8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x372, gbc.sp());
        EXPECT(0xb9aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a8));
        EXPECT(0x73, gbc.readMem(0xb9a9));
        // CB 73 015C
        gbc.setState(0xe1c, 0x1136, 0x5070, 0x8277, 0xa953, 0xaa47, 0x1, 0x0);
        gbc.writeMem(0xe1c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1136, gbc.sp());
        EXPECT(0xe1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 015D
        gbc.setState(0x3aa9, 0x5675, 0xa140, 0xcc98, 0x102a, 0x4965, 0x0, 0x0);
        gbc.writeMem(0x3aa9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5675, gbc.sp());
        EXPECT(0x3aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 015E
        gbc.setState(0x8b88, 0x4a12, 0xb790, 0x98b8, 0x62c5, 0x82f8, 0x1, 0x0);
        gbc.writeMem(0x8b88, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4a12, gbc.sp());
        EXPECT(0x8b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b88));
        EXPECT(0x73, gbc.readMem(0x8b89));
        // CB 73 015F
        gbc.setState(0x5027, 0x9e7, 0xa800, 0x8998, 0x138f, 0x3208, 0x0, 0x1);
        gbc.writeMem(0x5027, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9e7, gbc.sp());
        EXPECT(0x5029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0161
        gbc.setState(0x9360, 0x3f53, 0x9380, 0xc3c0, 0xa979, 0xc48b, 0x1, 0x1);
        gbc.writeMem(0x9360, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3f53, gbc.sp());
        EXPECT(0x9362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9360));
        EXPECT(0x73, gbc.readMem(0x9361));
        // CB 73 0162
        gbc.setState(0x880f, 0xb98c, 0x1c20, 0x5b0e, 0x6822, 0xcc85, 0x1, 0x1);
        gbc.writeMem(0x880f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb98c, gbc.sp());
        EXPECT(0x8811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x880f));
        EXPECT(0x73, gbc.readMem(0x8810));
        // CB 73 0163
        gbc.setState(0xa3ee, 0x8c5f, 0xa300, 0xf86e, 0xcd28, 0xa382, 0x1, 0x1);
        gbc.writeMem(0xa3ee, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8c5f, gbc.sp());
        EXPECT(0xa3f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ee));
        EXPECT(0x73, gbc.readMem(0xa3ef));
        // CB 73 0164
        gbc.setState(0x1f2b, 0xa129, 0xab0, 0xfa72, 0x2818, 0x5502, 0x1, 0x1);
        gbc.writeMem(0x1f2b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa129, gbc.sp());
        EXPECT(0x1f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0165
        gbc.setState(0x302b, 0xc2f, 0xc8a0, 0x33a2, 0x1c00, 0xa2ff, 0x1, 0x0);
        gbc.writeMem(0x302b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc2f, gbc.sp());
        EXPECT(0x302d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0166
        gbc.setState(0x112f, 0xb2d6, 0xb540, 0xb2a0, 0x423f, 0xf793, 0x0, 0x0);
        gbc.writeMem(0x112f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb2d6, gbc.sp());
        EXPECT(0x1131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0167
        gbc.setState(0x85cd, 0x9808, 0x9550, 0x833b, 0xc1a5, 0xa811, 0x1, 0x1);
        gbc.writeMem(0x85cd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9808, gbc.sp());
        EXPECT(0x85cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85cd));
        EXPECT(0x73, gbc.readMem(0x85ce));
        // CB 73 0168
        gbc.setState(0x4b3e, 0x6a30, 0x4540, 0x2cc7, 0x3be, 0x5c1c, 0x0, 0x1);
        gbc.writeMem(0x4b3e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6a30, gbc.sp());
        EXPECT(0x4b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 016A
        gbc.setState(0x60cd, 0xe320, 0x1630, 0x9acb, 0xb71d, 0x9da7, 0x1, 0x0);
        gbc.writeMem(0x60cd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe320, gbc.sp());
        EXPECT(0x60cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 016B
        gbc.setState(0x99d7, 0xa753, 0xf870, 0x7619, 0x2607, 0xd48, 0x1, 0x0);
        gbc.writeMem(0x99d7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa753, gbc.sp());
        EXPECT(0x99d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d7));
        EXPECT(0x73, gbc.readMem(0x99d8));
        // CB 73 016C
        gbc.setState(0x1871, 0x890d, 0x9b50, 0x7fe9, 0x3ea1, 0xa268, 0x1, 0x1);
        gbc.writeMem(0x1871, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x890d, gbc.sp());
        EXPECT(0x1873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 016D
        gbc.setState(0x5c5b, 0xdcd5, 0x6f90, 0x618f, 0x4946, 0x9bc8, 0x0, 0x0);
        gbc.writeMem(0x5c5b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdcd5, gbc.sp());
        EXPECT(0x5c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 016E
        gbc.setState(0x4f11, 0x2ad7, 0xa830, 0x6ec5, 0x6560, 0x922b, 0x1, 0x0);
        gbc.writeMem(0x4f11, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2ad7, gbc.sp());
        EXPECT(0x4f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 016F
        gbc.setState(0x83c9, 0x5e77, 0xf8d0, 0x8eb1, 0xae39, 0x510e, 0x1, 0x1);
        gbc.writeMem(0x83c9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5e77, gbc.sp());
        EXPECT(0x83cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c9));
        EXPECT(0x73, gbc.readMem(0x83ca));
        // CB 73 0170
        gbc.setState(0x6014, 0x78b2, 0xc280, 0x2e9, 0xd2f7, 0x425, 0x0, 0x0);
        gbc.writeMem(0x6014, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x78b2, gbc.sp());
        EXPECT(0x6016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0171
        gbc.setState(0x7714, 0x38ae, 0xfb90, 0x193b, 0xecc2, 0xe4c1, 0x0, 0x1);
        gbc.writeMem(0x7714, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x38ae, gbc.sp());
        EXPECT(0x7716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0172
        gbc.setState(0xb9f1, 0x4951, 0xd600, 0xd949, 0xc88b, 0xee43, 0x1, 0x0);
        gbc.writeMem(0xb9f1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4951, gbc.sp());
        EXPECT(0xb9f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f1));
        EXPECT(0x73, gbc.readMem(0xb9f2));
        // CB 73 0173
        gbc.setState(0x7576, 0x9c24, 0x4e00, 0x498d, 0xb365, 0x33c4, 0x0, 0x0);
        gbc.writeMem(0x7576, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9c24, gbc.sp());
        EXPECT(0x7578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0174
        gbc.setState(0xbeef, 0xbea9, 0x5b20, 0x8718, 0x1ccc, 0x773a, 0x0, 0x0);
        gbc.writeMem(0xbeef, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbea9, gbc.sp());
        EXPECT(0xbef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeef));
        EXPECT(0x73, gbc.readMem(0xbef0));
        // CB 73 0175
        gbc.setState(0x4ad3, 0x6ddb, 0x2b50, 0x376e, 0x2a55, 0x86a7, 0x0, 0x0);
        gbc.writeMem(0x4ad3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6ddb, gbc.sp());
        EXPECT(0x4ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0176
        gbc.setState(0xa955, 0x881, 0x6a60, 0x3b45, 0x978a, 0xc035, 0x1, 0x0);
        gbc.writeMem(0xa955, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x881, gbc.sp());
        EXPECT(0xa957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa955));
        EXPECT(0x73, gbc.readMem(0xa956));
        // CB 73 0177
        gbc.setState(0x44a1, 0xfb49, 0xe960, 0x4a02, 0x1292, 0x48e1, 0x0, 0x1);
        gbc.writeMem(0x44a1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfb49, gbc.sp());
        EXPECT(0x44a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0178
        gbc.setState(0x13ba, 0x5ca4, 0xfd0, 0x1b1a, 0x9539, 0x8684, 0x0, 0x0);
        gbc.writeMem(0x13ba, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5ca4, gbc.sp());
        EXPECT(0x13bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0179
        gbc.setState(0xb08c, 0xc828, 0xe1a0, 0x190a, 0xe68, 0xf4ae, 0x0, 0x1);
        gbc.writeMem(0xb08c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc828, gbc.sp());
        EXPECT(0xb08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb08c));
        EXPECT(0x73, gbc.readMem(0xb08d));
        // CB 73 017A
        gbc.setState(0xbb37, 0xe612, 0x1490, 0xa9cd, 0x3b6f, 0x52dd, 0x1, 0x1);
        gbc.writeMem(0xbb37, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe612, gbc.sp());
        EXPECT(0xbb39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb37));
        EXPECT(0x73, gbc.readMem(0xbb38));
        // CB 73 017B
        gbc.setState(0xa832, 0x3c79, 0x8320, 0x40d0, 0xd6e5, 0x52f6, 0x1, 0x1);
        gbc.writeMem(0xa832, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3c79, gbc.sp());
        EXPECT(0xa834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa832));
        EXPECT(0x73, gbc.readMem(0xa833));
        // CB 73 017C
        gbc.setState(0x137b, 0xe0a8, 0x7320, 0xfe11, 0xef47, 0xfa2c, 0x0, 0x0);
        gbc.writeMem(0x137b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe0a8, gbc.sp());
        EXPECT(0x137d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 017D
        gbc.setState(0xcc33, 0xae04, 0x2360, 0xc758, 0xab95, 0xc20a, 0x0, 0x0);
        gbc.writeMem(0xcc33, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xae04, gbc.sp());
        EXPECT(0xcc35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc33));
        EXPECT(0x73, gbc.readMem(0xcc34));
        // CB 73 017F
        gbc.setState(0xad5f, 0x819e, 0x470, 0xda3a, 0xacd9, 0xb2d8, 0x1, 0x1);
        gbc.writeMem(0xad5f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x819e, gbc.sp());
        EXPECT(0xad61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad5f));
        EXPECT(0x73, gbc.readMem(0xad60));
        // CB 73 0180
        gbc.setState(0x319b, 0x77a1, 0x3ae0, 0xde09, 0x7335, 0xc18c, 0x1, 0x0);
        gbc.writeMem(0x319b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x77a1, gbc.sp());
        EXPECT(0x319d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0181
        gbc.setState(0xdd00, 0xeee6, 0x2640, 0x3ee6, 0x5f6b, 0x3b75, 0x0, 0x1);
        gbc.writeMem(0xdd00, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xeee6, gbc.sp());
        EXPECT(0xdd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd00));
        EXPECT(0x73, gbc.readMem(0xdd01));
        // CB 73 0182
        gbc.setState(0xe08f, 0xea9a, 0x46f0, 0xa510, 0xe9ce, 0x1111, 0x1, 0x0);
        gbc.writeMem(0xe08f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xea9a, gbc.sp());
        EXPECT(0xe091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe08f));
        EXPECT(0x73, gbc.readMem(0xe090));
        // CB 73 0183
        gbc.setState(0xc265, 0x1053, 0x1a70, 0xcda9, 0xac89, 0x1bed, 0x0, 0x1);
        gbc.writeMem(0xc265, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1053, gbc.sp());
        EXPECT(0xc267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc265));
        EXPECT(0x73, gbc.readMem(0xc266));
        // CB 73 0184
        gbc.setState(0xedac, 0x3b9f, 0xe960, 0xa2eb, 0xf2, 0xd7c7, 0x0, 0x0);
        gbc.writeMem(0xedac, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3b9f, gbc.sp());
        EXPECT(0xedae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedac));
        EXPECT(0x73, gbc.readMem(0xedad));
        // CB 73 0185
        gbc.setState(0xbe8d, 0x70ee, 0x2ea0, 0x8ff8, 0x2734, 0x938, 0x1, 0x0);
        gbc.writeMem(0xbe8d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x70ee, gbc.sp());
        EXPECT(0xbe8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8d));
        EXPECT(0x73, gbc.readMem(0xbe8e));
        // CB 73 0186
        gbc.setState(0x231f, 0x3416, 0x2940, 0x813b, 0x9435, 0xe5a2, 0x0, 0x1);
        gbc.writeMem(0x231f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3416, gbc.sp());
        EXPECT(0x2321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0187
        gbc.setState(0x6af2, 0x75af, 0x5910, 0x1aaf, 0x517b, 0x396b, 0x0, 0x0);
        gbc.writeMem(0x6af2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x75af, gbc.sp());
        EXPECT(0x6af4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0188
        gbc.setState(0x1ac1, 0x6607, 0x7660, 0x63dd, 0x8e3f, 0x665b, 0x1, 0x1);
        gbc.writeMem(0x1ac1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6607, gbc.sp());
        EXPECT(0x1ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0189
        gbc.setState(0x67ac, 0x50d2, 0x9cf0, 0x263, 0xd6ab, 0x9ac8, 0x1, 0x0);
        gbc.writeMem(0x67ac, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x50d2, gbc.sp());
        EXPECT(0x67ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 018A
        gbc.setState(0x376c, 0xae80, 0xaf0, 0xe9b9, 0x3fba, 0xc675, 0x1, 0x1);
        gbc.writeMem(0x376c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xae80, gbc.sp());
        EXPECT(0x376e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 018B
        gbc.setState(0x119b, 0x3038, 0xdb20, 0x35fe, 0x20d4, 0xa1db, 0x0, 0x0);
        gbc.writeMem(0x119b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3038, gbc.sp());
        EXPECT(0x119d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 018E
        gbc.setState(0x6965, 0xe8e6, 0x2230, 0x9b8c, 0x1493, 0x1612, 0x1, 0x1);
        gbc.writeMem(0x6965, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe8e6, gbc.sp());
        EXPECT(0x6967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 018F
        gbc.setState(0x1875, 0xbded, 0x76a0, 0x1d28, 0xca21, 0x1bd8, 0x1, 0x1);
        gbc.writeMem(0x1875, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbded, gbc.sp());
        EXPECT(0x1877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0190
        gbc.setState(0x55eb, 0x19c8, 0x32f0, 0x64d3, 0xc2f9, 0xbac0, 0x1, 0x0);
        gbc.writeMem(0x55eb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x19c8, gbc.sp());
        EXPECT(0x55ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0191
        gbc.setState(0x1bea, 0x6696, 0xe090, 0x6661, 0x14cc, 0xb998, 0x1, 0x1);
        gbc.writeMem(0x1bea, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6696, gbc.sp());
        EXPECT(0x1bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0192
        gbc.setState(0x8860, 0x6e1f, 0xf7f0, 0x2f1e, 0xa6c1, 0xf7c7, 0x1, 0x0);
        gbc.writeMem(0x8860, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6e1f, gbc.sp());
        EXPECT(0x8862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8860));
        EXPECT(0x73, gbc.readMem(0x8861));
        // CB 73 0193
        gbc.setState(0xc4e3, 0x57fc, 0xc3b0, 0xd8d4, 0xae71, 0xb4f6, 0x1, 0x0);
        gbc.writeMem(0xc4e3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x57fc, gbc.sp());
        EXPECT(0xc4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e3));
        EXPECT(0x73, gbc.readMem(0xc4e4));
        // CB 73 0194
        gbc.setState(0xe79c, 0xd8db, 0x28f0, 0xbd1, 0xd8df, 0xa8ea, 0x1, 0x0);
        gbc.writeMem(0xe79c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd8db, gbc.sp());
        EXPECT(0xe79e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79c));
        EXPECT(0x73, gbc.readMem(0xe79d));
        // CB 73 0195
        gbc.setState(0xc96e, 0xe845, 0x5b50, 0x4fd9, 0x2d02, 0xf972, 0x0, 0x0);
        gbc.writeMem(0xc96e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe845, gbc.sp());
        EXPECT(0xc970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96e));
        EXPECT(0x73, gbc.readMem(0xc96f));
        // CB 73 0198
        gbc.setState(0x833e, 0xbdbc, 0x7df0, 0xea64, 0xdfc2, 0x2248, 0x1, 0x0);
        gbc.writeMem(0x833e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbdbc, gbc.sp());
        EXPECT(0x8340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x833e));
        EXPECT(0x73, gbc.readMem(0x833f));
        // CB 73 0199
        gbc.setState(0x5d7c, 0xac66, 0x5b80, 0xe33f, 0xd9ff, 0xc8a2, 0x0, 0x0);
        gbc.writeMem(0x5d7c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xac66, gbc.sp());
        EXPECT(0x5d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 019A
        gbc.setState(0x9ac2, 0xc57d, 0x47e0, 0x7d6c, 0xd623, 0xfc3b, 0x1, 0x0);
        gbc.writeMem(0x9ac2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc57d, gbc.sp());
        EXPECT(0x9ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac2));
        EXPECT(0x73, gbc.readMem(0x9ac3));
        // CB 73 019B
        gbc.setState(0x6cf0, 0xd214, 0x2630, 0x332c, 0xd7e4, 0xb053, 0x0, 0x0);
        gbc.writeMem(0x6cf0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd214, gbc.sp());
        EXPECT(0x6cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 019C
        gbc.setState(0x7a69, 0x332b, 0x5240, 0xe1c5, 0xf95d, 0x156a, 0x0, 0x0);
        gbc.writeMem(0x7a69, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x332b, gbc.sp());
        EXPECT(0x7a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 019D
        gbc.setState(0xc5b0, 0xa661, 0xd490, 0x662d, 0x3e36, 0xc3ae, 0x0, 0x1);
        gbc.writeMem(0xc5b0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa661, gbc.sp());
        EXPECT(0xc5b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b0));
        EXPECT(0x73, gbc.readMem(0xc5b1));
        // CB 73 019E
        gbc.setState(0x6747, 0xfb2a, 0xe870, 0xfa12, 0x905a, 0xef1, 0x1, 0x1);
        gbc.writeMem(0x6747, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfb2a, gbc.sp());
        EXPECT(0x6749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 019F
        gbc.setState(0x13c6, 0xb7f7, 0xed0, 0x385e, 0x80fa, 0xd0d6, 0x1, 0x0);
        gbc.writeMem(0x13c6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb7f7, gbc.sp());
        EXPECT(0x13c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01A0
        gbc.setState(0xb210, 0x11f0, 0xa910, 0xe8ef, 0x5420, 0xcbcf, 0x1, 0x0);
        gbc.writeMem(0xb210, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x11f0, gbc.sp());
        EXPECT(0xb212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb210));
        EXPECT(0x73, gbc.readMem(0xb211));
        // CB 73 01A1
        gbc.setState(0xa3ce, 0x35dc, 0xbb90, 0x416f, 0xa748, 0x7934, 0x0, 0x0);
        gbc.writeMem(0xa3ce, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x35dc, gbc.sp());
        EXPECT(0xa3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ce));
        EXPECT(0x73, gbc.readMem(0xa3cf));
        // CB 73 01A2
        gbc.setState(0xca75, 0x1a57, 0xf960, 0x67e6, 0xf6e8, 0x1161, 0x0, 0x1);
        gbc.writeMem(0xca75, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1a57, gbc.sp());
        EXPECT(0xca77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca75));
        EXPECT(0x73, gbc.readMem(0xca76));
        // CB 73 01A3
        gbc.setState(0x5a35, 0xac57, 0xe8c0, 0x842d, 0xd129, 0x5984, 0x1, 0x0);
        gbc.writeMem(0x5a35, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xac57, gbc.sp());
        EXPECT(0x5a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01A4
        gbc.setState(0x1df8, 0x6f87, 0x2f70, 0x6b52, 0x5116, 0x7d19, 0x1, 0x0);
        gbc.writeMem(0x1df8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6f87, gbc.sp());
        EXPECT(0x1dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01A5
        gbc.setState(0x36b9, 0xea53, 0x1630, 0xf913, 0xce1, 0xf203, 0x0, 0x0);
        gbc.writeMem(0x36b9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xea53, gbc.sp());
        EXPECT(0x36bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01A6
        gbc.setState(0x9427, 0xa7cb, 0x4b20, 0xa195, 0x23eb, 0xd3df, 0x1, 0x0);
        gbc.writeMem(0x9427, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa7cb, gbc.sp());
        EXPECT(0x9429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9427));
        EXPECT(0x73, gbc.readMem(0x9428));
        // CB 73 01A8
        gbc.setState(0xeaa8, 0x32ea, 0xf720, 0x209b, 0x5952, 0xa9cb, 0x0, 0x1);
        gbc.writeMem(0xeaa8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x32ea, gbc.sp());
        EXPECT(0xeaaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa8));
        EXPECT(0x73, gbc.readMem(0xeaa9));
        // CB 73 01A9
        gbc.setState(0xef88, 0x3d08, 0x3b70, 0x3d7b, 0xf9ea, 0xbfde, 0x1, 0x0);
        gbc.writeMem(0xef88, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3d08, gbc.sp());
        EXPECT(0xef8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef88));
        EXPECT(0x73, gbc.readMem(0xef89));
        // CB 73 01AA
        gbc.setState(0x9db7, 0xe6e1, 0x2220, 0x7f26, 0x150c, 0x7a23, 0x0, 0x1);
        gbc.writeMem(0x9db7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe6e1, gbc.sp());
        EXPECT(0x9db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db7));
        EXPECT(0x73, gbc.readMem(0x9db8));
        // CB 73 01AB
        gbc.setState(0xd15f, 0xa6e0, 0xc9b0, 0x7a15, 0x52ef, 0x9b44, 0x0, 0x0);
        gbc.writeMem(0xd15f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa6e0, gbc.sp());
        EXPECT(0xd161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15f));
        EXPECT(0x73, gbc.readMem(0xd160));
        // CB 73 01AC
        gbc.setState(0xb80b, 0x8efb, 0xe820, 0x6d62, 0x5981, 0xde6d, 0x0, 0x0);
        gbc.writeMem(0xb80b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8efb, gbc.sp());
        EXPECT(0xb80d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb80b));
        EXPECT(0x73, gbc.readMem(0xb80c));
        // CB 73 01AD
        gbc.setState(0x87b6, 0xb9d4, 0x9360, 0x7bd7, 0x80d, 0xace5, 0x0, 0x0);
        gbc.writeMem(0x87b6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb9d4, gbc.sp());
        EXPECT(0x87b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b6));
        EXPECT(0x73, gbc.readMem(0x87b7));
        // CB 73 01AE
        gbc.setState(0x6509, 0xfd6b, 0xb6e0, 0x81a, 0x3cda, 0x3563, 0x1, 0x1);
        gbc.writeMem(0x6509, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfd6b, gbc.sp());
        EXPECT(0x650b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01AF
        gbc.setState(0x5572, 0xca7b, 0x32f0, 0x7000, 0xfa70, 0x2c8b, 0x0, 0x0);
        gbc.writeMem(0x5572, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xca7b, gbc.sp());
        EXPECT(0x5574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01B0
        gbc.setState(0x26fe, 0xc6b6, 0x59e0, 0x9116, 0x2aa9, 0xe6e9, 0x0, 0x1);
        gbc.writeMem(0x26fe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc6b6, gbc.sp());
        EXPECT(0x2700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01B1
        gbc.setState(0x1607, 0x53cb, 0xb000, 0x6cf7, 0xe339, 0x4824, 0x0, 0x0);
        gbc.writeMem(0x1607, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x53cb, gbc.sp());
        EXPECT(0x1609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01B3
        gbc.setState(0x19d4, 0x34aa, 0xa0, 0xc8ce, 0x333b, 0x51b4, 0x1, 0x0);
        gbc.writeMem(0x19d4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x34aa, gbc.sp());
        EXPECT(0x19d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01B4
        gbc.setState(0x5d3a, 0x1a23, 0x2a90, 0x7159, 0x40a4, 0x220d, 0x0, 0x1);
        gbc.writeMem(0x5d3a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1a23, gbc.sp());
        EXPECT(0x5d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01B5
        gbc.setState(0xe99a, 0xdc1e, 0x740, 0xd168, 0xafc1, 0xa3da, 0x1, 0x1);
        gbc.writeMem(0xe99a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdc1e, gbc.sp());
        EXPECT(0xe99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99a));
        EXPECT(0x73, gbc.readMem(0xe99b));
        // CB 73 01B7
        gbc.setState(0x518c, 0x9ae3, 0xff0, 0x2d27, 0xc6bf, 0xf389, 0x1, 0x0);
        gbc.writeMem(0x518c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9ae3, gbc.sp());
        EXPECT(0x518e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01B8
        gbc.setState(0x3707, 0x33b5, 0x6ad0, 0x6885, 0x6ffd, 0xbbdb, 0x0, 0x0);
        gbc.writeMem(0x3707, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x33b5, gbc.sp());
        EXPECT(0x3709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01BA
        gbc.setState(0xc2de, 0xdd8, 0xdf80, 0x608a, 0x5eb7, 0x3890, 0x0, 0x0);
        gbc.writeMem(0xc2de, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdd8, gbc.sp());
        EXPECT(0xc2e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2de));
        EXPECT(0x73, gbc.readMem(0xc2df));
        // CB 73 01BB
        gbc.setState(0x5fed, 0x5b78, 0x8eb0, 0x4179, 0x8d0b, 0xecd6, 0x0, 0x0);
        gbc.writeMem(0x5fed, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5b78, gbc.sp());
        EXPECT(0x5fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01BC
        gbc.setState(0x4953, 0x916e, 0x3480, 0x6fe1, 0xe75c, 0x7760, 0x1, 0x1);
        gbc.writeMem(0x4953, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x916e, gbc.sp());
        EXPECT(0x4955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01BD
        gbc.setState(0x7c61, 0xffd0, 0x7b90, 0x55e1, 0xc60a, 0x929, 0x1, 0x0);
        gbc.writeMem(0x7c61, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xffd0, gbc.sp());
        EXPECT(0x7c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01BE
        gbc.setState(0x7d6a, 0x392a, 0x6c20, 0xedcc, 0x30c8, 0x9158, 0x1, 0x1);
        gbc.writeMem(0x7d6a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x392a, gbc.sp());
        EXPECT(0x7d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01BF
        gbc.setState(0xe0ef, 0x83d9, 0x20, 0xddb2, 0x9052, 0x151b, 0x1, 0x1);
        gbc.writeMem(0xe0ef, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x83d9, gbc.sp());
        EXPECT(0xe0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ef));
        EXPECT(0x73, gbc.readMem(0xe0f0));
        // CB 73 01C0
        gbc.setState(0xd7db, 0x11c, 0x12a0, 0xf8c3, 0x3a41, 0x47f1, 0x1, 0x1);
        gbc.writeMem(0xd7db, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x11c, gbc.sp());
        EXPECT(0xd7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7db));
        EXPECT(0x73, gbc.readMem(0xd7dc));
        // CB 73 01C1
        gbc.setState(0xd46f, 0xf302, 0x6010, 0x168b, 0x7280, 0x874c, 0x0, 0x0);
        gbc.writeMem(0xd46f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf302, gbc.sp());
        EXPECT(0xd471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46f));
        EXPECT(0x73, gbc.readMem(0xd470));
        // CB 73 01C2
        gbc.setState(0xc8cd, 0xb4fa, 0x1ef0, 0xe8d6, 0x410, 0x318e, 0x0, 0x1);
        gbc.writeMem(0xc8cd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb4fa, gbc.sp());
        EXPECT(0xc8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8cd));
        EXPECT(0x73, gbc.readMem(0xc8ce));
        // CB 73 01C3
        gbc.setState(0x60e0, 0x3b83, 0xf6c0, 0x2ec5, 0xf8e9, 0x86c3, 0x1, 0x0);
        gbc.writeMem(0x60e0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3b83, gbc.sp());
        EXPECT(0x60e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01C4
        gbc.setState(0xbd17, 0x4f57, 0x0, 0xa5a4, 0x18c6, 0x4ee1, 0x0, 0x0);
        gbc.writeMem(0xbd17, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4f57, gbc.sp());
        EXPECT(0xbd19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd17));
        EXPECT(0x73, gbc.readMem(0xbd18));
        // CB 73 01C5
        gbc.setState(0x68fd, 0x77f8, 0xf2b0, 0x3e0, 0x9625, 0x99ee, 0x1, 0x1);
        gbc.writeMem(0x68fd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x77f8, gbc.sp());
        EXPECT(0x68ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01C6
        gbc.setState(0x9b80, 0xfabc, 0x5980, 0x7d91, 0x461e, 0xb05f, 0x0, 0x1);
        gbc.writeMem(0x9b80, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfabc, gbc.sp());
        EXPECT(0x9b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b80));
        EXPECT(0x73, gbc.readMem(0x9b81));
        // CB 73 01C7
        gbc.setState(0x8e38, 0xac32, 0xba00, 0x9505, 0x28d8, 0x73f4, 0x1, 0x1);
        gbc.writeMem(0x8e38, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xac32, gbc.sp());
        EXPECT(0x8e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e38));
        EXPECT(0x73, gbc.readMem(0x8e39));
        // CB 73 01C8
        gbc.setState(0xbbe7, 0x69fd, 0x1df0, 0xd23f, 0x9997, 0xb9f3, 0x0, 0x1);
        gbc.writeMem(0xbbe7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x69fd, gbc.sp());
        EXPECT(0xbbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe7));
        EXPECT(0x73, gbc.readMem(0xbbe8));
        // CB 73 01CA
        gbc.setState(0xe179, 0xf260, 0xe160, 0x5a5, 0x4fd, 0x397d, 0x1, 0x0);
        gbc.writeMem(0xe179, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf260, gbc.sp());
        EXPECT(0xe17b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe179));
        EXPECT(0x73, gbc.readMem(0xe17a));
        // CB 73 01CB
        gbc.setState(0x467f, 0xbc5a, 0xd120, 0x15f9, 0xa65d, 0x6174, 0x1, 0x1);
        gbc.writeMem(0x467f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbc5a, gbc.sp());
        EXPECT(0x4681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01CC
        gbc.setState(0x4218, 0x4f96, 0x3220, 0x762c, 0x17c8, 0xbe5c, 0x1, 0x1);
        gbc.writeMem(0x4218, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4f96, gbc.sp());
        EXPECT(0x421a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01CD
        gbc.setState(0x4774, 0x3c53, 0xdc60, 0x6be1, 0x83fb, 0x4364, 0x1, 0x1);
        gbc.writeMem(0x4774, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3c53, gbc.sp());
        EXPECT(0x4776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01CE
        gbc.setState(0x2974, 0x150f, 0xe330, 0xf766, 0xfbe8, 0xb522, 0x0, 0x0);
        gbc.writeMem(0x2974, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x150f, gbc.sp());
        EXPECT(0x2976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01D0
        gbc.setState(0x93f8, 0xff08, 0xc730, 0xfdf, 0x46e7, 0x1e10, 0x1, 0x0);
        gbc.writeMem(0x93f8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xff08, gbc.sp());
        EXPECT(0x93fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f8));
        EXPECT(0x73, gbc.readMem(0x93f9));
        // CB 73 01D1
        gbc.setState(0x37e1, 0x5fa, 0x53b0, 0x2537, 0x49cc, 0xa0f4, 0x0, 0x1);
        gbc.writeMem(0x37e1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5fa, gbc.sp());
        EXPECT(0x37e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01D2
        gbc.setState(0x25d0, 0x581, 0xcf0, 0xf152, 0x6fad, 0xd253, 0x1, 0x0);
        gbc.writeMem(0x25d0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x581, gbc.sp());
        EXPECT(0x25d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01D3
        gbc.setState(0x2770, 0x9074, 0xa3e0, 0x4263, 0x903b, 0x6d, 0x0, 0x0);
        gbc.writeMem(0x2770, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9074, gbc.sp());
        EXPECT(0x2772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01D4
        gbc.setState(0x9320, 0xca9, 0x34c0, 0x3159, 0x371a, 0x2289, 0x0, 0x1);
        gbc.writeMem(0x9320, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xca9, gbc.sp());
        EXPECT(0x9322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9320));
        EXPECT(0x73, gbc.readMem(0x9321));
        // CB 73 01D5
        gbc.setState(0x4ee3, 0x39a7, 0x43a0, 0x6bfd, 0xe9e5, 0x9eda, 0x1, 0x0);
        gbc.writeMem(0x4ee3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x39a7, gbc.sp());
        EXPECT(0x4ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01D6
        gbc.setState(0x3ee9, 0xa4c4, 0x6030, 0x5917, 0x8c44, 0x88a3, 0x1, 0x0);
        gbc.writeMem(0x3ee9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa4c4, gbc.sp());
        EXPECT(0x3eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01D7
        gbc.setState(0xe221, 0xbf01, 0xfd0, 0xc27e, 0x725f, 0x7d0e, 0x0, 0x1);
        gbc.writeMem(0xe221, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xbf01, gbc.sp());
        EXPECT(0xe223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe221));
        EXPECT(0x73, gbc.readMem(0xe222));
        // CB 73 01D8
        gbc.setState(0x8d43, 0xca22, 0x480, 0x73c9, 0x6631, 0xceeb, 0x0, 0x0);
        gbc.writeMem(0x8d43, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xca22, gbc.sp());
        EXPECT(0x8d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d43));
        EXPECT(0x73, gbc.readMem(0x8d44));
        // CB 73 01D9
        gbc.setState(0xba32, 0xb68a, 0x1d90, 0xcb52, 0xbb38, 0x3e52, 0x0, 0x0);
        gbc.writeMem(0xba32, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb68a, gbc.sp());
        EXPECT(0xba34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba32));
        EXPECT(0x73, gbc.readMem(0xba33));
        // CB 73 01DA
        gbc.setState(0x9c14, 0x7650, 0x3ae0, 0x62fc, 0x2136, 0xc3f, 0x0, 0x0);
        gbc.writeMem(0x9c14, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7650, gbc.sp());
        EXPECT(0x9c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c14));
        EXPECT(0x73, gbc.readMem(0x9c15));
        // CB 73 01DB
        gbc.setState(0x945e, 0xd9ce, 0xfb40, 0xb79, 0xf71a, 0x44d3, 0x0, 0x1);
        gbc.writeMem(0x945e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd9ce, gbc.sp());
        EXPECT(0x9460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945e));
        EXPECT(0x73, gbc.readMem(0x945f));
        // CB 73 01DC
        gbc.setState(0x8086, 0x4f37, 0xcf40, 0x60c3, 0x1ae1, 0x6547, 0x1, 0x1);
        gbc.writeMem(0x8086, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4f37, gbc.sp());
        EXPECT(0x8088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8086));
        EXPECT(0x73, gbc.readMem(0x8087));
        // CB 73 01DD
        gbc.setState(0x4d4d, 0xa0c7, 0xc5d0, 0x868d, 0xeffb, 0x9ee8, 0x0, 0x1);
        gbc.writeMem(0x4d4d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa0c7, gbc.sp());
        EXPECT(0x4d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01DE
        gbc.setState(0x11d6, 0x1069, 0xf0d0, 0xbf0a, 0x2fb9, 0xf8af, 0x0, 0x1);
        gbc.writeMem(0x11d6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1069, gbc.sp());
        EXPECT(0x11d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01DF
        gbc.setState(0x64c4, 0x4cc8, 0x270, 0x9b35, 0x27ff, 0xd1b0, 0x0, 0x0);
        gbc.writeMem(0x64c4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4cc8, gbc.sp());
        EXPECT(0x64c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01E0
        gbc.setState(0x2604, 0x888c, 0xd250, 0x8d94, 0x137f, 0xabba, 0x0, 0x1);
        gbc.writeMem(0x2604, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x888c, gbc.sp());
        EXPECT(0x2606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01E1
        gbc.setState(0x20c3, 0xa89f, 0xa680, 0xc49d, 0xbe4d, 0x5470, 0x1, 0x1);
        gbc.writeMem(0x20c3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa89f, gbc.sp());
        EXPECT(0x20c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01E2
        gbc.setState(0x55c9, 0x218f, 0x4a30, 0xf7d8, 0x9225, 0x9047, 0x1, 0x1);
        gbc.writeMem(0x55c9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x218f, gbc.sp());
        EXPECT(0x55cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01E3
        gbc.setState(0x4863, 0xcdd6, 0x45d0, 0xe5dd, 0x8b05, 0xdb6d, 0x0, 0x1);
        gbc.writeMem(0x4863, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcdd6, gbc.sp());
        EXPECT(0x4865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01E4
        gbc.setState(0x10dd, 0x3b0e, 0x4540, 0x50b1, 0x93dc, 0x2fdf, 0x0, 0x1);
        gbc.writeMem(0x10dd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3b0e, gbc.sp());
        EXPECT(0x10df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01E5
        gbc.setState(0x2816, 0xbace, 0x60e0, 0x2f3d, 0xc582, 0x9ea6, 0x1, 0x0);
        gbc.writeMem(0x2816, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbace, gbc.sp());
        EXPECT(0x2818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01E6
        gbc.setState(0xae69, 0x4692, 0xf5c0, 0xb96e, 0x3b77, 0x8096, 0x1, 0x1);
        gbc.writeMem(0xae69, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4692, gbc.sp());
        EXPECT(0xae6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae69));
        EXPECT(0x73, gbc.readMem(0xae6a));
        // CB 73 01E7
        gbc.setState(0x1ea2, 0x9e18, 0x96b0, 0xe7f3, 0x7579, 0xe7b6, 0x0, 0x0);
        gbc.writeMem(0x1ea2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9e18, gbc.sp());
        EXPECT(0x1ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01E8
        gbc.setState(0xa225, 0x8bc4, 0xd790, 0x6dd2, 0x9c02, 0x64e8, 0x0, 0x0);
        gbc.writeMem(0xa225, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8bc4, gbc.sp());
        EXPECT(0xa227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa225));
        EXPECT(0x73, gbc.readMem(0xa226));
        // CB 73 01E9
        gbc.setState(0xce63, 0xe4b, 0xefe0, 0x609, 0x87ec, 0xb046, 0x0, 0x1);
        gbc.writeMem(0xce63, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe4b, gbc.sp());
        EXPECT(0xce65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce63));
        EXPECT(0x73, gbc.readMem(0xce64));
        // CB 73 01EA
        gbc.setState(0xe1c3, 0x25fc, 0x8200, 0xd259, 0x7b4d, 0xd615, 0x0, 0x0);
        gbc.writeMem(0xe1c3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x25fc, gbc.sp());
        EXPECT(0xe1c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c3));
        EXPECT(0x73, gbc.readMem(0xe1c4));
        // CB 73 01EB
        gbc.setState(0x8a84, 0xbfb9, 0xc420, 0x24d9, 0x5bb, 0x10ab, 0x1, 0x0);
        gbc.writeMem(0x8a84, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbfb9, gbc.sp());
        EXPECT(0x8a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a84));
        EXPECT(0x73, gbc.readMem(0x8a85));
        // CB 73 01EC
        gbc.setState(0x75c9, 0xc9ee, 0xc4f0, 0x9009, 0x99c6, 0x160, 0x1, 0x0);
        gbc.writeMem(0x75c9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc9ee, gbc.sp());
        EXPECT(0x75cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01ED
        gbc.setState(0x2af9, 0xd6e, 0x3560, 0x979d, 0x126e, 0x24e1, 0x0, 0x0);
        gbc.writeMem(0x2af9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd6e, gbc.sp());
        EXPECT(0x2afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01EE
        gbc.setState(0xa304, 0xb60f, 0x3a80, 0x5425, 0x536, 0x91f0, 0x1, 0x0);
        gbc.writeMem(0xa304, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb60f, gbc.sp());
        EXPECT(0xa306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa304));
        EXPECT(0x73, gbc.readMem(0xa305));
        // CB 73 01EF
        gbc.setState(0xdd40, 0x4889, 0x1410, 0xd134, 0x3281, 0x3c8d, 0x0, 0x1);
        gbc.writeMem(0xdd40, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4889, gbc.sp());
        EXPECT(0xdd42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd40));
        EXPECT(0x73, gbc.readMem(0xdd41));
        // CB 73 01F0
        gbc.setState(0x221e, 0x6e43, 0x2340, 0x4f92, 0x6ab3, 0x7940, 0x1, 0x0);
        gbc.writeMem(0x221e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6e43, gbc.sp());
        EXPECT(0x2220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01F1
        gbc.setState(0xedc4, 0x6b7b, 0x4580, 0xd3e6, 0xb39, 0xabc9, 0x1, 0x0);
        gbc.writeMem(0xedc4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6b7b, gbc.sp());
        EXPECT(0xedc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc4));
        EXPECT(0x73, gbc.readMem(0xedc5));
        // CB 73 01F2
        gbc.setState(0x163f, 0x7ce0, 0x4320, 0x1139, 0x462e, 0x69a7, 0x0, 0x1);
        gbc.writeMem(0x163f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7ce0, gbc.sp());
        EXPECT(0x1641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01F3
        gbc.setState(0xe99f, 0x582b, 0xa2c0, 0x3076, 0xb95d, 0x91a8, 0x1, 0x0);
        gbc.writeMem(0xe99f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x582b, gbc.sp());
        EXPECT(0xe9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99f));
        EXPECT(0x73, gbc.readMem(0xe9a0));
        // CB 73 01F4
        gbc.setState(0xe152, 0xd269, 0xfbd0, 0x3e36, 0x546b, 0x357d, 0x1, 0x0);
        gbc.writeMem(0xe152, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd269, gbc.sp());
        EXPECT(0xe154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe152));
        EXPECT(0x73, gbc.readMem(0xe153));
        // CB 73 01F5
        gbc.setState(0xc599, 0x282f, 0x8870, 0x5d35, 0xee44, 0x456c, 0x1, 0x1);
        gbc.writeMem(0xc599, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x282f, gbc.sp());
        EXPECT(0xc59b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc599));
        EXPECT(0x73, gbc.readMem(0xc59a));
        // CB 73 01F6
        gbc.setState(0xc5db, 0xadc1, 0x1ad0, 0xe300, 0xe1fa, 0xf063, 0x1, 0x0);
        gbc.writeMem(0xc5db, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xadc1, gbc.sp());
        EXPECT(0xc5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5db));
        EXPECT(0x73, gbc.readMem(0xc5dc));
        // CB 73 01F7
        gbc.setState(0x29d9, 0x25a4, 0x5f00, 0xc95a, 0x5c0f, 0xc9f6, 0x0, 0x1);
        gbc.writeMem(0x29d9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x25a4, gbc.sp());
        EXPECT(0x29db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01F8
        gbc.setState(0xd3b4, 0x1e23, 0x99e0, 0x5708, 0xba8c, 0x856, 0x1, 0x0);
        gbc.writeMem(0xd3b4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1e23, gbc.sp());
        EXPECT(0xd3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b4));
        EXPECT(0x73, gbc.readMem(0xd3b5));
        // CB 73 01F9
        gbc.setState(0xedd9, 0x5f89, 0xc6d0, 0xc4c3, 0x69dd, 0xf756, 0x0, 0x1);
        gbc.writeMem(0xedd9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5f89, gbc.sp());
        EXPECT(0xeddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd9));
        EXPECT(0x73, gbc.readMem(0xedda));
        // CB 73 01FA
        gbc.setState(0x37c7, 0x514d, 0x1d0, 0xdf48, 0x449b, 0x99c0, 0x1, 0x1);
        gbc.writeMem(0x37c7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x514d, gbc.sp());
        EXPECT(0x37c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 01FB
        gbc.setState(0x5f1f, 0x315c, 0x96a0, 0x5bfb, 0x47f8, 0xd9d2, 0x1, 0x0);
        gbc.writeMem(0x5f1f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x315c, gbc.sp());
        EXPECT(0x5f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 01FC
        gbc.setState(0x9bf6, 0x9a24, 0x6a0, 0x3cb0, 0x8cf4, 0x2682, 0x0, 0x0);
        gbc.writeMem(0x9bf6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9a24, gbc.sp());
        EXPECT(0x9bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf6));
        EXPECT(0x73, gbc.readMem(0x9bf7));
        // CB 73 01FD
        gbc.setState(0x9b56, 0x9456, 0x4100, 0xa4b8, 0xf560, 0x5268, 0x0, 0x1);
        gbc.writeMem(0x9b56, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9456, gbc.sp());
        EXPECT(0x9b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b56));
        EXPECT(0x73, gbc.readMem(0x9b57));
        // CB 73 01FE
        gbc.setState(0xea67, 0xeab4, 0x2ff0, 0xdafd, 0xc72f, 0x1c67, 0x0, 0x1);
        gbc.writeMem(0xea67, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xeab4, gbc.sp());
        EXPECT(0xea69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea67));
        EXPECT(0x73, gbc.readMem(0xea68));
        // CB 73 01FF
        gbc.setState(0x7e1, 0x86a4, 0x3070, 0x221b, 0x6416, 0x803, 0x0, 0x1);
        gbc.writeMem(0x7e1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x86a4, gbc.sp());
        EXPECT(0x7e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0200
        gbc.setState(0xc8d, 0x95d5, 0xa2d0, 0x7577, 0x1b62, 0x987, 0x1, 0x1);
        gbc.writeMem(0xc8d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x95d5, gbc.sp());
        EXPECT(0xc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0201
        gbc.setState(0xe709, 0x39d5, 0xbfd0, 0xb77c, 0xa297, 0xaea4, 0x0, 0x1);
        gbc.writeMem(0xe709, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x39d5, gbc.sp());
        EXPECT(0xe70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe709));
        EXPECT(0x73, gbc.readMem(0xe70a));
        // CB 73 0202
        gbc.setState(0xdfa6, 0x966a, 0x5180, 0xf640, 0x82bb, 0xc9d2, 0x0, 0x0);
        gbc.writeMem(0xdfa6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x966a, gbc.sp());
        EXPECT(0xdfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa6));
        EXPECT(0x73, gbc.readMem(0xdfa7));
        // CB 73 0203
        gbc.setState(0x585, 0xcfa1, 0xccb0, 0x7540, 0xfc05, 0x2241, 0x1, 0x1);
        gbc.writeMem(0x585, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcfa1, gbc.sp());
        EXPECT(0x587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0204
        gbc.setState(0x6a53, 0x1a9e, 0x1830, 0xa8bb, 0xb51c, 0x4102, 0x0, 0x0);
        gbc.writeMem(0x6a53, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1a9e, gbc.sp());
        EXPECT(0x6a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0205
        gbc.setState(0xc44e, 0xd307, 0x6960, 0x1c6a, 0x2f56, 0xbb80, 0x1, 0x1);
        gbc.writeMem(0xc44e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd307, gbc.sp());
        EXPECT(0xc450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc44e));
        EXPECT(0x73, gbc.readMem(0xc44f));
        // CB 73 0206
        gbc.setState(0x184a, 0x48b6, 0x8c30, 0xf100, 0x64f0, 0x85a7, 0x0, 0x1);
        gbc.writeMem(0x184a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x48b6, gbc.sp());
        EXPECT(0x184c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0207
        gbc.setState(0x240a, 0xbb5f, 0x9150, 0xec00, 0x3c62, 0xae8c, 0x0, 0x0);
        gbc.writeMem(0x240a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbb5f, gbc.sp());
        EXPECT(0x240c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0208
        gbc.setState(0x34bf, 0x36b, 0xaa60, 0xabe4, 0xce78, 0xe8bf, 0x1, 0x1);
        gbc.writeMem(0x34bf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x36b, gbc.sp());
        EXPECT(0x34c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0209
        gbc.setState(0xbadf, 0x9b59, 0xa250, 0x4a66, 0x8e6f, 0x4c2c, 0x0, 0x0);
        gbc.writeMem(0xbadf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9b59, gbc.sp());
        EXPECT(0xbae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbadf));
        EXPECT(0x73, gbc.readMem(0xbae0));
        // CB 73 020A
        gbc.setState(0x600f, 0x14c3, 0x43a0, 0x6b59, 0xbb22, 0xcb3c, 0x0, 0x1);
        gbc.writeMem(0x600f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x14c3, gbc.sp());
        EXPECT(0x6011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 020C
        gbc.setState(0xd754, 0x8afa, 0xf9d0, 0xf8f7, 0x4303, 0xaede, 0x1, 0x0);
        gbc.writeMem(0xd754, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8afa, gbc.sp());
        EXPECT(0xd756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd754));
        EXPECT(0x73, gbc.readMem(0xd755));
        // CB 73 020D
        gbc.setState(0x9bc1, 0x6350, 0xdb20, 0xdfb3, 0x6306, 0x4d7e, 0x0, 0x1);
        gbc.writeMem(0x9bc1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6350, gbc.sp());
        EXPECT(0x9bc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc1));
        EXPECT(0x73, gbc.readMem(0x9bc2));
        // CB 73 020E
        gbc.setState(0x4ce7, 0x77da, 0x4640, 0x3b9e, 0xc1a8, 0x22c4, 0x0, 0x1);
        gbc.writeMem(0x4ce7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x77da, gbc.sp());
        EXPECT(0x4ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 020F
        gbc.setState(0x557f, 0xd82e, 0x9810, 0x9935, 0x427c, 0x6959, 0x0, 0x1);
        gbc.writeMem(0x557f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd82e, gbc.sp());
        EXPECT(0x5581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0210
        gbc.setState(0x2d57, 0x386, 0x8bd0, 0xfd72, 0xda60, 0x22cb, 0x0, 0x0);
        gbc.writeMem(0x2d57, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x386, gbc.sp());
        EXPECT(0x2d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0211
        gbc.setState(0x5f3c, 0xbc7f, 0x6c00, 0x203, 0x9a2f, 0xa6bd, 0x0, 0x1);
        gbc.writeMem(0x5f3c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbc7f, gbc.sp());
        EXPECT(0x5f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0212
        gbc.setState(0x19cb, 0x3d9d, 0xdf50, 0xe1e3, 0xa736, 0xe8e4, 0x0, 0x0);
        gbc.writeMem(0x19cb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3d9d, gbc.sp());
        EXPECT(0x19cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0213
        gbc.setState(0x1a0a, 0x2f18, 0x8c20, 0xc69e, 0x8fb8, 0x1dc7, 0x0, 0x1);
        gbc.writeMem(0x1a0a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2f18, gbc.sp());
        EXPECT(0x1a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0214
        gbc.setState(0x7bf0, 0xfea4, 0x13e0, 0xf319, 0x8fef, 0x762d, 0x0, 0x0);
        gbc.writeMem(0x7bf0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfea4, gbc.sp());
        EXPECT(0x7bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0215
        gbc.setState(0xd1af, 0xee3a, 0x1350, 0x5956, 0x6ed7, 0xb3b6, 0x0, 0x1);
        gbc.writeMem(0xd1af, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xee3a, gbc.sp());
        EXPECT(0xd1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1af));
        EXPECT(0x73, gbc.readMem(0xd1b0));
        // CB 73 0216
        gbc.setState(0xd308, 0x155c, 0xf7d0, 0xde2e, 0xf482, 0x102b, 0x0, 0x1);
        gbc.writeMem(0xd308, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x155c, gbc.sp());
        EXPECT(0xd30a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd308));
        EXPECT(0x73, gbc.readMem(0xd309));
        // CB 73 0217
        gbc.setState(0x9cda, 0xa68c, 0xd2c0, 0x7045, 0xc59f, 0x7562, 0x0, 0x1);
        gbc.writeMem(0x9cda, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa68c, gbc.sp());
        EXPECT(0x9cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cda));
        EXPECT(0x73, gbc.readMem(0x9cdb));
        // CB 73 0218
        gbc.setState(0xd699, 0x365f, 0xf490, 0xb090, 0x529e, 0x613, 0x0, 0x0);
        gbc.writeMem(0xd699, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x365f, gbc.sp());
        EXPECT(0xd69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd699));
        EXPECT(0x73, gbc.readMem(0xd69a));
        // CB 73 0219
        gbc.setState(0x4ac, 0x2cbb, 0x6630, 0x23d0, 0xeb7, 0x4c88, 0x1, 0x0);
        gbc.writeMem(0x4ac, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2cbb, gbc.sp());
        EXPECT(0x4ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 021A
        gbc.setState(0x5189, 0xa715, 0xfa10, 0x6551, 0x3fad, 0x8d0c, 0x0, 0x0);
        gbc.writeMem(0x5189, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa715, gbc.sp());
        EXPECT(0x518b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 021B
        gbc.setState(0xb10, 0x45a7, 0xb7c0, 0xd480, 0xa67a, 0x64af, 0x1, 0x0);
        gbc.writeMem(0xb10, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x45a7, gbc.sp());
        EXPECT(0xb12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 021C
        gbc.setState(0xa6a9, 0x5646, 0xcfc0, 0x5237, 0x8e10, 0xfb6d, 0x1, 0x1);
        gbc.writeMem(0xa6a9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5646, gbc.sp());
        EXPECT(0xa6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a9));
        EXPECT(0x73, gbc.readMem(0xa6aa));
        // CB 73 021D
        gbc.setState(0xdd00, 0x174f, 0x7450, 0xd9aa, 0xc7, 0xc26a, 0x0, 0x1);
        gbc.writeMem(0xdd00, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x174f, gbc.sp());
        EXPECT(0xdd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd00));
        EXPECT(0x73, gbc.readMem(0xdd01));
        // CB 73 021E
        gbc.setState(0x8234, 0x6d13, 0x2000, 0x94b6, 0x6d9d, 0xad9d, 0x1, 0x0);
        gbc.writeMem(0x8234, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6d13, gbc.sp());
        EXPECT(0x8236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8234));
        EXPECT(0x73, gbc.readMem(0x8235));
        // CB 73 021F
        gbc.setState(0xd45e, 0xeed2, 0x2d50, 0x6f04, 0x307c, 0x367d, 0x0, 0x0);
        gbc.writeMem(0xd45e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xeed2, gbc.sp());
        EXPECT(0xd460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd45e));
        EXPECT(0x73, gbc.readMem(0xd45f));
        // CB 73 0220
        gbc.setState(0x7ba4, 0x7ff7, 0xf3e0, 0x22dc, 0xe8a8, 0x6050, 0x1, 0x1);
        gbc.writeMem(0x7ba4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7ff7, gbc.sp());
        EXPECT(0x7ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0221
        gbc.setState(0x251b, 0x23d7, 0x1c80, 0xae9d, 0x2f5a, 0x3660, 0x1, 0x1);
        gbc.writeMem(0x251b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x23d7, gbc.sp());
        EXPECT(0x251d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0222
        gbc.setState(0xcbad, 0x86d, 0x7a60, 0x7397, 0x2077, 0x7cf3, 0x1, 0x1);
        gbc.writeMem(0xcbad, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x86d, gbc.sp());
        EXPECT(0xcbaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbad));
        EXPECT(0x73, gbc.readMem(0xcbae));
        // CB 73 0223
        gbc.setState(0x52c3, 0x1714, 0x1d0, 0x3a8c, 0xbda0, 0x489a, 0x0, 0x1);
        gbc.writeMem(0x52c3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1714, gbc.sp());
        EXPECT(0x52c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0224
        gbc.setState(0xc1c, 0x3787, 0x9d70, 0x6cc6, 0x7173, 0x7856, 0x0, 0x0);
        gbc.writeMem(0xc1c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3787, gbc.sp());
        EXPECT(0xc1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0225
        gbc.setState(0x1df7, 0x4b1d, 0xd930, 0x7a7d, 0xb293, 0xe5c9, 0x1, 0x0);
        gbc.writeMem(0x1df7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4b1d, gbc.sp());
        EXPECT(0x1df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0226
        gbc.setState(0xd933, 0xabd2, 0x5a40, 0x88d6, 0xab20, 0xb7e9, 0x1, 0x1);
        gbc.writeMem(0xd933, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xabd2, gbc.sp());
        EXPECT(0xd935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd933));
        EXPECT(0x73, gbc.readMem(0xd934));
        // CB 73 0227
        gbc.setState(0x9f5e, 0xdadd, 0x4dc0, 0x4d90, 0x885d, 0x3d02, 0x0, 0x0);
        gbc.writeMem(0x9f5e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdadd, gbc.sp());
        EXPECT(0x9f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5e));
        EXPECT(0x73, gbc.readMem(0x9f5f));
        // CB 73 0228
        gbc.setState(0x7dbf, 0x9b1, 0x4ce0, 0xc173, 0x1f67, 0x9d4c, 0x0, 0x1);
        gbc.writeMem(0x7dbf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9b1, gbc.sp());
        EXPECT(0x7dc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0229
        gbc.setState(0xb3bf, 0x729, 0x2950, 0x83c8, 0x767, 0xc932, 0x0, 0x0);
        gbc.writeMem(0xb3bf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x729, gbc.sp());
        EXPECT(0xb3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bf));
        EXPECT(0x73, gbc.readMem(0xb3c0));
        // CB 73 022A
        gbc.setState(0x8e5d, 0x6ce4, 0x600, 0xbcfc, 0x3dfc, 0xfc0c, 0x1, 0x0);
        gbc.writeMem(0x8e5d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6ce4, gbc.sp());
        EXPECT(0x8e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e5d));
        EXPECT(0x73, gbc.readMem(0x8e5e));
        // CB 73 022B
        gbc.setState(0xc175, 0xa3c4, 0x70e0, 0x1afb, 0x2071, 0xd7af, 0x1, 0x0);
        gbc.writeMem(0xc175, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa3c4, gbc.sp());
        EXPECT(0xc177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc175));
        EXPECT(0x73, gbc.readMem(0xc176));
        // CB 73 022C
        gbc.setState(0x308f, 0x33e6, 0xa50, 0xcf85, 0x433c, 0x9dd, 0x0, 0x1);
        gbc.writeMem(0x308f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x33e6, gbc.sp());
        EXPECT(0x3091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 022D
        gbc.setState(0xc52e, 0xf33a, 0x45c0, 0xe53, 0x7ab1, 0x14da, 0x1, 0x1);
        gbc.writeMem(0xc52e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf33a, gbc.sp());
        EXPECT(0xc530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc52e));
        EXPECT(0x73, gbc.readMem(0xc52f));
        // CB 73 022E
        gbc.setState(0x874b, 0xab5f, 0x4970, 0xb6b4, 0xab74, 0x5547, 0x1, 0x1);
        gbc.writeMem(0x874b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xab5f, gbc.sp());
        EXPECT(0x874d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874b));
        EXPECT(0x73, gbc.readMem(0x874c));
        // CB 73 022F
        gbc.setState(0xd390, 0x46c7, 0x5d0, 0xc58e, 0x279b, 0x5557, 0x1, 0x0);
        gbc.writeMem(0xd390, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x46c7, gbc.sp());
        EXPECT(0xd392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd390));
        EXPECT(0x73, gbc.readMem(0xd391));
        // CB 73 0230
        gbc.setState(0xcd04, 0xa3c7, 0xac50, 0xb3dc, 0xb54a, 0xc2c4, 0x0, 0x1);
        gbc.writeMem(0xcd04, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa3c7, gbc.sp());
        EXPECT(0xcd06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd04));
        EXPECT(0x73, gbc.readMem(0xcd05));
        // CB 73 0231
        gbc.setState(0xef8b, 0xb479, 0x8890, 0x6c7f, 0x4d04, 0xa423, 0x1, 0x1);
        gbc.writeMem(0xef8b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb479, gbc.sp());
        EXPECT(0xef8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef8b));
        EXPECT(0x73, gbc.readMem(0xef8c));
        // CB 73 0232
        gbc.setState(0x9577, 0x5c14, 0x5560, 0x894d, 0x2a17, 0x470, 0x0, 0x0);
        gbc.writeMem(0x9577, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5c14, gbc.sp());
        EXPECT(0x9579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9577));
        EXPECT(0x73, gbc.readMem(0x9578));
        // CB 73 0233
        gbc.setState(0xfa6, 0x61e0, 0x8a00, 0xc5f3, 0x6b36, 0x9f6d, 0x0, 0x1);
        gbc.writeMem(0xfa6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x61e0, gbc.sp());
        EXPECT(0xfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0234
        gbc.setState(0x8b3, 0x9060, 0x7c30, 0xf8be, 0xbc8e, 0xcce1, 0x0, 0x0);
        gbc.writeMem(0x8b3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9060, gbc.sp());
        EXPECT(0x8b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0235
        gbc.setState(0x683, 0x22a3, 0x2040, 0xb419, 0xd06, 0x7dcb, 0x0, 0x1);
        gbc.writeMem(0x683, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x22a3, gbc.sp());
        EXPECT(0x685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0236
        gbc.setState(0x61c0, 0x5e66, 0x1ac0, 0x7ec5, 0x4434, 0x434b, 0x0, 0x1);
        gbc.writeMem(0x61c0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5e66, gbc.sp());
        EXPECT(0x61c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0237
        gbc.setState(0x1491, 0x5ee0, 0xec20, 0x1efc, 0xae84, 0xec26, 0x0, 0x0);
        gbc.writeMem(0x1491, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5ee0, gbc.sp());
        EXPECT(0x1493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0238
        gbc.setState(0x22f3, 0xe5e7, 0xbd20, 0x7260, 0xb374, 0x5a9c, 0x1, 0x1);
        gbc.writeMem(0x22f3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe5e7, gbc.sp());
        EXPECT(0x22f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0239
        gbc.setState(0x9474, 0xa8aa, 0xfc60, 0x876, 0x911, 0xd186, 0x0, 0x1);
        gbc.writeMem(0x9474, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa8aa, gbc.sp());
        EXPECT(0x9476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9474));
        EXPECT(0x73, gbc.readMem(0x9475));
        // CB 73 023A
        gbc.setState(0x927b, 0xb132, 0xb680, 0xbff9, 0x5d36, 0xdc79, 0x1, 0x0);
        gbc.writeMem(0x927b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb132, gbc.sp());
        EXPECT(0x927d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x927b));
        EXPECT(0x73, gbc.readMem(0x927c));
        // CB 73 023B
        gbc.setState(0x5b68, 0xee79, 0xe600, 0xe32a, 0x158d, 0x5d0e, 0x0, 0x1);
        gbc.writeMem(0x5b68, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xee79, gbc.sp());
        EXPECT(0x5b6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 023C
        gbc.setState(0x9964, 0x56aa, 0xc60, 0xf56c, 0x62bd, 0xb91c, 0x1, 0x0);
        gbc.writeMem(0x9964, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x56aa, gbc.sp());
        EXPECT(0x9966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9964));
        EXPECT(0x73, gbc.readMem(0x9965));
        // CB 73 023D
        gbc.setState(0x275e, 0xea36, 0xe4a0, 0x3cc8, 0xd589, 0xf663, 0x0, 0x1);
        gbc.writeMem(0x275e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xea36, gbc.sp());
        EXPECT(0x2760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 023E
        gbc.setState(0xe3fb, 0x2382, 0x8de0, 0xfb59, 0x9605, 0x6f85, 0x0, 0x1);
        gbc.writeMem(0xe3fb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2382, gbc.sp());
        EXPECT(0xe3fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3fb));
        EXPECT(0x73, gbc.readMem(0xe3fc));
        // CB 73 023F
        gbc.setState(0xcc85, 0x5d08, 0x68c0, 0x6eab, 0xf67, 0xd625, 0x0, 0x0);
        gbc.writeMem(0xcc85, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5d08, gbc.sp());
        EXPECT(0xcc87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc85));
        EXPECT(0x73, gbc.readMem(0xcc86));
        // CB 73 0240
        gbc.setState(0x4ffe, 0x61c8, 0x5720, 0xf2f4, 0x5501, 0x7fa0, 0x1, 0x0);
        gbc.writeMem(0x4ffe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x61c8, gbc.sp());
        EXPECT(0x5000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0241
        gbc.setState(0x7955, 0x184a, 0x3ad0, 0x6745, 0x4cba, 0x3f4d, 0x1, 0x0);
        gbc.writeMem(0x7955, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x184a, gbc.sp());
        EXPECT(0x7957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0242
        gbc.setState(0xcc79, 0x6a06, 0xa80, 0xd938, 0xc3b7, 0x3a65, 0x1, 0x0);
        gbc.writeMem(0xcc79, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6a06, gbc.sp());
        EXPECT(0xcc7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc79));
        EXPECT(0x73, gbc.readMem(0xcc7a));
        // CB 73 0243
        gbc.setState(0xda53, 0xd28, 0x3670, 0x8cfa, 0xd377, 0x9f4c, 0x0, 0x0);
        gbc.writeMem(0xda53, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd28, gbc.sp());
        EXPECT(0xda55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda53));
        EXPECT(0x73, gbc.readMem(0xda54));
        // CB 73 0244
        gbc.setState(0x1ba5, 0xfa6a, 0xe570, 0xaa49, 0x90b4, 0x6c55, 0x0, 0x1);
        gbc.writeMem(0x1ba5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xfa6a, gbc.sp());
        EXPECT(0x1ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0245
        gbc.setState(0x7749, 0xf12, 0xaa70, 0x8bc9, 0xe2ce, 0x2547, 0x1, 0x1);
        gbc.writeMem(0x7749, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf12, gbc.sp());
        EXPECT(0x774b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0246
        gbc.setState(0xc48e, 0x597e, 0x8fe0, 0x9105, 0xf44f, 0x6621, 0x1, 0x1);
        gbc.writeMem(0xc48e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x597e, gbc.sp());
        EXPECT(0xc490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc48e));
        EXPECT(0x73, gbc.readMem(0xc48f));
        // CB 73 0247
        gbc.setState(0xc45e, 0x265e, 0xdc40, 0x37d2, 0xb30a, 0xeaf8, 0x1, 0x1);
        gbc.writeMem(0xc45e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x265e, gbc.sp());
        EXPECT(0xc460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45e));
        EXPECT(0x73, gbc.readMem(0xc45f));
        // CB 73 0248
        gbc.setState(0x72ed, 0x87bb, 0xc110, 0x13da, 0x8006, 0xefb7, 0x1, 0x0);
        gbc.writeMem(0x72ed, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x87bb, gbc.sp());
        EXPECT(0x72ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0249
        gbc.setState(0xc0c5, 0xbe76, 0x9a0, 0xc4e4, 0x92bf, 0x77d8, 0x0, 0x0);
        gbc.writeMem(0xc0c5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbe76, gbc.sp());
        EXPECT(0xc0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c5));
        EXPECT(0x73, gbc.readMem(0xc0c6));
        // CB 73 024A
        gbc.setState(0x6ad6, 0xa7ec, 0xf30, 0x151b, 0x86ab, 0x146c, 0x0, 0x1);
        gbc.writeMem(0x6ad6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa7ec, gbc.sp());
        EXPECT(0x6ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 024B
        gbc.setState(0x3039, 0x4e91, 0x9530, 0x2522, 0xfbf7, 0x36, 0x0, 0x1);
        gbc.writeMem(0x3039, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4e91, gbc.sp());
        EXPECT(0x303b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 024D
        gbc.setState(0x116b, 0x1d0d, 0x1dc0, 0xae2e, 0x8a31, 0xf0f4, 0x0, 0x0);
        gbc.writeMem(0x116b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1d0d, gbc.sp());
        EXPECT(0x116d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 024E
        gbc.setState(0xcb04, 0x4e1e, 0x4210, 0x8e5f, 0x2036, 0x45ee, 0x0, 0x0);
        gbc.writeMem(0xcb04, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4e1e, gbc.sp());
        EXPECT(0xcb06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb04));
        EXPECT(0x73, gbc.readMem(0xcb05));
        // CB 73 024F
        gbc.setState(0xb6c2, 0xca83, 0x660, 0xb190, 0xb8b7, 0xa0b, 0x1, 0x0);
        gbc.writeMem(0xb6c2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xca83, gbc.sp());
        EXPECT(0xb6c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c2));
        EXPECT(0x73, gbc.readMem(0xb6c3));
        // CB 73 0250
        gbc.setState(0x660, 0x9f37, 0x6250, 0x784, 0xd544, 0x2596, 0x1, 0x0);
        gbc.writeMem(0x660, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9f37, gbc.sp());
        EXPECT(0x662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0251
        gbc.setState(0xb5a, 0xe14d, 0x58b0, 0xd287, 0xa0c7, 0x4778, 0x0, 0x1);
        gbc.writeMem(0xb5a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe14d, gbc.sp());
        EXPECT(0xb5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0252
        gbc.setState(0xdd0d, 0x13c2, 0xc2b0, 0x263b, 0xd392, 0x99d1, 0x0, 0x0);
        gbc.writeMem(0xdd0d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x13c2, gbc.sp());
        EXPECT(0xdd0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0d));
        EXPECT(0x73, gbc.readMem(0xdd0e));
        // CB 73 0253
        gbc.setState(0x86a3, 0xa3dd, 0x180, 0x2fa1, 0x3afd, 0xed38, 0x1, 0x0);
        gbc.writeMem(0x86a3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa3dd, gbc.sp());
        EXPECT(0x86a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a3));
        EXPECT(0x73, gbc.readMem(0x86a4));
        // CB 73 0254
        gbc.setState(0x4a1d, 0xc1d8, 0x1520, 0x117, 0x2f3, 0xad22, 0x1, 0x1);
        gbc.writeMem(0x4a1d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc1d8, gbc.sp());
        EXPECT(0x4a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0255
        gbc.setState(0xaebf, 0x1ef9, 0xb3e0, 0x4c4c, 0x61c1, 0x9744, 0x0, 0x0);
        gbc.writeMem(0xaebf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1ef9, gbc.sp());
        EXPECT(0xaec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaebf));
        EXPECT(0x73, gbc.readMem(0xaec0));
        // CB 73 0256
        gbc.setState(0x8988, 0x2326, 0xadd0, 0xd320, 0x9642, 0x100e, 0x1, 0x1);
        gbc.writeMem(0x8988, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2326, gbc.sp());
        EXPECT(0x898a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8988));
        EXPECT(0x73, gbc.readMem(0x8989));
        // CB 73 0257
        gbc.setState(0x22c3, 0xc7ee, 0x7ae0, 0x4efb, 0x4be9, 0xd118, 0x0, 0x1);
        gbc.writeMem(0x22c3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc7ee, gbc.sp());
        EXPECT(0x22c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0258
        gbc.setState(0x55f6, 0x61fc, 0x92a0, 0x188a, 0x76ac, 0x77fa, 0x1, 0x0);
        gbc.writeMem(0x55f6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x61fc, gbc.sp());
        EXPECT(0x55f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0259
        gbc.setState(0xc977, 0xe133, 0x7be0, 0x27e7, 0x6cf4, 0x5117, 0x0, 0x0);
        gbc.writeMem(0xc977, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe133, gbc.sp());
        EXPECT(0xc979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc977));
        EXPECT(0x73, gbc.readMem(0xc978));
        // CB 73 025A
        gbc.setState(0x9e42, 0x6d45, 0xce00, 0x3777, 0xce66, 0x9fcd, 0x1, 0x0);
        gbc.writeMem(0x9e42, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6d45, gbc.sp());
        EXPECT(0x9e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e42));
        EXPECT(0x73, gbc.readMem(0x9e43));
        // CB 73 025C
        gbc.setState(0x329f, 0xc771, 0xf1d0, 0x585e, 0xae95, 0x3ca, 0x0, 0x0);
        gbc.writeMem(0x329f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc771, gbc.sp());
        EXPECT(0x32a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 025D
        gbc.setState(0x5ea1, 0x8f72, 0x2a00, 0x4acd, 0xbf20, 0xb5ae, 0x1, 0x0);
        gbc.writeMem(0x5ea1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8f72, gbc.sp());
        EXPECT(0x5ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 025E
        gbc.setState(0x12bd, 0x1d97, 0x61c0, 0x3f97, 0x1b33, 0xd06f, 0x1, 0x1);
        gbc.writeMem(0x12bd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1d97, gbc.sp());
        EXPECT(0x12bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 025F
        gbc.setState(0x4391, 0x58db, 0xe9c0, 0xbff5, 0xb951, 0xefa6, 0x0, 0x0);
        gbc.writeMem(0x4391, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x58db, gbc.sp());
        EXPECT(0x4393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0260
        gbc.setState(0x81b0, 0x8c6c, 0xe30, 0x6ed1, 0x7c73, 0xca21, 0x1, 0x1);
        gbc.writeMem(0x81b0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8c6c, gbc.sp());
        EXPECT(0x81b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b0));
        EXPECT(0x73, gbc.readMem(0x81b1));
        // CB 73 0261
        gbc.setState(0x940b, 0x33c8, 0x39d0, 0xd703, 0x9231, 0x2edd, 0x1, 0x1);
        gbc.writeMem(0x940b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x33c8, gbc.sp());
        EXPECT(0x940d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940b));
        EXPECT(0x73, gbc.readMem(0x940c));
        // CB 73 0262
        gbc.setState(0x72e1, 0x3f47, 0x3b80, 0x3739, 0xd20e, 0x2eca, 0x1, 0x1);
        gbc.writeMem(0x72e1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3f47, gbc.sp());
        EXPECT(0x72e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0263
        gbc.setState(0x5ac5, 0x9ee1, 0x13f0, 0x12a1, 0xe01a, 0xf81, 0x0, 0x1);
        gbc.writeMem(0x5ac5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9ee1, gbc.sp());
        EXPECT(0x5ac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0264
        gbc.setState(0x6db4, 0x792, 0x26a0, 0x13d0, 0xb6d, 0xcd49, 0x0, 0x0);
        gbc.writeMem(0x6db4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x792, gbc.sp());
        EXPECT(0x6db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0265
        gbc.setState(0xcd67, 0xe2a4, 0xa140, 0x1c5c, 0x2e09, 0xeb51, 0x1, 0x0);
        gbc.writeMem(0xcd67, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe2a4, gbc.sp());
        EXPECT(0xcd69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd67));
        EXPECT(0x73, gbc.readMem(0xcd68));
        // CB 73 0266
        gbc.setState(0xc8a6, 0x3b1a, 0xec50, 0x1170, 0xe5bf, 0xca53, 0x0, 0x0);
        gbc.writeMem(0xc8a6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3b1a, gbc.sp());
        EXPECT(0xc8a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a6));
        EXPECT(0x73, gbc.readMem(0xc8a7));
        // CB 73 0267
        gbc.setState(0x6ca5, 0x10f8, 0x4590, 0xa996, 0xb119, 0xddf5, 0x1, 0x1);
        gbc.writeMem(0x6ca5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x10f8, gbc.sp());
        EXPECT(0x6ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0268
        gbc.setState(0x38d2, 0xd338, 0xc890, 0xb3de, 0xbeaf, 0x897f, 0x1, 0x1);
        gbc.writeMem(0x38d2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd338, gbc.sp());
        EXPECT(0x38d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0269
        gbc.setState(0xd6af, 0xa9d4, 0x7fd0, 0x4926, 0x4558, 0x685e, 0x0, 0x0);
        gbc.writeMem(0xd6af, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa9d4, gbc.sp());
        EXPECT(0xd6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6af));
        EXPECT(0x73, gbc.readMem(0xd6b0));
        // CB 73 026A
        gbc.setState(0x5412, 0x3a4a, 0x840, 0x2641, 0x240, 0xf984, 0x1, 0x0);
        gbc.writeMem(0x5412, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3a4a, gbc.sp());
        EXPECT(0x5414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 026B
        gbc.setState(0x62c4, 0x6cd4, 0xc8f0, 0xc055, 0xcf1e, 0x59e1, 0x1, 0x0);
        gbc.writeMem(0x62c4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6cd4, gbc.sp());
        EXPECT(0x62c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 026D
        gbc.setState(0x302c, 0x4fce, 0x7b80, 0x3e9c, 0x7be4, 0xe0c8, 0x0, 0x0);
        gbc.writeMem(0x302c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4fce, gbc.sp());
        EXPECT(0x302e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 026E
        gbc.setState(0x7729, 0x4acc, 0x6050, 0x755c, 0x8c09, 0x293a, 0x1, 0x0);
        gbc.writeMem(0x7729, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4acc, gbc.sp());
        EXPECT(0x772b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0270
        gbc.setState(0x5c34, 0x215, 0x5960, 0x8a3d, 0xbcb0, 0x1a92, 0x0, 0x0);
        gbc.writeMem(0x5c34, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x215, gbc.sp());
        EXPECT(0x5c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0271
        gbc.setState(0x3dc2, 0xc964, 0x1140, 0x7c8d, 0xc40c, 0x1184, 0x0, 0x1);
        gbc.writeMem(0x3dc2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc964, gbc.sp());
        EXPECT(0x3dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0272
        gbc.setState(0x2282, 0x5724, 0x5930, 0x2532, 0xfca7, 0x748, 0x0, 0x0);
        gbc.writeMem(0x2282, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5724, gbc.sp());
        EXPECT(0x2284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0273
        gbc.setState(0x4bc, 0xb418, 0x70, 0xec17, 0x5ca5, 0x9ba6, 0x1, 0x1);
        gbc.writeMem(0x4bc, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb418, gbc.sp());
        EXPECT(0x4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0274
        gbc.setState(0x230b, 0xb335, 0x4cb0, 0x6810, 0xc225, 0x6ba2, 0x1, 0x0);
        gbc.writeMem(0x230b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb335, gbc.sp());
        EXPECT(0x230d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0275
        gbc.setState(0x7824, 0x8d1c, 0x4910, 0x67bf, 0x9ee5, 0x6025, 0x1, 0x0);
        gbc.writeMem(0x7824, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8d1c, gbc.sp());
        EXPECT(0x7826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0276
        gbc.setState(0xbd55, 0xf901, 0x72c0, 0xbab6, 0xf937, 0x5979, 0x1, 0x0);
        gbc.writeMem(0xbd55, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf901, gbc.sp());
        EXPECT(0xbd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd55));
        EXPECT(0x73, gbc.readMem(0xbd56));
        // CB 73 0277
        gbc.setState(0xdcbb, 0x979a, 0x5e10, 0xc012, 0x1873, 0x43d9, 0x1, 0x0);
        gbc.writeMem(0xdcbb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x979a, gbc.sp());
        EXPECT(0xdcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcbb));
        EXPECT(0x73, gbc.readMem(0xdcbc));
        // CB 73 0278
        gbc.setState(0x7c1b, 0x2ca, 0x75e0, 0x3e7f, 0x9b76, 0xbb87, 0x0, 0x0);
        gbc.writeMem(0x7c1b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2ca, gbc.sp());
        EXPECT(0x7c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0279
        gbc.setState(0x2f24, 0x6523, 0x50d0, 0xe0e, 0x24b5, 0x4eee, 0x1, 0x1);
        gbc.writeMem(0x2f24, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6523, gbc.sp());
        EXPECT(0x2f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 027A
        gbc.setState(0x98b0, 0x7886, 0x5360, 0x19bc, 0x5fc4, 0xe415, 0x1, 0x0);
        gbc.writeMem(0x98b0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7886, gbc.sp());
        EXPECT(0x98b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b0));
        EXPECT(0x73, gbc.readMem(0x98b1));
        // CB 73 027B
        gbc.setState(0x177f, 0xb0de, 0x3300, 0x128e, 0x123b, 0x65f0, 0x0, 0x0);
        gbc.writeMem(0x177f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb0de, gbc.sp());
        EXPECT(0x1781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 027C
        gbc.setState(0x2c84, 0x73e8, 0xdb50, 0xca10, 0x328f, 0xab1e, 0x0, 0x1);
        gbc.writeMem(0x2c84, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x73e8, gbc.sp());
        EXPECT(0x2c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 027D
        gbc.setState(0x5137, 0xbc6c, 0x3a50, 0xcaa8, 0x3206, 0x9062, 0x1, 0x0);
        gbc.writeMem(0x5137, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbc6c, gbc.sp());
        EXPECT(0x5139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 027E
        gbc.setState(0x9ac7, 0x5bbb, 0x3050, 0x5048, 0xf4e1, 0x5dc7, 0x0, 0x0);
        gbc.writeMem(0x9ac7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5bbb, gbc.sp());
        EXPECT(0x9ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac7));
        EXPECT(0x73, gbc.readMem(0x9ac8));
        // CB 73 027F
        gbc.setState(0x5988, 0x71e1, 0x5020, 0x2113, 0x5e5d, 0x679a, 0x0, 0x1);
        gbc.writeMem(0x5988, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x71e1, gbc.sp());
        EXPECT(0x598a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0280
        gbc.setState(0xcde9, 0xea3d, 0xae60, 0x692a, 0x1e6, 0x8151, 0x0, 0x0);
        gbc.writeMem(0xcde9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xea3d, gbc.sp());
        EXPECT(0xcdeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde9));
        EXPECT(0x73, gbc.readMem(0xcdea));
        // CB 73 0281
        gbc.setState(0x3976, 0xce5a, 0xab80, 0x542f, 0xcd95, 0x3dac, 0x1, 0x0);
        gbc.writeMem(0x3976, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xce5a, gbc.sp());
        EXPECT(0x3978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0282
        gbc.setState(0x34d2, 0x9687, 0x74b0, 0xb79d, 0x51f5, 0x8e9e, 0x1, 0x1);
        gbc.writeMem(0x34d2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9687, gbc.sp());
        EXPECT(0x34d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0283
        gbc.setState(0x6741, 0x73ba, 0x69b0, 0x4740, 0xc2f0, 0xe1dc, 0x0, 0x1);
        gbc.writeMem(0x6741, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x73ba, gbc.sp());
        EXPECT(0x6743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0285
        gbc.setState(0xef7c, 0x8e7a, 0xbfa0, 0x4b80, 0xcf11, 0x8351, 0x1, 0x1);
        gbc.writeMem(0xef7c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8e7a, gbc.sp());
        EXPECT(0xef7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7c));
        EXPECT(0x73, gbc.readMem(0xef7d));
        // CB 73 0286
        gbc.setState(0x36b3, 0x6d81, 0xda80, 0xc278, 0xfb5b, 0xd06c, 0x1, 0x0);
        gbc.writeMem(0x36b3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6d81, gbc.sp());
        EXPECT(0x36b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0287
        gbc.setState(0x3e31, 0xee6b, 0xedc0, 0xe741, 0x9d3, 0xa837, 0x1, 0x1);
        gbc.writeMem(0x3e31, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xee6b, gbc.sp());
        EXPECT(0x3e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0288
        gbc.setState(0x7f7c, 0x4045, 0xc000, 0xd394, 0xcf9e, 0x835, 0x0, 0x0);
        gbc.writeMem(0x7f7c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4045, gbc.sp());
        EXPECT(0x7f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0289
        gbc.setState(0x6e3c, 0x4beb, 0x3950, 0x8190, 0x4dbf, 0xabd, 0x1, 0x1);
        gbc.writeMem(0x6e3c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4beb, gbc.sp());
        EXPECT(0x6e3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 028A
        gbc.setState(0x4ce6, 0xc76c, 0xcc40, 0x5a71, 0xf057, 0x5295, 0x0, 0x0);
        gbc.writeMem(0x4ce6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc76c, gbc.sp());
        EXPECT(0x4ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 028B
        gbc.setState(0x53ab, 0xd358, 0x7db0, 0xd621, 0xbd15, 0x8794, 0x0, 0x1);
        gbc.writeMem(0x53ab, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd358, gbc.sp());
        EXPECT(0x53ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 028C
        gbc.setState(0xbe82, 0x66ba, 0x2160, 0x1891, 0xc009, 0xefc6, 0x1, 0x0);
        gbc.writeMem(0xbe82, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x66ba, gbc.sp());
        EXPECT(0xbe84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe82));
        EXPECT(0x73, gbc.readMem(0xbe83));
        // CB 73 028D
        gbc.setState(0x3e96, 0x33ad, 0x5cd0, 0x60ab, 0xddcf, 0xeea8, 0x1, 0x1);
        gbc.writeMem(0x3e96, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x33ad, gbc.sp());
        EXPECT(0x3e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 028E
        gbc.setState(0x2097, 0xfd7, 0x3390, 0x2528, 0xcc39, 0xa6e9, 0x1, 0x0);
        gbc.writeMem(0x2097, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfd7, gbc.sp());
        EXPECT(0x2099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 028F
        gbc.setState(0x37d6, 0x483c, 0xbb00, 0xafba, 0x51e4, 0xf131, 0x1, 0x0);
        gbc.writeMem(0x37d6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x483c, gbc.sp());
        EXPECT(0x37d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0290
        gbc.setState(0x95e6, 0xb5ea, 0xcdf0, 0xb959, 0xd73c, 0x2197, 0x0, 0x1);
        gbc.writeMem(0x95e6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb5ea, gbc.sp());
        EXPECT(0x95e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e6));
        EXPECT(0x73, gbc.readMem(0x95e7));
        // CB 73 0291
        gbc.setState(0x5826, 0x51e1, 0x5850, 0x89cb, 0x60c5, 0xad4d, 0x0, 0x1);
        gbc.writeMem(0x5826, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x51e1, gbc.sp());
        EXPECT(0x5828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0292
        gbc.setState(0x905a, 0x5bdf, 0xaf40, 0x2475, 0x6357, 0xa0d6, 0x0, 0x1);
        gbc.writeMem(0x905a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5bdf, gbc.sp());
        EXPECT(0x905c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905a));
        EXPECT(0x73, gbc.readMem(0x905b));
        // CB 73 0293
        gbc.setState(0x22b0, 0x6b11, 0x2d00, 0x4653, 0xbbd2, 0x7a49, 0x0, 0x1);
        gbc.writeMem(0x22b0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6b11, gbc.sp());
        EXPECT(0x22b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0295
        gbc.setState(0x6bd0, 0x316, 0x4880, 0x1371, 0xc2dd, 0x677e, 0x1, 0x1);
        gbc.writeMem(0x6bd0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x316, gbc.sp());
        EXPECT(0x6bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0296
        gbc.setState(0x7a51, 0x14c7, 0x13d0, 0xc26e, 0x446, 0x4054, 0x0, 0x0);
        gbc.writeMem(0x7a51, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x14c7, gbc.sp());
        EXPECT(0x7a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0297
        gbc.setState(0x4ec5, 0x397f, 0x6ed0, 0xfe0e, 0x6fb1, 0x548, 0x1, 0x0);
        gbc.writeMem(0x4ec5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x397f, gbc.sp());
        EXPECT(0x4ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0298
        gbc.setState(0x4efe, 0xb80c, 0xde60, 0x10d6, 0x25b9, 0xc2d6, 0x0, 0x0);
        gbc.writeMem(0x4efe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb80c, gbc.sp());
        EXPECT(0x4f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0299
        gbc.setState(0xb7ca, 0x53ba, 0xaa90, 0x891a, 0xe3c, 0xa7d8, 0x1, 0x1);
        gbc.writeMem(0xb7ca, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x53ba, gbc.sp());
        EXPECT(0xb7cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ca));
        EXPECT(0x73, gbc.readMem(0xb7cb));
        // CB 73 029A
        gbc.setState(0xb1d3, 0x1a4c, 0xe2a0, 0x900, 0x2373, 0x4383, 0x1, 0x0);
        gbc.writeMem(0xb1d3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1a4c, gbc.sp());
        EXPECT(0xb1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d3));
        EXPECT(0x73, gbc.readMem(0xb1d4));
        // CB 73 029B
        gbc.setState(0x2905, 0xe6cd, 0x9d70, 0x6298, 0x2cc2, 0xdf80, 0x0, 0x0);
        gbc.writeMem(0x2905, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe6cd, gbc.sp());
        EXPECT(0x2907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 029C
        gbc.setState(0x2683, 0x60c9, 0xeb50, 0xe29e, 0x93d3, 0xb967, 0x0, 0x0);
        gbc.writeMem(0x2683, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x60c9, gbc.sp());
        EXPECT(0x2685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 029D
        gbc.setState(0xe2ee, 0x77a9, 0x2110, 0xe3ea, 0xcf4b, 0xd12d, 0x0, 0x0);
        gbc.writeMem(0xe2ee, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x77a9, gbc.sp());
        EXPECT(0xe2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ee));
        EXPECT(0x73, gbc.readMem(0xe2ef));
        // CB 73 029E
        gbc.setState(0xd942, 0x61d0, 0xc560, 0xb6d3, 0x11a6, 0x4b63, 0x1, 0x1);
        gbc.writeMem(0xd942, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x61d0, gbc.sp());
        EXPECT(0xd944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd942));
        EXPECT(0x73, gbc.readMem(0xd943));
        // CB 73 029F
        gbc.setState(0x9d5a, 0x30dd, 0x140, 0x1b8c, 0xd780, 0xbdec, 0x0, 0x0);
        gbc.writeMem(0x9d5a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x30dd, gbc.sp());
        EXPECT(0x9d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d5a));
        EXPECT(0x73, gbc.readMem(0x9d5b));
        // CB 73 02A0
        gbc.setState(0x4f84, 0x36c8, 0x3720, 0xbea3, 0x2dbc, 0x709c, 0x0, 0x0);
        gbc.writeMem(0x4f84, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x36c8, gbc.sp());
        EXPECT(0x4f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02A1
        gbc.setState(0x4cd5, 0x97d0, 0xbdc0, 0xb15c, 0x8077, 0x61bd, 0x1, 0x1);
        gbc.writeMem(0x4cd5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x97d0, gbc.sp());
        EXPECT(0x4cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02A2
        gbc.setState(0xdbfe, 0x73e6, 0x4fd0, 0x3cff, 0xedcf, 0x91a3, 0x1, 0x1);
        gbc.writeMem(0xdbfe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x73e6, gbc.sp());
        EXPECT(0xdc00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbfe));
        EXPECT(0x73, gbc.readMem(0xdbff));
        // CB 73 02A3
        gbc.setState(0x4e44, 0x3a98, 0xae20, 0x5b7e, 0x82c3, 0x87c3, 0x1, 0x1);
        gbc.writeMem(0x4e44, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3a98, gbc.sp());
        EXPECT(0x4e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02A4
        gbc.setState(0x4958, 0xc1e0, 0xdf70, 0xd971, 0x529f, 0xd075, 0x1, 0x0);
        gbc.writeMem(0x4958, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc1e0, gbc.sp());
        EXPECT(0x495a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02A5
        gbc.setState(0x7722, 0x8e3c, 0x97f0, 0x38a2, 0x97d0, 0x2013, 0x0, 0x1);
        gbc.writeMem(0x7722, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8e3c, gbc.sp());
        EXPECT(0x7724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02A6
        gbc.setState(0x275b, 0x2924, 0xb520, 0x13eb, 0x2b, 0x3312, 0x0, 0x0);
        gbc.writeMem(0x275b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2924, gbc.sp());
        EXPECT(0x275d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02A7
        gbc.setState(0xb11b, 0xf58e, 0x6d90, 0x3d1f, 0x343c, 0x5304, 0x0, 0x1);
        gbc.writeMem(0xb11b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf58e, gbc.sp());
        EXPECT(0xb11d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11b));
        EXPECT(0x73, gbc.readMem(0xb11c));
        // CB 73 02A8
        gbc.setState(0xa468, 0xbc86, 0xc990, 0xa685, 0x4da9, 0x3f, 0x1, 0x1);
        gbc.writeMem(0xa468, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbc86, gbc.sp());
        EXPECT(0xa46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa468));
        EXPECT(0x73, gbc.readMem(0xa469));
        // CB 73 02A9
        gbc.setState(0xa9a, 0x3485, 0x9410, 0xbe73, 0x72cb, 0x7dd0, 0x1, 0x0);
        gbc.writeMem(0xa9a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3485, gbc.sp());
        EXPECT(0xa9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02AA
        gbc.setState(0x56bf, 0x29e1, 0x24e0, 0xd269, 0x8742, 0x4e03, 0x1, 0x1);
        gbc.writeMem(0x56bf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x29e1, gbc.sp());
        EXPECT(0x56c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02AB
        gbc.setState(0x3d3b, 0x41c6, 0x5ad0, 0x7903, 0xfe3e, 0xcc1b, 0x1, 0x0);
        gbc.writeMem(0x3d3b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x41c6, gbc.sp());
        EXPECT(0x3d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02AC
        gbc.setState(0xb48e, 0xd603, 0x4090, 0x4f12, 0xa96a, 0xa98f, 0x0, 0x1);
        gbc.writeMem(0xb48e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd603, gbc.sp());
        EXPECT(0xb490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb48e));
        EXPECT(0x73, gbc.readMem(0xb48f));
        // CB 73 02AD
        gbc.setState(0x92b3, 0x740f, 0x31d0, 0xb1b3, 0xce75, 0x8d68, 0x1, 0x0);
        gbc.writeMem(0x92b3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x740f, gbc.sp());
        EXPECT(0x92b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b3));
        EXPECT(0x73, gbc.readMem(0x92b4));
        // CB 73 02AE
        gbc.setState(0xeb8e, 0xd33f, 0x5c40, 0xe577, 0xe72e, 0x4bb2, 0x1, 0x0);
        gbc.writeMem(0xeb8e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd33f, gbc.sp());
        EXPECT(0xeb90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8e));
        EXPECT(0x73, gbc.readMem(0xeb8f));
        // CB 73 02AF
        gbc.setState(0x4353, 0xd99b, 0x78f0, 0xac13, 0x4ddb, 0x703c, 0x1, 0x1);
        gbc.writeMem(0x4353, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd99b, gbc.sp());
        EXPECT(0x4355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02B0
        gbc.setState(0xe0e0, 0x1db4, 0x5c90, 0x845b, 0x2de9, 0xcdc4, 0x0, 0x1);
        gbc.writeMem(0xe0e0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1db4, gbc.sp());
        EXPECT(0xe0e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e0));
        EXPECT(0x73, gbc.readMem(0xe0e1));
        // CB 73 02B1
        gbc.setState(0x565c, 0xf3f1, 0xed70, 0x654, 0x7c30, 0xe045, 0x1, 0x1);
        gbc.writeMem(0x565c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf3f1, gbc.sp());
        EXPECT(0x565e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02B2
        gbc.setState(0x566, 0x12a, 0x5130, 0x9840, 0xdb0e, 0xa3d7, 0x1, 0x0);
        gbc.writeMem(0x566, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x12a, gbc.sp());
        EXPECT(0x568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02B3
        gbc.setState(0x910, 0x595, 0x5ca0, 0x1432, 0x7553, 0x67b0, 0x0, 0x1);
        gbc.writeMem(0x910, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x595, gbc.sp());
        EXPECT(0x912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02B4
        gbc.setState(0x3a7c, 0xc900, 0x2e60, 0x46a0, 0xd875, 0x1ab6, 0x0, 0x1);
        gbc.writeMem(0x3a7c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc900, gbc.sp());
        EXPECT(0x3a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02B5
        gbc.setState(0x768f, 0x45c8, 0xc1a0, 0xacc9, 0x1177, 0x669c, 0x1, 0x0);
        gbc.writeMem(0x768f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x45c8, gbc.sp());
        EXPECT(0x7691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02B6
        gbc.setState(0x7230, 0xd51c, 0xc670, 0xbb3a, 0x3e73, 0x4c1d, 0x0, 0x0);
        gbc.writeMem(0x7230, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd51c, gbc.sp());
        EXPECT(0x7232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02B7
        gbc.setState(0xe100, 0x67df, 0x2ab0, 0x6b6, 0xe410, 0xdb76, 0x0, 0x0);
        gbc.writeMem(0xe100, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x67df, gbc.sp());
        EXPECT(0xe102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe100));
        EXPECT(0x73, gbc.readMem(0xe101));
        // CB 73 02B8
        gbc.setState(0xaaf9, 0xdece, 0xbcb0, 0x8f52, 0x914, 0xcd08, 0x1, 0x1);
        gbc.writeMem(0xaaf9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdece, gbc.sp());
        EXPECT(0xaafb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf9));
        EXPECT(0x73, gbc.readMem(0xaafa));
        // CB 73 02B9
        gbc.setState(0x6e57, 0xbf, 0x1a30, 0x2417, 0xc301, 0xff14, 0x0, 0x1);
        gbc.writeMem(0x6e57, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbf, gbc.sp());
        EXPECT(0x6e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02BA
        gbc.setState(0x70b5, 0x5ae1, 0x6f80, 0xd23a, 0x7d9c, 0xcf6e, 0x1, 0x1);
        gbc.writeMem(0x70b5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5ae1, gbc.sp());
        EXPECT(0x70b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02BB
        gbc.setState(0x4ab2, 0xf363, 0xb3b0, 0xecda, 0xf0bc, 0xd28, 0x0, 0x1);
        gbc.writeMem(0x4ab2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf363, gbc.sp());
        EXPECT(0x4ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02BC
        gbc.setState(0xd189, 0x179b, 0x92e0, 0xee6a, 0x5893, 0x1efd, 0x0, 0x0);
        gbc.writeMem(0xd189, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x179b, gbc.sp());
        EXPECT(0xd18b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd189));
        EXPECT(0x73, gbc.readMem(0xd18a));
        // CB 73 02BD
        gbc.setState(0x6162, 0xd9bf, 0xfa30, 0xd0b7, 0xa997, 0xeda6, 0x1, 0x1);
        gbc.writeMem(0x6162, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd9bf, gbc.sp());
        EXPECT(0x6164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02BE
        gbc.setState(0x158f, 0x3822, 0xafa0, 0xd9a5, 0x82fb, 0xcf80, 0x0, 0x1);
        gbc.writeMem(0x158f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3822, gbc.sp());
        EXPECT(0x1591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02BF
        gbc.setState(0x8b8, 0x43bd, 0x2880, 0x761c, 0x3498, 0x7aa4, 0x0, 0x0);
        gbc.writeMem(0x8b8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x43bd, gbc.sp());
        EXPECT(0x8ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02C0
        gbc.setState(0x9fb7, 0x5b6a, 0x55f0, 0x279d, 0xa58b, 0x34db, 0x1, 0x1);
        gbc.writeMem(0x9fb7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5b6a, gbc.sp());
        EXPECT(0x9fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb7));
        EXPECT(0x73, gbc.readMem(0x9fb8));
        // CB 73 02C1
        gbc.setState(0x90f7, 0x728d, 0x3d50, 0x2878, 0x59be, 0x7a7, 0x1, 0x0);
        gbc.writeMem(0x90f7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x728d, gbc.sp());
        EXPECT(0x90f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f7));
        EXPECT(0x73, gbc.readMem(0x90f8));
        // CB 73 02C2
        gbc.setState(0x58df, 0xb56c, 0xc410, 0xa6eb, 0x3c1, 0x7536, 0x0, 0x0);
        gbc.writeMem(0x58df, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb56c, gbc.sp());
        EXPECT(0x58e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02C4
        gbc.setState(0xca52, 0x55d5, 0xdb0, 0xe4c3, 0x9a71, 0xb2e4, 0x0, 0x0);
        gbc.writeMem(0xca52, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x55d5, gbc.sp());
        EXPECT(0xca54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca52));
        EXPECT(0x73, gbc.readMem(0xca53));
        // CB 73 02C5
        gbc.setState(0x2b7d, 0xccdb, 0xa490, 0xf73, 0x2dce, 0x93c0, 0x1, 0x1);
        gbc.writeMem(0x2b7d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xccdb, gbc.sp());
        EXPECT(0x2b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02C6
        gbc.setState(0x5aff, 0xb85a, 0xe710, 0x27cd, 0x3a05, 0x8f71, 0x0, 0x0);
        gbc.writeMem(0x5aff, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb85a, gbc.sp());
        EXPECT(0x5b01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02C7
        gbc.setState(0xe234, 0x3b86, 0xbe40, 0x254d, 0xb4e1, 0x3913, 0x0, 0x1);
        gbc.writeMem(0xe234, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3b86, gbc.sp());
        EXPECT(0xe236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe234));
        EXPECT(0x73, gbc.readMem(0xe235));
        // CB 73 02C8
        gbc.setState(0x7ae4, 0x2873, 0x4750, 0x563b, 0xe1e7, 0x1086, 0x1, 0x1);
        gbc.writeMem(0x7ae4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2873, gbc.sp());
        EXPECT(0x7ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02CA
        gbc.setState(0x2e91, 0xe9dd, 0xb6f0, 0xbbba, 0xc33e, 0x8eaf, 0x1, 0x0);
        gbc.writeMem(0x2e91, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe9dd, gbc.sp());
        EXPECT(0x2e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02CB
        gbc.setState(0x5b6b, 0xc14b, 0x4d30, 0x4173, 0x6709, 0xd6ae, 0x0, 0x0);
        gbc.writeMem(0x5b6b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc14b, gbc.sp());
        EXPECT(0x5b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02CC
        gbc.setState(0x2e5d, 0x745f, 0xa380, 0xed34, 0x39f3, 0x4fb4, 0x0, 0x1);
        gbc.writeMem(0x2e5d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x745f, gbc.sp());
        EXPECT(0x2e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02CD
        gbc.setState(0xc7ee, 0xe39f, 0x65c0, 0x2075, 0x421, 0x8766, 0x1, 0x1);
        gbc.writeMem(0xc7ee, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe39f, gbc.sp());
        EXPECT(0xc7f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ee));
        EXPECT(0x73, gbc.readMem(0xc7ef));
        // CB 73 02CE
        gbc.setState(0x811d, 0x68c, 0x9620, 0x82c9, 0x1398, 0xba4e, 0x0, 0x0);
        gbc.writeMem(0x811d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x68c, gbc.sp());
        EXPECT(0x811f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811d));
        EXPECT(0x73, gbc.readMem(0x811e));
        // CB 73 02CF
        gbc.setState(0x8bed, 0xfbe4, 0x8380, 0xe614, 0x31fa, 0x4744, 0x0, 0x0);
        gbc.writeMem(0x8bed, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfbe4, gbc.sp());
        EXPECT(0x8bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bed));
        EXPECT(0x73, gbc.readMem(0x8bee));
        // CB 73 02D0
        gbc.setState(0x6c9a, 0xe8b3, 0x36e0, 0xb489, 0x7322, 0xbef4, 0x1, 0x1);
        gbc.writeMem(0x6c9a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe8b3, gbc.sp());
        EXPECT(0x6c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02D1
        gbc.setState(0xc0b0, 0xab07, 0x1ff0, 0x8628, 0xe2a4, 0x5dc3, 0x1, 0x0);
        gbc.writeMem(0xc0b0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xab07, gbc.sp());
        EXPECT(0xc0b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b0));
        EXPECT(0x73, gbc.readMem(0xc0b1));
        // CB 73 02D2
        gbc.setState(0x77f8, 0x8313, 0x1a40, 0x180c, 0xb0b7, 0x9d3a, 0x1, 0x0);
        gbc.writeMem(0x77f8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8313, gbc.sp());
        EXPECT(0x77fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02D3
        gbc.setState(0x6ff6, 0xe55a, 0x82c0, 0xc34b, 0xb987, 0x2e16, 0x0, 0x0);
        gbc.writeMem(0x6ff6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe55a, gbc.sp());
        EXPECT(0x6ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02D4
        gbc.setState(0x4c16, 0x4c36, 0xbcf0, 0x9339, 0x2d09, 0xceb1, 0x0, 0x1);
        gbc.writeMem(0x4c16, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4c36, gbc.sp());
        EXPECT(0x4c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02D5
        gbc.setState(0x5410, 0x7291, 0x54b0, 0xe0c4, 0x3ce0, 0xfcef, 0x1, 0x1);
        gbc.writeMem(0x5410, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7291, gbc.sp());
        EXPECT(0x5412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02D6
        gbc.setState(0x3ca8, 0x6b03, 0x1660, 0x4508, 0x5874, 0x56ce, 0x0, 0x1);
        gbc.writeMem(0x3ca8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6b03, gbc.sp());
        EXPECT(0x3caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02D7
        gbc.setState(0x1460, 0xca3d, 0x58c0, 0xdce9, 0x4a40, 0x452d, 0x0, 0x1);
        gbc.writeMem(0x1460, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xca3d, gbc.sp());
        EXPECT(0x1462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02D8
        gbc.setState(0xb563, 0xb255, 0xd1a0, 0x228b, 0x8163, 0x9e31, 0x0, 0x1);
        gbc.writeMem(0xb563, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb255, gbc.sp());
        EXPECT(0xb565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb563));
        EXPECT(0x73, gbc.readMem(0xb564));
        // CB 73 02D9
        gbc.setState(0xefb0, 0xac64, 0x5970, 0x908, 0xd5d5, 0x522c, 0x0, 0x0);
        gbc.writeMem(0xefb0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xac64, gbc.sp());
        EXPECT(0xefb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb0));
        EXPECT(0x73, gbc.readMem(0xefb1));
        // CB 73 02DA
        gbc.setState(0x3948, 0x60fc, 0x5390, 0x1386, 0x9f2b, 0x4b0f, 0x0, 0x0);
        gbc.writeMem(0x3948, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x60fc, gbc.sp());
        EXPECT(0x394a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02DB
        gbc.setState(0xae4, 0x7bc3, 0x3700, 0x400b, 0xb5e7, 0x9c35, 0x0, 0x0);
        gbc.writeMem(0xae4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7bc3, gbc.sp());
        EXPECT(0xae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02DC
        gbc.setState(0x6c06, 0x9ea8, 0xf310, 0x1918, 0x1257, 0xf6d7, 0x0, 0x1);
        gbc.writeMem(0x6c06, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9ea8, gbc.sp());
        EXPECT(0x6c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02DD
        gbc.setState(0x3dd7, 0x52a6, 0x90f0, 0x316d, 0xf545, 0x66ee, 0x0, 0x0);
        gbc.writeMem(0x3dd7, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x52a6, gbc.sp());
        EXPECT(0x3dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02DE
        gbc.setState(0x85c, 0x161c, 0x1f00, 0x3d2e, 0x4928, 0xac2d, 0x0, 0x0);
        gbc.writeMem(0x85c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x161c, gbc.sp());
        EXPECT(0x85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02DF
        gbc.setState(0xebb9, 0x497e, 0x70, 0xff3e, 0xf38c, 0x736f, 0x1, 0x0);
        gbc.writeMem(0xebb9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x497e, gbc.sp());
        EXPECT(0xebbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb9));
        EXPECT(0x73, gbc.readMem(0xebba));
        // CB 73 02E0
        gbc.setState(0xb11e, 0x3a56, 0xf1c0, 0xbeca, 0xbf8a, 0x86f4, 0x0, 0x1);
        gbc.writeMem(0xb11e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3a56, gbc.sp());
        EXPECT(0xb120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11e));
        EXPECT(0x73, gbc.readMem(0xb11f));
        // CB 73 02E1
        gbc.setState(0x46e5, 0x1eb7, 0x4400, 0xf411, 0xd7ac, 0x887b, 0x0, 0x1);
        gbc.writeMem(0x46e5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1eb7, gbc.sp());
        EXPECT(0x46e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02E2
        gbc.setState(0x4d24, 0x908f, 0xd9d0, 0x6b91, 0x49d3, 0xc07c, 0x0, 0x1);
        gbc.writeMem(0x4d24, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x908f, gbc.sp());
        EXPECT(0x4d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02E3
        gbc.setState(0xa7d2, 0xdcbb, 0x5c50, 0x8448, 0x7dc1, 0x5dad, 0x0, 0x1);
        gbc.writeMem(0xa7d2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdcbb, gbc.sp());
        EXPECT(0xa7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d2));
        EXPECT(0x73, gbc.readMem(0xa7d3));
        // CB 73 02E4
        gbc.setState(0x7a99, 0x4c1a, 0xbdb0, 0x7eba, 0xe4e9, 0xd9a7, 0x1, 0x0);
        gbc.writeMem(0x7a99, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4c1a, gbc.sp());
        EXPECT(0x7a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02E5
        gbc.setState(0xaabf, 0x3ede, 0x7b70, 0xb, 0x850f, 0xe304, 0x0, 0x0);
        gbc.writeMem(0xaabf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3ede, gbc.sp());
        EXPECT(0xaac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaabf));
        EXPECT(0x73, gbc.readMem(0xaac0));
        // CB 73 02E6
        gbc.setState(0x916e, 0xca7d, 0x7020, 0x1573, 0x524e, 0xb1ec, 0x1, 0x1);
        gbc.writeMem(0x916e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xca7d, gbc.sp());
        EXPECT(0x9170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x916e));
        EXPECT(0x73, gbc.readMem(0x916f));
        // CB 73 02E7
        gbc.setState(0xa9d6, 0xd656, 0xb370, 0xadb2, 0xaf8c, 0x18a, 0x1, 0x1);
        gbc.writeMem(0xa9d6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd656, gbc.sp());
        EXPECT(0xa9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d6));
        EXPECT(0x73, gbc.readMem(0xa9d7));
        // CB 73 02E8
        gbc.setState(0x60d3, 0x5e67, 0xd640, 0x8b6f, 0xc069, 0xb7a3, 0x0, 0x0);
        gbc.writeMem(0x60d3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5e67, gbc.sp());
        EXPECT(0x60d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02E9
        gbc.setState(0xc2b9, 0x6639, 0xec00, 0x2319, 0x2bf1, 0x3232, 0x1, 0x1);
        gbc.writeMem(0xc2b9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6639, gbc.sp());
        EXPECT(0xc2bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b9));
        EXPECT(0x73, gbc.readMem(0xc2ba));
        // CB 73 02EA
        gbc.setState(0x8a3b, 0xaae8, 0xd3e0, 0x2593, 0xa18, 0xdca5, 0x0, 0x0);
        gbc.writeMem(0x8a3b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xaae8, gbc.sp());
        EXPECT(0x8a3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a3b));
        EXPECT(0x73, gbc.readMem(0x8a3c));
        // CB 73 02EB
        gbc.setState(0x1c9, 0xa9db, 0xaef0, 0x6718, 0x8531, 0xb325, 0x0, 0x1);
        gbc.writeMem(0x1c9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa9db, gbc.sp());
        EXPECT(0x1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02EC
        gbc.setState(0x6aa5, 0xb043, 0x3af0, 0xcc2c, 0x4e1f, 0x6901, 0x0, 0x0);
        gbc.writeMem(0x6aa5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb043, gbc.sp());
        EXPECT(0x6aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02ED
        gbc.setState(0xb6fd, 0x8bb6, 0x4900, 0x386c, 0xf8e4, 0xce76, 0x1, 0x1);
        gbc.writeMem(0xb6fd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8bb6, gbc.sp());
        EXPECT(0xb6ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6fd));
        EXPECT(0x73, gbc.readMem(0xb6fe));
        // CB 73 02EE
        gbc.setState(0x6d54, 0x8e06, 0x3130, 0x89b8, 0x6baf, 0xec4e, 0x1, 0x0);
        gbc.writeMem(0x6d54, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8e06, gbc.sp());
        EXPECT(0x6d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02EF
        gbc.setState(0xe105, 0x4301, 0xc240, 0x8cef, 0xfc92, 0x6d6e, 0x0, 0x0);
        gbc.writeMem(0xe105, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4301, gbc.sp());
        EXPECT(0xe107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe105));
        EXPECT(0x73, gbc.readMem(0xe106));
        // CB 73 02F0
        gbc.setState(0xf28, 0x8206, 0x3c90, 0xaf40, 0x82b8, 0x7121, 0x0, 0x0);
        gbc.writeMem(0xf28, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8206, gbc.sp());
        EXPECT(0xf2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02F1
        gbc.setState(0xadc1, 0xd985, 0x2350, 0x9779, 0x5065, 0x594f, 0x1, 0x1);
        gbc.writeMem(0xadc1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd985, gbc.sp());
        EXPECT(0xadc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc1));
        EXPECT(0x73, gbc.readMem(0xadc2));
        // CB 73 02F2
        gbc.setState(0xcbf, 0xf97c, 0x9a00, 0x6097, 0x1fee, 0x5086, 0x0, 0x0);
        gbc.writeMem(0xcbf, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf97c, gbc.sp());
        EXPECT(0xcc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02F3
        gbc.setState(0x6c8, 0x6491, 0x1de0, 0xe069, 0x6e62, 0x9c9e, 0x1, 0x0);
        gbc.writeMem(0x6c8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6491, gbc.sp());
        EXPECT(0x6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02F5
        gbc.setState(0x6f6b, 0x539c, 0x4910, 0xc4a5, 0x96e1, 0xffb1, 0x0, 0x0);
        gbc.writeMem(0x6f6b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x539c, gbc.sp());
        EXPECT(0x6f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02F6
        gbc.setState(0xd8a8, 0x5e3e, 0x4cb0, 0xf1f8, 0x430d, 0x1d18, 0x0, 0x1);
        gbc.writeMem(0xd8a8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5e3e, gbc.sp());
        EXPECT(0xd8aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a8));
        EXPECT(0x73, gbc.readMem(0xd8a9));
        // CB 73 02F7
        gbc.setState(0xa636, 0xad18, 0xa9b0, 0xcb9, 0xfb4a, 0x9e9b, 0x1, 0x1);
        gbc.writeMem(0xa636, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xad18, gbc.sp());
        EXPECT(0xa638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa636));
        EXPECT(0x73, gbc.readMem(0xa637));
        // CB 73 02F8
        gbc.setState(0x7a83, 0xf2ba, 0x6960, 0xfef1, 0xa7c9, 0x1507, 0x1, 0x1);
        gbc.writeMem(0x7a83, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf2ba, gbc.sp());
        EXPECT(0x7a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 02F9
        gbc.setState(0x810e, 0x320d, 0x1320, 0x1426, 0xad58, 0xada5, 0x1, 0x1);
        gbc.writeMem(0x810e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x320d, gbc.sp());
        EXPECT(0x8110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x810e));
        EXPECT(0x73, gbc.readMem(0x810f));
        // CB 73 02FA
        gbc.setState(0x4b94, 0x41f0, 0x4930, 0x726d, 0xa09, 0xc1fe, 0x1, 0x0);
        gbc.writeMem(0x4b94, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x41f0, gbc.sp());
        EXPECT(0x4b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 02FB
        gbc.setState(0xda8c, 0xfac5, 0x49b0, 0x1360, 0x5372, 0x4838, 0x1, 0x1);
        gbc.writeMem(0xda8c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfac5, gbc.sp());
        EXPECT(0xda8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8c));
        EXPECT(0x73, gbc.readMem(0xda8d));
        // CB 73 02FD
        gbc.setState(0xc16d, 0x88dd, 0xc080, 0xfbb, 0x8d53, 0xb87e, 0x0, 0x1);
        gbc.writeMem(0xc16d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x88dd, gbc.sp());
        EXPECT(0xc16f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc16d));
        EXPECT(0x73, gbc.readMem(0xc16e));
        // CB 73 02FE
        gbc.setState(0xad81, 0xe960, 0xeb20, 0x4234, 0xb9a7, 0xaaf5, 0x0, 0x1);
        gbc.writeMem(0xad81, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe960, gbc.sp());
        EXPECT(0xad83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad81));
        EXPECT(0x73, gbc.readMem(0xad82));
        // CB 73 02FF
        gbc.setState(0xba44, 0x11bf, 0xcbe0, 0x2357, 0x2b71, 0x753e, 0x0, 0x1);
        gbc.writeMem(0xba44, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x11bf, gbc.sp());
        EXPECT(0xba46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba44));
        EXPECT(0x73, gbc.readMem(0xba45));
        // CB 73 0300
        gbc.setState(0xcb16, 0x588d, 0xf9f0, 0x7099, 0x3778, 0x10ad, 0x1, 0x1);
        gbc.writeMem(0xcb16, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x588d, gbc.sp());
        EXPECT(0xcb18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb16));
        EXPECT(0x73, gbc.readMem(0xcb17));
        // CB 73 0301
        gbc.setState(0x9b15, 0xe32e, 0xe310, 0x7931, 0x876, 0x5c5f, 0x1, 0x0);
        gbc.writeMem(0x9b15, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe32e, gbc.sp());
        EXPECT(0x9b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b15));
        EXPECT(0x73, gbc.readMem(0x9b16));
        // CB 73 0302
        gbc.setState(0x519f, 0xd315, 0xa7a0, 0x8217, 0x839a, 0xd1df, 0x0, 0x1);
        gbc.writeMem(0x519f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd315, gbc.sp());
        EXPECT(0x51a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0303
        gbc.setState(0x2256, 0xfa38, 0x56a0, 0x4624, 0x5cfe, 0xbe3b, 0x0, 0x1);
        gbc.writeMem(0x2256, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfa38, gbc.sp());
        EXPECT(0x2258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0304
        gbc.setState(0xb3bc, 0x2d74, 0xa680, 0x7762, 0x9403, 0x1af, 0x0, 0x1);
        gbc.writeMem(0xb3bc, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2d74, gbc.sp());
        EXPECT(0xb3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bc));
        EXPECT(0x73, gbc.readMem(0xb3bd));
        // CB 73 0305
        gbc.setState(0x8154, 0x43f9, 0x8420, 0xb34a, 0x416c, 0xcd06, 0x1, 0x0);
        gbc.writeMem(0x8154, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x43f9, gbc.sp());
        EXPECT(0x8156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8154));
        EXPECT(0x73, gbc.readMem(0x8155));
        // CB 73 0306
        gbc.setState(0x792c, 0x51f4, 0x2d50, 0xfab3, 0xd43b, 0xfc31, 0x0, 0x1);
        gbc.writeMem(0x792c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x51f4, gbc.sp());
        EXPECT(0x792e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0307
        gbc.setState(0x4b95, 0x7b20, 0x32f0, 0x894e, 0xbb60, 0x56c5, 0x0, 0x1);
        gbc.writeMem(0x4b95, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7b20, gbc.sp());
        EXPECT(0x4b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0308
        gbc.setState(0x18e5, 0xb69, 0x7880, 0xfc38, 0x1b97, 0x2e38, 0x1, 0x1);
        gbc.writeMem(0x18e5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb69, gbc.sp());
        EXPECT(0x18e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0309
        gbc.setState(0x5349, 0xe037, 0x9f10, 0xfada, 0x465, 0x2b7, 0x1, 0x1);
        gbc.writeMem(0x5349, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe037, gbc.sp());
        EXPECT(0x534b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 030A
        gbc.setState(0xc63c, 0x1031, 0x44c0, 0x46e9, 0xc6ac, 0x2eaa, 0x0, 0x0);
        gbc.writeMem(0xc63c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1031, gbc.sp());
        EXPECT(0xc63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc63c));
        EXPECT(0x73, gbc.readMem(0xc63d));
        // CB 73 030B
        gbc.setState(0x1221, 0x6122, 0x6af0, 0xac8, 0x3b56, 0xa5ef, 0x0, 0x1);
        gbc.writeMem(0x1221, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6122, gbc.sp());
        EXPECT(0x1223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 030C
        gbc.setState(0x675, 0x32c4, 0xaf0, 0x4ec8, 0xa316, 0x78f3, 0x0, 0x0);
        gbc.writeMem(0x675, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x32c4, gbc.sp());
        EXPECT(0x677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 030D
        gbc.setState(0x835e, 0xbb82, 0xa270, 0x540b, 0x14d, 0xca82, 0x1, 0x1);
        gbc.writeMem(0x835e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbb82, gbc.sp());
        EXPECT(0x8360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835e));
        EXPECT(0x73, gbc.readMem(0x835f));
        // CB 73 030E
        gbc.setState(0x44b9, 0x35a9, 0xf30, 0xdf25, 0x7123, 0xdc66, 0x1, 0x0);
        gbc.writeMem(0x44b9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x35a9, gbc.sp());
        EXPECT(0x44bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 030F
        gbc.setState(0x4f85, 0x49fb, 0x7dc0, 0xaa63, 0x5cbe, 0x67a5, 0x0, 0x1);
        gbc.writeMem(0x4f85, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x49fb, gbc.sp());
        EXPECT(0x4f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0310
        gbc.setState(0xe90a, 0xcd41, 0xff60, 0xc7e0, 0xd394, 0x7152, 0x0, 0x0);
        gbc.writeMem(0xe90a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xcd41, gbc.sp());
        EXPECT(0xe90c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe90a));
        EXPECT(0x73, gbc.readMem(0xe90b));
        // CB 73 0311
        gbc.setState(0xd315, 0x2a66, 0x420, 0x17a3, 0xa7ad, 0xd944, 0x1, 0x1);
        gbc.writeMem(0xd315, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2a66, gbc.sp());
        EXPECT(0xd317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd315));
        EXPECT(0x73, gbc.readMem(0xd316));
        // CB 73 0312
        gbc.setState(0x3f55, 0xccf, 0xd9b0, 0xbc42, 0xf10c, 0x9704, 0x1, 0x1);
        gbc.writeMem(0x3f55, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xccf, gbc.sp());
        EXPECT(0x3f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0313
        gbc.setState(0xdcb3, 0x9144, 0xc2c0, 0x4c0c, 0xc563, 0x2f53, 0x0, 0x1);
        gbc.writeMem(0xdcb3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9144, gbc.sp());
        EXPECT(0xdcb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb3));
        EXPECT(0x73, gbc.readMem(0xdcb4));
        // CB 73 0314
        gbc.setState(0x436a, 0x774e, 0xb0e0, 0x6f0d, 0x403e, 0xd192, 0x1, 0x0);
        gbc.writeMem(0x436a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x774e, gbc.sp());
        EXPECT(0x436c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0315
        gbc.setState(0x950b, 0x9ca, 0x4fb0, 0xd1c2, 0x2461, 0x9113, 0x1, 0x0);
        gbc.writeMem(0x950b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9ca, gbc.sp());
        EXPECT(0x950d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950b));
        EXPECT(0x73, gbc.readMem(0x950c));
        // CB 73 0316
        gbc.setState(0xd9b1, 0x1b9c, 0x19b0, 0xd0e5, 0x6c7c, 0x8624, 0x1, 0x0);
        gbc.writeMem(0xd9b1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1b9c, gbc.sp());
        EXPECT(0xd9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b1));
        EXPECT(0x73, gbc.readMem(0xd9b2));
        // CB 73 0317
        gbc.setState(0x378d, 0x4885, 0x2560, 0xfe49, 0x7394, 0xfaf, 0x0, 0x0);
        gbc.writeMem(0x378d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4885, gbc.sp());
        EXPECT(0x378f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0318
        gbc.setState(0x3699, 0x28e, 0x79d0, 0x5274, 0x89e9, 0x2cb, 0x1, 0x0);
        gbc.writeMem(0x3699, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x28e, gbc.sp());
        EXPECT(0x369b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0319
        gbc.setState(0xd54c, 0x44e1, 0x4d10, 0x3552, 0x2ab5, 0x1f86, 0x0, 0x0);
        gbc.writeMem(0xd54c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x44e1, gbc.sp());
        EXPECT(0xd54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54c));
        EXPECT(0x73, gbc.readMem(0xd54d));
        // CB 73 031A
        gbc.setState(0xc2c6, 0xa135, 0xe620, 0x58b9, 0x9b50, 0x4790, 0x1, 0x1);
        gbc.writeMem(0xc2c6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa135, gbc.sp());
        EXPECT(0xc2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c6));
        EXPECT(0x73, gbc.readMem(0xc2c7));
        // CB 73 031B
        gbc.setState(0x142d, 0xa930, 0x7160, 0xc3f6, 0x844a, 0xaa68, 0x0, 0x1);
        gbc.writeMem(0x142d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa930, gbc.sp());
        EXPECT(0x142f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 031C
        gbc.setState(0x9f57, 0xe5fa, 0x60a0, 0x9913, 0xe348, 0x8532, 0x0, 0x1);
        gbc.writeMem(0x9f57, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe5fa, gbc.sp());
        EXPECT(0x9f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f57));
        EXPECT(0x73, gbc.readMem(0x9f58));
        // CB 73 031D
        gbc.setState(0xcbc3, 0xdb51, 0x1460, 0x9e36, 0x73ae, 0x42df, 0x0, 0x1);
        gbc.writeMem(0xcbc3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdb51, gbc.sp());
        EXPECT(0xcbc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc3));
        EXPECT(0x73, gbc.readMem(0xcbc4));
        // CB 73 031E
        gbc.setState(0xb53a, 0xf209, 0x2680, 0x48f6, 0xc142, 0x4601, 0x0, 0x0);
        gbc.writeMem(0xb53a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf209, gbc.sp());
        EXPECT(0xb53c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53a));
        EXPECT(0x73, gbc.readMem(0xb53b));
        // CB 73 031F
        gbc.setState(0xaf23, 0xcb15, 0x8ef0, 0xeaf1, 0x34a8, 0x110c, 0x0, 0x1);
        gbc.writeMem(0xaf23, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xcb15, gbc.sp());
        EXPECT(0xaf25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf23));
        EXPECT(0x73, gbc.readMem(0xaf24));
        // CB 73 0320
        gbc.setState(0x2c72, 0x57e9, 0x6a50, 0xb8c9, 0x4943, 0x8db0, 0x1, 0x0);
        gbc.writeMem(0x2c72, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x57e9, gbc.sp());
        EXPECT(0x2c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0321
        gbc.setState(0x69cd, 0xb733, 0xcfb0, 0xdc69, 0xd65a, 0x1040, 0x0, 0x0);
        gbc.writeMem(0x69cd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb733, gbc.sp());
        EXPECT(0x69cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0322
        gbc.setState(0xd1fd, 0x2c9, 0x5ab0, 0x50ce, 0xd6ad, 0xb1f9, 0x1, 0x1);
        gbc.writeMem(0xd1fd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2c9, gbc.sp());
        EXPECT(0xd1ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1fd));
        EXPECT(0x73, gbc.readMem(0xd1fe));
        // CB 73 0323
        gbc.setState(0x20e8, 0x5baa, 0x23d0, 0xf3fb, 0x57a0, 0x94d3, 0x0, 0x0);
        gbc.writeMem(0x20e8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5baa, gbc.sp());
        EXPECT(0x20ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0324
        gbc.setState(0x70d4, 0x1932, 0x5b0, 0x8f99, 0xb04c, 0x4d20, 0x1, 0x0);
        gbc.writeMem(0x70d4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1932, gbc.sp());
        EXPECT(0x70d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0326
        gbc.setState(0x195, 0xc8d5, 0x4170, 0x8e89, 0x8c52, 0xe696, 0x1, 0x0);
        gbc.writeMem(0x195, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc8d5, gbc.sp());
        EXPECT(0x197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0327
        gbc.setState(0xc5ad, 0x3a0c, 0x8ae0, 0x915b, 0x669d, 0x1576, 0x0, 0x1);
        gbc.writeMem(0xc5ad, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3a0c, gbc.sp());
        EXPECT(0xc5af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ad));
        EXPECT(0x73, gbc.readMem(0xc5ae));
        // CB 73 0328
        gbc.setState(0x45a9, 0x9911, 0xf880, 0xe562, 0x1d61, 0x6219, 0x1, 0x0);
        gbc.writeMem(0x45a9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9911, gbc.sp());
        EXPECT(0x45ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0329
        gbc.setState(0x5206, 0x4470, 0x7dc0, 0x121b, 0x5103, 0xfa3d, 0x0, 0x1);
        gbc.writeMem(0x5206, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4470, gbc.sp());
        EXPECT(0x5208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 032A
        gbc.setState(0xd192, 0x7cf2, 0x9090, 0x70c4, 0x9bf, 0xba9e, 0x0, 0x0);
        gbc.writeMem(0xd192, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7cf2, gbc.sp());
        EXPECT(0xd194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd192));
        EXPECT(0x73, gbc.readMem(0xd193));
        // CB 73 032B
        gbc.setState(0x656b, 0xe577, 0xa550, 0x658, 0x8606, 0xef76, 0x0, 0x0);
        gbc.writeMem(0x656b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe577, gbc.sp());
        EXPECT(0x656d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 032C
        gbc.setState(0xb2f8, 0x6aa2, 0x8fe0, 0xbe96, 0x4d15, 0x4a36, 0x1, 0x1);
        gbc.writeMem(0xb2f8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6aa2, gbc.sp());
        EXPECT(0xb2fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f8));
        EXPECT(0x73, gbc.readMem(0xb2f9));
        // CB 73 032D
        gbc.setState(0x74dd, 0xcdaa, 0x6b40, 0xbe5, 0x84f2, 0x9651, 0x0, 0x0);
        gbc.writeMem(0x74dd, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcdaa, gbc.sp());
        EXPECT(0x74df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 032E
        gbc.setState(0xe9ac, 0xa4fd, 0xe1e0, 0x3703, 0x56eb, 0xe97a, 0x0, 0x0);
        gbc.writeMem(0xe9ac, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa4fd, gbc.sp());
        EXPECT(0xe9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ac));
        EXPECT(0x73, gbc.readMem(0xe9ad));
        // CB 73 032F
        gbc.setState(0x3ad1, 0x4552, 0x8410, 0x2511, 0xc2dc, 0x8e9a, 0x1, 0x1);
        gbc.writeMem(0x3ad1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4552, gbc.sp());
        EXPECT(0x3ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0330
        gbc.setState(0x1936, 0xf7bd, 0xab60, 0xee13, 0xd25, 0xe17d, 0x0, 0x0);
        gbc.writeMem(0x1936, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf7bd, gbc.sp());
        EXPECT(0x1938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0331
        gbc.setState(0xc69a, 0x10cb, 0xd690, 0x14d1, 0x4e1a, 0xb4d7, 0x0, 0x1);
        gbc.writeMem(0xc69a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x10cb, gbc.sp());
        EXPECT(0xc69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc69a));
        EXPECT(0x73, gbc.readMem(0xc69b));
        // CB 73 0332
        gbc.setState(0x265e, 0xbbdb, 0x35f0, 0xabf5, 0x75bc, 0x2167, 0x0, 0x1);
        gbc.writeMem(0x265e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbbdb, gbc.sp());
        EXPECT(0x2660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0333
        gbc.setState(0x3148, 0x78a6, 0x2c70, 0x3e96, 0x9ac, 0xbae1, 0x1, 0x0);
        gbc.writeMem(0x3148, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x78a6, gbc.sp());
        EXPECT(0x314a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0334
        gbc.setState(0x681d, 0x8932, 0x6ae0, 0xe20f, 0x54d8, 0x72a2, 0x1, 0x0);
        gbc.writeMem(0x681d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8932, gbc.sp());
        EXPECT(0x681f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0335
        gbc.setState(0x8cf6, 0xb880, 0x9780, 0x5ce9, 0x2f8d, 0x4b73, 0x0, 0x0);
        gbc.writeMem(0x8cf6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb880, gbc.sp());
        EXPECT(0x8cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf6));
        EXPECT(0x73, gbc.readMem(0x8cf7));
        // CB 73 0336
        gbc.setState(0x68fc, 0xa73b, 0x7220, 0xc71d, 0x1d1d, 0xa67e, 0x1, 0x0);
        gbc.writeMem(0x68fc, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa73b, gbc.sp());
        EXPECT(0x68fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0337
        gbc.setState(0x79ed, 0xdb6f, 0xc2f0, 0x9e04, 0x3654, 0x4c3a, 0x0, 0x1);
        gbc.writeMem(0x79ed, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdb6f, gbc.sp());
        EXPECT(0x79ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0338
        gbc.setState(0xd81b, 0x939e, 0xcd00, 0xd24d, 0x197, 0x72c5, 0x1, 0x1);
        gbc.writeMem(0xd81b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x939e, gbc.sp());
        EXPECT(0xd81d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81b));
        EXPECT(0x73, gbc.readMem(0xd81c));
        // CB 73 0339
        gbc.setState(0x4410, 0x7703, 0x2790, 0xcb54, 0xe776, 0xeae7, 0x0, 0x1);
        gbc.writeMem(0x4410, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7703, gbc.sp());
        EXPECT(0x4412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 033A
        gbc.setState(0xc43f, 0x3dd6, 0x3400, 0x5720, 0xcfac, 0x482a, 0x1, 0x0);
        gbc.writeMem(0xc43f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3dd6, gbc.sp());
        EXPECT(0xc441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43f));
        EXPECT(0x73, gbc.readMem(0xc440));
        // CB 73 033B
        gbc.setState(0x18e1, 0xe43, 0x7000, 0x8c9e, 0x7d85, 0x92f2, 0x0, 0x1);
        gbc.writeMem(0x18e1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe43, gbc.sp());
        EXPECT(0x18e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 033C
        gbc.setState(0xb32f, 0x94e7, 0xea90, 0x6f30, 0x855d, 0x14fb, 0x1, 0x0);
        gbc.writeMem(0xb32f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x94e7, gbc.sp());
        EXPECT(0xb331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32f));
        EXPECT(0x73, gbc.readMem(0xb330));
        // CB 73 033D
        gbc.setState(0xab37, 0xe7a3, 0xa7a0, 0xf0ac, 0x2bf7, 0x9ddd, 0x0, 0x1);
        gbc.writeMem(0xab37, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe7a3, gbc.sp());
        EXPECT(0xab39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab37));
        EXPECT(0x73, gbc.readMem(0xab38));
        // CB 73 033E
        gbc.setState(0xde21, 0xdaba, 0x9560, 0x2421, 0x743c, 0x294e, 0x1, 0x0);
        gbc.writeMem(0xde21, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdaba, gbc.sp());
        EXPECT(0xde23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde21));
        EXPECT(0x73, gbc.readMem(0xde22));
        // CB 73 0340
        gbc.setState(0xb7c2, 0x1a81, 0x8cc0, 0x1938, 0x4ffc, 0x6ae6, 0x0, 0x1);
        gbc.writeMem(0xb7c2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1a81, gbc.sp());
        EXPECT(0xb7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c2));
        EXPECT(0x73, gbc.readMem(0xb7c3));
        // CB 73 0341
        gbc.setState(0x9e33, 0xaaf9, 0x83c0, 0x50b6, 0x4ba0, 0xbb67, 0x0, 0x1);
        gbc.writeMem(0x9e33, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xaaf9, gbc.sp());
        EXPECT(0x9e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e33));
        EXPECT(0x73, gbc.readMem(0x9e34));
        // CB 73 0342
        gbc.setState(0x4e9f, 0x50d, 0x38b0, 0x87ee, 0x6326, 0x5c3, 0x1, 0x0);
        gbc.writeMem(0x4e9f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x50d, gbc.sp());
        EXPECT(0x4ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0343
        gbc.setState(0x1a17, 0xe7a, 0x2220, 0x6344, 0x9940, 0x2205, 0x0, 0x1);
        gbc.writeMem(0x1a17, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe7a, gbc.sp());
        EXPECT(0x1a19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0345
        gbc.setState(0xd0d4, 0xee48, 0xc290, 0xc96d, 0x95fe, 0xed88, 0x1, 0x1);
        gbc.writeMem(0xd0d4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xee48, gbc.sp());
        EXPECT(0xd0d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d4));
        EXPECT(0x73, gbc.readMem(0xd0d5));
        // CB 73 0346
        gbc.setState(0xa5ac, 0x495, 0x25d0, 0x86ce, 0xc9b2, 0xce0a, 0x0, 0x0);
        gbc.writeMem(0xa5ac, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x495, gbc.sp());
        EXPECT(0xa5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ac));
        EXPECT(0x73, gbc.readMem(0xa5ad));
        // CB 73 0347
        gbc.setState(0x55de, 0x4a2e, 0x5d80, 0x7f6a, 0xea48, 0xe969, 0x1, 0x1);
        gbc.writeMem(0x55de, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4a2e, gbc.sp());
        EXPECT(0x55e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0348
        gbc.setState(0x5201, 0x34a2, 0xa600, 0xd28a, 0xfa75, 0xffb2, 0x0, 0x1);
        gbc.writeMem(0x5201, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x34a2, gbc.sp());
        EXPECT(0x5203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0349
        gbc.setState(0x8e0, 0x8899, 0x41c0, 0x3af1, 0x5481, 0xb15d, 0x0, 0x1);
        gbc.writeMem(0x8e0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8899, gbc.sp());
        EXPECT(0x8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 034A
        gbc.setState(0x79be, 0xf5d4, 0x8530, 0x83a, 0xe5fa, 0xe3da, 0x0, 0x0);
        gbc.writeMem(0x79be, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf5d4, gbc.sp());
        EXPECT(0x79c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 034B
        gbc.setState(0xcb22, 0x958a, 0x1ed0, 0xe489, 0x66e6, 0x27f6, 0x0, 0x1);
        gbc.writeMem(0xcb22, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x958a, gbc.sp());
        EXPECT(0xcb24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb22));
        EXPECT(0x73, gbc.readMem(0xcb23));
        // CB 73 034C
        gbc.setState(0x7f0d, 0x5f5e, 0x98c0, 0xe6c4, 0x80ee, 0x765, 0x1, 0x1);
        gbc.writeMem(0x7f0d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5f5e, gbc.sp());
        EXPECT(0x7f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 034D
        gbc.setState(0x752c, 0x7662, 0x6930, 0x988f, 0x802d, 0xc1dd, 0x0, 0x1);
        gbc.writeMem(0x752c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7662, gbc.sp());
        EXPECT(0x752e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 034F
        gbc.setState(0x59ea, 0xbe27, 0xafc0, 0xa2ea, 0x1e05, 0xcea8, 0x1, 0x1);
        gbc.writeMem(0x59ea, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbe27, gbc.sp());
        EXPECT(0x59ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0350
        gbc.setState(0x9eb2, 0xc1fe, 0x50b0, 0xba6e, 0x372, 0xac41, 0x1, 0x0);
        gbc.writeMem(0x9eb2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc1fe, gbc.sp());
        EXPECT(0x9eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb2));
        EXPECT(0x73, gbc.readMem(0x9eb3));
        // CB 73 0351
        gbc.setState(0x98be, 0x880c, 0x7cc0, 0xbf03, 0x52fd, 0x77ae, 0x0, 0x0);
        gbc.writeMem(0x98be, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x880c, gbc.sp());
        EXPECT(0x98c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98be));
        EXPECT(0x73, gbc.readMem(0x98bf));
        // CB 73 0352
        gbc.setState(0x5857, 0x8ffd, 0xf490, 0x3aa0, 0x86ef, 0x3f70, 0x0, 0x1);
        gbc.writeMem(0x5857, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8ffd, gbc.sp());
        EXPECT(0x5859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0353
        gbc.setState(0x7001, 0x2c8e, 0x5bf0, 0x953f, 0x4b56, 0xe835, 0x0, 0x1);
        gbc.writeMem(0x7001, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2c8e, gbc.sp());
        EXPECT(0x7003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0354
        gbc.setState(0x4464, 0xca24, 0x9070, 0xd724, 0x1794, 0x4cc3, 0x0, 0x0);
        gbc.writeMem(0x4464, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xca24, gbc.sp());
        EXPECT(0x4466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0355
        gbc.setState(0xdb0e, 0xc9e4, 0x73e0, 0x4e75, 0x36ff, 0x93bb, 0x1, 0x1);
        gbc.writeMem(0xdb0e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc9e4, gbc.sp());
        EXPECT(0xdb10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0e));
        EXPECT(0x73, gbc.readMem(0xdb0f));
        // CB 73 0356
        gbc.setState(0x9e70, 0xf829, 0xb470, 0x5e70, 0xbd51, 0xe3d3, 0x1, 0x0);
        gbc.writeMem(0x9e70, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf829, gbc.sp());
        EXPECT(0x9e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e70));
        EXPECT(0x73, gbc.readMem(0x9e71));
        // CB 73 0357
        gbc.setState(0xa7c4, 0x70a8, 0xc470, 0x51ce, 0x2f2c, 0x331, 0x0, 0x1);
        gbc.writeMem(0xa7c4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x70a8, gbc.sp());
        EXPECT(0xa7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c4));
        EXPECT(0x73, gbc.readMem(0xa7c5));
        // CB 73 0358
        gbc.setState(0xa39a, 0x8f72, 0x3f20, 0x4f70, 0x17c8, 0x12ad, 0x0, 0x1);
        gbc.writeMem(0xa39a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8f72, gbc.sp());
        EXPECT(0xa39c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39a));
        EXPECT(0x73, gbc.readMem(0xa39b));
        // CB 73 0359
        gbc.setState(0xc3e2, 0xc395, 0x9e40, 0x446b, 0xfec7, 0x1f18, 0x0, 0x0);
        gbc.writeMem(0xc3e2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc395, gbc.sp());
        EXPECT(0xc3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e2));
        EXPECT(0x73, gbc.readMem(0xc3e3));
        // CB 73 035B
        gbc.setState(0xbcce, 0x3fe7, 0xf740, 0xccca, 0x706b, 0x1bc5, 0x0, 0x1);
        gbc.writeMem(0xbcce, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3fe7, gbc.sp());
        EXPECT(0xbcd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcce));
        EXPECT(0x73, gbc.readMem(0xbccf));
        // CB 73 035C
        gbc.setState(0x697, 0x16a5, 0x1ba0, 0xfe03, 0x143d, 0x438a, 0x0, 0x1);
        gbc.writeMem(0x697, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x16a5, gbc.sp());
        EXPECT(0x699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 035D
        gbc.setState(0xd316, 0x73ad, 0xb6f0, 0xb21b, 0x5b8d, 0x8f3b, 0x1, 0x0);
        gbc.writeMem(0xd316, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x73ad, gbc.sp());
        EXPECT(0xd318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd316));
        EXPECT(0x73, gbc.readMem(0xd317));
        // CB 73 035E
        gbc.setState(0x170b, 0x77c2, 0xe800, 0xb47d, 0xad74, 0xdca1, 0x0, 0x1);
        gbc.writeMem(0x170b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x77c2, gbc.sp());
        EXPECT(0x170d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 035F
        gbc.setState(0x1ad5, 0x984b, 0x1d60, 0x8636, 0xc3bd, 0x95a8, 0x0, 0x0);
        gbc.writeMem(0x1ad5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x984b, gbc.sp());
        EXPECT(0x1ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0360
        gbc.setState(0xd2a0, 0x9102, 0x5fe0, 0x3741, 0x2c1d, 0xddf8, 0x0, 0x0);
        gbc.writeMem(0xd2a0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9102, gbc.sp());
        EXPECT(0xd2a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a0));
        EXPECT(0x73, gbc.readMem(0xd2a1));
        // CB 73 0361
        gbc.setState(0x3c5a, 0xe440, 0x85b0, 0xcf6e, 0x5092, 0x3d0, 0x1, 0x1);
        gbc.writeMem(0x3c5a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe440, gbc.sp());
        EXPECT(0x3c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0362
        gbc.setState(0x83d9, 0xf17a, 0x60d0, 0x92ee, 0x546d, 0x12c8, 0x0, 0x0);
        gbc.writeMem(0x83d9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf17a, gbc.sp());
        EXPECT(0x83db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d9));
        EXPECT(0x73, gbc.readMem(0x83da));
        // CB 73 0363
        gbc.setState(0xdaa1, 0x527d, 0x7840, 0x3b86, 0x4ebf, 0x74e9, 0x1, 0x0);
        gbc.writeMem(0xdaa1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x527d, gbc.sp());
        EXPECT(0xdaa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa1));
        EXPECT(0x73, gbc.readMem(0xdaa2));
        // CB 73 0364
        gbc.setState(0x183c, 0xafa, 0x1a60, 0xbb15, 0xc5c4, 0x90f1, 0x1, 0x0);
        gbc.writeMem(0x183c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xafa, gbc.sp());
        EXPECT(0x183e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0365
        gbc.setState(0xbe5c, 0xc52f, 0x6600, 0x9ddf, 0x8eb7, 0x6916, 0x1, 0x1);
        gbc.writeMem(0xbe5c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc52f, gbc.sp());
        EXPECT(0xbe5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe5c));
        EXPECT(0x73, gbc.readMem(0xbe5d));
        // CB 73 0366
        gbc.setState(0xbb39, 0x869a, 0x74e0, 0x9f21, 0x8e78, 0xff2f, 0x0, 0x0);
        gbc.writeMem(0xbb39, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x869a, gbc.sp());
        EXPECT(0xbb3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb39));
        EXPECT(0x73, gbc.readMem(0xbb3a));
        // CB 73 0367
        gbc.setState(0x2b56, 0x66c6, 0x7330, 0xc46f, 0xc521, 0x57e0, 0x0, 0x1);
        gbc.writeMem(0x2b56, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x66c6, gbc.sp());
        EXPECT(0x2b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0368
        gbc.setState(0x84a4, 0xe816, 0x8960, 0x9da7, 0xed4, 0x1c37, 0x0, 0x1);
        gbc.writeMem(0x84a4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe816, gbc.sp());
        EXPECT(0x84a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a4));
        EXPECT(0x73, gbc.readMem(0x84a5));
        // CB 73 0369
        gbc.setState(0x836e, 0x5ce3, 0x9b0, 0x3c50, 0x915b, 0x69ff, 0x1, 0x0);
        gbc.writeMem(0x836e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5ce3, gbc.sp());
        EXPECT(0x8370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836e));
        EXPECT(0x73, gbc.readMem(0x836f));
        // CB 73 036A
        gbc.setState(0x6ee9, 0xbeba, 0x12d0, 0x1748, 0x10e5, 0x2fe6, 0x1, 0x1);
        gbc.writeMem(0x6ee9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbeba, gbc.sp());
        EXPECT(0x6eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 036B
        gbc.setState(0x901c, 0xea91, 0x860, 0x1e75, 0xc54b, 0x9911, 0x0, 0x0);
        gbc.writeMem(0x901c, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xea91, gbc.sp());
        EXPECT(0x901e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901c));
        EXPECT(0x73, gbc.readMem(0x901d));
        // CB 73 036C
        gbc.setState(0xa428, 0x850b, 0x3ba0, 0x5d2f, 0xdb7b, 0x4897, 0x0, 0x1);
        gbc.writeMem(0xa428, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x850b, gbc.sp());
        EXPECT(0xa42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa428));
        EXPECT(0x73, gbc.readMem(0xa429));
        // CB 73 036D
        gbc.setState(0x802f, 0x5547, 0x62e0, 0x8932, 0xfbaf, 0x30a7, 0x1, 0x0);
        gbc.writeMem(0x802f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5547, gbc.sp());
        EXPECT(0x8031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802f));
        EXPECT(0x73, gbc.readMem(0x8030));
        // CB 73 036E
        gbc.setState(0x4ca, 0x17a0, 0x4030, 0x73e4, 0xdceb, 0x75bc, 0x0, 0x1);
        gbc.writeMem(0x4ca, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x17a0, gbc.sp());
        EXPECT(0x4cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 036F
        gbc.setState(0x7b9d, 0xe592, 0x8ff0, 0xd81e, 0x93dc, 0x163f, 0x1, 0x1);
        gbc.writeMem(0x7b9d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe592, gbc.sp());
        EXPECT(0x7b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0370
        gbc.setState(0xb437, 0xa845, 0xcc50, 0xf2bb, 0x5c95, 0x36f0, 0x0, 0x1);
        gbc.writeMem(0xb437, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa845, gbc.sp());
        EXPECT(0xb439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb437));
        EXPECT(0x73, gbc.readMem(0xb438));
        // CB 73 0371
        gbc.setState(0x810e, 0x8e8c, 0xda00, 0x38d3, 0x8e65, 0xa641, 0x1, 0x1);
        gbc.writeMem(0x810e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8e8c, gbc.sp());
        EXPECT(0x8110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x810e));
        EXPECT(0x73, gbc.readMem(0x810f));
        // CB 73 0373
        gbc.setState(0x77da, 0xfa72, 0x9dd0, 0x98c2, 0x1c50, 0x2944, 0x0, 0x1);
        gbc.writeMem(0x77da, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfa72, gbc.sp());
        EXPECT(0x77dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0374
        gbc.setState(0x37a8, 0x6dd0, 0x6310, 0xb93c, 0x13d5, 0x76cd, 0x0, 0x0);
        gbc.writeMem(0x37a8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6dd0, gbc.sp());
        EXPECT(0x37aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0375
        gbc.setState(0xaa37, 0x843a, 0xef70, 0xbf57, 0x3b47, 0x3553, 0x0, 0x0);
        gbc.writeMem(0xaa37, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x843a, gbc.sp());
        EXPECT(0xaa39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa37));
        EXPECT(0x73, gbc.readMem(0xaa38));
        // CB 73 0377
        gbc.setState(0xb54b, 0x7dc7, 0xb180, 0xdfd3, 0xead1, 0xeaa, 0x0, 0x0);
        gbc.writeMem(0xb54b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7dc7, gbc.sp());
        EXPECT(0xb54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54b));
        EXPECT(0x73, gbc.readMem(0xb54c));
        // CB 73 0378
        gbc.setState(0x901, 0x29a7, 0x8b50, 0xd074, 0xe76f, 0xa6df, 0x1, 0x0);
        gbc.writeMem(0x901, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x29a7, gbc.sp());
        EXPECT(0x903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0379
        gbc.setState(0x1ed9, 0xbb46, 0x25b0, 0x3853, 0x7275, 0x9407, 0x1, 0x1);
        gbc.writeMem(0x1ed9, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbb46, gbc.sp());
        EXPECT(0x1edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 037A
        gbc.setState(0xcdf3, 0xb8e5, 0x5af0, 0x8e81, 0xb779, 0x79a8, 0x1, 0x1);
        gbc.writeMem(0xcdf3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb8e5, gbc.sp());
        EXPECT(0xcdf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf3));
        EXPECT(0x73, gbc.readMem(0xcdf4));
        // CB 73 037B
        gbc.setState(0x7120, 0x2283, 0xd1a0, 0xd244, 0xfe1d, 0xf825, 0x0, 0x0);
        gbc.writeMem(0x7120, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2283, gbc.sp());
        EXPECT(0x7122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 037C
        gbc.setState(0x1445, 0xa279, 0x79c0, 0xd536, 0x5dde, 0x74b9, 0x1, 0x0);
        gbc.writeMem(0x1445, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa279, gbc.sp());
        EXPECT(0x1447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 037E
        gbc.setState(0x5bf6, 0x7684, 0xcb0, 0x8cf7, 0xcd9b, 0x188a, 0x1, 0x1);
        gbc.writeMem(0x5bf6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7684, gbc.sp());
        EXPECT(0x5bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 037F
        gbc.setState(0xc2a0, 0xb70e, 0xced0, 0x27a2, 0xa4d1, 0x6b14, 0x0, 0x1);
        gbc.writeMem(0xc2a0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb70e, gbc.sp());
        EXPECT(0xc2a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a0));
        EXPECT(0x73, gbc.readMem(0xc2a1));
        // CB 73 0380
        gbc.setState(0xc92, 0x8858, 0x4700, 0xddb0, 0x58f6, 0x4058, 0x0, 0x0);
        gbc.writeMem(0xc92, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8858, gbc.sp());
        EXPECT(0xc94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0381
        gbc.setState(0x6f8e, 0x8d41, 0x4b60, 0x23d1, 0xbb7f, 0xf0d2, 0x0, 0x0);
        gbc.writeMem(0x6f8e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8d41, gbc.sp());
        EXPECT(0x6f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0382
        gbc.setState(0x325a, 0x12fa, 0xdd80, 0x9eb1, 0xbff5, 0x2dd1, 0x1, 0x0);
        gbc.writeMem(0x325a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x12fa, gbc.sp());
        EXPECT(0x325c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0383
        gbc.setState(0x3af, 0xa5b5, 0xb6e0, 0x3827, 0x3104, 0xb9fe, 0x1, 0x0);
        gbc.writeMem(0x3af, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa5b5, gbc.sp());
        EXPECT(0x3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0384
        gbc.setState(0x3da3, 0xfd8b, 0x7d90, 0xc605, 0x97b4, 0x6d6c, 0x1, 0x0);
        gbc.writeMem(0x3da3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfd8b, gbc.sp());
        EXPECT(0x3da5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0385
        gbc.setState(0xd041, 0xcc61, 0x9320, 0xc0e4, 0xb6d2, 0xcee1, 0x0, 0x1);
        gbc.writeMem(0xd041, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcc61, gbc.sp());
        EXPECT(0xd043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd041));
        EXPECT(0x73, gbc.readMem(0xd042));
        // CB 73 0386
        gbc.setState(0x9094, 0xa50d, 0x82d0, 0x4b8a, 0x21c4, 0xd044, 0x1, 0x0);
        gbc.writeMem(0x9094, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa50d, gbc.sp());
        EXPECT(0x9096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9094));
        EXPECT(0x73, gbc.readMem(0x9095));
        // CB 73 0387
        gbc.setState(0x857, 0x123c, 0x52a0, 0x91e1, 0xdbe8, 0xecac, 0x1, 0x0);
        gbc.writeMem(0x857, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x123c, gbc.sp());
        EXPECT(0x859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0388
        gbc.setState(0x6b4f, 0x8228, 0xc310, 0x3e4d, 0x3c40, 0x719a, 0x0, 0x0);
        gbc.writeMem(0x6b4f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8228, gbc.sp());
        EXPECT(0x6b51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0389
        gbc.setState(0xce58, 0x50fc, 0xa0e0, 0xedaa, 0x85f, 0x735f, 0x0, 0x1);
        gbc.writeMem(0xce58, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x50fc, gbc.sp());
        EXPECT(0xce5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce58));
        EXPECT(0x73, gbc.readMem(0xce59));
        // CB 73 038A
        gbc.setState(0x943d, 0x794, 0x7a40, 0x3d20, 0x4323, 0x27fb, 0x0, 0x1);
        gbc.writeMem(0x943d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x794, gbc.sp());
        EXPECT(0x943f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x943d));
        EXPECT(0x73, gbc.readMem(0x943e));
        // CB 73 038B
        gbc.setState(0xafed, 0x7db4, 0x8840, 0x22ef, 0x7290, 0x5591, 0x1, 0x0);
        gbc.writeMem(0xafed, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7db4, gbc.sp());
        EXPECT(0xafef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafed));
        EXPECT(0x73, gbc.readMem(0xafee));
        // CB 73 038C
        gbc.setState(0xe053, 0x6edb, 0x6a70, 0xaa05, 0xdb43, 0xa5dc, 0x0, 0x1);
        gbc.writeMem(0xe053, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6edb, gbc.sp());
        EXPECT(0xe055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe053));
        EXPECT(0x73, gbc.readMem(0xe054));
        // CB 73 038D
        gbc.setState(0xe261, 0xe7eb, 0xc1d0, 0x7e33, 0xd1b5, 0x2a6c, 0x0, 0x0);
        gbc.writeMem(0xe261, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe7eb, gbc.sp());
        EXPECT(0xe263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe261));
        EXPECT(0x73, gbc.readMem(0xe262));
        // CB 73 038E
        gbc.setState(0x2bc5, 0x892d, 0x5770, 0xc905, 0x5b70, 0xc778, 0x1, 0x1);
        gbc.writeMem(0x2bc5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x892d, gbc.sp());
        EXPECT(0x2bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 038F
        gbc.setState(0x167e, 0x7bc9, 0x81e0, 0x70d7, 0x2be0, 0x418, 0x0, 0x0);
        gbc.writeMem(0x167e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7bc9, gbc.sp());
        EXPECT(0x1680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0390
        gbc.setState(0xa3f3, 0xbe48, 0xbed0, 0xe91d, 0xda15, 0x3189, 0x1, 0x1);
        gbc.writeMem(0xa3f3, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbe48, gbc.sp());
        EXPECT(0xa3f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f3));
        EXPECT(0x73, gbc.readMem(0xa3f4));
        // CB 73 0391
        gbc.setState(0xd1e1, 0xb91a, 0x2f80, 0x3cf3, 0xdf3, 0x6728, 0x0, 0x1);
        gbc.writeMem(0xd1e1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb91a, gbc.sp());
        EXPECT(0xd1e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e1));
        EXPECT(0x73, gbc.readMem(0xd1e2));
        // CB 73 0393
        gbc.setState(0x25d4, 0x9fb7, 0x5a10, 0xe297, 0x787f, 0xa498, 0x0, 0x1);
        gbc.writeMem(0x25d4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9fb7, gbc.sp());
        EXPECT(0x25d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 0394
        gbc.setState(0x84ba, 0xc694, 0x2920, 0x6671, 0xfde9, 0xfbeb, 0x0, 0x0);
        gbc.writeMem(0x84ba, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc694, gbc.sp());
        EXPECT(0x84bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ba));
        EXPECT(0x73, gbc.readMem(0x84bb));
        // CB 73 0395
        gbc.setState(0xcae0, 0xfed2, 0xbfe0, 0x5609, 0xd99b, 0x40e4, 0x0, 0x1);
        gbc.writeMem(0xcae0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfed2, gbc.sp());
        EXPECT(0xcae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae0));
        EXPECT(0x73, gbc.readMem(0xcae1));
        // CB 73 0396
        gbc.setState(0x85f6, 0x8e6b, 0x7890, 0xe2a7, 0xd0d8, 0xc9bd, 0x1, 0x1);
        gbc.writeMem(0x85f6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8e6b, gbc.sp());
        EXPECT(0x85f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f6));
        EXPECT(0x73, gbc.readMem(0x85f7));
        // CB 73 0397
        gbc.setState(0x7fa0, 0x90eb, 0x6f60, 0xd6f4, 0xf160, 0x96bf, 0x1, 0x0);
        gbc.writeMem(0x7fa0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x90eb, gbc.sp());
        EXPECT(0x7fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 0398
        gbc.setState(0xcf41, 0xbbaa, 0xc0f0, 0x7a43, 0xf9dd, 0xa54a, 0x1, 0x0);
        gbc.writeMem(0xcf41, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbbaa, gbc.sp());
        EXPECT(0xcf43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf41));
        EXPECT(0x73, gbc.readMem(0xcf42));
        // CB 73 0399
        gbc.setState(0x1a0b, 0xcd45, 0x7fc0, 0xb821, 0xfee1, 0xec3a, 0x0, 0x1);
        gbc.writeMem(0x1a0b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcd45, gbc.sp());
        EXPECT(0x1a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 039A
        gbc.setState(0x361, 0xb266, 0x9d80, 0x50f4, 0xde91, 0x49a8, 0x0, 0x0);
        gbc.writeMem(0x361, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb266, gbc.sp());
        EXPECT(0x363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 039B
        gbc.setState(0xeaf2, 0x65a2, 0x8120, 0xf081, 0x632, 0x4449, 0x0, 0x0);
        gbc.writeMem(0xeaf2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x65a2, gbc.sp());
        EXPECT(0xeaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf2));
        EXPECT(0x73, gbc.readMem(0xeaf3));
        // CB 73 039C
        gbc.setState(0xc767, 0x2710, 0x8dd0, 0x2739, 0xac0c, 0xaac7, 0x1, 0x1);
        gbc.writeMem(0xc767, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2710, gbc.sp());
        EXPECT(0xc769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc767));
        EXPECT(0x73, gbc.readMem(0xc768));
        // CB 73 039D
        gbc.setState(0x40c1, 0xe504, 0xa200, 0xfecb, 0x4b23, 0xf5a3, 0x1, 0x0);
        gbc.writeMem(0x40c1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe504, gbc.sp());
        EXPECT(0x40c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 039E
        gbc.setState(0x4b6d, 0xf70b, 0x1670, 0x906, 0x76dd, 0x3cb1, 0x1, 0x0);
        gbc.writeMem(0x4b6d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf70b, gbc.sp());
        EXPECT(0x4b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 039F
        gbc.setState(0x1acc, 0x86d, 0x7d10, 0x95ed, 0x990c, 0xd411, 0x0, 0x1);
        gbc.writeMem(0x1acc, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x86d, gbc.sp());
        EXPECT(0x1ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03A0
        gbc.setState(0xcb2f, 0xa1f7, 0xdff0, 0x42a6, 0xec58, 0xeb2a, 0x0, 0x0);
        gbc.writeMem(0xcb2f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa1f7, gbc.sp());
        EXPECT(0xcb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2f));
        EXPECT(0x73, gbc.readMem(0xcb30));
        // CB 73 03A1
        gbc.setState(0x3308, 0x33b9, 0x3830, 0xd7f7, 0xc363, 0xd029, 0x1, 0x0);
        gbc.writeMem(0x3308, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x33b9, gbc.sp());
        EXPECT(0x330a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03A2
        gbc.setState(0x40a8, 0xe929, 0x7120, 0xdce6, 0x2cc2, 0x5210, 0x1, 0x0);
        gbc.writeMem(0x40a8, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe929, gbc.sp());
        EXPECT(0x40aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 03A3
        gbc.setState(0x5f3a, 0xc73f, 0x3b0, 0xa478, 0x5e54, 0x3f46, 0x0, 0x0);
        gbc.writeMem(0x5f3a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc73f, gbc.sp());
        EXPECT(0x5f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03A4
        gbc.setState(0x930a, 0x2081, 0xada0, 0x8a73, 0xdbcc, 0xb307, 0x0, 0x1);
        gbc.writeMem(0x930a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2081, gbc.sp());
        EXPECT(0x930c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x930a));
        EXPECT(0x73, gbc.readMem(0x930b));
        // CB 73 03A5
        gbc.setState(0xc6d1, 0xa9bf, 0x2820, 0xc2bc, 0x2b8e, 0x14a, 0x1, 0x1);
        gbc.writeMem(0xc6d1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa9bf, gbc.sp());
        EXPECT(0xc6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d1));
        EXPECT(0x73, gbc.readMem(0xc6d2));
        // CB 73 03A6
        gbc.setState(0xd37b, 0x7ec8, 0xdce0, 0x6315, 0x54db, 0x7afe, 0x1, 0x1);
        gbc.writeMem(0xd37b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7ec8, gbc.sp());
        EXPECT(0xd37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37b));
        EXPECT(0x73, gbc.readMem(0xd37c));
        // CB 73 03A7
        gbc.setState(0x896a, 0xa29, 0x4f70, 0x3d6d, 0xe6a1, 0x5d, 0x0, 0x0);
        gbc.writeMem(0x896a, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa29, gbc.sp());
        EXPECT(0x896c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x896a));
        EXPECT(0x73, gbc.readMem(0x896b));
        // CB 73 03A8
        gbc.setState(0x67d1, 0xaf0, 0x3010, 0x7fed, 0x90a5, 0x18f6, 0x1, 0x0);
        gbc.writeMem(0x67d1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xaf0, gbc.sp());
        EXPECT(0x67d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03A9
        gbc.setState(0x24ae, 0x2115, 0x6320, 0x497e, 0xd4f7, 0xdd29, 0x1, 0x0);
        gbc.writeMem(0x24ae, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2115, gbc.sp());
        EXPECT(0x24b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 03AA
        gbc.setState(0xba74, 0xbc9c, 0x3c00, 0xbaff, 0xf3a4, 0x5518, 0x1, 0x1);
        gbc.writeMem(0xba74, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbc9c, gbc.sp());
        EXPECT(0xba76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba74));
        EXPECT(0x73, gbc.readMem(0xba75));
        // CB 73 03AB
        gbc.setState(0x8c45, 0x6e29, 0x4e20, 0x817c, 0x680e, 0x3bff, 0x1, 0x1);
        gbc.writeMem(0x8c45, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6e29, gbc.sp());
        EXPECT(0x8c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c45));
        EXPECT(0x73, gbc.readMem(0x8c46));
        // CB 73 03AC
        gbc.setState(0x1cc4, 0x5276, 0x1a0, 0xa121, 0x1d12, 0x9e6c, 0x1, 0x1);
        gbc.writeMem(0x1cc4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5276, gbc.sp());
        EXPECT(0x1cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 03AD
        gbc.setState(0x753b, 0xbbec, 0x7c90, 0x6d76, 0xf664, 0x70cb, 0x0, 0x0);
        gbc.writeMem(0x753b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbbec, gbc.sp());
        EXPECT(0x753d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03AE
        gbc.setState(0xe01, 0x37f5, 0x8510, 0x6f71, 0xe0ee, 0x7a57, 0x1, 0x1);
        gbc.writeMem(0xe01, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x37f5, gbc.sp());
        EXPECT(0xe03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03AF
        gbc.setState(0x6026, 0xba81, 0x4990, 0xd751, 0x16ef, 0x4889, 0x0, 0x1);
        gbc.writeMem(0x6026, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xba81, gbc.sp());
        EXPECT(0x6028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03B1
        gbc.setState(0xcecc, 0x64a4, 0x3d10, 0x5189, 0x3ed5, 0x81f2, 0x1, 0x0);
        gbc.writeMem(0xcecc, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x64a4, gbc.sp());
        EXPECT(0xcece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcecc));
        EXPECT(0x73, gbc.readMem(0xcecd));
        // CB 73 03B2
        gbc.setState(0x9004, 0x5e35, 0xe130, 0x3fa5, 0x643f, 0x6602, 0x0, 0x0);
        gbc.writeMem(0x9004, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5e35, gbc.sp());
        EXPECT(0x9006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9004));
        EXPECT(0x73, gbc.readMem(0x9005));
        // CB 73 03B3
        gbc.setState(0xeee6, 0x937d, 0x8d40, 0x86a1, 0xf69e, 0x99fc, 0x1, 0x1);
        gbc.writeMem(0xeee6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x937d, gbc.sp());
        EXPECT(0xeee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee6));
        EXPECT(0x73, gbc.readMem(0xeee7));
        // CB 73 03B4
        gbc.setState(0x1474, 0xb194, 0x5620, 0x6f1d, 0x9d48, 0xfffa, 0x0, 0x1);
        gbc.writeMem(0x1474, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb194, gbc.sp());
        EXPECT(0x1476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 03B5
        gbc.setState(0x7a1e, 0x2f24, 0x7d0, 0x5af9, 0x9997, 0x584, 0x1, 0x0);
        gbc.writeMem(0x7a1e, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2f24, gbc.sp());
        EXPECT(0x7a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03B6
        gbc.setState(0x1435, 0xb6d1, 0xd4a0, 0x4d13, 0xbd22, 0x5924, 0x1, 0x0);
        gbc.writeMem(0x1435, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb6d1, gbc.sp());
        EXPECT(0x1437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 03B7
        gbc.setState(0xdc11, 0xad6f, 0xe890, 0x7fcd, 0xe290, 0x6c22, 0x1, 0x1);
        gbc.writeMem(0xdc11, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xad6f, gbc.sp());
        EXPECT(0xdc13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc11));
        EXPECT(0x73, gbc.readMem(0xdc12));
        // CB 73 03B8
        gbc.setState(0xb514, 0x497b, 0x46b0, 0xa5c9, 0xc61b, 0xd85c, 0x1, 0x0);
        gbc.writeMem(0xb514, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x497b, gbc.sp());
        EXPECT(0xb516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb514));
        EXPECT(0x73, gbc.readMem(0xb515));
        // CB 73 03B9
        gbc.setState(0x776, 0x65d0, 0xd750, 0x6c6d, 0x26cb, 0x1c30, 0x1, 0x1);
        gbc.writeMem(0x776, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x65d0, gbc.sp());
        EXPECT(0x778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03BA
        gbc.setState(0x6ceb, 0x566f, 0x7b60, 0x2235, 0xd688, 0x5bbb, 0x1, 0x1);
        gbc.writeMem(0x6ceb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x566f, gbc.sp());
        EXPECT(0x6ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 03BB
        gbc.setState(0xec20, 0xce98, 0x9140, 0x7580, 0x6dd7, 0x35f, 0x0, 0x1);
        gbc.writeMem(0xec20, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xce98, gbc.sp());
        EXPECT(0xec22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec20));
        EXPECT(0x73, gbc.readMem(0xec21));
        // CB 73 03BD
        gbc.setState(0xc861, 0xb6c4, 0x4bf0, 0x6a97, 0x113c, 0x5401, 0x0, 0x1);
        gbc.writeMem(0xc861, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb6c4, gbc.sp());
        EXPECT(0xc863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc861));
        EXPECT(0x73, gbc.readMem(0xc862));
        // CB 73 03BE
        gbc.setState(0x11e6, 0x3cae, 0x4bd0, 0x239b, 0xae43, 0x2830, 0x1, 0x0);
        gbc.writeMem(0x11e6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3cae, gbc.sp());
        EXPECT(0x11e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03BF
        gbc.setState(0xe77f, 0x762b, 0x5130, 0xfd9c, 0x94a0, 0xa1c6, 0x0, 0x1);
        gbc.writeMem(0xe77f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x762b, gbc.sp());
        EXPECT(0xe781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77f));
        EXPECT(0x73, gbc.readMem(0xe780));
        // CB 73 03C0
        gbc.setState(0x3e36, 0x18da, 0xdf50, 0x6b5c, 0x740a, 0xd29c, 0x1, 0x1);
        gbc.writeMem(0x3e36, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x18da, gbc.sp());
        EXPECT(0x3e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03C1
        gbc.setState(0x5bbe, 0x20d3, 0x26e0, 0x15f9, 0x4de1, 0x2580, 0x0, 0x0);
        gbc.writeMem(0x5bbe, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x20d3, gbc.sp());
        EXPECT(0x5bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 03C2
        gbc.setState(0x5a7d, 0x9248, 0x2110, 0xdcb3, 0x5d32, 0xc5e6, 0x1, 0x0);
        gbc.writeMem(0x5a7d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9248, gbc.sp());
        EXPECT(0x5a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03C3
        gbc.setState(0xa8be, 0x269a, 0xe820, 0xae3a, 0x6679, 0x21f3, 0x0, 0x0);
        gbc.writeMem(0xa8be, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x269a, gbc.sp());
        EXPECT(0xa8c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8be));
        EXPECT(0x73, gbc.readMem(0xa8bf));
        // CB 73 03C4
        gbc.setState(0x4645, 0xb869, 0x1490, 0xfe19, 0x1070, 0xe49c, 0x1, 0x1);
        gbc.writeMem(0x4645, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb869, gbc.sp());
        EXPECT(0x4647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03C5
        gbc.setState(0x59ff, 0x15dc, 0x7e0, 0xb9bb, 0xe8be, 0x2cc5, 0x1, 0x0);
        gbc.writeMem(0x59ff, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x15dc, gbc.sp());
        EXPECT(0x5a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 03C6
        gbc.setState(0xe2c5, 0xddbc, 0xa260, 0x23c7, 0x581a, 0xa7db, 0x1, 0x0);
        gbc.writeMem(0xe2c5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xddbc, gbc.sp());
        EXPECT(0xe2c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c5));
        EXPECT(0x73, gbc.readMem(0xe2c6));
        // CB 73 03C7
        gbc.setState(0x1c4, 0xc68f, 0xb70, 0xf6e0, 0xaf88, 0x6d5d, 0x0, 0x0);
        gbc.writeMem(0x1c4, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc68f, gbc.sp());
        EXPECT(0x1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03C8
        gbc.setState(0x9666, 0xa8c5, 0xa700, 0xa67, 0xbf79, 0x8b4e, 0x0, 0x0);
        gbc.writeMem(0x9666, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa8c5, gbc.sp());
        EXPECT(0x9668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9666));
        EXPECT(0x73, gbc.readMem(0x9667));
        // CB 73 03C9
        gbc.setState(0x7d09, 0xd94a, 0xa760, 0xaf93, 0x123, 0x5a0a, 0x1, 0x1);
        gbc.writeMem(0x7d09, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd94a, gbc.sp());
        EXPECT(0x7d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 03CA
        gbc.setState(0x1009, 0x76a5, 0xda10, 0x34dd, 0xd5b7, 0x4a4e, 0x0, 0x1);
        gbc.writeMem(0x1009, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x76a5, gbc.sp());
        EXPECT(0x100b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03CB
        gbc.setState(0x7fa5, 0x2e1d, 0xed70, 0x2d67, 0x97f7, 0x2e22, 0x1, 0x1);
        gbc.writeMem(0x7fa5, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2e1d, gbc.sp());
        EXPECT(0x7fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03CC
        gbc.setState(0x802f, 0xd7d2, 0xfb70, 0x9960, 0xeea1, 0x308c, 0x0, 0x0);
        gbc.writeMem(0x802f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd7d2, gbc.sp());
        EXPECT(0x8031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802f));
        EXPECT(0x73, gbc.readMem(0x8030));
        // CB 73 03CD
        gbc.setState(0x7c1b, 0x9dfd, 0x73d0, 0x5bea, 0x76eb, 0xf91f, 0x1, 0x0);
        gbc.writeMem(0x7c1b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9dfd, gbc.sp());
        EXPECT(0x7c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03CE
        gbc.setState(0xdde6, 0x89d2, 0xd850, 0x332a, 0x351, 0x45d8, 0x0, 0x1);
        gbc.writeMem(0xdde6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x89d2, gbc.sp());
        EXPECT(0xdde8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde6));
        EXPECT(0x73, gbc.readMem(0xdde7));
        // CB 73 03D0
        gbc.setState(0xad6f, 0x20e, 0xd3c0, 0x3800, 0x6d9a, 0x26dc, 0x1, 0x0);
        gbc.writeMem(0xad6f, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x20e, gbc.sp());
        EXPECT(0xad71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad6f));
        EXPECT(0x73, gbc.readMem(0xad70));
        // CB 73 03D1
        gbc.setState(0x837b, 0x1fee, 0x1fd0, 0x9d44, 0xde6a, 0xcdd6, 0x1, 0x1);
        gbc.writeMem(0x837b, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1fee, gbc.sp());
        EXPECT(0x837d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837b));
        EXPECT(0x73, gbc.readMem(0x837c));
        // CB 73 03D2
        gbc.setState(0xb7f2, 0xc63c, 0xd850, 0x5c54, 0x81, 0x5df1, 0x0, 0x0);
        gbc.writeMem(0xb7f2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc63c, gbc.sp());
        EXPECT(0xb7f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f2));
        EXPECT(0x73, gbc.readMem(0xb7f3));
        // CB 73 03D3
        gbc.setState(0xc264, 0x761b, 0x6960, 0xb0cd, 0x136c, 0xe01e, 0x0, 0x1);
        gbc.writeMem(0xc264, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x761b, gbc.sp());
        EXPECT(0xc266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc264));
        EXPECT(0x73, gbc.readMem(0xc265));
        // CB 73 03D4
        gbc.setState(0xa0d, 0x6f4b, 0x41b0, 0x5a30, 0x7484, 0x214d, 0x1, 0x1);
        gbc.writeMem(0xa0d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6f4b, gbc.sp());
        EXPECT(0xa0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03D5
        gbc.setState(0x6ea2, 0xe9ca, 0xd340, 0x53e1, 0xf326, 0xa073, 0x1, 0x0);
        gbc.writeMem(0x6ea2, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe9ca, gbc.sp());
        EXPECT(0x6ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 03D6
        gbc.setState(0xb186, 0xc9b5, 0xe6b0, 0xaba6, 0x4908, 0xc7ec, 0x1, 0x1);
        gbc.writeMem(0xb186, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc9b5, gbc.sp());
        EXPECT(0xb188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb186));
        EXPECT(0x73, gbc.readMem(0xb187));
        // CB 73 03D7
        gbc.setState(0x3781, 0x344c, 0xb570, 0x1286, 0x5648, 0x64cc, 0x0, 0x0);
        gbc.writeMem(0x3781, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x344c, gbc.sp());
        EXPECT(0x3783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03D8
        gbc.setState(0x7631, 0x9845, 0xf3d0, 0x149, 0x2955, 0x48f5, 0x1, 0x0);
        gbc.writeMem(0x7631, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9845, gbc.sp());
        EXPECT(0x7633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03D9
        gbc.setState(0x53b6, 0x4bca, 0x11e0, 0x65f0, 0x1c1f, 0xc47a, 0x0, 0x0);
        gbc.writeMem(0x53b6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4bca, gbc.sp());
        EXPECT(0x53b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 73 03DA
        gbc.setState(0x5aa1, 0xb9f1, 0xcd0, 0x1c19, 0x97a1, 0xb7, 0x0, 0x1);
        gbc.writeMem(0x5aa1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb9f1, gbc.sp());
        EXPECT(0x5aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03DB
        gbc.setState(0xb019, 0xcaad, 0xb110, 0xffc7, 0x192d, 0xcf58, 0x1, 0x1);
        gbc.writeMem(0xb019, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcaad, gbc.sp());
        EXPECT(0xb01b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb019));
        EXPECT(0x73, gbc.readMem(0xb01a));
        // CB 73 03DC
        gbc.setState(0xedf0, 0x7415, 0xaca0, 0x78, 0x6c64, 0xcdd1, 0x0, 0x1);
        gbc.writeMem(0xedf0, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7415, gbc.sp());
        EXPECT(0xedf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf0));
        EXPECT(0x73, gbc.readMem(0xedf1));
        // CB 73 03DD
        gbc.setState(0xa984, 0x9170, 0x590, 0x8114, 0x8922, 0xbcc, 0x1, 0x1);
        gbc.writeMem(0xa984, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9170, gbc.sp());
        EXPECT(0xa986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa984));
        EXPECT(0x73, gbc.readMem(0xa985));
        // CB 73 03DE
        gbc.setState(0xb241, 0x88e0, 0x7030, 0x5d61, 0xca70, 0xb84c, 0x0, 0x0);
        gbc.writeMem(0xb241, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x88e0, gbc.sp());
        EXPECT(0xb243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb241));
        EXPECT(0x73, gbc.readMem(0xb242));
        // CB 73 03DF
        gbc.setState(0x5fb6, 0xf8da, 0xac50, 0xaaa6, 0xb626, 0xafb3, 0x1, 0x1);
        gbc.writeMem(0x5fb6, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf8da, gbc.sp());
        EXPECT(0x5fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03E0
        gbc.setState(0xabfb, 0x7392, 0x5b90, 0x6330, 0x636a, 0xd08, 0x1, 0x1);
        gbc.writeMem(0xabfb, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7392, gbc.sp());
        EXPECT(0xabfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabfb));
        EXPECT(0x73, gbc.readMem(0xabfc));
        // CB 73 03E1
        gbc.setState(0x3245, 0xdddf, 0xcf30, 0x71fd, 0x88b6, 0x7d4, 0x1, 0x0);
        gbc.writeMem(0x3245, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdddf, gbc.sp());
        EXPECT(0x3247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 73 03E2
        gbc.setState(0xd4db, 0x97b8, 0x8f0, 0xb310, 0xe335, 0xb7ff, 0x1, 0x1);
        gbc.writeMem(0xd4db, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x97b8, gbc.sp());
        EXPECT(0xd4dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4db));
        EXPECT(0x73, gbc.readMem(0xd4dc));
        // CB 73 03E3
        gbc.setState(0xd615, 0xce4a, 0x4720, 0x18c3, 0x1eb4, 0x447c, 0x1, 0x1);
        gbc.writeMem(0xd615, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xce4a, gbc.sp());
        EXPECT(0xd617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd615));
        EXPECT(0x73, gbc.readMem(0xd616));
        // CB 73 03E4
        gbc.setState(0x9715, 0x9e9e, 0x4d20, 0x14ac, 0xeaee, 0x2e73, 0x0, 0x0);
        gbc.writeMem(0x9715, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9e9e, gbc.sp());
        EXPECT(0x9717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9715));
        EXPECT(0x73, gbc.readMem(0x9716));
        // CB 73 03E6
        gbc.setState(0x8cb1, 0xae47, 0xaf50, 0x9298, 0xbb17, 0xda8b, 0x1, 0x1);
        gbc.writeMem(0x8cb1, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xae47, gbc.sp());
        EXPECT(0x8cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb1));
        EXPECT(0x73, gbc.readMem(0x8cb2));
        // CB 73 03E7
        gbc.setState(0x989d, 0xec35, 0x51e0, 0xda7c, 0x1e9c, 0xecd8, 0x0, 0x0);
        gbc.writeMem(0x989d, { 0xcb, 0x73 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xec35, gbc.sp());
        EXPECT(0x989f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989d));
        EXPECT(0x73, gbc.readMem(0x989e));
    }
