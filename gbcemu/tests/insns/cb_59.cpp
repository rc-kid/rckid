#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_59)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_59) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 59 0000
        gbc.setState(0xb126, 0xeb60, 0xfcc0, 0xdce3, 0x9c26, 0x644b, 0x0, 0x0);
        gbc.writeMem(0xb126, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xeb60);
        EXPECT(gbc.pc(), 0xb128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb126), 0xcb);
        EXPECT(gbc.readMem(0xb127), 0x59);
        // CB 59 0001
        gbc.setState(0x8fda, 0x19a5, 0x8700, 0xeb2a, 0x375b, 0xd431, 0x0, 0x1);
        gbc.writeMem(0x8fda, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x19a5);
        EXPECT(gbc.pc(), 0x8fdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fda), 0xcb);
        EXPECT(gbc.readMem(0x8fdb), 0x59);
        // CB 59 0002
        gbc.setState(0x3af0, 0x6193, 0xc4c0, 0xa600, 0xd4e4, 0xe6de, 0x1, 0x1);
        gbc.writeMem(0x3af0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6193);
        EXPECT(gbc.pc(), 0x3af2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0003
        gbc.setState(0xc9c8, 0x9066, 0x7070, 0x7dd4, 0xd867, 0x2e8c, 0x0, 0x0);
        gbc.writeMem(0xc9c8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9066);
        EXPECT(gbc.pc(), 0xc9ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c8), 0xcb);
        EXPECT(gbc.readMem(0xc9c9), 0x59);
        // CB 59 0004
        gbc.setState(0x370, 0x1a31, 0x83c0, 0xa97e, 0x2ae2, 0xe02, 0x1, 0x1);
        gbc.writeMem(0x370, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1a31);
        EXPECT(gbc.pc(), 0x372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0005
        gbc.setState(0x39ce, 0xec5b, 0x2e70, 0x1bb3, 0xd931, 0x2364, 0x0, 0x1);
        gbc.writeMem(0x39ce, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xec5b);
        EXPECT(gbc.pc(), 0x39d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0006
        gbc.setState(0xd9d3, 0xb080, 0x1f20, 0xb379, 0xb12f, 0x603f, 0x1, 0x1);
        gbc.writeMem(0xd9d3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb080);
        EXPECT(gbc.pc(), 0xd9d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d3), 0xcb);
        EXPECT(gbc.readMem(0xd9d4), 0x59);
        // CB 59 0007
        gbc.setState(0xd772, 0x8455, 0x5e00, 0x5ca9, 0xc717, 0x5f01, 0x1, 0x1);
        gbc.writeMem(0xd772, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8455);
        EXPECT(gbc.pc(), 0xd774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd772), 0xcb);
        EXPECT(gbc.readMem(0xd773), 0x59);
        // CB 59 0008
        gbc.setState(0xafd7, 0x9991, 0xe620, 0x1c3, 0x8192, 0x812b, 0x0, 0x0);
        gbc.writeMem(0xafd7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9991);
        EXPECT(gbc.pc(), 0xafd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd7), 0xcb);
        EXPECT(gbc.readMem(0xafd8), 0x59);
        // CB 59 0009
        gbc.setState(0xaa87, 0xdef9, 0x9890, 0x3b59, 0xfee2, 0x4ef5, 0x0, 0x1);
        gbc.writeMem(0xaa87, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xdef9);
        EXPECT(gbc.pc(), 0xaa89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa87), 0xcb);
        EXPECT(gbc.readMem(0xaa88), 0x59);
        // CB 59 000A
        gbc.setState(0xdb84, 0xa76e, 0x1720, 0xb6e8, 0xe4fb, 0x681e, 0x0, 0x0);
        gbc.writeMem(0xdb84, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa76e);
        EXPECT(gbc.pc(), 0xdb86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb84), 0xcb);
        EXPECT(gbc.readMem(0xdb85), 0x59);
        // CB 59 000B
        gbc.setState(0x4d18, 0x3f2e, 0xa5b0, 0x34af, 0x86f, 0x9db0, 0x0, 0x0);
        gbc.writeMem(0x4d18, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3f2e);
        EXPECT(gbc.pc(), 0x4d1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 000C
        gbc.setState(0x7a69, 0x317, 0xa2b0, 0xf3f5, 0x9060, 0x198b, 0x1, 0x1);
        gbc.writeMem(0x7a69, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x317);
        EXPECT(gbc.pc(), 0x7a6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 000D
        gbc.setState(0x9d56, 0x2dc8, 0x3bf0, 0x2576, 0xed7f, 0x856e, 0x1, 0x1);
        gbc.writeMem(0x9d56, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2dc8);
        EXPECT(gbc.pc(), 0x9d58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d56), 0xcb);
        EXPECT(gbc.readMem(0x9d57), 0x59);
        // CB 59 000F
        gbc.setState(0x8bea, 0x25a8, 0xa0a0, 0x45b7, 0x1d6a, 0x610a, 0x1, 0x1);
        gbc.writeMem(0x8bea, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x25a8);
        EXPECT(gbc.pc(), 0x8bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bea), 0xcb);
        EXPECT(gbc.readMem(0x8beb), 0x59);
        // CB 59 0010
        gbc.setState(0xefef, 0x5a0c, 0x15b0, 0x75fc, 0x334b, 0xb515, 0x0, 0x1);
        gbc.writeMem(0xefef, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5a0c);
        EXPECT(gbc.pc(), 0xeff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefef), 0xcb);
        EXPECT(gbc.readMem(0xeff0), 0x59);
        // CB 59 0011
        gbc.setState(0x8322, 0xbacd, 0xf5b0, 0x883e, 0xcb45, 0xab56, 0x0, 0x1);
        gbc.writeMem(0x8322, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xbacd);
        EXPECT(gbc.pc(), 0x8324);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8322), 0xcb);
        EXPECT(gbc.readMem(0x8323), 0x59);
        // CB 59 0012
        gbc.setState(0xd0a4, 0x25c3, 0x28f0, 0x4117, 0x335e, 0x2ed7, 0x1, 0x0);
        gbc.writeMem(0xd0a4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x25c3);
        EXPECT(gbc.pc(), 0xd0a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0a4), 0xcb);
        EXPECT(gbc.readMem(0xd0a5), 0x59);
        // CB 59 0013
        gbc.setState(0xcfeb, 0x198a, 0xe1b0, 0x3b06, 0xadcb, 0xa05, 0x0, 0x1);
        gbc.writeMem(0xcfeb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x198a);
        EXPECT(gbc.pc(), 0xcfed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfeb), 0xcb);
        EXPECT(gbc.readMem(0xcfec), 0x59);
        // CB 59 0014
        gbc.setState(0x88ce, 0x14a1, 0x97d0, 0xada2, 0x6e58, 0x2e32, 0x0, 0x0);
        gbc.writeMem(0x88ce, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x14a1);
        EXPECT(gbc.pc(), 0x88d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ce), 0xcb);
        EXPECT(gbc.readMem(0x88cf), 0x59);
        // CB 59 0015
        gbc.setState(0xc4e5, 0x68f9, 0x9a90, 0x2ed9, 0x19b2, 0xcc56, 0x0, 0x0);
        gbc.writeMem(0xc4e5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x68f9);
        EXPECT(gbc.pc(), 0xc4e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4e5), 0xcb);
        EXPECT(gbc.readMem(0xc4e6), 0x59);
        // CB 59 0016
        gbc.setState(0xea23, 0xf3e4, 0x9860, 0x780d, 0x16d1, 0x4d3c, 0x0, 0x1);
        gbc.writeMem(0xea23, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf3e4);
        EXPECT(gbc.pc(), 0xea25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea23), 0xcb);
        EXPECT(gbc.readMem(0xea24), 0x59);
        // CB 59 0017
        gbc.setState(0x4bcc, 0xc877, 0x6c50, 0x22be, 0x98b6, 0xecce, 0x0, 0x1);
        gbc.writeMem(0x4bcc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc877);
        EXPECT(gbc.pc(), 0x4bce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0018
        gbc.setState(0x5659, 0x4134, 0xee40, 0x2f17, 0x6b53, 0xa8cc, 0x1, 0x1);
        gbc.writeMem(0x5659, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4134);
        EXPECT(gbc.pc(), 0x565b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0019
        gbc.setState(0xeaef, 0xcf93, 0x18a0, 0xe049, 0x5003, 0xf9a9, 0x1, 0x1);
        gbc.writeMem(0xeaef, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xcf93);
        EXPECT(gbc.pc(), 0xeaf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaef), 0xcb);
        EXPECT(gbc.readMem(0xeaf0), 0x59);
        // CB 59 001A
        gbc.setState(0x4ace, 0x5a63, 0x51a0, 0xd38c, 0x99b4, 0x48d, 0x1, 0x1);
        gbc.writeMem(0x4ace, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5a63);
        EXPECT(gbc.pc(), 0x4ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 001B
        gbc.setState(0xc328, 0xa7c8, 0xcc70, 0xa30e, 0xe000, 0x4361, 0x0, 0x0);
        gbc.writeMem(0xc328, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa7c8);
        EXPECT(gbc.pc(), 0xc32a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc328), 0xcb);
        EXPECT(gbc.readMem(0xc329), 0x59);
        // CB 59 001C
        gbc.setState(0x3cbd, 0xc39d, 0x5e90, 0xefbb, 0xa2c7, 0x1c76, 0x0, 0x1);
        gbc.writeMem(0x3cbd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc39d);
        EXPECT(gbc.pc(), 0x3cbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 001D
        gbc.setState(0xc4fb, 0x90fe, 0x26f0, 0x7150, 0xaa63, 0xab81, 0x0, 0x0);
        gbc.writeMem(0xc4fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x90fe);
        EXPECT(gbc.pc(), 0xc4fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4fb), 0xcb);
        EXPECT(gbc.readMem(0xc4fc), 0x59);
        // CB 59 001E
        gbc.setState(0x9378, 0xf601, 0x92f0, 0x7db9, 0xf9cb, 0xd01f, 0x0, 0x0);
        gbc.writeMem(0x9378, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf601);
        EXPECT(gbc.pc(), 0x937a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9378), 0xcb);
        EXPECT(gbc.readMem(0x9379), 0x59);
        // CB 59 001F
        gbc.setState(0x7feb, 0x5c2a, 0x6680, 0xe193, 0x1a58, 0xc9ef, 0x1, 0x1);
        gbc.writeMem(0x7feb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5c2a);
        EXPECT(gbc.pc(), 0x7fed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0020
        gbc.setState(0xee2f, 0x30df, 0x5a50, 0xc067, 0xf68f, 0xc9a4, 0x0, 0x1);
        gbc.writeMem(0xee2f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x30df);
        EXPECT(gbc.pc(), 0xee31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee2f), 0xcb);
        EXPECT(gbc.readMem(0xee30), 0x59);
        // CB 59 0021
        gbc.setState(0x9526, 0xc9e8, 0xe280, 0xb2f7, 0x6aa6, 0xbf1c, 0x1, 0x1);
        gbc.writeMem(0x9526, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc9e8);
        EXPECT(gbc.pc(), 0x9528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9526), 0xcb);
        EXPECT(gbc.readMem(0x9527), 0x59);
        // CB 59 0023
        gbc.setState(0xe2a7, 0x270, 0x9570, 0x84f0, 0xbadc, 0xc601, 0x0, 0x1);
        gbc.writeMem(0xe2a7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x270);
        EXPECT(gbc.pc(), 0xe2a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2a7), 0xcb);
        EXPECT(gbc.readMem(0xe2a8), 0x59);
        // CB 59 0024
        gbc.setState(0x9045, 0x1eed, 0x7e10, 0x673e, 0xd162, 0xeef4, 0x0, 0x0);
        gbc.writeMem(0x9045, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1eed);
        EXPECT(gbc.pc(), 0x9047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9045), 0xcb);
        EXPECT(gbc.readMem(0x9046), 0x59);
        // CB 59 0025
        gbc.setState(0x3b23, 0x3a4a, 0x9030, 0xb923, 0x4524, 0xa224, 0x1, 0x1);
        gbc.writeMem(0x3b23, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3a4a);
        EXPECT(gbc.pc(), 0x3b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0026
        gbc.setState(0x4416, 0x94b0, 0xeb70, 0xa1df, 0xe74a, 0x40c5, 0x0, 0x0);
        gbc.writeMem(0x4416, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x94b0);
        EXPECT(gbc.pc(), 0x4418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0027
        gbc.setState(0xdcee, 0x1fbf, 0x5e30, 0x4aa5, 0xe07, 0x70da, 0x0, 0x1);
        gbc.writeMem(0xdcee, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1fbf);
        EXPECT(gbc.pc(), 0xdcf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcee), 0xcb);
        EXPECT(gbc.readMem(0xdcef), 0x59);
        // CB 59 0028
        gbc.setState(0x8ba7, 0xaefa, 0x1210, 0x6170, 0x21af, 0xcb7, 0x1, 0x0);
        gbc.writeMem(0x8ba7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xaefa);
        EXPECT(gbc.pc(), 0x8ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba7), 0xcb);
        EXPECT(gbc.readMem(0x8ba8), 0x59);
        // CB 59 0029
        gbc.setState(0x1e60, 0x1d14, 0x45e0, 0xfbe7, 0xdc91, 0x19b, 0x1, 0x0);
        gbc.writeMem(0x1e60, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1d14);
        EXPECT(gbc.pc(), 0x1e62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 002A
        gbc.setState(0xca4e, 0x5a85, 0x39f0, 0x6e04, 0x6e2a, 0x9e14, 0x1, 0x1);
        gbc.writeMem(0xca4e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5a85);
        EXPECT(gbc.pc(), 0xca50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca4e), 0xcb);
        EXPECT(gbc.readMem(0xca4f), 0x59);
        // CB 59 002B
        gbc.setState(0xb54a, 0x4b1c, 0xd4a0, 0xa330, 0xf624, 0x8def, 0x1, 0x0);
        gbc.writeMem(0xb54a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4b1c);
        EXPECT(gbc.pc(), 0xb54c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb54a), 0xcb);
        EXPECT(gbc.readMem(0xb54b), 0x59);
        // CB 59 002D
        gbc.setState(0x1e03, 0xbbdb, 0x5e60, 0xba01, 0x4044, 0x6ebb, 0x1, 0x1);
        gbc.writeMem(0x1e03, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbbdb);
        EXPECT(gbc.pc(), 0x1e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 002E
        gbc.setState(0xb83f, 0xb42e, 0x4ad0, 0xb75a, 0xcb49, 0x601e, 0x1, 0x0);
        gbc.writeMem(0xb83f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb42e);
        EXPECT(gbc.pc(), 0xb841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb83f), 0xcb);
        EXPECT(gbc.readMem(0xb840), 0x59);
        // CB 59 002F
        gbc.setState(0xb60a, 0xf32f, 0xecb0, 0x698a, 0x5d5c, 0xb0be, 0x1, 0x1);
        gbc.writeMem(0xb60a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf32f);
        EXPECT(gbc.pc(), 0xb60c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb60a), 0xcb);
        EXPECT(gbc.readMem(0xb60b), 0x59);
        // CB 59 0030
        gbc.setState(0x5f99, 0x6b73, 0xbd40, 0xf759, 0x7b22, 0x8398, 0x1, 0x0);
        gbc.writeMem(0x5f99, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6b73);
        EXPECT(gbc.pc(), 0x5f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0031
        gbc.setState(0x4c79, 0x6203, 0xb090, 0xbf50, 0x7a6f, 0x6bd2, 0x1, 0x1);
        gbc.writeMem(0x4c79, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6203);
        EXPECT(gbc.pc(), 0x4c7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0032
        gbc.setState(0x7163, 0x2040, 0xab20, 0x107, 0x30f2, 0xe8b, 0x1, 0x1);
        gbc.writeMem(0x7163, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2040);
        EXPECT(gbc.pc(), 0x7165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0033
        gbc.setState(0x5dfa, 0xfd1c, 0x2ae0, 0x10b, 0x9f61, 0xc7bd, 0x1, 0x0);
        gbc.writeMem(0x5dfa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfd1c);
        EXPECT(gbc.pc(), 0x5dfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0034
        gbc.setState(0x36d6, 0xa324, 0x5900, 0x39ac, 0xf97e, 0xe9d6, 0x0, 0x0);
        gbc.writeMem(0x36d6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa324);
        EXPECT(gbc.pc(), 0x36d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0035
        gbc.setState(0xda16, 0x65df, 0xcc50, 0xc863, 0xa588, 0xbfcf, 0x1, 0x0);
        gbc.writeMem(0xda16, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x65df);
        EXPECT(gbc.pc(), 0xda18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda16), 0xcb);
        EXPECT(gbc.readMem(0xda17), 0x59);
        // CB 59 0036
        gbc.setState(0x9fc7, 0x84f, 0xadf0, 0x96b5, 0x4bc9, 0xb300, 0x1, 0x1);
        gbc.writeMem(0x9fc7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x84f);
        EXPECT(gbc.pc(), 0x9fc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc7), 0xcb);
        EXPECT(gbc.readMem(0x9fc8), 0x59);
        // CB 59 0037
        gbc.setState(0x58ca, 0x10cd, 0x1630, 0x9f3d, 0xfbda, 0x64e3, 0x1, 0x1);
        gbc.writeMem(0x58ca, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x10cd);
        EXPECT(gbc.pc(), 0x58cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0038
        gbc.setState(0x5913, 0x3734, 0x7600, 0x4d2a, 0xf957, 0x5495, 0x0, 0x1);
        gbc.writeMem(0x5913, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3734);
        EXPECT(gbc.pc(), 0x5915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0039
        gbc.setState(0x816c, 0xdbb4, 0xb210, 0x8a6c, 0xc44e, 0x9318, 0x1, 0x1);
        gbc.writeMem(0x816c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xdbb4);
        EXPECT(gbc.pc(), 0x816e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x816c), 0xcb);
        EXPECT(gbc.readMem(0x816d), 0x59);
        // CB 59 003A
        gbc.setState(0xb488, 0x664e, 0xbd40, 0xdb7a, 0x5501, 0x838a, 0x0, 0x0);
        gbc.writeMem(0xb488, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x664e);
        EXPECT(gbc.pc(), 0xb48a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb488), 0xcb);
        EXPECT(gbc.readMem(0xb489), 0x59);
        // CB 59 003B
        gbc.setState(0xc849, 0xe5, 0xc680, 0x69e, 0x2a9d, 0x82c6, 0x0, 0x0);
        gbc.writeMem(0xc849, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe5);
        EXPECT(gbc.pc(), 0xc84b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc849), 0xcb);
        EXPECT(gbc.readMem(0xc84a), 0x59);
        // CB 59 003C
        gbc.setState(0x24a2, 0xd60c, 0x45c0, 0x5271, 0xa6cf, 0x1fb3, 0x0, 0x1);
        gbc.writeMem(0x24a2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd60c);
        EXPECT(gbc.pc(), 0x24a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 003E
        gbc.setState(0x7333, 0xaf37, 0x2d00, 0xd998, 0x2252, 0x93fc, 0x1, 0x0);
        gbc.writeMem(0x7333, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xaf37);
        EXPECT(gbc.pc(), 0x7335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 003F
        gbc.setState(0x3336, 0x1e23, 0x18f0, 0x591a, 0x7980, 0x4998, 0x0, 0x1);
        gbc.writeMem(0x3336, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1e23);
        EXPECT(gbc.pc(), 0x3338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0040
        gbc.setState(0x5fe4, 0x6af4, 0xcb80, 0x39a4, 0xc868, 0x91d1, 0x1, 0x1);
        gbc.writeMem(0x5fe4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6af4);
        EXPECT(gbc.pc(), 0x5fe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0041
        gbc.setState(0xed9d, 0x7c5e, 0x7d60, 0x99f1, 0xc3b6, 0xf839, 0x1, 0x1);
        gbc.writeMem(0xed9d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7c5e);
        EXPECT(gbc.pc(), 0xed9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed9d), 0xcb);
        EXPECT(gbc.readMem(0xed9e), 0x59);
        // CB 59 0042
        gbc.setState(0x628, 0xe908, 0x37b0, 0x31e9, 0xb932, 0x48e, 0x1, 0x0);
        gbc.writeMem(0x628, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe908);
        EXPECT(gbc.pc(), 0x62a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0043
        gbc.setState(0x66fa, 0x9efb, 0x9aa0, 0xf6e1, 0x516, 0x8b80, 0x1, 0x1);
        gbc.writeMem(0x66fa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9efb);
        EXPECT(gbc.pc(), 0x66fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0044
        gbc.setState(0x68e1, 0x798, 0x41c0, 0xa94a, 0x19ff, 0x415a, 0x1, 0x0);
        gbc.writeMem(0x68e1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x798);
        EXPECT(gbc.pc(), 0x68e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0045
        gbc.setState(0xdf46, 0x7483, 0x8ae0, 0x6c71, 0x519d, 0x165c, 0x0, 0x0);
        gbc.writeMem(0xdf46, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7483);
        EXPECT(gbc.pc(), 0xdf48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf46), 0xcb);
        EXPECT(gbc.readMem(0xdf47), 0x59);
        // CB 59 0046
        gbc.setState(0xadb9, 0x3519, 0x4f80, 0x93b2, 0xe0d3, 0x2094, 0x0, 0x0);
        gbc.writeMem(0xadb9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3519);
        EXPECT(gbc.pc(), 0xadbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadb9), 0xcb);
        EXPECT(gbc.readMem(0xadba), 0x59);
        // CB 59 0047
        gbc.setState(0x23f2, 0x53ad, 0xf6a0, 0x1e83, 0xab3c, 0xa79a, 0x1, 0x0);
        gbc.writeMem(0x23f2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x53ad);
        EXPECT(gbc.pc(), 0x23f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0048
        gbc.setState(0x17d6, 0x3afb, 0x18e0, 0x4968, 0x775d, 0x8d05, 0x0, 0x1);
        gbc.writeMem(0x17d6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3afb);
        EXPECT(gbc.pc(), 0x17d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0049
        gbc.setState(0x4261, 0xb145, 0xc270, 0x52d9, 0xfabd, 0x7986, 0x0, 0x0);
        gbc.writeMem(0x4261, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb145);
        EXPECT(gbc.pc(), 0x4263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 004A
        gbc.setState(0xbcd4, 0xcffd, 0x9b70, 0x3953, 0xc087, 0x4f24, 0x1, 0x1);
        gbc.writeMem(0xbcd4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcffd);
        EXPECT(gbc.pc(), 0xbcd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd4), 0xcb);
        EXPECT(gbc.readMem(0xbcd5), 0x59);
        // CB 59 004B
        gbc.setState(0x1ffd, 0xd400, 0x90a0, 0xc949, 0x783d, 0x9004, 0x1, 0x0);
        gbc.writeMem(0x1ffd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd400);
        EXPECT(gbc.pc(), 0x1fff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 004C
        gbc.setState(0x5694, 0x1420, 0x6070, 0x32d4, 0x4a8a, 0x76d8, 0x1, 0x0);
        gbc.writeMem(0x5694, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1420);
        EXPECT(gbc.pc(), 0x5696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 004D
        gbc.setState(0x8de3, 0xd50b, 0xee10, 0x862d, 0x51f1, 0x6491, 0x0, 0x0);
        gbc.writeMem(0x8de3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd50b);
        EXPECT(gbc.pc(), 0x8de5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de3), 0xcb);
        EXPECT(gbc.readMem(0x8de4), 0x59);
        // CB 59 004E
        gbc.setState(0xd324, 0x1626, 0xd750, 0x12e4, 0x8eff, 0x17b9, 0x1, 0x1);
        gbc.writeMem(0xd324, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1626);
        EXPECT(gbc.pc(), 0xd326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd324), 0xcb);
        EXPECT(gbc.readMem(0xd325), 0x59);
        // CB 59 004F
        gbc.setState(0x9d9, 0x47ec, 0x9220, 0x24ba, 0x8207, 0xaad9, 0x0, 0x0);
        gbc.writeMem(0x9d9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x47ec);
        EXPECT(gbc.pc(), 0x9db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0050
        gbc.setState(0x2c39, 0xcbb4, 0x5c10, 0x35f4, 0x9870, 0xd6c2, 0x1, 0x1);
        gbc.writeMem(0x2c39, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xcbb4);
        EXPECT(gbc.pc(), 0x2c3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0051
        gbc.setState(0xef35, 0x6e15, 0x8e90, 0x1bf0, 0x3a85, 0xfbd, 0x1, 0x1);
        gbc.writeMem(0xef35, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6e15);
        EXPECT(gbc.pc(), 0xef37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef35), 0xcb);
        EXPECT(gbc.readMem(0xef36), 0x59);
        // CB 59 0052
        gbc.setState(0x68d6, 0x9268, 0x5900, 0x9b3d, 0x72ca, 0xff97, 0x1, 0x1);
        gbc.writeMem(0x68d6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9268);
        EXPECT(gbc.pc(), 0x68d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0053
        gbc.setState(0x2dd4, 0xff5b, 0x6e90, 0x71e1, 0xeb2b, 0x533b, 0x1, 0x1);
        gbc.writeMem(0x2dd4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xff5b);
        EXPECT(gbc.pc(), 0x2dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0054
        gbc.setState(0x123, 0x9eab, 0x93a0, 0x9f8a, 0xcc63, 0x545b, 0x1, 0x1);
        gbc.writeMem(0x123, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9eab);
        EXPECT(gbc.pc(), 0x125);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0056
        gbc.setState(0x4265, 0xbef7, 0xa060, 0x8196, 0xf215, 0xfcfb, 0x0, 0x0);
        gbc.writeMem(0x4265, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbef7);
        EXPECT(gbc.pc(), 0x4267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0057
        gbc.setState(0xdc41, 0xa28d, 0x950, 0xa3b4, 0xd9ce, 0xf81e, 0x0, 0x0);
        gbc.writeMem(0xdc41, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa28d);
        EXPECT(gbc.pc(), 0xdc43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc41), 0xcb);
        EXPECT(gbc.readMem(0xdc42), 0x59);
        // CB 59 0058
        gbc.setState(0x4c75, 0x1c22, 0x3190, 0x9e8b, 0x3f57, 0xa422, 0x1, 0x1);
        gbc.writeMem(0x4c75, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1c22);
        EXPECT(gbc.pc(), 0x4c77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0059
        gbc.setState(0xe036, 0xc96b, 0x5550, 0xdce9, 0x1713, 0x479a, 0x0, 0x1);
        gbc.writeMem(0xe036, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc96b);
        EXPECT(gbc.pc(), 0xe038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe036), 0xcb);
        EXPECT(gbc.readMem(0xe037), 0x59);
        // CB 59 005A
        gbc.setState(0x5af8, 0xc915, 0xf400, 0x206b, 0x1442, 0x2931, 0x1, 0x0);
        gbc.writeMem(0x5af8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc915);
        EXPECT(gbc.pc(), 0x5afa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 005B
        gbc.setState(0x9ef7, 0x8671, 0x6f90, 0x4bb4, 0x62d8, 0x2f42, 0x0, 0x1);
        gbc.writeMem(0x9ef7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8671);
        EXPECT(gbc.pc(), 0x9ef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ef7), 0xcb);
        EXPECT(gbc.readMem(0x9ef8), 0x59);
        // CB 59 005C
        gbc.setState(0x288, 0x7ab9, 0x240, 0x1326, 0xf16d, 0xf43c, 0x0, 0x0);
        gbc.writeMem(0x288, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7ab9);
        EXPECT(gbc.pc(), 0x28a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 005D
        gbc.setState(0x7bdb, 0xa8f9, 0x7e80, 0x42dd, 0x51cc, 0x6ea3, 0x1, 0x0);
        gbc.writeMem(0x7bdb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa8f9);
        EXPECT(gbc.pc(), 0x7bdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 005E
        gbc.setState(0x383a, 0xba1d, 0xe320, 0x962, 0x8c26, 0x91f4, 0x0, 0x0);
        gbc.writeMem(0x383a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xba1d);
        EXPECT(gbc.pc(), 0x383c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 005F
        gbc.setState(0xa64f, 0x757d, 0x4050, 0x620b, 0x198e, 0xfc35, 0x0, 0x1);
        gbc.writeMem(0xa64f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x757d);
        EXPECT(gbc.pc(), 0xa651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa64f), 0xcb);
        EXPECT(gbc.readMem(0xa650), 0x59);
        // CB 59 0060
        gbc.setState(0xa1ed, 0x8fc, 0xe000, 0x5e1b, 0xd99, 0x2e9e, 0x0, 0x1);
        gbc.writeMem(0xa1ed, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8fc);
        EXPECT(gbc.pc(), 0xa1ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ed), 0xcb);
        EXPECT(gbc.readMem(0xa1ee), 0x59);
        // CB 59 0061
        gbc.setState(0x2824, 0xef96, 0xfaf0, 0xb5f7, 0xa237, 0x19d1, 0x0, 0x0);
        gbc.writeMem(0x2824, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xef96);
        EXPECT(gbc.pc(), 0x2826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0062
        gbc.setState(0x47dd, 0x5b0, 0xf8e0, 0xf8fb, 0x69fc, 0x6d65, 0x1, 0x0);
        gbc.writeMem(0x47dd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5b0);
        EXPECT(gbc.pc(), 0x47df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0063
        gbc.setState(0xdc11, 0x8b5d, 0x3590, 0xf8ea, 0x32d6, 0xcdcb, 0x1, 0x1);
        gbc.writeMem(0xdc11, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8b5d);
        EXPECT(gbc.pc(), 0xdc13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc11), 0xcb);
        EXPECT(gbc.readMem(0xdc12), 0x59);
        // CB 59 0064
        gbc.setState(0x5063, 0x3195, 0xd6a0, 0xdaff, 0xb537, 0x925d, 0x1, 0x0);
        gbc.writeMem(0x5063, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3195);
        EXPECT(gbc.pc(), 0x5065);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0065
        gbc.setState(0xa18f, 0xff8, 0xbc60, 0x2e62, 0x1148, 0xc859, 0x0, 0x1);
        gbc.writeMem(0xa18f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xff8);
        EXPECT(gbc.pc(), 0xa191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18f), 0xcb);
        EXPECT(gbc.readMem(0xa190), 0x59);
        // CB 59 0066
        gbc.setState(0x3a94, 0xde8d, 0x2d70, 0x1640, 0x6832, 0xf752, 0x1, 0x0);
        gbc.writeMem(0x3a94, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xde8d);
        EXPECT(gbc.pc(), 0x3a96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0067
        gbc.setState(0xa8a2, 0xece3, 0x8040, 0xdd9d, 0x4ca0, 0x8f92, 0x1, 0x1);
        gbc.writeMem(0xa8a2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xece3);
        EXPECT(gbc.pc(), 0xa8a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8a2), 0xcb);
        EXPECT(gbc.readMem(0xa8a3), 0x59);
        // CB 59 0068
        gbc.setState(0xeed5, 0xd5e8, 0xf540, 0xc529, 0xea28, 0xd1f7, 0x1, 0x0);
        gbc.writeMem(0xeed5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd5e8);
        EXPECT(gbc.pc(), 0xeed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeed5), 0xcb);
        EXPECT(gbc.readMem(0xeed6), 0x59);
        // CB 59 006A
        gbc.setState(0x74d5, 0xae95, 0xeed0, 0xf4f1, 0x66ee, 0x6ee8, 0x1, 0x0);
        gbc.writeMem(0x74d5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xae95);
        EXPECT(gbc.pc(), 0x74d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 006B
        gbc.setState(0x39b7, 0xd80d, 0xdf70, 0x3dd9, 0x48f6, 0xf007, 0x1, 0x0);
        gbc.writeMem(0x39b7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd80d);
        EXPECT(gbc.pc(), 0x39b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 006C
        gbc.setState(0x6b57, 0x2ad0, 0x3b10, 0xb597, 0x1e92, 0x1d66, 0x1, 0x1);
        gbc.writeMem(0x6b57, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2ad0);
        EXPECT(gbc.pc(), 0x6b59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 006D
        gbc.setState(0x1d36, 0xa5c, 0xc8e0, 0xf65e, 0x6ae4, 0xca22, 0x0, 0x1);
        gbc.writeMem(0x1d36, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa5c);
        EXPECT(gbc.pc(), 0x1d38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 006E
        gbc.setState(0xd561, 0xdef9, 0x9d70, 0xe458, 0x701d, 0xcf48, 0x1, 0x0);
        gbc.writeMem(0xd561, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdef9);
        EXPECT(gbc.pc(), 0xd563);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd561), 0xcb);
        EXPECT(gbc.readMem(0xd562), 0x59);
        // CB 59 006F
        gbc.setState(0x441d, 0x7c8b, 0xa3b0, 0x5a88, 0xda37, 0xcd77, 0x1, 0x0);
        gbc.writeMem(0x441d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7c8b);
        EXPECT(gbc.pc(), 0x441f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0070
        gbc.setState(0x70a1, 0x9031, 0x5610, 0xf0f7, 0x781b, 0x4be5, 0x1, 0x1);
        gbc.writeMem(0x70a1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9031);
        EXPECT(gbc.pc(), 0x70a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0071
        gbc.setState(0xee98, 0xeaf4, 0x3780, 0xe93d, 0xafcb, 0x8f96, 0x0, 0x1);
        gbc.writeMem(0xee98, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xeaf4);
        EXPECT(gbc.pc(), 0xee9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee98), 0xcb);
        EXPECT(gbc.readMem(0xee99), 0x59);
        // CB 59 0072
        gbc.setState(0xaf66, 0x9981, 0xd580, 0x7f5d, 0xcecb, 0x60ea, 0x0, 0x0);
        gbc.writeMem(0xaf66, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9981);
        EXPECT(gbc.pc(), 0xaf68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf66), 0xcb);
        EXPECT(gbc.readMem(0xaf67), 0x59);
        // CB 59 0073
        gbc.setState(0xd6bf, 0x11ce, 0x4930, 0x2fca, 0x1d6f, 0xcdb1, 0x1, 0x1);
        gbc.writeMem(0xd6bf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x11ce);
        EXPECT(gbc.pc(), 0xd6c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6bf), 0xcb);
        EXPECT(gbc.readMem(0xd6c0), 0x59);
        // CB 59 0074
        gbc.setState(0xce6c, 0x4c7e, 0x4e10, 0x2f91, 0x10d0, 0xa76a, 0x1, 0x0);
        gbc.writeMem(0xce6c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4c7e);
        EXPECT(gbc.pc(), 0xce6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce6c), 0xcb);
        EXPECT(gbc.readMem(0xce6d), 0x59);
        // CB 59 0075
        gbc.setState(0xe8ba, 0x83f7, 0xcd10, 0x5a20, 0xf82d, 0x9ba, 0x0, 0x0);
        gbc.writeMem(0xe8ba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x83f7);
        EXPECT(gbc.pc(), 0xe8bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8ba), 0xcb);
        EXPECT(gbc.readMem(0xe8bb), 0x59);
        // CB 59 0076
        gbc.setState(0x9a65, 0x35d3, 0xb280, 0x83af, 0xf15, 0x72c9, 0x1, 0x0);
        gbc.writeMem(0x9a65, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x35d3);
        EXPECT(gbc.pc(), 0x9a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a65), 0xcb);
        EXPECT(gbc.readMem(0x9a66), 0x59);
        // CB 59 0077
        gbc.setState(0x8e24, 0x48d7, 0x7cd0, 0x59a, 0x3fbd, 0x9528, 0x0, 0x0);
        gbc.writeMem(0x8e24, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x48d7);
        EXPECT(gbc.pc(), 0x8e26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e24), 0xcb);
        EXPECT(gbc.readMem(0x8e25), 0x59);
        // CB 59 0078
        gbc.setState(0x7f7d, 0x9f94, 0x6040, 0xa749, 0xb52a, 0xc299, 0x1, 0x0);
        gbc.writeMem(0x7f7d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9f94);
        EXPECT(gbc.pc(), 0x7f7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0079
        gbc.setState(0x43c5, 0x42c2, 0xedb0, 0xa791, 0x9cbf, 0x5610, 0x0, 0x1);
        gbc.writeMem(0x43c5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x42c2);
        EXPECT(gbc.pc(), 0x43c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 007A
        gbc.setState(0xb2c, 0xe080, 0x5270, 0x7a94, 0x9a7e, 0x7d94, 0x1, 0x1);
        gbc.writeMem(0xb2c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe080);
        EXPECT(gbc.pc(), 0xb2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 007B
        gbc.setState(0x13ed, 0x71ff, 0x2630, 0x4098, 0x1e93, 0xcd7c, 0x0, 0x1);
        gbc.writeMem(0x13ed, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x71ff);
        EXPECT(gbc.pc(), 0x13ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 007C
        gbc.setState(0xe794, 0x4ced, 0x3b40, 0x1e28, 0x1ba4, 0x2f3c, 0x0, 0x1);
        gbc.writeMem(0xe794, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4ced);
        EXPECT(gbc.pc(), 0xe796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe794), 0xcb);
        EXPECT(gbc.readMem(0xe795), 0x59);
        // CB 59 007D
        gbc.setState(0x35e1, 0x170d, 0x2530, 0x5958, 0xff0f, 0xd96d, 0x1, 0x1);
        gbc.writeMem(0x35e1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x170d);
        EXPECT(gbc.pc(), 0x35e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 007E
        gbc.setState(0x756, 0xbf85, 0x5f00, 0xd8a, 0xd981, 0xe432, 0x0, 0x1);
        gbc.writeMem(0x756, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbf85);
        EXPECT(gbc.pc(), 0x758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 007F
        gbc.setState(0x365b, 0x4c6e, 0xce10, 0xfb8f, 0xc92c, 0x2b94, 0x1, 0x1);
        gbc.writeMem(0x365b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4c6e);
        EXPECT(gbc.pc(), 0x365d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0080
        gbc.setState(0x483b, 0xa18f, 0xaf80, 0x1610, 0x947c, 0x91cd, 0x0, 0x0);
        gbc.writeMem(0x483b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa18f);
        EXPECT(gbc.pc(), 0x483d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0081
        gbc.setState(0xa19d, 0x9df1, 0xa7f0, 0x50ee, 0x88b6, 0xdef9, 0x0, 0x1);
        gbc.writeMem(0xa19d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9df1);
        EXPECT(gbc.pc(), 0xa19f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa19d), 0xcb);
        EXPECT(gbc.readMem(0xa19e), 0x59);
        // CB 59 0082
        gbc.setState(0xbf6d, 0x35d9, 0x1610, 0xefff, 0xa4cb, 0xe1b, 0x0, 0x0);
        gbc.writeMem(0xbf6d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x35d9);
        EXPECT(gbc.pc(), 0xbf6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf6d), 0xcb);
        EXPECT(gbc.readMem(0xbf6e), 0x59);
        // CB 59 0083
        gbc.setState(0x440c, 0xd306, 0x1f80, 0x3169, 0xf6df, 0x645, 0x1, 0x0);
        gbc.writeMem(0x440c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd306);
        EXPECT(gbc.pc(), 0x440e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0084
        gbc.setState(0x8481, 0x99cd, 0x91f0, 0x6a47, 0xbce0, 0xee64, 0x0, 0x1);
        gbc.writeMem(0x8481, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x99cd);
        EXPECT(gbc.pc(), 0x8483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8481), 0xcb);
        EXPECT(gbc.readMem(0x8482), 0x59);
        // CB 59 0085
        gbc.setState(0x3270, 0x140b, 0x36e0, 0x6fa0, 0x7b22, 0x2a7c, 0x0, 0x1);
        gbc.writeMem(0x3270, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x140b);
        EXPECT(gbc.pc(), 0x3272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0086
        gbc.setState(0x4162, 0x6eab, 0x2c0, 0xd0e8, 0x2e0c, 0xf1f9, 0x1, 0x1);
        gbc.writeMem(0x4162, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6eab);
        EXPECT(gbc.pc(), 0x4164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0088
        gbc.setState(0xe449, 0xa287, 0xbcc0, 0x6d9d, 0x2ff7, 0xc637, 0x1, 0x1);
        gbc.writeMem(0xe449, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa287);
        EXPECT(gbc.pc(), 0xe44b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe449), 0xcb);
        EXPECT(gbc.readMem(0xe44a), 0x59);
        // CB 59 0089
        gbc.setState(0x90e3, 0x203a, 0xd830, 0xcfa4, 0xb02f, 0x950c, 0x0, 0x0);
        gbc.writeMem(0x90e3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x203a);
        EXPECT(gbc.pc(), 0x90e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90e3), 0xcb);
        EXPECT(gbc.readMem(0x90e4), 0x59);
        // CB 59 008A
        gbc.setState(0xe0c3, 0x52af, 0xcd00, 0xf1e4, 0x4f1b, 0x238c, 0x1, 0x0);
        gbc.writeMem(0xe0c3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x52af);
        EXPECT(gbc.pc(), 0xe0c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0c3), 0xcb);
        EXPECT(gbc.readMem(0xe0c4), 0x59);
        // CB 59 008B
        gbc.setState(0x58e7, 0xc8a4, 0x35a0, 0xf512, 0x682c, 0x6265, 0x0, 0x0);
        gbc.writeMem(0x58e7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc8a4);
        EXPECT(gbc.pc(), 0x58e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 008D
        gbc.setState(0x1ba0, 0x8ffd, 0x1840, 0x6523, 0x21a8, 0x6a9b, 0x1, 0x0);
        gbc.writeMem(0x1ba0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8ffd);
        EXPECT(gbc.pc(), 0x1ba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 008E
        gbc.setState(0x797f, 0xd912, 0xe690, 0x11f4, 0x7542, 0x45d9, 0x1, 0x1);
        gbc.writeMem(0x797f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd912);
        EXPECT(gbc.pc(), 0x7981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 008F
        gbc.setState(0x5ea5, 0xaded, 0xc7e0, 0xb9c2, 0xd28a, 0xf62b, 0x0, 0x0);
        gbc.writeMem(0x5ea5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xaded);
        EXPECT(gbc.pc(), 0x5ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0090
        gbc.setState(0x7327, 0x5641, 0x7130, 0x6590, 0x887a, 0xba76, 0x0, 0x1);
        gbc.writeMem(0x7327, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5641);
        EXPECT(gbc.pc(), 0x7329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0091
        gbc.setState(0x96d0, 0x3bc1, 0xc0, 0xf4d7, 0x5372, 0x13a, 0x0, 0x1);
        gbc.writeMem(0x96d0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3bc1);
        EXPECT(gbc.pc(), 0x96d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96d0), 0xcb);
        EXPECT(gbc.readMem(0x96d1), 0x59);
        // CB 59 0092
        gbc.setState(0x6e36, 0xd37d, 0x2d30, 0x84d7, 0x81f3, 0xa321, 0x0, 0x1);
        gbc.writeMem(0x6e36, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd37d);
        EXPECT(gbc.pc(), 0x6e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0093
        gbc.setState(0x19a3, 0x5c01, 0x6450, 0x4893, 0xd62f, 0xa05c, 0x0, 0x1);
        gbc.writeMem(0x19a3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5c01);
        EXPECT(gbc.pc(), 0x19a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0094
        gbc.setState(0xee15, 0x998b, 0xf6e0, 0xe0d4, 0x96bb, 0xf3e0, 0x1, 0x0);
        gbc.writeMem(0xee15, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x998b);
        EXPECT(gbc.pc(), 0xee17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee15), 0xcb);
        EXPECT(gbc.readMem(0xee16), 0x59);
        // CB 59 0096
        gbc.setState(0x1969, 0x5e78, 0x570, 0x710, 0xe56a, 0xf295, 0x1, 0x0);
        gbc.writeMem(0x1969, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x5e78);
        EXPECT(gbc.pc(), 0x196b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0097
        gbc.setState(0xcbd, 0x4f27, 0xc240, 0xe3e1, 0xa971, 0xa02f, 0x1, 0x1);
        gbc.writeMem(0xcbd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4f27);
        EXPECT(gbc.pc(), 0xcbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0098
        gbc.setState(0xeab9, 0x9ceb, 0xbc80, 0x97df, 0x339d, 0xd0ed, 0x1, 0x1);
        gbc.writeMem(0xeab9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9ceb);
        EXPECT(gbc.pc(), 0xeabb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeab9), 0xcb);
        EXPECT(gbc.readMem(0xeaba), 0x59);
        // CB 59 0099
        gbc.setState(0x9fc6, 0x5b3e, 0x7210, 0x5186, 0xf7d3, 0xf72d, 0x0, 0x0);
        gbc.writeMem(0x9fc6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5b3e);
        EXPECT(gbc.pc(), 0x9fc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc6), 0xcb);
        EXPECT(gbc.readMem(0x9fc7), 0x59);
        // CB 59 009A
        gbc.setState(0xc214, 0x64f8, 0xe90, 0xd2d7, 0x6fef, 0x7418, 0x1, 0x1);
        gbc.writeMem(0xc214, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x64f8);
        EXPECT(gbc.pc(), 0xc216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc214), 0xcb);
        EXPECT(gbc.readMem(0xc215), 0x59);
        // CB 59 009B
        gbc.setState(0x2b4a, 0xd101, 0x9e60, 0xccc3, 0x4f65, 0x6a34, 0x1, 0x0);
        gbc.writeMem(0x2b4a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd101);
        EXPECT(gbc.pc(), 0x2b4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 009C
        gbc.setState(0x9ea5, 0xa154, 0x8bc0, 0xf717, 0x98bf, 0xc813, 0x1, 0x0);
        gbc.writeMem(0x9ea5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa154);
        EXPECT(gbc.pc(), 0x9ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ea5), 0xcb);
        EXPECT(gbc.readMem(0x9ea6), 0x59);
        // CB 59 009D
        gbc.setState(0x1678, 0x914d, 0xbe60, 0x2ad6, 0xbaa1, 0x1846, 0x0, 0x1);
        gbc.writeMem(0x1678, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x914d);
        EXPECT(gbc.pc(), 0x167a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 009E
        gbc.setState(0xd71a, 0xde3e, 0x2ee0, 0x7a4, 0x88b0, 0x2460, 0x0, 0x0);
        gbc.writeMem(0xd71a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xde3e);
        EXPECT(gbc.pc(), 0xd71c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd71a), 0xcb);
        EXPECT(gbc.readMem(0xd71b), 0x59);
        // CB 59 009F
        gbc.setState(0x2912, 0xd7e0, 0x8b60, 0xc33b, 0x78d, 0xef27, 0x1, 0x1);
        gbc.writeMem(0x2912, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd7e0);
        EXPECT(gbc.pc(), 0x2914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00A0
        gbc.setState(0x3616, 0x4212, 0x9e30, 0x8c38, 0x9a2b, 0xefcb, 0x0, 0x1);
        gbc.writeMem(0x3616, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4212);
        EXPECT(gbc.pc(), 0x3618);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00A1
        gbc.setState(0x133f, 0x1bf2, 0x160, 0xfdc2, 0x9b85, 0xa306, 0x0, 0x0);
        gbc.writeMem(0x133f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1bf2);
        EXPECT(gbc.pc(), 0x1341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00A2
        gbc.setState(0xcdef, 0xfddc, 0x6220, 0x79da, 0x1417, 0xe544, 0x1, 0x1);
        gbc.writeMem(0xcdef, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfddc);
        EXPECT(gbc.pc(), 0xcdf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdef), 0xcb);
        EXPECT(gbc.readMem(0xcdf0), 0x59);
        // CB 59 00A3
        gbc.setState(0x9655, 0x44c1, 0x1fc0, 0x65b2, 0x5178, 0xf0fe, 0x1, 0x0);
        gbc.writeMem(0x9655, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x44c1);
        EXPECT(gbc.pc(), 0x9657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9655), 0xcb);
        EXPECT(gbc.readMem(0x9656), 0x59);
        // CB 59 00A4
        gbc.setState(0x2dbd, 0x9ca6, 0x7d20, 0x1e16, 0x87f6, 0xad7e, 0x0, 0x1);
        gbc.writeMem(0x2dbd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9ca6);
        EXPECT(gbc.pc(), 0x2dbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00A5
        gbc.setState(0xc5f8, 0x6aee, 0x3b30, 0x3bb9, 0x4d98, 0x6836, 0x1, 0x1);
        gbc.writeMem(0xc5f8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6aee);
        EXPECT(gbc.pc(), 0xc5fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f8), 0xcb);
        EXPECT(gbc.readMem(0xc5f9), 0x59);
        // CB 59 00A6
        gbc.setState(0xc2ac, 0xf01b, 0x7380, 0xdaee, 0x9536, 0x16d6, 0x1, 0x0);
        gbc.writeMem(0xc2ac, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf01b);
        EXPECT(gbc.pc(), 0xc2ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2ac), 0xcb);
        EXPECT(gbc.readMem(0xc2ad), 0x59);
        // CB 59 00A7
        gbc.setState(0x341a, 0x7a7d, 0x2180, 0xd2a1, 0xa45b, 0x1122, 0x1, 0x1);
        gbc.writeMem(0x341a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7a7d);
        EXPECT(gbc.pc(), 0x341c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00A8
        gbc.setState(0xe359, 0x7abe, 0x6a20, 0xad3d, 0xc9b3, 0x61d4, 0x0, 0x1);
        gbc.writeMem(0xe359, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7abe);
        EXPECT(gbc.pc(), 0xe35b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe359), 0xcb);
        EXPECT(gbc.readMem(0xe35a), 0x59);
        // CB 59 00A9
        gbc.setState(0xa09, 0x4937, 0x1020, 0xfd51, 0x8b52, 0xdc24, 0x1, 0x0);
        gbc.writeMem(0xa09, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4937);
        EXPECT(gbc.pc(), 0xa0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00AA
        gbc.setState(0xca38, 0x5e6c, 0x9960, 0xd44f, 0x141c, 0x2358, 0x0, 0x1);
        gbc.writeMem(0xca38, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5e6c);
        EXPECT(gbc.pc(), 0xca3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca38), 0xcb);
        EXPECT(gbc.readMem(0xca39), 0x59);
        // CB 59 00AB
        gbc.setState(0xa437, 0xf61c, 0x5480, 0x42fd, 0x1fae, 0x4669, 0x1, 0x0);
        gbc.writeMem(0xa437, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf61c);
        EXPECT(gbc.pc(), 0xa439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa437), 0xcb);
        EXPECT(gbc.readMem(0xa438), 0x59);
        // CB 59 00AC
        gbc.setState(0x821c, 0xa6d4, 0x5c20, 0x5fc5, 0xf452, 0xb7bc, 0x0, 0x0);
        gbc.writeMem(0x821c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa6d4);
        EXPECT(gbc.pc(), 0x821e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821c), 0xcb);
        EXPECT(gbc.readMem(0x821d), 0x59);
        // CB 59 00AD
        gbc.setState(0xa3d2, 0xe630, 0x29e0, 0x9d1d, 0x7950, 0xdb44, 0x0, 0x1);
        gbc.writeMem(0xa3d2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe630);
        EXPECT(gbc.pc(), 0xa3d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d2), 0xcb);
        EXPECT(gbc.readMem(0xa3d3), 0x59);
        // CB 59 00AE
        gbc.setState(0x1102, 0x6aef, 0xcf10, 0x38ca, 0xd2f1, 0x6a79, 0x1, 0x0);
        gbc.writeMem(0x1102, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6aef);
        EXPECT(gbc.pc(), 0x1104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00AF
        gbc.setState(0xed4a, 0x15b3, 0xe510, 0x6f7f, 0x40f3, 0x8958, 0x0, 0x0);
        gbc.writeMem(0xed4a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x15b3);
        EXPECT(gbc.pc(), 0xed4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed4a), 0xcb);
        EXPECT(gbc.readMem(0xed4b), 0x59);
        // CB 59 00B0
        gbc.setState(0xc115, 0x9c0a, 0xa440, 0xd53e, 0xf627, 0x95e9, 0x1, 0x1);
        gbc.writeMem(0xc115, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9c0a);
        EXPECT(gbc.pc(), 0xc117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc115), 0xcb);
        EXPECT(gbc.readMem(0xc116), 0x59);
        // CB 59 00B1
        gbc.setState(0x693f, 0x7dc6, 0x9070, 0xf795, 0x9051, 0x79cc, 0x1, 0x0);
        gbc.writeMem(0x693f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7dc6);
        EXPECT(gbc.pc(), 0x6941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00B2
        gbc.setState(0x493c, 0x7a85, 0x78c0, 0x6bed, 0x17d0, 0x48a0, 0x0, 0x1);
        gbc.writeMem(0x493c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7a85);
        EXPECT(gbc.pc(), 0x493e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00B3
        gbc.setState(0x255a, 0x1887, 0xabb0, 0x8770, 0xc25d, 0x4960, 0x1, 0x1);
        gbc.writeMem(0x255a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1887);
        EXPECT(gbc.pc(), 0x255c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00B4
        gbc.setState(0x71dd, 0x7e97, 0x280, 0x2106, 0xfa3f, 0xaefb, 0x0, 0x0);
        gbc.writeMem(0x71dd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7e97);
        EXPECT(gbc.pc(), 0x71df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00B5
        gbc.setState(0x2e14, 0xa113, 0x2400, 0x97e6, 0xfb9b, 0x764f, 0x0, 0x0);
        gbc.writeMem(0x2e14, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa113);
        EXPECT(gbc.pc(), 0x2e16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00B6
        gbc.setState(0x52d1, 0xbc02, 0x4130, 0x896b, 0x21ba, 0x4212, 0x1, 0x0);
        gbc.writeMem(0x52d1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbc02);
        EXPECT(gbc.pc(), 0x52d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00B7
        gbc.setState(0x945f, 0xd3f9, 0x9070, 0x463d, 0x2200, 0x5060, 0x1, 0x0);
        gbc.writeMem(0x945f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd3f9);
        EXPECT(gbc.pc(), 0x9461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945f), 0xcb);
        EXPECT(gbc.readMem(0x9460), 0x59);
        // CB 59 00B8
        gbc.setState(0x83e4, 0xc1da, 0x99c0, 0x684c, 0xcb9b, 0xd466, 0x0, 0x0);
        gbc.writeMem(0x83e4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc1da);
        EXPECT(gbc.pc(), 0x83e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e4), 0xcb);
        EXPECT(gbc.readMem(0x83e5), 0x59);
        // CB 59 00B9
        gbc.setState(0x85b, 0x1c97, 0x17d0, 0x7a40, 0x1033, 0xa515, 0x1, 0x1);
        gbc.writeMem(0x85b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1c97);
        EXPECT(gbc.pc(), 0x85d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00BA
        gbc.setState(0x51a7, 0xce55, 0xbc60, 0x3927, 0xb447, 0x7fa1, 0x1, 0x0);
        gbc.writeMem(0x51a7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xce55);
        EXPECT(gbc.pc(), 0x51a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00BB
        gbc.setState(0x6daa, 0x635a, 0xfd60, 0x5fc3, 0xbcd3, 0x727d, 0x0, 0x1);
        gbc.writeMem(0x6daa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x635a);
        EXPECT(gbc.pc(), 0x6dac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00BC
        gbc.setState(0x1599, 0x6a14, 0x1910, 0xc5c, 0x1845, 0x3bfe, 0x0, 0x0);
        gbc.writeMem(0x1599, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6a14);
        EXPECT(gbc.pc(), 0x159b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00BD
        gbc.setState(0x3dc5, 0x735f, 0x9ad0, 0x6938, 0x7d85, 0x78c7, 0x0, 0x0);
        gbc.writeMem(0x3dc5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x735f);
        EXPECT(gbc.pc(), 0x3dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00BE
        gbc.setState(0x710, 0x1820, 0x7610, 0x902a, 0x39a3, 0x335a, 0x1, 0x0);
        gbc.writeMem(0x710, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1820);
        EXPECT(gbc.pc(), 0x712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00BF
        gbc.setState(0xcaba, 0xe741, 0xe5b0, 0xa69e, 0x73, 0xcf3a, 0x0, 0x1);
        gbc.writeMem(0xcaba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe741);
        EXPECT(gbc.pc(), 0xcabc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaba), 0xcb);
        EXPECT(gbc.readMem(0xcabb), 0x59);
        // CB 59 00C0
        gbc.setState(0xc9a2, 0x81ca, 0x8910, 0xd4a2, 0xf4a5, 0xd709, 0x0, 0x0);
        gbc.writeMem(0xc9a2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x81ca);
        EXPECT(gbc.pc(), 0xc9a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9a2), 0xcb);
        EXPECT(gbc.readMem(0xc9a3), 0x59);
        // CB 59 00C1
        gbc.setState(0x756b, 0x8a73, 0x1eb0, 0x72ea, 0xa061, 0xe8e0, 0x1, 0x1);
        gbc.writeMem(0x756b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8a73);
        EXPECT(gbc.pc(), 0x756d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00C2
        gbc.setState(0x136e, 0x6fae, 0x83b0, 0xa16, 0xfeb9, 0x6ede, 0x1, 0x1);
        gbc.writeMem(0x136e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6fae);
        EXPECT(gbc.pc(), 0x1370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00C3
        gbc.setState(0xda8e, 0xb578, 0xc0b0, 0x6a16, 0x4bab, 0x30e1, 0x1, 0x0);
        gbc.writeMem(0xda8e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb578);
        EXPECT(gbc.pc(), 0xda90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda8e), 0xcb);
        EXPECT(gbc.readMem(0xda8f), 0x59);
        // CB 59 00C4
        gbc.setState(0x95db, 0x70e9, 0x8590, 0x8d44, 0x58a9, 0x5160, 0x0, 0x1);
        gbc.writeMem(0x95db, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x70e9);
        EXPECT(gbc.pc(), 0x95dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95db), 0xcb);
        EXPECT(gbc.readMem(0x95dc), 0x59);
        // CB 59 00C5
        gbc.setState(0x2109, 0xf241, 0x9b70, 0x4e36, 0x4a0a, 0xd418, 0x0, 0x0);
        gbc.writeMem(0x2109, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf241);
        EXPECT(gbc.pc(), 0x210b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00C6
        gbc.setState(0x225a, 0x4fc5, 0x3e00, 0x4a5f, 0x43cd, 0x500b, 0x0, 0x1);
        gbc.writeMem(0x225a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4fc5);
        EXPECT(gbc.pc(), 0x225c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00C7
        gbc.setState(0x6478, 0x5202, 0xe560, 0xd71c, 0xa58c, 0x41fa, 0x0, 0x1);
        gbc.writeMem(0x6478, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5202);
        EXPECT(gbc.pc(), 0x647a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00C8
        gbc.setState(0xbbf1, 0xc494, 0xb460, 0xa667, 0xc38, 0x2bb8, 0x1, 0x1);
        gbc.writeMem(0xbbf1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc494);
        EXPECT(gbc.pc(), 0xbbf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf1), 0xcb);
        EXPECT(gbc.readMem(0xbbf2), 0x59);
        // CB 59 00C9
        gbc.setState(0x310a, 0xda25, 0xfdc0, 0x1a3b, 0xe421, 0xde57, 0x1, 0x0);
        gbc.writeMem(0x310a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xda25);
        EXPECT(gbc.pc(), 0x310c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00CA
        gbc.setState(0xae6c, 0xb610, 0x4db0, 0xe759, 0xab68, 0x38f2, 0x1, 0x1);
        gbc.writeMem(0xae6c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb610);
        EXPECT(gbc.pc(), 0xae6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae6c), 0xcb);
        EXPECT(gbc.readMem(0xae6d), 0x59);
        // CB 59 00CB
        gbc.setState(0x64e3, 0xb047, 0xcba0, 0x2e0d, 0x82d5, 0xfee5, 0x1, 0x1);
        gbc.writeMem(0x64e3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb047);
        EXPECT(gbc.pc(), 0x64e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00CC
        gbc.setState(0xee97, 0xbe38, 0xaf80, 0xeb3a, 0xdc81, 0xae9b, 0x1, 0x0);
        gbc.writeMem(0xee97, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xbe38);
        EXPECT(gbc.pc(), 0xee99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee97), 0xcb);
        EXPECT(gbc.readMem(0xee98), 0x59);
        // CB 59 00CD
        gbc.setState(0x7d63, 0x6c37, 0x3950, 0x83f7, 0xcf28, 0xba8, 0x1, 0x1);
        gbc.writeMem(0x7d63, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6c37);
        EXPECT(gbc.pc(), 0x7d65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00CE
        gbc.setState(0x4b43, 0xacb1, 0xf30, 0xaa23, 0xdcbf, 0x89a5, 0x1, 0x0);
        gbc.writeMem(0x4b43, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xacb1);
        EXPECT(gbc.pc(), 0x4b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00CF
        gbc.setState(0x8f3a, 0xfd52, 0x62e0, 0x4400, 0x55a0, 0x5014, 0x1, 0x0);
        gbc.writeMem(0x8f3a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xfd52);
        EXPECT(gbc.pc(), 0x8f3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f3a), 0xcb);
        EXPECT(gbc.readMem(0x8f3b), 0x59);
        // CB 59 00D0
        gbc.setState(0x6137, 0x8966, 0x2580, 0x5a6f, 0x7fd, 0x217d, 0x0, 0x1);
        gbc.writeMem(0x6137, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8966);
        EXPECT(gbc.pc(), 0x6139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00D1
        gbc.setState(0xea54, 0x2e98, 0xc890, 0xc66c, 0x41bc, 0x3b94, 0x1, 0x1);
        gbc.writeMem(0xea54, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2e98);
        EXPECT(gbc.pc(), 0xea56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea54), 0xcb);
        EXPECT(gbc.readMem(0xea55), 0x59);
        // CB 59 00D2
        gbc.setState(0x1193, 0xc2ef, 0xe0f0, 0xaca5, 0x1973, 0x1ef6, 0x1, 0x1);
        gbc.writeMem(0x1193, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc2ef);
        EXPECT(gbc.pc(), 0x1195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00D3
        gbc.setState(0x3344, 0xb5f6, 0xfe0, 0xf634, 0x5cc9, 0x6a2, 0x0, 0x0);
        gbc.writeMem(0x3344, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb5f6);
        EXPECT(gbc.pc(), 0x3346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00D4
        gbc.setState(0x44b4, 0xe238, 0xab50, 0x5f63, 0xe2ce, 0x6870, 0x0, 0x0);
        gbc.writeMem(0x44b4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe238);
        EXPECT(gbc.pc(), 0x44b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00D6
        gbc.setState(0xc9fc, 0x2b6, 0x4100, 0x3a9a, 0x9417, 0xd9ec, 0x1, 0x0);
        gbc.writeMem(0xc9fc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2b6);
        EXPECT(gbc.pc(), 0xc9fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9fc), 0xcb);
        EXPECT(gbc.readMem(0xc9fd), 0x59);
        // CB 59 00D8
        gbc.setState(0x4aa0, 0x6a53, 0x1160, 0xa21e, 0xc5ee, 0x6391, 0x1, 0x1);
        gbc.writeMem(0x4aa0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6a53);
        EXPECT(gbc.pc(), 0x4aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00D9
        gbc.setState(0x4cd7, 0x7ebf, 0x4f0, 0xe64, 0xd1ca, 0xd70d, 0x1, 0x0);
        gbc.writeMem(0x4cd7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7ebf);
        EXPECT(gbc.pc(), 0x4cd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00DA
        gbc.setState(0x2007, 0xd45c, 0xa030, 0xf227, 0xb727, 0x631c, 0x0, 0x0);
        gbc.writeMem(0x2007, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd45c);
        EXPECT(gbc.pc(), 0x2009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00DB
        gbc.setState(0xc6f7, 0x77fd, 0x720, 0x5764, 0x6643, 0xf057, 0x1, 0x1);
        gbc.writeMem(0xc6f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x77fd);
        EXPECT(gbc.pc(), 0xc6f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6f7), 0xcb);
        EXPECT(gbc.readMem(0xc6f8), 0x59);
        // CB 59 00DC
        gbc.setState(0xe5bf, 0x3b07, 0x32c0, 0x89a0, 0x52f0, 0xaf53, 0x0, 0x0);
        gbc.writeMem(0xe5bf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3b07);
        EXPECT(gbc.pc(), 0xe5c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5bf), 0xcb);
        EXPECT(gbc.readMem(0xe5c0), 0x59);
        // CB 59 00DD
        gbc.setState(0x4a0f, 0x95f4, 0xc230, 0xe025, 0x81df, 0x2e20, 0x1, 0x0);
        gbc.writeMem(0x4a0f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x95f4);
        EXPECT(gbc.pc(), 0x4a11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00DE
        gbc.setState(0xea36, 0x9a87, 0xe030, 0xea8d, 0xea59, 0x45e4, 0x0, 0x1);
        gbc.writeMem(0xea36, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9a87);
        EXPECT(gbc.pc(), 0xea38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea36), 0xcb);
        EXPECT(gbc.readMem(0xea37), 0x59);
        // CB 59 00DF
        gbc.setState(0x5e9, 0x617, 0x1430, 0xc1ce, 0x5a03, 0x8413, 0x0, 0x0);
        gbc.writeMem(0x5e9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x617);
        EXPECT(gbc.pc(), 0x5eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00E1
        gbc.setState(0xc451, 0xb8fc, 0x8440, 0xc80d, 0xcb12, 0x1fcb, 0x0, 0x1);
        gbc.writeMem(0xc451, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb8fc);
        EXPECT(gbc.pc(), 0xc453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc451), 0xcb);
        EXPECT(gbc.readMem(0xc452), 0x59);
        // CB 59 00E2
        gbc.setState(0x1a75, 0xe542, 0x7370, 0xfcac, 0x901, 0xc74f, 0x1, 0x1);
        gbc.writeMem(0x1a75, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe542);
        EXPECT(gbc.pc(), 0x1a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00E3
        gbc.setState(0x5f36, 0xe410, 0xa110, 0xa81, 0x1e5e, 0x355a, 0x0, 0x1);
        gbc.writeMem(0x5f36, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe410);
        EXPECT(gbc.pc(), 0x5f38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00E5
        gbc.setState(0x7402, 0xea60, 0xf300, 0x4596, 0x6b46, 0x32, 0x0, 0x0);
        gbc.writeMem(0x7402, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xea60);
        EXPECT(gbc.pc(), 0x7404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00E6
        gbc.setState(0x5e2, 0xd03d, 0x4450, 0xea6c, 0xc697, 0x891d, 0x1, 0x1);
        gbc.writeMem(0x5e2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd03d);
        EXPECT(gbc.pc(), 0x5e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00E7
        gbc.setState(0x10b4, 0xc0f4, 0x8480, 0xdf53, 0x6a25, 0x8cea, 0x1, 0x1);
        gbc.writeMem(0x10b4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc0f4);
        EXPECT(gbc.pc(), 0x10b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00E8
        gbc.setState(0x55cc, 0x582, 0x100, 0x22d6, 0xf585, 0x9d, 0x0, 0x0);
        gbc.writeMem(0x55cc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x582);
        EXPECT(gbc.pc(), 0x55ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00E9
        gbc.setState(0x4b0a, 0x5548, 0xe2f0, 0x51e7, 0x976c, 0x1be, 0x0, 0x0);
        gbc.writeMem(0x4b0a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5548);
        EXPECT(gbc.pc(), 0x4b0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00EB
        gbc.setState(0x3e51, 0x1097, 0x3aa0, 0x3983, 0xc57f, 0x4ef7, 0x1, 0x1);
        gbc.writeMem(0x3e51, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1097);
        EXPECT(gbc.pc(), 0x3e53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00EC
        gbc.setState(0x3ea6, 0xfc9c, 0xa6a0, 0x37fc, 0xb314, 0x51bc, 0x1, 0x0);
        gbc.writeMem(0x3ea6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfc9c);
        EXPECT(gbc.pc(), 0x3ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00ED
        gbc.setState(0x3404, 0x3772, 0x99e0, 0x6c1b, 0xcce1, 0x7f80, 0x1, 0x0);
        gbc.writeMem(0x3404, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3772);
        EXPECT(gbc.pc(), 0x3406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00EE
        gbc.setState(0x9648, 0xff7f, 0x5a30, 0x59d3, 0x6db7, 0xeca2, 0x0, 0x1);
        gbc.writeMem(0x9648, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xff7f);
        EXPECT(gbc.pc(), 0x964a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9648), 0xcb);
        EXPECT(gbc.readMem(0x9649), 0x59);
        // CB 59 00EF
        gbc.setState(0x233, 0x6820, 0x3e60, 0xfe3f, 0x67bd, 0xb5cc, 0x1, 0x1);
        gbc.writeMem(0x233, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6820);
        EXPECT(gbc.pc(), 0x235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00F0
        gbc.setState(0xec8f, 0x5e0c, 0x8ae0, 0x9546, 0x892e, 0xe4f5, 0x0, 0x1);
        gbc.writeMem(0xec8f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5e0c);
        EXPECT(gbc.pc(), 0xec91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec8f), 0xcb);
        EXPECT(gbc.readMem(0xec90), 0x59);
        // CB 59 00F1
        gbc.setState(0x5854, 0x9e1e, 0x6150, 0xf904, 0xbe5e, 0x86ac, 0x0, 0x0);
        gbc.writeMem(0x5854, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9e1e);
        EXPECT(gbc.pc(), 0x5856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00F2
        gbc.setState(0xef1f, 0x18d9, 0x2990, 0xd91d, 0x9c8e, 0x1965, 0x0, 0x0);
        gbc.writeMem(0xef1f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x18d9);
        EXPECT(gbc.pc(), 0xef21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef1f), 0xcb);
        EXPECT(gbc.readMem(0xef20), 0x59);
        // CB 59 00F3
        gbc.setState(0xeea1, 0xe90b, 0xde60, 0x7771, 0x6239, 0x634c, 0x0, 0x1);
        gbc.writeMem(0xeea1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe90b);
        EXPECT(gbc.pc(), 0xeea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea1), 0xcb);
        EXPECT(gbc.readMem(0xeea2), 0x59);
        // CB 59 00F4
        gbc.setState(0x8fae, 0x75b, 0x8cd0, 0x7126, 0x915d, 0x9b2e, 0x1, 0x0);
        gbc.writeMem(0x8fae, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x75b);
        EXPECT(gbc.pc(), 0x8fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fae), 0xcb);
        EXPECT(gbc.readMem(0x8faf), 0x59);
        // CB 59 00F5
        gbc.setState(0x5049, 0x6002, 0x1f70, 0x9c27, 0x38b5, 0xf5ba, 0x0, 0x0);
        gbc.writeMem(0x5049, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6002);
        EXPECT(gbc.pc(), 0x504b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 00F6
        gbc.setState(0x6f2, 0xdb9, 0x7420, 0x516c, 0xb8b0, 0xcc2f, 0x1, 0x0);
        gbc.writeMem(0x6f2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xdb9);
        EXPECT(gbc.pc(), 0x6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00F7
        gbc.setState(0x85ec, 0x5d3, 0x6350, 0xdac, 0x53f4, 0x983b, 0x0, 0x1);
        gbc.writeMem(0x85ec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5d3);
        EXPECT(gbc.pc(), 0x85ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ec), 0xcb);
        EXPECT(gbc.readMem(0x85ed), 0x59);
        // CB 59 00F8
        gbc.setState(0x3c1, 0xc6e3, 0x1b80, 0x1390, 0x4fb8, 0x67a5, 0x1, 0x1);
        gbc.writeMem(0x3c1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc6e3);
        EXPECT(gbc.pc(), 0x3c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00F9
        gbc.setState(0xee23, 0x969b, 0xa6b0, 0x102d, 0xc810, 0x1c92, 0x1, 0x1);
        gbc.writeMem(0xee23, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x969b);
        EXPECT(gbc.pc(), 0xee25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee23), 0xcb);
        EXPECT(gbc.readMem(0xee24), 0x59);
        // CB 59 00FA
        gbc.setState(0x70fa, 0xddeb, 0xcac0, 0x115, 0xdbe1, 0x25b6, 0x1, 0x0);
        gbc.writeMem(0x70fa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xddeb);
        EXPECT(gbc.pc(), 0x70fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 00FB
        gbc.setState(0xb7b3, 0x29a2, 0x7340, 0x4495, 0xa4f5, 0x4f2, 0x0, 0x1);
        gbc.writeMem(0xb7b3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x29a2);
        EXPECT(gbc.pc(), 0xb7b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b3), 0xcb);
        EXPECT(gbc.readMem(0xb7b4), 0x59);
        // CB 59 00FC
        gbc.setState(0xc46c, 0xa72e, 0xdd30, 0x262b, 0x2800, 0x7fec, 0x0, 0x1);
        gbc.writeMem(0xc46c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa72e);
        EXPECT(gbc.pc(), 0xc46e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc46c), 0xcb);
        EXPECT(gbc.readMem(0xc46d), 0x59);
        // CB 59 00FD
        gbc.setState(0x9568, 0x75d1, 0x2b10, 0xc91f, 0x66b6, 0xfbc8, 0x1, 0x1);
        gbc.writeMem(0x9568, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x75d1);
        EXPECT(gbc.pc(), 0x956a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9568), 0xcb);
        EXPECT(gbc.readMem(0x9569), 0x59);
        // CB 59 00FE
        gbc.setState(0x91ac, 0x5f35, 0x4c70, 0x92fd, 0xf028, 0x2840, 0x0, 0x0);
        gbc.writeMem(0x91ac, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5f35);
        EXPECT(gbc.pc(), 0x91ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91ac), 0xcb);
        EXPECT(gbc.readMem(0x91ad), 0x59);
        // CB 59 00FF
        gbc.setState(0x4181, 0xe3df, 0x4b0, 0xfc4e, 0xcbb9, 0x4480, 0x1, 0x0);
        gbc.writeMem(0x4181, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe3df);
        EXPECT(gbc.pc(), 0x4183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0100
        gbc.setState(0x5281, 0xa60b, 0xa1d0, 0x415f, 0x8ffd, 0x6c47, 0x0, 0x0);
        gbc.writeMem(0x5281, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa60b);
        EXPECT(gbc.pc(), 0x5283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0101
        gbc.setState(0x31b0, 0xe3bb, 0x6c70, 0xf939, 0x99f0, 0xdcd4, 0x0, 0x0);
        gbc.writeMem(0x31b0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe3bb);
        EXPECT(gbc.pc(), 0x31b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0102
        gbc.setState(0x6a6f, 0xb2fa, 0xfcd0, 0x4482, 0x5b7e, 0x9678, 0x0, 0x1);
        gbc.writeMem(0x6a6f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb2fa);
        EXPECT(gbc.pc(), 0x6a71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0103
        gbc.setState(0x2e26, 0x71f4, 0x2600, 0xdfef, 0x42ae, 0x3ead, 0x0, 0x0);
        gbc.writeMem(0x2e26, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x71f4);
        EXPECT(gbc.pc(), 0x2e28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0104
        gbc.setState(0xba8f, 0x6e2f, 0x21e0, 0xe2fd, 0xc902, 0xc4c4, 0x0, 0x0);
        gbc.writeMem(0xba8f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6e2f);
        EXPECT(gbc.pc(), 0xba91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba8f), 0xcb);
        EXPECT(gbc.readMem(0xba90), 0x59);
        // CB 59 0105
        gbc.setState(0x5bf1, 0xcbed, 0x9960, 0xf8d7, 0xf546, 0xd675, 0x1, 0x0);
        gbc.writeMem(0x5bf1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xcbed);
        EXPECT(gbc.pc(), 0x5bf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0106
        gbc.setState(0xe042, 0xbbfd, 0x6320, 0xe4d4, 0xe578, 0xa7a9, 0x1, 0x1);
        gbc.writeMem(0xe042, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xbbfd);
        EXPECT(gbc.pc(), 0xe044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe042), 0xcb);
        EXPECT(gbc.readMem(0xe043), 0x59);
        // CB 59 0107
        gbc.setState(0x4b61, 0x3929, 0xbba0, 0xac76, 0xf8ad, 0xf718, 0x0, 0x1);
        gbc.writeMem(0x4b61, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3929);
        EXPECT(gbc.pc(), 0x4b63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0108
        gbc.setState(0xad3c, 0x5605, 0xcf0, 0x8455, 0xb18d, 0x6a24, 0x0, 0x1);
        gbc.writeMem(0xad3c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5605);
        EXPECT(gbc.pc(), 0xad3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad3c), 0xcb);
        EXPECT(gbc.readMem(0xad3d), 0x59);
        // CB 59 0109
        gbc.setState(0x67eb, 0xa97, 0x1ba0, 0x19cf, 0xc1dc, 0x8e5f, 0x0, 0x1);
        gbc.writeMem(0x67eb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa97);
        EXPECT(gbc.pc(), 0x67ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 010A
        gbc.setState(0x50ba, 0x1de0, 0xe5e0, 0x7206, 0x652, 0xd434, 0x0, 0x0);
        gbc.writeMem(0x50ba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1de0);
        EXPECT(gbc.pc(), 0x50bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 010B
        gbc.setState(0xcefb, 0xe7b4, 0xbd80, 0xf618, 0xe81b, 0xac37, 0x1, 0x0);
        gbc.writeMem(0xcefb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe7b4);
        EXPECT(gbc.pc(), 0xcefd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcefb), 0xcb);
        EXPECT(gbc.readMem(0xcefc), 0x59);
        // CB 59 010C
        gbc.setState(0x16ac, 0xfdb1, 0x95f0, 0xbf67, 0x8178, 0xea62, 0x1, 0x0);
        gbc.writeMem(0x16ac, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfdb1);
        EXPECT(gbc.pc(), 0x16ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 010D
        gbc.setState(0xc840, 0x5f70, 0x1270, 0xee14, 0x27e5, 0x4c70, 0x1, 0x1);
        gbc.writeMem(0xc840, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5f70);
        EXPECT(gbc.pc(), 0xc842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc840), 0xcb);
        EXPECT(gbc.readMem(0xc841), 0x59);
        // CB 59 010E
        gbc.setState(0xc183, 0x2eb0, 0xbdf0, 0x6590, 0x146a, 0x17da, 0x0, 0x0);
        gbc.writeMem(0xc183, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2eb0);
        EXPECT(gbc.pc(), 0xc185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc183), 0xcb);
        EXPECT(gbc.readMem(0xc184), 0x59);
        // CB 59 010F
        gbc.setState(0xc745, 0x623, 0x8110, 0x87fc, 0x3b4b, 0xe474, 0x0, 0x0);
        gbc.writeMem(0xc745, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x623);
        EXPECT(gbc.pc(), 0xc747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc745), 0xcb);
        EXPECT(gbc.readMem(0xc746), 0x59);
        // CB 59 0110
        gbc.setState(0x1182, 0xba0f, 0x9e70, 0x41b8, 0x55a4, 0xd864, 0x0, 0x0);
        gbc.writeMem(0x1182, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xba0f);
        EXPECT(gbc.pc(), 0x1184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0111
        gbc.setState(0xe50a, 0x91b6, 0x6900, 0x9684, 0x35f2, 0x3d92, 0x1, 0x1);
        gbc.writeMem(0xe50a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x91b6);
        EXPECT(gbc.pc(), 0xe50c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe50a), 0xcb);
        EXPECT(gbc.readMem(0xe50b), 0x59);
        // CB 59 0112
        gbc.setState(0x89af, 0x2415, 0x22b0, 0x4d1f, 0x5d7e, 0x87bf, 0x0, 0x0);
        gbc.writeMem(0x89af, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2415);
        EXPECT(gbc.pc(), 0x89b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89af), 0xcb);
        EXPECT(gbc.readMem(0x89b0), 0x59);
        // CB 59 0113
        gbc.setState(0xcfaf, 0x792c, 0x7f80, 0x8d4c, 0xd116, 0xf6b3, 0x0, 0x0);
        gbc.writeMem(0xcfaf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x792c);
        EXPECT(gbc.pc(), 0xcfb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfaf), 0xcb);
        EXPECT(gbc.readMem(0xcfb0), 0x59);
        // CB 59 0114
        gbc.setState(0x181d, 0x45e3, 0xa180, 0x30be, 0x3fac, 0x4100, 0x0, 0x0);
        gbc.writeMem(0x181d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x45e3);
        EXPECT(gbc.pc(), 0x181f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0115
        gbc.setState(0xbb7b, 0x191a, 0x83b0, 0x319c, 0xe2c5, 0x1479, 0x0, 0x1);
        gbc.writeMem(0xbb7b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x191a);
        EXPECT(gbc.pc(), 0xbb7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb7b), 0xcb);
        EXPECT(gbc.readMem(0xbb7c), 0x59);
        // CB 59 0116
        gbc.setState(0x6106, 0x2c9, 0xcf00, 0x1e03, 0x9253, 0x558, 0x1, 0x1);
        gbc.writeMem(0x6106, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2c9);
        EXPECT(gbc.pc(), 0x6108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0117
        gbc.setState(0xbed5, 0x3496, 0x8880, 0x7b99, 0xd776, 0x3b0b, 0x0, 0x1);
        gbc.writeMem(0xbed5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3496);
        EXPECT(gbc.pc(), 0xbed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed5), 0xcb);
        EXPECT(gbc.readMem(0xbed6), 0x59);
        // CB 59 0118
        gbc.setState(0x1d14, 0xb455, 0xb250, 0x2f08, 0xc7fd, 0x6f5d, 0x0, 0x1);
        gbc.writeMem(0x1d14, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb455);
        EXPECT(gbc.pc(), 0x1d16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0119
        gbc.setState(0x2733, 0xc6d1, 0x52f0, 0x49cc, 0x8b12, 0xeae2, 0x0, 0x1);
        gbc.writeMem(0x2733, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc6d1);
        EXPECT(gbc.pc(), 0x2735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 011A
        gbc.setState(0x8cc8, 0x906a, 0xde30, 0x46b0, 0xfa4a, 0x6cb7, 0x1, 0x1);
        gbc.writeMem(0x8cc8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x906a);
        EXPECT(gbc.pc(), 0x8cca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc8), 0xcb);
        EXPECT(gbc.readMem(0x8cc9), 0x59);
        // CB 59 011B
        gbc.setState(0x3c88, 0xb260, 0x530, 0x7be8, 0xa517, 0xd892, 0x1, 0x0);
        gbc.writeMem(0x3c88, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb260);
        EXPECT(gbc.pc(), 0x3c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 011C
        gbc.setState(0xbb7d, 0x8607, 0xabb0, 0x5080, 0x363b, 0xe574, 0x0, 0x1);
        gbc.writeMem(0xbb7d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8607);
        EXPECT(gbc.pc(), 0xbb7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb7d), 0xcb);
        EXPECT(gbc.readMem(0xbb7e), 0x59);
        // CB 59 011D
        gbc.setState(0xa0fb, 0xe735, 0x7850, 0x5476, 0xacc, 0x98f2, 0x0, 0x1);
        gbc.writeMem(0xa0fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe735);
        EXPECT(gbc.pc(), 0xa0fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0fb), 0xcb);
        EXPECT(gbc.readMem(0xa0fc), 0x59);
        // CB 59 011E
        gbc.setState(0xc783, 0xfa70, 0x2de0, 0xcaab, 0xe7d9, 0xbd37, 0x1, 0x1);
        gbc.writeMem(0xc783, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfa70);
        EXPECT(gbc.pc(), 0xc785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc783), 0xcb);
        EXPECT(gbc.readMem(0xc784), 0x59);
        // CB 59 011F
        gbc.setState(0x41f3, 0x7611, 0x95d0, 0x14b5, 0x9a32, 0x8e80, 0x0, 0x1);
        gbc.writeMem(0x41f3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7611);
        EXPECT(gbc.pc(), 0x41f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0120
        gbc.setState(0x55ab, 0x3ad6, 0x1d90, 0xa236, 0x85b6, 0xe84b, 0x0, 0x0);
        gbc.writeMem(0x55ab, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3ad6);
        EXPECT(gbc.pc(), 0x55ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0121
        gbc.setState(0xa51, 0x74e2, 0x18b0, 0xcd0a, 0x7699, 0xb56b, 0x1, 0x0);
        gbc.writeMem(0xa51, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x74e2);
        EXPECT(gbc.pc(), 0xa53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0122
        gbc.setState(0xac7c, 0xb332, 0xc480, 0x8ed, 0x2c83, 0xf3e6, 0x1, 0x0);
        gbc.writeMem(0xac7c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb332);
        EXPECT(gbc.pc(), 0xac7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac7c), 0xcb);
        EXPECT(gbc.readMem(0xac7d), 0x59);
        // CB 59 0123
        gbc.setState(0x162f, 0xf323, 0x4120, 0x7d99, 0xc774, 0x19f0, 0x0, 0x0);
        gbc.writeMem(0x162f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf323);
        EXPECT(gbc.pc(), 0x1631);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0124
        gbc.setState(0xa631, 0xebf8, 0xba40, 0x2e57, 0x9626, 0xb2ba, 0x1, 0x1);
        gbc.writeMem(0xa631, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xebf8);
        EXPECT(gbc.pc(), 0xa633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa631), 0xcb);
        EXPECT(gbc.readMem(0xa632), 0x59);
        // CB 59 0125
        gbc.setState(0x59b, 0xb544, 0x2730, 0x7205, 0xe45b, 0x47d1, 0x0, 0x0);
        gbc.writeMem(0x59b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb544);
        EXPECT(gbc.pc(), 0x59d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0126
        gbc.setState(0x5e3d, 0x9e57, 0xbbf0, 0xe2df, 0xb764, 0x699e, 0x1, 0x1);
        gbc.writeMem(0x5e3d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9e57);
        EXPECT(gbc.pc(), 0x5e3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0127
        gbc.setState(0xb750, 0xd9a1, 0x5700, 0xdaa2, 0xdea, 0x484f, 0x0, 0x0);
        gbc.writeMem(0xb750, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd9a1);
        EXPECT(gbc.pc(), 0xb752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb750), 0xcb);
        EXPECT(gbc.readMem(0xb751), 0x59);
        // CB 59 0128
        gbc.setState(0x47e2, 0xc780, 0xffc0, 0x4f98, 0xa2bf, 0x8091, 0x1, 0x1);
        gbc.writeMem(0x47e2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc780);
        EXPECT(gbc.pc(), 0x47e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0129
        gbc.setState(0x9cfa, 0x1285, 0xece0, 0xc625, 0x954d, 0x9a5b, 0x1, 0x0);
        gbc.writeMem(0x9cfa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1285);
        EXPECT(gbc.pc(), 0x9cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cfa), 0xcb);
        EXPECT(gbc.readMem(0x9cfb), 0x59);
        // CB 59 012A
        gbc.setState(0xba3d, 0xae2b, 0x3e0, 0x97c, 0xfd8a, 0x8e1e, 0x0, 0x0);
        gbc.writeMem(0xba3d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xae2b);
        EXPECT(gbc.pc(), 0xba3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba3d), 0xcb);
        EXPECT(gbc.readMem(0xba3e), 0x59);
        // CB 59 012B
        gbc.setState(0xc975, 0xcdd0, 0xe920, 0x8b96, 0x457, 0x158f, 0x0, 0x0);
        gbc.writeMem(0xc975, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xcdd0);
        EXPECT(gbc.pc(), 0xc977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc975), 0xcb);
        EXPECT(gbc.readMem(0xc976), 0x59);
        // CB 59 012C
        gbc.setState(0xa92e, 0xbdd8, 0xd5b0, 0x6f23, 0x161e, 0x43c9, 0x1, 0x1);
        gbc.writeMem(0xa92e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xbdd8);
        EXPECT(gbc.pc(), 0xa930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa92e), 0xcb);
        EXPECT(gbc.readMem(0xa92f), 0x59);
        // CB 59 012D
        gbc.setState(0xb940, 0x428a, 0x8a0, 0x615d, 0x9f7f, 0xecc8, 0x1, 0x1);
        gbc.writeMem(0xb940, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x428a);
        EXPECT(gbc.pc(), 0xb942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb940), 0xcb);
        EXPECT(gbc.readMem(0xb941), 0x59);
        // CB 59 012E
        gbc.setState(0x35d7, 0xd927, 0x65b0, 0x1113, 0xd9a2, 0x922c, 0x1, 0x0);
        gbc.writeMem(0x35d7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd927);
        EXPECT(gbc.pc(), 0x35d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 012F
        gbc.setState(0x35ea, 0x5cd2, 0x6b50, 0xee79, 0x32c6, 0xf241, 0x0, 0x0);
        gbc.writeMem(0x35ea, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5cd2);
        EXPECT(gbc.pc(), 0x35ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0130
        gbc.setState(0xb4f7, 0x4ebe, 0x2050, 0xbfcc, 0x2fd8, 0xd53e, 0x0, 0x0);
        gbc.writeMem(0xb4f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4ebe);
        EXPECT(gbc.pc(), 0xb4f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f7), 0xcb);
        EXPECT(gbc.readMem(0xb4f8), 0x59);
        // CB 59 0131
        gbc.setState(0xe93, 0xfa2e, 0x3730, 0x9dc9, 0xcafe, 0xeef, 0x0, 0x1);
        gbc.writeMem(0xe93, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xfa2e);
        EXPECT(gbc.pc(), 0xe95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0132
        gbc.setState(0x23e9, 0x266a, 0x1480, 0xb640, 0xa14b, 0xd37, 0x1, 0x0);
        gbc.writeMem(0x23e9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x266a);
        EXPECT(gbc.pc(), 0x23eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0133
        gbc.setState(0xb433, 0x906d, 0xc580, 0x28e4, 0x53b5, 0xe964, 0x1, 0x0);
        gbc.writeMem(0xb433, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x906d);
        EXPECT(gbc.pc(), 0xb435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb433), 0xcb);
        EXPECT(gbc.readMem(0xb434), 0x59);
        // CB 59 0134
        gbc.setState(0x71c9, 0x86a6, 0xa20, 0x1631, 0x8fd1, 0x7153, 0x0, 0x1);
        gbc.writeMem(0x71c9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x86a6);
        EXPECT(gbc.pc(), 0x71cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0136
        gbc.setState(0x68c, 0x6bc9, 0xbd90, 0xa0a1, 0x535a, 0xa74, 0x1, 0x0);
        gbc.writeMem(0x68c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6bc9);
        EXPECT(gbc.pc(), 0x68e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0137
        gbc.setState(0xdb2f, 0xba89, 0x21e0, 0xd31f, 0x59f1, 0xc619, 0x0, 0x1);
        gbc.writeMem(0xdb2f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xba89);
        EXPECT(gbc.pc(), 0xdb31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb2f), 0xcb);
        EXPECT(gbc.readMem(0xdb30), 0x59);
        // CB 59 0138
        gbc.setState(0x816d, 0xebe9, 0xf00, 0x2efc, 0x75d6, 0x3f8, 0x1, 0x0);
        gbc.writeMem(0x816d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xebe9);
        EXPECT(gbc.pc(), 0x816f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x816d), 0xcb);
        EXPECT(gbc.readMem(0x816e), 0x59);
        // CB 59 0139
        gbc.setState(0xc1f1, 0x762b, 0x1de0, 0xef61, 0xdd9e, 0xf94a, 0x0, 0x0);
        gbc.writeMem(0xc1f1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x762b);
        EXPECT(gbc.pc(), 0xc1f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1f1), 0xcb);
        EXPECT(gbc.readMem(0xc1f2), 0x59);
        // CB 59 013A
        gbc.setState(0x5861, 0x84d7, 0x5260, 0xff57, 0x1ce9, 0xa4fb, 0x0, 0x0);
        gbc.writeMem(0x5861, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x84d7);
        EXPECT(gbc.pc(), 0x5863);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 013B
        gbc.setState(0x7f1b, 0x472, 0xb0c0, 0x631e, 0xff97, 0x68a4, 0x1, 0x1);
        gbc.writeMem(0x7f1b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x472);
        EXPECT(gbc.pc(), 0x7f1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 013C
        gbc.setState(0x2ad5, 0xf7b5, 0xc3e0, 0xda51, 0x2efb, 0x943e, 0x0, 0x1);
        gbc.writeMem(0x2ad5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf7b5);
        EXPECT(gbc.pc(), 0x2ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 013D
        gbc.setState(0xe478, 0x29bc, 0x9620, 0x32af, 0xb907, 0xdfd, 0x1, 0x0);
        gbc.writeMem(0xe478, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x29bc);
        EXPECT(gbc.pc(), 0xe47a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe478), 0xcb);
        EXPECT(gbc.readMem(0xe479), 0x59);
        // CB 59 013E
        gbc.setState(0x9514, 0x8cfb, 0x9770, 0x32f2, 0xc6e2, 0x163a, 0x0, 0x0);
        gbc.writeMem(0x9514, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8cfb);
        EXPECT(gbc.pc(), 0x9516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9514), 0xcb);
        EXPECT(gbc.readMem(0x9515), 0x59);
        // CB 59 013F
        gbc.setState(0x448b, 0xad58, 0xc440, 0xe941, 0xaa0c, 0xa3cd, 0x0, 0x1);
        gbc.writeMem(0x448b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xad58);
        EXPECT(gbc.pc(), 0x448d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0140
        gbc.setState(0x682c, 0xac33, 0xfc00, 0x8683, 0x95a6, 0xbada, 0x0, 0x0);
        gbc.writeMem(0x682c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xac33);
        EXPECT(gbc.pc(), 0x682e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0141
        gbc.setState(0x2996, 0x576c, 0x6630, 0xac3e, 0xeeaa, 0x5f3, 0x0, 0x0);
        gbc.writeMem(0x2996, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x576c);
        EXPECT(gbc.pc(), 0x2998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0142
        gbc.setState(0xcc16, 0xc205, 0xdd0, 0xb908, 0x558d, 0xeffe, 0x0, 0x0);
        gbc.writeMem(0xcc16, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc205);
        EXPECT(gbc.pc(), 0xcc18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc16), 0xcb);
        EXPECT(gbc.readMem(0xcc17), 0x59);
        // CB 59 0143
        gbc.setState(0xd34d, 0xa1e8, 0x83c0, 0x92aa, 0xff3b, 0xd5a0, 0x1, 0x1);
        gbc.writeMem(0xd34d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa1e8);
        EXPECT(gbc.pc(), 0xd34f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd34d), 0xcb);
        EXPECT(gbc.readMem(0xd34e), 0x59);
        // CB 59 0144
        gbc.setState(0xa484, 0x5c58, 0x72d0, 0x9810, 0x13ec, 0xdea2, 0x1, 0x0);
        gbc.writeMem(0xa484, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5c58);
        EXPECT(gbc.pc(), 0xa486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa484), 0xcb);
        EXPECT(gbc.readMem(0xa485), 0x59);
        // CB 59 0145
        gbc.setState(0x70f4, 0x72a5, 0x8380, 0xfe87, 0xca0f, 0x18fe, 0x0, 0x1);
        gbc.writeMem(0x70f4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x72a5);
        EXPECT(gbc.pc(), 0x70f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0146
        gbc.setState(0x6b49, 0xaf25, 0x9ff0, 0x4558, 0x9f8f, 0xc0b2, 0x1, 0x0);
        gbc.writeMem(0x6b49, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xaf25);
        EXPECT(gbc.pc(), 0x6b4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0147
        gbc.setState(0x5af6, 0xcf5f, 0xbb00, 0x112f, 0x348a, 0x6582, 0x0, 0x0);
        gbc.writeMem(0x5af6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xcf5f);
        EXPECT(gbc.pc(), 0x5af8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0148
        gbc.setState(0x43e2, 0x3251, 0x4890, 0x72dc, 0x3c78, 0x4663, 0x0, 0x1);
        gbc.writeMem(0x43e2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3251);
        EXPECT(gbc.pc(), 0x43e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0149
        gbc.setState(0xbb9, 0x26f4, 0xca60, 0x790c, 0xd014, 0xa584, 0x1, 0x0);
        gbc.writeMem(0xbb9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x26f4);
        EXPECT(gbc.pc(), 0xbbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 014A
        gbc.setState(0x2eed, 0xfee4, 0x7d90, 0x152f, 0x24c4, 0x40b4, 0x0, 0x0);
        gbc.writeMem(0x2eed, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xfee4);
        EXPECT(gbc.pc(), 0x2eef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 014B
        gbc.setState(0x6493, 0x90ea, 0x4990, 0x31bf, 0x3235, 0xdd79, 0x0, 0x0);
        gbc.writeMem(0x6493, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x90ea);
        EXPECT(gbc.pc(), 0x6495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 014C
        gbc.setState(0x7a0c, 0xf798, 0xfd00, 0x56f0, 0x3214, 0x3c4d, 0x1, 0x1);
        gbc.writeMem(0x7a0c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf798);
        EXPECT(gbc.pc(), 0x7a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 014D
        gbc.setState(0x62f5, 0x92c0, 0x5960, 0xa239, 0x9627, 0xed9a, 0x1, 0x0);
        gbc.writeMem(0x62f5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x92c0);
        EXPECT(gbc.pc(), 0x62f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 014E
        gbc.setState(0xc1f6, 0x360d, 0xe5e0, 0xfbb4, 0x885d, 0xfd19, 0x1, 0x1);
        gbc.writeMem(0xc1f6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x360d);
        EXPECT(gbc.pc(), 0xc1f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1f6), 0xcb);
        EXPECT(gbc.readMem(0xc1f7), 0x59);
        // CB 59 014F
        gbc.setState(0xd1d0, 0x1aca, 0xa050, 0x17fb, 0x2303, 0x468, 0x1, 0x0);
        gbc.writeMem(0xd1d0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1aca);
        EXPECT(gbc.pc(), 0xd1d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1d0), 0xcb);
        EXPECT(gbc.readMem(0xd1d1), 0x59);
        // CB 59 0150
        gbc.setState(0x1c06, 0xdaae, 0x2590, 0xe624, 0xdadc, 0xb3ba, 0x0, 0x1);
        gbc.writeMem(0x1c06, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xdaae);
        EXPECT(gbc.pc(), 0x1c08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0151
        gbc.setState(0xa9fa, 0x1b25, 0x8400, 0xd46d, 0x48f4, 0x1f9c, 0x0, 0x0);
        gbc.writeMem(0xa9fa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1b25);
        EXPECT(gbc.pc(), 0xa9fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9fa), 0xcb);
        EXPECT(gbc.readMem(0xa9fb), 0x59);
        // CB 59 0152
        gbc.setState(0x2fba, 0x5e89, 0xd90, 0x556c, 0x209b, 0x6839, 0x0, 0x1);
        gbc.writeMem(0x2fba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5e89);
        EXPECT(gbc.pc(), 0x2fbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0153
        gbc.setState(0x76fb, 0x519, 0xb150, 0xf1dd, 0x97e2, 0x1e51, 0x0, 0x1);
        gbc.writeMem(0x76fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x519);
        EXPECT(gbc.pc(), 0x76fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0154
        gbc.setState(0xa8bf, 0x1d33, 0x7990, 0x597f, 0x8ef2, 0x40c0, 0x0, 0x0);
        gbc.writeMem(0xa8bf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1d33);
        EXPECT(gbc.pc(), 0xa8c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8bf), 0xcb);
        EXPECT(gbc.readMem(0xa8c0), 0x59);
        // CB 59 0155
        gbc.setState(0x3311, 0x13b9, 0x5d00, 0xdba6, 0xd702, 0xec66, 0x0, 0x1);
        gbc.writeMem(0x3311, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x13b9);
        EXPECT(gbc.pc(), 0x3313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0156
        gbc.setState(0x4af1, 0xde71, 0x72a0, 0xf299, 0xe69f, 0x82d3, 0x0, 0x0);
        gbc.writeMem(0x4af1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xde71);
        EXPECT(gbc.pc(), 0x4af3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0158
        gbc.setState(0x5a58, 0x129d, 0x5b30, 0x59b9, 0xb7da, 0x1cfd, 0x0, 0x1);
        gbc.writeMem(0x5a58, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x129d);
        EXPECT(gbc.pc(), 0x5a5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0159
        gbc.setState(0x1a9f, 0xddd5, 0xe620, 0xf90c, 0xc76d, 0x2cb3, 0x1, 0x1);
        gbc.writeMem(0x1a9f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xddd5);
        EXPECT(gbc.pc(), 0x1aa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 015A
        gbc.setState(0xbcc8, 0x31a3, 0xf3e0, 0xea77, 0x586d, 0x5646, 0x1, 0x0);
        gbc.writeMem(0xbcc8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x31a3);
        EXPECT(gbc.pc(), 0xbcca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc8), 0xcb);
        EXPECT(gbc.readMem(0xbcc9), 0x59);
        // CB 59 015B
        gbc.setState(0xeae3, 0x51e, 0xa260, 0x8dff, 0xab2f, 0xcd74, 0x0, 0x0);
        gbc.writeMem(0xeae3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x51e);
        EXPECT(gbc.pc(), 0xeae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeae3), 0xcb);
        EXPECT(gbc.readMem(0xeae4), 0x59);
        // CB 59 015D
        gbc.setState(0xda3e, 0x1f5b, 0x59c0, 0x1338, 0x4d11, 0x6451, 0x1, 0x0);
        gbc.writeMem(0xda3e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1f5b);
        EXPECT(gbc.pc(), 0xda40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda3e), 0xcb);
        EXPECT(gbc.readMem(0xda3f), 0x59);
        // CB 59 015F
        gbc.setState(0xba44, 0xc78d, 0xb0b0, 0xaf4a, 0x8341, 0xf1ca, 0x0, 0x1);
        gbc.writeMem(0xba44, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc78d);
        EXPECT(gbc.pc(), 0xba46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba44), 0xcb);
        EXPECT(gbc.readMem(0xba45), 0x59);
        // CB 59 0160
        gbc.setState(0x3881, 0x3f31, 0xedd0, 0xfae5, 0x5635, 0x38de, 0x1, 0x1);
        gbc.writeMem(0x3881, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3f31);
        EXPECT(gbc.pc(), 0x3883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0161
        gbc.setState(0xee4b, 0x17a0, 0x1bb0, 0xfd50, 0x67cc, 0xbeb8, 0x0, 0x0);
        gbc.writeMem(0xee4b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x17a0);
        EXPECT(gbc.pc(), 0xee4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee4b), 0xcb);
        EXPECT(gbc.readMem(0xee4c), 0x59);
        // CB 59 0162
        gbc.setState(0x73ae, 0xd090, 0xa640, 0x164e, 0x7610, 0x17f0, 0x1, 0x1);
        gbc.writeMem(0x73ae, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd090);
        EXPECT(gbc.pc(), 0x73b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0163
        gbc.setState(0x2881, 0x6426, 0xa7d0, 0x8ea4, 0xde80, 0x64fb, 0x0, 0x0);
        gbc.writeMem(0x2881, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6426);
        EXPECT(gbc.pc(), 0x2883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0164
        gbc.setState(0x3034, 0x5ecf, 0xe70, 0xadf6, 0xcee1, 0xf3c3, 0x0, 0x1);
        gbc.writeMem(0x3034, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5ecf);
        EXPECT(gbc.pc(), 0x3036);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0165
        gbc.setState(0x6abb, 0x41d5, 0x7860, 0x9d56, 0xb5df, 0xdbe8, 0x1, 0x1);
        gbc.writeMem(0x6abb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x41d5);
        EXPECT(gbc.pc(), 0x6abd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0166
        gbc.setState(0xb8f0, 0x44a5, 0x1300, 0xa349, 0xa2b, 0x85a6, 0x1, 0x1);
        gbc.writeMem(0xb8f0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x44a5);
        EXPECT(gbc.pc(), 0xb8f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f0), 0xcb);
        EXPECT(gbc.readMem(0xb8f1), 0x59);
        // CB 59 0167
        gbc.setState(0xb2f7, 0x3182, 0x3b80, 0x876d, 0x2f1c, 0x5536, 0x1, 0x1);
        gbc.writeMem(0xb2f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3182);
        EXPECT(gbc.pc(), 0xb2f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2f7), 0xcb);
        EXPECT(gbc.readMem(0xb2f8), 0x59);
        // CB 59 0169
        gbc.setState(0xb61a, 0xe48b, 0xb4e0, 0x6d4, 0x549c, 0xb72c, 0x0, 0x0);
        gbc.writeMem(0xb61a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe48b);
        EXPECT(gbc.pc(), 0xb61c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb61a), 0xcb);
        EXPECT(gbc.readMem(0xb61b), 0x59);
        // CB 59 016A
        gbc.setState(0xdc14, 0xe5b, 0x3a70, 0xca3d, 0xc318, 0x37c3, 0x1, 0x0);
        gbc.writeMem(0xdc14, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe5b);
        EXPECT(gbc.pc(), 0xdc16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc14), 0xcb);
        EXPECT(gbc.readMem(0xdc15), 0x59);
        // CB 59 016B
        gbc.setState(0x4633, 0xddc9, 0x4f60, 0xf79c, 0x52dc, 0x5797, 0x0, 0x1);
        gbc.writeMem(0x4633, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xddc9);
        EXPECT(gbc.pc(), 0x4635);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 016C
        gbc.setState(0xa560, 0x46a2, 0xaa60, 0x46b9, 0x582a, 0xcd69, 0x0, 0x1);
        gbc.writeMem(0xa560, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x46a2);
        EXPECT(gbc.pc(), 0xa562);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa560), 0xcb);
        EXPECT(gbc.readMem(0xa561), 0x59);
        // CB 59 016D
        gbc.setState(0xd36e, 0x8177, 0xd720, 0x938e, 0x6f05, 0x44da, 0x0, 0x1);
        gbc.writeMem(0xd36e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8177);
        EXPECT(gbc.pc(), 0xd370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd36e), 0xcb);
        EXPECT(gbc.readMem(0xd36f), 0x59);
        // CB 59 016E
        gbc.setState(0x55d5, 0x459, 0x2690, 0xb42f, 0xc28c, 0x3d3d, 0x0, 0x1);
        gbc.writeMem(0x55d5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x459);
        EXPECT(gbc.pc(), 0x55d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 016F
        gbc.setState(0xecb5, 0x2294, 0xa010, 0x196e, 0xf1ed, 0x909e, 0x1, 0x0);
        gbc.writeMem(0xecb5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2294);
        EXPECT(gbc.pc(), 0xecb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecb5), 0xcb);
        EXPECT(gbc.readMem(0xecb6), 0x59);
        // CB 59 0170
        gbc.setState(0xa222, 0x587e, 0x9560, 0x56d0, 0x3040, 0x6e32, 0x0, 0x0);
        gbc.writeMem(0xa222, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x587e);
        EXPECT(gbc.pc(), 0xa224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa222), 0xcb);
        EXPECT(gbc.readMem(0xa223), 0x59);
        // CB 59 0171
        gbc.setState(0xa8fc, 0x6ae2, 0x6330, 0x733d, 0x9c3, 0x2207, 0x0, 0x0);
        gbc.writeMem(0xa8fc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6ae2);
        EXPECT(gbc.pc(), 0xa8fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8fc), 0xcb);
        EXPECT(gbc.readMem(0xa8fd), 0x59);
        // CB 59 0172
        gbc.setState(0xa364, 0x4cf3, 0x4a70, 0x4fb7, 0x95b9, 0x7b2, 0x0, 0x0);
        gbc.writeMem(0xa364, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4cf3);
        EXPECT(gbc.pc(), 0xa366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa364), 0xcb);
        EXPECT(gbc.readMem(0xa365), 0x59);
        // CB 59 0173
        gbc.setState(0x5e23, 0x9162, 0x9a90, 0x72d6, 0x1673, 0x981a, 0x0, 0x0);
        gbc.writeMem(0x5e23, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9162);
        EXPECT(gbc.pc(), 0x5e25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0174
        gbc.setState(0x8477, 0x6c83, 0x3e80, 0x457c, 0x7665, 0x4d73, 0x0, 0x0);
        gbc.writeMem(0x8477, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6c83);
        EXPECT(gbc.pc(), 0x8479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8477), 0xcb);
        EXPECT(gbc.readMem(0x8478), 0x59);
        // CB 59 0175
        gbc.setState(0x18ab, 0x838f, 0xc5b0, 0xaf54, 0x6daf, 0x710f, 0x0, 0x0);
        gbc.writeMem(0x18ab, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x838f);
        EXPECT(gbc.pc(), 0x18ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0176
        gbc.setState(0x8392, 0xf6b, 0x9150, 0x3470, 0xd9d3, 0x8538, 0x1, 0x0);
        gbc.writeMem(0x8392, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf6b);
        EXPECT(gbc.pc(), 0x8394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8392), 0xcb);
        EXPECT(gbc.readMem(0x8393), 0x59);
        // CB 59 0177
        gbc.setState(0xc1d9, 0x24ac, 0x4fb0, 0x73d5, 0xbc14, 0x5a8, 0x0, 0x1);
        gbc.writeMem(0xc1d9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x24ac);
        EXPECT(gbc.pc(), 0xc1db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d9), 0xcb);
        EXPECT(gbc.readMem(0xc1da), 0x59);
        // CB 59 0178
        gbc.setState(0xb121, 0x49bd, 0xd1d0, 0x5367, 0x37e2, 0x6bd9, 0x1, 0x0);
        gbc.writeMem(0xb121, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x49bd);
        EXPECT(gbc.pc(), 0xb123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb121), 0xcb);
        EXPECT(gbc.readMem(0xb122), 0x59);
        // CB 59 0179
        gbc.setState(0xd0c5, 0x815a, 0x25b0, 0x11cb, 0x3249, 0x9190, 0x0, 0x0);
        gbc.writeMem(0xd0c5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x815a);
        EXPECT(gbc.pc(), 0xd0c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0c5), 0xcb);
        EXPECT(gbc.readMem(0xd0c6), 0x59);
        // CB 59 017A
        gbc.setState(0x8c0a, 0xb941, 0xac0, 0x39e2, 0x44d7, 0x5de7, 0x0, 0x1);
        gbc.writeMem(0x8c0a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb941);
        EXPECT(gbc.pc(), 0x8c0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c0a), 0xcb);
        EXPECT(gbc.readMem(0x8c0b), 0x59);
        // CB 59 017B
        gbc.setState(0xcd0f, 0x4dbd, 0x8cf0, 0x60e9, 0xce48, 0x6f23, 0x0, 0x1);
        gbc.writeMem(0xcd0f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4dbd);
        EXPECT(gbc.pc(), 0xcd11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd0f), 0xcb);
        EXPECT(gbc.readMem(0xcd10), 0x59);
        // CB 59 017C
        gbc.setState(0x3c3b, 0x627d, 0xbfa0, 0xc41, 0x92c6, 0xf7c5, 0x1, 0x1);
        gbc.writeMem(0x3c3b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x627d);
        EXPECT(gbc.pc(), 0x3c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 017D
        gbc.setState(0x5dab, 0x1eea, 0x4550, 0x5128, 0x9e0, 0xc962, 0x1, 0x0);
        gbc.writeMem(0x5dab, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1eea);
        EXPECT(gbc.pc(), 0x5dad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 017E
        gbc.setState(0x9b5c, 0x5c3a, 0x72d0, 0xb43f, 0xe4c4, 0x9d75, 0x0, 0x1);
        gbc.writeMem(0x9b5c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5c3a);
        EXPECT(gbc.pc(), 0x9b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b5c), 0xcb);
        EXPECT(gbc.readMem(0x9b5d), 0x59);
        // CB 59 017F
        gbc.setState(0xd6c3, 0x9799, 0x1d40, 0x706f, 0xc64a, 0xa797, 0x0, 0x0);
        gbc.writeMem(0xd6c3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9799);
        EXPECT(gbc.pc(), 0xd6c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c3), 0xcb);
        EXPECT(gbc.readMem(0xd6c4), 0x59);
        // CB 59 0180
        gbc.setState(0x9897, 0x8d9c, 0x61b0, 0xc40d, 0x1351, 0xebca, 0x0, 0x0);
        gbc.writeMem(0x9897, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8d9c);
        EXPECT(gbc.pc(), 0x9899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9897), 0xcb);
        EXPECT(gbc.readMem(0x9898), 0x59);
        // CB 59 0181
        gbc.setState(0xc0b3, 0x8020, 0x5ea0, 0x4e06, 0xa987, 0xdde8, 0x1, 0x1);
        gbc.writeMem(0xc0b3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8020);
        EXPECT(gbc.pc(), 0xc0b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0b3), 0xcb);
        EXPECT(gbc.readMem(0xc0b4), 0x59);
        // CB 59 0182
        gbc.setState(0x11f7, 0xd2eb, 0x3830, 0xd906, 0x7966, 0x30d4, 0x1, 0x0);
        gbc.writeMem(0x11f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd2eb);
        EXPECT(gbc.pc(), 0x11f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0184
        gbc.setState(0x7eba, 0x10f4, 0x8080, 0x913f, 0x880, 0x9ff0, 0x1, 0x0);
        gbc.writeMem(0x7eba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x10f4);
        EXPECT(gbc.pc(), 0x7ebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0185
        gbc.setState(0x6ede, 0x6aad, 0x8ee0, 0x8a2b, 0xac2d, 0x9940, 0x0, 0x1);
        gbc.writeMem(0x6ede, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x6aad);
        EXPECT(gbc.pc(), 0x6ee0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0186
        gbc.setState(0x8fb, 0xd10d, 0x5d70, 0x77b, 0xef33, 0x322f, 0x1, 0x1);
        gbc.writeMem(0x8fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd10d);
        EXPECT(gbc.pc(), 0x8fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0187
        gbc.setState(0x48dd, 0x3b64, 0x770, 0xa7ce, 0x9df6, 0xc5, 0x0, 0x1);
        gbc.writeMem(0x48dd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3b64);
        EXPECT(gbc.pc(), 0x48df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0188
        gbc.setState(0xcf2e, 0x555f, 0xf810, 0xeacf, 0x693f, 0x9372, 0x1, 0x1);
        gbc.writeMem(0xcf2e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x555f);
        EXPECT(gbc.pc(), 0xcf30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf2e), 0xcb);
        EXPECT(gbc.readMem(0xcf2f), 0x59);
        // CB 59 0189
        gbc.setState(0xd12a, 0xcac, 0xb950, 0x4b0c, 0x26d8, 0x9a2f, 0x1, 0x0);
        gbc.writeMem(0xd12a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xcac);
        EXPECT(gbc.pc(), 0xd12c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd12a), 0xcb);
        EXPECT(gbc.readMem(0xd12b), 0x59);
        // CB 59 018A
        gbc.setState(0xa1ab, 0xb3f4, 0xf460, 0xb626, 0xf565, 0xed78, 0x0, 0x0);
        gbc.writeMem(0xa1ab, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb3f4);
        EXPECT(gbc.pc(), 0xa1ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ab), 0xcb);
        EXPECT(gbc.readMem(0xa1ac), 0x59);
        // CB 59 018B
        gbc.setState(0x2530, 0xe831, 0x210, 0x1f57, 0xf7e2, 0xaba3, 0x0, 0x0);
        gbc.writeMem(0x2530, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe831);
        EXPECT(gbc.pc(), 0x2532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 018C
        gbc.setState(0x9acf, 0x9f8c, 0x6d0, 0x901d, 0xa2bc, 0xcc5, 0x0, 0x1);
        gbc.writeMem(0x9acf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9f8c);
        EXPECT(gbc.pc(), 0x9ad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9acf), 0xcb);
        EXPECT(gbc.readMem(0x9ad0), 0x59);
        // CB 59 018D
        gbc.setState(0x7ac3, 0x769f, 0xa810, 0x3d8e, 0x38b2, 0x8ba, 0x1, 0x0);
        gbc.writeMem(0x7ac3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x769f);
        EXPECT(gbc.pc(), 0x7ac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 018E
        gbc.setState(0xd9db, 0x2139, 0xcd20, 0x6ccf, 0x6f84, 0xbcf, 0x0, 0x1);
        gbc.writeMem(0xd9db, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2139);
        EXPECT(gbc.pc(), 0xd9dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9db), 0xcb);
        EXPECT(gbc.readMem(0xd9dc), 0x59);
        // CB 59 018F
        gbc.setState(0xee30, 0xafcb, 0xe1c0, 0x42df, 0x2e11, 0x1d43, 0x1, 0x0);
        gbc.writeMem(0xee30, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xafcb);
        EXPECT(gbc.pc(), 0xee32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee30), 0xcb);
        EXPECT(gbc.readMem(0xee31), 0x59);
        // CB 59 0190
        gbc.setState(0x1d1d, 0x6b27, 0xaff0, 0x155c, 0x4fd2, 0xa2fc, 0x0, 0x0);
        gbc.writeMem(0x1d1d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6b27);
        EXPECT(gbc.pc(), 0x1d1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0191
        gbc.setState(0xd867, 0x3e52, 0xc9b0, 0x4697, 0xa8b1, 0x4483, 0x0, 0x0);
        gbc.writeMem(0xd867, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3e52);
        EXPECT(gbc.pc(), 0xd869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd867), 0xcb);
        EXPECT(gbc.readMem(0xd868), 0x59);
        // CB 59 0192
        gbc.setState(0x297f, 0x8222, 0xdcc0, 0x145, 0x92ad, 0x3042, 0x0, 0x1);
        gbc.writeMem(0x297f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8222);
        EXPECT(gbc.pc(), 0x2981);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0193
        gbc.setState(0x5d6c, 0xfa01, 0x5e0, 0x368d, 0x9f9e, 0xb5c7, 0x1, 0x1);
        gbc.writeMem(0x5d6c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xfa01);
        EXPECT(gbc.pc(), 0x5d6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0194
        gbc.setState(0xb0a0, 0xa687, 0x1410, 0x89b3, 0xd610, 0xc695, 0x0, 0x0);
        gbc.writeMem(0xb0a0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa687);
        EXPECT(gbc.pc(), 0xb0a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0a0), 0xcb);
        EXPECT(gbc.readMem(0xb0a1), 0x59);
        // CB 59 0195
        gbc.setState(0x1f7, 0x1524, 0xcbb0, 0x7686, 0x1315, 0x4f6a, 0x0, 0x1);
        gbc.writeMem(0x1f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1524);
        EXPECT(gbc.pc(), 0x1f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0196
        gbc.setState(0xe352, 0x319b, 0xc080, 0x3ef, 0x5ba6, 0xc995, 0x0, 0x0);
        gbc.writeMem(0xe352, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x319b);
        EXPECT(gbc.pc(), 0xe354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe352), 0xcb);
        EXPECT(gbc.readMem(0xe353), 0x59);
        // CB 59 0197
        gbc.setState(0x5a7f, 0x624a, 0xd830, 0x77be, 0x5b8a, 0xb0e2, 0x0, 0x0);
        gbc.writeMem(0x5a7f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x624a);
        EXPECT(gbc.pc(), 0x5a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0198
        gbc.setState(0x1ab0, 0xce91, 0x73c0, 0x8167, 0xa868, 0xbb82, 0x1, 0x0);
        gbc.writeMem(0x1ab0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xce91);
        EXPECT(gbc.pc(), 0x1ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0199
        gbc.setState(0xe724, 0x116b, 0xfd90, 0xf9a2, 0x1984, 0xaf9e, 0x1, 0x1);
        gbc.writeMem(0xe724, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x116b);
        EXPECT(gbc.pc(), 0xe726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe724), 0xcb);
        EXPECT(gbc.readMem(0xe725), 0x59);
        // CB 59 019A
        gbc.setState(0x65c2, 0xec85, 0xb180, 0xe30c, 0x6043, 0x5d5e, 0x0, 0x0);
        gbc.writeMem(0x65c2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xec85);
        EXPECT(gbc.pc(), 0x65c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 019B
        gbc.setState(0xdf60, 0x30b6, 0x69c0, 0x27fd, 0xfd90, 0x77b8, 0x0, 0x0);
        gbc.writeMem(0xdf60, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x30b6);
        EXPECT(gbc.pc(), 0xdf62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf60), 0xcb);
        EXPECT(gbc.readMem(0xdf61), 0x59);
        // CB 59 019C
        gbc.setState(0x4cf6, 0x658f, 0x2990, 0x2dbe, 0x79bf, 0x91cf, 0x1, 0x0);
        gbc.writeMem(0x4cf6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x658f);
        EXPECT(gbc.pc(), 0x4cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 019D
        gbc.setState(0xce61, 0xcb7d, 0xf730, 0x7452, 0x6e52, 0xb63a, 0x1, 0x0);
        gbc.writeMem(0xce61, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xcb7d);
        EXPECT(gbc.pc(), 0xce63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce61), 0xcb);
        EXPECT(gbc.readMem(0xce62), 0x59);
        // CB 59 019E
        gbc.setState(0x9c9a, 0xfc6, 0x62d0, 0x9338, 0x4f81, 0x50d2, 0x1, 0x1);
        gbc.writeMem(0x9c9a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfc6);
        EXPECT(gbc.pc(), 0x9c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9a), 0xcb);
        EXPECT(gbc.readMem(0x9c9b), 0x59);
        // CB 59 019F
        gbc.setState(0xba, 0xde12, 0xb860, 0x22bf, 0x69f9, 0xab67, 0x0, 0x0);
        gbc.writeMem(0xba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xde12);
        EXPECT(gbc.pc(), 0xbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01A0
        gbc.setState(0x169, 0x6c3, 0xc240, 0x525e, 0xe781, 0xf724, 0x1, 0x1);
        gbc.writeMem(0x169, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6c3);
        EXPECT(gbc.pc(), 0x16b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01A1
        gbc.setState(0x6d45, 0xc045, 0x1300, 0x401a, 0xbc0b, 0x853f, 0x0, 0x1);
        gbc.writeMem(0x6d45, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc045);
        EXPECT(gbc.pc(), 0x6d47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01A2
        gbc.setState(0xa94b, 0x95c, 0xbb80, 0x749e, 0xa6b9, 0x5818, 0x1, 0x1);
        gbc.writeMem(0xa94b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x95c);
        EXPECT(gbc.pc(), 0xa94d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa94b), 0xcb);
        EXPECT(gbc.readMem(0xa94c), 0x59);
        // CB 59 01A3
        gbc.setState(0x1620, 0x29e3, 0xfe70, 0x23b2, 0xc8b8, 0xa0a8, 0x1, 0x0);
        gbc.writeMem(0x1620, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x29e3);
        EXPECT(gbc.pc(), 0x1622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01A4
        gbc.setState(0x4eb0, 0x7009, 0x67e0, 0xe638, 0x6b28, 0x534f, 0x0, 0x1);
        gbc.writeMem(0x4eb0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7009);
        EXPECT(gbc.pc(), 0x4eb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01A6
        gbc.setState(0xd348, 0xf1d1, 0x8b0, 0xb505, 0x7456, 0xeed7, 0x1, 0x0);
        gbc.writeMem(0xd348, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf1d1);
        EXPECT(gbc.pc(), 0xd34a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd348), 0xcb);
        EXPECT(gbc.readMem(0xd349), 0x59);
        // CB 59 01A7
        gbc.setState(0x9dd5, 0xb46d, 0xe2e0, 0xad76, 0x8ebc, 0x5d64, 0x0, 0x0);
        gbc.writeMem(0x9dd5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb46d);
        EXPECT(gbc.pc(), 0x9dd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dd5), 0xcb);
        EXPECT(gbc.readMem(0x9dd6), 0x59);
        // CB 59 01A8
        gbc.setState(0x3e0, 0xdc22, 0x1b60, 0x193f, 0x882a, 0xf11b, 0x0, 0x0);
        gbc.writeMem(0x3e0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xdc22);
        EXPECT(gbc.pc(), 0x3e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01A9
        gbc.setState(0xa96a, 0x2500, 0xc620, 0x3be3, 0xd9e9, 0x7ee2, 0x1, 0x0);
        gbc.writeMem(0xa96a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2500);
        EXPECT(gbc.pc(), 0xa96c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa96a), 0xcb);
        EXPECT(gbc.readMem(0xa96b), 0x59);
        // CB 59 01AA
        gbc.setState(0x91d, 0x32d7, 0xdf80, 0x7a5f, 0xa5f0, 0x21be, 0x1, 0x1);
        gbc.writeMem(0x91d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x32d7);
        EXPECT(gbc.pc(), 0x91f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01AB
        gbc.setState(0xc9dd, 0xe533, 0xf220, 0xf3c0, 0xf333, 0x67fa, 0x0, 0x1);
        gbc.writeMem(0xc9dd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe533);
        EXPECT(gbc.pc(), 0xc9df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9dd), 0xcb);
        EXPECT(gbc.readMem(0xc9de), 0x59);
        // CB 59 01AC
        gbc.setState(0xb8fb, 0xc194, 0x63d0, 0xb9, 0x50ef, 0x7905, 0x1, 0x1);
        gbc.writeMem(0xb8fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc194);
        EXPECT(gbc.pc(), 0xb8fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8fb), 0xcb);
        EXPECT(gbc.readMem(0xb8fc), 0x59);
        // CB 59 01AD
        gbc.setState(0x53a3, 0xeda, 0x4d90, 0x99fe, 0x8b2c, 0x1fde, 0x1, 0x1);
        gbc.writeMem(0x53a3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xeda);
        EXPECT(gbc.pc(), 0x53a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01AE
        gbc.setState(0xc677, 0x8ec9, 0x7d10, 0xc96b, 0x8221, 0xc1d4, 0x1, 0x1);
        gbc.writeMem(0xc677, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8ec9);
        EXPECT(gbc.pc(), 0xc679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc677), 0xcb);
        EXPECT(gbc.readMem(0xc678), 0x59);
        // CB 59 01AF
        gbc.setState(0x2f33, 0xce0f, 0xb380, 0x9774, 0xaf19, 0x640e, 0x0, 0x1);
        gbc.writeMem(0x2f33, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xce0f);
        EXPECT(gbc.pc(), 0x2f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01B0
        gbc.setState(0xd0b3, 0x8d9f, 0x25f0, 0x621e, 0x6496, 0xf436, 0x0, 0x0);
        gbc.writeMem(0xd0b3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8d9f);
        EXPECT(gbc.pc(), 0xd0b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b3), 0xcb);
        EXPECT(gbc.readMem(0xd0b4), 0x59);
        // CB 59 01B1
        gbc.setState(0xaa18, 0xac61, 0x2ea0, 0x97e8, 0xdac6, 0x46e6, 0x1, 0x0);
        gbc.writeMem(0xaa18, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xac61);
        EXPECT(gbc.pc(), 0xaa1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa18), 0xcb);
        EXPECT(gbc.readMem(0xaa19), 0x59);
        // CB 59 01B2
        gbc.setState(0xd3dd, 0x41f0, 0x46b0, 0xc7c3, 0x68a6, 0x8bb9, 0x0, 0x0);
        gbc.writeMem(0xd3dd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x41f0);
        EXPECT(gbc.pc(), 0xd3df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3dd), 0xcb);
        EXPECT(gbc.readMem(0xd3de), 0x59);
        // CB 59 01B3
        gbc.setState(0xe5fe, 0xdd29, 0xdd50, 0x20ea, 0x6293, 0xc827, 0x0, 0x1);
        gbc.writeMem(0xe5fe, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xdd29);
        EXPECT(gbc.pc(), 0xe600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5fe), 0xcb);
        EXPECT(gbc.readMem(0xe5ff), 0x59);
        // CB 59 01B4
        gbc.setState(0x1276, 0x94cb, 0x7f0, 0x7927, 0xbade, 0x689e, 0x0, 0x0);
        gbc.writeMem(0x1276, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x94cb);
        EXPECT(gbc.pc(), 0x1278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01B5
        gbc.setState(0xd0f3, 0x87a0, 0xa4c0, 0x310d, 0xa9de, 0xab53, 0x0, 0x1);
        gbc.writeMem(0xd0f3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x87a0);
        EXPECT(gbc.pc(), 0xd0f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0f3), 0xcb);
        EXPECT(gbc.readMem(0xd0f4), 0x59);
        // CB 59 01B6
        gbc.setState(0x72fc, 0x6659, 0xdaa0, 0x3572, 0x66be, 0xea6a, 0x1, 0x1);
        gbc.writeMem(0x72fc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6659);
        EXPECT(gbc.pc(), 0x72fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01B7
        gbc.setState(0xb793, 0x502, 0x1460, 0xb91d, 0x60c0, 0xc7a6, 0x0, 0x0);
        gbc.writeMem(0xb793, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x502);
        EXPECT(gbc.pc(), 0xb795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb793), 0xcb);
        EXPECT(gbc.readMem(0xb794), 0x59);
        // CB 59 01B8
        gbc.setState(0x4695, 0xef2e, 0x91d0, 0x93f7, 0x6a28, 0xcf10, 0x1, 0x0);
        gbc.writeMem(0x4695, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xef2e);
        EXPECT(gbc.pc(), 0x4697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01B9
        gbc.setState(0x7baf, 0xd48f, 0x2740, 0x7253, 0xe2a9, 0x8894, 0x1, 0x1);
        gbc.writeMem(0x7baf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd48f);
        EXPECT(gbc.pc(), 0x7bb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01BA
        gbc.setState(0xbad6, 0xb5d1, 0x6a20, 0x94d0, 0x4aa, 0xb9c0, 0x0, 0x0);
        gbc.writeMem(0xbad6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb5d1);
        EXPECT(gbc.pc(), 0xbad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbad6), 0xcb);
        EXPECT(gbc.readMem(0xbad7), 0x59);
        // CB 59 01BB
        gbc.setState(0xd5a9, 0xf95c, 0xd530, 0x6b4, 0x9339, 0xeeab, 0x1, 0x1);
        gbc.writeMem(0xd5a9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf95c);
        EXPECT(gbc.pc(), 0xd5ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a9), 0xcb);
        EXPECT(gbc.readMem(0xd5aa), 0x59);
        // CB 59 01BC
        gbc.setState(0x36aa, 0x7664, 0xdaa0, 0xdc9c, 0xa615, 0x8e84, 0x1, 0x1);
        gbc.writeMem(0x36aa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7664);
        EXPECT(gbc.pc(), 0x36ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01BD
        gbc.setState(0xfa8, 0xb699, 0x8540, 0xda83, 0x7a72, 0xcc, 0x1, 0x0);
        gbc.writeMem(0xfa8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb699);
        EXPECT(gbc.pc(), 0xfaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01BE
        gbc.setState(0x7fa, 0x65f4, 0xa260, 0x8af7, 0x483e, 0xf5ce, 0x0, 0x1);
        gbc.writeMem(0x7fa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x65f4);
        EXPECT(gbc.pc(), 0x7fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01BF
        gbc.setState(0xab30, 0x56c8, 0x540, 0xa960, 0x807, 0x6e47, 0x1, 0x0);
        gbc.writeMem(0xab30, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x56c8);
        EXPECT(gbc.pc(), 0xab32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab30), 0xcb);
        EXPECT(gbc.readMem(0xab31), 0x59);
        // CB 59 01C0
        gbc.setState(0xa6f8, 0x8da2, 0xbd90, 0x126c, 0xe4f3, 0xbf04, 0x0, 0x0);
        gbc.writeMem(0xa6f8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8da2);
        EXPECT(gbc.pc(), 0xa6fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6f8), 0xcb);
        EXPECT(gbc.readMem(0xa6f9), 0x59);
        // CB 59 01C1
        gbc.setState(0x4635, 0xf5bd, 0x3a60, 0x3442, 0xc163, 0xf26, 0x0, 0x1);
        gbc.writeMem(0x4635, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf5bd);
        EXPECT(gbc.pc(), 0x4637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01C2
        gbc.setState(0x5aa9, 0xee90, 0xe550, 0xf568, 0x721, 0x6009, 0x0, 0x0);
        gbc.writeMem(0x5aa9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xee90);
        EXPECT(gbc.pc(), 0x5aab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01C3
        gbc.setState(0xa7b, 0x30d7, 0xc9e0, 0xa37f, 0x45f1, 0x2b4c, 0x0, 0x1);
        gbc.writeMem(0xa7b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x30d7);
        EXPECT(gbc.pc(), 0xa7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01C4
        gbc.setState(0x6c7, 0x925, 0x2c20, 0x8fb6, 0xdbf7, 0xaf2c, 0x1, 0x0);
        gbc.writeMem(0x6c7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x925);
        EXPECT(gbc.pc(), 0x6c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01C5
        gbc.setState(0x6031, 0x5a23, 0x36c0, 0x7c66, 0x6bb, 0xddb8, 0x1, 0x0);
        gbc.writeMem(0x6031, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5a23);
        EXPECT(gbc.pc(), 0x6033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01C6
        gbc.setState(0xc96c, 0xcb33, 0x5d00, 0xa307, 0x54a7, 0x5b6e, 0x0, 0x1);
        gbc.writeMem(0xc96c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcb33);
        EXPECT(gbc.pc(), 0xc96e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc96c), 0xcb);
        EXPECT(gbc.readMem(0xc96d), 0x59);
        // CB 59 01C7
        gbc.setState(0x7eb9, 0x58a6, 0xafc0, 0xd8cc, 0xc0cb, 0x1351, 0x0, 0x1);
        gbc.writeMem(0x7eb9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x58a6);
        EXPECT(gbc.pc(), 0x7ebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01C8
        gbc.setState(0xcdcb, 0xc5a0, 0x6c40, 0x838c, 0x293e, 0xf024, 0x1, 0x1);
        gbc.writeMem(0xcdcb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc5a0);
        EXPECT(gbc.pc(), 0xcdcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdcb), 0xcb);
        EXPECT(gbc.readMem(0xcdcc), 0x59);
        // CB 59 01C9
        gbc.setState(0xc6d6, 0x807, 0x6a60, 0xee6c, 0xb320, 0xc1d5, 0x0, 0x1);
        gbc.writeMem(0xc6d6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x807);
        EXPECT(gbc.pc(), 0xc6d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6d6), 0xcb);
        EXPECT(gbc.readMem(0xc6d7), 0x59);
        // CB 59 01CA
        gbc.setState(0xccf8, 0x2280, 0xdf70, 0xf6c2, 0xbee1, 0x83a1, 0x1, 0x0);
        gbc.writeMem(0xccf8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2280);
        EXPECT(gbc.pc(), 0xccfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf8), 0xcb);
        EXPECT(gbc.readMem(0xccf9), 0x59);
        // CB 59 01CB
        gbc.setState(0x565b, 0x620, 0xc0f0, 0x5c43, 0x6e48, 0xe6d0, 0x0, 0x1);
        gbc.writeMem(0x565b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x620);
        EXPECT(gbc.pc(), 0x565d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01CC
        gbc.setState(0x6699, 0x3e5b, 0x1d30, 0x60a8, 0x84a5, 0xdaf3, 0x1, 0x0);
        gbc.writeMem(0x6699, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3e5b);
        EXPECT(gbc.pc(), 0x669b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01CD
        gbc.setState(0x7b26, 0x4c96, 0x3b0, 0xdc72, 0x9d62, 0xc83d, 0x1, 0x1);
        gbc.writeMem(0x7b26, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4c96);
        EXPECT(gbc.pc(), 0x7b28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01CE
        gbc.setState(0x7dbd, 0x5fc8, 0x32f0, 0xb200, 0xd6d0, 0x96eb, 0x1, 0x0);
        gbc.writeMem(0x7dbd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5fc8);
        EXPECT(gbc.pc(), 0x7dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01CF
        gbc.setState(0xe711, 0x1510, 0xb140, 0xdaa0, 0x4b3b, 0x68a3, 0x0, 0x0);
        gbc.writeMem(0xe711, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1510);
        EXPECT(gbc.pc(), 0xe713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe711), 0xcb);
        EXPECT(gbc.readMem(0xe712), 0x59);
        // CB 59 01D0
        gbc.setState(0x9a7e, 0x4434, 0xb680, 0x2e41, 0x9f02, 0xe21c, 0x0, 0x0);
        gbc.writeMem(0x9a7e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4434);
        EXPECT(gbc.pc(), 0x9a80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a7e), 0xcb);
        EXPECT(gbc.readMem(0x9a7f), 0x59);
        // CB 59 01D1
        gbc.setState(0xde84, 0x5214, 0x9e80, 0xea96, 0x96ad, 0x9ffb, 0x0, 0x0);
        gbc.writeMem(0xde84, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5214);
        EXPECT(gbc.pc(), 0xde86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde84), 0xcb);
        EXPECT(gbc.readMem(0xde85), 0x59);
        // CB 59 01D2
        gbc.setState(0x9e74, 0x42e3, 0x3a80, 0xd227, 0x72ad, 0xd4e8, 0x0, 0x0);
        gbc.writeMem(0x9e74, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x42e3);
        EXPECT(gbc.pc(), 0x9e76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e74), 0xcb);
        EXPECT(gbc.readMem(0x9e75), 0x59);
        // CB 59 01D3
        gbc.setState(0x4ddf, 0xf5a4, 0x4380, 0x9b51, 0xa7c9, 0x46d9, 0x0, 0x1);
        gbc.writeMem(0x4ddf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf5a4);
        EXPECT(gbc.pc(), 0x4de1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01D4
        gbc.setState(0x4cf5, 0xa111, 0x1050, 0xbde8, 0xc9f8, 0xf918, 0x0, 0x0);
        gbc.writeMem(0x4cf5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa111);
        EXPECT(gbc.pc(), 0x4cf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01D5
        gbc.setState(0x149e, 0x76a6, 0x4e80, 0xd110, 0x3110, 0xd27e, 0x0, 0x0);
        gbc.writeMem(0x149e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x76a6);
        EXPECT(gbc.pc(), 0x14a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01D6
        gbc.setState(0x5518, 0x84ab, 0x2ef0, 0x57f4, 0xa223, 0x8927, 0x1, 0x0);
        gbc.writeMem(0x5518, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x84ab);
        EXPECT(gbc.pc(), 0x551a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01D7
        gbc.setState(0x6c4, 0xacf2, 0xa620, 0x76db, 0xf51b, 0x8852, 0x1, 0x0);
        gbc.writeMem(0x6c4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xacf2);
        EXPECT(gbc.pc(), 0x6c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01D8
        gbc.setState(0x1b19, 0xe8b7, 0xcdb0, 0x9b87, 0xc554, 0xb219, 0x0, 0x1);
        gbc.writeMem(0x1b19, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe8b7);
        EXPECT(gbc.pc(), 0x1b1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01D9
        gbc.setState(0x2da9, 0x4335, 0xc630, 0x4a92, 0xfccb, 0x3f5c, 0x0, 0x1);
        gbc.writeMem(0x2da9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4335);
        EXPECT(gbc.pc(), 0x2dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01DA
        gbc.setState(0xba52, 0x12d7, 0x60c0, 0xe3fc, 0xc379, 0x103f, 0x0, 0x0);
        gbc.writeMem(0xba52, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x12d7);
        EXPECT(gbc.pc(), 0xba54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba52), 0xcb);
        EXPECT(gbc.readMem(0xba53), 0x59);
        // CB 59 01DB
        gbc.setState(0x3525, 0x8dc6, 0x2380, 0xb53d, 0xf9c9, 0x6266, 0x1, 0x1);
        gbc.writeMem(0x3525, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8dc6);
        EXPECT(gbc.pc(), 0x3527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01DC
        gbc.setState(0x7360, 0xb85c, 0x740, 0x77c, 0x7238, 0xc4f1, 0x1, 0x0);
        gbc.writeMem(0x7360, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb85c);
        EXPECT(gbc.pc(), 0x7362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01DD
        gbc.setState(0x10c0, 0xd069, 0x8380, 0x56ec, 0x8953, 0x3fd4, 0x1, 0x1);
        gbc.writeMem(0x10c0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd069);
        EXPECT(gbc.pc(), 0x10c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01DE
        gbc.setState(0x247f, 0xf5f4, 0x65e0, 0x219a, 0x76bf, 0xec42, 0x0, 0x1);
        gbc.writeMem(0x247f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf5f4);
        EXPECT(gbc.pc(), 0x2481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01DF
        gbc.setState(0xedf3, 0x6221, 0x52b0, 0xdfd4, 0xb4c2, 0xdafb, 0x0, 0x1);
        gbc.writeMem(0xedf3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6221);
        EXPECT(gbc.pc(), 0xedf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedf3), 0xcb);
        EXPECT(gbc.readMem(0xedf4), 0x59);
        // CB 59 01E0
        gbc.setState(0xe547, 0x5c79, 0xd070, 0x3c0f, 0x481c, 0xf710, 0x0, 0x0);
        gbc.writeMem(0xe547, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5c79);
        EXPECT(gbc.pc(), 0xe549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe547), 0xcb);
        EXPECT(gbc.readMem(0xe548), 0x59);
        // CB 59 01E1
        gbc.setState(0x6242, 0x3549, 0x7920, 0x15a1, 0x4b04, 0xacd8, 0x0, 0x0);
        gbc.writeMem(0x6242, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3549);
        EXPECT(gbc.pc(), 0x6244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01E2
        gbc.setState(0x638, 0x63a8, 0x84d0, 0x5170, 0x6fb6, 0x9b0f, 0x0, 0x1);
        gbc.writeMem(0x638, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x63a8);
        EXPECT(gbc.pc(), 0x63a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01E3
        gbc.setState(0x2a0, 0x7e22, 0xf320, 0x29c7, 0x60d2, 0xe59e, 0x1, 0x1);
        gbc.writeMem(0x2a0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7e22);
        EXPECT(gbc.pc(), 0x2a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01E4
        gbc.setState(0xb58a, 0x3e71, 0x8620, 0x35ec, 0xd093, 0x5561, 0x1, 0x0);
        gbc.writeMem(0xb58a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3e71);
        EXPECT(gbc.pc(), 0xb58c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb58a), 0xcb);
        EXPECT(gbc.readMem(0xb58b), 0x59);
        // CB 59 01E5
        gbc.setState(0x34e4, 0x3eb, 0x44a0, 0xd119, 0x7377, 0xfc47, 0x1, 0x1);
        gbc.writeMem(0x34e4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3eb);
        EXPECT(gbc.pc(), 0x34e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01E6
        gbc.setState(0xe321, 0x4411, 0x42e0, 0xa591, 0xaeb2, 0x4cd8, 0x1, 0x0);
        gbc.writeMem(0xe321, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4411);
        EXPECT(gbc.pc(), 0xe323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe321), 0xcb);
        EXPECT(gbc.readMem(0xe322), 0x59);
        // CB 59 01E7
        gbc.setState(0xb260, 0x5f1d, 0x8a20, 0x347a, 0x6999, 0xf03c, 0x1, 0x1);
        gbc.writeMem(0xb260, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5f1d);
        EXPECT(gbc.pc(), 0xb262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb260), 0xcb);
        EXPECT(gbc.readMem(0xb261), 0x59);
        // CB 59 01E8
        gbc.setState(0xef66, 0x1aa2, 0xb3a0, 0x6e10, 0x9596, 0xc6cd, 0x1, 0x0);
        gbc.writeMem(0xef66, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1aa2);
        EXPECT(gbc.pc(), 0xef68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef66), 0xcb);
        EXPECT(gbc.readMem(0xef67), 0x59);
        // CB 59 01E9
        gbc.setState(0xc441, 0x89be, 0x4e90, 0x4013, 0xe3c1, 0x127f, 0x1, 0x0);
        gbc.writeMem(0xc441, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x89be);
        EXPECT(gbc.pc(), 0xc443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc441), 0xcb);
        EXPECT(gbc.readMem(0xc442), 0x59);
        // CB 59 01EA
        gbc.setState(0x2d95, 0x45da, 0xf7e0, 0x20e3, 0xbfba, 0xecbb, 0x0, 0x1);
        gbc.writeMem(0x2d95, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x45da);
        EXPECT(gbc.pc(), 0x2d97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01EB
        gbc.setState(0xd834, 0x7d82, 0xafe0, 0xa840, 0x4746, 0xb022, 0x1, 0x1);
        gbc.writeMem(0xd834, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7d82);
        EXPECT(gbc.pc(), 0xd836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd834), 0xcb);
        EXPECT(gbc.readMem(0xd835), 0x59);
        // CB 59 01EC
        gbc.setState(0xaa4a, 0xcbf1, 0x4c40, 0x5d2, 0x6a47, 0x9337, 0x1, 0x1);
        gbc.writeMem(0xaa4a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xcbf1);
        EXPECT(gbc.pc(), 0xaa4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa4a), 0xcb);
        EXPECT(gbc.readMem(0xaa4b), 0x59);
        // CB 59 01ED
        gbc.setState(0x9814, 0x6bd2, 0xe9e0, 0xcc8, 0x317f, 0x9c86, 0x0, 0x1);
        gbc.writeMem(0x9814, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6bd2);
        EXPECT(gbc.pc(), 0x9816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9814), 0xcb);
        EXPECT(gbc.readMem(0x9815), 0x59);
        // CB 59 01EE
        gbc.setState(0xe9c3, 0x60f0, 0x1550, 0xb5f, 0x4693, 0x806f, 0x0, 0x0);
        gbc.writeMem(0xe9c3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x60f0);
        EXPECT(gbc.pc(), 0xe9c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c3), 0xcb);
        EXPECT(gbc.readMem(0xe9c4), 0x59);
        // CB 59 01EF
        gbc.setState(0x362c, 0x3934, 0x7f50, 0xeb1f, 0xd381, 0xbf17, 0x0, 0x1);
        gbc.writeMem(0x362c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3934);
        EXPECT(gbc.pc(), 0x362e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01F0
        gbc.setState(0xf66, 0x66ad, 0xe1d0, 0x2f51, 0xfbf7, 0x992, 0x1, 0x1);
        gbc.writeMem(0xf66, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x66ad);
        EXPECT(gbc.pc(), 0xf68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01F1
        gbc.setState(0xbc02, 0xad26, 0xa590, 0xad0f, 0xc764, 0x73a4, 0x0, 0x1);
        gbc.writeMem(0xbc02, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xad26);
        EXPECT(gbc.pc(), 0xbc04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc02), 0xcb);
        EXPECT(gbc.readMem(0xbc03), 0x59);
        // CB 59 01F2
        gbc.setState(0x3fca, 0x774b, 0xcad0, 0x137e, 0x59, 0xf4c5, 0x0, 0x0);
        gbc.writeMem(0x3fca, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x774b);
        EXPECT(gbc.pc(), 0x3fcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01F3
        gbc.setState(0x26f4, 0x9bd7, 0xdb80, 0x3e4a, 0x1a13, 0xba44, 0x0, 0x0);
        gbc.writeMem(0x26f4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9bd7);
        EXPECT(gbc.pc(), 0x26f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01F4
        gbc.setState(0x8f00, 0xcf1, 0xa6f0, 0xcebf, 0x5198, 0x6880, 0x0, 0x1);
        gbc.writeMem(0x8f00, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcf1);
        EXPECT(gbc.pc(), 0x8f02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f00), 0xcb);
        EXPECT(gbc.readMem(0x8f01), 0x59);
        // CB 59 01F5
        gbc.setState(0x3390, 0x5986, 0x4cf0, 0x36ec, 0xc120, 0x1742, 0x0, 0x0);
        gbc.writeMem(0x3390, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5986);
        EXPECT(gbc.pc(), 0x3392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01F6
        gbc.setState(0x3c97, 0x1ab9, 0x4430, 0xf90b, 0xdb4d, 0xd2ef, 0x0, 0x1);
        gbc.writeMem(0x3c97, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1ab9);
        EXPECT(gbc.pc(), 0x3c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01F7
        gbc.setState(0xccbd, 0xf205, 0x2570, 0xd91e, 0xbb4e, 0xbf2c, 0x1, 0x1);
        gbc.writeMem(0xccbd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf205);
        EXPECT(gbc.pc(), 0xccbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccbd), 0xcb);
        EXPECT(gbc.readMem(0xccbe), 0x59);
        // CB 59 01F8
        gbc.setState(0x257c, 0xf06f, 0x8c00, 0x4c40, 0x8a7b, 0x6620, 0x1, 0x1);
        gbc.writeMem(0x257c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf06f);
        EXPECT(gbc.pc(), 0x257e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01F9
        gbc.setState(0x8ce3, 0xca45, 0xca80, 0xcc0f, 0x89e, 0xc59f, 0x0, 0x1);
        gbc.writeMem(0x8ce3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xca45);
        EXPECT(gbc.pc(), 0x8ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce3), 0xcb);
        EXPECT(gbc.readMem(0x8ce4), 0x59);
        // CB 59 01FA
        gbc.setState(0x7c41, 0xc2f3, 0xe640, 0x92e1, 0x1776, 0x7f0c, 0x0, 0x1);
        gbc.writeMem(0x7c41, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc2f3);
        EXPECT(gbc.pc(), 0x7c43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01FB
        gbc.setState(0x47b0, 0x6d8d, 0xea40, 0x30f4, 0x50cb, 0x7cc7, 0x0, 0x0);
        gbc.writeMem(0x47b0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6d8d);
        EXPECT(gbc.pc(), 0x47b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01FC
        gbc.setState(0xb1eb, 0x6956, 0xc860, 0xd5c5, 0xa577, 0xf2b1, 0x1, 0x0);
        gbc.writeMem(0xb1eb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6956);
        EXPECT(gbc.pc(), 0xb1ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1eb), 0xcb);
        EXPECT(gbc.readMem(0xb1ec), 0x59);
        // CB 59 01FD
        gbc.setState(0x554f, 0x70af, 0x9b50, 0xcba9, 0xaa1d, 0x7ba0, 0x0, 0x1);
        gbc.writeMem(0x554f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x70af);
        EXPECT(gbc.pc(), 0x5551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 01FE
        gbc.setState(0x3c7a, 0xdc1f, 0xb7e0, 0xdaff, 0xb71c, 0x2287, 0x0, 0x0);
        gbc.writeMem(0x3c7a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xdc1f);
        EXPECT(gbc.pc(), 0x3c7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 01FF
        gbc.setState(0xdba, 0x95a0, 0xaff0, 0x10cd, 0xa901, 0x4e59, 0x0, 0x0);
        gbc.writeMem(0xdba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x95a0);
        EXPECT(gbc.pc(), 0xdbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0200
        gbc.setState(0x4ca2, 0x880d, 0x8830, 0x229b, 0x283a, 0xa2bc, 0x0, 0x1);
        gbc.writeMem(0x4ca2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x880d);
        EXPECT(gbc.pc(), 0x4ca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0201
        gbc.setState(0xad08, 0xc552, 0x6100, 0xeccb, 0xca39, 0x2a5c, 0x0, 0x1);
        gbc.writeMem(0xad08, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc552);
        EXPECT(gbc.pc(), 0xad0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad08), 0xcb);
        EXPECT(gbc.readMem(0xad09), 0x59);
        // CB 59 0202
        gbc.setState(0xaae2, 0x7fd, 0x4e00, 0x6200, 0xdcfa, 0x37fd, 0x0, 0x1);
        gbc.writeMem(0xaae2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7fd);
        EXPECT(gbc.pc(), 0xaae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaae2), 0xcb);
        EXPECT(gbc.readMem(0xaae3), 0x59);
        // CB 59 0203
        gbc.setState(0xe627, 0xee07, 0xbba0, 0x5945, 0x1d90, 0x4be8, 0x1, 0x1);
        gbc.writeMem(0xe627, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xee07);
        EXPECT(gbc.pc(), 0xe629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe627), 0xcb);
        EXPECT(gbc.readMem(0xe628), 0x59);
        // CB 59 0204
        gbc.setState(0xaeba, 0x1335, 0x1470, 0xbfd0, 0x4fe6, 0x6d4d, 0x0, 0x1);
        gbc.writeMem(0xaeba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1335);
        EXPECT(gbc.pc(), 0xaebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeba), 0xcb);
        EXPECT(gbc.readMem(0xaebb), 0x59);
        // CB 59 0205
        gbc.setState(0x8e25, 0xeb22, 0xfa40, 0xe5e5, 0x4fc3, 0x1a07, 0x1, 0x0);
        gbc.writeMem(0x8e25, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xeb22);
        EXPECT(gbc.pc(), 0x8e27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e25), 0xcb);
        EXPECT(gbc.readMem(0x8e26), 0x59);
        // CB 59 0206
        gbc.setState(0xbd8b, 0xb3b8, 0x9cc0, 0x3b89, 0xa3c5, 0x4fd, 0x1, 0x1);
        gbc.writeMem(0xbd8b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb3b8);
        EXPECT(gbc.pc(), 0xbd8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd8b), 0xcb);
        EXPECT(gbc.readMem(0xbd8c), 0x59);
        // CB 59 0207
        gbc.setState(0x139a, 0x2232, 0x42d0, 0xda4f, 0x6615, 0x3c0d, 0x0, 0x1);
        gbc.writeMem(0x139a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2232);
        EXPECT(gbc.pc(), 0x139c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0208
        gbc.setState(0x6f77, 0x942f, 0x3df0, 0x4795, 0xe115, 0x1f4c, 0x1, 0x0);
        gbc.writeMem(0x6f77, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x942f);
        EXPECT(gbc.pc(), 0x6f79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0209
        gbc.setState(0xeecd, 0x66a4, 0xde80, 0x76f6, 0xe6a9, 0x5edf, 0x1, 0x1);
        gbc.writeMem(0xeecd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x66a4);
        EXPECT(gbc.pc(), 0xeecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeecd), 0xcb);
        EXPECT(gbc.readMem(0xeece), 0x59);
        // CB 59 020A
        gbc.setState(0xe0b4, 0x5e6d, 0xbe90, 0x96c7, 0x74fd, 0x95a7, 0x0, 0x1);
        gbc.writeMem(0xe0b4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5e6d);
        EXPECT(gbc.pc(), 0xe0b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b4), 0xcb);
        EXPECT(gbc.readMem(0xe0b5), 0x59);
        // CB 59 020B
        gbc.setState(0x1455, 0xc750, 0x5550, 0x9ccd, 0x6649, 0x53bc, 0x1, 0x1);
        gbc.writeMem(0x1455, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc750);
        EXPECT(gbc.pc(), 0x1457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 020C
        gbc.setState(0x7ee2, 0x6ba3, 0x4bd0, 0x45fa, 0xd387, 0xce79, 0x0, 0x0);
        gbc.writeMem(0x7ee2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6ba3);
        EXPECT(gbc.pc(), 0x7ee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 020D
        gbc.setState(0xb4fe, 0xb15d, 0x4a00, 0xcec8, 0x756, 0x57ca, 0x1, 0x1);
        gbc.writeMem(0xb4fe, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb15d);
        EXPECT(gbc.pc(), 0xb500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4fe), 0xcb);
        EXPECT(gbc.readMem(0xb4ff), 0x59);
        // CB 59 020E
        gbc.setState(0xd4e4, 0x363, 0xe650, 0xe56e, 0x3f13, 0x2b03, 0x1, 0x1);
        gbc.writeMem(0xd4e4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x363);
        EXPECT(gbc.pc(), 0xd4e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4e4), 0xcb);
        EXPECT(gbc.readMem(0xd4e5), 0x59);
        // CB 59 020F
        gbc.setState(0xb752, 0xaad5, 0xe1b0, 0x6553, 0x803e, 0x71dd, 0x0, 0x0);
        gbc.writeMem(0xb752, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xaad5);
        EXPECT(gbc.pc(), 0xb754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb752), 0xcb);
        EXPECT(gbc.readMem(0xb753), 0x59);
        // CB 59 0210
        gbc.setState(0x4492, 0x84f0, 0xb220, 0x76e2, 0x6808, 0xbe9c, 0x1, 0x0);
        gbc.writeMem(0x4492, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x84f0);
        EXPECT(gbc.pc(), 0x4494);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0211
        gbc.setState(0xede5, 0xba4b, 0xf640, 0x8dca, 0x6c54, 0x6a7d, 0x1, 0x1);
        gbc.writeMem(0xede5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xba4b);
        EXPECT(gbc.pc(), 0xede7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede5), 0xcb);
        EXPECT(gbc.readMem(0xede6), 0x59);
        // CB 59 0212
        gbc.setState(0x2a4a, 0x9c38, 0xc570, 0x8c3d, 0xa214, 0xd6d5, 0x1, 0x0);
        gbc.writeMem(0x2a4a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9c38);
        EXPECT(gbc.pc(), 0x2a4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0213
        gbc.setState(0x2f7c, 0xa63a, 0x4a60, 0x1b20, 0xb81f, 0x310a, 0x1, 0x1);
        gbc.writeMem(0x2f7c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa63a);
        EXPECT(gbc.pc(), 0x2f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0214
        gbc.setState(0xac2c, 0x42a4, 0x5ba0, 0xef63, 0x5e00, 0xb4bd, 0x0, 0x1);
        gbc.writeMem(0xac2c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x42a4);
        EXPECT(gbc.pc(), 0xac2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac2c), 0xcb);
        EXPECT(gbc.readMem(0xac2d), 0x59);
        // CB 59 0215
        gbc.setState(0x5fbf, 0xe8d2, 0x77e0, 0x6522, 0x51a5, 0x8ea5, 0x1, 0x1);
        gbc.writeMem(0x5fbf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe8d2);
        EXPECT(gbc.pc(), 0x5fc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0216
        gbc.setState(0x2271, 0x1519, 0x9000, 0x62fd, 0xe1f3, 0x59e7, 0x0, 0x1);
        gbc.writeMem(0x2271, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1519);
        EXPECT(gbc.pc(), 0x2273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0217
        gbc.setState(0x931c, 0xa805, 0xbc80, 0xe227, 0x809, 0xf884, 0x0, 0x0);
        gbc.writeMem(0x931c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa805);
        EXPECT(gbc.pc(), 0x931e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x931c), 0xcb);
        EXPECT(gbc.readMem(0x931d), 0x59);
        // CB 59 0219
        gbc.setState(0xc711, 0xfe37, 0x3b70, 0x6ad0, 0xb5db, 0x473d, 0x1, 0x1);
        gbc.writeMem(0xc711, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xfe37);
        EXPECT(gbc.pc(), 0xc713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc711), 0xcb);
        EXPECT(gbc.readMem(0xc712), 0x59);
        // CB 59 021A
        gbc.setState(0x5b1c, 0xe05a, 0xba00, 0x143d, 0x1797, 0xabbe, 0x1, 0x1);
        gbc.writeMem(0x5b1c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe05a);
        EXPECT(gbc.pc(), 0x5b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 021B
        gbc.setState(0x40a7, 0x9098, 0x5fe0, 0x2e13, 0x66bc, 0xe8db, 0x0, 0x0);
        gbc.writeMem(0x40a7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9098);
        EXPECT(gbc.pc(), 0x40a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 021D
        gbc.setState(0x4e23, 0x7f67, 0x96f0, 0xe0d2, 0xb344, 0x6309, 0x1, 0x0);
        gbc.writeMem(0x4e23, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7f67);
        EXPECT(gbc.pc(), 0x4e25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 021E
        gbc.setState(0x910e, 0xc4f9, 0xcc10, 0xd2e9, 0xbeb2, 0xd3ce, 0x1, 0x0);
        gbc.writeMem(0x910e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc4f9);
        EXPECT(gbc.pc(), 0x9110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x910e), 0xcb);
        EXPECT(gbc.readMem(0x910f), 0x59);
        // CB 59 0220
        gbc.setState(0xd89b, 0x967b, 0x60e0, 0xb392, 0xfffb, 0xab7a, 0x1, 0x0);
        gbc.writeMem(0xd89b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x967b);
        EXPECT(gbc.pc(), 0xd89d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd89b), 0xcb);
        EXPECT(gbc.readMem(0xd89c), 0x59);
        // CB 59 0221
        gbc.setState(0xe7f7, 0x4ca, 0x4140, 0x23cf, 0x9ca6, 0x74c3, 0x1, 0x0);
        gbc.writeMem(0xe7f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4ca);
        EXPECT(gbc.pc(), 0xe7f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f7), 0xcb);
        EXPECT(gbc.readMem(0xe7f8), 0x59);
        // CB 59 0222
        gbc.setState(0xed15, 0xe968, 0xb240, 0xe717, 0x172e, 0xecbc, 0x0, 0x1);
        gbc.writeMem(0xed15, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe968);
        EXPECT(gbc.pc(), 0xed17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed15), 0xcb);
        EXPECT(gbc.readMem(0xed16), 0x59);
        // CB 59 0223
        gbc.setState(0x5262, 0x59dd, 0x8d80, 0xa129, 0x917d, 0xd911, 0x0, 0x0);
        gbc.writeMem(0x5262, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x59dd);
        EXPECT(gbc.pc(), 0x5264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0224
        gbc.setState(0x2e6d, 0xe0c2, 0x41b0, 0x2c4d, 0x6315, 0x3bdf, 0x1, 0x0);
        gbc.writeMem(0x2e6d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe0c2);
        EXPECT(gbc.pc(), 0x2e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0225
        gbc.setState(0xeab9, 0x8cfc, 0x6dc0, 0x10d7, 0x4cb3, 0x911d, 0x0, 0x1);
        gbc.writeMem(0xeab9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8cfc);
        EXPECT(gbc.pc(), 0xeabb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeab9), 0xcb);
        EXPECT(gbc.readMem(0xeaba), 0x59);
        // CB 59 0226
        gbc.setState(0x82ce, 0x690c, 0xbb00, 0x9f4f, 0xaad1, 0xfe6a, 0x1, 0x1);
        gbc.writeMem(0x82ce, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x690c);
        EXPECT(gbc.pc(), 0x82d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ce), 0xcb);
        EXPECT(gbc.readMem(0x82cf), 0x59);
        // CB 59 0227
        gbc.setState(0x4ce9, 0x946, 0x6550, 0xc735, 0x9f97, 0xcc5e, 0x1, 0x0);
        gbc.writeMem(0x4ce9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x946);
        EXPECT(gbc.pc(), 0x4ceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0228
        gbc.setState(0x17d7, 0xb628, 0x17e0, 0xa2e0, 0x868f, 0xa880, 0x1, 0x0);
        gbc.writeMem(0x17d7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb628);
        EXPECT(gbc.pc(), 0x17d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0229
        gbc.setState(0x2f09, 0x5ab0, 0xf9c0, 0x44e7, 0x233e, 0xe555, 0x0, 0x0);
        gbc.writeMem(0x2f09, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5ab0);
        EXPECT(gbc.pc(), 0x2f0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 022A
        gbc.setState(0xadba, 0x8f8e, 0x8410, 0x7ff6, 0x61d9, 0x2657, 0x0, 0x1);
        gbc.writeMem(0xadba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8f8e);
        EXPECT(gbc.pc(), 0xadbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadba), 0xcb);
        EXPECT(gbc.readMem(0xadbb), 0x59);
        // CB 59 022B
        gbc.setState(0x46f3, 0x416f, 0x9640, 0x37ae, 0xe8a3, 0xab0c, 0x0, 0x1);
        gbc.writeMem(0x46f3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x416f);
        EXPECT(gbc.pc(), 0x46f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 022C
        gbc.setState(0xb4fb, 0x59d3, 0x1520, 0x73ed, 0x8825, 0xfd9e, 0x0, 0x0);
        gbc.writeMem(0xb4fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x59d3);
        EXPECT(gbc.pc(), 0xb4fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4fb), 0xcb);
        EXPECT(gbc.readMem(0xb4fc), 0x59);
        // CB 59 022D
        gbc.setState(0x21ce, 0x9ae5, 0x53b0, 0x661, 0xfbee, 0xda04, 0x0, 0x1);
        gbc.writeMem(0x21ce, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9ae5);
        EXPECT(gbc.pc(), 0x21d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 022E
        gbc.setState(0xbb42, 0xbae7, 0xa400, 0xd216, 0xe5d6, 0x95ea, 0x0, 0x1);
        gbc.writeMem(0xbb42, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbae7);
        EXPECT(gbc.pc(), 0xbb44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb42), 0xcb);
        EXPECT(gbc.readMem(0xbb43), 0x59);
        // CB 59 022F
        gbc.setState(0xa6c8, 0x3ac5, 0xe160, 0x7f20, 0xd63b, 0xab6b, 0x1, 0x0);
        gbc.writeMem(0xa6c8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3ac5);
        EXPECT(gbc.pc(), 0xa6ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c8), 0xcb);
        EXPECT(gbc.readMem(0xa6c9), 0x59);
        // CB 59 0230
        gbc.setState(0x158f, 0xc93d, 0xac40, 0x94ce, 0x97b6, 0x1671, 0x1, 0x1);
        gbc.writeMem(0x158f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc93d);
        EXPECT(gbc.pc(), 0x1591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0231
        gbc.setState(0xb958, 0x8f05, 0xb240, 0x269e, 0x28e2, 0x310d, 0x1, 0x1);
        gbc.writeMem(0xb958, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8f05);
        EXPECT(gbc.pc(), 0xb95a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb958), 0xcb);
        EXPECT(gbc.readMem(0xb959), 0x59);
        // CB 59 0233
        gbc.setState(0xe865, 0xfe11, 0x980, 0x5e51, 0xe25a, 0x10f7, 0x1, 0x1);
        gbc.writeMem(0xe865, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfe11);
        EXPECT(gbc.pc(), 0xe867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe865), 0xcb);
        EXPECT(gbc.readMem(0xe866), 0x59);
        // CB 59 0234
        gbc.setState(0xba7c, 0x9b66, 0xa7c0, 0xd198, 0x441d, 0x3bc, 0x0, 0x0);
        gbc.writeMem(0xba7c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9b66);
        EXPECT(gbc.pc(), 0xba7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba7c), 0xcb);
        EXPECT(gbc.readMem(0xba7d), 0x59);
        // CB 59 0235
        gbc.setState(0x9543, 0x7965, 0x7830, 0x1310, 0xb407, 0x17e6, 0x0, 0x1);
        gbc.writeMem(0x9543, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7965);
        EXPECT(gbc.pc(), 0x9545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9543), 0xcb);
        EXPECT(gbc.readMem(0x9544), 0x59);
        // CB 59 0236
        gbc.setState(0x2404, 0x65d5, 0x2650, 0x6189, 0x77a1, 0xac98, 0x1, 0x1);
        gbc.writeMem(0x2404, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x65d5);
        EXPECT(gbc.pc(), 0x2406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0237
        gbc.setState(0xc76f, 0xde85, 0x2340, 0x5823, 0xc47b, 0x3710, 0x0, 0x0);
        gbc.writeMem(0xc76f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xde85);
        EXPECT(gbc.pc(), 0xc771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc76f), 0xcb);
        EXPECT(gbc.readMem(0xc770), 0x59);
        // CB 59 0238
        gbc.setState(0x65d7, 0xc6d4, 0x2930, 0x83f1, 0x9e95, 0x34f5, 0x0, 0x0);
        gbc.writeMem(0x65d7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc6d4);
        EXPECT(gbc.pc(), 0x65d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0239
        gbc.setState(0xd1f9, 0x67d0, 0x8190, 0xf195, 0x9628, 0xf211, 0x0, 0x0);
        gbc.writeMem(0xd1f9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x67d0);
        EXPECT(gbc.pc(), 0xd1fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1f9), 0xcb);
        EXPECT(gbc.readMem(0xd1fa), 0x59);
        // CB 59 023A
        gbc.setState(0xe321, 0x8f2a, 0xe550, 0x11c8, 0xcb3, 0xce4b, 0x0, 0x1);
        gbc.writeMem(0xe321, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8f2a);
        EXPECT(gbc.pc(), 0xe323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe321), 0xcb);
        EXPECT(gbc.readMem(0xe322), 0x59);
        // CB 59 023B
        gbc.setState(0x4c6, 0x2e5b, 0x84f0, 0x9d4b, 0xcee4, 0x737d, 0x1, 0x1);
        gbc.writeMem(0x4c6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2e5b);
        EXPECT(gbc.pc(), 0x4c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 023C
        gbc.setState(0x1ba7, 0x77b4, 0x490, 0xac77, 0xf522, 0xaaeb, 0x0, 0x1);
        gbc.writeMem(0x1ba7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x77b4);
        EXPECT(gbc.pc(), 0x1ba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 023D
        gbc.setState(0x25db, 0x973b, 0x83a0, 0xde8f, 0x533e, 0x1410, 0x0, 0x0);
        gbc.writeMem(0x25db, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x973b);
        EXPECT(gbc.pc(), 0x25dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 023E
        gbc.setState(0x5632, 0x828a, 0xe530, 0x8a5e, 0x31d4, 0x955b, 0x0, 0x0);
        gbc.writeMem(0x5632, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x828a);
        EXPECT(gbc.pc(), 0x5634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 023F
        gbc.setState(0x429e, 0x4ebf, 0xa630, 0x6e4a, 0xcae8, 0x783d, 0x0, 0x0);
        gbc.writeMem(0x429e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4ebf);
        EXPECT(gbc.pc(), 0x42a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0240
        gbc.setState(0xd045, 0x8764, 0xf720, 0xf99, 0xd717, 0xf130, 0x0, 0x0);
        gbc.writeMem(0xd045, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8764);
        EXPECT(gbc.pc(), 0xd047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd045), 0xcb);
        EXPECT(gbc.readMem(0xd046), 0x59);
        // CB 59 0241
        gbc.setState(0x5c2, 0xf7aa, 0xcd50, 0x134d, 0x746, 0x252d, 0x1, 0x0);
        gbc.writeMem(0x5c2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf7aa);
        EXPECT(gbc.pc(), 0x5c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0242
        gbc.setState(0x148d, 0x762a, 0x36e0, 0xccf1, 0xebff, 0x5317, 0x0, 0x0);
        gbc.writeMem(0x148d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x762a);
        EXPECT(gbc.pc(), 0x148f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0243
        gbc.setState(0x2766, 0x9631, 0xce0, 0xbde3, 0xfe3d, 0xb1d3, 0x1, 0x1);
        gbc.writeMem(0x2766, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9631);
        EXPECT(gbc.pc(), 0x2768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0244
        gbc.setState(0x4f53, 0x1af6, 0x5a90, 0x98b, 0x94f1, 0x4079, 0x1, 0x0);
        gbc.writeMem(0x4f53, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1af6);
        EXPECT(gbc.pc(), 0x4f55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0245
        gbc.setState(0x9cd3, 0x53e1, 0x2950, 0xb331, 0xf8b5, 0x8cd9, 0x1, 0x0);
        gbc.writeMem(0x9cd3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x53e1);
        EXPECT(gbc.pc(), 0x9cd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cd3), 0xcb);
        EXPECT(gbc.readMem(0x9cd4), 0x59);
        // CB 59 0246
        gbc.setState(0x1688, 0x5e4b, 0x34f0, 0xfb42, 0x86be, 0x5b17, 0x0, 0x1);
        gbc.writeMem(0x1688, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5e4b);
        EXPECT(gbc.pc(), 0x168a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0247
        gbc.setState(0xdfb7, 0xe9f2, 0x58b0, 0xe988, 0xe0d3, 0x2696, 0x0, 0x0);
        gbc.writeMem(0xdfb7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe9f2);
        EXPECT(gbc.pc(), 0xdfb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfb7), 0xcb);
        EXPECT(gbc.readMem(0xdfb8), 0x59);
        // CB 59 0248
        gbc.setState(0x28c2, 0x79db, 0xf10, 0x32f7, 0x5ddd, 0x53eb, 0x0, 0x1);
        gbc.writeMem(0x28c2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x79db);
        EXPECT(gbc.pc(), 0x28c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 024A
        gbc.setState(0x4354, 0xf682, 0xb610, 0xe64d, 0x18f7, 0xc795, 0x1, 0x1);
        gbc.writeMem(0x4354, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf682);
        EXPECT(gbc.pc(), 0x4356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 024B
        gbc.setState(0xd123, 0xedd7, 0xb6f0, 0xf22b, 0x2ae1, 0x18af, 0x1, 0x0);
        gbc.writeMem(0xd123, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xedd7);
        EXPECT(gbc.pc(), 0xd125);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd123), 0xcb);
        EXPECT(gbc.readMem(0xd124), 0x59);
        // CB 59 024C
        gbc.setState(0xea7e, 0x4100, 0xd040, 0xd1aa, 0xa356, 0xca3c, 0x1, 0x0);
        gbc.writeMem(0xea7e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4100);
        EXPECT(gbc.pc(), 0xea80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea7e), 0xcb);
        EXPECT(gbc.readMem(0xea7f), 0x59);
        // CB 59 024D
        gbc.setState(0xee83, 0x8ec7, 0x2be0, 0x8973, 0x8431, 0x6fb5, 0x0, 0x1);
        gbc.writeMem(0xee83, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8ec7);
        EXPECT(gbc.pc(), 0xee85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee83), 0xcb);
        EXPECT(gbc.readMem(0xee84), 0x59);
        // CB 59 024E
        gbc.setState(0x69d4, 0x7ca, 0x8360, 0x1b14, 0x8ca9, 0x2a89, 0x1, 0x1);
        gbc.writeMem(0x69d4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7ca);
        EXPECT(gbc.pc(), 0x69d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 024F
        gbc.setState(0xac19, 0xd312, 0x8df0, 0x9bf8, 0xac1d, 0x6929, 0x0, 0x0);
        gbc.writeMem(0xac19, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd312);
        EXPECT(gbc.pc(), 0xac1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac19), 0xcb);
        EXPECT(gbc.readMem(0xac1a), 0x59);
        // CB 59 0250
        gbc.setState(0x5435, 0x3dd4, 0x5830, 0x2f8a, 0x5199, 0x583d, 0x0, 0x1);
        gbc.writeMem(0x5435, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3dd4);
        EXPECT(gbc.pc(), 0x5437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0251
        gbc.setState(0xd21, 0x4791, 0xab50, 0xe517, 0xbf1f, 0x774f, 0x1, 0x0);
        gbc.writeMem(0xd21, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4791);
        EXPECT(gbc.pc(), 0xd23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0252
        gbc.setState(0x3606, 0x25da, 0x1540, 0x3b5a, 0x4946, 0x71af, 0x1, 0x0);
        gbc.writeMem(0x3606, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x25da);
        EXPECT(gbc.pc(), 0x3608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0253
        gbc.setState(0xd76a, 0x7b5b, 0xe40, 0x8665, 0xfe86, 0x1296, 0x0, 0x0);
        gbc.writeMem(0xd76a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7b5b);
        EXPECT(gbc.pc(), 0xd76c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd76a), 0xcb);
        EXPECT(gbc.readMem(0xd76b), 0x59);
        // CB 59 0254
        gbc.setState(0x8b71, 0x3a06, 0x96e0, 0x1eae, 0xe1a9, 0x7829, 0x0, 0x1);
        gbc.writeMem(0x8b71, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3a06);
        EXPECT(gbc.pc(), 0x8b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b71), 0xcb);
        EXPECT(gbc.readMem(0x8b72), 0x59);
        // CB 59 0255
        gbc.setState(0x9f88, 0x2b26, 0x1d0, 0x33b, 0x4ba4, 0x8e81, 0x1, 0x0);
        gbc.writeMem(0x9f88, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2b26);
        EXPECT(gbc.pc(), 0x9f8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f88), 0xcb);
        EXPECT(gbc.readMem(0x9f89), 0x59);
        // CB 59 0256
        gbc.setState(0xe4ac, 0xb63a, 0x8160, 0x3b14, 0xac3e, 0xa4e7, 0x0, 0x0);
        gbc.writeMem(0xe4ac, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb63a);
        EXPECT(gbc.pc(), 0xe4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ac), 0xcb);
        EXPECT(gbc.readMem(0xe4ad), 0x59);
        // CB 59 0257
        gbc.setState(0x6e8e, 0xad6c, 0x3860, 0x93ff, 0x4cf7, 0x6443, 0x0, 0x0);
        gbc.writeMem(0x6e8e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xad6c);
        EXPECT(gbc.pc(), 0x6e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0258
        gbc.setState(0x61ec, 0xedb8, 0xbde0, 0x13fa, 0x5953, 0xa87, 0x1, 0x0);
        gbc.writeMem(0x61ec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xedb8);
        EXPECT(gbc.pc(), 0x61ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0259
        gbc.setState(0xbe14, 0x62c0, 0x3260, 0xba5f, 0x70b2, 0x5f1d, 0x0, 0x1);
        gbc.writeMem(0xbe14, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x62c0);
        EXPECT(gbc.pc(), 0xbe16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe14), 0xcb);
        EXPECT(gbc.readMem(0xbe15), 0x59);
        // CB 59 025A
        gbc.setState(0x45b5, 0xfb98, 0xd140, 0xb433, 0x1c80, 0x5308, 0x0, 0x1);
        gbc.writeMem(0x45b5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xfb98);
        EXPECT(gbc.pc(), 0x45b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 025B
        gbc.setState(0xda9c, 0x5084, 0x8e10, 0x633, 0x6e60, 0x2a5e, 0x1, 0x0);
        gbc.writeMem(0xda9c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5084);
        EXPECT(gbc.pc(), 0xda9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda9c), 0xcb);
        EXPECT(gbc.readMem(0xda9d), 0x59);
        // CB 59 025C
        gbc.setState(0xb5ab, 0x3de9, 0x1c40, 0xfe90, 0x37e3, 0xdd2f, 0x1, 0x1);
        gbc.writeMem(0xb5ab, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3de9);
        EXPECT(gbc.pc(), 0xb5ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ab), 0xcb);
        EXPECT(gbc.readMem(0xb5ac), 0x59);
        // CB 59 025D
        gbc.setState(0x9255, 0x2980, 0xbc80, 0x4b62, 0x33fc, 0x6088, 0x1, 0x1);
        gbc.writeMem(0x9255, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2980);
        EXPECT(gbc.pc(), 0x9257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9255), 0xcb);
        EXPECT(gbc.readMem(0x9256), 0x59);
        // CB 59 025E
        gbc.setState(0xd9e5, 0x7040, 0xdaa0, 0x3e35, 0x549e, 0x6a50, 0x1, 0x0);
        gbc.writeMem(0xd9e5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7040);
        EXPECT(gbc.pc(), 0xd9e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9e5), 0xcb);
        EXPECT(gbc.readMem(0xd9e6), 0x59);
        // CB 59 025F
        gbc.setState(0x356, 0xb847, 0xd000, 0x7021, 0x59c6, 0xffd7, 0x0, 0x0);
        gbc.writeMem(0x356, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb847);
        EXPECT(gbc.pc(), 0x358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0260
        gbc.setState(0x4fb2, 0xeb1b, 0xc2a0, 0xb289, 0x61bc, 0x2ee7, 0x1, 0x0);
        gbc.writeMem(0x4fb2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xeb1b);
        EXPECT(gbc.pc(), 0x4fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0262
        gbc.setState(0x62f8, 0xf4d1, 0x4d80, 0xdf5, 0xbc9a, 0xe5cd, 0x0, 0x1);
        gbc.writeMem(0x62f8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf4d1);
        EXPECT(gbc.pc(), 0x62fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0263
        gbc.setState(0x43cf, 0xfebc, 0xeba0, 0x6bbb, 0x561a, 0xa1c1, 0x1, 0x1);
        gbc.writeMem(0x43cf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xfebc);
        EXPECT(gbc.pc(), 0x43d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0264
        gbc.setState(0xb464, 0xf7cb, 0x7450, 0x9017, 0x6348, 0xb2d4, 0x0, 0x1);
        gbc.writeMem(0xb464, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf7cb);
        EXPECT(gbc.pc(), 0xb466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb464), 0xcb);
        EXPECT(gbc.readMem(0xb465), 0x59);
        // CB 59 0265
        gbc.setState(0xc078, 0x1f01, 0xbbc0, 0x1e2b, 0x4c02, 0x4dc5, 0x1, 0x0);
        gbc.writeMem(0xc078, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1f01);
        EXPECT(gbc.pc(), 0xc07a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc078), 0xcb);
        EXPECT(gbc.readMem(0xc079), 0x59);
        // CB 59 0266
        gbc.setState(0x6e85, 0xa705, 0x8f00, 0x6624, 0xed9a, 0x7746, 0x0, 0x0);
        gbc.writeMem(0x6e85, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa705);
        EXPECT(gbc.pc(), 0x6e87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0267
        gbc.setState(0xcdb0, 0xf8d4, 0xcc0, 0x7b7, 0x593, 0x4362, 0x1, 0x1);
        gbc.writeMem(0xcdb0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf8d4);
        EXPECT(gbc.pc(), 0xcdb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb0), 0xcb);
        EXPECT(gbc.readMem(0xcdb1), 0x59);
        // CB 59 0268
        gbc.setState(0x591a, 0xa208, 0x2850, 0xcc0b, 0x3c93, 0xda3f, 0x0, 0x0);
        gbc.writeMem(0x591a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa208);
        EXPECT(gbc.pc(), 0x591c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0269
        gbc.setState(0x15cb, 0x3b1b, 0x5680, 0x94d, 0x352c, 0x559b, 0x1, 0x1);
        gbc.writeMem(0x15cb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3b1b);
        EXPECT(gbc.pc(), 0x15cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 026A
        gbc.setState(0x8766, 0xc96e, 0x3a80, 0x52e0, 0xa157, 0x1ce8, 0x1, 0x1);
        gbc.writeMem(0x8766, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc96e);
        EXPECT(gbc.pc(), 0x8768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8766), 0xcb);
        EXPECT(gbc.readMem(0x8767), 0x59);
        // CB 59 026C
        gbc.setState(0xeae6, 0x3d89, 0x5200, 0xb124, 0x1af7, 0x69ca, 0x0, 0x1);
        gbc.writeMem(0xeae6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3d89);
        EXPECT(gbc.pc(), 0xeae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeae6), 0xcb);
        EXPECT(gbc.readMem(0xeae7), 0x59);
        // CB 59 026D
        gbc.setState(0x306, 0x1c10, 0xcd30, 0xb790, 0xb992, 0xb8ae, 0x1, 0x0);
        gbc.writeMem(0x306, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1c10);
        EXPECT(gbc.pc(), 0x308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 026E
        gbc.setState(0xa517, 0x73f9, 0x9490, 0x5a90, 0x46d2, 0x7eae, 0x0, 0x0);
        gbc.writeMem(0xa517, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x73f9);
        EXPECT(gbc.pc(), 0xa519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa517), 0xcb);
        EXPECT(gbc.readMem(0xa518), 0x59);
        // CB 59 026F
        gbc.setState(0x7b4, 0xb4ee, 0x2c30, 0x21cf, 0x2b66, 0xa2f6, 0x1, 0x0);
        gbc.writeMem(0x7b4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb4ee);
        EXPECT(gbc.pc(), 0x7b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0270
        gbc.setState(0x18f8, 0x21dc, 0xbdd0, 0x3f02, 0x4c3f, 0xdf1f, 0x0, 0x0);
        gbc.writeMem(0x18f8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x21dc);
        EXPECT(gbc.pc(), 0x18fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0271
        gbc.setState(0x1c1c, 0x96a1, 0xeb20, 0xc7d3, 0x860d, 0x9423, 0x1, 0x0);
        gbc.writeMem(0x1c1c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x96a1);
        EXPECT(gbc.pc(), 0x1c1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0272
        gbc.setState(0xb6e4, 0xb6bd, 0x3ba0, 0xed58, 0x1238, 0xf0e9, 0x0, 0x1);
        gbc.writeMem(0xb6e4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb6bd);
        EXPECT(gbc.pc(), 0xb6e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6e4), 0xcb);
        EXPECT(gbc.readMem(0xb6e5), 0x59);
        // CB 59 0273
        gbc.setState(0xbea2, 0xc6df, 0x39f0, 0xc89d, 0x18b2, 0xf038, 0x1, 0x0);
        gbc.writeMem(0xbea2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc6df);
        EXPECT(gbc.pc(), 0xbea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbea2), 0xcb);
        EXPECT(gbc.readMem(0xbea3), 0x59);
        // CB 59 0274
        gbc.setState(0x922d, 0xbfc7, 0x4170, 0x47f5, 0x514e, 0x6c44, 0x0, 0x0);
        gbc.writeMem(0x922d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbfc7);
        EXPECT(gbc.pc(), 0x922f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922d), 0xcb);
        EXPECT(gbc.readMem(0x922e), 0x59);
        // CB 59 0275
        gbc.setState(0x11f7, 0xf481, 0xf3a0, 0x3494, 0xe42e, 0xe344, 0x0, 0x1);
        gbc.writeMem(0x11f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf481);
        EXPECT(gbc.pc(), 0x11f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0276
        gbc.setState(0x6de7, 0x69c5, 0x90f0, 0x52a3, 0x22f1, 0xee68, 0x0, 0x0);
        gbc.writeMem(0x6de7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x69c5);
        EXPECT(gbc.pc(), 0x6de9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0277
        gbc.setState(0xae09, 0xb148, 0xb200, 0xd4a5, 0x1c6c, 0x68a0, 0x1, 0x0);
        gbc.writeMem(0xae09, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb148);
        EXPECT(gbc.pc(), 0xae0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae09), 0xcb);
        EXPECT(gbc.readMem(0xae0a), 0x59);
        // CB 59 0278
        gbc.setState(0xcb64, 0xe3d0, 0x8ae0, 0x5d31, 0xbd7e, 0xb65b, 0x1, 0x0);
        gbc.writeMem(0xcb64, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe3d0);
        EXPECT(gbc.pc(), 0xcb66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb64), 0xcb);
        EXPECT(gbc.readMem(0xcb65), 0x59);
        // CB 59 0279
        gbc.setState(0xcb53, 0xd183, 0x5420, 0xe811, 0xdbe1, 0x8dc, 0x0, 0x0);
        gbc.writeMem(0xcb53, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd183);
        EXPECT(gbc.pc(), 0xcb55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb53), 0xcb);
        EXPECT(gbc.readMem(0xcb54), 0x59);
        // CB 59 027A
        gbc.setState(0xef19, 0x9b3, 0x3d50, 0xf4d2, 0x2421, 0xd846, 0x0, 0x1);
        gbc.writeMem(0xef19, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9b3);
        EXPECT(gbc.pc(), 0xef1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef19), 0xcb);
        EXPECT(gbc.readMem(0xef1a), 0x59);
        // CB 59 027B
        gbc.setState(0x5b0c, 0xf8a5, 0x3f10, 0xc0ae, 0x9053, 0xceae, 0x1, 0x1);
        gbc.writeMem(0x5b0c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf8a5);
        EXPECT(gbc.pc(), 0x5b0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 027C
        gbc.setState(0xa06f, 0xc632, 0x3480, 0x56f7, 0x60a4, 0x953, 0x1, 0x0);
        gbc.writeMem(0xa06f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc632);
        EXPECT(gbc.pc(), 0xa071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa06f), 0xcb);
        EXPECT(gbc.readMem(0xa070), 0x59);
        // CB 59 027D
        gbc.setState(0x40b8, 0x4acb, 0x99a0, 0x8b89, 0x6a3e, 0xb3d8, 0x1, 0x1);
        gbc.writeMem(0x40b8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4acb);
        EXPECT(gbc.pc(), 0x40ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 027E
        gbc.setState(0xc9a5, 0x15c1, 0xffa0, 0x2529, 0x3197, 0x5166, 0x1, 0x1);
        gbc.writeMem(0xc9a5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x15c1);
        EXPECT(gbc.pc(), 0xc9a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a5), 0xcb);
        EXPECT(gbc.readMem(0xc9a6), 0x59);
        // CB 59 027F
        gbc.setState(0xb72c, 0x2fd, 0x6f90, 0xc648, 0x8302, 0xb8ab, 0x1, 0x0);
        gbc.writeMem(0xb72c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2fd);
        EXPECT(gbc.pc(), 0xb72e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb72c), 0xcb);
        EXPECT(gbc.readMem(0xb72d), 0x59);
        // CB 59 0280
        gbc.setState(0xab1c, 0xdb91, 0x7480, 0xfb04, 0x8fb6, 0x6440, 0x1, 0x0);
        gbc.writeMem(0xab1c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xdb91);
        EXPECT(gbc.pc(), 0xab1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab1c), 0xcb);
        EXPECT(gbc.readMem(0xab1d), 0x59);
        // CB 59 0281
        gbc.setState(0xd1de, 0xab4b, 0x730, 0x6226, 0x32ef, 0x404, 0x0, 0x1);
        gbc.writeMem(0xd1de, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xab4b);
        EXPECT(gbc.pc(), 0xd1e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1de), 0xcb);
        EXPECT(gbc.readMem(0xd1df), 0x59);
        // CB 59 0282
        gbc.setState(0x3b2, 0x3a0e, 0x2c70, 0x2b9a, 0xc35f, 0x5cc2, 0x1, 0x0);
        gbc.writeMem(0x3b2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3a0e);
        EXPECT(gbc.pc(), 0x3b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0283
        gbc.setState(0x57f5, 0xdd17, 0x18c0, 0x3e57, 0x2c7d, 0x95c0, 0x0, 0x0);
        gbc.writeMem(0x57f5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xdd17);
        EXPECT(gbc.pc(), 0x57f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0284
        gbc.setState(0x4cb8, 0xf116, 0x4ea0, 0x6d53, 0x88d1, 0xbb26, 0x0, 0x0);
        gbc.writeMem(0x4cb8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf116);
        EXPECT(gbc.pc(), 0x4cba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0285
        gbc.setState(0x543e, 0x2872, 0x4870, 0xd23f, 0x817c, 0xf64a, 0x0, 0x0);
        gbc.writeMem(0x543e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2872);
        EXPECT(gbc.pc(), 0x5440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0287
        gbc.setState(0xafe3, 0x453f, 0x260, 0x537f, 0xa2b7, 0x30a8, 0x0, 0x0);
        gbc.writeMem(0xafe3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x453f);
        EXPECT(gbc.pc(), 0xafe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafe3), 0xcb);
        EXPECT(gbc.readMem(0xafe4), 0x59);
        // CB 59 0288
        gbc.setState(0x14ff, 0x8e76, 0xc860, 0xd30, 0xaf3c, 0x5eb9, 0x0, 0x0);
        gbc.writeMem(0x14ff, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8e76);
        EXPECT(gbc.pc(), 0x1501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0289
        gbc.setState(0x747, 0x74a5, 0x1ab0, 0x96f1, 0x44a2, 0x50c7, 0x0, 0x0);
        gbc.writeMem(0x747, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x74a5);
        EXPECT(gbc.pc(), 0x749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 028A
        gbc.setState(0x965d, 0x1231, 0xf870, 0xf98f, 0x7f5a, 0x44d2, 0x0, 0x1);
        gbc.writeMem(0x965d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1231);
        EXPECT(gbc.pc(), 0x965f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x965d), 0xcb);
        EXPECT(gbc.readMem(0x965e), 0x59);
        // CB 59 028B
        gbc.setState(0x9232, 0x2eaa, 0x3f00, 0x73a3, 0x86ba, 0xd023, 0x1, 0x0);
        gbc.writeMem(0x9232, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2eaa);
        EXPECT(gbc.pc(), 0x9234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9232), 0xcb);
        EXPECT(gbc.readMem(0x9233), 0x59);
        // CB 59 028C
        gbc.setState(0x24eb, 0xfac0, 0xd5f0, 0x9c4d, 0x93dc, 0xd01f, 0x1, 0x0);
        gbc.writeMem(0x24eb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfac0);
        EXPECT(gbc.pc(), 0x24ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 028D
        gbc.setState(0xe454, 0x1da2, 0x5190, 0x5a50, 0x373d, 0xb69c, 0x1, 0x1);
        gbc.writeMem(0xe454, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1da2);
        EXPECT(gbc.pc(), 0xe456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe454), 0xcb);
        EXPECT(gbc.readMem(0xe455), 0x59);
        // CB 59 028E
        gbc.setState(0xe8fd, 0xbf43, 0x8980, 0xd38c, 0xa7cb, 0x68e2, 0x0, 0x1);
        gbc.writeMem(0xe8fd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xbf43);
        EXPECT(gbc.pc(), 0xe8ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8fd), 0xcb);
        EXPECT(gbc.readMem(0xe8fe), 0x59);
        // CB 59 028F
        gbc.setState(0x970a, 0x6be8, 0x5250, 0xf392, 0xbd8f, 0xc03c, 0x0, 0x0);
        gbc.writeMem(0x970a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6be8);
        EXPECT(gbc.pc(), 0x970c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x970a), 0xcb);
        EXPECT(gbc.readMem(0x970b), 0x59);
        // CB 59 0290
        gbc.setState(0xe6f2, 0xdf37, 0x9ca0, 0xc871, 0x82bf, 0xc87a, 0x1, 0x1);
        gbc.writeMem(0xe6f2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdf37);
        EXPECT(gbc.pc(), 0xe6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f2), 0xcb);
        EXPECT(gbc.readMem(0xe6f3), 0x59);
        // CB 59 0291
        gbc.setState(0x8e0f, 0xf582, 0xcd0, 0x854d, 0xfdf7, 0xbadf, 0x0, 0x1);
        gbc.writeMem(0x8e0f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf582);
        EXPECT(gbc.pc(), 0x8e11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e0f), 0xcb);
        EXPECT(gbc.readMem(0x8e10), 0x59);
        // CB 59 0292
        gbc.setState(0xddc0, 0x767b, 0x1990, 0xefa2, 0xf403, 0xa15b, 0x0, 0x1);
        gbc.writeMem(0xddc0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x767b);
        EXPECT(gbc.pc(), 0xddc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddc0), 0xcb);
        EXPECT(gbc.readMem(0xddc1), 0x59);
        // CB 59 0293
        gbc.setState(0xb8ef, 0xddd8, 0x23f0, 0x7efe, 0xf75f, 0xa99c, 0x1, 0x0);
        gbc.writeMem(0xb8ef, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xddd8);
        EXPECT(gbc.pc(), 0xb8f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ef), 0xcb);
        EXPECT(gbc.readMem(0xb8f0), 0x59);
        // CB 59 0294
        gbc.setState(0xd924, 0xa08b, 0xcd90, 0xd150, 0x4c9b, 0x7395, 0x1, 0x1);
        gbc.writeMem(0xd924, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa08b);
        EXPECT(gbc.pc(), 0xd926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd924), 0xcb);
        EXPECT(gbc.readMem(0xd925), 0x59);
        // CB 59 0295
        gbc.setState(0xb4ca, 0x9d42, 0x1d30, 0x3cc0, 0x6125, 0x97d9, 0x1, 0x1);
        gbc.writeMem(0xb4ca, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9d42);
        EXPECT(gbc.pc(), 0xb4cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ca), 0xcb);
        EXPECT(gbc.readMem(0xb4cb), 0x59);
        // CB 59 0296
        gbc.setState(0x5d3a, 0x4af5, 0xe60, 0xc99d, 0xf38a, 0x3b66, 0x0, 0x0);
        gbc.writeMem(0x5d3a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4af5);
        EXPECT(gbc.pc(), 0x5d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0297
        gbc.setState(0x6519, 0x2cde, 0x9da0, 0xba1a, 0x2b8d, 0x443b, 0x1, 0x1);
        gbc.writeMem(0x6519, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2cde);
        EXPECT(gbc.pc(), 0x651b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0298
        gbc.setState(0x2050, 0x68c4, 0xd3f0, 0x1993, 0x1510, 0x693b, 0x1, 0x0);
        gbc.writeMem(0x2050, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x68c4);
        EXPECT(gbc.pc(), 0x2052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0299
        gbc.setState(0x2f3f, 0xf606, 0x290, 0xd05, 0x2d8a, 0xdc00, 0x0, 0x1);
        gbc.writeMem(0x2f3f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf606);
        EXPECT(gbc.pc(), 0x2f41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 029A
        gbc.setState(0xe398, 0x8fe1, 0x510, 0x8ab5, 0x26b1, 0x76d1, 0x0, 0x0);
        gbc.writeMem(0xe398, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8fe1);
        EXPECT(gbc.pc(), 0xe39a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe398), 0xcb);
        EXPECT(gbc.readMem(0xe399), 0x59);
        // CB 59 029B
        gbc.setState(0xafe9, 0x22b5, 0x5490, 0x86b9, 0x44e6, 0x106b, 0x1, 0x0);
        gbc.writeMem(0xafe9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x22b5);
        EXPECT(gbc.pc(), 0xafeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe9), 0xcb);
        EXPECT(gbc.readMem(0xafea), 0x59);
        // CB 59 029C
        gbc.setState(0x1eec, 0x2455, 0x5df0, 0x8f7, 0x7162, 0x9c86, 0x0, 0x0);
        gbc.writeMem(0x1eec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2455);
        EXPECT(gbc.pc(), 0x1eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 029D
        gbc.setState(0x8497, 0x5406, 0xcab0, 0x3481, 0xde63, 0xe1ad, 0x0, 0x1);
        gbc.writeMem(0x8497, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5406);
        EXPECT(gbc.pc(), 0x8499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8497), 0xcb);
        EXPECT(gbc.readMem(0x8498), 0x59);
        // CB 59 029E
        gbc.setState(0xea7f, 0xeaad, 0xbb50, 0xfe85, 0xdcdd, 0xb4ec, 0x0, 0x0);
        gbc.writeMem(0xea7f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xeaad);
        EXPECT(gbc.pc(), 0xea81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea7f), 0xcb);
        EXPECT(gbc.readMem(0xea80), 0x59);
        // CB 59 029F
        gbc.setState(0x642c, 0xb8a4, 0x74c0, 0x8746, 0xb830, 0xf71e, 0x0, 0x0);
        gbc.writeMem(0x642c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb8a4);
        EXPECT(gbc.pc(), 0x642e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02A0
        gbc.setState(0xaf8e, 0x454, 0x7e60, 0x2ae6, 0xc11, 0x4b6e, 0x1, 0x0);
        gbc.writeMem(0xaf8e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x454);
        EXPECT(gbc.pc(), 0xaf90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf8e), 0xcb);
        EXPECT(gbc.readMem(0xaf8f), 0x59);
        // CB 59 02A1
        gbc.setState(0x6c17, 0xb892, 0x8930, 0x8107, 0x4359, 0x9717, 0x1, 0x1);
        gbc.writeMem(0x6c17, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb892);
        EXPECT(gbc.pc(), 0x6c19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02A2
        gbc.setState(0xbfde, 0x7bbe, 0x5e20, 0x8332, 0xb4b9, 0x7095, 0x0, 0x1);
        gbc.writeMem(0xbfde, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7bbe);
        EXPECT(gbc.pc(), 0xbfe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfde), 0xcb);
        EXPECT(gbc.readMem(0xbfdf), 0x59);
        // CB 59 02A3
        gbc.setState(0x84d5, 0xe661, 0x7e40, 0x9809, 0x6846, 0xebf8, 0x1, 0x0);
        gbc.writeMem(0x84d5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe661);
        EXPECT(gbc.pc(), 0x84d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d5), 0xcb);
        EXPECT(gbc.readMem(0x84d6), 0x59);
        // CB 59 02A4
        gbc.setState(0xc62d, 0x191f, 0x3c90, 0xe4fe, 0x264b, 0x2945, 0x1, 0x0);
        gbc.writeMem(0xc62d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x191f);
        EXPECT(gbc.pc(), 0xc62f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc62d), 0xcb);
        EXPECT(gbc.readMem(0xc62e), 0x59);
        // CB 59 02A5
        gbc.setState(0xca90, 0x5b60, 0xc7d0, 0x5b02, 0x1d95, 0x1ab4, 0x0, 0x0);
        gbc.writeMem(0xca90, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5b60);
        EXPECT(gbc.pc(), 0xca92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca90), 0xcb);
        EXPECT(gbc.readMem(0xca91), 0x59);
        // CB 59 02A6
        gbc.setState(0xa10, 0x104, 0x1770, 0xcca, 0x75c8, 0xe9a8, 0x1, 0x0);
        gbc.writeMem(0xa10, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x104);
        EXPECT(gbc.pc(), 0xa12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02A7
        gbc.setState(0xa60a, 0xfeb1, 0x3f70, 0x4464, 0xe9a8, 0x313c, 0x0, 0x1);
        gbc.writeMem(0xa60a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xfeb1);
        EXPECT(gbc.pc(), 0xa60c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa60a), 0xcb);
        EXPECT(gbc.readMem(0xa60b), 0x59);
        // CB 59 02A8
        gbc.setState(0x17de, 0x63dc, 0x4870, 0x37f9, 0xe217, 0x49f4, 0x0, 0x0);
        gbc.writeMem(0x17de, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x63dc);
        EXPECT(gbc.pc(), 0x17e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02A9
        gbc.setState(0x92d2, 0xf87, 0x26c0, 0xa4ca, 0xaec8, 0x2734, 0x0, 0x0);
        gbc.writeMem(0x92d2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf87);
        EXPECT(gbc.pc(), 0x92d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d2), 0xcb);
        EXPECT(gbc.readMem(0x92d3), 0x59);
        // CB 59 02AA
        gbc.setState(0xeaec, 0xec16, 0xd610, 0xdd92, 0x99ef, 0x9a80, 0x0, 0x1);
        gbc.writeMem(0xeaec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xec16);
        EXPECT(gbc.pc(), 0xeaee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaec), 0xcb);
        EXPECT(gbc.readMem(0xeaed), 0x59);
        // CB 59 02AB
        gbc.setState(0xef4b, 0x397e, 0xf250, 0x70aa, 0x34db, 0x142f, 0x0, 0x0);
        gbc.writeMem(0xef4b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x397e);
        EXPECT(gbc.pc(), 0xef4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef4b), 0xcb);
        EXPECT(gbc.readMem(0xef4c), 0x59);
        // CB 59 02AC
        gbc.setState(0x21c5, 0x9804, 0x7cf0, 0x6ceb, 0x941f, 0x32dc, 0x0, 0x0);
        gbc.writeMem(0x21c5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9804);
        EXPECT(gbc.pc(), 0x21c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02AD
        gbc.setState(0xb4e3, 0xc0b6, 0x1300, 0x3c82, 0xb67b, 0x1315, 0x0, 0x1);
        gbc.writeMem(0xb4e3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc0b6);
        EXPECT(gbc.pc(), 0xb4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e3), 0xcb);
        EXPECT(gbc.readMem(0xb4e4), 0x59);
        // CB 59 02AE
        gbc.setState(0x7ab2, 0x5547, 0x5230, 0xcd30, 0xca3, 0x2581, 0x1, 0x0);
        gbc.writeMem(0x7ab2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5547);
        EXPECT(gbc.pc(), 0x7ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02AF
        gbc.setState(0x6dcd, 0x125c, 0x96a0, 0x19f, 0xdf2d, 0x9385, 0x0, 0x0);
        gbc.writeMem(0x6dcd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x125c);
        EXPECT(gbc.pc(), 0x6dcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02B0
        gbc.setState(0x9b46, 0x33e4, 0x11a0, 0x2fd9, 0x1b0a, 0xf86a, 0x1, 0x1);
        gbc.writeMem(0x9b46, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x33e4);
        EXPECT(gbc.pc(), 0x9b48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b46), 0xcb);
        EXPECT(gbc.readMem(0x9b47), 0x59);
        // CB 59 02B1
        gbc.setState(0x3a29, 0x3904, 0x5e60, 0xc152, 0xde0d, 0xb082, 0x1, 0x0);
        gbc.writeMem(0x3a29, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3904);
        EXPECT(gbc.pc(), 0x3a2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02B2
        gbc.setState(0x5d39, 0xbe42, 0x9340, 0x6aad, 0xe4be, 0x7098, 0x0, 0x1);
        gbc.writeMem(0x5d39, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xbe42);
        EXPECT(gbc.pc(), 0x5d3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02B3
        gbc.setState(0xcce3, 0xe679, 0x4cc0, 0x826a, 0xcfa, 0xd14a, 0x0, 0x0);
        gbc.writeMem(0xcce3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe679);
        EXPECT(gbc.pc(), 0xcce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcce3), 0xcb);
        EXPECT(gbc.readMem(0xcce4), 0x59);
        // CB 59 02B4
        gbc.setState(0x6cd4, 0xc280, 0x3840, 0xf8a0, 0xc87, 0x7bdd, 0x1, 0x1);
        gbc.writeMem(0x6cd4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc280);
        EXPECT(gbc.pc(), 0x6cd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02B5
        gbc.setState(0xa08c, 0x384, 0xf860, 0xb7c5, 0x26ad, 0xc056, 0x0, 0x0);
        gbc.writeMem(0xa08c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x384);
        EXPECT(gbc.pc(), 0xa08e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08c), 0xcb);
        EXPECT(gbc.readMem(0xa08d), 0x59);
        // CB 59 02B6
        gbc.setState(0xb089, 0xb5fe, 0x4a30, 0x6526, 0x6da4, 0xae68, 0x0, 0x1);
        gbc.writeMem(0xb089, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb5fe);
        EXPECT(gbc.pc(), 0xb08b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb089), 0xcb);
        EXPECT(gbc.readMem(0xb08a), 0x59);
        // CB 59 02B7
        gbc.setState(0xeb3d, 0xdfcc, 0xa1a0, 0x7228, 0x8a8f, 0x37bd, 0x0, 0x0);
        gbc.writeMem(0xeb3d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdfcc);
        EXPECT(gbc.pc(), 0xeb3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb3d), 0xcb);
        EXPECT(gbc.readMem(0xeb3e), 0x59);
        // CB 59 02B8
        gbc.setState(0xbac0, 0xefbd, 0xed40, 0xaffc, 0xbc07, 0xdfd2, 0x1, 0x1);
        gbc.writeMem(0xbac0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xefbd);
        EXPECT(gbc.pc(), 0xbac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac0), 0xcb);
        EXPECT(gbc.readMem(0xbac1), 0x59);
        // CB 59 02B9
        gbc.setState(0x5cfd, 0xf023, 0x6150, 0x771c, 0x5dd5, 0x8def, 0x0, 0x0);
        gbc.writeMem(0x5cfd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf023);
        EXPECT(gbc.pc(), 0x5cff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02BA
        gbc.setState(0xa7a, 0x12b4, 0x87e0, 0x3c40, 0x287a, 0xbe82, 0x0, 0x1);
        gbc.writeMem(0xa7a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x12b4);
        EXPECT(gbc.pc(), 0xa7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02BB
        gbc.setState(0xb238, 0xef60, 0xa020, 0x10e6, 0x131c, 0x2f1d, 0x0, 0x1);
        gbc.writeMem(0xb238, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xef60);
        EXPECT(gbc.pc(), 0xb23a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb238), 0xcb);
        EXPECT(gbc.readMem(0xb239), 0x59);
        // CB 59 02BC
        gbc.setState(0xe6f0, 0xe87d, 0x7690, 0x9b44, 0xa4e6, 0x10b4, 0x0, 0x0);
        gbc.writeMem(0xe6f0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe87d);
        EXPECT(gbc.pc(), 0xe6f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6f0), 0xcb);
        EXPECT(gbc.readMem(0xe6f1), 0x59);
        // CB 59 02BD
        gbc.setState(0xda84, 0xada8, 0x51b0, 0x2626, 0x8d18, 0x5079, 0x1, 0x1);
        gbc.writeMem(0xda84, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xada8);
        EXPECT(gbc.pc(), 0xda86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda84), 0xcb);
        EXPECT(gbc.readMem(0xda85), 0x59);
        // CB 59 02BE
        gbc.setState(0x73a7, 0x4d03, 0x610, 0x1507, 0xf588, 0xd9e4, 0x0, 0x0);
        gbc.writeMem(0x73a7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4d03);
        EXPECT(gbc.pc(), 0x73a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02BF
        gbc.setState(0x53a8, 0xa3ef, 0x6c90, 0x8a22, 0x9c31, 0x321e, 0x1, 0x1);
        gbc.writeMem(0x53a8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa3ef);
        EXPECT(gbc.pc(), 0x53aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02C0
        gbc.setState(0x12cc, 0xc5dd, 0x1710, 0xb3f8, 0xc2e0, 0x69e, 0x0, 0x0);
        gbc.writeMem(0x12cc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc5dd);
        EXPECT(gbc.pc(), 0x12ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02C1
        gbc.setState(0x97c5, 0xde3a, 0x610, 0x833f, 0xe6d4, 0x451f, 0x0, 0x1);
        gbc.writeMem(0x97c5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xde3a);
        EXPECT(gbc.pc(), 0x97c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c5), 0xcb);
        EXPECT(gbc.readMem(0x97c6), 0x59);
        // CB 59 02C2
        gbc.setState(0x8f67, 0x801c, 0xb990, 0x385e, 0xa161, 0x6ebb, 0x1, 0x0);
        gbc.writeMem(0x8f67, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x801c);
        EXPECT(gbc.pc(), 0x8f69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f67), 0xcb);
        EXPECT(gbc.readMem(0x8f68), 0x59);
        // CB 59 02C3
        gbc.setState(0x7bd0, 0xdc59, 0x930, 0xd756, 0xd0eb, 0x4d66, 0x0, 0x0);
        gbc.writeMem(0x7bd0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdc59);
        EXPECT(gbc.pc(), 0x7bd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02C4
        gbc.setState(0x2475, 0xf6e7, 0x6460, 0xedae, 0xfd64, 0x26, 0x0, 0x1);
        gbc.writeMem(0x2475, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf6e7);
        EXPECT(gbc.pc(), 0x2477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02C6
        gbc.setState(0x33dc, 0x22ac, 0x19b0, 0xe61e, 0x91dd, 0x5fa3, 0x1, 0x0);
        gbc.writeMem(0x33dc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x22ac);
        EXPECT(gbc.pc(), 0x33de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02C7
        gbc.setState(0xdc9, 0x7ce6, 0xc970, 0x775e, 0xf811, 0x3230, 0x0, 0x1);
        gbc.writeMem(0xdc9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7ce6);
        EXPECT(gbc.pc(), 0xdcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02C8
        gbc.setState(0xe789, 0x4196, 0x1890, 0x343b, 0x98e9, 0xcad2, 0x0, 0x0);
        gbc.writeMem(0xe789, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4196);
        EXPECT(gbc.pc(), 0xe78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe789), 0xcb);
        EXPECT(gbc.readMem(0xe78a), 0x59);
        // CB 59 02C9
        gbc.setState(0x3b5, 0x5f5d, 0xe380, 0x80c3, 0x898a, 0x44df, 0x0, 0x0);
        gbc.writeMem(0x3b5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5f5d);
        EXPECT(gbc.pc(), 0x3b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02CB
        gbc.setState(0xdf9a, 0x4871, 0x3030, 0xce2b, 0xb4a9, 0x3974, 0x1, 0x1);
        gbc.writeMem(0xdf9a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4871);
        EXPECT(gbc.pc(), 0xdf9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf9a), 0xcb);
        EXPECT(gbc.readMem(0xdf9b), 0x59);
        // CB 59 02CC
        gbc.setState(0xd95a, 0x9ad4, 0x1370, 0x9492, 0x6674, 0x4a0a, 0x1, 0x1);
        gbc.writeMem(0xd95a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9ad4);
        EXPECT(gbc.pc(), 0xd95c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd95a), 0xcb);
        EXPECT(gbc.readMem(0xd95b), 0x59);
        // CB 59 02CD
        gbc.setState(0x616f, 0xb291, 0xbc80, 0xaed7, 0xc2ad, 0xd904, 0x0, 0x1);
        gbc.writeMem(0x616f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb291);
        EXPECT(gbc.pc(), 0x6171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02CE
        gbc.setState(0x3d8c, 0x430c, 0x1b10, 0x9d0f, 0xcde4, 0xd663, 0x1, 0x1);
        gbc.writeMem(0x3d8c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x430c);
        EXPECT(gbc.pc(), 0x3d8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02CF
        gbc.setState(0x2fb9, 0xce28, 0xc3d0, 0x6f4b, 0x84d9, 0x1063, 0x1, 0x1);
        gbc.writeMem(0x2fb9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xce28);
        EXPECT(gbc.pc(), 0x2fbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02D0
        gbc.setState(0x4b6d, 0x414a, 0x4700, 0x9251, 0xdff1, 0x18f4, 0x0, 0x1);
        gbc.writeMem(0x4b6d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x414a);
        EXPECT(gbc.pc(), 0x4b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02D1
        gbc.setState(0xdd5d, 0x6966, 0xf9a0, 0x6927, 0x5809, 0x102, 0x0, 0x1);
        gbc.writeMem(0xdd5d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6966);
        EXPECT(gbc.pc(), 0xdd5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd5d), 0xcb);
        EXPECT(gbc.readMem(0xdd5e), 0x59);
        // CB 59 02D2
        gbc.setState(0xd82f, 0x314, 0xd590, 0x5fb3, 0xbd82, 0x59ce, 0x0, 0x0);
        gbc.writeMem(0xd82f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x314);
        EXPECT(gbc.pc(), 0xd831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd82f), 0xcb);
        EXPECT(gbc.readMem(0xd830), 0x59);
        // CB 59 02D3
        gbc.setState(0xe2b6, 0xf06a, 0x58e0, 0x42e4, 0x1251, 0x62bb, 0x1, 0x1);
        gbc.writeMem(0xe2b6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf06a);
        EXPECT(gbc.pc(), 0xe2b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2b6), 0xcb);
        EXPECT(gbc.readMem(0xe2b7), 0x59);
        // CB 59 02D4
        gbc.setState(0x9a5d, 0xa9dc, 0x43a0, 0x3658, 0x3aa7, 0x3b9, 0x0, 0x1);
        gbc.writeMem(0x9a5d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa9dc);
        EXPECT(gbc.pc(), 0x9a5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a5d), 0xcb);
        EXPECT(gbc.readMem(0x9a5e), 0x59);
        // CB 59 02D5
        gbc.setState(0xd7ff, 0xf84d, 0x8290, 0x433d, 0x9f1e, 0xb61a, 0x0, 0x0);
        gbc.writeMem(0xd7ff, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf84d);
        EXPECT(gbc.pc(), 0xd801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ff), 0xcb);
        EXPECT(gbc.readMem(0xd800), 0x59);
        // CB 59 02D6
        gbc.setState(0x8ffe, 0x70ab, 0xb3f0, 0x2137, 0x52e0, 0x5e62, 0x1, 0x1);
        gbc.writeMem(0x8ffe, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x70ab);
        EXPECT(gbc.pc(), 0x9000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ffe), 0xcb);
        EXPECT(gbc.readMem(0x8fff), 0x59);
        // CB 59 02D7
        gbc.setState(0x5e11, 0x1224, 0x3db0, 0x6dd9, 0xca4c, 0xea4a, 0x1, 0x1);
        gbc.writeMem(0x5e11, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1224);
        EXPECT(gbc.pc(), 0x5e13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02D8
        gbc.setState(0xd99f, 0xd06e, 0xf4d0, 0xf886, 0xf77d, 0xcb0d, 0x0, 0x1);
        gbc.writeMem(0xd99f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd06e);
        EXPECT(gbc.pc(), 0xd9a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd99f), 0xcb);
        EXPECT(gbc.readMem(0xd9a0), 0x59);
        // CB 59 02D9
        gbc.setState(0xa67c, 0x2663, 0x5b00, 0xc91c, 0x7392, 0x8ff8, 0x0, 0x0);
        gbc.writeMem(0xa67c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2663);
        EXPECT(gbc.pc(), 0xa67e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa67c), 0xcb);
        EXPECT(gbc.readMem(0xa67d), 0x59);
        // CB 59 02DA
        gbc.setState(0x7b3e, 0x53b6, 0xdf80, 0xcad9, 0xe195, 0xd4b3, 0x0, 0x0);
        gbc.writeMem(0x7b3e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x53b6);
        EXPECT(gbc.pc(), 0x7b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02DB
        gbc.setState(0x62ba, 0xf100, 0x7760, 0x218d, 0x2990, 0xcdbd, 0x0, 0x0);
        gbc.writeMem(0x62ba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf100);
        EXPECT(gbc.pc(), 0x62bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02DC
        gbc.setState(0x992b, 0xec68, 0x2050, 0x94fd, 0x24c2, 0xb1db, 0x0, 0x1);
        gbc.writeMem(0x992b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xec68);
        EXPECT(gbc.pc(), 0x992d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x992b), 0xcb);
        EXPECT(gbc.readMem(0x992c), 0x59);
        // CB 59 02DD
        gbc.setState(0x733, 0xcc11, 0xee0, 0x5d91, 0x5b52, 0x9ef8, 0x1, 0x0);
        gbc.writeMem(0x733, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xcc11);
        EXPECT(gbc.pc(), 0x735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02DE
        gbc.setState(0x1e7, 0x92b6, 0x480, 0xa296, 0x7bae, 0x9432, 0x0, 0x0);
        gbc.writeMem(0x1e7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x92b6);
        EXPECT(gbc.pc(), 0x1e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02DF
        gbc.setState(0xb324, 0x1850, 0x3fd0, 0x79e8, 0x4e01, 0xd53, 0x0, 0x0);
        gbc.writeMem(0xb324, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x1850);
        EXPECT(gbc.pc(), 0xb326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb324), 0xcb);
        EXPECT(gbc.readMem(0xb325), 0x59);
        // CB 59 02E0
        gbc.setState(0x8dd8, 0x354e, 0x4510, 0xcfb1, 0x8226, 0xfaaa, 0x1, 0x0);
        gbc.writeMem(0x8dd8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x354e);
        EXPECT(gbc.pc(), 0x8dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dd8), 0xcb);
        EXPECT(gbc.readMem(0x8dd9), 0x59);
        // CB 59 02E1
        gbc.setState(0x703a, 0x4bbe, 0x7f80, 0x961d, 0x3c43, 0xd7e7, 0x0, 0x1);
        gbc.writeMem(0x703a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4bbe);
        EXPECT(gbc.pc(), 0x703c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02E2
        gbc.setState(0xb4e7, 0x247e, 0x4bd0, 0xf3ce, 0xb751, 0x6fb5, 0x0, 0x1);
        gbc.writeMem(0xb4e7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x247e);
        EXPECT(gbc.pc(), 0xb4e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4e7), 0xcb);
        EXPECT(gbc.readMem(0xb4e8), 0x59);
        // CB 59 02E3
        gbc.setState(0x35f3, 0x6dde, 0x1050, 0x3c3c, 0x5b3b, 0x785b, 0x1, 0x0);
        gbc.writeMem(0x35f3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6dde);
        EXPECT(gbc.pc(), 0x35f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02E4
        gbc.setState(0x8693, 0x64c7, 0x4540, 0x2ece, 0x36c5, 0x1a69, 0x1, 0x1);
        gbc.writeMem(0x8693, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x64c7);
        EXPECT(gbc.pc(), 0x8695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8693), 0xcb);
        EXPECT(gbc.readMem(0x8694), 0x59);
        // CB 59 02E5
        gbc.setState(0xe076, 0x1c8e, 0xe530, 0x28fd, 0x5661, 0x56a5, 0x1, 0x0);
        gbc.writeMem(0xe076, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1c8e);
        EXPECT(gbc.pc(), 0xe078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe076), 0xcb);
        EXPECT(gbc.readMem(0xe077), 0x59);
        // CB 59 02E6
        gbc.setState(0xd4a2, 0x46ce, 0xbb40, 0x7e61, 0x5af1, 0xe8a3, 0x0, 0x0);
        gbc.writeMem(0xd4a2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x46ce);
        EXPECT(gbc.pc(), 0xd4a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a2), 0xcb);
        EXPECT(gbc.readMem(0xd4a3), 0x59);
        // CB 59 02E7
        gbc.setState(0x4fd, 0xe12, 0x9340, 0xd975, 0xd80d, 0x6b57, 0x1, 0x0);
        gbc.writeMem(0x4fd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe12);
        EXPECT(gbc.pc(), 0x4ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02E8
        gbc.setState(0x7900, 0xcecf, 0xe5d0, 0xa566, 0x7bd2, 0x17aa, 0x1, 0x0);
        gbc.writeMem(0x7900, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xcecf);
        EXPECT(gbc.pc(), 0x7902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02E9
        gbc.setState(0x19ef, 0x3511, 0xfd00, 0xa847, 0xc1f2, 0x4ff8, 0x0, 0x0);
        gbc.writeMem(0x19ef, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3511);
        EXPECT(gbc.pc(), 0x19f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02EA
        gbc.setState(0xe6aa, 0xe3e7, 0x3a0, 0x5fc6, 0xd875, 0x9b56, 0x0, 0x1);
        gbc.writeMem(0xe6aa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe3e7);
        EXPECT(gbc.pc(), 0xe6ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6aa), 0xcb);
        EXPECT(gbc.readMem(0xe6ab), 0x59);
        // CB 59 02EC
        gbc.setState(0x1cb, 0xab42, 0x81b0, 0x390c, 0x8f86, 0x2538, 0x0, 0x0);
        gbc.writeMem(0x1cb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xab42);
        EXPECT(gbc.pc(), 0x1cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02ED
        gbc.setState(0x6213, 0xf4c4, 0x45a0, 0xada3, 0xc66f, 0xea9a, 0x1, 0x0);
        gbc.writeMem(0x6213, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf4c4);
        EXPECT(gbc.pc(), 0x6215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02EE
        gbc.setState(0xb2ec, 0x8456, 0xb4b0, 0xb115, 0xa2ac, 0x63a6, 0x1, 0x0);
        gbc.writeMem(0xb2ec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8456);
        EXPECT(gbc.pc(), 0xb2ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ec), 0xcb);
        EXPECT(gbc.readMem(0xb2ed), 0x59);
        // CB 59 02EF
        gbc.setState(0x2a0d, 0x5c4f, 0xe0b0, 0x6a2c, 0x6f55, 0xac0c, 0x1, 0x0);
        gbc.writeMem(0x2a0d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5c4f);
        EXPECT(gbc.pc(), 0x2a0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02F0
        gbc.setState(0xaf95, 0xfb5b, 0x64f0, 0xb979, 0x6b7e, 0x854f, 0x1, 0x0);
        gbc.writeMem(0xaf95, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xfb5b);
        EXPECT(gbc.pc(), 0xaf97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf95), 0xcb);
        EXPECT(gbc.readMem(0xaf96), 0x59);
        // CB 59 02F1
        gbc.setState(0x6b67, 0x6d18, 0xa6e0, 0x227e, 0x6e3f, 0x1fa8, 0x1, 0x0);
        gbc.writeMem(0x6b67, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6d18);
        EXPECT(gbc.pc(), 0x6b69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02F2
        gbc.setState(0x388b, 0xe1e3, 0x24a0, 0x1d2c, 0x3084, 0xed1f, 0x0, 0x1);
        gbc.writeMem(0x388b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe1e3);
        EXPECT(gbc.pc(), 0x388d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02F5
        gbc.setState(0xbb24, 0x37cd, 0xb3d0, 0xd951, 0x7919, 0x81d4, 0x0, 0x1);
        gbc.writeMem(0xbb24, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x37cd);
        EXPECT(gbc.pc(), 0xbb26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb24), 0xcb);
        EXPECT(gbc.readMem(0xbb25), 0x59);
        // CB 59 02F6
        gbc.setState(0x587, 0xf995, 0x2d80, 0x9f1, 0x6cf4, 0xd786, 0x0, 0x1);
        gbc.writeMem(0x587, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf995);
        EXPECT(gbc.pc(), 0x589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02F7
        gbc.setState(0x104b, 0xf719, 0x8d20, 0x806c, 0xd37b, 0x3f3a, 0x0, 0x0);
        gbc.writeMem(0x104b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf719);
        EXPECT(gbc.pc(), 0x104d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02F8
        gbc.setState(0x9482, 0x57e3, 0xaab0, 0x7507, 0x5c04, 0x5c7a, 0x1, 0x1);
        gbc.writeMem(0x9482, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x57e3);
        EXPECT(gbc.pc(), 0x9484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9482), 0xcb);
        EXPECT(gbc.readMem(0x9483), 0x59);
        // CB 59 02F9
        gbc.setState(0xa532, 0xd029, 0x1fd0, 0xa175, 0x71f1, 0x7b8f, 0x1, 0x0);
        gbc.writeMem(0xa532, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd029);
        EXPECT(gbc.pc(), 0xa534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa532), 0xcb);
        EXPECT(gbc.readMem(0xa533), 0x59);
        // CB 59 02FA
        gbc.setState(0x85fb, 0xd043, 0x2260, 0xb626, 0x557, 0x4e3, 0x1, 0x1);
        gbc.writeMem(0x85fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd043);
        EXPECT(gbc.pc(), 0x85fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85fb), 0xcb);
        EXPECT(gbc.readMem(0x85fc), 0x59);
        // CB 59 02FB
        gbc.setState(0xd75c, 0xab25, 0x8770, 0x7a07, 0xe82f, 0x7ea6, 0x1, 0x0);
        gbc.writeMem(0xd75c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xab25);
        EXPECT(gbc.pc(), 0xd75e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd75c), 0xcb);
        EXPECT(gbc.readMem(0xd75d), 0x59);
        // CB 59 02FC
        gbc.setState(0x879c, 0x1ee5, 0x1ac0, 0x3e4a, 0x940e, 0xd451, 0x1, 0x1);
        gbc.writeMem(0x879c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1ee5);
        EXPECT(gbc.pc(), 0x879e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x879c), 0xcb);
        EXPECT(gbc.readMem(0x879d), 0x59);
        // CB 59 02FD
        gbc.setState(0x4e33, 0x4a6b, 0xdc60, 0xcbcf, 0x1bc8, 0xcc2c, 0x0, 0x0);
        gbc.writeMem(0x4e33, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4a6b);
        EXPECT(gbc.pc(), 0x4e35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 02FE
        gbc.setState(0xb51, 0xcd3c, 0xe950, 0xdfad, 0xf464, 0xa950, 0x1, 0x0);
        gbc.writeMem(0xb51, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xcd3c);
        EXPECT(gbc.pc(), 0xb53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 02FF
        gbc.setState(0x6ec6, 0x4e7e, 0x61a0, 0x8d39, 0xb640, 0x72c7, 0x1, 0x1);
        gbc.writeMem(0x6ec6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x4e7e);
        EXPECT(gbc.pc(), 0x6ec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0300
        gbc.setState(0x1b8a, 0xbd99, 0x10e0, 0x2995, 0x2a90, 0x9d3, 0x1, 0x0);
        gbc.writeMem(0x1b8a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xbd99);
        EXPECT(gbc.pc(), 0x1b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0301
        gbc.setState(0x9c8c, 0x81d4, 0x8ca0, 0xbe03, 0x9890, 0x4da, 0x1, 0x0);
        gbc.writeMem(0x9c8c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x81d4);
        EXPECT(gbc.pc(), 0x9c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c8c), 0xcb);
        EXPECT(gbc.readMem(0x9c8d), 0x59);
        // CB 59 0302
        gbc.setState(0x8ac4, 0xd635, 0x3500, 0xb56c, 0xbe00, 0x4722, 0x0, 0x0);
        gbc.writeMem(0x8ac4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd635);
        EXPECT(gbc.pc(), 0x8ac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac4), 0xcb);
        EXPECT(gbc.readMem(0x8ac5), 0x59);
        // CB 59 0303
        gbc.setState(0x3e1c, 0x4554, 0x3de0, 0xd2f6, 0xf9b5, 0xd65c, 0x0, 0x1);
        gbc.writeMem(0x3e1c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4554);
        EXPECT(gbc.pc(), 0x3e1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0304
        gbc.setState(0x30d7, 0x7a9b, 0xb930, 0x4176, 0x4407, 0xe956, 0x0, 0x0);
        gbc.writeMem(0x30d7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7a9b);
        EXPECT(gbc.pc(), 0x30d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0305
        gbc.setState(0x3d1, 0xaab8, 0xdc90, 0xc495, 0x732e, 0x31e5, 0x0, 0x1);
        gbc.writeMem(0x3d1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xaab8);
        EXPECT(gbc.pc(), 0x3d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0306
        gbc.setState(0xb29f, 0x4bf, 0xfe40, 0xfc7, 0x8cb2, 0x89c5, 0x1, 0x0);
        gbc.writeMem(0xb29f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4bf);
        EXPECT(gbc.pc(), 0xb2a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb29f), 0xcb);
        EXPECT(gbc.readMem(0xb2a0), 0x59);
        // CB 59 0307
        gbc.setState(0x31c6, 0x59f6, 0x5f40, 0x5c9b, 0xd29e, 0xe869, 0x1, 0x0);
        gbc.writeMem(0x31c6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x59f6);
        EXPECT(gbc.pc(), 0x31c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0308
        gbc.setState(0x692b, 0xb469, 0x1db0, 0x72a3, 0x3e32, 0x14da, 0x0, 0x0);
        gbc.writeMem(0x692b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb469);
        EXPECT(gbc.pc(), 0x692d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0309
        gbc.setState(0x8759, 0x413b, 0xb4a0, 0x950f, 0xb84e, 0xd0ac, 0x1, 0x0);
        gbc.writeMem(0x8759, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x413b);
        EXPECT(gbc.pc(), 0x875b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8759), 0xcb);
        EXPECT(gbc.readMem(0x875a), 0x59);
        // CB 59 030A
        gbc.setState(0x1b7e, 0xc84e, 0x73d0, 0x178f, 0x4f83, 0x474, 0x0, 0x1);
        gbc.writeMem(0x1b7e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc84e);
        EXPECT(gbc.pc(), 0x1b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 030B
        gbc.setState(0x48c3, 0xecc4, 0xc5a0, 0x67eb, 0x52d7, 0xfcbb, 0x0, 0x0);
        gbc.writeMem(0x48c3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xecc4);
        EXPECT(gbc.pc(), 0x48c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 030C
        gbc.setState(0xc973, 0xbe02, 0x9840, 0x3fe, 0xf398, 0x9a4a, 0x0, 0x0);
        gbc.writeMem(0xc973, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbe02);
        EXPECT(gbc.pc(), 0xc975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc973), 0xcb);
        EXPECT(gbc.readMem(0xc974), 0x59);
        // CB 59 030D
        gbc.setState(0xad05, 0xb7be, 0xd2b0, 0xbd15, 0xd3ff, 0xdee8, 0x0, 0x1);
        gbc.writeMem(0xad05, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb7be);
        EXPECT(gbc.pc(), 0xad07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad05), 0xcb);
        EXPECT(gbc.readMem(0xad06), 0x59);
        // CB 59 030E
        gbc.setState(0xa537, 0x9fc, 0xdeb0, 0x1c9e, 0x10f0, 0xeb3c, 0x1, 0x0);
        gbc.writeMem(0xa537, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9fc);
        EXPECT(gbc.pc(), 0xa539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa537), 0xcb);
        EXPECT(gbc.readMem(0xa538), 0x59);
        // CB 59 030F
        gbc.setState(0xcbb3, 0x791d, 0x5070, 0x2b2c, 0xdb89, 0xff3, 0x1, 0x1);
        gbc.writeMem(0xcbb3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x791d);
        EXPECT(gbc.pc(), 0xcbb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbb3), 0xcb);
        EXPECT(gbc.readMem(0xcbb4), 0x59);
        // CB 59 0310
        gbc.setState(0x40df, 0xb882, 0x76f0, 0xfb00, 0x852e, 0xd009, 0x0, 0x1);
        gbc.writeMem(0x40df, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb882);
        EXPECT(gbc.pc(), 0x40e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0311
        gbc.setState(0xa3aa, 0x1c15, 0xda0, 0x5ea6, 0xd29e, 0xfaeb, 0x1, 0x1);
        gbc.writeMem(0xa3aa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1c15);
        EXPECT(gbc.pc(), 0xa3ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3aa), 0xcb);
        EXPECT(gbc.readMem(0xa3ab), 0x59);
        // CB 59 0312
        gbc.setState(0xa667, 0xe91, 0x7880, 0x2a17, 0xdd19, 0xbfb8, 0x1, 0x1);
        gbc.writeMem(0xa667, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe91);
        EXPECT(gbc.pc(), 0xa669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa667), 0xcb);
        EXPECT(gbc.readMem(0xa668), 0x59);
        // CB 59 0313
        gbc.setState(0x9aa1, 0xcb3c, 0xcf60, 0x7832, 0x3740, 0x9cfe, 0x0, 0x0);
        gbc.writeMem(0x9aa1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xcb3c);
        EXPECT(gbc.pc(), 0x9aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa1), 0xcb);
        EXPECT(gbc.readMem(0x9aa2), 0x59);
        // CB 59 0314
        gbc.setState(0x3e3a, 0x9eb3, 0xabb0, 0x727, 0x29e, 0x6cfc, 0x0, 0x0);
        gbc.writeMem(0x3e3a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9eb3);
        EXPECT(gbc.pc(), 0x3e3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0315
        gbc.setState(0xedb9, 0x40e1, 0xb0, 0x49be, 0xf9ad, 0x6e3f, 0x1, 0x0);
        gbc.writeMem(0xedb9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x40e1);
        EXPECT(gbc.pc(), 0xedbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedb9), 0xcb);
        EXPECT(gbc.readMem(0xedba), 0x59);
        // CB 59 0317
        gbc.setState(0xce56, 0xb0d0, 0x9280, 0x7f70, 0x674c, 0x7535, 0x1, 0x1);
        gbc.writeMem(0xce56, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb0d0);
        EXPECT(gbc.pc(), 0xce58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce56), 0xcb);
        EXPECT(gbc.readMem(0xce57), 0x59);
        // CB 59 0318
        gbc.setState(0xabd2, 0x9ea1, 0x3090, 0x8083, 0xbf56, 0xc30d, 0x1, 0x1);
        gbc.writeMem(0xabd2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9ea1);
        EXPECT(gbc.pc(), 0xabd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd2), 0xcb);
        EXPECT(gbc.readMem(0xabd3), 0x59);
        // CB 59 0319
        gbc.setState(0x3d12, 0x283d, 0xd4a0, 0x728f, 0x1e11, 0x92c0, 0x1, 0x1);
        gbc.writeMem(0x3d12, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x283d);
        EXPECT(gbc.pc(), 0x3d14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 031A
        gbc.setState(0xb29d, 0x4ccb, 0x2280, 0x4d43, 0xbbbf, 0x559, 0x0, 0x0);
        gbc.writeMem(0xb29d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4ccb);
        EXPECT(gbc.pc(), 0xb29f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb29d), 0xcb);
        EXPECT(gbc.readMem(0xb29e), 0x59);
        // CB 59 031B
        gbc.setState(0x99a2, 0x60b4, 0x6020, 0x426e, 0x4a28, 0xfc68, 0x0, 0x0);
        gbc.writeMem(0x99a2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x60b4);
        EXPECT(gbc.pc(), 0x99a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99a2), 0xcb);
        EXPECT(gbc.readMem(0x99a3), 0x59);
        // CB 59 031C
        gbc.setState(0x8ad3, 0xed1e, 0x1fc0, 0x46f0, 0x3da4, 0x9fa0, 0x1, 0x0);
        gbc.writeMem(0x8ad3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xed1e);
        EXPECT(gbc.pc(), 0x8ad5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ad3), 0xcb);
        EXPECT(gbc.readMem(0x8ad4), 0x59);
        // CB 59 031F
        gbc.setState(0x7b9c, 0x6f5f, 0xaf50, 0x15ec, 0x4a79, 0xc714, 0x0, 0x1);
        gbc.writeMem(0x7b9c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6f5f);
        EXPECT(gbc.pc(), 0x7b9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0320
        gbc.setState(0x52fd, 0xfc4f, 0x7e0, 0x5cd8, 0xd3e9, 0x5254, 0x0, 0x0);
        gbc.writeMem(0x52fd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfc4f);
        EXPECT(gbc.pc(), 0x52ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0321
        gbc.setState(0x9468, 0x3443, 0xc5e0, 0x825b, 0x893d, 0xc147, 0x0, 0x1);
        gbc.writeMem(0x9468, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3443);
        EXPECT(gbc.pc(), 0x946a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9468), 0xcb);
        EXPECT(gbc.readMem(0x9469), 0x59);
        // CB 59 0322
        gbc.setState(0x7c12, 0x4845, 0x9ea0, 0x9b62, 0xd737, 0xf6a1, 0x0, 0x1);
        gbc.writeMem(0x7c12, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4845);
        EXPECT(gbc.pc(), 0x7c14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0323
        gbc.setState(0x7b60, 0xa10c, 0x9910, 0x4b9c, 0xdd37, 0x6020, 0x0, 0x1);
        gbc.writeMem(0x7b60, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa10c);
        EXPECT(gbc.pc(), 0x7b62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0324
        gbc.setState(0x7cf8, 0x34e4, 0x4a90, 0x271b, 0xf3c, 0xc3d1, 0x1, 0x1);
        gbc.writeMem(0x7cf8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x34e4);
        EXPECT(gbc.pc(), 0x7cfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0325
        gbc.setState(0x8361, 0x7507, 0x36b0, 0xe05, 0x66e4, 0xf99e, 0x1, 0x1);
        gbc.writeMem(0x8361, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7507);
        EXPECT(gbc.pc(), 0x8363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8361), 0xcb);
        EXPECT(gbc.readMem(0x8362), 0x59);
        // CB 59 0326
        gbc.setState(0x1e7a, 0x1cb7, 0x2630, 0xed5f, 0xe64b, 0x4778, 0x1, 0x1);
        gbc.writeMem(0x1e7a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1cb7);
        EXPECT(gbc.pc(), 0x1e7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0327
        gbc.setState(0x35f1, 0xd350, 0x67c0, 0x82c3, 0xce54, 0x51ae, 0x0, 0x1);
        gbc.writeMem(0x35f1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd350);
        EXPECT(gbc.pc(), 0x35f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0328
        gbc.setState(0xeb5f, 0x25b9, 0x40c0, 0x3dfe, 0x3d99, 0x9629, 0x0, 0x1);
        gbc.writeMem(0xeb5f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x25b9);
        EXPECT(gbc.pc(), 0xeb61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb5f), 0xcb);
        EXPECT(gbc.readMem(0xeb60), 0x59);
        // CB 59 0329
        gbc.setState(0x29d2, 0x604c, 0x4b80, 0x958a, 0x4262, 0x9c94, 0x0, 0x1);
        gbc.writeMem(0x29d2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x604c);
        EXPECT(gbc.pc(), 0x29d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 032A
        gbc.setState(0xe161, 0x2c6, 0x85e0, 0x45b, 0xa7ed, 0x1d6b, 0x0, 0x0);
        gbc.writeMem(0xe161, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2c6);
        EXPECT(gbc.pc(), 0xe163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe161), 0xcb);
        EXPECT(gbc.readMem(0xe162), 0x59);
        // CB 59 032B
        gbc.setState(0x1d2b, 0x8662, 0xfa20, 0xd0f3, 0xaeda, 0x4183, 0x0, 0x0);
        gbc.writeMem(0x1d2b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8662);
        EXPECT(gbc.pc(), 0x1d2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 032C
        gbc.setState(0xcc22, 0x1669, 0x81a0, 0x625a, 0x270f, 0xe9a7, 0x0, 0x1);
        gbc.writeMem(0xcc22, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1669);
        EXPECT(gbc.pc(), 0xcc24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc22), 0xcb);
        EXPECT(gbc.readMem(0xcc23), 0x59);
        // CB 59 032D
        gbc.setState(0x272, 0xd701, 0x2040, 0x32f9, 0x7c41, 0x55e8, 0x1, 0x0);
        gbc.writeMem(0x272, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd701);
        EXPECT(gbc.pc(), 0x274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 032E
        gbc.setState(0x79f7, 0x1ff2, 0xd310, 0x8e36, 0x1759, 0x1292, 0x0, 0x0);
        gbc.writeMem(0x79f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1ff2);
        EXPECT(gbc.pc(), 0x79f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 032F
        gbc.setState(0x7514, 0x97f3, 0x9940, 0xfc6c, 0xee0e, 0xf911, 0x0, 0x0);
        gbc.writeMem(0x7514, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x97f3);
        EXPECT(gbc.pc(), 0x7516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0330
        gbc.setState(0xb00, 0x8a8c, 0xae40, 0xf68d, 0x72a1, 0xb9ed, 0x1, 0x0);
        gbc.writeMem(0xb00, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8a8c);
        EXPECT(gbc.pc(), 0xb02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0331
        gbc.setState(0x4e3b, 0x71bb, 0x7d60, 0xee04, 0x3b85, 0xc147, 0x1, 0x0);
        gbc.writeMem(0x4e3b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x71bb);
        EXPECT(gbc.pc(), 0x4e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0332
        gbc.setState(0xac27, 0x916f, 0xbbc0, 0xe5f6, 0xe094, 0xccd7, 0x1, 0x0);
        gbc.writeMem(0xac27, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x916f);
        EXPECT(gbc.pc(), 0xac29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac27), 0xcb);
        EXPECT(gbc.readMem(0xac28), 0x59);
        // CB 59 0333
        gbc.setState(0x93d3, 0x2322, 0x8ca0, 0x1ea3, 0x3696, 0xa9eb, 0x0, 0x1);
        gbc.writeMem(0x93d3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2322);
        EXPECT(gbc.pc(), 0x93d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d3), 0xcb);
        EXPECT(gbc.readMem(0x93d4), 0x59);
        // CB 59 0334
        gbc.setState(0x887a, 0x805a, 0xb930, 0xd446, 0xca00, 0x76f1, 0x0, 0x0);
        gbc.writeMem(0x887a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x805a);
        EXPECT(gbc.pc(), 0x887c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x887a), 0xcb);
        EXPECT(gbc.readMem(0x887b), 0x59);
        // CB 59 0335
        gbc.setState(0x97cd, 0x3b30, 0xba50, 0xa717, 0x2adb, 0x717d, 0x0, 0x1);
        gbc.writeMem(0x97cd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3b30);
        EXPECT(gbc.pc(), 0x97cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97cd), 0xcb);
        EXPECT(gbc.readMem(0x97ce), 0x59);
        // CB 59 0336
        gbc.setState(0x67e5, 0xbe0d, 0x8670, 0x410d, 0x57d1, 0x388b, 0x0, 0x1);
        gbc.writeMem(0x67e5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbe0d);
        EXPECT(gbc.pc(), 0x67e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0337
        gbc.setState(0x3f20, 0x7b32, 0xd660, 0xf487, 0x839f, 0x34dd, 0x1, 0x1);
        gbc.writeMem(0x3f20, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7b32);
        EXPECT(gbc.pc(), 0x3f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0339
        gbc.setState(0xa837, 0xd728, 0xcfa0, 0x80fa, 0x2428, 0xf414, 0x1, 0x1);
        gbc.writeMem(0xa837, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd728);
        EXPECT(gbc.pc(), 0xa839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa837), 0xcb);
        EXPECT(gbc.readMem(0xa838), 0x59);
        // CB 59 033A
        gbc.setState(0xacec, 0xb5e4, 0xe390, 0x9ac0, 0x5cab, 0x7e17, 0x1, 0x0);
        gbc.writeMem(0xacec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb5e4);
        EXPECT(gbc.pc(), 0xacee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacec), 0xcb);
        EXPECT(gbc.readMem(0xaced), 0x59);
        // CB 59 033C
        gbc.setState(0x2a44, 0xadce, 0x190, 0xb7ab, 0xf6f, 0xb0aa, 0x1, 0x0);
        gbc.writeMem(0x2a44, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xadce);
        EXPECT(gbc.pc(), 0x2a46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 033D
        gbc.setState(0x12cd, 0x6ff9, 0xe000, 0xd330, 0x538f, 0xb5f2, 0x0, 0x0);
        gbc.writeMem(0x12cd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6ff9);
        EXPECT(gbc.pc(), 0x12cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 033E
        gbc.setState(0x3fcb, 0x5229, 0x2440, 0xc0d, 0xe4a0, 0x64ea, 0x1, 0x0);
        gbc.writeMem(0x3fcb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5229);
        EXPECT(gbc.pc(), 0x3fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0340
        gbc.setState(0x326f, 0x1776, 0xcf10, 0x3f4f, 0xbaeb, 0x2369, 0x1, 0x0);
        gbc.writeMem(0x326f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1776);
        EXPECT(gbc.pc(), 0x3271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0341
        gbc.setState(0x9367, 0x82dd, 0xf230, 0x6cf2, 0x867d, 0x6d3b, 0x0, 0x0);
        gbc.writeMem(0x9367, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x82dd);
        EXPECT(gbc.pc(), 0x9369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9367), 0xcb);
        EXPECT(gbc.readMem(0x9368), 0x59);
        // CB 59 0342
        gbc.setState(0x2637, 0xd909, 0x1780, 0xa72c, 0x126b, 0xa32b, 0x0, 0x1);
        gbc.writeMem(0x2637, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd909);
        EXPECT(gbc.pc(), 0x2639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0343
        gbc.setState(0x863, 0x76a9, 0xe4f0, 0xd4cf, 0x9187, 0x126f, 0x1, 0x1);
        gbc.writeMem(0x863, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x76a9);
        EXPECT(gbc.pc(), 0x865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0344
        gbc.setState(0xd5c0, 0xe791, 0xa290, 0xf0c2, 0x6be6, 0xea10, 0x0, 0x0);
        gbc.writeMem(0xd5c0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe791);
        EXPECT(gbc.pc(), 0xd5c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5c0), 0xcb);
        EXPECT(gbc.readMem(0xd5c1), 0x59);
        // CB 59 0345
        gbc.setState(0xb623, 0xea7a, 0x8dd0, 0xfda5, 0xaf43, 0x7833, 0x1, 0x0);
        gbc.writeMem(0xb623, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xea7a);
        EXPECT(gbc.pc(), 0xb625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb623), 0xcb);
        EXPECT(gbc.readMem(0xb624), 0x59);
        // CB 59 0346
        gbc.setState(0x2a5c, 0xee67, 0x6110, 0x97c1, 0xfbd0, 0xcba8, 0x0, 0x1);
        gbc.writeMem(0x2a5c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xee67);
        EXPECT(gbc.pc(), 0x2a5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0348
        gbc.setState(0xa259, 0x9999, 0x80f0, 0x24d8, 0x9769, 0x6ff8, 0x1, 0x0);
        gbc.writeMem(0xa259, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9999);
        EXPECT(gbc.pc(), 0xa25b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa259), 0xcb);
        EXPECT(gbc.readMem(0xa25a), 0x59);
        // CB 59 0349
        gbc.setState(0xda32, 0xc251, 0x77c0, 0xe71a, 0xd542, 0x4a17, 0x1, 0x1);
        gbc.writeMem(0xda32, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc251);
        EXPECT(gbc.pc(), 0xda34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda32), 0xcb);
        EXPECT(gbc.readMem(0xda33), 0x59);
        // CB 59 034B
        gbc.setState(0x82e3, 0xe802, 0x5820, 0xa589, 0xf504, 0x973c, 0x1, 0x0);
        gbc.writeMem(0x82e3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe802);
        EXPECT(gbc.pc(), 0x82e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e3), 0xcb);
        EXPECT(gbc.readMem(0x82e4), 0x59);
        // CB 59 034D
        gbc.setState(0x565f, 0x766d, 0x3ca0, 0x1f6a, 0x3361, 0x6c68, 0x1, 0x0);
        gbc.writeMem(0x565f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x766d);
        EXPECT(gbc.pc(), 0x5661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 034E
        gbc.setState(0x8913, 0x9f9, 0xf9e0, 0xd446, 0xbc11, 0xf731, 0x0, 0x0);
        gbc.writeMem(0x8913, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9f9);
        EXPECT(gbc.pc(), 0x8915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8913), 0xcb);
        EXPECT(gbc.readMem(0x8914), 0x59);
        // CB 59 034F
        gbc.setState(0xeea0, 0xcdb7, 0xe8f0, 0x5983, 0xda1b, 0x95de, 0x1, 0x0);
        gbc.writeMem(0xeea0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xcdb7);
        EXPECT(gbc.pc(), 0xeea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea0), 0xcb);
        EXPECT(gbc.readMem(0xeea1), 0x59);
        // CB 59 0350
        gbc.setState(0xd564, 0x98a1, 0x8d0, 0x13cc, 0x383b, 0x452c, 0x0, 0x0);
        gbc.writeMem(0xd564, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x98a1);
        EXPECT(gbc.pc(), 0xd566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd564), 0xcb);
        EXPECT(gbc.readMem(0xd565), 0x59);
        // CB 59 0351
        gbc.setState(0x5c5b, 0x9639, 0x2ae0, 0x1d4a, 0x9e7a, 0x7210, 0x0, 0x0);
        gbc.writeMem(0x5c5b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9639);
        EXPECT(gbc.pc(), 0x5c5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0352
        gbc.setState(0x73cb, 0xe18b, 0xe490, 0xcb42, 0x9030, 0xffe2, 0x1, 0x0);
        gbc.writeMem(0x73cb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe18b);
        EXPECT(gbc.pc(), 0x73cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0353
        gbc.setState(0x62c9, 0x8923, 0x57b0, 0x3614, 0x7052, 0x28ee, 0x1, 0x1);
        gbc.writeMem(0x62c9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8923);
        EXPECT(gbc.pc(), 0x62cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0354
        gbc.setState(0xa1fd, 0xb368, 0x6700, 0xf8e3, 0xee6e, 0xbb00, 0x1, 0x0);
        gbc.writeMem(0xa1fd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb368);
        EXPECT(gbc.pc(), 0xa1ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1fd), 0xcb);
        EXPECT(gbc.readMem(0xa1fe), 0x59);
        // CB 59 0355
        gbc.setState(0x9977, 0x178f, 0xcbb0, 0x8ab1, 0x4e3b, 0x6fbc, 0x0, 0x1);
        gbc.writeMem(0x9977, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x178f);
        EXPECT(gbc.pc(), 0x9979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9977), 0xcb);
        EXPECT(gbc.readMem(0x9978), 0x59);
        // CB 59 0356
        gbc.setState(0xb554, 0x584a, 0x26a0, 0x6010, 0xcaaa, 0xb40b, 0x1, 0x1);
        gbc.writeMem(0xb554, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x584a);
        EXPECT(gbc.pc(), 0xb556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb554), 0xcb);
        EXPECT(gbc.readMem(0xb555), 0x59);
        // CB 59 0357
        gbc.setState(0xab5d, 0xbb55, 0x8380, 0x6511, 0x567f, 0xfdbc, 0x1, 0x0);
        gbc.writeMem(0xab5d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbb55);
        EXPECT(gbc.pc(), 0xab5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab5d), 0xcb);
        EXPECT(gbc.readMem(0xab5e), 0x59);
        // CB 59 0358
        gbc.setState(0x3cb2, 0x28de, 0x3f30, 0x8634, 0x4cd9, 0x957a, 0x0, 0x0);
        gbc.writeMem(0x3cb2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x28de);
        EXPECT(gbc.pc(), 0x3cb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0359
        gbc.setState(0x9e20, 0xed2e, 0xb050, 0xcf39, 0xa250, 0x47c6, 0x0, 0x0);
        gbc.writeMem(0x9e20, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xed2e);
        EXPECT(gbc.pc(), 0x9e22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e20), 0xcb);
        EXPECT(gbc.readMem(0x9e21), 0x59);
        // CB 59 035B
        gbc.setState(0x5cf8, 0x9f14, 0x1900, 0x98ab, 0xe4c0, 0x7f22, 0x1, 0x1);
        gbc.writeMem(0x5cf8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9f14);
        EXPECT(gbc.pc(), 0x5cfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 035C
        gbc.setState(0x98bc, 0x1efa, 0xcc60, 0x9fdc, 0x7aee, 0x6d5b, 0x0, 0x0);
        gbc.writeMem(0x98bc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1efa);
        EXPECT(gbc.pc(), 0x98be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98bc), 0xcb);
        EXPECT(gbc.readMem(0x98bd), 0x59);
        // CB 59 035D
        gbc.setState(0x33ec, 0x3f4, 0xc570, 0x4c6a, 0x3e5e, 0xa64b, 0x0, 0x1);
        gbc.writeMem(0x33ec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3f4);
        EXPECT(gbc.pc(), 0x33ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 035E
        gbc.setState(0x2c6a, 0x2c6d, 0x1df0, 0x7a0c, 0x94d3, 0x227c, 0x1, 0x1);
        gbc.writeMem(0x2c6a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x2c6d);
        EXPECT(gbc.pc(), 0x2c6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 035F
        gbc.setState(0x2ff1, 0xa4e8, 0x7ca0, 0x7712, 0x3a92, 0xdefa, 0x0, 0x0);
        gbc.writeMem(0x2ff1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa4e8);
        EXPECT(gbc.pc(), 0x2ff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0360
        gbc.setState(0x2653, 0x57c8, 0x3c90, 0x5e92, 0x96e6, 0x7fef, 0x1, 0x1);
        gbc.writeMem(0x2653, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x57c8);
        EXPECT(gbc.pc(), 0x2655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0361
        gbc.setState(0x46b3, 0xe6eb, 0x9320, 0x60ef, 0x5d45, 0x4dbd, 0x1, 0x1);
        gbc.writeMem(0x46b3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe6eb);
        EXPECT(gbc.pc(), 0x46b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0362
        gbc.setState(0x4605, 0x4e60, 0xf670, 0x145c, 0x9433, 0x5b7, 0x1, 0x1);
        gbc.writeMem(0x4605, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4e60);
        EXPECT(gbc.pc(), 0x4607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0363
        gbc.setState(0x814, 0xb1e8, 0x4f80, 0x81ca, 0xa9, 0xad7b, 0x1, 0x0);
        gbc.writeMem(0x814, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb1e8);
        EXPECT(gbc.pc(), 0x816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0364
        gbc.setState(0x542a, 0x3200, 0xc7b0, 0x1cbd, 0xeac8, 0xb0c4, 0x1, 0x1);
        gbc.writeMem(0x542a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3200);
        EXPECT(gbc.pc(), 0x542c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0365
        gbc.setState(0x1fd5, 0x5dec, 0xdc80, 0xb13e, 0xa068, 0xc715, 0x1, 0x0);
        gbc.writeMem(0x1fd5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5dec);
        EXPECT(gbc.pc(), 0x1fd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0366
        gbc.setState(0x1b19, 0x6c09, 0xa9f0, 0x5779, 0x6664, 0x7110, 0x1, 0x0);
        gbc.writeMem(0x1b19, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6c09);
        EXPECT(gbc.pc(), 0x1b1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0367
        gbc.setState(0x92d1, 0xfd6, 0xbe90, 0xfe28, 0x2044, 0x8b1d, 0x0, 0x1);
        gbc.writeMem(0x92d1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfd6);
        EXPECT(gbc.pc(), 0x92d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d1), 0xcb);
        EXPECT(gbc.readMem(0x92d2), 0x59);
        // CB 59 0368
        gbc.setState(0x7660, 0x4000, 0x19d0, 0x648b, 0x8fce, 0x656c, 0x1, 0x1);
        gbc.writeMem(0x7660, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4000);
        EXPECT(gbc.pc(), 0x7662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 036A
        gbc.setState(0x4d7f, 0x4d09, 0xbc50, 0xb091, 0x51e, 0x139f, 0x1, 0x1);
        gbc.writeMem(0x4d7f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4d09);
        EXPECT(gbc.pc(), 0x4d81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 036B
        gbc.setState(0x1fb7, 0x96a4, 0x1fd0, 0xfe5a, 0xc61a, 0x371c, 0x1, 0x0);
        gbc.writeMem(0x1fb7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x96a4);
        EXPECT(gbc.pc(), 0x1fb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 036C
        gbc.setState(0x3da1, 0xf542, 0x7d90, 0x843e, 0x5d6f, 0x2204, 0x0, 0x0);
        gbc.writeMem(0x3da1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf542);
        EXPECT(gbc.pc(), 0x3da3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 036D
        gbc.setState(0xd1e2, 0x9c2c, 0x5ac0, 0x9f8b, 0x4b2d, 0x45ab, 0x1, 0x0);
        gbc.writeMem(0xd1e2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9c2c);
        EXPECT(gbc.pc(), 0xd1e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e2), 0xcb);
        EXPECT(gbc.readMem(0xd1e3), 0x59);
        // CB 59 036E
        gbc.setState(0xa206, 0x696a, 0x3640, 0xd944, 0xbf4b, 0xb938, 0x1, 0x0);
        gbc.writeMem(0xa206, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x696a);
        EXPECT(gbc.pc(), 0xa208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa206), 0xcb);
        EXPECT(gbc.readMem(0xa207), 0x59);
        // CB 59 036F
        gbc.setState(0xbc91, 0x8ff5, 0xaa20, 0x14fe, 0xf6a6, 0x96c, 0x1, 0x1);
        gbc.writeMem(0xbc91, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8ff5);
        EXPECT(gbc.pc(), 0xbc93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc91), 0xcb);
        EXPECT(gbc.readMem(0xbc92), 0x59);
        // CB 59 0370
        gbc.setState(0xa2d0, 0xeca6, 0xf5f0, 0xb6e4, 0x891f, 0x1ffe, 0x1, 0x0);
        gbc.writeMem(0xa2d0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xeca6);
        EXPECT(gbc.pc(), 0xa2d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d0), 0xcb);
        EXPECT(gbc.readMem(0xa2d1), 0x59);
        // CB 59 0371
        gbc.setState(0x40c8, 0x9b70, 0x4510, 0x738e, 0xae98, 0x337f, 0x1, 0x1);
        gbc.writeMem(0x40c8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9b70);
        EXPECT(gbc.pc(), 0x40ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0372
        gbc.setState(0xb964, 0x229a, 0xf220, 0xd1fa, 0xde9e, 0x5b0d, 0x0, 0x1);
        gbc.writeMem(0xb964, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x229a);
        EXPECT(gbc.pc(), 0xb966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb964), 0xcb);
        EXPECT(gbc.readMem(0xb965), 0x59);
        // CB 59 0373
        gbc.setState(0x92de, 0x5bab, 0x700, 0x1b2e, 0x5a0, 0x7dee, 0x1, 0x0);
        gbc.writeMem(0x92de, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5bab);
        EXPECT(gbc.pc(), 0x92e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92de), 0xcb);
        EXPECT(gbc.readMem(0x92df), 0x59);
        // CB 59 0374
        gbc.setState(0xc76e, 0xf07, 0xac0, 0x231, 0x24c7, 0x1ebf, 0x0, 0x0);
        gbc.writeMem(0xc76e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf07);
        EXPECT(gbc.pc(), 0xc770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc76e), 0xcb);
        EXPECT(gbc.readMem(0xc76f), 0x59);
        // CB 59 0375
        gbc.setState(0x757b, 0x93bd, 0x56d0, 0x747e, 0xb85e, 0x9e4, 0x1, 0x0);
        gbc.writeMem(0x757b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x93bd);
        EXPECT(gbc.pc(), 0x757d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0376
        gbc.setState(0x8b19, 0x7c4, 0xe790, 0x9ffc, 0x7ac1, 0x2328, 0x1, 0x1);
        gbc.writeMem(0x8b19, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7c4);
        EXPECT(gbc.pc(), 0x8b1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b19), 0xcb);
        EXPECT(gbc.readMem(0x8b1a), 0x59);
        // CB 59 0377
        gbc.setState(0x517a, 0xdf10, 0xe950, 0xd343, 0xa49c, 0x9ade, 0x0, 0x0);
        gbc.writeMem(0x517a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xdf10);
        EXPECT(gbc.pc(), 0x517c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0378
        gbc.setState(0x52d2, 0x86f0, 0x5320, 0x2ea6, 0x1da3, 0xe14f, 0x0, 0x1);
        gbc.writeMem(0x52d2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x86f0);
        EXPECT(gbc.pc(), 0x52d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0379
        gbc.setState(0xd94c, 0xe8cb, 0x9090, 0x5c8e, 0x7708, 0x884b, 0x1, 0x0);
        gbc.writeMem(0xd94c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe8cb);
        EXPECT(gbc.pc(), 0xd94e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd94c), 0xcb);
        EXPECT(gbc.readMem(0xd94d), 0x59);
        // CB 59 037A
        gbc.setState(0x116e, 0x966b, 0xe740, 0xcf81, 0x1350, 0x80fd, 0x0, 0x0);
        gbc.writeMem(0x116e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x966b);
        EXPECT(gbc.pc(), 0x1170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 037B
        gbc.setState(0x7bb7, 0x5684, 0x6b90, 0xb7fd, 0x3ce8, 0xb380, 0x1, 0x1);
        gbc.writeMem(0x7bb7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5684);
        EXPECT(gbc.pc(), 0x7bb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 037C
        gbc.setState(0xe8fb, 0xbafe, 0xc0e0, 0x1226, 0x80f5, 0x5a98, 0x0, 0x1);
        gbc.writeMem(0xe8fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xbafe);
        EXPECT(gbc.pc(), 0xe8fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8fb), 0xcb);
        EXPECT(gbc.readMem(0xe8fc), 0x59);
        // CB 59 037F
        gbc.setState(0x1095, 0x87cc, 0xfbb0, 0xb7a4, 0xef93, 0xe478, 0x1, 0x0);
        gbc.writeMem(0x1095, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x87cc);
        EXPECT(gbc.pc(), 0x1097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0380
        gbc.setState(0x228, 0x3459, 0x1950, 0xe744, 0x4c38, 0xb75b, 0x1, 0x1);
        gbc.writeMem(0x228, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3459);
        EXPECT(gbc.pc(), 0x22a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0381
        gbc.setState(0x9a65, 0x1761, 0xa00, 0xecd0, 0xf783, 0xc18d, 0x1, 0x0);
        gbc.writeMem(0x9a65, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1761);
        EXPECT(gbc.pc(), 0x9a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a65), 0xcb);
        EXPECT(gbc.readMem(0x9a66), 0x59);
        // CB 59 0382
        gbc.setState(0x7a71, 0xa643, 0x6220, 0xf5ae, 0x5dda, 0x96d9, 0x0, 0x0);
        gbc.writeMem(0x7a71, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa643);
        EXPECT(gbc.pc(), 0x7a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0383
        gbc.setState(0xb69c, 0x925, 0xa350, 0x93d6, 0x2df4, 0xd439, 0x1, 0x1);
        gbc.writeMem(0xb69c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x925);
        EXPECT(gbc.pc(), 0xb69e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb69c), 0xcb);
        EXPECT(gbc.readMem(0xb69d), 0x59);
        // CB 59 0385
        gbc.setState(0xba5, 0xa30e, 0x21b0, 0x881d, 0xc91c, 0x95ba, 0x0, 0x1);
        gbc.writeMem(0xba5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa30e);
        EXPECT(gbc.pc(), 0xba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 0386
        gbc.setState(0x846b, 0x403f, 0xd520, 0xf0db, 0xedb7, 0xc722, 0x1, 0x0);
        gbc.writeMem(0x846b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x403f);
        EXPECT(gbc.pc(), 0x846d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x846b), 0xcb);
        EXPECT(gbc.readMem(0x846c), 0x59);
        // CB 59 0387
        gbc.setState(0x83be, 0x1bac, 0x7f10, 0x17d6, 0x663f, 0x2069, 0x1, 0x0);
        gbc.writeMem(0x83be, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1bac);
        EXPECT(gbc.pc(), 0x83c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83be), 0xcb);
        EXPECT(gbc.readMem(0x83bf), 0x59);
        // CB 59 0388
        gbc.setState(0xad5c, 0x4380, 0xa2d0, 0x5410, 0x37dd, 0xfccf, 0x1, 0x0);
        gbc.writeMem(0xad5c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4380);
        EXPECT(gbc.pc(), 0xad5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad5c), 0xcb);
        EXPECT(gbc.readMem(0xad5d), 0x59);
        // CB 59 0389
        gbc.setState(0xdaac, 0x3759, 0x6760, 0x72ec, 0xa70, 0xb5f, 0x0, 0x1);
        gbc.writeMem(0xdaac, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3759);
        EXPECT(gbc.pc(), 0xdaae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaac), 0xcb);
        EXPECT(gbc.readMem(0xdaad), 0x59);
        // CB 59 038A
        gbc.setState(0xe274, 0xce32, 0xd0a0, 0x1f9b, 0x4fa5, 0x69ae, 0x0, 0x1);
        gbc.writeMem(0xe274, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xce32);
        EXPECT(gbc.pc(), 0xe276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe274), 0xcb);
        EXPECT(gbc.readMem(0xe275), 0x59);
        // CB 59 038B
        gbc.setState(0x1cc3, 0x79, 0x9f40, 0x3889, 0xbcf0, 0xd651, 0x1, 0x0);
        gbc.writeMem(0x1cc3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x79);
        EXPECT(gbc.pc(), 0x1cc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 038C
        gbc.setState(0x95b8, 0x1937, 0xb80, 0x1755, 0x1ddb, 0xd5a5, 0x1, 0x0);
        gbc.writeMem(0x95b8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1937);
        EXPECT(gbc.pc(), 0x95ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b8), 0xcb);
        EXPECT(gbc.readMem(0x95b9), 0x59);
        // CB 59 038D
        gbc.setState(0xd110, 0x5b28, 0xa7b0, 0xe146, 0x4bf5, 0x6fca, 0x0, 0x0);
        gbc.writeMem(0xd110, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5b28);
        EXPECT(gbc.pc(), 0xd112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd110), 0xcb);
        EXPECT(gbc.readMem(0xd111), 0x59);
        // CB 59 038F
        gbc.setState(0xbd45, 0x8943, 0xefe0, 0x1434, 0xad63, 0x9b4b, 0x1, 0x0);
        gbc.writeMem(0xbd45, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8943);
        EXPECT(gbc.pc(), 0xbd47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd45), 0xcb);
        EXPECT(gbc.readMem(0xbd46), 0x59);
        // CB 59 0390
        gbc.setState(0x39ec, 0x376a, 0x3e60, 0x8557, 0xaa6d, 0x7ae4, 0x0, 0x0);
        gbc.writeMem(0x39ec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x376a);
        EXPECT(gbc.pc(), 0x39ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0391
        gbc.setState(0xbd17, 0x24b2, 0x1460, 0xcd86, 0xb5a1, 0xc526, 0x1, 0x0);
        gbc.writeMem(0xbd17, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x24b2);
        EXPECT(gbc.pc(), 0xbd19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd17), 0xcb);
        EXPECT(gbc.readMem(0xbd18), 0x59);
        // CB 59 0392
        gbc.setState(0x896a, 0x66b0, 0xcb60, 0x7b2c, 0xbb57, 0x21c2, 0x1, 0x0);
        gbc.writeMem(0x896a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x66b0);
        EXPECT(gbc.pc(), 0x896c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x896a), 0xcb);
        EXPECT(gbc.readMem(0x896b), 0x59);
        // CB 59 0393
        gbc.setState(0xa033, 0x252, 0xb7a0, 0x7640, 0x42f, 0x53de, 0x0, 0x0);
        gbc.writeMem(0xa033, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x252);
        EXPECT(gbc.pc(), 0xa035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa033), 0xcb);
        EXPECT(gbc.readMem(0xa034), 0x59);
        // CB 59 0394
        gbc.setState(0x9b6a, 0xbd9e, 0xee30, 0x8ab3, 0xcb12, 0xa915, 0x1, 0x1);
        gbc.writeMem(0x9b6a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbd9e);
        EXPECT(gbc.pc(), 0x9b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6a), 0xcb);
        EXPECT(gbc.readMem(0x9b6b), 0x59);
        // CB 59 0395
        gbc.setState(0x50b, 0xd250, 0xa480, 0xfa1d, 0x4df8, 0xbc6a, 0x1, 0x1);
        gbc.writeMem(0x50b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd250);
        EXPECT(gbc.pc(), 0x50d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 0397
        gbc.setState(0xe80e, 0x2589, 0x50e0, 0x388c, 0x1e44, 0xf6e6, 0x0, 0x1);
        gbc.writeMem(0xe80e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2589);
        EXPECT(gbc.pc(), 0xe810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe80e), 0xcb);
        EXPECT(gbc.readMem(0xe80f), 0x59);
        // CB 59 0398
        gbc.setState(0xde80, 0x89ce, 0xa730, 0x39f2, 0xf18d, 0x8a85, 0x0, 0x0);
        gbc.writeMem(0xde80, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x89ce);
        EXPECT(gbc.pc(), 0xde82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde80), 0xcb);
        EXPECT(gbc.readMem(0xde81), 0x59);
        // CB 59 0399
        gbc.setState(0x6546, 0x325a, 0xc10, 0x485c, 0x674d, 0x1bd5, 0x0, 0x0);
        gbc.writeMem(0x6546, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x325a);
        EXPECT(gbc.pc(), 0x6548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 039A
        gbc.setState(0xc96c, 0xf83e, 0x5370, 0xa180, 0x8c2b, 0xcd39, 0x1, 0x1);
        gbc.writeMem(0xc96c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf83e);
        EXPECT(gbc.pc(), 0xc96e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc96c), 0xcb);
        EXPECT(gbc.readMem(0xc96d), 0x59);
        // CB 59 039B
        gbc.setState(0x6dbe, 0x3881, 0x7550, 0x208b, 0x6ab4, 0xd9c4, 0x0, 0x0);
        gbc.writeMem(0x6dbe, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3881);
        EXPECT(gbc.pc(), 0x6dc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 039C
        gbc.setState(0x1a5f, 0x4af6, 0x38f0, 0x9cc4, 0x308c, 0x1b86, 0x0, 0x0);
        gbc.writeMem(0x1a5f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4af6);
        EXPECT(gbc.pc(), 0x1a61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 039D
        gbc.setState(0xa887, 0x17d4, 0x2930, 0xce7f, 0x9e1f, 0x5a88, 0x1, 0x0);
        gbc.writeMem(0xa887, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x17d4);
        EXPECT(gbc.pc(), 0xa889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa887), 0xcb);
        EXPECT(gbc.readMem(0xa888), 0x59);
        // CB 59 039E
        gbc.setState(0x8a1b, 0xeff6, 0x59a0, 0x6d92, 0x1140, 0x7f21, 0x1, 0x1);
        gbc.writeMem(0x8a1b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xeff6);
        EXPECT(gbc.pc(), 0x8a1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a1b), 0xcb);
        EXPECT(gbc.readMem(0x8a1c), 0x59);
        // CB 59 039F
        gbc.setState(0xb2ec, 0xb52d, 0xa090, 0x635a, 0xf759, 0xa9dd, 0x1, 0x1);
        gbc.writeMem(0xb2ec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb52d);
        EXPECT(gbc.pc(), 0xb2ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ec), 0xcb);
        EXPECT(gbc.readMem(0xb2ed), 0x59);
        // CB 59 03A0
        gbc.setState(0xb59c, 0x4cd7, 0xb410, 0xaed5, 0x5fc5, 0xf89f, 0x1, 0x0);
        gbc.writeMem(0xb59c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4cd7);
        EXPECT(gbc.pc(), 0xb59e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb59c), 0xcb);
        EXPECT(gbc.readMem(0xb59d), 0x59);
        // CB 59 03A2
        gbc.setState(0x86b, 0xf4c4, 0xddf0, 0x15fe, 0x8af8, 0x267d, 0x1, 0x0);
        gbc.writeMem(0x86b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf4c4);
        EXPECT(gbc.pc(), 0x86d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03A3
        gbc.setState(0x861f, 0x149d, 0x1030, 0xeeb7, 0xe593, 0xb357, 0x0, 0x0);
        gbc.writeMem(0x861f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x149d);
        EXPECT(gbc.pc(), 0x8621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x861f), 0xcb);
        EXPECT(gbc.readMem(0x8620), 0x59);
        // CB 59 03A4
        gbc.setState(0x9d1f, 0x2ccc, 0xe370, 0xe3e9, 0xef19, 0xa0bb, 0x1, 0x0);
        gbc.writeMem(0x9d1f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2ccc);
        EXPECT(gbc.pc(), 0x9d21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d1f), 0xcb);
        EXPECT(gbc.readMem(0x9d20), 0x59);
        // CB 59 03A5
        gbc.setState(0xe36f, 0x83, 0x88c0, 0x924, 0xeeca, 0xa025, 0x1, 0x1);
        gbc.writeMem(0xe36f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x83);
        EXPECT(gbc.pc(), 0xe371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe36f), 0xcb);
        EXPECT(gbc.readMem(0xe370), 0x59);
        // CB 59 03A6
        gbc.setState(0x7326, 0x2512, 0xb4e0, 0x223e, 0xbc1b, 0x7c52, 0x1, 0x1);
        gbc.writeMem(0x7326, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2512);
        EXPECT(gbc.pc(), 0x7328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03A7
        gbc.setState(0x1142, 0xe57d, 0xd8e0, 0xe3f2, 0x9137, 0xbcf6, 0x0, 0x0);
        gbc.writeMem(0x1142, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe57d);
        EXPECT(gbc.pc(), 0x1144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03A8
        gbc.setState(0x538a, 0x1c8, 0xf770, 0xf998, 0xa0, 0x2d68, 0x1, 0x0);
        gbc.writeMem(0x538a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1c8);
        EXPECT(gbc.pc(), 0x538c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03A9
        gbc.setState(0xc7a3, 0x8664, 0x12f0, 0xd0d2, 0xb180, 0xe754, 0x0, 0x0);
        gbc.writeMem(0xc7a3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8664);
        EXPECT(gbc.pc(), 0xc7a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7a3), 0xcb);
        EXPECT(gbc.readMem(0xc7a4), 0x59);
        // CB 59 03AA
        gbc.setState(0xd10f, 0x8b98, 0x2720, 0x8009, 0x4185, 0x9813, 0x1, 0x1);
        gbc.writeMem(0xd10f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8b98);
        EXPECT(gbc.pc(), 0xd111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd10f), 0xcb);
        EXPECT(gbc.readMem(0xd110), 0x59);
        // CB 59 03AB
        gbc.setState(0x9ac, 0x5376, 0xfcc0, 0x782d, 0xaaab, 0x66cf, 0x1, 0x0);
        gbc.writeMem(0x9ac, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5376);
        EXPECT(gbc.pc(), 0x9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03AC
        gbc.setState(0x7a46, 0xdabf, 0xc5e0, 0x6d54, 0xb823, 0x99a1, 0x0, 0x0);
        gbc.writeMem(0x7a46, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xdabf);
        EXPECT(gbc.pc(), 0x7a48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03AD
        gbc.setState(0x95c5, 0x6dac, 0x90d0, 0xeb1b, 0xfd62, 0x7549, 0x0, 0x1);
        gbc.writeMem(0x95c5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6dac);
        EXPECT(gbc.pc(), 0x95c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95c5), 0xcb);
        EXPECT(gbc.readMem(0x95c6), 0x59);
        // CB 59 03AE
        gbc.setState(0xe461, 0x76c7, 0x2a00, 0xe3ae, 0xc404, 0x999b, 0x0, 0x0);
        gbc.writeMem(0xe461, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x76c7);
        EXPECT(gbc.pc(), 0xe463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe461), 0xcb);
        EXPECT(gbc.readMem(0xe462), 0x59);
        // CB 59 03AF
        gbc.setState(0x766d, 0x9820, 0xe440, 0xd4b5, 0xd5e0, 0x772f, 0x0, 0x1);
        gbc.writeMem(0x766d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9820);
        EXPECT(gbc.pc(), 0x766f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03B0
        gbc.setState(0xa8e8, 0x1a6a, 0x1440, 0xb454, 0x930b, 0xb32c, 0x0, 0x0);
        gbc.writeMem(0xa8e8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1a6a);
        EXPECT(gbc.pc(), 0xa8ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8e8), 0xcb);
        EXPECT(gbc.readMem(0xa8e9), 0x59);
        // CB 59 03B1
        gbc.setState(0x22a, 0xa5cc, 0x47c0, 0xce3, 0x2f74, 0x1e93, 0x1, 0x0);
        gbc.writeMem(0x22a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa5cc);
        EXPECT(gbc.pc(), 0x22c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03B2
        gbc.setState(0x2199, 0x385f, 0xc3f0, 0xf208, 0x131, 0xfa49, 0x0, 0x0);
        gbc.writeMem(0x2199, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x385f);
        EXPECT(gbc.pc(), 0x219b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03B3
        gbc.setState(0x7a81, 0x565d, 0xeb60, 0x3145, 0xf980, 0x1818, 0x0, 0x1);
        gbc.writeMem(0x7a81, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x565d);
        EXPECT(gbc.pc(), 0x7a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03B4
        gbc.setState(0x4e5b, 0x71af, 0xe0f0, 0x8664, 0x7996, 0x70bb, 0x1, 0x0);
        gbc.writeMem(0x4e5b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x71af);
        EXPECT(gbc.pc(), 0x4e5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03B5
        gbc.setState(0xd9d4, 0x7c53, 0x66b0, 0x1aff, 0xb125, 0x1180, 0x1, 0x1);
        gbc.writeMem(0xd9d4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7c53);
        EXPECT(gbc.pc(), 0xd9d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d4), 0xcb);
        EXPECT(gbc.readMem(0xd9d5), 0x59);
        // CB 59 03B6
        gbc.setState(0x38bc, 0x72f0, 0x7900, 0x1b4f, 0x7d9a, 0x3edf, 0x1, 0x1);
        gbc.writeMem(0x38bc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x72f0);
        EXPECT(gbc.pc(), 0x38be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03B7
        gbc.setState(0x307f, 0xe5e, 0x5d50, 0x213a, 0xea25, 0x78ef, 0x0, 0x0);
        gbc.writeMem(0x307f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe5e);
        EXPECT(gbc.pc(), 0x3081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03B8
        gbc.setState(0x2bcf, 0xa0e, 0x7ea0, 0x5dcc, 0x2176, 0x4324, 0x0, 0x1);
        gbc.writeMem(0x2bcf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa0e);
        EXPECT(gbc.pc(), 0x2bd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03B9
        gbc.setState(0x612e, 0xec0a, 0x7760, 0xadcb, 0x9f7c, 0x2d3a, 0x0, 0x0);
        gbc.writeMem(0x612e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xec0a);
        EXPECT(gbc.pc(), 0x6130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03BA
        gbc.setState(0xa270, 0x1af2, 0xfcd0, 0x401a, 0xc655, 0x5107, 0x0, 0x0);
        gbc.writeMem(0xa270, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1af2);
        EXPECT(gbc.pc(), 0xa272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa270), 0xcb);
        EXPECT(gbc.readMem(0xa271), 0x59);
        // CB 59 03BB
        gbc.setState(0x4136, 0x2f2a, 0x7d60, 0x5941, 0xfedc, 0xe0b4, 0x1, 0x1);
        gbc.writeMem(0x4136, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2f2a);
        EXPECT(gbc.pc(), 0x4138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03BC
        gbc.setState(0x3ec, 0x4b00, 0x7480, 0x9aea, 0x3bbd, 0x62d9, 0x0, 0x1);
        gbc.writeMem(0x3ec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4b00);
        EXPECT(gbc.pc(), 0x3ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03BD
        gbc.setState(0xa1cb, 0x5fbd, 0x8d90, 0x2d5a, 0xefec, 0x9a8e, 0x0, 0x0);
        gbc.writeMem(0xa1cb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5fbd);
        EXPECT(gbc.pc(), 0xa1cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1cb), 0xcb);
        EXPECT(gbc.readMem(0xa1cc), 0x59);
        // CB 59 03BE
        gbc.setState(0x95cf, 0x2e0a, 0x1e00, 0x85b5, 0x433e, 0x565a, 0x1, 0x1);
        gbc.writeMem(0x95cf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2e0a);
        EXPECT(gbc.pc(), 0x95d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95cf), 0xcb);
        EXPECT(gbc.readMem(0x95d0), 0x59);
        // CB 59 03BF
        gbc.setState(0x60ae, 0x12af, 0x4460, 0x88ce, 0xb44f, 0x3d3c, 0x0, 0x0);
        gbc.writeMem(0x60ae, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x12af);
        EXPECT(gbc.pc(), 0x60b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03C0
        gbc.setState(0xe28d, 0x4f94, 0xa310, 0x4a64, 0x34b9, 0xc2d6, 0x0, 0x1);
        gbc.writeMem(0xe28d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4f94);
        EXPECT(gbc.pc(), 0xe28f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe28d), 0xcb);
        EXPECT(gbc.readMem(0xe28e), 0x59);
        // CB 59 03C1
        gbc.setState(0x9092, 0x86e, 0x1570, 0x2541, 0x40ba, 0x94ca, 0x1, 0x1);
        gbc.writeMem(0x9092, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x86e);
        EXPECT(gbc.pc(), 0x9094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9092), 0xcb);
        EXPECT(gbc.readMem(0x9093), 0x59);
        // CB 59 03C2
        gbc.setState(0x22a0, 0x8b61, 0xd400, 0x465c, 0xadd6, 0xf0fe, 0x1, 0x0);
        gbc.writeMem(0x22a0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8b61);
        EXPECT(gbc.pc(), 0x22a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03C3
        gbc.setState(0xb4f7, 0x1d56, 0x30, 0x11aa, 0xef0e, 0xef99, 0x1, 0x1);
        gbc.writeMem(0xb4f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1d56);
        EXPECT(gbc.pc(), 0xb4f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f7), 0xcb);
        EXPECT(gbc.readMem(0xb4f8), 0x59);
        // CB 59 03C4
        gbc.setState(0x671e, 0x877e, 0xe370, 0xaa74, 0x3120, 0x7e8, 0x1, 0x0);
        gbc.writeMem(0x671e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x877e);
        EXPECT(gbc.pc(), 0x6720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03C5
        gbc.setState(0xd48c, 0xf7d5, 0x6f0, 0x30f7, 0x9f2f, 0x14d4, 0x0, 0x0);
        gbc.writeMem(0xd48c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf7d5);
        EXPECT(gbc.pc(), 0xd48e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd48c), 0xcb);
        EXPECT(gbc.readMem(0xd48d), 0x59);
        // CB 59 03C6
        gbc.setState(0x93f6, 0x830a, 0x5d70, 0xe532, 0x2de3, 0x65c8, 0x0, 0x1);
        gbc.writeMem(0x93f6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x830a);
        EXPECT(gbc.pc(), 0x93f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f6), 0xcb);
        EXPECT(gbc.readMem(0x93f7), 0x59);
        // CB 59 03C7
        gbc.setState(0xb4d0, 0x125c, 0x4d30, 0x7e36, 0x76f6, 0xe3a4, 0x1, 0x1);
        gbc.writeMem(0xb4d0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x125c);
        EXPECT(gbc.pc(), 0xb4d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4d0), 0xcb);
        EXPECT(gbc.readMem(0xb4d1), 0x59);
        // CB 59 03C8
        gbc.setState(0x4955, 0xb564, 0x8640, 0x847, 0x87a5, 0xa38, 0x0, 0x1);
        gbc.writeMem(0x4955, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb564);
        EXPECT(gbc.pc(), 0x4957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03C9
        gbc.setState(0xa827, 0xabb3, 0xd6b0, 0xe0cb, 0xee7e, 0x937b, 0x1, 0x0);
        gbc.writeMem(0xa827, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xabb3);
        EXPECT(gbc.pc(), 0xa829);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa827), 0xcb);
        EXPECT(gbc.readMem(0xa828), 0x59);
        // CB 59 03CA
        gbc.setState(0xdbd7, 0x288d, 0x2470, 0x116e, 0x64e4, 0x921a, 0x1, 0x0);
        gbc.writeMem(0xdbd7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x288d);
        EXPECT(gbc.pc(), 0xdbd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbd7), 0xcb);
        EXPECT(gbc.readMem(0xdbd8), 0x59);
        // CB 59 03CC
        gbc.setState(0xd72e, 0x5789, 0xcfd0, 0xdc17, 0x7db5, 0xaa8c, 0x1, 0x1);
        gbc.writeMem(0xd72e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5789);
        EXPECT(gbc.pc(), 0xd730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd72e), 0xcb);
        EXPECT(gbc.readMem(0xd72f), 0x59);
        // CB 59 03CD
        gbc.setState(0x1a4f, 0x1f4e, 0x4220, 0x5d31, 0x76aa, 0xc829, 0x0, 0x1);
        gbc.writeMem(0x1a4f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1f4e);
        EXPECT(gbc.pc(), 0x1a51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03CE
        gbc.setState(0x9752, 0x66, 0xb130, 0xb009, 0xdeba, 0x7517, 0x1, 0x0);
        gbc.writeMem(0x9752, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x66);
        EXPECT(gbc.pc(), 0x9754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9752), 0xcb);
        EXPECT(gbc.readMem(0x9753), 0x59);
        // CB 59 03CF
        gbc.setState(0x3e7, 0x4615, 0x7b10, 0xfeb4, 0xce22, 0x26ab, 0x0, 0x1);
        gbc.writeMem(0x3e7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4615);
        EXPECT(gbc.pc(), 0x3e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03D0
        gbc.setState(0x6be1, 0x7c77, 0xdeb0, 0xb931, 0x73d5, 0x45a5, 0x1, 0x0);
        gbc.writeMem(0x6be1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7c77);
        EXPECT(gbc.pc(), 0x6be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03D1
        gbc.setState(0xa79f, 0xb093, 0xa3f0, 0x7106, 0x338b, 0x61b7, 0x1, 0x0);
        gbc.writeMem(0xa79f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb093);
        EXPECT(gbc.pc(), 0xa7a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa79f), 0xcb);
        EXPECT(gbc.readMem(0xa7a0), 0x59);
        // CB 59 03D2
        gbc.setState(0x177b, 0xda77, 0x8970, 0x640a, 0x7087, 0x587f, 0x0, 0x1);
        gbc.writeMem(0x177b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xda77);
        EXPECT(gbc.pc(), 0x177d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03D3
        gbc.setState(0xa6ef, 0x15c3, 0x28c0, 0x7c70, 0xc0b7, 0x2c1f, 0x0, 0x0);
        gbc.writeMem(0xa6ef, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x15c3);
        EXPECT(gbc.pc(), 0xa6f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ef), 0xcb);
        EXPECT(gbc.readMem(0xa6f0), 0x59);
        // CB 59 03D4
        gbc.setState(0xb8f3, 0xdb77, 0x2c70, 0x2da6, 0x3e50, 0xd7a0, 0x1, 0x0);
        gbc.writeMem(0xb8f3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xdb77);
        EXPECT(gbc.pc(), 0xb8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f3), 0xcb);
        EXPECT(gbc.readMem(0xb8f4), 0x59);
        // CB 59 03D5
        gbc.setState(0x26d4, 0xc3e3, 0x8b90, 0x9c8e, 0x55ad, 0xc38, 0x0, 0x1);
        gbc.writeMem(0x26d4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc3e3);
        EXPECT(gbc.pc(), 0x26d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03D6
        gbc.setState(0x1764, 0x6e7c, 0xc960, 0xdc6, 0x5229, 0xa5eb, 0x0, 0x0);
        gbc.writeMem(0x1764, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6e7c);
        EXPECT(gbc.pc(), 0x1766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03D7
        gbc.setState(0x386f, 0x5291, 0x7eb0, 0x1758, 0xd8f1, 0x61bc, 0x1, 0x0);
        gbc.writeMem(0x386f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5291);
        EXPECT(gbc.pc(), 0x3871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03D8
        gbc.setState(0xab8c, 0xb5a0, 0x24c0, 0xa339, 0x38b6, 0x6cc0, 0x1, 0x1);
        gbc.writeMem(0xab8c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb5a0);
        EXPECT(gbc.pc(), 0xab8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab8c), 0xcb);
        EXPECT(gbc.readMem(0xab8d), 0x59);
        // CB 59 03D9
        gbc.setState(0xe43e, 0xa4fb, 0x5b60, 0xb01f, 0xb2a2, 0xa90d, 0x0, 0x0);
        gbc.writeMem(0xe43e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa4fb);
        EXPECT(gbc.pc(), 0xe440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe43e), 0xcb);
        EXPECT(gbc.readMem(0xe43f), 0x59);
        // CB 59 03DA
        gbc.setState(0x3d0f, 0xd85b, 0xc3a0, 0xa28c, 0x748e, 0x1eb1, 0x1, 0x0);
        gbc.writeMem(0x3d0f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd85b);
        EXPECT(gbc.pc(), 0x3d11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03DB
        gbc.setState(0x10f8, 0x879, 0xb210, 0xf920, 0x26e4, 0xe7d4, 0x0, 0x0);
        gbc.writeMem(0x10f8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x879);
        EXPECT(gbc.pc(), 0x10fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03DC
        gbc.setState(0x4c68, 0xa5d8, 0x73f0, 0x6380, 0x5419, 0xc223, 0x0, 0x1);
        gbc.writeMem(0x4c68, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa5d8);
        EXPECT(gbc.pc(), 0x4c6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03DD
        gbc.setState(0xc347, 0x816b, 0x5460, 0xa6f3, 0x61b8, 0x45cd, 0x1, 0x0);
        gbc.writeMem(0xc347, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x816b);
        EXPECT(gbc.pc(), 0xc349);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc347), 0xcb);
        EXPECT(gbc.readMem(0xc348), 0x59);
        // CB 59 03DE
        gbc.setState(0xaff2, 0xc652, 0x1770, 0xe1d5, 0xa8f8, 0x2dc8, 0x1, 0x0);
        gbc.writeMem(0xaff2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc652);
        EXPECT(gbc.pc(), 0xaff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaff2), 0xcb);
        EXPECT(gbc.readMem(0xaff3), 0x59);
        // CB 59 03DF
        gbc.setState(0x782a, 0xf36c, 0x36d0, 0x136d, 0x485b, 0xc33f, 0x1, 0x1);
        gbc.writeMem(0x782a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf36c);
        EXPECT(gbc.pc(), 0x782c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03E0
        gbc.setState(0xbf8a, 0xcef1, 0x7070, 0x78b3, 0x83, 0x584e, 0x0, 0x1);
        gbc.writeMem(0xbf8a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xcef1);
        EXPECT(gbc.pc(), 0xbf8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf8a), 0xcb);
        EXPECT(gbc.readMem(0xbf8b), 0x59);
        // CB 59 03E1
        gbc.setState(0xd126, 0x8499, 0x7ac0, 0xcbc, 0xff2d, 0x5c74, 0x0, 0x1);
        gbc.writeMem(0xd126, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8499);
        EXPECT(gbc.pc(), 0xd128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd126), 0xcb);
        EXPECT(gbc.readMem(0xd127), 0x59);
        // CB 59 03E2
        gbc.setState(0x169a, 0x7cda, 0x6740, 0xf0d5, 0xb32d, 0xa74c, 0x1, 0x1);
        gbc.writeMem(0x169a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7cda);
        EXPECT(gbc.pc(), 0x169c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03E3
        gbc.setState(0x1bda, 0xcaae, 0xfc10, 0x254a, 0x7f89, 0xf09e, 0x0, 0x1);
        gbc.writeMem(0x1bda, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xcaae);
        EXPECT(gbc.pc(), 0x1bdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03E4
        gbc.setState(0x400f, 0x1232, 0xefb0, 0x101c, 0xbb36, 0x811d, 0x0, 0x1);
        gbc.writeMem(0x400f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1232);
        EXPECT(gbc.pc(), 0x4011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 59 03E6
        gbc.setState(0x398f, 0xaa16, 0x1100, 0xfa58, 0x3dd5, 0xaece, 0x0, 0x1);
        gbc.writeMem(0x398f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xaa16);
        EXPECT(gbc.pc(), 0x3991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 59 03E7
        gbc.setState(0x5b13, 0x77ae, 0x2240, 0xb92f, 0xe1e, 0x173f, 0x1, 0x0);
        gbc.writeMem(0x5b13, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x77ae);
        EXPECT(gbc.pc(), 0x5b15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
