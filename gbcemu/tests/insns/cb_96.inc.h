    TEST(gbcemu, opcode_cb_96) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 96 0001
        gbc.setState(0x5852, 0x2f54, 0x2510, 0x8366, 0xeb68, 0xd2ea, 0x1, 0x0);
        gbc.writeMem(0x5852, { 0xcb, 0x96 });
        gbc.writeMem(0xd2ea, { 0x5e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2f54, gbc.sp());
        EXPECT(0x5854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xd2ea));
        // CB 96 0002
        gbc.setState(0x23b6, 0xf5cc, 0x1880, 0x137f, 0x5552, 0xca43, 0x1, 0x1);
        gbc.writeMem(0x23b6, { 0xcb, 0x96 });
        gbc.writeMem(0xca43, { 0x4e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf5cc, gbc.sp());
        EXPECT(0x23b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xca43));
        // CB 96 0003
        gbc.setState(0xcc3, 0xdcc6, 0xdff0, 0xfb88, 0xb831, 0x11dd, 0x0, 0x1);
        gbc.writeMem(0xcc3, { 0xcb, 0x96 });
        gbc.writeMem(0x11dd, { 0x60 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdcc6, gbc.sp());
        EXPECT(0xcc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0004
        gbc.setState(0x64c6, 0x614d, 0xa7d0, 0xb213, 0x2f84, 0x50bb, 0x0, 0x1);
        gbc.writeMem(0x50bb, { 0x1a });
        gbc.writeMem(0x64c6, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x614d, gbc.sp());
        EXPECT(0x64c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0005
        gbc.setState(0x2132, 0xd39e, 0xbee0, 0xb141, 0x6a4c, 0x9859, 0x0, 0x1);
        gbc.writeMem(0x2132, { 0xcb, 0x96 });
        gbc.writeMem(0x9859, { 0xed });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd39e, gbc.sp());
        EXPECT(0x2134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9859));
        // CB 96 0006
        gbc.setState(0x8310, 0xa87e, 0x17d0, 0x6a5b, 0x1ab8, 0xdf90, 0x1, 0x0);
        gbc.writeMem(0x8310, { 0xcb, 0x96 });
        gbc.writeMem(0xdf90, { 0x55 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa87e, gbc.sp());
        EXPECT(0x8312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8310));
        EXPECT(0x96, gbc.readMem(0x8311));
        EXPECT(0x51, gbc.readMem(0xdf90));
        // CB 96 0007
        gbc.setState(0xbcaa, 0xeb2b, 0x8400, 0xcc51, 0x3a6a, 0xd214, 0x0, 0x0);
        gbc.writeMem(0xbcaa, { 0xcb, 0x96 });
        gbc.writeMem(0xd214, { 0xd8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xeb2b, gbc.sp());
        EXPECT(0xbcac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcaa));
        EXPECT(0x96, gbc.readMem(0xbcab));
        EXPECT(0xd8, gbc.readMem(0xd214));
        // CB 96 0009
        gbc.setState(0x644c, 0xc076, 0x7d30, 0xa9dd, 0x8af0, 0x399, 0x0, 0x0);
        gbc.writeMem(0x399, { 0xcb });
        gbc.writeMem(0x644c, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc076, gbc.sp());
        EXPECT(0x644e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 000B
        gbc.setState(0x4468, 0xd4dd, 0xaca0, 0x200a, 0xa06f, 0xf75b, 0x0, 0x0);
        gbc.writeMem(0x4468, { 0xcb, 0x96 });
        gbc.writeMem(0xf75b, { 0xe7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd4dd, gbc.sp());
        EXPECT(0x446a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xf75b));
        // CB 96 000E
        gbc.setState(0x1ab1, 0xb967, 0xeb0, 0x4b8d, 0x1ca3, 0xa394, 0x1, 0x1);
        gbc.writeMem(0x1ab1, { 0xcb, 0x96 });
        gbc.writeMem(0xa394, { 0x75 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb967, gbc.sp());
        EXPECT(0x1ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa394));
        // CB 96 0010
        gbc.setState(0x5200, 0x8b91, 0xdbd0, 0x3993, 0x9f97, 0xf52b, 0x1, 0x0);
        gbc.writeMem(0x5200, { 0xcb, 0x96 });
        gbc.writeMem(0xf52b, { 0xe6 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8b91, gbc.sp());
        EXPECT(0x5202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xf52b));
        // CB 96 0011
        gbc.setState(0xb00a, 0x8fc3, 0xddd0, 0xb04e, 0x40df, 0xc4ea, 0x1, 0x1);
        gbc.writeMem(0xb00a, { 0xcb, 0x96 });
        gbc.writeMem(0xc4ea, { 0xb1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8fc3, gbc.sp());
        EXPECT(0xb00c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb00a));
        EXPECT(0x96, gbc.readMem(0xb00b));
        EXPECT(0xb1, gbc.readMem(0xc4ea));
        // CB 96 0013
        gbc.setState(0x89ab, 0xcaf9, 0xf10, 0x8ca3, 0xd39c, 0xec78, 0x0, 0x1);
        gbc.writeMem(0x89ab, { 0xcb, 0x96 });
        gbc.writeMem(0xec78, { 0xe2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcaf9, gbc.sp());
        EXPECT(0x89ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ab));
        EXPECT(0x96, gbc.readMem(0x89ac));
        EXPECT(0xe2, gbc.readMem(0xec78));
        // CB 96 0015
        gbc.setState(0x6bb9, 0x3d77, 0xc640, 0x819f, 0x5006, 0x33dd, 0x1, 0x1);
        gbc.writeMem(0x33dd, { 0xa });
        gbc.writeMem(0x6bb9, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3d77, gbc.sp());
        EXPECT(0x6bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0016
        gbc.setState(0xc77e, 0xa1ec, 0xeea0, 0xec12, 0x7787, 0xc142, 0x1, 0x1);
        gbc.writeMem(0xc142, { 0x68 });
        gbc.writeMem(0xc77e, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa1ec, gbc.sp());
        EXPECT(0xc780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc142));
        EXPECT(0xcb, gbc.readMem(0xc77e));
        EXPECT(0x96, gbc.readMem(0xc77f));
        // CB 96 0018
        gbc.setState(0x5d64, 0x8234, 0x5380, 0xe00a, 0x6c7, 0x8785, 0x1, 0x0);
        gbc.writeMem(0x5d64, { 0xcb, 0x96 });
        gbc.writeMem(0x8785, { 0x42 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8234, gbc.sp());
        EXPECT(0x5d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8785));
        // CB 96 0019
        gbc.setState(0x43d5, 0x91ef, 0xa30, 0xf0e, 0xb9a5, 0x686d, 0x0, 0x0);
        gbc.writeMem(0x43d5, { 0xcb, 0x96 });
        gbc.writeMem(0x686d, { 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x91ef, gbc.sp());
        EXPECT(0x43d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 001A
        gbc.setState(0x43d3, 0x3670, 0x3920, 0x264e, 0x1deb, 0xd996, 0x0, 0x0);
        gbc.writeMem(0x43d3, { 0xcb, 0x96 });
        gbc.writeMem(0xd996, { 0x69 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3670, gbc.sp());
        EXPECT(0x43d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd996));
        // CB 96 001B
        gbc.setState(0xc8d0, 0x4c38, 0x2580, 0x7f7a, 0xb80b, 0xe085, 0x1, 0x1);
        gbc.writeMem(0xc8d0, { 0xcb, 0x96 });
        gbc.writeMem(0xe085, { 0x5b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4c38, gbc.sp());
        EXPECT(0xc8d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d0));
        EXPECT(0x96, gbc.readMem(0xc8d1));
        EXPECT(0x5b, gbc.readMem(0xe085));
        // CB 96 001C
        gbc.setState(0xc4fb, 0xdde, 0xdc0, 0x875b, 0x1451, 0x3e3d, 0x0, 0x1);
        gbc.writeMem(0x3e3d, { 0xdb });
        gbc.writeMem(0xc4fb, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdde, gbc.sp());
        EXPECT(0xc4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4fb));
        EXPECT(0x96, gbc.readMem(0xc4fc));
        // CB 96 001E
        gbc.setState(0xb3a, 0xfac2, 0x5a40, 0x5366, 0x44f6, 0xcd71, 0x1, 0x1);
        gbc.writeMem(0xb3a, { 0xcb, 0x96 });
        gbc.writeMem(0xcd71, { 0x87 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfac2, gbc.sp());
        EXPECT(0xb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xcd71));
        // CB 96 0021
        gbc.setState(0x4ffe, 0xd83e, 0x8bf0, 0x46c9, 0x358f, 0xe29a, 0x0, 0x0);
        gbc.writeMem(0x4ffe, { 0xcb, 0x96 });
        gbc.writeMem(0xe29a, { 0xc6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd83e, gbc.sp());
        EXPECT(0x5000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe29a));
        // CB 96 0022
        gbc.setState(0xaf4c, 0xff6e, 0x450, 0xbb05, 0x4186, 0xc820, 0x1, 0x1);
        gbc.writeMem(0xaf4c, { 0xcb, 0x96 });
        gbc.writeMem(0xc820, { 0xec });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xff6e, gbc.sp());
        EXPECT(0xaf4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf4c));
        EXPECT(0x96, gbc.readMem(0xaf4d));
        EXPECT(0xe8, gbc.readMem(0xc820));
        // CB 96 0024
        gbc.setState(0xcadd, 0xc17c, 0x9780, 0x8e9e, 0x777b, 0x5b8, 0x1, 0x0);
        gbc.writeMem(0x5b8, { 0x4a });
        gbc.writeMem(0xcadd, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc17c, gbc.sp());
        EXPECT(0xcadf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcadd));
        EXPECT(0x96, gbc.readMem(0xcade));
        // CB 96 0028
        gbc.setState(0x4fe5, 0xb8a2, 0x36a0, 0x39ef, 0x351c, 0xb799, 0x0, 0x0);
        gbc.writeMem(0x4fe5, { 0xcb, 0x96 });
        gbc.writeMem(0xb799, { 0xc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb8a2, gbc.sp());
        EXPECT(0x4fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xb799));
        // CB 96 0029
        gbc.setState(0xc50a, 0x9ddc, 0x6b70, 0x6215, 0x6a3d, 0x6a23, 0x1, 0x0);
        gbc.writeMem(0x6a23, { 0x6b });
        gbc.writeMem(0xc50a, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9ddc, gbc.sp());
        EXPECT(0xc50c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50a));
        EXPECT(0x96, gbc.readMem(0xc50b));
        // CB 96 002A
        gbc.setState(0xb67f, 0xc5b6, 0x5860, 0xf50e, 0xd6d, 0x2b11, 0x0, 0x1);
        gbc.writeMem(0x2b11, { 0xa0 });
        gbc.writeMem(0xb67f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc5b6, gbc.sp());
        EXPECT(0xb681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb67f));
        EXPECT(0x96, gbc.readMem(0xb680));
        // CB 96 002C
        gbc.setState(0x9bfe, 0x8356, 0x9ac0, 0x2c37, 0x5866, 0x8751, 0x0, 0x1);
        gbc.writeMem(0x8751, { 0x29 });
        gbc.writeMem(0x9bfe, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8356, gbc.sp());
        EXPECT(0x9c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8751));
        EXPECT(0xcb, gbc.readMem(0x9bfe));
        EXPECT(0x96, gbc.readMem(0x9bff));
        // CB 96 002D
        gbc.setState(0xbd4c, 0x83d8, 0xe640, 0x2223, 0x4ede, 0xf294, 0x0, 0x1);
        gbc.writeMem(0xbd4c, { 0xcb, 0x96 });
        gbc.writeMem(0xf294, { 0x28 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x83d8, gbc.sp());
        EXPECT(0xbd4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4c));
        EXPECT(0x96, gbc.readMem(0xbd4d));
        EXPECT(0x28, gbc.readMem(0xf294));
        // CB 96 002F
        gbc.setState(0x2b7b, 0x14d8, 0x4f90, 0x319f, 0xf766, 0xfde8, 0x1, 0x1);
        gbc.writeMem(0x2b7b, { 0xcb, 0x96 });
        gbc.writeMem(0xfde8, { 0xcb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x14d8, gbc.sp());
        EXPECT(0x2b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xfde8));
        // CB 96 0031
        gbc.setState(0x806c, 0x2163, 0xbd50, 0x3d3a, 0xb469, 0xb148, 0x1, 0x1);
        gbc.writeMem(0x806c, { 0xcb, 0x96 });
        gbc.writeMem(0xb148, { 0x83 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2163, gbc.sp());
        EXPECT(0x806e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806c));
        EXPECT(0x96, gbc.readMem(0x806d));
        EXPECT(0x83, gbc.readMem(0xb148));
        // CB 96 0032
        gbc.setState(0x39be, 0x411c, 0xe810, 0x1d4a, 0xf6d2, 0xe577, 0x1, 0x1);
        gbc.writeMem(0x39be, { 0xcb, 0x96 });
        gbc.writeMem(0xe577, { 0x2a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x411c, gbc.sp());
        EXPECT(0x39c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xe577));
        // CB 96 0034
        gbc.setState(0x3b52, 0xc99d, 0x6da0, 0x682, 0xf95b, 0x6475, 0x1, 0x0);
        gbc.writeMem(0x3b52, { 0xcb, 0x96 });
        gbc.writeMem(0x6475, { 0xa1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc99d, gbc.sp());
        EXPECT(0x3b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0035
        gbc.setState(0xb8d4, 0xe29c, 0xa250, 0xafb8, 0xcea4, 0x90af, 0x0, 0x1);
        gbc.writeMem(0x90af, { 0x82 });
        gbc.writeMem(0xb8d4, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe29c, gbc.sp());
        EXPECT(0xb8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x90af));
        EXPECT(0xcb, gbc.readMem(0xb8d4));
        EXPECT(0x96, gbc.readMem(0xb8d5));
        // CB 96 0036
        gbc.setState(0xdb7b, 0x367b, 0x36c0, 0x173d, 0xb80b, 0xf5ca, 0x0, 0x1);
        gbc.writeMem(0xdb7b, { 0xcb, 0x96 });
        gbc.writeMem(0xf5ca, { 0x8f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x367b, gbc.sp());
        EXPECT(0xdb7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb7b));
        EXPECT(0x96, gbc.readMem(0xdb7c));
        EXPECT(0x8b, gbc.readMem(0xf5ca));
        // CB 96 0037
        gbc.setState(0xb092, 0x945d, 0xa730, 0xc186, 0x7928, 0x3204, 0x1, 0x1);
        gbc.writeMem(0x3204, { 0xb0 });
        gbc.writeMem(0xb092, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x945d, gbc.sp());
        EXPECT(0xb094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb092));
        EXPECT(0x96, gbc.readMem(0xb093));
        // CB 96 0038
        gbc.setState(0xbb97, 0x5af2, 0x6c70, 0x4bde, 0xdf73, 0x4d2d, 0x1, 0x1);
        gbc.writeMem(0x4d2d, { 0x6b });
        gbc.writeMem(0xbb97, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5af2, gbc.sp());
        EXPECT(0xbb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb97));
        EXPECT(0x96, gbc.readMem(0xbb98));
        // CB 96 0039
        gbc.setState(0x5dc5, 0x6aab, 0xc920, 0x1824, 0x3fdb, 0xd313, 0x0, 0x1);
        gbc.writeMem(0x5dc5, { 0xcb, 0x96 });
        gbc.writeMem(0xd313, { 0x2a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6aab, gbc.sp());
        EXPECT(0x5dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xd313));
        // CB 96 003B
        gbc.setState(0x753, 0x42ba, 0xdd90, 0x70d2, 0x9b29, 0x3aa0, 0x1, 0x0);
        gbc.writeMem(0x753, { 0xcb, 0x96 });
        gbc.writeMem(0x3aa0, { 0xf8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x42ba, gbc.sp());
        EXPECT(0x755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 003C
        gbc.setState(0xbb1c, 0x4bbc, 0xf980, 0x5e02, 0x1432, 0xb334, 0x0, 0x0);
        gbc.writeMem(0xb334, { 0xda });
        gbc.writeMem(0xbb1c, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4bbc, gbc.sp());
        EXPECT(0xbb1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb334));
        EXPECT(0xcb, gbc.readMem(0xbb1c));
        EXPECT(0x96, gbc.readMem(0xbb1d));
        // CB 96 003F
        gbc.setState(0x3085, 0x36d5, 0xc5b0, 0x9d93, 0x318, 0xa3d1, 0x0, 0x1);
        gbc.writeMem(0x3085, { 0xcb, 0x96 });
        gbc.writeMem(0xa3d1, { 0x16 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x36d5, gbc.sp());
        EXPECT(0x3087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa3d1));
        // CB 96 0040
        gbc.setState(0xaa3, 0x5ec1, 0xc370, 0xf8ee, 0x116c, 0x1551, 0x0, 0x0);
        gbc.writeMem(0xaa3, { 0xcb, 0x96 });
        gbc.writeMem(0x1551, { 0x12 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5ec1, gbc.sp());
        EXPECT(0xaa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0041
        gbc.setState(0x9203, 0x9310, 0x1810, 0x9b6a, 0x52f9, 0x9ade, 0x0, 0x0);
        gbc.writeMem(0x9203, { 0xcb, 0x96 });
        gbc.writeMem(0x9ade, { 0xbc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9310, gbc.sp());
        EXPECT(0x9205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9203));
        EXPECT(0x96, gbc.readMem(0x9204));
        EXPECT(0xb8, gbc.readMem(0x9ade));
        // CB 96 0043
        gbc.setState(0x55cd, 0xafab, 0x1610, 0x44c8, 0x5dd8, 0x751c, 0x1, 0x0);
        gbc.writeMem(0x55cd, { 0xcb, 0x96 });
        gbc.writeMem(0x751c, { 0x5a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xafab, gbc.sp());
        EXPECT(0x55cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0044
        gbc.setState(0x7843, 0x592c, 0x2750, 0x9648, 0xfcbb, 0xc3ed, 0x1, 0x0);
        gbc.writeMem(0x7843, { 0xcb, 0x96 });
        gbc.writeMem(0xc3ed, { 0x8a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x592c, gbc.sp());
        EXPECT(0x7845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc3ed));
        // CB 96 0045
        gbc.setState(0x6d24, 0xd201, 0x61f0, 0xa102, 0xadf6, 0xd1fd, 0x0, 0x1);
        gbc.writeMem(0x6d24, { 0xcb, 0x96 });
        gbc.writeMem(0xd1fd, { 0x57 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd201, gbc.sp());
        EXPECT(0x6d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd1fd));
        // CB 96 0046
        gbc.setState(0x3e6, 0xb05d, 0x43c0, 0xc6ce, 0x1283, 0x8db8, 0x0, 0x0);
        gbc.writeMem(0x3e6, { 0xcb, 0x96 });
        gbc.writeMem(0x8db8, { 0x16 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb05d, gbc.sp());
        EXPECT(0x3e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8db8));
        // CB 96 004B
        gbc.setState(0x30c6, 0x9418, 0x8580, 0xaa3, 0x5db6, 0x139d, 0x1, 0x0);
        gbc.writeMem(0x139d, { 0x30 });
        gbc.writeMem(0x30c6, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9418, gbc.sp());
        EXPECT(0x30c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 004C
        gbc.setState(0x6b8e, 0xda74, 0x2a20, 0x7624, 0x2da3, 0xaff2, 0x0, 0x0);
        gbc.writeMem(0x6b8e, { 0xcb, 0x96 });
        gbc.writeMem(0xaff2, { 0xcd });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xda74, gbc.sp());
        EXPECT(0x6b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xaff2));
        // CB 96 004E
        gbc.setState(0xaafe, 0xae96, 0xcf40, 0x8d37, 0xa610, 0xa3bc, 0x0, 0x1);
        gbc.writeMem(0xa3bc, { 0x9d });
        gbc.writeMem(0xaafe, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xae96, gbc.sp());
        EXPECT(0xab00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa3bc));
        EXPECT(0xcb, gbc.readMem(0xaafe));
        EXPECT(0x96, gbc.readMem(0xaaff));
        // CB 96 004F
        gbc.setState(0x196c, 0x6466, 0xc780, 0x85e3, 0x5565, 0x6006, 0x0, 0x0);
        gbc.writeMem(0x196c, { 0xcb, 0x96 });
        gbc.writeMem(0x6006, { 0x2a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6466, gbc.sp());
        EXPECT(0x196e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0051
        gbc.setState(0xcfbe, 0x4231, 0xf6e0, 0xc33d, 0x29f5, 0xec93, 0x0, 0x0);
        gbc.writeMem(0xcfbe, { 0xcb, 0x96 });
        gbc.writeMem(0xec93, { 0x3f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4231, gbc.sp());
        EXPECT(0xcfc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfbe));
        EXPECT(0x96, gbc.readMem(0xcfbf));
        EXPECT(0x3b, gbc.readMem(0xec93));
        // CB 96 0052
        gbc.setState(0x1296, 0x29f4, 0xde30, 0x961f, 0x3a60, 0x494e, 0x0, 0x1);
        gbc.writeMem(0x1296, { 0xcb, 0x96 });
        gbc.writeMem(0x494e, { 0x4a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x29f4, gbc.sp());
        EXPECT(0x1298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0053
        gbc.setState(0x9af2, 0x60dd, 0xd60, 0xc4e0, 0x2e47, 0x20ac, 0x1, 0x1);
        gbc.writeMem(0x20ac, { 0x28 });
        gbc.writeMem(0x9af2, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x60dd, gbc.sp());
        EXPECT(0x9af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af2));
        EXPECT(0x96, gbc.readMem(0x9af3));
        // CB 96 0054
        gbc.setState(0x361d, 0xe8f0, 0x63d0, 0x813f, 0x1089, 0xc005, 0x1, 0x1);
        gbc.writeMem(0x361d, { 0xcb, 0x96 });
        gbc.writeMem(0xc005, { 0xe5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe8f0, gbc.sp());
        EXPECT(0x361f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc005));
        // CB 96 0056
        gbc.setState(0x3a05, 0x9ab4, 0xe060, 0xa50f, 0x852e, 0xe9af, 0x1, 0x1);
        gbc.writeMem(0x3a05, { 0xcb, 0x96 });
        gbc.writeMem(0xe9af, { 0x8e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9ab4, gbc.sp());
        EXPECT(0x3a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe9af));
        // CB 96 0057
        gbc.setState(0x9d74, 0x47b4, 0x6f20, 0xcf9e, 0xcc2e, 0xa6a5, 0x0, 0x0);
        gbc.writeMem(0x9d74, { 0xcb, 0x96 });
        gbc.writeMem(0xa6a5, { 0x21 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x47b4, gbc.sp());
        EXPECT(0x9d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d74));
        EXPECT(0x96, gbc.readMem(0x9d75));
        EXPECT(0x21, gbc.readMem(0xa6a5));
        // CB 96 0059
        gbc.setState(0xa0c5, 0xf50c, 0xaa10, 0xb963, 0x3cba, 0xc8b9, 0x1, 0x1);
        gbc.writeMem(0xa0c5, { 0xcb, 0x96 });
        gbc.writeMem(0xc8b9, { 0xd6 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf50c, gbc.sp());
        EXPECT(0xa0c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c5));
        EXPECT(0x96, gbc.readMem(0xa0c6));
        EXPECT(0xd2, gbc.readMem(0xc8b9));
        // CB 96 005A
        gbc.setState(0x3365, 0x92d3, 0x38f0, 0xa06c, 0x5f4a, 0xe893, 0x1, 0x1);
        gbc.writeMem(0x3365, { 0xcb, 0x96 });
        gbc.writeMem(0xe893, { 0xa4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x92d3, gbc.sp());
        EXPECT(0x3367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe893));
        // CB 96 005B
        gbc.setState(0x43df, 0x135e, 0xe2e0, 0xbe42, 0xf2d0, 0x9d22, 0x0, 0x0);
        gbc.writeMem(0x43df, { 0xcb, 0x96 });
        gbc.writeMem(0x9d22, { 0xa4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x135e, gbc.sp());
        EXPECT(0x43e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9d22));
        // CB 96 005C
        gbc.setState(0x3852, 0x7206, 0xe520, 0xa8c8, 0xd9b4, 0xeda4, 0x0, 0x1);
        gbc.writeMem(0x3852, { 0xcb, 0x96 });
        gbc.writeMem(0xeda4, { 0x6f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7206, gbc.sp());
        EXPECT(0x3854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xeda4));
        // CB 96 005D
        gbc.setState(0x475c, 0x46bf, 0x8480, 0xc656, 0xfd92, 0x1211, 0x1, 0x0);
        gbc.writeMem(0x1211, { 0x51 });
        gbc.writeMem(0x475c, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x46bf, gbc.sp());
        EXPECT(0x475e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 005E
        gbc.setState(0x337, 0x9d56, 0xbe30, 0xae7, 0x1c85, 0xee14, 0x0, 0x1);
        gbc.writeMem(0x337, { 0xcb, 0x96 });
        gbc.writeMem(0xee14, { 0xd2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9d56, gbc.sp());
        EXPECT(0x339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xee14));
        // CB 96 005F
        gbc.setState(0xda91, 0x507c, 0xbb60, 0x9ad9, 0xb1a1, 0xfb7f, 0x0, 0x1);
        gbc.writeMem(0xda91, { 0xcb, 0x96 });
        gbc.writeMem(0xfb7f, { 0xd9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x507c, gbc.sp());
        EXPECT(0xda93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda91));
        EXPECT(0x96, gbc.readMem(0xda92));
        EXPECT(0xd9, gbc.readMem(0xfb7f));
        // CB 96 0060
        gbc.setState(0xc3c, 0x11cb, 0xb0f0, 0xa69, 0xe2b0, 0x8189, 0x0, 0x1);
        gbc.writeMem(0xc3c, { 0xcb, 0x96 });
        gbc.writeMem(0x8189, { 0x11 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x11cb, gbc.sp());
        EXPECT(0xc3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8189));
        // CB 96 0063
        gbc.setState(0x5b04, 0xcaf, 0xf890, 0xe878, 0x316b, 0x2084, 0x0, 0x0);
        gbc.writeMem(0x2084, { 0x71 });
        gbc.writeMem(0x5b04, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcaf, gbc.sp());
        EXPECT(0x5b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0064
        gbc.setState(0x13ff, 0x7e61, 0x9c20, 0x1ce1, 0x3568, 0x98d4, 0x0, 0x0);
        gbc.writeMem(0x13ff, { 0xcb, 0x96 });
        gbc.writeMem(0x98d4, { 0xa0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7e61, gbc.sp());
        EXPECT(0x1401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x98d4));
        // CB 96 0066
        gbc.setState(0xbdaf, 0x9162, 0x34f0, 0xbdae, 0x7426, 0x9fcc, 0x0, 0x0);
        gbc.writeMem(0x9fcc, { 0x78 });
        gbc.writeMem(0xbdaf, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9162, gbc.sp());
        EXPECT(0xbdb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9fcc));
        EXPECT(0xcb, gbc.readMem(0xbdaf));
        EXPECT(0x96, gbc.readMem(0xbdb0));
        // CB 96 0068
        gbc.setState(0x72cc, 0xe55a, 0x3a00, 0xe8a4, 0x8be1, 0xbc20, 0x1, 0x0);
        gbc.writeMem(0x72cc, { 0xcb, 0x96 });
        gbc.writeMem(0xbc20, { 0x44 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe55a, gbc.sp());
        EXPECT(0x72ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbc20));
        // CB 96 006A
        gbc.setState(0x934a, 0xce13, 0x74b0, 0xe25, 0x195b, 0x8354, 0x0, 0x0);
        gbc.writeMem(0x8354, { 0xa });
        gbc.writeMem(0x934a, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xce13, gbc.sp());
        EXPECT(0x934c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8354));
        EXPECT(0xcb, gbc.readMem(0x934a));
        EXPECT(0x96, gbc.readMem(0x934b));
        // CB 96 006B
        gbc.setState(0xc2ed, 0x2a72, 0x4910, 0xb22d, 0x5bc6, 0xb0ba, 0x0, 0x0);
        gbc.writeMem(0xb0ba, { 0xe });
        gbc.writeMem(0xc2ed, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2a72, gbc.sp());
        EXPECT(0xc2ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb0ba));
        EXPECT(0xcb, gbc.readMem(0xc2ed));
        EXPECT(0x96, gbc.readMem(0xc2ee));
        // CB 96 006C
        gbc.setState(0x9141, 0x1e3, 0x2c20, 0x7e1d, 0xcd7a, 0x4a48, 0x0, 0x0);
        gbc.writeMem(0x4a48, { 0x3b });
        gbc.writeMem(0x9141, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1e3, gbc.sp());
        EXPECT(0x9143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9141));
        EXPECT(0x96, gbc.readMem(0x9142));
        // CB 96 006D
        gbc.setState(0x5430, 0x63d1, 0xe7c0, 0xd4b0, 0x21cb, 0x4e9b, 0x1, 0x1);
        gbc.writeMem(0x4e9b, { 0x89 });
        gbc.writeMem(0x5430, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x63d1, gbc.sp());
        EXPECT(0x5432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 006F
        gbc.setState(0x473, 0x5cfe, 0x95d0, 0x1ee3, 0x7554, 0xd09c, 0x0, 0x1);
        gbc.writeMem(0x473, { 0xcb, 0x96 });
        gbc.writeMem(0xd09c, { 0xff });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5cfe, gbc.sp());
        EXPECT(0x475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xd09c));
        // CB 96 0070
        gbc.setState(0x3a4d, 0x4d83, 0x6f00, 0x8e5b, 0xc121, 0x6f0c, 0x0, 0x0);
        gbc.writeMem(0x3a4d, { 0xcb, 0x96 });
        gbc.writeMem(0x6f0c, { 0x62 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4d83, gbc.sp());
        EXPECT(0x3a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0071
        gbc.setState(0xa3c9, 0x92b4, 0x6c80, 0x48cb, 0xdab7, 0x9a96, 0x1, 0x1);
        gbc.writeMem(0x9a96, { 0x39 });
        gbc.writeMem(0xa3c9, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x92b4, gbc.sp());
        EXPECT(0xa3cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x9a96));
        EXPECT(0xcb, gbc.readMem(0xa3c9));
        EXPECT(0x96, gbc.readMem(0xa3ca));
        // CB 96 0072
        gbc.setState(0xdb25, 0xe3d6, 0xea80, 0xff13, 0x4110, 0xdd1b, 0x1, 0x0);
        gbc.writeMem(0xdb25, { 0xcb, 0x96 });
        gbc.writeMem(0xdd1b, { 0xd9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe3d6, gbc.sp());
        EXPECT(0xdb27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb25));
        EXPECT(0x96, gbc.readMem(0xdb26));
        EXPECT(0xd9, gbc.readMem(0xdd1b));
        // CB 96 0075
        gbc.setState(0xcfbf, 0x335a, 0xccc0, 0x5e85, 0x83e8, 0x820f, 0x0, 0x1);
        gbc.writeMem(0x820f, { 0x5 });
        gbc.writeMem(0xcfbf, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x335a, gbc.sp());
        EXPECT(0xcfc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x820f));
        EXPECT(0xcb, gbc.readMem(0xcfbf));
        EXPECT(0x96, gbc.readMem(0xcfc0));
        // CB 96 0076
        gbc.setState(0xe75f, 0x1170, 0xd580, 0xf37, 0x8393, 0xbda3, 0x1, 0x0);
        gbc.writeMem(0xbda3, { 0xa9 });
        gbc.writeMem(0xe75f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1170, gbc.sp());
        EXPECT(0xe761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xbda3));
        EXPECT(0xcb, gbc.readMem(0xe75f));
        EXPECT(0x96, gbc.readMem(0xe760));
        // CB 96 0079
        gbc.setState(0xc087, 0x4366, 0x4410, 0x3701, 0x5296, 0xe16, 0x0, 0x1);
        gbc.writeMem(0xe16, { 0x9a });
        gbc.writeMem(0xc087, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4366, gbc.sp());
        EXPECT(0xc089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc087));
        EXPECT(0x96, gbc.readMem(0xc088));
        // CB 96 007A
        gbc.setState(0xcd0a, 0xeff0, 0xd790, 0x8413, 0xea5f, 0xd176, 0x1, 0x1);
        gbc.writeMem(0xcd0a, { 0xcb, 0x96 });
        gbc.writeMem(0xd176, { 0x58 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xeff0, gbc.sp());
        EXPECT(0xcd0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0a));
        EXPECT(0x96, gbc.readMem(0xcd0b));
        EXPECT(0x58, gbc.readMem(0xd176));
        // CB 96 007B
        gbc.setState(0x13bd, 0x4bc3, 0xce90, 0x6ac8, 0xf895, 0xf9f1, 0x1, 0x1);
        gbc.writeMem(0x13bd, { 0xcb, 0x96 });
        gbc.writeMem(0xf9f1, { 0xb2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4bc3, gbc.sp());
        EXPECT(0x13bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xf9f1));
        // CB 96 007C
        gbc.setState(0x7c43, 0x8c6a, 0xf3d0, 0xa2d1, 0x669c, 0x95c4, 0x0, 0x1);
        gbc.writeMem(0x7c43, { 0xcb, 0x96 });
        gbc.writeMem(0x95c4, { 0x55 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8c6a, gbc.sp());
        EXPECT(0x7c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x95c4));
        // CB 96 007D
        gbc.setState(0x3e39, 0x2d0c, 0x3a50, 0x5c19, 0xb2ef, 0x8279, 0x0, 0x1);
        gbc.writeMem(0x3e39, { 0xcb, 0x96 });
        gbc.writeMem(0x8279, { 0x1a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2d0c, gbc.sp());
        EXPECT(0x3e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8279));
        // CB 96 007F
        gbc.setState(0x1c87, 0xc4a9, 0x80f0, 0x9f8e, 0x20ff, 0xec5d, 0x0, 0x0);
        gbc.writeMem(0x1c87, { 0xcb, 0x96 });
        gbc.writeMem(0xec5d, { 0x7a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc4a9, gbc.sp());
        EXPECT(0x1c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xec5d));
        // CB 96 0080
        gbc.setState(0xb708, 0x4941, 0x35d0, 0x4fbb, 0xd253, 0xb94b, 0x0, 0x1);
        gbc.writeMem(0xb708, { 0xcb, 0x96 });
        gbc.writeMem(0xb94b, { 0x1d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4941, gbc.sp());
        EXPECT(0xb70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb708));
        EXPECT(0x96, gbc.readMem(0xb709));
        EXPECT(0x19, gbc.readMem(0xb94b));
        // CB 96 0082
        gbc.setState(0x5f2c, 0x9b03, 0x2a40, 0x7940, 0x45f9, 0x604d, 0x0, 0x0);
        gbc.writeMem(0x5f2c, { 0xcb, 0x96 });
        gbc.writeMem(0x604d, { 0x52 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9b03, gbc.sp());
        EXPECT(0x5f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0083
        gbc.setState(0x8c84, 0x2df7, 0xe380, 0x7c68, 0x4980, 0x26b, 0x0, 0x1);
        gbc.writeMem(0x26b, { 0xb3 });
        gbc.writeMem(0x8c84, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2df7, gbc.sp());
        EXPECT(0x8c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c84));
        EXPECT(0x96, gbc.readMem(0x8c85));
        // CB 96 0084
        gbc.setState(0xd6ee, 0xc521, 0x80f0, 0xa960, 0x26ee, 0x528, 0x0, 0x0);
        gbc.writeMem(0x528, { 0xb8 });
        gbc.writeMem(0xd6ee, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc521, gbc.sp());
        EXPECT(0xd6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ee));
        EXPECT(0x96, gbc.readMem(0xd6ef));
        // CB 96 0085
        gbc.setState(0x6e7b, 0x776, 0x9b00, 0xfd63, 0xa00b, 0xe1e2, 0x0, 0x1);
        gbc.writeMem(0x6e7b, { 0xcb, 0x96 });
        gbc.writeMem(0xe1e2, { 0xf3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x776, gbc.sp());
        EXPECT(0x6e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xe1e2));
        // CB 96 0086
        gbc.setState(0x8286, 0x4cc5, 0x90f0, 0xd1bf, 0xcb8b, 0x4314, 0x0, 0x1);
        gbc.writeMem(0x4314, { 0x9 });
        gbc.writeMem(0x8286, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4cc5, gbc.sp());
        EXPECT(0x8288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8286));
        EXPECT(0x96, gbc.readMem(0x8287));
        // CB 96 0087
        gbc.setState(0x42b8, 0xb66b, 0x3cb0, 0x117f, 0xcff7, 0xa5dc, 0x0, 0x0);
        gbc.writeMem(0x42b8, { 0xcb, 0x96 });
        gbc.writeMem(0xa5dc, { 0xe5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb66b, gbc.sp());
        EXPECT(0x42ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa5dc));
        // CB 96 0088
        gbc.setState(0x2e26, 0x89cc, 0xd5a0, 0x8a8a, 0xe789, 0x7210, 0x0, 0x0);
        gbc.writeMem(0x2e26, { 0xcb, 0x96 });
        gbc.writeMem(0x7210, { 0x22 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x89cc, gbc.sp());
        EXPECT(0x2e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0089
        gbc.setState(0xabcf, 0xb798, 0x55b0, 0x6c9c, 0xc4cf, 0xf514, 0x0, 0x0);
        gbc.writeMem(0xabcf, { 0xcb, 0x96 });
        gbc.writeMem(0xf514, { 0x78 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb798, gbc.sp());
        EXPECT(0xabd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcf));
        EXPECT(0x96, gbc.readMem(0xabd0));
        EXPECT(0x78, gbc.readMem(0xf514));
        // CB 96 008A
        gbc.setState(0xa3, 0x56b1, 0x9dc0, 0xde3c, 0xa04c, 0x2374, 0x0, 0x0);
        gbc.writeMem(0xa3, { 0xcb, 0x96 });
        gbc.writeMem(0x2374, { 0x12 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x56b1, gbc.sp());
        EXPECT(0xa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 008C
        gbc.setState(0x8daf, 0x8f5a, 0x2e40, 0xe6b9, 0xda70, 0xc1b1, 0x0, 0x1);
        gbc.writeMem(0x8daf, { 0xcb, 0x96 });
        gbc.writeMem(0xc1b1, { 0xdc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8f5a, gbc.sp());
        EXPECT(0x8db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8daf));
        EXPECT(0x96, gbc.readMem(0x8db0));
        EXPECT(0xd8, gbc.readMem(0xc1b1));
        // CB 96 008D
        gbc.setState(0x5561, 0xc6df, 0xeba0, 0xb606, 0xb9de, 0x1281, 0x0, 0x0);
        gbc.writeMem(0x1281, { 0xf3 });
        gbc.writeMem(0x5561, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc6df, gbc.sp());
        EXPECT(0x5563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 008F
        gbc.setState(0x4062, 0xf7a8, 0x38d0, 0xa443, 0x17f4, 0xf1d3, 0x0, 0x0);
        gbc.writeMem(0x4062, { 0xcb, 0x96 });
        gbc.writeMem(0xf1d3, { 0x86 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf7a8, gbc.sp());
        EXPECT(0x4064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xf1d3));
        // CB 96 0091
        gbc.setState(0xbab1, 0xd384, 0x3080, 0xb874, 0x980b, 0x9ab7, 0x0, 0x1);
        gbc.writeMem(0x9ab7, { 0xc1 });
        gbc.writeMem(0xbab1, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd384, gbc.sp());
        EXPECT(0xbab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9ab7));
        EXPECT(0xcb, gbc.readMem(0xbab1));
        EXPECT(0x96, gbc.readMem(0xbab2));
        // CB 96 0092
        gbc.setState(0xdeb4, 0xba90, 0x40c0, 0x352, 0xeb42, 0xf65a, 0x0, 0x0);
        gbc.writeMem(0xdeb4, { 0xcb, 0x96 });
        gbc.writeMem(0xf65a, { 0xdb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xba90, gbc.sp());
        EXPECT(0xdeb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb4));
        EXPECT(0x96, gbc.readMem(0xdeb5));
        EXPECT(0xdb, gbc.readMem(0xf65a));
        // CB 96 0093
        gbc.setState(0xa86b, 0x7e16, 0xa8d0, 0xc2d, 0xdf12, 0xf25d, 0x1, 0x1);
        gbc.writeMem(0xa86b, { 0xcb, 0x96 });
        gbc.writeMem(0xf25d, { 0xa7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7e16, gbc.sp());
        EXPECT(0xa86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86b));
        EXPECT(0x96, gbc.readMem(0xa86c));
        EXPECT(0xa3, gbc.readMem(0xf25d));
        // CB 96 0094
        gbc.setState(0xd985, 0xd702, 0xb740, 0x4f18, 0xc225, 0x3d7e, 0x0, 0x1);
        gbc.writeMem(0x3d7e, { 0xfb });
        gbc.writeMem(0xd985, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd702, gbc.sp());
        EXPECT(0xd987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd985));
        EXPECT(0x96, gbc.readMem(0xd986));
        // CB 96 0095
        gbc.setState(0x3f94, 0xa674, 0x6560, 0xbe, 0x8912, 0x82e6, 0x0, 0x1);
        gbc.writeMem(0x3f94, { 0xcb, 0x96 });
        gbc.writeMem(0x82e6, { 0xdd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa674, gbc.sp());
        EXPECT(0x3f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x82e6));
        // CB 96 0096
        gbc.setState(0x487a, 0xacf3, 0x2920, 0xcc51, 0xa549, 0x556c, 0x0, 0x1);
        gbc.writeMem(0x487a, { 0xcb, 0x96 });
        gbc.writeMem(0x556c, { 0xe3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xacf3, gbc.sp());
        EXPECT(0x487c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0098
        gbc.setState(0xc77f, 0x6176, 0x67e0, 0x67f8, 0x5eeb, 0x4e62, 0x0, 0x1);
        gbc.writeMem(0x4e62, { 0x4b });
        gbc.writeMem(0xc77f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6176, gbc.sp());
        EXPECT(0xc781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc77f));
        EXPECT(0x96, gbc.readMem(0xc780));
        // CB 96 0099
        gbc.setState(0xc797, 0xe0fb, 0x9b20, 0xc86c, 0x7638, 0xefaf, 0x1, 0x0);
        gbc.writeMem(0xc797, { 0xcb, 0x96 });
        gbc.writeMem(0xefaf, { 0x83 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe0fb, gbc.sp());
        EXPECT(0xc799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc797));
        EXPECT(0x96, gbc.readMem(0xc798));
        EXPECT(0x83, gbc.readMem(0xefaf));
        // CB 96 009C
        gbc.setState(0x64a9, 0xe1fd, 0xe840, 0xed39, 0x2628, 0x4370, 0x0, 0x0);
        gbc.writeMem(0x4370, { 0x7b });
        gbc.writeMem(0x64a9, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe1fd, gbc.sp());
        EXPECT(0x64ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 009D
        gbc.setState(0x19a, 0x1667, 0xb5e0, 0x986d, 0xd245, 0x52e8, 0x0, 0x0);
        gbc.writeMem(0x19a, { 0xcb, 0x96 });
        gbc.writeMem(0x52e8, { 0xf3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1667, gbc.sp());
        EXPECT(0x19c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 009E
        gbc.setState(0xca78, 0xbba6, 0xf4b0, 0x596f, 0xde2, 0x6070, 0x0, 0x0);
        gbc.writeMem(0x6070, { 0x7b });
        gbc.writeMem(0xca78, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbba6, gbc.sp());
        EXPECT(0xca7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca78));
        EXPECT(0x96, gbc.readMem(0xca79));
        // CB 96 009F
        gbc.setState(0x5286, 0x61f, 0x88e0, 0x11, 0x39, 0x8378, 0x1, 0x0);
        gbc.writeMem(0x5286, { 0xcb, 0x96 });
        gbc.writeMem(0x8378, { 0xe7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x61f, gbc.sp());
        EXPECT(0x5288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x8378));
        // CB 96 00A0
        gbc.setState(0x9fca, 0x3962, 0x2780, 0x1181, 0x70c1, 0xd61c, 0x0, 0x1);
        gbc.writeMem(0x9fca, { 0xcb, 0x96 });
        gbc.writeMem(0xd61c, { 0xef });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3962, gbc.sp());
        EXPECT(0x9fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fca));
        EXPECT(0x96, gbc.readMem(0x9fcb));
        EXPECT(0xeb, gbc.readMem(0xd61c));
        // CB 96 00A1
        gbc.setState(0xcdcc, 0x649e, 0x9f0, 0x638f, 0x1a0d, 0xc933, 0x0, 0x0);
        gbc.writeMem(0xc933, { 0xc7 });
        gbc.writeMem(0xcdcc, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x649e, gbc.sp());
        EXPECT(0xcdce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc933));
        EXPECT(0xcb, gbc.readMem(0xcdcc));
        EXPECT(0x96, gbc.readMem(0xcdcd));
        // CB 96 00A3
        gbc.setState(0x340b, 0x8cf7, 0x5970, 0x9c9b, 0xb553, 0xda56, 0x0, 0x0);
        gbc.writeMem(0x340b, { 0xcb, 0x96 });
        gbc.writeMem(0xda56, { 0xaa });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8cf7, gbc.sp());
        EXPECT(0x340d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xda56));
        // CB 96 00A5
        gbc.setState(0x2ca6, 0x572e, 0xad60, 0x9eb, 0x9182, 0x97e6, 0x0, 0x1);
        gbc.writeMem(0x2ca6, { 0xcb, 0x96 });
        gbc.writeMem(0x97e6, { 0xcf });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x572e, gbc.sp());
        EXPECT(0x2ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e6));
        // CB 96 00A7
        gbc.setState(0x3113, 0x133c, 0xd040, 0xc503, 0xafd0, 0x9bd, 0x1, 0x0);
        gbc.writeMem(0x9bd, { 0x90 });
        gbc.writeMem(0x3113, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x133c, gbc.sp());
        EXPECT(0x3115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 00AA
        gbc.setState(0x34d8, 0x49b9, 0xc320, 0x8423, 0xb808, 0xb443, 0x0, 0x1);
        gbc.writeMem(0x34d8, { 0xcb, 0x96 });
        gbc.writeMem(0xb443, { 0xf });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x49b9, gbc.sp());
        EXPECT(0x34da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb443));
        // CB 96 00AB
        gbc.setState(0x96b5, 0x942a, 0xcae0, 0x870f, 0x6c89, 0x742c, 0x0, 0x0);
        gbc.writeMem(0x742c, { 0x82 });
        gbc.writeMem(0x96b5, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x942a, gbc.sp());
        EXPECT(0x96b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b5));
        EXPECT(0x96, gbc.readMem(0x96b6));
        // CB 96 00AC
        gbc.setState(0x24a2, 0x3dba, 0xcf00, 0xbb8, 0xfb2d, 0xc501, 0x1, 0x0);
        gbc.writeMem(0x24a2, { 0xcb, 0x96 });
        gbc.writeMem(0xc501, { 0x65 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3dba, gbc.sp());
        EXPECT(0x24a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc501));
        // CB 96 00AD
        gbc.setState(0xdc74, 0x522d, 0x4a90, 0xe9b6, 0x596f, 0xfff5, 0x1, 0x1);
        gbc.writeMem(0xdc74, { 0xcb, 0x96 });
        gbc.writeMem(0xfff5, { 0x37 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x522d, gbc.sp());
        EXPECT(0xdc76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc74));
        EXPECT(0x96, gbc.readMem(0xdc75));
        EXPECT(0x33, gbc.readMem(0xfff5));
        // CB 96 00AE
        gbc.setState(0xd221, 0xff2d, 0xe250, 0x25b2, 0x531, 0xc548, 0x1, 0x0);
        gbc.writeMem(0xc548, { 0x5e });
        gbc.writeMem(0xd221, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xff2d, gbc.sp());
        EXPECT(0xd223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xc548));
        EXPECT(0xcb, gbc.readMem(0xd221));
        EXPECT(0x96, gbc.readMem(0xd222));
        // CB 96 00AF
        gbc.setState(0x6a27, 0xce34, 0x2940, 0xb5c7, 0xfd9f, 0x6dbe, 0x0, 0x1);
        gbc.writeMem(0x6a27, { 0xcb, 0x96 });
        gbc.writeMem(0x6dbe, { 0xf2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xce34, gbc.sp());
        EXPECT(0x6a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 00B0
        gbc.setState(0xb94, 0x3433, 0x73e0, 0xb057, 0x6282, 0xcab1, 0x1, 0x1);
        gbc.writeMem(0xb94, { 0xcb, 0x96 });
        gbc.writeMem(0xcab1, { 0x8f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3433, gbc.sp());
        EXPECT(0xb96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xcab1));
        // CB 96 00B1
        gbc.setState(0xcfa0, 0x2c0e, 0xee00, 0x1b69, 0x88d2, 0xa133, 0x0, 0x0);
        gbc.writeMem(0xa133, { 0xa2 });
        gbc.writeMem(0xcfa0, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2c0e, gbc.sp());
        EXPECT(0xcfa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa133));
        EXPECT(0xcb, gbc.readMem(0xcfa0));
        EXPECT(0x96, gbc.readMem(0xcfa1));
        // CB 96 00B3
        gbc.setState(0xaa10, 0x74d5, 0x65e0, 0x179b, 0x892c, 0xe6d7, 0x1, 0x1);
        gbc.writeMem(0xaa10, { 0xcb, 0x96 });
        gbc.writeMem(0xe6d7, { 0x63 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x74d5, gbc.sp());
        EXPECT(0xaa12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa10));
        EXPECT(0x96, gbc.readMem(0xaa11));
        EXPECT(0x63, gbc.readMem(0xe6d7));
        // CB 96 00B4
        gbc.setState(0x46f3, 0x253c, 0x4430, 0x3966, 0x73a9, 0xdb7a, 0x1, 0x1);
        gbc.writeMem(0x46f3, { 0xcb, 0x96 });
        gbc.writeMem(0xdb7a, { 0xa5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x253c, gbc.sp());
        EXPECT(0x46f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdb7a));
        // CB 96 00B5
        gbc.setState(0xa119, 0xa957, 0xd610, 0x648c, 0x64ee, 0x55d5, 0x1, 0x0);
        gbc.writeMem(0x55d5, { 0x33 });
        gbc.writeMem(0xa119, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa957, gbc.sp());
        EXPECT(0xa11b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa119));
        EXPECT(0x96, gbc.readMem(0xa11a));
        // CB 96 00B6
        gbc.setState(0x382d, 0x2b36, 0x21b0, 0xa03a, 0xa07d, 0xf44e, 0x1, 0x1);
        gbc.writeMem(0x382d, { 0xcb, 0x96 });
        gbc.writeMem(0xf44e, { 0x37 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2b36, gbc.sp());
        EXPECT(0x382f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xf44e));
        // CB 96 00B8
        gbc.setState(0xb082, 0xdc3, 0xe50, 0xbffc, 0x69dd, 0x4499, 0x1, 0x1);
        gbc.writeMem(0x4499, { 0xf2 });
        gbc.writeMem(0xb082, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdc3, gbc.sp());
        EXPECT(0xb084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb082));
        EXPECT(0x96, gbc.readMem(0xb083));
        // CB 96 00BA
        gbc.setState(0x2cc8, 0x4a, 0xb300, 0x3670, 0x4b6e, 0xa7bd, 0x1, 0x0);
        gbc.writeMem(0x2cc8, { 0xcb, 0x96 });
        gbc.writeMem(0xa7bd, { 0x74 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4a, gbc.sp());
        EXPECT(0x2cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xa7bd));
        // CB 96 00BB
        gbc.setState(0xb1d3, 0xfe8e, 0x6050, 0x66bd, 0x8fbf, 0xe4a, 0x1, 0x1);
        gbc.writeMem(0xe4a, { 0x62 });
        gbc.writeMem(0xb1d3, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfe8e, gbc.sp());
        EXPECT(0xb1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d3));
        EXPECT(0x96, gbc.readMem(0xb1d4));
        // CB 96 00BD
        gbc.setState(0x305a, 0x7896, 0xfb10, 0xc759, 0xdea9, 0xe5bc, 0x1, 0x0);
        gbc.writeMem(0x305a, { 0xcb, 0x96 });
        gbc.writeMem(0xe5bc, { 0x30 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7896, gbc.sp());
        EXPECT(0x305c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xe5bc));
        // CB 96 00BF
        gbc.setState(0x11f9, 0x9ee4, 0x8350, 0x7663, 0x2e6e, 0x3a45, 0x1, 0x0);
        gbc.writeMem(0x11f9, { 0xcb, 0x96 });
        gbc.writeMem(0x3a45, { 0xa2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9ee4, gbc.sp());
        EXPECT(0x11fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 00C0
        gbc.setState(0x5b17, 0xbc7c, 0x3540, 0xbd5f, 0x224d, 0xa2ed, 0x1, 0x0);
        gbc.writeMem(0x5b17, { 0xcb, 0x96 });
        gbc.writeMem(0xa2ed, { 0x5a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbc7c, gbc.sp());
        EXPECT(0x5b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xa2ed));
        // CB 96 00C1
        gbc.setState(0x68ea, 0xec90, 0xe5e0, 0xdc9a, 0xe137, 0xb2a3, 0x0, 0x1);
        gbc.writeMem(0x68ea, { 0xcb, 0x96 });
        gbc.writeMem(0xb2a3, { 0x25 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xec90, gbc.sp());
        EXPECT(0x68ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb2a3));
        // CB 96 00C3
        gbc.setState(0x3ab0, 0xf9b2, 0x1370, 0x8537, 0x42c3, 0x5520, 0x1, 0x0);
        gbc.writeMem(0x3ab0, { 0xcb, 0x96 });
        gbc.writeMem(0x5520, { 0x28 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf9b2, gbc.sp());
        EXPECT(0x3ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 00C4
        gbc.setState(0x86b6, 0xe0b3, 0xf8e0, 0x2d4d, 0x2ae0, 0x8c50, 0x1, 0x0);
        gbc.writeMem(0x86b6, { 0xcb, 0x96 });
        gbc.writeMem(0x8c50, { 0xad });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe0b3, gbc.sp());
        EXPECT(0x86b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b6));
        EXPECT(0x96, gbc.readMem(0x86b7));
        EXPECT(0xa9, gbc.readMem(0x8c50));
        // CB 96 00C6
        gbc.setState(0xc0b3, 0xcbad, 0xe630, 0xc1bb, 0x6f06, 0xdb86, 0x1, 0x1);
        gbc.writeMem(0xc0b3, { 0xcb, 0x96 });
        gbc.writeMem(0xdb86, { 0x1a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcbad, gbc.sp());
        EXPECT(0xc0b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b3));
        EXPECT(0x96, gbc.readMem(0xc0b4));
        EXPECT(0x1a, gbc.readMem(0xdb86));
        // CB 96 00C7
        gbc.setState(0x69d4, 0x5a0f, 0x9130, 0x39d0, 0xaa6f, 0x1021, 0x0, 0x0);
        gbc.writeMem(0x1021, { 0xfb });
        gbc.writeMem(0x69d4, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5a0f, gbc.sp());
        EXPECT(0x69d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 00C9
        gbc.setState(0xe519, 0x7a2a, 0x5040, 0x8c17, 0xd522, 0xaafb, 0x1, 0x0);
        gbc.writeMem(0xaafb, { 0x63 });
        gbc.writeMem(0xe519, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7a2a, gbc.sp());
        EXPECT(0xe51b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xaafb));
        EXPECT(0xcb, gbc.readMem(0xe519));
        EXPECT(0x96, gbc.readMem(0xe51a));
        // CB 96 00CA
        gbc.setState(0xd1ff, 0x84ca, 0xd2b0, 0x29ea, 0xbdc, 0x8cce, 0x1, 0x0);
        gbc.writeMem(0x8cce, { 0xd0 });
        gbc.writeMem(0xd1ff, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x84ca, gbc.sp());
        EXPECT(0xd201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8cce));
        EXPECT(0xcb, gbc.readMem(0xd1ff));
        EXPECT(0x96, gbc.readMem(0xd200));
        // CB 96 00CB
        gbc.setState(0xb085, 0xfa09, 0xae80, 0x806f, 0x8e62, 0x8fbb, 0x0, 0x1);
        gbc.writeMem(0x8fbb, { 0x8a });
        gbc.writeMem(0xb085, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfa09, gbc.sp());
        EXPECT(0xb087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8fbb));
        EXPECT(0xcb, gbc.readMem(0xb085));
        EXPECT(0x96, gbc.readMem(0xb086));
        // CB 96 00CC
        gbc.setState(0xc331, 0xb18c, 0xb4f0, 0xbbbb, 0x35c5, 0xf845, 0x0, 0x0);
        gbc.writeMem(0xc331, { 0xcb, 0x96 });
        gbc.writeMem(0xf845, { 0xd6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb18c, gbc.sp());
        EXPECT(0xc333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc331));
        EXPECT(0x96, gbc.readMem(0xc332));
        EXPECT(0xd2, gbc.readMem(0xf845));
        // CB 96 00CD
        gbc.setState(0x4d8, 0xd942, 0x4040, 0xf841, 0x103b, 0xf037, 0x1, 0x0);
        gbc.writeMem(0x4d8, { 0xcb, 0x96 });
        gbc.writeMem(0xf037, { 0x1f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd942, gbc.sp());
        EXPECT(0x4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xf037));
        // CB 96 00CF
        gbc.setState(0x8c34, 0x621a, 0xaf30, 0x3bc5, 0xe345, 0xe6ac, 0x1, 0x0);
        gbc.writeMem(0x8c34, { 0xcb, 0x96 });
        gbc.writeMem(0xe6ac, { 0xc9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x621a, gbc.sp());
        EXPECT(0x8c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c34));
        EXPECT(0x96, gbc.readMem(0x8c35));
        EXPECT(0xc9, gbc.readMem(0xe6ac));
        // CB 96 00D0
        gbc.setState(0x2ef9, 0x9c99, 0xb4a0, 0x2bb8, 0xeec6, 0x7a4d, 0x0, 0x1);
        gbc.writeMem(0x2ef9, { 0xcb, 0x96 });
        gbc.writeMem(0x7a4d, { 0x2a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9c99, gbc.sp());
        EXPECT(0x2efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 00D3
        gbc.setState(0x1b2d, 0xc1fe, 0x5d30, 0x5609, 0x26a9, 0x914d, 0x1, 0x1);
        gbc.writeMem(0x1b2d, { 0xcb, 0x96 });
        gbc.writeMem(0x914d, { 0x98 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc1fe, gbc.sp());
        EXPECT(0x1b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x914d));
        // CB 96 00D4
        gbc.setState(0xb217, 0x761b, 0x5ba0, 0x7780, 0x9ea3, 0x9c65, 0x1, 0x1);
        gbc.writeMem(0x9c65, { 0x14 });
        gbc.writeMem(0xb217, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x761b, gbc.sp());
        EXPECT(0xb219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9c65));
        EXPECT(0xcb, gbc.readMem(0xb217));
        EXPECT(0x96, gbc.readMem(0xb218));
        // CB 96 00D5
        gbc.setState(0xbb64, 0x7618, 0xb40, 0xe0ed, 0x9d0e, 0x1565, 0x0, 0x1);
        gbc.writeMem(0x1565, { 0xda });
        gbc.writeMem(0xbb64, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7618, gbc.sp());
        EXPECT(0xbb66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb64));
        EXPECT(0x96, gbc.readMem(0xbb65));
        // CB 96 00D7
        gbc.setState(0x17ad, 0x1411, 0x9f80, 0x8b38, 0xaf03, 0x9663, 0x0, 0x0);
        gbc.writeMem(0x17ad, { 0xcb, 0x96 });
        gbc.writeMem(0x9663, { 0x26 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1411, gbc.sp());
        EXPECT(0x17af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9663));
        // CB 96 00D8
        gbc.setState(0xcc50, 0x7cd1, 0x40f0, 0x2c51, 0x25f6, 0xa56b, 0x0, 0x1);
        gbc.writeMem(0xa56b, { 0x39 });
        gbc.writeMem(0xcc50, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7cd1, gbc.sp());
        EXPECT(0xcc52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xa56b));
        EXPECT(0xcb, gbc.readMem(0xcc50));
        EXPECT(0x96, gbc.readMem(0xcc51));
        // CB 96 00DA
        gbc.setState(0x728c, 0x7586, 0x3bc0, 0xf1a0, 0xfb95, 0x23f5, 0x1, 0x0);
        gbc.writeMem(0x23f5, { 0x38 });
        gbc.writeMem(0x728c, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7586, gbc.sp());
        EXPECT(0x728e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 00DB
        gbc.setState(0x481b, 0x43d6, 0x4b50, 0x3a69, 0x8b74, 0xa7b8, 0x1, 0x0);
        gbc.writeMem(0x481b, { 0xcb, 0x96 });
        gbc.writeMem(0xa7b8, { 0xb2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x43d6, gbc.sp());
        EXPECT(0x481d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa7b8));
        // CB 96 00DC
        gbc.setState(0x6cb5, 0x4bc7, 0xfc80, 0x5df3, 0x86ca, 0x3f57, 0x0, 0x0);
        gbc.writeMem(0x3f57, { 0x30 });
        gbc.writeMem(0x6cb5, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4bc7, gbc.sp());
        EXPECT(0x6cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 00DE
        gbc.setState(0x7f5d, 0x8acd, 0x93c0, 0xf8cb, 0x85ae, 0x700, 0x0, 0x1);
        gbc.writeMem(0x700, { 0xdb });
        gbc.writeMem(0x7f5d, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8acd, gbc.sp());
        EXPECT(0x7f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 00DF
        gbc.setState(0x6112, 0x1df6, 0x97d0, 0x830e, 0x9ef1, 0xbb70, 0x0, 0x1);
        gbc.writeMem(0x6112, { 0xcb, 0x96 });
        gbc.writeMem(0xbb70, { 0x86 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1df6, gbc.sp());
        EXPECT(0x6114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbb70));
        // CB 96 00E0
        gbc.setState(0x24c3, 0x91cb, 0x920, 0x9ed9, 0xa1b1, 0x59c, 0x1, 0x0);
        gbc.writeMem(0x59c, { 0x18 });
        gbc.writeMem(0x24c3, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x91cb, gbc.sp());
        EXPECT(0x24c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 00E2
        gbc.setState(0x770f, 0x801c, 0xca90, 0x83c2, 0x52a7, 0x4d1d, 0x1, 0x1);
        gbc.writeMem(0x4d1d, { 0x2 });
        gbc.writeMem(0x770f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x801c, gbc.sp());
        EXPECT(0x7711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 00E3
        gbc.setState(0x78f6, 0xb7e7, 0x67f0, 0x3a5b, 0x599b, 0x9444, 0x1, 0x0);
        gbc.writeMem(0x78f6, { 0xcb, 0x96 });
        gbc.writeMem(0x9444, { 0x1d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb7e7, gbc.sp());
        EXPECT(0x78f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9444));
        // CB 96 00E4
        gbc.setState(0xec52, 0xeb91, 0x8c50, 0x8d69, 0x8ad1, 0xf86d, 0x0, 0x0);
        gbc.writeMem(0xec52, { 0xcb, 0x96 });
        gbc.writeMem(0xf86d, { 0xd6 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xeb91, gbc.sp());
        EXPECT(0xec54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec52));
        EXPECT(0x96, gbc.readMem(0xec53));
        EXPECT(0xd2, gbc.readMem(0xf86d));
        // CB 96 00E5
        gbc.setState(0x788d, 0x8b92, 0x9c40, 0xafc4, 0xb97b, 0x843, 0x1, 0x0);
        gbc.writeMem(0x843, { 0x89 });
        gbc.writeMem(0x788d, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8b92, gbc.sp());
        EXPECT(0x788f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 00E6
        gbc.setState(0x5c66, 0x832a, 0xcc30, 0x873c, 0x7b99, 0xc2db, 0x0, 0x1);
        gbc.writeMem(0x5c66, { 0xcb, 0x96 });
        gbc.writeMem(0xc2db, { 0x67 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x832a, gbc.sp());
        EXPECT(0x5c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xc2db));
        // CB 96 00E8
        gbc.setState(0x5139, 0x8d6f, 0x24b0, 0x4f59, 0x9392, 0xdb17, 0x0, 0x1);
        gbc.writeMem(0x5139, { 0xcb, 0x96 });
        gbc.writeMem(0xdb17, { 0x65 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8d6f, gbc.sp());
        EXPECT(0x513b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdb17));
        // CB 96 00E9
        gbc.setState(0xcbc9, 0xd7c8, 0x76b0, 0xc271, 0x198, 0xf6df, 0x1, 0x1);
        gbc.writeMem(0xcbc9, { 0xcb, 0x96 });
        gbc.writeMem(0xf6df, { 0xe7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd7c8, gbc.sp());
        EXPECT(0xcbcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc9));
        EXPECT(0x96, gbc.readMem(0xcbca));
        EXPECT(0xe3, gbc.readMem(0xf6df));
        // CB 96 00EA
        gbc.setState(0xb1de, 0x7bf1, 0xb2b0, 0x87aa, 0x837b, 0xa83e, 0x1, 0x1);
        gbc.writeMem(0xa83e, { 0xbe });
        gbc.writeMem(0xb1de, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7bf1, gbc.sp());
        EXPECT(0xb1e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xa83e));
        EXPECT(0xcb, gbc.readMem(0xb1de));
        EXPECT(0x96, gbc.readMem(0xb1df));
        // CB 96 00ED
        gbc.setState(0xabb0, 0x9207, 0xec40, 0x14b, 0xc7d2, 0xa72e, 0x0, 0x1);
        gbc.writeMem(0xa72e, { 0xbe });
        gbc.writeMem(0xabb0, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9207, gbc.sp());
        EXPECT(0xabb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xa72e));
        EXPECT(0xcb, gbc.readMem(0xabb0));
        EXPECT(0x96, gbc.readMem(0xabb1));
        // CB 96 00EF
        gbc.setState(0xb944, 0xe0ab, 0x1380, 0x1bea, 0x593b, 0xa8f8, 0x0, 0x1);
        gbc.writeMem(0xa8f8, { 0xd9 });
        gbc.writeMem(0xb944, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe0ab, gbc.sp());
        EXPECT(0xb946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa8f8));
        EXPECT(0xcb, gbc.readMem(0xb944));
        EXPECT(0x96, gbc.readMem(0xb945));
        // CB 96 00F2
        gbc.setState(0x6c56, 0xad1c, 0x4350, 0x5635, 0xb2aa, 0xb114, 0x1, 0x1);
        gbc.writeMem(0x6c56, { 0xcb, 0x96 });
        gbc.writeMem(0xb114, { 0x3c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xad1c, gbc.sp());
        EXPECT(0x6c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb114));
        // CB 96 00F4
        gbc.setState(0x6377, 0x3f15, 0xfd00, 0x70fe, 0xe9cb, 0xeb15, 0x0, 0x0);
        gbc.writeMem(0x6377, { 0xcb, 0x96 });
        gbc.writeMem(0xeb15, { 0xe6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3f15, gbc.sp());
        EXPECT(0x6379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xeb15));
        // CB 96 00F5
        gbc.setState(0x61f2, 0xf758, 0x3490, 0x544c, 0x3ec4, 0x351e, 0x0, 0x0);
        gbc.writeMem(0x351e, { 0xa3 });
        gbc.writeMem(0x61f2, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf758, gbc.sp());
        EXPECT(0x61f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 00F6
        gbc.setState(0x6d85, 0x87de, 0x27c0, 0x39fa, 0x37de, 0xdf26, 0x1, 0x0);
        gbc.writeMem(0x6d85, { 0xcb, 0x96 });
        gbc.writeMem(0xdf26, { 0x61 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x87de, gbc.sp());
        EXPECT(0x6d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdf26));
        // CB 96 00F7
        gbc.setState(0xefdf, 0xc5e7, 0x2660, 0x8c5, 0x8094, 0xde5a, 0x1, 0x1);
        gbc.writeMem(0xde5a, { 0xc1 });
        gbc.writeMem(0xefdf, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc5e7, gbc.sp());
        EXPECT(0xefe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xde5a));
        EXPECT(0xcb, gbc.readMem(0xefdf));
        EXPECT(0x96, gbc.readMem(0xefe0));
        // CB 96 00F8
        gbc.setState(0x86cc, 0x77, 0xb720, 0x6ae1, 0x3993, 0xb1b1, 0x0, 0x0);
        gbc.writeMem(0x86cc, { 0xcb, 0x96 });
        gbc.writeMem(0xb1b1, { 0x76 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x77, gbc.sp());
        EXPECT(0x86ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86cc));
        EXPECT(0x96, gbc.readMem(0x86cd));
        EXPECT(0x72, gbc.readMem(0xb1b1));
        // CB 96 00F9
        gbc.setState(0xd048, 0xdf25, 0xae40, 0x30a7, 0x1703, 0x8f84, 0x1, 0x0);
        gbc.writeMem(0x8f84, { 0x46 });
        gbc.writeMem(0xd048, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdf25, gbc.sp());
        EXPECT(0xd04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8f84));
        EXPECT(0xcb, gbc.readMem(0xd048));
        EXPECT(0x96, gbc.readMem(0xd049));
        // CB 96 00FA
        gbc.setState(0xe068, 0x237b, 0xdd60, 0xd9e8, 0xc444, 0x4b6a, 0x1, 0x0);
        gbc.writeMem(0x4b6a, { 0xfa });
        gbc.writeMem(0xe068, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x237b, gbc.sp());
        EXPECT(0xe06a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe068));
        EXPECT(0x96, gbc.readMem(0xe069));
        // CB 96 00FB
        gbc.setState(0x204e, 0x633a, 0x3fd0, 0x5bae, 0xc0cb, 0x21d9, 0x0, 0x0);
        gbc.writeMem(0x204e, { 0xcb, 0x96 });
        gbc.writeMem(0x21d9, { 0xd9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x633a, gbc.sp());
        EXPECT(0x2050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 00FE
        gbc.setState(0x51c4, 0x2769, 0x8a40, 0x615f, 0xe250, 0x8d92, 0x1, 0x0);
        gbc.writeMem(0x51c4, { 0xcb, 0x96 });
        gbc.writeMem(0x8d92, { 0x92 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2769, gbc.sp());
        EXPECT(0x51c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8d92));
        // CB 96 00FF
        gbc.setState(0x8841, 0x76c2, 0xc400, 0xc2aa, 0xf2c7, 0x2daa, 0x0, 0x1);
        gbc.writeMem(0x2daa, { 0xb8 });
        gbc.writeMem(0x8841, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x76c2, gbc.sp());
        EXPECT(0x8843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8841));
        EXPECT(0x96, gbc.readMem(0x8842));
        // CB 96 0100
        gbc.setState(0x3576, 0x385e, 0x4d0, 0x879b, 0x2a7c, 0xd75e, 0x0, 0x1);
        gbc.writeMem(0x3576, { 0xcb, 0x96 });
        gbc.writeMem(0xd75e, { 0xee });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x385e, gbc.sp());
        EXPECT(0x3578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xd75e));
        // CB 96 0101
        gbc.setState(0xddd4, 0x9ac4, 0x6700, 0xbf27, 0x9b92, 0xcdca, 0x0, 0x1);
        gbc.writeMem(0xcdca, { 0x9b });
        gbc.writeMem(0xddd4, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9ac4, gbc.sp());
        EXPECT(0xddd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcdca));
        EXPECT(0xcb, gbc.readMem(0xddd4));
        EXPECT(0x96, gbc.readMem(0xddd5));
        // CB 96 0103
        gbc.setState(0xd06b, 0xd54c, 0x8cf0, 0x2619, 0xd4a5, 0x8e27, 0x0, 0x1);
        gbc.writeMem(0x8e27, { 0x71 });
        gbc.writeMem(0xd06b, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd54c, gbc.sp());
        EXPECT(0xd06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8e27));
        EXPECT(0xcb, gbc.readMem(0xd06b));
        EXPECT(0x96, gbc.readMem(0xd06c));
        // CB 96 0104
        gbc.setState(0x832a, 0x1d93, 0xc7a0, 0x1515, 0xe832, 0x1ce5, 0x0, 0x1);
        gbc.writeMem(0x1ce5, { 0x3a });
        gbc.writeMem(0x832a, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1d93, gbc.sp());
        EXPECT(0x832c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x832a));
        EXPECT(0x96, gbc.readMem(0x832b));
        // CB 96 0106
        gbc.setState(0x83d8, 0x7dc7, 0xd940, 0x87fc, 0x16b, 0xba16, 0x0, 0x1);
        gbc.writeMem(0x83d8, { 0xcb, 0x96 });
        gbc.writeMem(0xba16, { 0x79 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7dc7, gbc.sp());
        EXPECT(0x83da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d8));
        EXPECT(0x96, gbc.readMem(0x83d9));
        EXPECT(0x79, gbc.readMem(0xba16));
        // CB 96 0108
        gbc.setState(0x7e2b, 0x3933, 0xb500, 0xa9c9, 0x8ebc, 0x6e3b, 0x0, 0x1);
        gbc.writeMem(0x6e3b, { 0x88 });
        gbc.writeMem(0x7e2b, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3933, gbc.sp());
        EXPECT(0x7e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 010F
        gbc.setState(0xa69b, 0x6ea8, 0xc070, 0x3937, 0xfcd4, 0x8002, 0x1, 0x0);
        gbc.writeMem(0x8002, { 0xe0 });
        gbc.writeMem(0xa69b, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6ea8, gbc.sp());
        EXPECT(0xa69d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8002));
        EXPECT(0xcb, gbc.readMem(0xa69b));
        EXPECT(0x96, gbc.readMem(0xa69c));
        // CB 96 0112
        gbc.setState(0xce94, 0x858, 0x680, 0x9a85, 0xb411, 0xcd1, 0x0, 0x1);
        gbc.writeMem(0xcd1, { 0xb });
        gbc.writeMem(0xce94, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x858, gbc.sp());
        EXPECT(0xce96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce94));
        EXPECT(0x96, gbc.readMem(0xce95));
        // CB 96 0114
        gbc.setState(0x449f, 0x9fac, 0x46c0, 0x56e7, 0x90c0, 0xfe9c, 0x0, 0x0);
        gbc.writeMem(0x449f, { 0xcb, 0x96 });
        gbc.writeMem(0xfe9c, { 0x92 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9fac, gbc.sp());
        EXPECT(0x44a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xfe9c));
        // CB 96 0116
        gbc.setState(0x2511, 0x83db, 0x42e0, 0x3821, 0x9004, 0xbcdb, 0x1, 0x1);
        gbc.writeMem(0x2511, { 0xcb, 0x96 });
        gbc.writeMem(0xbcdb, { 0x5e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x83db, gbc.sp());
        EXPECT(0x2513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xbcdb));
        // CB 96 0117
        gbc.setState(0x9b3, 0xd391, 0x9300, 0xaa88, 0x563b, 0x85c4, 0x1, 0x0);
        gbc.writeMem(0x9b3, { 0xcb, 0x96 });
        gbc.writeMem(0x85c4, { 0x72 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd391, gbc.sp());
        EXPECT(0x9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x85c4));
        // CB 96 0118
        gbc.setState(0x87c, 0xa60c, 0xdaa0, 0xbb08, 0xbec0, 0x8139, 0x1, 0x0);
        gbc.writeMem(0x87c, { 0xcb, 0x96 });
        gbc.writeMem(0x8139, { 0x3e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa60c, gbc.sp());
        EXPECT(0x87e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x8139));
        // CB 96 0119
        gbc.setState(0x9277, 0x64db, 0xd070, 0xad00, 0xadbd, 0x9992, 0x1, 0x0);
        gbc.writeMem(0x9277, { 0xcb, 0x96 });
        gbc.writeMem(0x9992, { 0xc6 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x64db, gbc.sp());
        EXPECT(0x9279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9277));
        EXPECT(0x96, gbc.readMem(0x9278));
        EXPECT(0xc2, gbc.readMem(0x9992));
        // CB 96 011A
        gbc.setState(0x74e7, 0xfa42, 0x46e0, 0x6132, 0xa526, 0xe95d, 0x0, 0x1);
        gbc.writeMem(0x74e7, { 0xcb, 0x96 });
        gbc.writeMem(0xe95d, { 0x56 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfa42, gbc.sp());
        EXPECT(0x74e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe95d));
        // CB 96 011B
        gbc.setState(0xb618, 0x7aca, 0x6d20, 0x9b06, 0xdc83, 0xbbad, 0x0, 0x0);
        gbc.writeMem(0xb618, { 0xcb, 0x96 });
        gbc.writeMem(0xbbad, { 0x76 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7aca, gbc.sp());
        EXPECT(0xb61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb618));
        EXPECT(0x96, gbc.readMem(0xb619));
        EXPECT(0x72, gbc.readMem(0xbbad));
        // CB 96 011C
        gbc.setState(0x8f81, 0x6de0, 0x9b40, 0x3c71, 0xafe1, 0xd80c, 0x0, 0x1);
        gbc.writeMem(0x8f81, { 0xcb, 0x96 });
        gbc.writeMem(0xd80c, { 0xa });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6de0, gbc.sp());
        EXPECT(0x8f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f81));
        EXPECT(0x96, gbc.readMem(0x8f82));
        EXPECT(0xa, gbc.readMem(0xd80c));
        // CB 96 011E
        gbc.setState(0xea83, 0xa453, 0x7fe0, 0x56d8, 0x77ed, 0xb8b0, 0x1, 0x0);
        gbc.writeMem(0xb8b0, { 0x87 });
        gbc.writeMem(0xea83, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa453, gbc.sp());
        EXPECT(0xea85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xb8b0));
        EXPECT(0xcb, gbc.readMem(0xea83));
        EXPECT(0x96, gbc.readMem(0xea84));
        // CB 96 0120
        gbc.setState(0xcc72, 0x4c88, 0x7a70, 0x6aab, 0x7430, 0x4d5f, 0x1, 0x0);
        gbc.writeMem(0x4d5f, { 0x50 });
        gbc.writeMem(0xcc72, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4c88, gbc.sp());
        EXPECT(0xcc74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc72));
        EXPECT(0x96, gbc.readMem(0xcc73));
        // CB 96 0122
        gbc.setState(0x6821, 0xc2d4, 0x3cf0, 0xcddd, 0x5f5a, 0x9fc1, 0x1, 0x1);
        gbc.writeMem(0x6821, { 0xcb, 0x96 });
        gbc.writeMem(0x9fc1, { 0xb2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc2d4, gbc.sp());
        EXPECT(0x6823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9fc1));
        // CB 96 0123
        gbc.setState(0xb01b, 0x5a42, 0x4fc0, 0xf24, 0x8842, 0xd509, 0x1, 0x0);
        gbc.writeMem(0xb01b, { 0xcb, 0x96 });
        gbc.writeMem(0xd509, { 0xc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5a42, gbc.sp());
        EXPECT(0xb01d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb01b));
        EXPECT(0x96, gbc.readMem(0xb01c));
        EXPECT(0x8, gbc.readMem(0xd509));
        // CB 96 0127
        gbc.setState(0x225f, 0x8002, 0xb5b0, 0x6d54, 0x2c7b, 0xe558, 0x0, 0x0);
        gbc.writeMem(0x225f, { 0xcb, 0x96 });
        gbc.writeMem(0xe558, { 0x16 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8002, gbc.sp());
        EXPECT(0x2261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xe558));
        // CB 96 0128
        gbc.setState(0xabb5, 0x1f4b, 0xd170, 0x85c1, 0x4851, 0x617f, 0x1, 0x1);
        gbc.writeMem(0x617f, { 0x43 });
        gbc.writeMem(0xabb5, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1f4b, gbc.sp());
        EXPECT(0xabb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb5));
        EXPECT(0x96, gbc.readMem(0xabb6));
        // CB 96 0129
        gbc.setState(0xa9dd, 0xe0d5, 0x30c0, 0x4036, 0x3ae3, 0xd9e5, 0x0, 0x0);
        gbc.writeMem(0xa9dd, { 0xcb, 0x96 });
        gbc.writeMem(0xd9e5, { 0x67 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe0d5, gbc.sp());
        EXPECT(0xa9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9dd));
        EXPECT(0x96, gbc.readMem(0xa9de));
        EXPECT(0x63, gbc.readMem(0xd9e5));
        // CB 96 012A
        gbc.setState(0xdbb1, 0x4f73, 0x8cd0, 0xba5c, 0xe2cc, 0x1d94, 0x0, 0x0);
        gbc.writeMem(0x1d94, { 0x3b });
        gbc.writeMem(0xdbb1, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4f73, gbc.sp());
        EXPECT(0xdbb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb1));
        EXPECT(0x96, gbc.readMem(0xdbb2));
        // CB 96 012B
        gbc.setState(0x87d4, 0x6c6b, 0x3870, 0x37ab, 0x6ab1, 0x476b, 0x1, 0x0);
        gbc.writeMem(0x476b, { 0x30 });
        gbc.writeMem(0x87d4, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6c6b, gbc.sp());
        EXPECT(0x87d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d4));
        EXPECT(0x96, gbc.readMem(0x87d5));
        // CB 96 012C
        gbc.setState(0x946c, 0x4669, 0x11c0, 0x2380, 0x8ca1, 0x937a, 0x1, 0x0);
        gbc.writeMem(0x937a, { 0xa5 });
        gbc.writeMem(0x946c, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4669, gbc.sp());
        EXPECT(0x946e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x937a));
        EXPECT(0xcb, gbc.readMem(0x946c));
        EXPECT(0x96, gbc.readMem(0x946d));
        // CB 96 012E
        gbc.setState(0xd287, 0x800a, 0x59b0, 0xb5a1, 0xc595, 0x91b9, 0x0, 0x1);
        gbc.writeMem(0x91b9, { 0x20 });
        gbc.writeMem(0xd287, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x800a, gbc.sp());
        EXPECT(0xd289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x91b9));
        EXPECT(0xcb, gbc.readMem(0xd287));
        EXPECT(0x96, gbc.readMem(0xd288));
        // CB 96 012F
        gbc.setState(0x210c, 0xab0a, 0x3e00, 0xe486, 0x48f1, 0x3695, 0x1, 0x0);
        gbc.writeMem(0x210c, { 0xcb, 0x96 });
        gbc.writeMem(0x3695, { 0xb8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xab0a, gbc.sp());
        EXPECT(0x210e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0130
        gbc.setState(0x5993, 0x486d, 0xec60, 0x29cd, 0xbfe4, 0x9e76, 0x0, 0x1);
        gbc.writeMem(0x5993, { 0xcb, 0x96 });
        gbc.writeMem(0x9e76, { 0x6f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x486d, gbc.sp());
        EXPECT(0x5995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x9e76));
        // CB 96 0131
        gbc.setState(0x7765, 0xeb54, 0x6080, 0x75b9, 0x1cd5, 0xa312, 0x1, 0x1);
        gbc.writeMem(0x7765, { 0xcb, 0x96 });
        gbc.writeMem(0xa312, { 0x5f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xeb54, gbc.sp());
        EXPECT(0x7767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa312));
        // CB 96 0132
        gbc.setState(0xf3e, 0x9438, 0x3d50, 0x82c9, 0xb693, 0xac01, 0x1, 0x0);
        gbc.writeMem(0xf3e, { 0xcb, 0x96 });
        gbc.writeMem(0xac01, { 0x7b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9438, gbc.sp());
        EXPECT(0xf40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xac01));
        // CB 96 0133
        gbc.setState(0xbf4b, 0x6838, 0xfed0, 0x8840, 0x3b5a, 0xf65, 0x0, 0x1);
        gbc.writeMem(0xf65, { 0x39 });
        gbc.writeMem(0xbf4b, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6838, gbc.sp());
        EXPECT(0xbf4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4b));
        EXPECT(0x96, gbc.readMem(0xbf4c));
        // CB 96 0134
        gbc.setState(0x897f, 0x23b2, 0xb50, 0x2885, 0x5df2, 0xedb3, 0x0, 0x0);
        gbc.writeMem(0x897f, { 0xcb, 0x96 });
        gbc.writeMem(0xedb3, { 0x39 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x23b2, gbc.sp());
        EXPECT(0x8981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x897f));
        EXPECT(0x96, gbc.readMem(0x8980));
        EXPECT(0x39, gbc.readMem(0xedb3));
        // CB 96 0137
        gbc.setState(0x6357, 0x729c, 0xb7e0, 0xe9fe, 0xfe23, 0xa63a, 0x0, 0x1);
        gbc.writeMem(0x6357, { 0xcb, 0x96 });
        gbc.writeMem(0xa63a, { 0x78 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x729c, gbc.sp());
        EXPECT(0x6359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa63a));
        // CB 96 0138
        gbc.setState(0xc289, 0xffdb, 0x63b0, 0x4f05, 0x7198, 0xba22, 0x0, 0x1);
        gbc.writeMem(0xba22, { 0xf0 });
        gbc.writeMem(0xc289, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xffdb, gbc.sp());
        EXPECT(0xc28b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xba22));
        EXPECT(0xcb, gbc.readMem(0xc289));
        EXPECT(0x96, gbc.readMem(0xc28a));
        // CB 96 0139
        gbc.setState(0x2a50, 0xb66b, 0x7b50, 0x4a27, 0xed89, 0xa8bf, 0x0, 0x1);
        gbc.writeMem(0x2a50, { 0xcb, 0x96 });
        gbc.writeMem(0xa8bf, { 0x4a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb66b, gbc.sp());
        EXPECT(0x2a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xa8bf));
        // CB 96 013B
        gbc.setState(0x2e84, 0x4af4, 0x7a90, 0x3b8, 0x22a6, 0xd825, 0x0, 0x0);
        gbc.writeMem(0x2e84, { 0xcb, 0x96 });
        gbc.writeMem(0xd825, { 0xa1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4af4, gbc.sp());
        EXPECT(0x2e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd825));
        // CB 96 013C
        gbc.setState(0xed3a, 0x9afb, 0x7f30, 0x6a66, 0x3a77, 0x1f55, 0x0, 0x1);
        gbc.writeMem(0x1f55, { 0x6a });
        gbc.writeMem(0xed3a, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9afb, gbc.sp());
        EXPECT(0xed3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed3a));
        EXPECT(0x96, gbc.readMem(0xed3b));
        // CB 96 013E
        gbc.setState(0x28ff, 0xfa10, 0xa2b0, 0x78d7, 0xc365, 0xc2b0, 0x0, 0x1);
        gbc.writeMem(0x28ff, { 0xcb, 0x96 });
        gbc.writeMem(0xc2b0, { 0x61 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfa10, gbc.sp());
        EXPECT(0x2901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc2b0));
        // CB 96 013F
        gbc.setState(0xa6b0, 0x382f, 0x7ef0, 0x8b8a, 0xb22e, 0x2829, 0x1, 0x1);
        gbc.writeMem(0x2829, { 0x10 });
        gbc.writeMem(0xa6b0, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x382f, gbc.sp());
        EXPECT(0xa6b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b0));
        EXPECT(0x96, gbc.readMem(0xa6b1));
        // CB 96 0142
        gbc.setState(0x815f, 0x4820, 0xdc10, 0x9f31, 0xdbc6, 0xc876, 0x1, 0x1);
        gbc.writeMem(0x815f, { 0xcb, 0x96 });
        gbc.writeMem(0xc876, { 0x92 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4820, gbc.sp());
        EXPECT(0x8161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815f));
        EXPECT(0x96, gbc.readMem(0x8160));
        EXPECT(0x92, gbc.readMem(0xc876));
        // CB 96 0143
        gbc.setState(0xb6cf, 0x8cdd, 0xdc60, 0xd519, 0x585, 0xa23e, 0x1, 0x1);
        gbc.writeMem(0xa23e, { 0x62 });
        gbc.writeMem(0xb6cf, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8cdd, gbc.sp());
        EXPECT(0xb6d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xa23e));
        EXPECT(0xcb, gbc.readMem(0xb6cf));
        EXPECT(0x96, gbc.readMem(0xb6d0));
        // CB 96 0144
        gbc.setState(0xaf90, 0x2a1f, 0x5ff0, 0x9668, 0x6564, 0xfdb6, 0x0, 0x1);
        gbc.writeMem(0xaf90, { 0xcb, 0x96 });
        gbc.writeMem(0xfdb6, { 0x10 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2a1f, gbc.sp());
        EXPECT(0xaf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf90));
        EXPECT(0x96, gbc.readMem(0xaf91));
        EXPECT(0x10, gbc.readMem(0xfdb6));
        // CB 96 0146
        gbc.setState(0xb4d2, 0x494d, 0x2f50, 0x2b13, 0x4f38, 0x7b3b, 0x1, 0x0);
        gbc.writeMem(0x7b3b, { 0x21 });
        gbc.writeMem(0xb4d2, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x494d, gbc.sp());
        EXPECT(0xb4d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d2));
        EXPECT(0x96, gbc.readMem(0xb4d3));
        // CB 96 0147
        gbc.setState(0xbc12, 0xe5c, 0x130, 0x1c4e, 0xdbd4, 0xcf26, 0x1, 0x0);
        gbc.writeMem(0xbc12, { 0xcb, 0x96 });
        gbc.writeMem(0xcf26, { 0x1a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe5c, gbc.sp());
        EXPECT(0xbc14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc12));
        EXPECT(0x96, gbc.readMem(0xbc13));
        EXPECT(0x1a, gbc.readMem(0xcf26));
        // CB 96 0148
        gbc.setState(0x70b6, 0xdc4e, 0xd3e0, 0x418e, 0x1533, 0xbe9c, 0x1, 0x1);
        gbc.writeMem(0x70b6, { 0xcb, 0x96 });
        gbc.writeMem(0xbe9c, { 0x69 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdc4e, gbc.sp());
        EXPECT(0x70b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbe9c));
        // CB 96 0149
        gbc.setState(0x7454, 0x77d1, 0xdaf0, 0x506a, 0xf903, 0x7352, 0x0, 0x0);
        gbc.writeMem(0x7352, { 0x23 });
        gbc.writeMem(0x7454, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x77d1, gbc.sp());
        EXPECT(0x7456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 014A
        gbc.setState(0x7b01, 0xb0c7, 0xf190, 0xa9b2, 0x4572, 0x1b97, 0x1, 0x1);
        gbc.writeMem(0x1b97, { 0xd2 });
        gbc.writeMem(0x7b01, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb0c7, gbc.sp());
        EXPECT(0x7b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 014C
        gbc.setState(0x235b, 0xc2ea, 0x6150, 0xeab8, 0x76b5, 0xedf5, 0x1, 0x0);
        gbc.writeMem(0x235b, { 0xcb, 0x96 });
        gbc.writeMem(0xedf5, { 0x11 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc2ea, gbc.sp());
        EXPECT(0x235d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xedf5));
        // CB 96 014D
        gbc.setState(0xacdb, 0x3c61, 0x48d0, 0xeef0, 0x898d, 0x4d0e, 0x0, 0x0);
        gbc.writeMem(0x4d0e, { 0x2a });
        gbc.writeMem(0xacdb, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3c61, gbc.sp());
        EXPECT(0xacdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacdb));
        EXPECT(0x96, gbc.readMem(0xacdc));
        // CB 96 014E
        gbc.setState(0xde2a, 0x2c4a, 0xf1f0, 0x8c6c, 0x36e5, 0xa692, 0x1, 0x0);
        gbc.writeMem(0xa692, { 0x2b });
        gbc.writeMem(0xde2a, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2c4a, gbc.sp());
        EXPECT(0xde2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa692));
        EXPECT(0xcb, gbc.readMem(0xde2a));
        EXPECT(0x96, gbc.readMem(0xde2b));
        // CB 96 014F
        gbc.setState(0xa804, 0x5e1b, 0x37f0, 0x3246, 0x5fa1, 0xfb9d, 0x1, 0x1);
        gbc.writeMem(0xa804, { 0xcb, 0x96 });
        gbc.writeMem(0xfb9d, { 0x41 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5e1b, gbc.sp());
        EXPECT(0xa806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa804));
        EXPECT(0x96, gbc.readMem(0xa805));
        EXPECT(0x41, gbc.readMem(0xfb9d));
        // CB 96 0150
        gbc.setState(0xc66f, 0x1fc5, 0xe7d0, 0xb79e, 0xfce0, 0xbd06, 0x0, 0x1);
        gbc.writeMem(0xbd06, { 0x35 });
        gbc.writeMem(0xc66f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1fc5, gbc.sp());
        EXPECT(0xc671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbd06));
        EXPECT(0xcb, gbc.readMem(0xc66f));
        EXPECT(0x96, gbc.readMem(0xc670));
        // CB 96 0151
        gbc.setState(0xa65, 0x31cf, 0xdef0, 0x89cd, 0x5417, 0x4add, 0x1, 0x0);
        gbc.writeMem(0xa65, { 0xcb, 0x96 });
        gbc.writeMem(0x4add, { 0x50 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x31cf, gbc.sp());
        EXPECT(0xa67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0154
        gbc.setState(0x407c, 0xbef9, 0x65a0, 0x99be, 0x8b7d, 0xeb99, 0x1, 0x0);
        gbc.writeMem(0x407c, { 0xcb, 0x96 });
        gbc.writeMem(0xeb99, { 0x72 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbef9, gbc.sp());
        EXPECT(0x407e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xeb99));
        // CB 96 0156
        gbc.setState(0x59e3, 0x630d, 0xd010, 0xbf7d, 0xa602, 0xc799, 0x1, 0x0);
        gbc.writeMem(0x59e3, { 0xcb, 0x96 });
        gbc.writeMem(0xc799, { 0xc3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x630d, gbc.sp());
        EXPECT(0x59e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc799));
        // CB 96 0157
        gbc.setState(0xb8e0, 0x2587, 0xbda0, 0xcc45, 0x7aca, 0x373c, 0x0, 0x1);
        gbc.writeMem(0x373c, { 0x48 });
        gbc.writeMem(0xb8e0, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2587, gbc.sp());
        EXPECT(0xb8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e0));
        EXPECT(0x96, gbc.readMem(0xb8e1));
        // CB 96 015A
        gbc.setState(0xe192, 0x1cd8, 0xbc30, 0x9ed2, 0x4047, 0x8e8b, 0x0, 0x1);
        gbc.writeMem(0x8e8b, { 0xf });
        gbc.writeMem(0xe192, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1cd8, gbc.sp());
        EXPECT(0xe194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8e8b));
        EXPECT(0xcb, gbc.readMem(0xe192));
        EXPECT(0x96, gbc.readMem(0xe193));
        // CB 96 015D
        gbc.setState(0xcdca, 0x37a6, 0x1e70, 0x31ea, 0xd1da, 0xd7ae, 0x1, 0x1);
        gbc.writeMem(0xcdca, { 0xcb, 0x96 });
        gbc.writeMem(0xd7ae, { 0x80 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x37a6, gbc.sp());
        EXPECT(0xcdcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdca));
        EXPECT(0x96, gbc.readMem(0xcdcb));
        EXPECT(0x80, gbc.readMem(0xd7ae));
        // CB 96 015F
        gbc.setState(0x4407, 0x9cf5, 0xad70, 0x92b4, 0x6400, 0x97cc, 0x0, 0x0);
        gbc.writeMem(0x4407, { 0xcb, 0x96 });
        gbc.writeMem(0x97cc, { 0x39 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9cf5, gbc.sp());
        EXPECT(0x4409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x97cc));
        // CB 96 0160
        gbc.setState(0x15e2, 0xadc2, 0x7be0, 0xf1e0, 0xd585, 0xb2dd, 0x1, 0x0);
        gbc.writeMem(0x15e2, { 0xcb, 0x96 });
        gbc.writeMem(0xb2dd, { 0xa6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xadc2, gbc.sp());
        EXPECT(0x15e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb2dd));
        // CB 96 0161
        gbc.setState(0xcf97, 0x7e93, 0x9300, 0x988b, 0xca06, 0xf2aa, 0x1, 0x1);
        gbc.writeMem(0xcf97, { 0xcb, 0x96 });
        gbc.writeMem(0xf2aa, { 0x34 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7e93, gbc.sp());
        EXPECT(0xcf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf97));
        EXPECT(0x96, gbc.readMem(0xcf98));
        EXPECT(0x30, gbc.readMem(0xf2aa));
        // CB 96 0162
        gbc.setState(0x9200, 0x4630, 0x2270, 0xc186, 0xb4db, 0x137e, 0x0, 0x1);
        gbc.writeMem(0x137e, { 0xeb });
        gbc.writeMem(0x9200, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4630, gbc.sp());
        EXPECT(0x9202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9200));
        EXPECT(0x96, gbc.readMem(0x9201));
        // CB 96 0164
        gbc.setState(0xc25, 0x5d02, 0x8780, 0xc548, 0x7eab, 0x7bde, 0x0, 0x1);
        gbc.writeMem(0xc25, { 0xcb, 0x96 });
        gbc.writeMem(0x7bde, { 0x6b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5d02, gbc.sp());
        EXPECT(0xc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0166
        gbc.setState(0x9ac2, 0x2748, 0x2730, 0x7b03, 0x7188, 0x47a, 0x1, 0x0);
        gbc.writeMem(0x47a, { 0xf0 });
        gbc.writeMem(0x9ac2, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2748, gbc.sp());
        EXPECT(0x9ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac2));
        EXPECT(0x96, gbc.readMem(0x9ac3));
        // CB 96 0167
        gbc.setState(0x7b9d, 0x45b0, 0x980, 0x6052, 0xe89f, 0xab21, 0x1, 0x1);
        gbc.writeMem(0x7b9d, { 0xcb, 0x96 });
        gbc.writeMem(0xab21, { 0xf7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x45b0, gbc.sp());
        EXPECT(0x7b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xab21));
        // CB 96 0168
        gbc.setState(0x4e7d, 0xef15, 0x32f0, 0xe8a3, 0xb8fd, 0x88b0, 0x0, 0x0);
        gbc.writeMem(0x4e7d, { 0xcb, 0x96 });
        gbc.writeMem(0x88b0, { 0x85 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xef15, gbc.sp());
        EXPECT(0x4e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x88b0));
        // CB 96 0169
        gbc.setState(0x3800, 0xf19, 0xb1e0, 0xd19c, 0xc847, 0xbb89, 0x0, 0x1);
        gbc.writeMem(0x3800, { 0xcb, 0x96 });
        gbc.writeMem(0xbb89, { 0x87 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf19, gbc.sp());
        EXPECT(0x3802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xbb89));
        // CB 96 016A
        gbc.setState(0xa39b, 0x1741, 0x8d20, 0xf1c2, 0x6801, 0x57f6, 0x0, 0x0);
        gbc.writeMem(0x57f6, { 0x0 });
        gbc.writeMem(0xa39b, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1741, gbc.sp());
        EXPECT(0xa39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39b));
        EXPECT(0x96, gbc.readMem(0xa39c));
        // CB 96 016C
        gbc.setState(0x5e2, 0xec24, 0x1bc0, 0xf52c, 0x5c8c, 0x654f, 0x0, 0x0);
        gbc.writeMem(0x5e2, { 0xcb, 0x96 });
        gbc.writeMem(0x654f, { 0xda });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xec24, gbc.sp());
        EXPECT(0x5e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 016D
        gbc.setState(0x6df4, 0x1941, 0xd3b0, 0xacd0, 0x892c, 0xa292, 0x0, 0x0);
        gbc.writeMem(0x6df4, { 0xcb, 0x96 });
        gbc.writeMem(0xa292, { 0x3a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1941, gbc.sp());
        EXPECT(0x6df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xa292));
        // CB 96 016E
        gbc.setState(0xc365, 0xfc10, 0x20, 0x60ca, 0xbfd8, 0x7787, 0x0, 0x0);
        gbc.writeMem(0x7787, { 0x92 });
        gbc.writeMem(0xc365, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfc10, gbc.sp());
        EXPECT(0xc367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc365));
        EXPECT(0x96, gbc.readMem(0xc366));
        // CB 96 016F
        gbc.setState(0xdbf8, 0x2007, 0xccd0, 0xdc47, 0x6490, 0x9ca3, 0x0, 0x1);
        gbc.writeMem(0x9ca3, { 0xe9 });
        gbc.writeMem(0xdbf8, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2007, gbc.sp());
        EXPECT(0xdbfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9ca3));
        EXPECT(0xcb, gbc.readMem(0xdbf8));
        EXPECT(0x96, gbc.readMem(0xdbf9));
        // CB 96 0170
        gbc.setState(0x22d8, 0x5207, 0xed70, 0x3d18, 0x6ab6, 0xa4f4, 0x1, 0x1);
        gbc.writeMem(0x22d8, { 0xcb, 0x96 });
        gbc.writeMem(0xa4f4, { 0xaf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5207, gbc.sp());
        EXPECT(0x22da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xa4f4));
        // CB 96 0171
        gbc.setState(0x69ca, 0x5dc0, 0x7140, 0x51de, 0x313e, 0x20cd, 0x1, 0x0);
        gbc.writeMem(0x20cd, { 0x48 });
        gbc.writeMem(0x69ca, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5dc0, gbc.sp());
        EXPECT(0x69cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0175
        gbc.setState(0x6bbe, 0x7cfb, 0xac50, 0x5d56, 0x3f9f, 0xed52, 0x0, 0x1);
        gbc.writeMem(0x6bbe, { 0xcb, 0x96 });
        gbc.writeMem(0xed52, { 0xee });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7cfb, gbc.sp());
        EXPECT(0x6bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xed52));
        // CB 96 0178
        gbc.setState(0x8faa, 0x28e4, 0xa700, 0x2fbb, 0xf79f, 0x9074, 0x1, 0x1);
        gbc.writeMem(0x8faa, { 0xcb, 0x96 });
        gbc.writeMem(0x9074, { 0x99 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x28e4, gbc.sp());
        EXPECT(0x8fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8faa));
        EXPECT(0x96, gbc.readMem(0x8fab));
        EXPECT(0x99, gbc.readMem(0x9074));
        // CB 96 0179
        gbc.setState(0x9513, 0x69dc, 0xc920, 0xf64f, 0xaa34, 0xe454, 0x1, 0x1);
        gbc.writeMem(0x9513, { 0xcb, 0x96 });
        gbc.writeMem(0xe454, { 0xeb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x69dc, gbc.sp());
        EXPECT(0x9515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9513));
        EXPECT(0x96, gbc.readMem(0x9514));
        EXPECT(0xeb, gbc.readMem(0xe454));
        // CB 96 017A
        gbc.setState(0x94ea, 0x3b97, 0x7cc0, 0x4797, 0xa6f2, 0x3075, 0x1, 0x1);
        gbc.writeMem(0x3075, { 0x0 });
        gbc.writeMem(0x94ea, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3b97, gbc.sp());
        EXPECT(0x94ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ea));
        EXPECT(0x96, gbc.readMem(0x94eb));
        // CB 96 017B
        gbc.setState(0x2573, 0x55c5, 0xc980, 0x5294, 0xb852, 0x57a9, 0x0, 0x0);
        gbc.writeMem(0x2573, { 0xcb, 0x96 });
        gbc.writeMem(0x57a9, { 0x79 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x55c5, gbc.sp());
        EXPECT(0x2575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 017C
        gbc.setState(0xcf32, 0xaa90, 0x1e70, 0xbf01, 0x91de, 0x9fd9, 0x1, 0x1);
        gbc.writeMem(0x9fd9, { 0xaa });
        gbc.writeMem(0xcf32, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xaa90, gbc.sp());
        EXPECT(0xcf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9fd9));
        EXPECT(0xcb, gbc.readMem(0xcf32));
        EXPECT(0x96, gbc.readMem(0xcf33));
        // CB 96 017F
        gbc.setState(0x1cc5, 0xf044, 0xdc40, 0x3905, 0xafff, 0xfcba, 0x1, 0x1);
        gbc.writeMem(0x1cc5, { 0xcb, 0x96 });
        gbc.writeMem(0xfcba, { 0x1f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf044, gbc.sp());
        EXPECT(0x1cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xfcba));
        // CB 96 0180
        gbc.setState(0x2c8a, 0x786c, 0x19c0, 0x400a, 0x7ddf, 0xee91, 0x0, 0x1);
        gbc.writeMem(0x2c8a, { 0xcb, 0x96 });
        gbc.writeMem(0xee91, { 0xf1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x786c, gbc.sp());
        EXPECT(0x2c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xee91));
        // CB 96 0181
        gbc.setState(0xa3e, 0x8297, 0x8b30, 0x720, 0x7e69, 0xeb34, 0x0, 0x0);
        gbc.writeMem(0xa3e, { 0xcb, 0x96 });
        gbc.writeMem(0xeb34, { 0x7b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8297, gbc.sp());
        EXPECT(0xa40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xeb34));
        // CB 96 0183
        gbc.setState(0x679d, 0xae6f, 0xa800, 0xdc2f, 0x65c5, 0xbc07, 0x1, 0x0);
        gbc.writeMem(0x679d, { 0xcb, 0x96 });
        gbc.writeMem(0xbc07, { 0x2c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xae6f, gbc.sp());
        EXPECT(0x679f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xbc07));
        // CB 96 0185
        gbc.setState(0xe602, 0xc6b5, 0x71c0, 0xdb16, 0x9a8e, 0x19b2, 0x1, 0x0);
        gbc.writeMem(0x19b2, { 0x90 });
        gbc.writeMem(0xe602, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc6b5, gbc.sp());
        EXPECT(0xe604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe602));
        EXPECT(0x96, gbc.readMem(0xe603));
        // CB 96 0186
        gbc.setState(0x32d7, 0xb60e, 0x3090, 0xc9b8, 0xa2f6, 0x3a0f, 0x0, 0x1);
        gbc.writeMem(0x32d7, { 0xcb, 0x96 });
        gbc.writeMem(0x3a0f, { 0xc1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb60e, gbc.sp());
        EXPECT(0x32d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0188
        gbc.setState(0x43d2, 0xa8e9, 0x43d0, 0x6424, 0x8ae3, 0xfbc4, 0x0, 0x1);
        gbc.writeMem(0x43d2, { 0xcb, 0x96 });
        gbc.writeMem(0xfbc4, { 0x3c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa8e9, gbc.sp());
        EXPECT(0x43d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xfbc4));
        // CB 96 018A
        gbc.setState(0x2acf, 0x86e0, 0xe320, 0x9657, 0xe8ff, 0xf2c7, 0x1, 0x0);
        gbc.writeMem(0x2acf, { 0xcb, 0x96 });
        gbc.writeMem(0xf2c7, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x86e0, gbc.sp());
        EXPECT(0x2ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xf2c7));
        // CB 96 018B
        gbc.setState(0xde12, 0xa936, 0xaa10, 0xc833, 0x125d, 0xe7b6, 0x1, 0x1);
        gbc.writeMem(0xde12, { 0xcb, 0x96 });
        gbc.writeMem(0xe7b6, { 0xec });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa936, gbc.sp());
        EXPECT(0xde14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde12));
        EXPECT(0x96, gbc.readMem(0xde13));
        EXPECT(0xe8, gbc.readMem(0xe7b6));
        // CB 96 018C
        gbc.setState(0x9aee, 0xfc55, 0xa260, 0xb5ea, 0xcf2f, 0x3184, 0x0, 0x1);
        gbc.writeMem(0x3184, { 0xa0 });
        gbc.writeMem(0x9aee, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfc55, gbc.sp());
        EXPECT(0x9af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aee));
        EXPECT(0x96, gbc.readMem(0x9aef));
        // CB 96 018D
        gbc.setState(0x93bf, 0x412, 0xb0d0, 0x52dc, 0xb34, 0x8489, 0x0, 0x0);
        gbc.writeMem(0x8489, { 0x2b });
        gbc.writeMem(0x93bf, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x412, gbc.sp());
        EXPECT(0x93c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8489));
        EXPECT(0xcb, gbc.readMem(0x93bf));
        EXPECT(0x96, gbc.readMem(0x93c0));
        // CB 96 018E
        gbc.setState(0xa214, 0x24ad, 0xe760, 0x9875, 0x93da, 0xe645, 0x0, 0x0);
        gbc.writeMem(0xa214, { 0xcb, 0x96 });
        gbc.writeMem(0xe645, { 0xa0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x24ad, gbc.sp());
        EXPECT(0xa216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa214));
        EXPECT(0x96, gbc.readMem(0xa215));
        EXPECT(0xa0, gbc.readMem(0xe645));
        // CB 96 018F
        gbc.setState(0x75bf, 0x5d8f, 0xdf60, 0x1e33, 0xc5d5, 0x284c, 0x1, 0x1);
        gbc.writeMem(0x284c, { 0x8 });
        gbc.writeMem(0x75bf, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5d8f, gbc.sp());
        EXPECT(0x75c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0190
        gbc.setState(0x49fb, 0x32eb, 0x1c10, 0x6492, 0xfaa9, 0x64b, 0x1, 0x0);
        gbc.writeMem(0x64b, { 0xf9 });
        gbc.writeMem(0x49fb, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x32eb, gbc.sp());
        EXPECT(0x49fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0191
        gbc.setState(0xbce7, 0x7e3f, 0x5900, 0x54b3, 0xe7b, 0x3a15, 0x1, 0x1);
        gbc.writeMem(0x3a15, { 0x31 });
        gbc.writeMem(0xbce7, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7e3f, gbc.sp());
        EXPECT(0xbce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce7));
        EXPECT(0x96, gbc.readMem(0xbce8));
        // CB 96 0192
        gbc.setState(0xc6b7, 0xeb5c, 0x8650, 0xdc39, 0x7381, 0x484e, 0x1, 0x1);
        gbc.writeMem(0x484e, { 0xb9 });
        gbc.writeMem(0xc6b7, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xeb5c, gbc.sp());
        EXPECT(0xc6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b7));
        EXPECT(0x96, gbc.readMem(0xc6b8));
        // CB 96 0193
        gbc.setState(0xd593, 0xbed7, 0x8170, 0xf979, 0x1844, 0xd70f, 0x1, 0x0);
        gbc.writeMem(0xd593, { 0xcb, 0x96 });
        gbc.writeMem(0xd70f, { 0xd3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbed7, gbc.sp());
        EXPECT(0xd595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd593));
        EXPECT(0x96, gbc.readMem(0xd594));
        EXPECT(0xd3, gbc.readMem(0xd70f));
        // CB 96 0194
        gbc.setState(0x98, 0x436e, 0xcd40, 0xfec2, 0xaaf7, 0xf1, 0x0, 0x1);
        gbc.writeMem(0x98, { 0xcb, 0x96 });
        gbc.writeMem(0xf1, { 0x1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x436e, gbc.sp());
        EXPECT(0x9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0195
        gbc.setState(0x28ef, 0xdbd0, 0x920, 0x488f, 0x2cbf, 0x16c8, 0x0, 0x1);
        gbc.writeMem(0x16c8, { 0x31 });
        gbc.writeMem(0x28ef, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdbd0, gbc.sp());
        EXPECT(0x28f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0196
        gbc.setState(0x7cf9, 0xf50e, 0xce50, 0x658c, 0x32c4, 0xc51a, 0x1, 0x0);
        gbc.writeMem(0x7cf9, { 0xcb, 0x96 });
        gbc.writeMem(0xc51a, { 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf50e, gbc.sp());
        EXPECT(0x7cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc51a));
        // CB 96 0197
        gbc.setState(0x69d9, 0x6c3b, 0xde0, 0xaad, 0x7ea7, 0x1677, 0x1, 0x0);
        gbc.writeMem(0x1677, { 0xf9 });
        gbc.writeMem(0x69d9, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6c3b, gbc.sp());
        EXPECT(0x69db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0198
        gbc.setState(0x15da, 0x9530, 0x5420, 0x6cce, 0x4d68, 0xb08a, 0x0, 0x0);
        gbc.writeMem(0x15da, { 0xcb, 0x96 });
        gbc.writeMem(0xb08a, { 0xad });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9530, gbc.sp());
        EXPECT(0x15dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xb08a));
        // CB 96 0199
        gbc.setState(0x3238, 0xf6, 0x2490, 0x3467, 0x207, 0x929a, 0x1, 0x1);
        gbc.writeMem(0x3238, { 0xcb, 0x96 });
        gbc.writeMem(0x929a, { 0xba });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf6, gbc.sp());
        EXPECT(0x323a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x929a));
        // CB 96 019B
        gbc.setState(0xad49, 0xdd2a, 0x960, 0x5081, 0x1e6b, 0xffcd, 0x1, 0x0);
        gbc.writeMem(0xad49, { 0xcb, 0x96 });
        gbc.writeMem(0xffcd, { 0x10 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdd2a, gbc.sp());
        EXPECT(0xad4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad49));
        EXPECT(0x96, gbc.readMem(0xad4a));
        EXPECT(0x10, gbc.readMem(0xffcd));
        // CB 96 019C
        gbc.setState(0xaefd, 0xd3a9, 0x2ca0, 0x17ec, 0xeb25, 0xae8e, 0x0, 0x1);
        gbc.writeMem(0xae8e, { 0x79 });
        gbc.writeMem(0xaefd, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd3a9, gbc.sp());
        EXPECT(0xaeff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xae8e));
        EXPECT(0xcb, gbc.readMem(0xaefd));
        EXPECT(0x96, gbc.readMem(0xaefe));
        // CB 96 019E
        gbc.setState(0x1ddf, 0x6cdb, 0x810, 0x4ef8, 0xe833, 0x953c, 0x0, 0x1);
        gbc.writeMem(0x1ddf, { 0xcb, 0x96 });
        gbc.writeMem(0x953c, { 0x7c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6cdb, gbc.sp());
        EXPECT(0x1de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x953c));
        // CB 96 019F
        gbc.setState(0x2cab, 0xb3b7, 0x3490, 0xa4c2, 0x7811, 0x88e6, 0x1, 0x0);
        gbc.writeMem(0x2cab, { 0xcb, 0x96 });
        gbc.writeMem(0x88e6, { 0xbd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb3b7, gbc.sp());
        EXPECT(0x2cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x88e6));
        // CB 96 01A0
        gbc.setState(0x2795, 0xe57e, 0x3c40, 0x5623, 0xf065, 0xd437, 0x1, 0x0);
        gbc.writeMem(0x2795, { 0xcb, 0x96 });
        gbc.writeMem(0xd437, { 0x2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe57e, gbc.sp());
        EXPECT(0x2797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xd437));
        // CB 96 01A2
        gbc.setState(0xed5e, 0xfb9, 0x6d90, 0x7631, 0x4b55, 0x810c, 0x1, 0x1);
        gbc.writeMem(0x810c, { 0x70 });
        gbc.writeMem(0xed5e, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfb9, gbc.sp());
        EXPECT(0xed60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x810c));
        EXPECT(0xcb, gbc.readMem(0xed5e));
        EXPECT(0x96, gbc.readMem(0xed5f));
        // CB 96 01A3
        gbc.setState(0x4b12, 0x6089, 0xb20, 0xdcab, 0xf3db, 0xf89b, 0x0, 0x0);
        gbc.writeMem(0x4b12, { 0xcb, 0x96 });
        gbc.writeMem(0xf89b, { 0xd8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6089, gbc.sp());
        EXPECT(0x4b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xf89b));
        // CB 96 01A5
        gbc.setState(0xdbd8, 0x9eb5, 0x94d0, 0x3920, 0x28cd, 0x8b50, 0x1, 0x1);
        gbc.writeMem(0x8b50, { 0xf7 });
        gbc.writeMem(0xdbd8, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9eb5, gbc.sp());
        EXPECT(0xdbda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x8b50));
        EXPECT(0xcb, gbc.readMem(0xdbd8));
        EXPECT(0x96, gbc.readMem(0xdbd9));
        // CB 96 01A6
        gbc.setState(0x7d85, 0xe06f, 0xa460, 0x21aa, 0xe75d, 0xffa0, 0x0, 0x0);
        gbc.writeMem(0x7d85, { 0xcb, 0x96 });
        gbc.writeMem(0xffa0, { 0x33 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe06f, gbc.sp());
        EXPECT(0x7d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xffa0));
        // CB 96 01A7
        gbc.setState(0x18f1, 0xd394, 0x67e0, 0x32e3, 0x641f, 0x3cec, 0x1, 0x1);
        gbc.writeMem(0x18f1, { 0xcb, 0x96 });
        gbc.writeMem(0x3cec, { 0x29 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd394, gbc.sp());
        EXPECT(0x18f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 01AA
        gbc.setState(0xbd33, 0x3bcf, 0x1ff0, 0xdbd3, 0x4f59, 0x5c94, 0x1, 0x0);
        gbc.writeMem(0x5c94, { 0x0 });
        gbc.writeMem(0xbd33, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3bcf, gbc.sp());
        EXPECT(0xbd35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd33));
        EXPECT(0x96, gbc.readMem(0xbd34));
        // CB 96 01AB
        gbc.setState(0xaab7, 0x99d1, 0xf4c0, 0xe493, 0xa8fc, 0x1b10, 0x1, 0x0);
        gbc.writeMem(0x1b10, { 0x68 });
        gbc.writeMem(0xaab7, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x99d1, gbc.sp());
        EXPECT(0xaab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab7));
        EXPECT(0x96, gbc.readMem(0xaab8));
        // CB 96 01AD
        gbc.setState(0x5721, 0x5508, 0x3fb0, 0xc8b5, 0x8f26, 0x8505, 0x0, 0x1);
        gbc.writeMem(0x5721, { 0xcb, 0x96 });
        gbc.writeMem(0x8505, { 0x36 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5508, gbc.sp());
        EXPECT(0x5723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8505));
        // CB 96 01AE
        gbc.setState(0xaafd, 0xd444, 0x5be0, 0xe81f, 0xc7dd, 0x1ea4, 0x1, 0x0);
        gbc.writeMem(0x1ea4, { 0x62 });
        gbc.writeMem(0xaafd, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd444, gbc.sp());
        EXPECT(0xaaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaafd));
        EXPECT(0x96, gbc.readMem(0xaafe));
        // CB 96 01AF
        gbc.setState(0xd126, 0x7095, 0x980, 0x2319, 0xfa6, 0x7314, 0x1, 0x1);
        gbc.writeMem(0x7314, { 0x79 });
        gbc.writeMem(0xd126, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7095, gbc.sp());
        EXPECT(0xd128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd126));
        EXPECT(0x96, gbc.readMem(0xd127));
        // CB 96 01B0
        gbc.setState(0x9b82, 0xa5bb, 0x1ec0, 0x704e, 0xf1c6, 0x1715, 0x0, 0x0);
        gbc.writeMem(0x1715, { 0x7b });
        gbc.writeMem(0x9b82, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa5bb, gbc.sp());
        EXPECT(0x9b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b82));
        EXPECT(0x96, gbc.readMem(0x9b83));
        // CB 96 01B1
        gbc.setState(0x8756, 0xae86, 0x69f0, 0x272, 0x6ef6, 0x9016, 0x0, 0x0);
        gbc.writeMem(0x8756, { 0xcb, 0x96 });
        gbc.writeMem(0x9016, { 0xf0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xae86, gbc.sp());
        EXPECT(0x8758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8756));
        EXPECT(0x96, gbc.readMem(0x8757));
        EXPECT(0xf0, gbc.readMem(0x9016));
        // CB 96 01B2
        gbc.setState(0x8e62, 0xba73, 0x8fa0, 0xbe81, 0xa373, 0x4db7, 0x1, 0x1);
        gbc.writeMem(0x4db7, { 0xd1 });
        gbc.writeMem(0x8e62, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xba73, gbc.sp());
        EXPECT(0x8e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e62));
        EXPECT(0x96, gbc.readMem(0x8e63));
        // CB 96 01B3
        gbc.setState(0xaa12, 0x849, 0x5f00, 0x4e46, 0x170, 0xb4b9, 0x1, 0x1);
        gbc.writeMem(0xaa12, { 0xcb, 0x96 });
        gbc.writeMem(0xb4b9, { 0x2e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x849, gbc.sp());
        EXPECT(0xaa14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa12));
        EXPECT(0x96, gbc.readMem(0xaa13));
        EXPECT(0x2a, gbc.readMem(0xb4b9));
        // CB 96 01B4
        gbc.setState(0x77b9, 0x94e7, 0x1920, 0xfd3c, 0xb54, 0xd1af, 0x0, 0x0);
        gbc.writeMem(0x77b9, { 0xcb, 0x96 });
        gbc.writeMem(0xd1af, { 0xed });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x94e7, gbc.sp());
        EXPECT(0x77bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd1af));
        // CB 96 01B5
        gbc.setState(0xafa1, 0xc550, 0x3020, 0xac2f, 0xf275, 0x46bd, 0x0, 0x1);
        gbc.writeMem(0x46bd, { 0xb });
        gbc.writeMem(0xafa1, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc550, gbc.sp());
        EXPECT(0xafa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa1));
        EXPECT(0x96, gbc.readMem(0xafa2));
        // CB 96 01B6
        gbc.setState(0xbbd8, 0xe1d, 0xede0, 0x2119, 0xbac7, 0xd305, 0x1, 0x0);
        gbc.writeMem(0xbbd8, { 0xcb, 0x96 });
        gbc.writeMem(0xd305, { 0xa7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe1d, gbc.sp());
        EXPECT(0xbbda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd8));
        EXPECT(0x96, gbc.readMem(0xbbd9));
        EXPECT(0xa3, gbc.readMem(0xd305));
        // CB 96 01B7
        gbc.setState(0xed73, 0x98b1, 0xa10, 0xad71, 0x4185, 0xc4e8, 0x0, 0x1);
        gbc.writeMem(0xc4e8, { 0x55 });
        gbc.writeMem(0xed73, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x98b1, gbc.sp());
        EXPECT(0xed75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc4e8));
        EXPECT(0xcb, gbc.readMem(0xed73));
        EXPECT(0x96, gbc.readMem(0xed74));
        // CB 96 01B8
        gbc.setState(0x2d7e, 0x619b, 0x8ba0, 0x69b1, 0x6fe3, 0x959f, 0x1, 0x1);
        gbc.writeMem(0x2d7e, { 0xcb, 0x96 });
        gbc.writeMem(0x959f, { 0x8c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x619b, gbc.sp());
        EXPECT(0x2d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x959f));
        // CB 96 01B9
        gbc.setState(0xb3ed, 0xa388, 0x41d0, 0x3ee4, 0x96c9, 0xd677, 0x0, 0x1);
        gbc.writeMem(0xb3ed, { 0xcb, 0x96 });
        gbc.writeMem(0xd677, { 0xf4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa388, gbc.sp());
        EXPECT(0xb3ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ed));
        EXPECT(0x96, gbc.readMem(0xb3ee));
        EXPECT(0xf0, gbc.readMem(0xd677));
        // CB 96 01BC
        gbc.setState(0x8789, 0x7ed1, 0x460, 0x729, 0xb95d, 0xf36e, 0x1, 0x1);
        gbc.writeMem(0x8789, { 0xcb, 0x96 });
        gbc.writeMem(0xf36e, { 0x5e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7ed1, gbc.sp());
        EXPECT(0x878b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8789));
        EXPECT(0x96, gbc.readMem(0x878a));
        EXPECT(0x5a, gbc.readMem(0xf36e));
        // CB 96 01BD
        gbc.setState(0x7735, 0xd23a, 0xf110, 0xab8c, 0x55cb, 0x7cce, 0x1, 0x1);
        gbc.writeMem(0x7735, { 0xcb, 0x96 });
        gbc.writeMem(0x7cce, { 0x4b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd23a, gbc.sp());
        EXPECT(0x7737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 01C1
        gbc.setState(0x2b92, 0xf499, 0x95c0, 0xf317, 0xa32a, 0x9c05, 0x0, 0x1);
        gbc.writeMem(0x2b92, { 0xcb, 0x96 });
        gbc.writeMem(0x9c05, { 0x7c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf499, gbc.sp());
        EXPECT(0x2b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9c05));
        // CB 96 01C3
        gbc.setState(0x145b, 0x360b, 0x1e10, 0xbde1, 0x201a, 0x5b51, 0x1, 0x1);
        gbc.writeMem(0x145b, { 0xcb, 0x96 });
        gbc.writeMem(0x5b51, { 0x9a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x360b, gbc.sp());
        EXPECT(0x145d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 01C6
        gbc.setState(0xa9a5, 0x2bbc, 0x8c50, 0x101b, 0x8a6c, 0xc46d, 0x1, 0x0);
        gbc.writeMem(0xa9a5, { 0xcb, 0x96 });
        gbc.writeMem(0xc46d, { 0xfe });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2bbc, gbc.sp());
        EXPECT(0xa9a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a5));
        EXPECT(0x96, gbc.readMem(0xa9a6));
        EXPECT(0xfa, gbc.readMem(0xc46d));
        // CB 96 01C8
        gbc.setState(0x2f6a, 0x2381, 0x73b0, 0xe6de, 0x4424, 0xc6a1, 0x1, 0x0);
        gbc.writeMem(0x2f6a, { 0xcb, 0x96 });
        gbc.writeMem(0xc6a1, { 0x38 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2381, gbc.sp());
        EXPECT(0x2f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc6a1));
        // CB 96 01C9
        gbc.setState(0x8ac8, 0x1c9c, 0xff50, 0x9b25, 0x9437, 0x5cc2, 0x1, 0x1);
        gbc.writeMem(0x5cc2, { 0xea });
        gbc.writeMem(0x8ac8, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1c9c, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac8));
        EXPECT(0x96, gbc.readMem(0x8ac9));
        // CB 96 01CA
        gbc.setState(0xcfc3, 0x3e95, 0xe6a0, 0xe726, 0x740, 0xa736, 0x0, 0x0);
        gbc.writeMem(0xa736, { 0xd3 });
        gbc.writeMem(0xcfc3, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3e95, gbc.sp());
        EXPECT(0xcfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xa736));
        EXPECT(0xcb, gbc.readMem(0xcfc3));
        EXPECT(0x96, gbc.readMem(0xcfc4));
        // CB 96 01CB
        gbc.setState(0x6a29, 0x6288, 0x8840, 0x648d, 0x2c9, 0x9980, 0x1, 0x1);
        gbc.writeMem(0x6a29, { 0xcb, 0x96 });
        gbc.writeMem(0x9980, { 0xf4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6288, gbc.sp());
        EXPECT(0x6a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9980));
        // CB 96 01CC
        gbc.setState(0xd431, 0x850b, 0x86f0, 0x7b33, 0xc3d9, 0xa61d, 0x1, 0x1);
        gbc.writeMem(0xa61d, { 0xa5 });
        gbc.writeMem(0xd431, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x850b, gbc.sp());
        EXPECT(0xd433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa61d));
        EXPECT(0xcb, gbc.readMem(0xd431));
        EXPECT(0x96, gbc.readMem(0xd432));
        // CB 96 01CD
        gbc.setState(0x376b, 0x66d, 0xb2b0, 0x39b, 0x8996, 0x4989, 0x0, 0x1);
        gbc.writeMem(0x376b, { 0xcb, 0x96 });
        gbc.writeMem(0x4989, { 0xc0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x66d, gbc.sp());
        EXPECT(0x376d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 01CE
        gbc.setState(0x8688, 0x23e, 0xd760, 0x56e8, 0x7f18, 0x398f, 0x0, 0x0);
        gbc.writeMem(0x398f, { 0xa1 });
        gbc.writeMem(0x8688, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x23e, gbc.sp());
        EXPECT(0x868a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8688));
        EXPECT(0x96, gbc.readMem(0x8689));
        // CB 96 01D1
        gbc.setState(0x7e77, 0x6ded, 0xc6c0, 0x8153, 0x284c, 0xaee4, 0x1, 0x0);
        gbc.writeMem(0x7e77, { 0xcb, 0x96 });
        gbc.writeMem(0xaee4, { 0xbb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6ded, gbc.sp());
        EXPECT(0x7e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xaee4));
        // CB 96 01D3
        gbc.setState(0x290c, 0x555e, 0x250, 0x13c8, 0x5e54, 0x565c, 0x1, 0x0);
        gbc.writeMem(0x290c, { 0xcb, 0x96 });
        gbc.writeMem(0x565c, { 0x39 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x555e, gbc.sp());
        EXPECT(0x290e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 01D4
        gbc.setState(0x2ed, 0xd9ba, 0xa300, 0x8ec0, 0xfef3, 0xb6, 0x1, 0x1);
        gbc.writeMem(0xb6, { 0xd2 });
        gbc.writeMem(0x2ed, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd9ba, gbc.sp());
        EXPECT(0x2ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 01D5
        gbc.setState(0x5c2e, 0x30dd, 0xea60, 0x25c8, 0x7cf5, 0x4f90, 0x0, 0x1);
        gbc.writeMem(0x4f90, { 0x13 });
        gbc.writeMem(0x5c2e, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x30dd, gbc.sp());
        EXPECT(0x5c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 01D7
        gbc.setState(0xa2a4, 0xe557, 0x4c40, 0x984d, 0x5ad1, 0x4c33, 0x0, 0x1);
        gbc.writeMem(0x4c33, { 0x7a });
        gbc.writeMem(0xa2a4, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe557, gbc.sp());
        EXPECT(0xa2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a4));
        EXPECT(0x96, gbc.readMem(0xa2a5));
        // CB 96 01D9
        gbc.setState(0x96b9, 0xb292, 0x9520, 0x52cf, 0xbb3d, 0xa3d1, 0x1, 0x0);
        gbc.writeMem(0x96b9, { 0xcb, 0x96 });
        gbc.writeMem(0xa3d1, { 0x16 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb292, gbc.sp());
        EXPECT(0x96bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b9));
        EXPECT(0x96, gbc.readMem(0x96ba));
        EXPECT(0x12, gbc.readMem(0xa3d1));
        // CB 96 01DA
        gbc.setState(0x88d8, 0x6866, 0x55c0, 0xb510, 0xd4ca, 0x79e0, 0x0, 0x0);
        gbc.writeMem(0x79e0, { 0xe3 });
        gbc.writeMem(0x88d8, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6866, gbc.sp());
        EXPECT(0x88da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d8));
        EXPECT(0x96, gbc.readMem(0x88d9));
        // CB 96 01DB
        gbc.setState(0xe741, 0x197f, 0x2170, 0xc005, 0x5661, 0x6fb6, 0x0, 0x0);
        gbc.writeMem(0x6fb6, { 0x63 });
        gbc.writeMem(0xe741, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x197f, gbc.sp());
        EXPECT(0xe743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe741));
        EXPECT(0x96, gbc.readMem(0xe742));
        // CB 96 01DC
        gbc.setState(0x8456, 0x3c6c, 0xf6a0, 0xce55, 0xfddd, 0x931c, 0x1, 0x0);
        gbc.writeMem(0x8456, { 0xcb, 0x96 });
        gbc.writeMem(0x931c, { 0xab });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3c6c, gbc.sp());
        EXPECT(0x8458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8456));
        EXPECT(0x96, gbc.readMem(0x8457));
        EXPECT(0xab, gbc.readMem(0x931c));
        // CB 96 01DD
        gbc.setState(0x70, 0x1131, 0xe750, 0xe3c3, 0x2ba9, 0x7686, 0x0, 0x0);
        gbc.writeMem(0x70, { 0xcb, 0x96 });
        gbc.writeMem(0x7686, { 0xc8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1131, gbc.sp());
        EXPECT(0x72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 01DE
        gbc.setState(0x782b, 0xa349, 0xbce0, 0xe998, 0xf143, 0x3e2d, 0x1, 0x0);
        gbc.writeMem(0x3e2d, { 0x50 });
        gbc.writeMem(0x782b, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa349, gbc.sp());
        EXPECT(0x782d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 01DF
        gbc.setState(0xd85e, 0x67d0, 0x63e0, 0x97e4, 0xe93d, 0x3fa4, 0x0, 0x1);
        gbc.writeMem(0x3fa4, { 0x9b });
        gbc.writeMem(0xd85e, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x67d0, gbc.sp());
        EXPECT(0xd860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85e));
        EXPECT(0x96, gbc.readMem(0xd85f));
        // CB 96 01E0
        gbc.setState(0xc90d, 0x9723, 0x8490, 0xbb2c, 0x2035, 0xfdf9, 0x1, 0x1);
        gbc.writeMem(0xc90d, { 0xcb, 0x96 });
        gbc.writeMem(0xfdf9, { 0x74 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9723, gbc.sp());
        EXPECT(0xc90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc90d));
        EXPECT(0x96, gbc.readMem(0xc90e));
        EXPECT(0x70, gbc.readMem(0xfdf9));
        // CB 96 01E2
        gbc.setState(0xc48f, 0x8576, 0xa930, 0x9c26, 0x4dee, 0xf723, 0x0, 0x0);
        gbc.writeMem(0xc48f, { 0xcb, 0x96 });
        gbc.writeMem(0xf723, { 0x4e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8576, gbc.sp());
        EXPECT(0xc491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc48f));
        EXPECT(0x96, gbc.readMem(0xc490));
        EXPECT(0x4a, gbc.readMem(0xf723));
        // CB 96 01E6
        gbc.setState(0x67c2, 0x79ab, 0x34b0, 0x4d41, 0x3533, 0x89e3, 0x1, 0x1);
        gbc.writeMem(0x67c2, { 0xcb, 0x96 });
        gbc.writeMem(0x89e3, { 0x80 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x79ab, gbc.sp());
        EXPECT(0x67c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x89e3));
        // CB 96 01E9
        gbc.setState(0xca1f, 0xc501, 0x9bb0, 0xd8c6, 0xe5c1, 0x64c5, 0x1, 0x0);
        gbc.writeMem(0x64c5, { 0x83 });
        gbc.writeMem(0xca1f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc501, gbc.sp());
        EXPECT(0xca21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca1f));
        EXPECT(0x96, gbc.readMem(0xca20));
        // CB 96 01EB
        gbc.setState(0xbee5, 0xa0a6, 0xcf10, 0x7d9e, 0x97b8, 0x98fe, 0x0, 0x1);
        gbc.writeMem(0x98fe, { 0x3e });
        gbc.writeMem(0xbee5, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa0a6, gbc.sp());
        EXPECT(0xbee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x98fe));
        EXPECT(0xcb, gbc.readMem(0xbee5));
        EXPECT(0x96, gbc.readMem(0xbee6));
        // CB 96 01ED
        gbc.setState(0xd95e, 0x858, 0xfd70, 0x8a6f, 0xccca, 0x938d, 0x1, 0x0);
        gbc.writeMem(0x938d, { 0x3b });
        gbc.writeMem(0xd95e, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x858, gbc.sp());
        EXPECT(0xd960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x938d));
        EXPECT(0xcb, gbc.readMem(0xd95e));
        EXPECT(0x96, gbc.readMem(0xd95f));
        // CB 96 01EE
        gbc.setState(0x3e0f, 0x5c55, 0x45d0, 0x23b6, 0xc44e, 0x2974, 0x1, 0x0);
        gbc.writeMem(0x2974, { 0x4b });
        gbc.writeMem(0x3e0f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5c55, gbc.sp());
        EXPECT(0x3e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 01EF
        gbc.setState(0x1431, 0x7d13, 0x8840, 0x46da, 0xdbb4, 0xb546, 0x1, 0x0);
        gbc.writeMem(0x1431, { 0xcb, 0x96 });
        gbc.writeMem(0xb546, { 0x8d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7d13, gbc.sp());
        EXPECT(0x1433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb546));
        // CB 96 01F2
        gbc.setState(0x7623, 0xe0d2, 0xf1b0, 0x2972, 0xce78, 0xf143, 0x1, 0x1);
        gbc.writeMem(0x7623, { 0xcb, 0x96 });
        gbc.writeMem(0xf143, { 0x19 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe0d2, gbc.sp());
        EXPECT(0x7625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xf143));
        // CB 96 01F3
        gbc.setState(0x6fd3, 0x8591, 0x3310, 0x3b67, 0x60a0, 0xa655, 0x0, 0x0);
        gbc.writeMem(0x6fd3, { 0xcb, 0x96 });
        gbc.writeMem(0xa655, { 0x24 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8591, gbc.sp());
        EXPECT(0x6fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa655));
        // CB 96 01F4
        gbc.setState(0x70ea, 0x1693, 0x6ba0, 0x4d3, 0x7dce, 0xffb5, 0x1, 0x0);
        gbc.writeMem(0x70ea, { 0xcb, 0x96 });
        gbc.writeMem(0xffb5, { 0x1b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1693, gbc.sp());
        EXPECT(0x70ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xffb5));
        // CB 96 01F5
        gbc.setState(0xa443, 0x1c9d, 0x4fb0, 0xd63b, 0x44ca, 0x8cd1, 0x1, 0x0);
        gbc.writeMem(0x8cd1, { 0xbe });
        gbc.writeMem(0xa443, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1c9d, gbc.sp());
        EXPECT(0xa445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x8cd1));
        EXPECT(0xcb, gbc.readMem(0xa443));
        EXPECT(0x96, gbc.readMem(0xa444));
        // CB 96 01F8
        gbc.setState(0x1b29, 0xdf97, 0xa7f0, 0x5bf0, 0x6e2f, 0xe6ee, 0x0, 0x1);
        gbc.writeMem(0x1b29, { 0xcb, 0x96 });
        gbc.writeMem(0xe6ee, { 0xf4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdf97, gbc.sp());
        EXPECT(0x1b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe6ee));
        // CB 96 01F9
        gbc.setState(0xd1a9, 0x9292, 0x5930, 0x431c, 0x545b, 0xf122, 0x1, 0x0);
        gbc.writeMem(0xd1a9, { 0xcb, 0x96 });
        gbc.writeMem(0xf122, { 0xd6 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9292, gbc.sp());
        EXPECT(0xd1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a9));
        EXPECT(0x96, gbc.readMem(0xd1aa));
        EXPECT(0xd2, gbc.readMem(0xf122));
        // CB 96 01FA
        gbc.setState(0x3864, 0xfd4, 0xcc10, 0xd69, 0x6ef2, 0x194e, 0x0, 0x0);
        gbc.writeMem(0x194e, { 0x19 });
        gbc.writeMem(0x3864, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfd4, gbc.sp());
        EXPECT(0x3866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 01FB
        gbc.setState(0x5a0f, 0xb1f2, 0x8740, 0xcc8a, 0x3ba3, 0xaa9c, 0x1, 0x0);
        gbc.writeMem(0x5a0f, { 0xcb, 0x96 });
        gbc.writeMem(0xaa9c, { 0xec });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb1f2, gbc.sp());
        EXPECT(0x5a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xaa9c));
        // CB 96 01FC
        gbc.setState(0x4fae, 0x1ee1, 0xa180, 0xe6ee, 0xf541, 0xd7fd, 0x1, 0x0);
        gbc.writeMem(0x4fae, { 0xcb, 0x96 });
        gbc.writeMem(0xd7fd, { 0xfc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1ee1, gbc.sp());
        EXPECT(0x4fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd7fd));
        // CB 96 0201
        gbc.setState(0xcd62, 0xd90a, 0x6a10, 0xf500, 0xbab7, 0x4dbd, 0x0, 0x1);
        gbc.writeMem(0x4dbd, { 0x80 });
        gbc.writeMem(0xcd62, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd90a, gbc.sp());
        EXPECT(0xcd64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd62));
        EXPECT(0x96, gbc.readMem(0xcd63));
        // CB 96 0202
        gbc.setState(0xc65a, 0xc8e6, 0x6320, 0xd3e3, 0x88e0, 0x628d, 0x1, 0x1);
        gbc.writeMem(0x628d, { 0x7b });
        gbc.writeMem(0xc65a, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc8e6, gbc.sp());
        EXPECT(0xc65c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc65a));
        EXPECT(0x96, gbc.readMem(0xc65b));
        // CB 96 0204
        gbc.setState(0xc20a, 0xd080, 0x18e0, 0xe975, 0x6a45, 0x9728, 0x1, 0x1);
        gbc.writeMem(0x9728, { 0x98 });
        gbc.writeMem(0xc20a, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd080, gbc.sp());
        EXPECT(0xc20c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9728));
        EXPECT(0xcb, gbc.readMem(0xc20a));
        EXPECT(0x96, gbc.readMem(0xc20b));
        // CB 96 0205
        gbc.setState(0x5637, 0x1a9f, 0x7250, 0xb087, 0x7cf9, 0xec21, 0x0, 0x1);
        gbc.writeMem(0x5637, { 0xcb, 0x96 });
        gbc.writeMem(0xec21, { 0x99 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1a9f, gbc.sp());
        EXPECT(0x5639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xec21));
        // CB 96 0206
        gbc.setState(0xce85, 0xd6dc, 0xc040, 0x4045, 0xafb9, 0x735c, 0x0, 0x0);
        gbc.writeMem(0x735c, { 0x89 });
        gbc.writeMem(0xce85, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd6dc, gbc.sp());
        EXPECT(0xce87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce85));
        EXPECT(0x96, gbc.readMem(0xce86));
        // CB 96 0207
        gbc.setState(0x8665, 0x2c94, 0x32d0, 0x85e8, 0xa7ea, 0xf73a, 0x0, 0x0);
        gbc.writeMem(0x8665, { 0xcb, 0x96 });
        gbc.writeMem(0xf73a, { 0x48 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2c94, gbc.sp());
        EXPECT(0x8667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8665));
        EXPECT(0x96, gbc.readMem(0x8666));
        EXPECT(0x48, gbc.readMem(0xf73a));
        // CB 96 0208
        gbc.setState(0x64d2, 0xf145, 0x6f90, 0xa816, 0xe39b, 0xd061, 0x0, 0x1);
        gbc.writeMem(0x64d2, { 0xcb, 0x96 });
        gbc.writeMem(0xd061, { 0x6d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf145, gbc.sp());
        EXPECT(0x64d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd061));
        // CB 96 020A
        gbc.setState(0x924e, 0xb30c, 0xf90, 0x29b6, 0xabc5, 0x8f84, 0x0, 0x0);
        gbc.writeMem(0x8f84, { 0x46 });
        gbc.writeMem(0x924e, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb30c, gbc.sp());
        EXPECT(0x9250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8f84));
        EXPECT(0xcb, gbc.readMem(0x924e));
        EXPECT(0x96, gbc.readMem(0x924f));
        // CB 96 020B
        gbc.setState(0x22bf, 0x6100, 0x81c0, 0x25d8, 0x8249, 0x751, 0x1, 0x1);
        gbc.writeMem(0x751, { 0x50 });
        gbc.writeMem(0x22bf, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6100, gbc.sp());
        EXPECT(0x22c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 020C
        gbc.setState(0xdcf1, 0xb0fc, 0x8380, 0x989a, 0x7a83, 0x71b0, 0x1, 0x0);
        gbc.writeMem(0x71b0, { 0x1b });
        gbc.writeMem(0xdcf1, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb0fc, gbc.sp());
        EXPECT(0xdcf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf1));
        EXPECT(0x96, gbc.readMem(0xdcf2));
        // CB 96 020D
        gbc.setState(0xdc6f, 0x54ee, 0xc8f0, 0x9a4, 0x8a87, 0x7136, 0x1, 0x1);
        gbc.writeMem(0x7136, { 0x2 });
        gbc.writeMem(0xdc6f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x54ee, gbc.sp());
        EXPECT(0xdc71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc6f));
        EXPECT(0x96, gbc.readMem(0xdc70));
        // CB 96 020E
        gbc.setState(0xd54f, 0x4425, 0xe140, 0xed54, 0x4393, 0xd9d4, 0x1, 0x1);
        gbc.writeMem(0xd54f, { 0xcb, 0x96 });
        gbc.writeMem(0xd9d4, { 0xd2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4425, gbc.sp());
        EXPECT(0xd551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54f));
        EXPECT(0x96, gbc.readMem(0xd550));
        EXPECT(0xd2, gbc.readMem(0xd9d4));
        // CB 96 0210
        gbc.setState(0x9bd4, 0xf2a2, 0x77e0, 0x9deb, 0x9e9f, 0xefd2, 0x0, 0x1);
        gbc.writeMem(0x9bd4, { 0xcb, 0x96 });
        gbc.writeMem(0xefd2, { 0x8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf2a2, gbc.sp());
        EXPECT(0x9bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd4));
        EXPECT(0x96, gbc.readMem(0x9bd5));
        EXPECT(0x8, gbc.readMem(0xefd2));
        // CB 96 0211
        gbc.setState(0x7469, 0x4c9e, 0x1aa0, 0xbb8f, 0xc5a, 0x6661, 0x1, 0x0);
        gbc.writeMem(0x6661, { 0x58 });
        gbc.writeMem(0x7469, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4c9e, gbc.sp());
        EXPECT(0x746b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0212
        gbc.setState(0x36c2, 0x9e3b, 0x19c0, 0x3b25, 0x237e, 0xe8f3, 0x1, 0x1);
        gbc.writeMem(0x36c2, { 0xcb, 0x96 });
        gbc.writeMem(0xe8f3, { 0x92 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9e3b, gbc.sp());
        EXPECT(0x36c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe8f3));
        // CB 96 0213
        gbc.setState(0x5678, 0x82a3, 0x3fd0, 0xc3c6, 0xcea9, 0xc552, 0x1, 0x1);
        gbc.writeMem(0x5678, { 0xcb, 0x96 });
        gbc.writeMem(0xc552, { 0xa4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x82a3, gbc.sp());
        EXPECT(0x567a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc552));
        // CB 96 0215
        gbc.setState(0x9d1a, 0x6ac9, 0xc8e0, 0xf54e, 0xf2bf, 0xefe1, 0x1, 0x1);
        gbc.writeMem(0x9d1a, { 0xcb, 0x96 });
        gbc.writeMem(0xefe1, { 0x52 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6ac9, gbc.sp());
        EXPECT(0x9d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1a));
        EXPECT(0x96, gbc.readMem(0x9d1b));
        EXPECT(0x52, gbc.readMem(0xefe1));
        // CB 96 0216
        gbc.setState(0xb464, 0x46d4, 0xb620, 0x8c8a, 0x3963, 0x66c6, 0x0, 0x1);
        gbc.writeMem(0x66c6, { 0x10 });
        gbc.writeMem(0xb464, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x46d4, gbc.sp());
        EXPECT(0xb466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb464));
        EXPECT(0x96, gbc.readMem(0xb465));
        // CB 96 0219
        gbc.setState(0xeca6, 0x1785, 0x5f90, 0xefff, 0x968, 0x75a7, 0x0, 0x1);
        gbc.writeMem(0x75a7, { 0xd9 });
        gbc.writeMem(0xeca6, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1785, gbc.sp());
        EXPECT(0xeca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca6));
        EXPECT(0x96, gbc.readMem(0xeca7));
        // CB 96 021A
        gbc.setState(0xc482, 0xf7c7, 0x9650, 0x4544, 0x94a5, 0xf7b9, 0x0, 0x0);
        gbc.writeMem(0xc482, { 0xcb, 0x96 });
        gbc.writeMem(0xf7b9, { 0x9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf7c7, gbc.sp());
        EXPECT(0xc484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc482));
        EXPECT(0x96, gbc.readMem(0xc483));
        EXPECT(0x9, gbc.readMem(0xf7b9));
        // CB 96 021B
        gbc.setState(0x42cd, 0x92fb, 0xae90, 0xe9d5, 0x597, 0x9ea7, 0x0, 0x0);
        gbc.writeMem(0x42cd, { 0xcb, 0x96 });
        gbc.writeMem(0x9ea7, { 0xa4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x92fb, gbc.sp());
        EXPECT(0x42cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9ea7));
        // CB 96 021C
        gbc.setState(0x1e2d, 0xfcce, 0x2e70, 0x763c, 0x8459, 0x986b, 0x1, 0x1);
        gbc.writeMem(0x1e2d, { 0xcb, 0x96 });
        gbc.writeMem(0x986b, { 0x97 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfcce, gbc.sp());
        EXPECT(0x1e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x986b));
        // CB 96 021D
        gbc.setState(0xbec5, 0x94c1, 0xcd0, 0xfc7, 0x42b, 0xc9b3, 0x1, 0x1);
        gbc.writeMem(0xbec5, { 0xcb, 0x96 });
        gbc.writeMem(0xc9b3, { 0xb2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x94c1, gbc.sp());
        EXPECT(0xbec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec5));
        EXPECT(0x96, gbc.readMem(0xbec6));
        EXPECT(0xb2, gbc.readMem(0xc9b3));
        // CB 96 021F
        gbc.setState(0x1847, 0x1b4, 0x9460, 0xb4fe, 0x238, 0x9f2a, 0x0, 0x0);
        gbc.writeMem(0x1847, { 0xcb, 0x96 });
        gbc.writeMem(0x9f2a, { 0xa8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1b4, gbc.sp());
        EXPECT(0x1849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x9f2a));
        // CB 96 0221
        gbc.setState(0xdfef, 0xb765, 0xbde0, 0x9db5, 0x56d3, 0x82a4, 0x0, 0x1);
        gbc.writeMem(0x82a4, { 0x7e });
        gbc.writeMem(0xdfef, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb765, gbc.sp());
        EXPECT(0xdff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x82a4));
        EXPECT(0xcb, gbc.readMem(0xdfef));
        EXPECT(0x96, gbc.readMem(0xdff0));
        // CB 96 0223
        gbc.setState(0xa06f, 0xa713, 0x6270, 0x529c, 0x9aaf, 0x2db1, 0x1, 0x1);
        gbc.writeMem(0x2db1, { 0x2b });
        gbc.writeMem(0xa06f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa713, gbc.sp());
        EXPECT(0xa071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06f));
        EXPECT(0x96, gbc.readMem(0xa070));
        // CB 96 0225
        gbc.setState(0x6684, 0x39ef, 0x4bf0, 0x66fb, 0x80be, 0x2a9e, 0x0, 0x0);
        gbc.writeMem(0x2a9e, { 0x6b });
        gbc.writeMem(0x6684, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x39ef, gbc.sp());
        EXPECT(0x6686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0226
        gbc.setState(0x1c0f, 0x22ec, 0xf660, 0xefa9, 0xb063, 0x915f, 0x0, 0x1);
        gbc.writeMem(0x1c0f, { 0xcb, 0x96 });
        gbc.writeMem(0x915f, { 0x85 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x22ec, gbc.sp());
        EXPECT(0x1c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x915f));
        // CB 96 0227
        gbc.setState(0x137d, 0xc432, 0xb1a0, 0xb9ce, 0x3593, 0x44d0, 0x1, 0x0);
        gbc.writeMem(0x137d, { 0xcb, 0x96 });
        gbc.writeMem(0x44d0, { 0xd3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc432, gbc.sp());
        EXPECT(0x137f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0228
        gbc.setState(0xb7bd, 0x1f13, 0x1ee0, 0xb6f1, 0x311f, 0xd073, 0x1, 0x1);
        gbc.writeMem(0xb7bd, { 0xcb, 0x96 });
        gbc.writeMem(0xd073, { 0x76 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1f13, gbc.sp());
        EXPECT(0xb7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7bd));
        EXPECT(0x96, gbc.readMem(0xb7be));
        EXPECT(0x72, gbc.readMem(0xd073));
        // CB 96 0229
        gbc.setState(0xb75a, 0xbf29, 0x8e60, 0x822a, 0x7cfe, 0x5021, 0x1, 0x0);
        gbc.writeMem(0x5021, { 0x8b });
        gbc.writeMem(0xb75a, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbf29, gbc.sp());
        EXPECT(0xb75c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75a));
        EXPECT(0x96, gbc.readMem(0xb75b));
        // CB 96 022C
        gbc.setState(0x3d1e, 0x26f8, 0xffb0, 0x592a, 0xd15a, 0xac35, 0x1, 0x1);
        gbc.writeMem(0x3d1e, { 0xcb, 0x96 });
        gbc.writeMem(0xac35, { 0x56 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x26f8, gbc.sp());
        EXPECT(0x3d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xac35));
        // CB 96 022D
        gbc.setState(0x214f, 0xb1bb, 0x54d0, 0x7a25, 0x544e, 0xa220, 0x0, 0x1);
        gbc.writeMem(0x214f, { 0xcb, 0x96 });
        gbc.writeMem(0xa220, { 0x45 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb1bb, gbc.sp());
        EXPECT(0x2151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xa220));
        // CB 96 0230
        gbc.setState(0x6e68, 0x9e8e, 0x3d60, 0x4995, 0xff29, 0xe9d5, 0x0, 0x0);
        gbc.writeMem(0x6e68, { 0xcb, 0x96 });
        gbc.writeMem(0xe9d5, { 0x66 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9e8e, gbc.sp());
        EXPECT(0x6e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xe9d5));
        // CB 96 0231
        gbc.setState(0x8883, 0x8eaf, 0x91b0, 0x238d, 0xc855, 0x1eb3, 0x0, 0x0);
        gbc.writeMem(0x1eb3, { 0x99 });
        gbc.writeMem(0x8883, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8eaf, gbc.sp());
        EXPECT(0x8885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8883));
        EXPECT(0x96, gbc.readMem(0x8884));
        // CB 96 0232
        gbc.setState(0x6ea3, 0xc00b, 0x1630, 0xfa7b, 0xc1db, 0xcf21, 0x1, 0x0);
        gbc.writeMem(0x6ea3, { 0xcb, 0x96 });
        gbc.writeMem(0xcf21, { 0xec });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc00b, gbc.sp());
        EXPECT(0x6ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xcf21));
        // CB 96 0233
        gbc.setState(0xbca0, 0x13e5, 0xd5c0, 0xdcb4, 0xc05c, 0x24f6, 0x1, 0x0);
        gbc.writeMem(0x24f6, { 0x49 });
        gbc.writeMem(0xbca0, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x13e5, gbc.sp());
        EXPECT(0xbca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca0));
        EXPECT(0x96, gbc.readMem(0xbca1));
        // CB 96 0235
        gbc.setState(0x705d, 0x5d62, 0x3900, 0x952e, 0xe83e, 0xebcf, 0x1, 0x1);
        gbc.writeMem(0x705d, { 0xcb, 0x96 });
        gbc.writeMem(0xebcf, { 0x66 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5d62, gbc.sp());
        EXPECT(0x705f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xebcf));
        // CB 96 0236
        gbc.setState(0x4a01, 0x3eea, 0x2780, 0x290, 0x7674, 0x8713, 0x1, 0x0);
        gbc.writeMem(0x4a01, { 0xcb, 0x96 });
        gbc.writeMem(0x8713, { 0xf7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3eea, gbc.sp());
        EXPECT(0x4a03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x8713));
        // CB 96 0237
        gbc.setState(0x3bf2, 0xa18c, 0x3b50, 0x5548, 0x75e6, 0x56e0, 0x0, 0x0);
        gbc.writeMem(0x3bf2, { 0xcb, 0x96 });
        gbc.writeMem(0x56e0, { 0xc1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa18c, gbc.sp());
        EXPECT(0x3bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0238
        gbc.setState(0x3924, 0x90e6, 0x4e20, 0xd346, 0xf51a, 0x4681, 0x0, 0x1);
        gbc.writeMem(0x3924, { 0xcb, 0x96 });
        gbc.writeMem(0x4681, { 0xe2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x90e6, gbc.sp());
        EXPECT(0x3926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 023A
        gbc.setState(0x7845, 0x3ee2, 0x5880, 0x4c1a, 0x6e6f, 0xe948, 0x1, 0x1);
        gbc.writeMem(0x7845, { 0xcb, 0x96 });
        gbc.writeMem(0xe948, { 0xa0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3ee2, gbc.sp());
        EXPECT(0x7847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe948));
        // CB 96 023C
        gbc.setState(0x1171, 0x76df, 0xf4e0, 0x6eae, 0x1d33, 0xf118, 0x0, 0x1);
        gbc.writeMem(0x1171, { 0xcb, 0x96 });
        gbc.writeMem(0xf118, { 0xf3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x76df, gbc.sp());
        EXPECT(0x1173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xf118));
        // CB 96 023D
        gbc.setState(0x4758, 0xad37, 0x22a0, 0x4c18, 0xccab, 0x1010, 0x1, 0x1);
        gbc.writeMem(0x1010, { 0xea });
        gbc.writeMem(0x4758, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xad37, gbc.sp());
        EXPECT(0x475a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 023F
        gbc.setState(0x22a2, 0x5b1f, 0x56c0, 0x7cf8, 0xcc44, 0x71c7, 0x1, 0x0);
        gbc.writeMem(0x22a2, { 0xcb, 0x96 });
        gbc.writeMem(0x71c7, { 0xc0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5b1f, gbc.sp());
        EXPECT(0x22a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0240
        gbc.setState(0x57e4, 0xef61, 0x3b80, 0xb27e, 0xad86, 0xf213, 0x0, 0x0);
        gbc.writeMem(0x57e4, { 0xcb, 0x96 });
        gbc.writeMem(0xf213, { 0x68 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xef61, gbc.sp());
        EXPECT(0x57e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xf213));
        // CB 96 0242
        gbc.setState(0x5dd2, 0xf6dd, 0xacd0, 0x4ae0, 0x5489, 0xc707, 0x1, 0x1);
        gbc.writeMem(0x5dd2, { 0xcb, 0x96 });
        gbc.writeMem(0xc707, { 0x51 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf6dd, gbc.sp());
        EXPECT(0x5dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc707));
        // CB 96 0243
        gbc.setState(0x273b, 0xf251, 0x7700, 0x7120, 0xea74, 0x278b, 0x1, 0x0);
        gbc.writeMem(0x273b, { 0xcb, 0x96 });
        gbc.writeMem(0x278b, { 0xf2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf251, gbc.sp());
        EXPECT(0x273d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0244
        gbc.setState(0x5a5a, 0xdd3f, 0x6af0, 0xa098, 0x67b2, 0x1e3d, 0x1, 0x1);
        gbc.writeMem(0x1e3d, { 0xab });
        gbc.writeMem(0x5a5a, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdd3f, gbc.sp());
        EXPECT(0x5a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0245
        gbc.setState(0x40f2, 0xed1a, 0x9c50, 0xdfdf, 0xe5b3, 0x8d3, 0x0, 0x0);
        gbc.writeMem(0x8d3, { 0x4b });
        gbc.writeMem(0x40f2, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xed1a, gbc.sp());
        EXPECT(0x40f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0246
        gbc.setState(0x1a8b, 0xe851, 0x7d00, 0xa235, 0x9375, 0xe5c6, 0x1, 0x1);
        gbc.writeMem(0x1a8b, { 0xcb, 0x96 });
        gbc.writeMem(0xe5c6, { 0x35 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe851, gbc.sp());
        EXPECT(0x1a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe5c6));
        // CB 96 0247
        gbc.setState(0xa9b0, 0x8f9b, 0x1f50, 0x9518, 0x8e14, 0x3813, 0x0, 0x1);
        gbc.writeMem(0x3813, { 0x43 });
        gbc.writeMem(0xa9b0, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8f9b, gbc.sp());
        EXPECT(0xa9b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b0));
        EXPECT(0x96, gbc.readMem(0xa9b1));
        // CB 96 0248
        gbc.setState(0x287a, 0x7da0, 0xb990, 0x394f, 0xedbd, 0xaad9, 0x0, 0x0);
        gbc.writeMem(0x287a, { 0xcb, 0x96 });
        gbc.writeMem(0xaad9, { 0x76 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7da0, gbc.sp());
        EXPECT(0x287c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xaad9));
        // CB 96 0249
        gbc.setState(0x937e, 0xb60d, 0x3440, 0x6779, 0xc56c, 0x43c2, 0x1, 0x0);
        gbc.writeMem(0x43c2, { 0x70 });
        gbc.writeMem(0x937e, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb60d, gbc.sp());
        EXPECT(0x9380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937e));
        EXPECT(0x96, gbc.readMem(0x937f));
        // CB 96 024A
        gbc.setState(0x9b78, 0x17f2, 0x8000, 0x505b, 0xdb1, 0x3aa7, 0x1, 0x1);
        gbc.writeMem(0x3aa7, { 0x48 });
        gbc.writeMem(0x9b78, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x17f2, gbc.sp());
        EXPECT(0x9b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b78));
        EXPECT(0x96, gbc.readMem(0x9b79));
        // CB 96 024B
        gbc.setState(0xadb9, 0xdf0f, 0xb030, 0x7b2c, 0x42a0, 0x60f4, 0x0, 0x0);
        gbc.writeMem(0x60f4, { 0xab });
        gbc.writeMem(0xadb9, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdf0f, gbc.sp());
        EXPECT(0xadbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb9));
        EXPECT(0x96, gbc.readMem(0xadba));
        // CB 96 024D
        gbc.setState(0x1055, 0xdede, 0xdc00, 0xc819, 0x872f, 0x6bfa, 0x0, 0x1);
        gbc.writeMem(0x1055, { 0xcb, 0x96 });
        gbc.writeMem(0x6bfa, { 0x92 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdede, gbc.sp());
        EXPECT(0x1057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 024F
        gbc.setState(0x9f6, 0xd5e9, 0x4c0, 0x15dd, 0xe8df, 0x8e20, 0x1, 0x0);
        gbc.writeMem(0x9f6, { 0xcb, 0x96 });
        gbc.writeMem(0x8e20, { 0x2c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd5e9, gbc.sp());
        EXPECT(0x9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x8e20));
        // CB 96 0250
        gbc.setState(0xc0d0, 0xfa11, 0xc530, 0x709, 0x3c06, 0xa5d2, 0x0, 0x0);
        gbc.writeMem(0xa5d2, { 0x78 });
        gbc.writeMem(0xc0d0, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfa11, gbc.sp());
        EXPECT(0xc0d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa5d2));
        EXPECT(0xcb, gbc.readMem(0xc0d0));
        EXPECT(0x96, gbc.readMem(0xc0d1));
        // CB 96 0252
        gbc.setState(0xc278, 0xc9ba, 0x2b40, 0x64ab, 0x2dd5, 0x9d3, 0x0, 0x0);
        gbc.writeMem(0x9d3, { 0xba });
        gbc.writeMem(0xc278, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc9ba, gbc.sp());
        EXPECT(0xc27a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc278));
        EXPECT(0x96, gbc.readMem(0xc279));
        // CB 96 0253
        gbc.setState(0x721f, 0xb4a9, 0xaca0, 0x1d0d, 0xdb81, 0x35e3, 0x1, 0x1);
        gbc.writeMem(0x35e3, { 0xd2 });
        gbc.writeMem(0x721f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb4a9, gbc.sp());
        EXPECT(0x7221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0254
        gbc.setState(0x9362, 0xa42, 0xc50, 0x1146, 0x8ab9, 0xe75, 0x0, 0x1);
        gbc.writeMem(0xe75, { 0x1a });
        gbc.writeMem(0x9362, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa42, gbc.sp());
        EXPECT(0x9364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9362));
        EXPECT(0x96, gbc.readMem(0x9363));
        // CB 96 0256
        gbc.setState(0xab31, 0x6a1d, 0x5cc0, 0xaa5a, 0x3266, 0x54a7, 0x0, 0x0);
        gbc.writeMem(0x54a7, { 0x89 });
        gbc.writeMem(0xab31, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6a1d, gbc.sp());
        EXPECT(0xab33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab31));
        EXPECT(0x96, gbc.readMem(0xab32));
        // CB 96 0257
        gbc.setState(0xa2d4, 0x9ea1, 0x3460, 0x71e4, 0x2bfe, 0x6816, 0x0, 0x0);
        gbc.writeMem(0x6816, { 0xc3 });
        gbc.writeMem(0xa2d4, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9ea1, gbc.sp());
        EXPECT(0xa2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d4));
        EXPECT(0x96, gbc.readMem(0xa2d5));
        // CB 96 0259
        gbc.setState(0xae7d, 0xfd17, 0x9360, 0x4f48, 0x4f6, 0xeb15, 0x1, 0x1);
        gbc.writeMem(0xae7d, { 0xcb, 0x96 });
        gbc.writeMem(0xeb15, { 0xe6 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfd17, gbc.sp());
        EXPECT(0xae7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae7d));
        EXPECT(0x96, gbc.readMem(0xae7e));
        EXPECT(0xe2, gbc.readMem(0xeb15));
        // CB 96 025B
        gbc.setState(0x66c9, 0x95cc, 0x6750, 0x31bd, 0x8835, 0x92e6, 0x1, 0x0);
        gbc.writeMem(0x66c9, { 0xcb, 0x96 });
        gbc.writeMem(0x92e6, { 0xab });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x95cc, gbc.sp());
        EXPECT(0x66cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x92e6));
        // CB 96 025D
        gbc.setState(0x6db1, 0xf880, 0x2540, 0x17e6, 0x3966, 0x8d07, 0x0, 0x1);
        gbc.writeMem(0x6db1, { 0xcb, 0x96 });
        gbc.writeMem(0x8d07, { 0xb8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf880, gbc.sp());
        EXPECT(0x6db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8d07));
        // CB 96 025E
        gbc.setState(0x76dc, 0x960c, 0xfdc0, 0x8558, 0xb85f, 0x4e02, 0x0, 0x0);
        gbc.writeMem(0x4e02, { 0x3a });
        gbc.writeMem(0x76dc, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x960c, gbc.sp());
        EXPECT(0x76de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 025F
        gbc.setState(0x845f, 0x87b1, 0xda90, 0x26fd, 0x5710, 0x1962, 0x0, 0x0);
        gbc.writeMem(0x1962, { 0x19 });
        gbc.writeMem(0x845f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x87b1, gbc.sp());
        EXPECT(0x8461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845f));
        EXPECT(0x96, gbc.readMem(0x8460));
        // CB 96 0260
        gbc.setState(0x9bb4, 0xdb17, 0x2990, 0x4fb9, 0x75e4, 0xe288, 0x0, 0x0);
        gbc.writeMem(0x9bb4, { 0xcb, 0x96 });
        gbc.writeMem(0xe288, { 0xc9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdb17, gbc.sp());
        EXPECT(0x9bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb4));
        EXPECT(0x96, gbc.readMem(0x9bb5));
        EXPECT(0xc9, gbc.readMem(0xe288));
        // CB 96 0262
        gbc.setState(0xeacd, 0x9d89, 0xec90, 0xed14, 0x78de, 0x6f65, 0x0, 0x0);
        gbc.writeMem(0x6f65, { 0xf3 });
        gbc.writeMem(0xeacd, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9d89, gbc.sp());
        EXPECT(0xeacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeacd));
        EXPECT(0x96, gbc.readMem(0xeace));
        // CB 96 0264
        gbc.setState(0xcd6d, 0x4e21, 0x9ca0, 0xc49b, 0x995c, 0x1145, 0x1, 0x0);
        gbc.writeMem(0x1145, { 0x63 });
        gbc.writeMem(0xcd6d, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4e21, gbc.sp());
        EXPECT(0xcd6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd6d));
        EXPECT(0x96, gbc.readMem(0xcd6e));
        // CB 96 0266
        gbc.setState(0x643d, 0x7bae, 0x2ff0, 0x231c, 0x4c94, 0xfcce, 0x0, 0x0);
        gbc.writeMem(0x643d, { 0xcb, 0x96 });
        gbc.writeMem(0xfcce, { 0x78 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7bae, gbc.sp());
        EXPECT(0x643f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xfcce));
        // CB 96 0267
        gbc.setState(0xbd8a, 0x554e, 0x4f50, 0x8419, 0x991c, 0x9cbc, 0x0, 0x1);
        gbc.writeMem(0x9cbc, { 0xd9 });
        gbc.writeMem(0xbd8a, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x554e, gbc.sp());
        EXPECT(0xbd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9cbc));
        EXPECT(0xcb, gbc.readMem(0xbd8a));
        EXPECT(0x96, gbc.readMem(0xbd8b));
        // CB 96 0268
        gbc.setState(0x6877, 0xff8a, 0x3cb0, 0xf416, 0x73d3, 0x7cd2, 0x1, 0x0);
        gbc.writeMem(0x6877, { 0xcb, 0x96 });
        gbc.writeMem(0x7cd2, { 0x30 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xff8a, gbc.sp());
        EXPECT(0x6879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0269
        gbc.setState(0x3027, 0xd864, 0xa1c0, 0x8d79, 0x4b5, 0xdbbc, 0x1, 0x1);
        gbc.writeMem(0x3027, { 0xcb, 0x96 });
        gbc.writeMem(0xdbbc, { 0x48 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd864, gbc.sp());
        EXPECT(0x3029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdbbc));
        // CB 96 026A
        gbc.setState(0xa91b, 0x9d05, 0x4520, 0x1c25, 0x55cf, 0xfbf6, 0x1, 0x1);
        gbc.writeMem(0xa91b, { 0xcb, 0x96 });
        gbc.writeMem(0xfbf6, { 0xb5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9d05, gbc.sp());
        EXPECT(0xa91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa91b));
        EXPECT(0x96, gbc.readMem(0xa91c));
        EXPECT(0xb1, gbc.readMem(0xfbf6));
        // CB 96 026B
        gbc.setState(0xc, 0xcb73, 0x5640, 0x7910, 0xc99f, 0x46ab, 0x0, 0x1);
        gbc.writeMem(0xc, { 0xcb, 0x96 });
        gbc.writeMem(0x46ab, { 0xba });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcb73, gbc.sp());
        EXPECT(0xe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 026C
        gbc.setState(0x3b9f, 0xb635, 0xfd10, 0x4df6, 0xf9a3, 0x27da, 0x1, 0x0);
        gbc.writeMem(0x27da, { 0x30 });
        gbc.writeMem(0x3b9f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb635, gbc.sp());
        EXPECT(0x3ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 026E
        gbc.setState(0xd08d, 0x759b, 0x6e70, 0x32f7, 0xdcb7, 0x1529, 0x1, 0x0);
        gbc.writeMem(0x1529, { 0xf0 });
        gbc.writeMem(0xd08d, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x759b, gbc.sp());
        EXPECT(0xd08f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd08d));
        EXPECT(0x96, gbc.readMem(0xd08e));
        // CB 96 0270
        gbc.setState(0xda60, 0xc270, 0x45b0, 0x291a, 0xced3, 0x87da, 0x1, 0x0);
        gbc.writeMem(0x87da, { 0x4 });
        gbc.writeMem(0xda60, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc270, gbc.sp());
        EXPECT(0xda62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x87da));
        EXPECT(0xcb, gbc.readMem(0xda60));
        EXPECT(0x96, gbc.readMem(0xda61));
        // CB 96 0271
        gbc.setState(0xc10e, 0xf62, 0x4bd0, 0xe0fe, 0x83b2, 0xc31f, 0x1, 0x0);
        gbc.writeMem(0xc10e, { 0xcb, 0x96 });
        gbc.writeMem(0xc31f, { 0xf9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf62, gbc.sp());
        EXPECT(0xc110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc10e));
        EXPECT(0x96, gbc.readMem(0xc10f));
        EXPECT(0xf9, gbc.readMem(0xc31f));
        // CB 96 0276
        gbc.setState(0xda2b, 0xdacf, 0x62a0, 0xda81, 0x729b, 0xc892, 0x1, 0x0);
        gbc.writeMem(0xc892, { 0x38 });
        gbc.writeMem(0xda2b, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdacf, gbc.sp());
        EXPECT(0xda2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc892));
        EXPECT(0xcb, gbc.readMem(0xda2b));
        EXPECT(0x96, gbc.readMem(0xda2c));
        // CB 96 0277
        gbc.setState(0x17de, 0xbd40, 0x890, 0x40e7, 0x30ac, 0xbd9c, 0x0, 0x1);
        gbc.writeMem(0x17de, { 0xcb, 0x96 });
        gbc.writeMem(0xbd9c, { 0x9f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbd40, gbc.sp());
        EXPECT(0x17e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbd9c));
        // CB 96 0278
        gbc.setState(0x1e31, 0x9921, 0x7d20, 0x5860, 0xc851, 0x8eb8, 0x1, 0x1);
        gbc.writeMem(0x1e31, { 0xcb, 0x96 });
        gbc.writeMem(0x8eb8, { 0x8d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9921, gbc.sp());
        EXPECT(0x1e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8eb8));
        // CB 96 027B
        gbc.setState(0x73d0, 0x96f2, 0xc950, 0x9559, 0x6891, 0xfe2b, 0x0, 0x0);
        gbc.writeMem(0x73d0, { 0xcb, 0x96 });
        gbc.writeMem(0xfe2b, { 0xd1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x96f2, gbc.sp());
        EXPECT(0x73d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xfe2b));
        // CB 96 027D
        gbc.setState(0xc3f2, 0x7e72, 0x91e0, 0xbd29, 0xa92, 0xa301, 0x1, 0x1);
        gbc.writeMem(0xa301, { 0x5b });
        gbc.writeMem(0xc3f2, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7e72, gbc.sp());
        EXPECT(0xc3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa301));
        EXPECT(0xcb, gbc.readMem(0xc3f2));
        EXPECT(0x96, gbc.readMem(0xc3f3));
        // CB 96 027F
        gbc.setState(0x901f, 0xc9a7, 0xfe60, 0x7fa6, 0xe17d, 0x9db5, 0x1, 0x1);
        gbc.writeMem(0x901f, { 0xcb, 0x96 });
        gbc.writeMem(0x9db5, { 0x86 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc9a7, gbc.sp());
        EXPECT(0x9021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901f));
        EXPECT(0x96, gbc.readMem(0x9020));
        EXPECT(0x82, gbc.readMem(0x9db5));
        // CB 96 0281
        gbc.setState(0xde59, 0x6ccb, 0xc240, 0xaa3d, 0xe62b, 0xe1f4, 0x1, 0x1);
        gbc.writeMem(0xde59, { 0xcb, 0x96 });
        gbc.writeMem(0xe1f4, { 0xeb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6ccb, gbc.sp());
        EXPECT(0xde5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde59));
        EXPECT(0x96, gbc.readMem(0xde5a));
        EXPECT(0xeb, gbc.readMem(0xe1f4));
        // CB 96 0282
        gbc.setState(0xd1a3, 0x45ba, 0x50a0, 0x852, 0x36e7, 0xe0bf, 0x0, 0x1);
        gbc.writeMem(0xd1a3, { 0xcb, 0x96 });
        gbc.writeMem(0xe0bf, { 0xb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x45ba, gbc.sp());
        EXPECT(0xd1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a3));
        EXPECT(0x96, gbc.readMem(0xd1a4));
        EXPECT(0xb, gbc.readMem(0xe0bf));
        // CB 96 0283
        gbc.setState(0x8a69, 0x290d, 0x1a20, 0xe553, 0xfcb4, 0xbfd8, 0x0, 0x1);
        gbc.writeMem(0x8a69, { 0xcb, 0x96 });
        gbc.writeMem(0xbfd8, { 0x13 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x290d, gbc.sp());
        EXPECT(0x8a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a69));
        EXPECT(0x96, gbc.readMem(0x8a6a));
        EXPECT(0x13, gbc.readMem(0xbfd8));
        // CB 96 0285
        gbc.setState(0xd310, 0x90ac, 0x4450, 0xc4c1, 0xe666, 0xc144, 0x1, 0x1);
        gbc.writeMem(0xc144, { 0x20 });
        gbc.writeMem(0xd310, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x90ac, gbc.sp());
        EXPECT(0xd312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc144));
        EXPECT(0xcb, gbc.readMem(0xd310));
        EXPECT(0x96, gbc.readMem(0xd311));
        // CB 96 0286
        gbc.setState(0xa734, 0xe425, 0x5e10, 0x9c5f, 0x6f17, 0x5088, 0x1, 0x1);
        gbc.writeMem(0x5088, { 0x12 });
        gbc.writeMem(0xa734, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe425, gbc.sp());
        EXPECT(0xa736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa734));
        EXPECT(0x96, gbc.readMem(0xa735));
        // CB 96 0288
        gbc.setState(0xdef7, 0x2d08, 0x1260, 0xcb9, 0xfd0a, 0xb680, 0x1, 0x1);
        gbc.writeMem(0xb680, { 0xa4 });
        gbc.writeMem(0xdef7, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2d08, gbc.sp());
        EXPECT(0xdef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb680));
        EXPECT(0xcb, gbc.readMem(0xdef7));
        EXPECT(0x96, gbc.readMem(0xdef8));
        // CB 96 0289
        gbc.setState(0x840, 0xc2e4, 0xe390, 0x47ea, 0x6a8c, 0x21d9, 0x0, 0x0);
        gbc.writeMem(0x840, { 0xcb, 0x96 });
        gbc.writeMem(0x21d9, { 0xd9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc2e4, gbc.sp());
        EXPECT(0x842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 028A
        gbc.setState(0xaf0, 0x6be8, 0xcbf0, 0x2808, 0x2c42, 0xfe23, 0x0, 0x1);
        gbc.writeMem(0xaf0, { 0xcb, 0x96 });
        gbc.writeMem(0xfe23, { 0x9f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6be8, gbc.sp());
        EXPECT(0xaf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xfe23));
        // CB 96 028B
        gbc.setState(0xc7b3, 0xc106, 0x26f0, 0x45f1, 0xa71e, 0xa352, 0x1, 0x1);
        gbc.writeMem(0xa352, { 0x77 });
        gbc.writeMem(0xc7b3, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc106, gbc.sp());
        EXPECT(0xc7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa352));
        EXPECT(0xcb, gbc.readMem(0xc7b3));
        EXPECT(0x96, gbc.readMem(0xc7b4));
        // CB 96 028C
        gbc.setState(0x9bbd, 0x76b2, 0x5590, 0x1dc, 0xc1a5, 0xcbf5, 0x1, 0x1);
        gbc.writeMem(0x9bbd, { 0xcb, 0x96 });
        gbc.writeMem(0xcbf5, { 0x7d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x76b2, gbc.sp());
        EXPECT(0x9bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbd));
        EXPECT(0x96, gbc.readMem(0x9bbe));
        EXPECT(0x79, gbc.readMem(0xcbf5));
        // CB 96 028D
        gbc.setState(0x1838, 0x82d0, 0xf80, 0x2e3b, 0x7ed5, 0xbef2, 0x1, 0x0);
        gbc.writeMem(0x1838, { 0xcb, 0x96 });
        gbc.writeMem(0xbef2, { 0x78 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x82d0, gbc.sp());
        EXPECT(0x183a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbef2));
        // CB 96 0290
        gbc.setState(0xc4ef, 0x558b, 0xa3a0, 0xd176, 0xa91d, 0xb0fd, 0x1, 0x1);
        gbc.writeMem(0xb0fd, { 0xe6 });
        gbc.writeMem(0xc4ef, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x558b, gbc.sp());
        EXPECT(0xc4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb0fd));
        EXPECT(0xcb, gbc.readMem(0xc4ef));
        EXPECT(0x96, gbc.readMem(0xc4f0));
        // CB 96 0291
        gbc.setState(0x18cf, 0x1f56, 0x6100, 0xb8c8, 0x57df, 0x8b55, 0x1, 0x1);
        gbc.writeMem(0x18cf, { 0xcb, 0x96 });
        gbc.writeMem(0x8b55, { 0xaa });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1f56, gbc.sp());
        EXPECT(0x18d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8b55));
        // CB 96 0292
        gbc.setState(0x4c09, 0x255e, 0x4610, 0x5d2c, 0x1203, 0xc35d, 0x0, 0x1);
        gbc.writeMem(0x4c09, { 0xcb, 0x96 });
        gbc.writeMem(0xc35d, { 0x2b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x255e, gbc.sp());
        EXPECT(0x4c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc35d));
        // CB 96 0293
        gbc.setState(0x8ab2, 0x673e, 0xe7a0, 0x9293, 0xf760, 0x7757, 0x1, 0x0);
        gbc.writeMem(0x7757, { 0xb9 });
        gbc.writeMem(0x8ab2, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x673e, gbc.sp());
        EXPECT(0x8ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab2));
        EXPECT(0x96, gbc.readMem(0x8ab3));
        // CB 96 0294
        gbc.setState(0x62f2, 0x3da4, 0x5440, 0x46cb, 0x327e, 0x9278, 0x1, 0x1);
        gbc.writeMem(0x62f2, { 0xcb, 0x96 });
        gbc.writeMem(0x9278, { 0xb0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3da4, gbc.sp());
        EXPECT(0x62f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9278));
        // CB 96 0296
        gbc.setState(0x6f11, 0x149c, 0xb380, 0x36a9, 0xc32b, 0xf379, 0x0, 0x1);
        gbc.writeMem(0x6f11, { 0xcb, 0x96 });
        gbc.writeMem(0xf379, { 0x7b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x149c, gbc.sp());
        EXPECT(0x6f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xf379));
        // CB 96 0297
        gbc.setState(0x9e9b, 0x6214, 0xd040, 0x6e77, 0x50c6, 0xc116, 0x0, 0x1);
        gbc.writeMem(0x9e9b, { 0xcb, 0x96 });
        gbc.writeMem(0xc116, { 0x8e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6214, gbc.sp());
        EXPECT(0x9e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9b));
        EXPECT(0x96, gbc.readMem(0x9e9c));
        EXPECT(0x8a, gbc.readMem(0xc116));
        // CB 96 029A
        gbc.setState(0xef, 0xbea0, 0xe130, 0x6c99, 0x29f1, 0x6463, 0x0, 0x0);
        gbc.writeMem(0xef, { 0xcb, 0x96 });
        gbc.writeMem(0x6463, { 0xf0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbea0, gbc.sp());
        EXPECT(0xf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 029B
        gbc.setState(0xbdd2, 0xc57c, 0xee70, 0xd53b, 0xee0c, 0x8ba9, 0x0, 0x1);
        gbc.writeMem(0x8ba9, { 0xc4 });
        gbc.writeMem(0xbdd2, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc57c, gbc.sp());
        EXPECT(0xbdd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x8ba9));
        EXPECT(0xcb, gbc.readMem(0xbdd2));
        EXPECT(0x96, gbc.readMem(0xbdd3));
        // CB 96 029E
        gbc.setState(0x5b4, 0x7f24, 0x4010, 0x9e65, 0x273d, 0xc3ec, 0x1, 0x0);
        gbc.writeMem(0x5b4, { 0xcb, 0x96 });
        gbc.writeMem(0xc3ec, { 0x1b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7f24, gbc.sp());
        EXPECT(0x5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xc3ec));
        // CB 96 029F
        gbc.setState(0x2238, 0x2994, 0x2000, 0x135c, 0x2603, 0x7f31, 0x1, 0x1);
        gbc.writeMem(0x2238, { 0xcb, 0x96 });
        gbc.writeMem(0x7f31, { 0x49 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2994, gbc.sp());
        EXPECT(0x223a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 02A0
        gbc.setState(0x8cb5, 0x9194, 0xacc0, 0xb77e, 0xd734, 0xbf62, 0x1, 0x1);
        gbc.writeMem(0x8cb5, { 0xcb, 0x96 });
        gbc.writeMem(0xbf62, { 0x8a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9194, gbc.sp());
        EXPECT(0x8cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb5));
        EXPECT(0x96, gbc.readMem(0x8cb6));
        EXPECT(0x8a, gbc.readMem(0xbf62));
        // CB 96 02A1
        gbc.setState(0x3f33, 0xa5b2, 0xa020, 0xf577, 0xce53, 0x675, 0x0, 0x1);
        gbc.writeMem(0x675, { 0x92 });
        gbc.writeMem(0x3f33, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa5b2, gbc.sp());
        EXPECT(0x3f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 02A3
        gbc.setState(0xb94c, 0x77a3, 0xbb30, 0x6a86, 0x417, 0xbe48, 0x0, 0x0);
        gbc.writeMem(0xb94c, { 0xcb, 0x96 });
        gbc.writeMem(0xbe48, { 0x3b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x77a3, gbc.sp());
        EXPECT(0xb94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94c));
        EXPECT(0x96, gbc.readMem(0xb94d));
        EXPECT(0x3b, gbc.readMem(0xbe48));
        // CB 96 02A5
        gbc.setState(0x1bb3, 0xf6ac, 0xef0, 0x1e50, 0x9884, 0xf0c4, 0x0, 0x1);
        gbc.writeMem(0x1bb3, { 0xcb, 0x96 });
        gbc.writeMem(0xf0c4, { 0x28 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf6ac, gbc.sp());
        EXPECT(0x1bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xf0c4));
        // CB 96 02A6
        gbc.setState(0xca13, 0x4fde, 0x910, 0x329d, 0x17de, 0xfce5, 0x1, 0x0);
        gbc.writeMem(0xca13, { 0xcb, 0x96 });
        gbc.writeMem(0xfce5, { 0x79 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4fde, gbc.sp());
        EXPECT(0xca15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca13));
        EXPECT(0x96, gbc.readMem(0xca14));
        EXPECT(0x79, gbc.readMem(0xfce5));
        // CB 96 02A7
        gbc.setState(0x58f5, 0xdf8c, 0x3ae0, 0xfb05, 0x6168, 0xf137, 0x1, 0x1);
        gbc.writeMem(0x58f5, { 0xcb, 0x96 });
        gbc.writeMem(0xf137, { 0x9c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdf8c, gbc.sp());
        EXPECT(0x58f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xf137));
        // CB 96 02A8
        gbc.setState(0xb7ef, 0xa7fb, 0x6030, 0xdc04, 0x5901, 0xa3f2, 0x0, 0x0);
        gbc.writeMem(0xa3f2, { 0x39 });
        gbc.writeMem(0xb7ef, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa7fb, gbc.sp());
        EXPECT(0xb7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xa3f2));
        EXPECT(0xcb, gbc.readMem(0xb7ef));
        EXPECT(0x96, gbc.readMem(0xb7f0));
        // CB 96 02AA
        gbc.setState(0x6bb0, 0x9d21, 0xe1f0, 0xdd3e, 0x6bfd, 0x7557, 0x1, 0x1);
        gbc.writeMem(0x6bb0, { 0xcb, 0x96 });
        gbc.writeMem(0x7557, { 0xa9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9d21, gbc.sp());
        EXPECT(0x6bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 02AD
        gbc.setState(0x42e1, 0x1811, 0x9740, 0xc56f, 0xc7cd, 0x2271, 0x0, 0x0);
        gbc.writeMem(0x2271, { 0xa3 });
        gbc.writeMem(0x42e1, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1811, gbc.sp());
        EXPECT(0x42e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 02AF
        gbc.setState(0x782e, 0xdb08, 0x840, 0x5c2, 0x76c5, 0x6da8, 0x1, 0x1);
        gbc.writeMem(0x6da8, { 0x40 });
        gbc.writeMem(0x782e, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdb08, gbc.sp());
        EXPECT(0x7830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 02B0
        gbc.setState(0xd1b2, 0x416e, 0xe9a0, 0x66ae, 0x2119, 0xe002, 0x1, 0x0);
        gbc.writeMem(0xd1b2, { 0xcb, 0x96 });
        gbc.writeMem(0xe002, { 0xdb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x416e, gbc.sp());
        EXPECT(0xd1b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b2));
        EXPECT(0x96, gbc.readMem(0xd1b3));
        EXPECT(0xdb, gbc.readMem(0xe002));
        // CB 96 02B1
        gbc.setState(0x558c, 0xe158, 0x7610, 0xab40, 0xb749, 0xcedf, 0x0, 0x0);
        gbc.writeMem(0x558c, { 0xcb, 0x96 });
        gbc.writeMem(0xcedf, { 0xd9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe158, gbc.sp());
        EXPECT(0x558e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcedf));
        // CB 96 02B2
        gbc.setState(0xcb14, 0xae0f, 0x37e0, 0xbf65, 0xa960, 0xefa1, 0x0, 0x0);
        gbc.writeMem(0xcb14, { 0xcb, 0x96 });
        gbc.writeMem(0xefa1, { 0x23 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xae0f, gbc.sp());
        EXPECT(0xcb16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb14));
        EXPECT(0x96, gbc.readMem(0xcb15));
        EXPECT(0x23, gbc.readMem(0xefa1));
        // CB 96 02B3
        gbc.setState(0x8d0e, 0x3082, 0xd080, 0x61a6, 0x6464, 0xaafe, 0x0, 0x1);
        gbc.writeMem(0x8d0e, { 0xcb, 0x96 });
        gbc.writeMem(0xaafe, { 0xa9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3082, gbc.sp());
        EXPECT(0x8d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d0e));
        EXPECT(0x96, gbc.readMem(0x8d0f));
        EXPECT(0xa9, gbc.readMem(0xaafe));
        // CB 96 02B4
        gbc.setState(0x921d, 0xb2e5, 0x58d0, 0x5ce3, 0xe8df, 0xd1d6, 0x1, 0x1);
        gbc.writeMem(0x921d, { 0xcb, 0x96 });
        gbc.writeMem(0xd1d6, { 0x3f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb2e5, gbc.sp());
        EXPECT(0x921f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x921d));
        EXPECT(0x96, gbc.readMem(0x921e));
        EXPECT(0x3b, gbc.readMem(0xd1d6));
        // CB 96 02B5
        gbc.setState(0x904, 0xddfd, 0x85e0, 0xd324, 0x5232, 0xb9a0, 0x1, 0x0);
        gbc.writeMem(0x904, { 0xcb, 0x96 });
        gbc.writeMem(0xb9a0, { 0x1a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xddfd, gbc.sp());
        EXPECT(0x906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb9a0));
        // CB 96 02B6
        gbc.setState(0x1e2c, 0xfdf4, 0x9870, 0xabb2, 0x1878, 0x8ba8, 0x0, 0x1);
        gbc.writeMem(0x1e2c, { 0xcb, 0x96 });
        gbc.writeMem(0x8ba8, { 0x8e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfdf4, gbc.sp());
        EXPECT(0x1e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8ba8));
        // CB 96 02B7
        gbc.setState(0x8daf, 0x68ed, 0xe180, 0x912e, 0xbdc4, 0x66b8, 0x1, 0x1);
        gbc.writeMem(0x66b8, { 0xa0 });
        gbc.writeMem(0x8daf, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x68ed, gbc.sp());
        EXPECT(0x8db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8daf));
        EXPECT(0x96, gbc.readMem(0x8db0));
        // CB 96 02B8
        gbc.setState(0x91f2, 0xca90, 0x6390, 0x25c, 0x4556, 0x430f, 0x0, 0x0);
        gbc.writeMem(0x430f, { 0xca });
        gbc.writeMem(0x91f2, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xca90, gbc.sp());
        EXPECT(0x91f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f2));
        EXPECT(0x96, gbc.readMem(0x91f3));
        // CB 96 02BA
        gbc.setState(0x6717, 0x17af, 0xb3c0, 0x5e46, 0x6ae1, 0x7087, 0x1, 0x0);
        gbc.writeMem(0x6717, { 0xcb, 0x96 });
        gbc.writeMem(0x7087, { 0x43 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x17af, gbc.sp());
        EXPECT(0x6719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 02BB
        gbc.setState(0xa382, 0xe503, 0x2ed0, 0xf543, 0x1a4f, 0x956b, 0x0, 0x0);
        gbc.writeMem(0x956b, { 0x9f });
        gbc.writeMem(0xa382, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe503, gbc.sp());
        EXPECT(0xa384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x956b));
        EXPECT(0xcb, gbc.readMem(0xa382));
        EXPECT(0x96, gbc.readMem(0xa383));
        // CB 96 02BC
        gbc.setState(0x1727, 0xcf9d, 0x4bf0, 0xbe72, 0x2961, 0xb292, 0x0, 0x0);
        gbc.writeMem(0x1727, { 0xcb, 0x96 });
        gbc.writeMem(0xb292, { 0x60 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcf9d, gbc.sp());
        EXPECT(0x1729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xb292));
        // CB 96 02BD
        gbc.setState(0x6103, 0x882c, 0x6330, 0x7387, 0x1be5, 0x8da1, 0x1, 0x0);
        gbc.writeMem(0x6103, { 0xcb, 0x96 });
        gbc.writeMem(0x8da1, { 0x27 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x882c, gbc.sp());
        EXPECT(0x6105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8da1));
        // CB 96 02C2
        gbc.setState(0x31a, 0x93da, 0xfee0, 0xc994, 0x2e90, 0xf851, 0x1, 0x0);
        gbc.writeMem(0x31a, { 0xcb, 0x96 });
        gbc.writeMem(0xf851, { 0xc4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x93da, gbc.sp());
        EXPECT(0x31c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xf851));
        // CB 96 02C4
        gbc.setState(0xc318, 0xefc8, 0x3a40, 0x6b0c, 0x8953, 0x2030, 0x1, 0x0);
        gbc.writeMem(0x2030, { 0xea });
        gbc.writeMem(0xc318, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xefc8, gbc.sp());
        EXPECT(0xc31a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc318));
        EXPECT(0x96, gbc.readMem(0xc319));
        // CB 96 02C6
        gbc.setState(0x5d0f, 0x85bb, 0x96f0, 0x3f8a, 0xe3dc, 0x1f33, 0x1, 0x1);
        gbc.writeMem(0x1f33, { 0xf9 });
        gbc.writeMem(0x5d0f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x85bb, gbc.sp());
        EXPECT(0x5d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 02C8
        gbc.setState(0xc79f, 0xc1ee, 0xda30, 0xfd8a, 0xe0cc, 0x713, 0x0, 0x0);
        gbc.writeMem(0x713, { 0x98 });
        gbc.writeMem(0xc79f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc1ee, gbc.sp());
        EXPECT(0xc7a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79f));
        EXPECT(0x96, gbc.readMem(0xc7a0));
        // CB 96 02CA
        gbc.setState(0x1f38, 0x7177, 0xf8c0, 0x8d64, 0x3c26, 0xe102, 0x0, 0x1);
        gbc.writeMem(0x1f38, { 0xcb, 0x96 });
        gbc.writeMem(0xe102, { 0xfa });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7177, gbc.sp());
        EXPECT(0x1f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe102));
        // CB 96 02CD
        gbc.setState(0x4abe, 0xef91, 0x6ea0, 0xdf5e, 0xd9ba, 0x18fd, 0x0, 0x0);
        gbc.writeMem(0x18fd, { 0xda });
        gbc.writeMem(0x4abe, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xef91, gbc.sp());
        EXPECT(0x4ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 02CE
        gbc.setState(0xd7ae, 0x8499, 0x5ab0, 0x2541, 0x7ede, 0xc8ac, 0x1, 0x0);
        gbc.writeMem(0xc8ac, { 0x1f });
        gbc.writeMem(0xd7ae, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8499, gbc.sp());
        EXPECT(0xd7b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xc8ac));
        EXPECT(0xcb, gbc.readMem(0xd7ae));
        EXPECT(0x96, gbc.readMem(0xd7af));
        // CB 96 02CF
        gbc.setState(0x40d5, 0x6fe1, 0xbf70, 0xb39f, 0xb478, 0x1a16, 0x1, 0x1);
        gbc.writeMem(0x1a16, { 0x63 });
        gbc.writeMem(0x40d5, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6fe1, gbc.sp());
        EXPECT(0x40d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 02D0
        gbc.setState(0x60c2, 0xcafc, 0x7600, 0x7329, 0xbb82, 0x787a, 0x1, 0x1);
        gbc.writeMem(0x60c2, { 0xcb, 0x96 });
        gbc.writeMem(0x787a, { 0xb9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcafc, gbc.sp());
        EXPECT(0x60c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 02D1
        gbc.setState(0x5772, 0x4a0d, 0x55f0, 0x1c36, 0xffcd, 0xdbb1, 0x1, 0x0);
        gbc.writeMem(0x5772, { 0xcb, 0x96 });
        gbc.writeMem(0xdbb1, { 0x1c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4a0d, gbc.sp());
        EXPECT(0x5774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xdbb1));
        // CB 96 02D2
        gbc.setState(0x528d, 0x93d5, 0xc6f0, 0x8b4c, 0x1cf1, 0x9180, 0x1, 0x0);
        gbc.writeMem(0x528d, { 0xcb, 0x96 });
        gbc.writeMem(0x9180, { 0x72 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x93d5, gbc.sp());
        EXPECT(0x528f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9180));
        // CB 96 02D3
        gbc.setState(0x9bf2, 0xb9b5, 0x69b0, 0x7fdc, 0xf40, 0xa836, 0x0, 0x1);
        gbc.writeMem(0x9bf2, { 0xcb, 0x96 });
        gbc.writeMem(0xa836, { 0xc3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb9b5, gbc.sp());
        EXPECT(0x9bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf2));
        EXPECT(0x96, gbc.readMem(0x9bf3));
        EXPECT(0xc3, gbc.readMem(0xa836));
        // CB 96 02D4
        gbc.setState(0x4703, 0x9b7c, 0xbc30, 0x8778, 0xf25a, 0x2b9a, 0x1, 0x1);
        gbc.writeMem(0x2b9a, { 0x1a });
        gbc.writeMem(0x4703, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9b7c, gbc.sp());
        EXPECT(0x4705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 02D5
        gbc.setState(0xa804, 0xfb51, 0x3af0, 0x5139, 0xf4ad, 0xff45, 0x0, 0x1);
        gbc.writeMem(0xa804, { 0xcb, 0x96 });
        gbc.writeMem(0xff45, { 0xd4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfb51, gbc.sp());
        EXPECT(0xa806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa804));
        EXPECT(0x96, gbc.readMem(0xa805));
        EXPECT(0xd0, gbc.readMem(0xff45));
        // CB 96 02D6
        gbc.setState(0xbed9, 0x19e0, 0x1b60, 0xdfab, 0x53aa, 0xcf31, 0x0, 0x0);
        gbc.writeMem(0xbed9, { 0xcb, 0x96 });
        gbc.writeMem(0xcf31, { 0xcd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x19e0, gbc.sp());
        EXPECT(0xbedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed9));
        EXPECT(0x96, gbc.readMem(0xbeda));
        EXPECT(0xc9, gbc.readMem(0xcf31));
        // CB 96 02D7
        gbc.setState(0x3d04, 0xa1f5, 0xdcb0, 0x5e4e, 0x6150, 0xee9a, 0x0, 0x0);
        gbc.writeMem(0x3d04, { 0xcb, 0x96 });
        gbc.writeMem(0xee9a, { 0xed });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa1f5, gbc.sp());
        EXPECT(0x3d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xee9a));
        // CB 96 02D9
        gbc.setState(0x1859, 0xeff6, 0xca50, 0x5902, 0xac25, 0x8460, 0x0, 0x0);
        gbc.writeMem(0x1859, { 0xcb, 0x96 });
        gbc.writeMem(0x8460, { 0x4e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xeff6, gbc.sp());
        EXPECT(0x185b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x8460));
        // CB 96 02DB
        gbc.setState(0x40c6, 0x2398, 0xd450, 0x80c2, 0x8257, 0x3266, 0x0, 0x1);
        gbc.writeMem(0x3266, { 0x80 });
        gbc.writeMem(0x40c6, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2398, gbc.sp());
        EXPECT(0x40c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 02DC
        gbc.setState(0x5b93, 0xcd98, 0x2bf0, 0xa928, 0x542a, 0x7644, 0x1, 0x1);
        gbc.writeMem(0x5b93, { 0xcb, 0x96 });
        gbc.writeMem(0x7644, { 0x83 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcd98, gbc.sp());
        EXPECT(0x5b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 02DD
        gbc.setState(0x4257, 0x79b6, 0xdb50, 0x5c2b, 0x218b, 0xfabd, 0x1, 0x1);
        gbc.writeMem(0x4257, { 0xcb, 0x96 });
        gbc.writeMem(0xfabd, { 0xf0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x79b6, gbc.sp());
        EXPECT(0x4259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xfabd));
        // CB 96 02DE
        gbc.setState(0x78e8, 0x28c2, 0x1840, 0x29a, 0x5c00, 0x538, 0x0, 0x0);
        gbc.writeMem(0x538, { 0xf3 });
        gbc.writeMem(0x78e8, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x28c2, gbc.sp());
        EXPECT(0x78ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 02DF
        gbc.setState(0x49f4, 0x679a, 0x7c20, 0xbee4, 0xe50a, 0xdee6, 0x0, 0x1);
        gbc.writeMem(0x49f4, { 0xcb, 0x96 });
        gbc.writeMem(0xdee6, { 0x15 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x679a, gbc.sp());
        EXPECT(0x49f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdee6));
        // CB 96 02E0
        gbc.setState(0x277f, 0xa911, 0x6190, 0x38a5, 0x5eea, 0xa783, 0x1, 0x0);
        gbc.writeMem(0x277f, { 0xcb, 0x96 });
        gbc.writeMem(0xa783, { 0xd6 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa911, gbc.sp());
        EXPECT(0x2781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xa783));
        // CB 96 02E1
        gbc.setState(0x3233, 0x1f06, 0xf70, 0x1489, 0xf74b, 0x8dc, 0x0, 0x1);
        gbc.writeMem(0x8dc, { 0xc9 });
        gbc.writeMem(0x3233, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1f06, gbc.sp());
        EXPECT(0x3235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 02E2
        gbc.setState(0xac70, 0xcb16, 0xb4b0, 0xb68f, 0xe292, 0x6c6e, 0x0, 0x0);
        gbc.writeMem(0x6c6e, { 0xa2 });
        gbc.writeMem(0xac70, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcb16, gbc.sp());
        EXPECT(0xac72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac70));
        EXPECT(0x96, gbc.readMem(0xac71));
        // CB 96 02E3
        gbc.setState(0x1315, 0x93d5, 0x17a0, 0x1f24, 0x6762, 0x98db, 0x1, 0x0);
        gbc.writeMem(0x1315, { 0xcb, 0x96 });
        gbc.writeMem(0x98db, { 0xb9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x93d5, gbc.sp());
        EXPECT(0x1317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x98db));
        // CB 96 02E4
        gbc.setState(0xe755, 0xf534, 0xee0, 0x6621, 0x732e, 0x1bde, 0x1, 0x0);
        gbc.writeMem(0x1bde, { 0x48 });
        gbc.writeMem(0xe755, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf534, gbc.sp());
        EXPECT(0xe757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe755));
        EXPECT(0x96, gbc.readMem(0xe756));
        // CB 96 02E5
        gbc.setState(0x3bde, 0x2f9b, 0xbc0, 0xb032, 0xfbd, 0xbf2a, 0x1, 0x1);
        gbc.writeMem(0x3bde, { 0xcb, 0x96 });
        gbc.writeMem(0xbf2a, { 0x8d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2f9b, gbc.sp());
        EXPECT(0x3be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbf2a));
        // CB 96 02E6
        gbc.setState(0x2558, 0x8b82, 0xda50, 0x73ac, 0xa34b, 0x768, 0x0, 0x1);
        gbc.writeMem(0x768, { 0x7b });
        gbc.writeMem(0x2558, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8b82, gbc.sp());
        EXPECT(0x255a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 02E7
        gbc.setState(0x40d2, 0xfa8d, 0x8170, 0x9262, 0x585a, 0x1bdf, 0x0, 0x0);
        gbc.writeMem(0x1bdf, { 0x88 });
        gbc.writeMem(0x40d2, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfa8d, gbc.sp());
        EXPECT(0x40d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 02E8
        gbc.setState(0x97c0, 0xfcc7, 0x9600, 0x3411, 0x10ac, 0x8b35, 0x1, 0x1);
        gbc.writeMem(0x8b35, { 0x1d });
        gbc.writeMem(0x97c0, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfcc7, gbc.sp());
        EXPECT(0x97c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8b35));
        EXPECT(0xcb, gbc.readMem(0x97c0));
        EXPECT(0x96, gbc.readMem(0x97c1));
        // CB 96 02EA
        gbc.setState(0xb631, 0x399d, 0x55e0, 0xf6ca, 0x1b52, 0xb3b8, 0x1, 0x1);
        gbc.writeMem(0xb3b8, { 0x2a });
        gbc.writeMem(0xb631, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x399d, gbc.sp());
        EXPECT(0xb633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xb3b8));
        EXPECT(0xcb, gbc.readMem(0xb631));
        EXPECT(0x96, gbc.readMem(0xb632));
        // CB 96 02EC
        gbc.setState(0xa7b7, 0x86d3, 0x4c30, 0xec7e, 0x1e64, 0x4afe, 0x1, 0x0);
        gbc.writeMem(0x4afe, { 0xeb });
        gbc.writeMem(0xa7b7, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x86d3, gbc.sp());
        EXPECT(0xa7b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b7));
        EXPECT(0x96, gbc.readMem(0xa7b8));
        // CB 96 02ED
        gbc.setState(0xc5c, 0xbe59, 0xc770, 0x4d03, 0x570, 0xe312, 0x1, 0x1);
        gbc.writeMem(0xc5c, { 0xcb, 0x96 });
        gbc.writeMem(0xe312, { 0x33 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbe59, gbc.sp());
        EXPECT(0xc5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe312));
        // CB 96 02EE
        gbc.setState(0x9401, 0xadbb, 0x5060, 0xe608, 0x3b7f, 0x89ad, 0x0, 0x0);
        gbc.writeMem(0x89ad, { 0x46 });
        gbc.writeMem(0x9401, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xadbb, gbc.sp());
        EXPECT(0x9403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x89ad));
        EXPECT(0xcb, gbc.readMem(0x9401));
        EXPECT(0x96, gbc.readMem(0x9402));
        // CB 96 02EF
        gbc.setState(0x5ed0, 0x530a, 0xe380, 0xd981, 0x26, 0x99a3, 0x1, 0x0);
        gbc.writeMem(0x5ed0, { 0xcb, 0x96 });
        gbc.writeMem(0x99a3, { 0x54 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x530a, gbc.sp());
        EXPECT(0x5ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x99a3));
        // CB 96 02F1
        gbc.setState(0xdcce, 0xe887, 0xc550, 0x4c6e, 0x1441, 0x5168, 0x0, 0x0);
        gbc.writeMem(0x5168, { 0xf8 });
        gbc.writeMem(0xdcce, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe887, gbc.sp());
        EXPECT(0xdcd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcce));
        EXPECT(0x96, gbc.readMem(0xdccf));
        // CB 96 02F2
        gbc.setState(0xc267, 0x27d3, 0x66a0, 0x5ba6, 0x485e, 0xc7d8, 0x0, 0x0);
        gbc.writeMem(0xc267, { 0xcb, 0x96 });
        gbc.writeMem(0xc7d8, { 0x48 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x27d3, gbc.sp());
        EXPECT(0xc269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc267));
        EXPECT(0x96, gbc.readMem(0xc268));
        EXPECT(0x48, gbc.readMem(0xc7d8));
        // CB 96 02F3
        gbc.setState(0x6c16, 0x9d82, 0x6d60, 0xab30, 0x3936, 0x8dcc, 0x1, 0x0);
        gbc.writeMem(0x6c16, { 0xcb, 0x96 });
        gbc.writeMem(0x8dcc, { 0x4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9d82, gbc.sp());
        EXPECT(0x6c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8dcc));
        // CB 96 02F5
        gbc.setState(0x19e9, 0x72b7, 0xec50, 0x6b6b, 0x1710, 0xe2ad, 0x0, 0x0);
        gbc.writeMem(0x19e9, { 0xcb, 0x96 });
        gbc.writeMem(0xe2ad, { 0xc9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x72b7, gbc.sp());
        EXPECT(0x19eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe2ad));
        // CB 96 02F8
        gbc.setState(0x2206, 0xb5dd, 0x7660, 0x99ad, 0x5bbe, 0x25c, 0x0, 0x1);
        gbc.writeMem(0x25c, { 0xe8 });
        gbc.writeMem(0x2206, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb5dd, gbc.sp());
        EXPECT(0x2208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 02F9
        gbc.setState(0xc71d, 0xc48e, 0xd40, 0x827c, 0xcdbe, 0xf510, 0x1, 0x0);
        gbc.writeMem(0xc71d, { 0xcb, 0x96 });
        gbc.writeMem(0xf510, { 0x4f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc48e, gbc.sp());
        EXPECT(0xc71f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc71d));
        EXPECT(0x96, gbc.readMem(0xc71e));
        EXPECT(0x4b, gbc.readMem(0xf510));
        // CB 96 02FD
        gbc.setState(0x9642, 0xc431, 0x6e10, 0x851a, 0x1e7b, 0x564d, 0x1, 0x1);
        gbc.writeMem(0x564d, { 0x9b });
        gbc.writeMem(0x9642, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc431, gbc.sp());
        EXPECT(0x9644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9642));
        EXPECT(0x96, gbc.readMem(0x9643));
        // CB 96 02FE
        gbc.setState(0xefa4, 0xe5ed, 0x6eb0, 0x5aef, 0x8b8c, 0xddb8, 0x0, 0x0);
        gbc.writeMem(0xddb8, { 0x11 });
        gbc.writeMem(0xefa4, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe5ed, gbc.sp());
        EXPECT(0xefa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xddb8));
        EXPECT(0xcb, gbc.readMem(0xefa4));
        EXPECT(0x96, gbc.readMem(0xefa5));
        // CB 96 02FF
        gbc.setState(0xef02, 0x7a8b, 0xcc30, 0x886b, 0xcec2, 0xae0f, 0x0, 0x1);
        gbc.writeMem(0xae0f, { 0x71 });
        gbc.writeMem(0xef02, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7a8b, gbc.sp());
        EXPECT(0xef04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xae0f));
        EXPECT(0xcb, gbc.readMem(0xef02));
        EXPECT(0x96, gbc.readMem(0xef03));
        // CB 96 0300
        gbc.setState(0xa6e9, 0x795a, 0xf790, 0xa54a, 0xfc88, 0xa53c, 0x0, 0x1);
        gbc.writeMem(0xa53c, { 0x29 });
        gbc.writeMem(0xa6e9, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x795a, gbc.sp());
        EXPECT(0xa6eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa53c));
        EXPECT(0xcb, gbc.readMem(0xa6e9));
        EXPECT(0x96, gbc.readMem(0xa6ea));
        // CB 96 0302
        gbc.setState(0x9fd7, 0x5d39, 0xef00, 0xb79f, 0xda34, 0x9bc3, 0x1, 0x0);
        gbc.writeMem(0x9bc3, { 0x9 });
        gbc.writeMem(0x9fd7, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5d39, gbc.sp());
        EXPECT(0x9fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9bc3));
        EXPECT(0xcb, gbc.readMem(0x9fd7));
        EXPECT(0x96, gbc.readMem(0x9fd8));
        // CB 96 0303
        gbc.setState(0x8153, 0xaa45, 0xdd30, 0xfe4d, 0xc5d, 0xfbef, 0x0, 0x1);
        gbc.writeMem(0x8153, { 0xcb, 0x96 });
        gbc.writeMem(0xfbef, { 0x58 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xaa45, gbc.sp());
        EXPECT(0x8155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8153));
        EXPECT(0x96, gbc.readMem(0x8154));
        EXPECT(0x58, gbc.readMem(0xfbef));
        // CB 96 0304
        gbc.setState(0x9fa, 0x5d3a, 0xae30, 0x385a, 0xab7e, 0x4d6c, 0x1, 0x0);
        gbc.writeMem(0x9fa, { 0xcb, 0x96 });
        gbc.writeMem(0x4d6c, { 0x61 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5d3a, gbc.sp());
        EXPECT(0x9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0305
        gbc.setState(0x16d4, 0x3c34, 0x74c0, 0x7585, 0xd876, 0xf5f2, 0x0, 0x0);
        gbc.writeMem(0x16d4, { 0xcb, 0x96 });
        gbc.writeMem(0xf5f2, { 0x78 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3c34, gbc.sp());
        EXPECT(0x16d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xf5f2));
        // CB 96 0306
        gbc.setState(0x6765, 0x971f, 0x5d80, 0xf88b, 0xc9c6, 0x8b62, 0x1, 0x0);
        gbc.writeMem(0x6765, { 0xcb, 0x96 });
        gbc.writeMem(0x8b62, { 0x7f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x971f, gbc.sp());
        EXPECT(0x6767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8b62));
        // CB 96 0307
        gbc.setState(0xbf9e, 0x4351, 0x21e0, 0x4b89, 0x7956, 0xeff5, 0x1, 0x1);
        gbc.writeMem(0xbf9e, { 0xcb, 0x96 });
        gbc.writeMem(0xeff5, { 0xae });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4351, gbc.sp());
        EXPECT(0xbfa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf9e));
        EXPECT(0x96, gbc.readMem(0xbf9f));
        EXPECT(0xaa, gbc.readMem(0xeff5));
        // CB 96 0308
        gbc.setState(0x92bd, 0xbe38, 0x9c70, 0xfc03, 0xa1c0, 0xdb77, 0x1, 0x0);
        gbc.writeMem(0x92bd, { 0xcb, 0x96 });
        gbc.writeMem(0xdb77, { 0x16 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbe38, gbc.sp());
        EXPECT(0x92bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bd));
        EXPECT(0x96, gbc.readMem(0x92be));
        EXPECT(0x12, gbc.readMem(0xdb77));
        // CB 96 0309
        gbc.setState(0xa1e1, 0x39ff, 0x28e0, 0xc859, 0x8414, 0xa986, 0x1, 0x0);
        gbc.writeMem(0xa1e1, { 0xcb, 0x96 });
        gbc.writeMem(0xa986, { 0xf0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x39ff, gbc.sp());
        EXPECT(0xa1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e1));
        EXPECT(0x96, gbc.readMem(0xa1e2));
        EXPECT(0xf0, gbc.readMem(0xa986));
        // CB 96 030B
        gbc.setState(0xb1ec, 0xe015, 0x7e20, 0xd772, 0x6397, 0x1cfd, 0x0, 0x0);
        gbc.writeMem(0x1cfd, { 0x33 });
        gbc.writeMem(0xb1ec, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe015, gbc.sp());
        EXPECT(0xb1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ec));
        EXPECT(0x96, gbc.readMem(0xb1ed));
        // CB 96 030C
        gbc.setState(0x84f1, 0xf020, 0x1460, 0x88a4, 0x8cf1, 0x5231, 0x1, 0x1);
        gbc.writeMem(0x5231, { 0x8b });
        gbc.writeMem(0x84f1, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf020, gbc.sp());
        EXPECT(0x84f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f1));
        EXPECT(0x96, gbc.readMem(0x84f2));
        // CB 96 030D
        gbc.setState(0xb532, 0xd220, 0x3db0, 0x8a25, 0x4fa7, 0xd2c5, 0x0, 0x0);
        gbc.writeMem(0xb532, { 0xcb, 0x96 });
        gbc.writeMem(0xd2c5, { 0xa6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd220, gbc.sp());
        EXPECT(0xb534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb532));
        EXPECT(0x96, gbc.readMem(0xb533));
        EXPECT(0xa2, gbc.readMem(0xd2c5));
        // CB 96 030E
        gbc.setState(0x51c7, 0x8506, 0x9570, 0xa1a9, 0x4243, 0x8353, 0x0, 0x0);
        gbc.writeMem(0x51c7, { 0xcb, 0x96 });
        gbc.writeMem(0x8353, { 0xc5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8506, gbc.sp());
        EXPECT(0x51c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8353));
        // CB 96 030F
        gbc.setState(0x147f, 0x9243, 0x3000, 0x7a58, 0x8ec5, 0x6270, 0x0, 0x0);
        gbc.writeMem(0x147f, { 0xcb, 0x96 });
        gbc.writeMem(0x6270, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9243, gbc.sp());
        EXPECT(0x1481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0311
        gbc.setState(0xe8e2, 0x517a, 0x6780, 0x58f5, 0x5148, 0xcfdc, 0x1, 0x0);
        gbc.writeMem(0xcfdc, { 0xc3 });
        gbc.writeMem(0xe8e2, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x517a, gbc.sp());
        EXPECT(0xe8e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcfdc));
        EXPECT(0xcb, gbc.readMem(0xe8e2));
        EXPECT(0x96, gbc.readMem(0xe8e3));
        // CB 96 0312
        gbc.setState(0x22a8, 0x8977, 0xbe70, 0xdf76, 0x70a1, 0x87df, 0x1, 0x0);
        gbc.writeMem(0x22a8, { 0xcb, 0x96 });
        gbc.writeMem(0x87df, { 0x9c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8977, gbc.sp());
        EXPECT(0x22aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x87df));
        // CB 96 0314
        gbc.setState(0xb59c, 0x8b92, 0x9170, 0xcc79, 0x4bb1, 0x682c, 0x1, 0x1);
        gbc.writeMem(0x682c, { 0x5a });
        gbc.writeMem(0xb59c, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8b92, gbc.sp());
        EXPECT(0xb59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb59c));
        EXPECT(0x96, gbc.readMem(0xb59d));
        // CB 96 0317
        gbc.setState(0x2e98, 0x41f6, 0x5810, 0xfcf5, 0x40df, 0xe525, 0x1, 0x1);
        gbc.writeMem(0x2e98, { 0xcb, 0x96 });
        gbc.writeMem(0xe525, { 0xbd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x41f6, gbc.sp());
        EXPECT(0x2e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe525));
        // CB 96 0319
        gbc.setState(0x4306, 0x477e, 0x3c00, 0xcd8d, 0x4a5f, 0xb696, 0x0, 0x0);
        gbc.writeMem(0x4306, { 0xcb, 0x96 });
        gbc.writeMem(0xb696, { 0x14 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x477e, gbc.sp());
        EXPECT(0x4308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb696));
        // CB 96 031A
        gbc.setState(0x4022, 0xf8c2, 0x56b0, 0x791, 0x61c6, 0xbf47, 0x1, 0x0);
        gbc.writeMem(0x4022, { 0xcb, 0x96 });
        gbc.writeMem(0xbf47, { 0xe0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf8c2, gbc.sp());
        EXPECT(0x4024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbf47));
        // CB 96 031C
        gbc.setState(0x3925, 0xcbfa, 0x3c70, 0xfba1, 0x5f27, 0xcc73, 0x0, 0x1);
        gbc.writeMem(0x3925, { 0xcb, 0x96 });
        gbc.writeMem(0xcc73, { 0xf4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcbfa, gbc.sp());
        EXPECT(0x3927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcc73));
        // CB 96 031E
        gbc.setState(0xe220, 0x5ad8, 0xfa30, 0x9d5e, 0xd61, 0x2c57, 0x0, 0x1);
        gbc.writeMem(0x2c57, { 0xb3 });
        gbc.writeMem(0xe220, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5ad8, gbc.sp());
        EXPECT(0xe222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe220));
        EXPECT(0x96, gbc.readMem(0xe221));
        // CB 96 0320
        gbc.setState(0x61e7, 0x5167, 0x530, 0xf480, 0x4bba, 0xd371, 0x0, 0x1);
        gbc.writeMem(0x61e7, { 0xcb, 0x96 });
        gbc.writeMem(0xd371, { 0xc8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5167, gbc.sp());
        EXPECT(0x61e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd371));
        // CB 96 0322
        gbc.setState(0x2c19, 0x3d65, 0x2bb0, 0xf67e, 0xa483, 0xfdb3, 0x0, 0x0);
        gbc.writeMem(0x2c19, { 0xcb, 0x96 });
        gbc.writeMem(0xfdb3, { 0x73 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3d65, gbc.sp());
        EXPECT(0x2c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xfdb3));
        // CB 96 0324
        gbc.setState(0x2003, 0xfac1, 0x6160, 0xec66, 0xb67b, 0xdaa0, 0x1, 0x0);
        gbc.writeMem(0x2003, { 0xcb, 0x96 });
        gbc.writeMem(0xdaa0, { 0xf4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfac1, gbc.sp());
        EXPECT(0x2005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdaa0));
        // CB 96 0325
        gbc.setState(0x2a8a, 0x6c9e, 0xc500, 0x5c40, 0xd4a0, 0xb420, 0x0, 0x0);
        gbc.writeMem(0x2a8a, { 0xcb, 0x96 });
        gbc.writeMem(0xb420, { 0x9f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6c9e, gbc.sp());
        EXPECT(0x2a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb420));
        // CB 96 0326
        gbc.setState(0x3527, 0xa567, 0x86a0, 0x3035, 0x8274, 0x93df, 0x0, 0x0);
        gbc.writeMem(0x3527, { 0xcb, 0x96 });
        gbc.writeMem(0x93df, { 0xd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa567, gbc.sp());
        EXPECT(0x3529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x93df));
        // CB 96 0327
        gbc.setState(0x2f25, 0xa5d0, 0x5310, 0xb406, 0x7f14, 0x8f95, 0x0, 0x0);
        gbc.writeMem(0x2f25, { 0xcb, 0x96 });
        gbc.writeMem(0x8f95, { 0x22 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa5d0, gbc.sp());
        EXPECT(0x2f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8f95));
        // CB 96 032A
        gbc.setState(0x7501, 0xd8d3, 0x98d0, 0x577d, 0x3043, 0xe13b, 0x0, 0x1);
        gbc.writeMem(0x7501, { 0xcb, 0x96 });
        gbc.writeMem(0xe13b, { 0xc8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd8d3, gbc.sp());
        EXPECT(0x7503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe13b));
        // CB 96 032B
        gbc.setState(0xd753, 0x1e66, 0xd110, 0x7da2, 0x908a, 0x9dd6, 0x0, 0x1);
        gbc.writeMem(0x9dd6, { 0xf5 });
        gbc.writeMem(0xd753, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1e66, gbc.sp());
        EXPECT(0xd755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9dd6));
        EXPECT(0xcb, gbc.readMem(0xd753));
        EXPECT(0x96, gbc.readMem(0xd754));
        // CB 96 032D
        gbc.setState(0xec82, 0x506, 0x7dc0, 0xdd5d, 0xa807, 0xbe81, 0x0, 0x0);
        gbc.writeMem(0xbe81, { 0x3 });
        gbc.writeMem(0xec82, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x506, gbc.sp());
        EXPECT(0xec84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbe81));
        EXPECT(0xcb, gbc.readMem(0xec82));
        EXPECT(0x96, gbc.readMem(0xec83));
        // CB 96 032E
        gbc.setState(0xdc66, 0x86b5, 0xe9c0, 0xf743, 0xfd80, 0x6687, 0x0, 0x0);
        gbc.writeMem(0x6687, { 0x93 });
        gbc.writeMem(0xdc66, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x86b5, gbc.sp());
        EXPECT(0xdc68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc66));
        EXPECT(0x96, gbc.readMem(0xdc67));
        // CB 96 032F
        gbc.setState(0x29a1, 0x8f43, 0xac00, 0x644c, 0xf46c, 0xab14, 0x1, 0x1);
        gbc.writeMem(0x29a1, { 0xcb, 0x96 });
        gbc.writeMem(0xab14, { 0xf3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8f43, gbc.sp());
        EXPECT(0x29a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xab14));
        // CB 96 0333
        gbc.setState(0x8310, 0xe4b, 0x25e0, 0x911c, 0x2bac, 0xc472, 0x1, 0x0);
        gbc.writeMem(0x8310, { 0xcb, 0x96 });
        gbc.writeMem(0xc472, { 0x36 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe4b, gbc.sp());
        EXPECT(0x8312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8310));
        EXPECT(0x96, gbc.readMem(0x8311));
        EXPECT(0x32, gbc.readMem(0xc472));
        // CB 96 0334
        gbc.setState(0x4c51, 0xcc7f, 0x1510, 0x5ca1, 0x43c2, 0x5687, 0x0, 0x0);
        gbc.writeMem(0x4c51, { 0xcb, 0x96 });
        gbc.writeMem(0x5687, { 0x93 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcc7f, gbc.sp());
        EXPECT(0x4c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0335
        gbc.setState(0xac1c, 0xaa20, 0xd250, 0x6d3a, 0xe6, 0x9e87, 0x1, 0x0);
        gbc.writeMem(0x9e87, { 0xfc });
        gbc.writeMem(0xac1c, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xaa20, gbc.sp());
        EXPECT(0xac1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9e87));
        EXPECT(0xcb, gbc.readMem(0xac1c));
        EXPECT(0x96, gbc.readMem(0xac1d));
        // CB 96 0338
        gbc.setState(0x7eb7, 0x6840, 0x990, 0x66d7, 0x5bc5, 0x1933, 0x0, 0x1);
        gbc.writeMem(0x1933, { 0xfa });
        gbc.writeMem(0x7eb7, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6840, gbc.sp());
        EXPECT(0x7eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0339
        gbc.setState(0xa67e, 0xa36a, 0x4ac0, 0xf69a, 0x6e62, 0xf573, 0x1, 0x0);
        gbc.writeMem(0xa67e, { 0xcb, 0x96 });
        gbc.writeMem(0xf573, { 0x1d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa36a, gbc.sp());
        EXPECT(0xa680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67e));
        EXPECT(0x96, gbc.readMem(0xa67f));
        EXPECT(0x19, gbc.readMem(0xf573));
        // CB 96 033A
        gbc.setState(0xa944, 0xfda6, 0x3f70, 0x2bca, 0x5bbf, 0xa186, 0x0, 0x0);
        gbc.writeMem(0xa186, { 0x6e });
        gbc.writeMem(0xa944, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfda6, gbc.sp());
        EXPECT(0xa946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa186));
        EXPECT(0xcb, gbc.readMem(0xa944));
        EXPECT(0x96, gbc.readMem(0xa945));
        // CB 96 033B
        gbc.setState(0xc6a0, 0xf050, 0x3790, 0xc3ed, 0x9cc8, 0xb112, 0x0, 0x0);
        gbc.writeMem(0xb112, { 0xad });
        gbc.writeMem(0xc6a0, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf050, gbc.sp());
        EXPECT(0xc6a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xb112));
        EXPECT(0xcb, gbc.readMem(0xc6a0));
        EXPECT(0x96, gbc.readMem(0xc6a1));
        // CB 96 033D
        gbc.setState(0xc4a6, 0x3bf0, 0x920, 0x526b, 0x1b71, 0xfdd4, 0x1, 0x0);
        gbc.writeMem(0xc4a6, { 0xcb, 0x96 });
        gbc.writeMem(0xfdd4, { 0x17 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3bf0, gbc.sp());
        EXPECT(0xc4a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a6));
        EXPECT(0x96, gbc.readMem(0xc4a7));
        EXPECT(0x13, gbc.readMem(0xfdd4));
        // CB 96 033E
        gbc.setState(0x888f, 0xcc00, 0x6720, 0x9e75, 0x26d2, 0x2e77, 0x1, 0x0);
        gbc.writeMem(0x2e77, { 0x43 });
        gbc.writeMem(0x888f, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcc00, gbc.sp());
        EXPECT(0x8891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888f));
        EXPECT(0x96, gbc.readMem(0x8890));
        // CB 96 033F
        gbc.setState(0x8446, 0xfedf, 0x6060, 0xc85f, 0xe83, 0xcf8b, 0x0, 0x1);
        gbc.writeMem(0x8446, { 0xcb, 0x96 });
        gbc.writeMem(0xcf8b, { 0x69 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfedf, gbc.sp());
        EXPECT(0x8448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8446));
        EXPECT(0x96, gbc.readMem(0x8447));
        EXPECT(0x69, gbc.readMem(0xcf8b));
        // CB 96 0341
        gbc.setState(0x5e61, 0x754, 0x78e0, 0xa4a, 0x9366, 0x4b7, 0x0, 0x0);
        gbc.writeMem(0x4b7, { 0x6a });
        gbc.writeMem(0x5e61, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x754, gbc.sp());
        EXPECT(0x5e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0342
        gbc.setState(0xbfc8, 0x35f8, 0x8880, 0x8989, 0xd576, 0x2825, 0x0, 0x1);
        gbc.writeMem(0x2825, { 0x20 });
        gbc.writeMem(0xbfc8, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x35f8, gbc.sp());
        EXPECT(0xbfca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc8));
        EXPECT(0x96, gbc.readMem(0xbfc9));
        // CB 96 0344
        gbc.setState(0xa519, 0x2a7c, 0x3750, 0xbca9, 0xbda9, 0x459c, 0x0, 0x1);
        gbc.writeMem(0x459c, { 0x90 });
        gbc.writeMem(0xa519, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2a7c, gbc.sp());
        EXPECT(0xa51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa519));
        EXPECT(0x96, gbc.readMem(0xa51a));
        // CB 96 0346
        gbc.setState(0x491, 0xab9d, 0x2970, 0x8cf0, 0xfcea, 0xe64b, 0x0, 0x0);
        gbc.writeMem(0x491, { 0xcb, 0x96 });
        gbc.writeMem(0xe64b, { 0x6d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xab9d, gbc.sp());
        EXPECT(0x493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe64b));
        // CB 96 0347
        gbc.setState(0x4ee7, 0x61b2, 0xf210, 0xb0ef, 0xa7c6, 0xe964, 0x1, 0x1);
        gbc.writeMem(0x4ee7, { 0xcb, 0x96 });
        gbc.writeMem(0xe964, { 0x51 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x61b2, gbc.sp());
        EXPECT(0x4ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe964));
        // CB 96 034A
        gbc.setState(0x6fbf, 0x8b3a, 0x1a80, 0x963e, 0xf6cb, 0xceb6, 0x0, 0x0);
        gbc.writeMem(0x6fbf, { 0xcb, 0x96 });
        gbc.writeMem(0xceb6, { 0x26 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8b3a, gbc.sp());
        EXPECT(0x6fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xceb6));
        // CB 96 034B
        gbc.setState(0x4a93, 0xeb9a, 0x5550, 0xb1c9, 0x3742, 0x2851, 0x1, 0x0);
        gbc.writeMem(0x2851, { 0x6b });
        gbc.writeMem(0x4a93, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xeb9a, gbc.sp());
        EXPECT(0x4a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 034C
        gbc.setState(0x46ee, 0xfb6b, 0x600, 0xafde, 0xb238, 0xb960, 0x0, 0x1);
        gbc.writeMem(0x46ee, { 0xcb, 0x96 });
        gbc.writeMem(0xb960, { 0x76 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfb6b, gbc.sp());
        EXPECT(0x46f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xb960));
        // CB 96 034E
        gbc.setState(0x40d9, 0x7cef, 0xa2a0, 0x6bd9, 0x593d, 0x9813, 0x1, 0x0);
        gbc.writeMem(0x40d9, { 0xcb, 0x96 });
        gbc.writeMem(0x9813, { 0xfd });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7cef, gbc.sp());
        EXPECT(0x40db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x9813));
        // CB 96 034F
        gbc.setState(0xbf69, 0xc78e, 0x4790, 0x56c3, 0x8f45, 0xa170, 0x1, 0x0);
        gbc.writeMem(0xa170, { 0x6b });
        gbc.writeMem(0xbf69, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc78e, gbc.sp());
        EXPECT(0xbf6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xa170));
        EXPECT(0xcb, gbc.readMem(0xbf69));
        EXPECT(0x96, gbc.readMem(0xbf6a));
        // CB 96 0351
        gbc.setState(0xa677, 0x326, 0xe0c0, 0xb406, 0x9b56, 0xa1b6, 0x0, 0x1);
        gbc.writeMem(0xa1b6, { 0xc0 });
        gbc.writeMem(0xa677, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x326, gbc.sp());
        EXPECT(0xa679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa1b6));
        EXPECT(0xcb, gbc.readMem(0xa677));
        EXPECT(0x96, gbc.readMem(0xa678));
        // CB 96 0352
        gbc.setState(0xd43b, 0x1d15, 0x1ce0, 0x9d58, 0xf6bb, 0xa5a, 0x0, 0x0);
        gbc.writeMem(0xa5a, { 0x28 });
        gbc.writeMem(0xd43b, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1d15, gbc.sp());
        EXPECT(0xd43d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43b));
        EXPECT(0x96, gbc.readMem(0xd43c));
        // CB 96 0353
        gbc.setState(0x9f37, 0xe72, 0x2d00, 0x2571, 0x8130, 0x4dee, 0x0, 0x0);
        gbc.writeMem(0x4dee, { 0xda });
        gbc.writeMem(0x9f37, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe72, gbc.sp());
        EXPECT(0x9f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f37));
        EXPECT(0x96, gbc.readMem(0x9f38));
        // CB 96 0355
        gbc.setState(0x4e92, 0xf38b, 0x6fc0, 0x7241, 0x46be, 0xf1cf, 0x1, 0x0);
        gbc.writeMem(0x4e92, { 0xcb, 0x96 });
        gbc.writeMem(0xf1cf, { 0xa });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf38b, gbc.sp());
        EXPECT(0x4e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xf1cf));
        // CB 96 0356
        gbc.setState(0xe370, 0x2e20, 0xae80, 0xbf0a, 0xadee, 0xdf7f, 0x0, 0x0);
        gbc.writeMem(0xdf7f, { 0x2f });
        gbc.writeMem(0xe370, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2e20, gbc.sp());
        EXPECT(0xe372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdf7f));
        EXPECT(0xcb, gbc.readMem(0xe370));
        EXPECT(0x96, gbc.readMem(0xe371));
        // CB 96 0358
        gbc.setState(0x9907, 0xa85d, 0x87a0, 0xa532, 0x6b04, 0x8501, 0x0, 0x1);
        gbc.writeMem(0x8501, { 0xe6 });
        gbc.writeMem(0x9907, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa85d, gbc.sp());
        EXPECT(0x9909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8501));
        EXPECT(0xcb, gbc.readMem(0x9907));
        EXPECT(0x96, gbc.readMem(0x9908));
        // CB 96 035A
        gbc.setState(0xcb85, 0x4222, 0x4ad0, 0xe4f2, 0xa065, 0xc359, 0x1, 0x0);
        gbc.writeMem(0xc359, { 0xcd });
        gbc.writeMem(0xcb85, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4222, gbc.sp());
        EXPECT(0xcb87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc359));
        EXPECT(0xcb, gbc.readMem(0xcb85));
        EXPECT(0x96, gbc.readMem(0xcb86));
        // CB 96 035B
        gbc.setState(0x8544, 0xc599, 0xba70, 0xe23d, 0x925d, 0xf064, 0x0, 0x0);
        gbc.writeMem(0x8544, { 0xcb, 0x96 });
        gbc.writeMem(0xf064, { 0xd7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc599, gbc.sp());
        EXPECT(0x8546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8544));
        EXPECT(0x96, gbc.readMem(0x8545));
        EXPECT(0xd3, gbc.readMem(0xf064));
        // CB 96 035D
        gbc.setState(0x4de0, 0xe532, 0xede0, 0x5048, 0x4e1b, 0x871b, 0x1, 0x0);
        gbc.writeMem(0x4de0, { 0xcb, 0x96 });
        gbc.writeMem(0x871b, { 0x67 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe532, gbc.sp());
        EXPECT(0x4de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x871b));
        // CB 96 035E
        gbc.setState(0x71b6, 0x7638, 0x6c90, 0x624f, 0x772f, 0xdebb, 0x0, 0x1);
        gbc.writeMem(0x71b6, { 0xcb, 0x96 });
        gbc.writeMem(0xdebb, { 0xf5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7638, gbc.sp());
        EXPECT(0x71b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdebb));
        // CB 96 035F
        gbc.setState(0x9ce6, 0xf2eb, 0xa5f0, 0x7d3a, 0x28a7, 0xcf02, 0x1, 0x0);
        gbc.writeMem(0x9ce6, { 0xcb, 0x96 });
        gbc.writeMem(0xcf02, { 0xd3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf2eb, gbc.sp());
        EXPECT(0x9ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce6));
        EXPECT(0x96, gbc.readMem(0x9ce7));
        EXPECT(0xd3, gbc.readMem(0xcf02));
        // CB 96 0360
        gbc.setState(0x2101, 0xfd24, 0xc4d0, 0xe707, 0x9ec3, 0xec3c, 0x1, 0x1);
        gbc.writeMem(0x2101, { 0xcb, 0x96 });
        gbc.writeMem(0xec3c, { 0xbc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfd24, gbc.sp());
        EXPECT(0x2103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xec3c));
        // CB 96 0361
        gbc.setState(0xb9dc, 0x36f6, 0x6540, 0xe0c3, 0x57cd, 0xeb51, 0x0, 0x1);
        gbc.writeMem(0xb9dc, { 0xcb, 0x96 });
        gbc.writeMem(0xeb51, { 0x1a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x36f6, gbc.sp());
        EXPECT(0xb9de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9dc));
        EXPECT(0x96, gbc.readMem(0xb9dd));
        EXPECT(0x1a, gbc.readMem(0xeb51));
        // CB 96 0364
        gbc.setState(0x4e84, 0xd390, 0xc290, 0x784c, 0xad1f, 0x19d, 0x0, 0x0);
        gbc.writeMem(0x19d, { 0xe0 });
        gbc.writeMem(0x4e84, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd390, gbc.sp());
        EXPECT(0x4e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0367
        gbc.setState(0xb7a8, 0x8fc3, 0xcce0, 0x2f57, 0x155a, 0xcef5, 0x1, 0x1);
        gbc.writeMem(0xb7a8, { 0xcb, 0x96 });
        gbc.writeMem(0xcef5, { 0xb7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8fc3, gbc.sp());
        EXPECT(0xb7aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a8));
        EXPECT(0x96, gbc.readMem(0xb7a9));
        EXPECT(0xb3, gbc.readMem(0xcef5));
        // CB 96 0368
        gbc.setState(0x7c92, 0xfbef, 0xc060, 0x4e28, 0xc3dd, 0xd917, 0x1, 0x1);
        gbc.writeMem(0x7c92, { 0xcb, 0x96 });
        gbc.writeMem(0xd917, { 0x2f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfbef, gbc.sp());
        EXPECT(0x7c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd917));
        // CB 96 036A
        gbc.setState(0x98da, 0x486, 0xaf80, 0x386, 0xdf17, 0xf777, 0x1, 0x0);
        gbc.writeMem(0x98da, { 0xcb, 0x96 });
        gbc.writeMem(0xf777, { 0x69 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x486, gbc.sp());
        EXPECT(0x98dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98da));
        EXPECT(0x96, gbc.readMem(0x98db));
        EXPECT(0x69, gbc.readMem(0xf777));
        // CB 96 036C
        gbc.setState(0x6611, 0x9461, 0xbb70, 0x705b, 0xdd45, 0x8bc9, 0x0, 0x1);
        gbc.writeMem(0x6611, { 0xcb, 0x96 });
        gbc.writeMem(0x8bc9, { 0xc6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9461, gbc.sp());
        EXPECT(0x6613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8bc9));
        // CB 96 036D
        gbc.setState(0x50e6, 0x309c, 0xb490, 0x8fb1, 0x3b77, 0xf7f2, 0x0, 0x0);
        gbc.writeMem(0x50e6, { 0xcb, 0x96 });
        gbc.writeMem(0xf7f2, { 0x6f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x309c, gbc.sp());
        EXPECT(0x50e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xf7f2));
        // CB 96 036E
        gbc.setState(0xeec4, 0x463b, 0xfbc0, 0xd85b, 0x416d, 0xef93, 0x1, 0x1);
        gbc.writeMem(0xeec4, { 0xcb, 0x96 });
        gbc.writeMem(0xef93, { 0x31 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x463b, gbc.sp());
        EXPECT(0xeec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec4));
        EXPECT(0x96, gbc.readMem(0xeec5));
        EXPECT(0x31, gbc.readMem(0xef93));
        // CB 96 036F
        gbc.setState(0x701c, 0xf590, 0x9e50, 0x7e86, 0x1754, 0x4f41, 0x1, 0x0);
        gbc.writeMem(0x4f41, { 0x79 });
        gbc.writeMem(0x701c, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf590, gbc.sp());
        EXPECT(0x701e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0370
        gbc.setState(0x5675, 0x993e, 0x2510, 0x16ce, 0x9baf, 0x98d7, 0x1, 0x1);
        gbc.writeMem(0x5675, { 0xcb, 0x96 });
        gbc.writeMem(0x98d7, { 0x1a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x993e, gbc.sp());
        EXPECT(0x5677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x98d7));
        // CB 96 0371
        gbc.setState(0xa1a3, 0x1cc4, 0xdd40, 0x82ee, 0x4dc4, 0xb3cc, 0x0, 0x0);
        gbc.writeMem(0xa1a3, { 0xcb, 0x96 });
        gbc.writeMem(0xb3cc, { 0x81 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1cc4, gbc.sp());
        EXPECT(0xa1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a3));
        EXPECT(0x96, gbc.readMem(0xa1a4));
        EXPECT(0x81, gbc.readMem(0xb3cc));
        // CB 96 0372
        gbc.setState(0x33ff, 0xafab, 0x9ff0, 0x6557, 0xcd84, 0xa97a, 0x1, 0x1);
        gbc.writeMem(0x33ff, { 0xcb, 0x96 });
        gbc.writeMem(0xa97a, { 0x21 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xafab, gbc.sp());
        EXPECT(0x3401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa97a));
        // CB 96 0374
        gbc.setState(0x17bb, 0xee4e, 0xb660, 0x4e33, 0x9992, 0x609a, 0x0, 0x0);
        gbc.writeMem(0x17bb, { 0xcb, 0x96 });
        gbc.writeMem(0x609a, { 0x23 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xee4e, gbc.sp());
        EXPECT(0x17bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0375
        gbc.setState(0x5091, 0xbbf2, 0xad60, 0x7dbb, 0xe1fc, 0x383, 0x1, 0x0);
        gbc.writeMem(0x383, { 0xd0 });
        gbc.writeMem(0x5091, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbbf2, gbc.sp());
        EXPECT(0x5093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0376
        gbc.setState(0x475, 0x5717, 0x33e0, 0x1ac4, 0xb590, 0x1f50, 0x1, 0x0);
        gbc.writeMem(0x475, { 0xcb, 0x96 });
        gbc.writeMem(0x1f50, { 0x61 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5717, gbc.sp());
        EXPECT(0x477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0378
        gbc.setState(0xb63c, 0x6619, 0xb940, 0x3aec, 0xa148, 0x709d, 0x1, 0x0);
        gbc.writeMem(0x709d, { 0x53 });
        gbc.writeMem(0xb63c, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6619, gbc.sp());
        EXPECT(0xb63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb63c));
        EXPECT(0x96, gbc.readMem(0xb63d));
        // CB 96 0379
        gbc.setState(0x852c, 0x1cf9, 0xdd20, 0x2d56, 0x5469, 0x61c1, 0x0, 0x1);
        gbc.writeMem(0x61c1, { 0x3a });
        gbc.writeMem(0x852c, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1cf9, gbc.sp());
        EXPECT(0x852e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852c));
        EXPECT(0x96, gbc.readMem(0x852d));
        // CB 96 037C
        gbc.setState(0xbceb, 0x9cc4, 0xded0, 0x4689, 0xeef5, 0xbc8f, 0x1, 0x0);
        gbc.writeMem(0xbc8f, { 0x62 });
        gbc.writeMem(0xbceb, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9cc4, gbc.sp());
        EXPECT(0xbced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xbc8f));
        EXPECT(0xcb, gbc.readMem(0xbceb));
        EXPECT(0x96, gbc.readMem(0xbcec));
        // CB 96 0380
        gbc.setState(0x61df, 0x4827, 0xb7b0, 0x57bc, 0xfaa6, 0xd246, 0x0, 0x0);
        gbc.writeMem(0x61df, { 0xcb, 0x96 });
        gbc.writeMem(0xd246, { 0x73 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4827, gbc.sp());
        EXPECT(0x61e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd246));
        // CB 96 0381
        gbc.setState(0x289d, 0x8802, 0xab30, 0xd81a, 0x4076, 0x2bc1, 0x1, 0x0);
        gbc.writeMem(0x289d, { 0xcb, 0x96 });
        gbc.writeMem(0x2bc1, { 0xf9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8802, gbc.sp());
        EXPECT(0x289f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0382
        gbc.setState(0xe064, 0xd96e, 0xd9a0, 0x33f2, 0x5386, 0xe099, 0x1, 0x1);
        gbc.writeMem(0xe064, { 0xcb, 0x96 });
        gbc.writeMem(0xe099, { 0x80 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd96e, gbc.sp());
        EXPECT(0xe066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe064));
        EXPECT(0x96, gbc.readMem(0xe065));
        EXPECT(0x80, gbc.readMem(0xe099));
        // CB 96 0384
        gbc.setState(0xb02, 0x9ff, 0x5b20, 0x518e, 0xd76a, 0x56f0, 0x0, 0x0);
        gbc.writeMem(0xb02, { 0xcb, 0x96 });
        gbc.writeMem(0x56f0, { 0x71 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9ff, gbc.sp());
        EXPECT(0xb04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0385
        gbc.setState(0xeff6, 0x350b, 0x85d0, 0x74a2, 0x481f, 0x4746, 0x1, 0x1);
        gbc.writeMem(0x4746, { 0x50 });
        gbc.writeMem(0xeff6, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x350b, gbc.sp());
        EXPECT(0xeff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff6));
        EXPECT(0x96, gbc.readMem(0xeff7));
        // CB 96 0386
        gbc.setState(0x3541, 0x519c, 0xa100, 0xfa29, 0xf8d1, 0x9e48, 0x1, 0x1);
        gbc.writeMem(0x3541, { 0xcb, 0x96 });
        gbc.writeMem(0x9e48, { 0x96 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x519c, gbc.sp());
        EXPECT(0x3543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9e48));
        // CB 96 0388
        gbc.setState(0x2f1c, 0x63f6, 0xcd30, 0xa90c, 0x6594, 0x2b39, 0x0, 0x0);
        gbc.writeMem(0x2b39, { 0xe2 });
        gbc.writeMem(0x2f1c, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x63f6, gbc.sp());
        EXPECT(0x2f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 0389
        gbc.setState(0xac33, 0x14a6, 0x26a0, 0x561b, 0x7ab7, 0xbe05, 0x1, 0x1);
        gbc.writeMem(0xac33, { 0xcb, 0x96 });
        gbc.writeMem(0xbe05, { 0x37 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x14a6, gbc.sp());
        EXPECT(0xac35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac33));
        EXPECT(0x96, gbc.readMem(0xac34));
        EXPECT(0x33, gbc.readMem(0xbe05));
        // CB 96 038C
        gbc.setState(0x7f36, 0xb7d8, 0xb8d0, 0x2c7a, 0xe255, 0x7457, 0x0, 0x0);
        gbc.writeMem(0x7457, { 0x31 });
        gbc.writeMem(0x7f36, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb7d8, gbc.sp());
        EXPECT(0x7f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 038D
        gbc.setState(0x3eaf, 0xcb9f, 0x9440, 0xae77, 0x75f5, 0x74b1, 0x1, 0x1);
        gbc.writeMem(0x3eaf, { 0xcb, 0x96 });
        gbc.writeMem(0x74b1, { 0x3a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcb9f, gbc.sp());
        EXPECT(0x3eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 038E
        gbc.setState(0xabe3, 0xb2c6, 0xf720, 0x80ab, 0xd343, 0x9d33, 0x0, 0x0);
        gbc.writeMem(0x9d33, { 0x4b });
        gbc.writeMem(0xabe3, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb2c6, gbc.sp());
        EXPECT(0xabe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9d33));
        EXPECT(0xcb, gbc.readMem(0xabe3));
        EXPECT(0x96, gbc.readMem(0xabe4));
        // CB 96 0391
        gbc.setState(0x7cff, 0x6b7a, 0x5be0, 0xb87b, 0x3be3, 0x1dfa, 0x1, 0x0);
        gbc.writeMem(0x1dfa, { 0xca });
        gbc.writeMem(0x7cff, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6b7a, gbc.sp());
        EXPECT(0x7d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0393
        gbc.setState(0x84a8, 0x3994, 0xf70, 0xead0, 0x176a, 0xea60, 0x1, 0x1);
        gbc.writeMem(0x84a8, { 0xcb, 0x96 });
        gbc.writeMem(0xea60, { 0x48 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3994, gbc.sp());
        EXPECT(0x84aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a8));
        EXPECT(0x96, gbc.readMem(0x84a9));
        EXPECT(0x48, gbc.readMem(0xea60));
        // CB 96 0394
        gbc.setState(0xe29e, 0x7246, 0x5b80, 0xc83, 0xe004, 0x3d6d, 0x1, 0x0);
        gbc.writeMem(0x3d6d, { 0x88 });
        gbc.writeMem(0xe29e, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7246, gbc.sp());
        EXPECT(0xe2a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29e));
        EXPECT(0x96, gbc.readMem(0xe29f));
        // CB 96 0395
        gbc.setState(0x1066, 0xca9c, 0x1c20, 0x494a, 0xc4b8, 0xf039, 0x0, 0x1);
        gbc.writeMem(0x1066, { 0xcb, 0x96 });
        gbc.writeMem(0xf039, { 0x1f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xca9c, gbc.sp());
        EXPECT(0x1068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xf039));
        // CB 96 0396
        gbc.setState(0x5a11, 0x6bc4, 0xc980, 0x4962, 0x9870, 0x2706, 0x1, 0x0);
        gbc.writeMem(0x2706, { 0x1b });
        gbc.writeMem(0x5a11, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6bc4, gbc.sp());
        EXPECT(0x5a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 0398
        gbc.setState(0x1e, 0x60c7, 0x7e00, 0xe34a, 0xc683, 0xa1ef, 0x0, 0x0);
        gbc.writeMem(0x1e, { 0xcb, 0x96 });
        gbc.writeMem(0xa1ef, { 0xce });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x60c7, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xa1ef));
        // CB 96 039B
        gbc.setState(0xa380, 0x68e0, 0x3350, 0x9662, 0x56b3, 0x8b12, 0x0, 0x0);
        gbc.writeMem(0x8b12, { 0xf7 });
        gbc.writeMem(0xa380, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x68e0, gbc.sp());
        EXPECT(0xa382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x8b12));
        EXPECT(0xcb, gbc.readMem(0xa380));
        EXPECT(0x96, gbc.readMem(0xa381));
        // CB 96 039D
        gbc.setState(0x6740, 0x7c18, 0x660, 0x7e6, 0x56f9, 0xa2a6, 0x1, 0x1);
        gbc.writeMem(0x6740, { 0xcb, 0x96 });
        gbc.writeMem(0xa2a6, { 0x9e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7c18, gbc.sp());
        EXPECT(0x6742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa2a6));
        // CB 96 039F
        gbc.setState(0x4d09, 0x7048, 0x9900, 0x7c9a, 0x6ee8, 0xc8c6, 0x1, 0x0);
        gbc.writeMem(0x4d09, { 0xcb, 0x96 });
        gbc.writeMem(0xc8c6, { 0xfa });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7048, gbc.sp());
        EXPECT(0x4d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc8c6));
        // CB 96 03A0
        gbc.setState(0xdd15, 0xea31, 0x8760, 0x92b0, 0x9914, 0xf6db, 0x0, 0x1);
        gbc.writeMem(0xdd15, { 0xcb, 0x96 });
        gbc.writeMem(0xf6db, { 0x2f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xea31, gbc.sp());
        EXPECT(0xdd17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd15));
        EXPECT(0x96, gbc.readMem(0xdd16));
        EXPECT(0x2b, gbc.readMem(0xf6db));
        // CB 96 03A1
        gbc.setState(0x5f86, 0x317d, 0x190, 0x84be, 0xfc37, 0x8632, 0x0, 0x0);
        gbc.writeMem(0x5f86, { 0xcb, 0x96 });
        gbc.writeMem(0x8632, { 0x34 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x317d, gbc.sp());
        EXPECT(0x5f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8632));
        // CB 96 03A2
        gbc.setState(0xd725, 0x890, 0xadb0, 0xb25, 0xd0c1, 0xe4cc, 0x1, 0x0);
        gbc.writeMem(0xd725, { 0xcb, 0x96 });
        gbc.writeMem(0xe4cc, { 0x11 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x890, gbc.sp());
        EXPECT(0xd727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd725));
        EXPECT(0x96, gbc.readMem(0xd726));
        EXPECT(0x11, gbc.readMem(0xe4cc));
        // CB 96 03A3
        gbc.setState(0xa236, 0x83f6, 0x30c0, 0x960b, 0x9d26, 0x6bd1, 0x1, 0x1);
        gbc.writeMem(0x6bd1, { 0x0 });
        gbc.writeMem(0xa236, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x83f6, gbc.sp());
        EXPECT(0xa238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa236));
        EXPECT(0x96, gbc.readMem(0xa237));
        // CB 96 03A6
        gbc.setState(0xb754, 0xbe22, 0xe130, 0x19f5, 0xcec3, 0x1b7c, 0x0, 0x1);
        gbc.writeMem(0x1b7c, { 0x3a });
        gbc.writeMem(0xb754, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbe22, gbc.sp());
        EXPECT(0xb756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb754));
        EXPECT(0x96, gbc.readMem(0xb755));
        // CB 96 03A9
        gbc.setState(0x5f8f, 0xfc6e, 0x77b0, 0x40bb, 0xb83b, 0xc78d, 0x1, 0x0);
        gbc.writeMem(0x5f8f, { 0xcb, 0x96 });
        gbc.writeMem(0xc78d, { 0x58 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfc6e, gbc.sp());
        EXPECT(0x5f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc78d));
        // CB 96 03AA
        gbc.setState(0x994d, 0xb692, 0x6b50, 0x943, 0xf730, 0xcafa, 0x0, 0x0);
        gbc.writeMem(0x994d, { 0xcb, 0x96 });
        gbc.writeMem(0xcafa, { 0x9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb692, gbc.sp());
        EXPECT(0x994f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994d));
        EXPECT(0x96, gbc.readMem(0x994e));
        EXPECT(0x9, gbc.readMem(0xcafa));
        // CB 96 03AB
        gbc.setState(0x31c2, 0xe2a, 0x37d0, 0x2242, 0x4de0, 0xe733, 0x0, 0x0);
        gbc.writeMem(0x31c2, { 0xcb, 0x96 });
        gbc.writeMem(0xe733, { 0x1d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe2a, gbc.sp());
        EXPECT(0x31c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe733));
        // CB 96 03AC
        gbc.setState(0xc073, 0x159c, 0x3810, 0xeb9a, 0x6788, 0xa3bc, 0x1, 0x1);
        gbc.writeMem(0xa3bc, { 0x9d });
        gbc.writeMem(0xc073, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x159c, gbc.sp());
        EXPECT(0xc075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa3bc));
        EXPECT(0xcb, gbc.readMem(0xc073));
        EXPECT(0x96, gbc.readMem(0xc074));
        // CB 96 03AD
        gbc.setState(0x4e17, 0xa51b, 0x9bc0, 0x46d0, 0xd674, 0x80c8, 0x0, 0x0);
        gbc.writeMem(0x4e17, { 0xcb, 0x96 });
        gbc.writeMem(0x80c8, { 0xeb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa51b, gbc.sp());
        EXPECT(0x4e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x80c8));
        // CB 96 03AE
        gbc.setState(0xc16a, 0x2ac9, 0x82e0, 0xe07e, 0x7642, 0xef3d, 0x1, 0x1);
        gbc.writeMem(0xc16a, { 0xcb, 0x96 });
        gbc.writeMem(0xef3d, { 0xa5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2ac9, gbc.sp());
        EXPECT(0xc16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc16a));
        EXPECT(0x96, gbc.readMem(0xc16b));
        EXPECT(0xa1, gbc.readMem(0xef3d));
        // CB 96 03B0
        gbc.setState(0x1988, 0x61ea, 0x7870, 0xbe09, 0xd84c, 0xc1b9, 0x0, 0x0);
        gbc.writeMem(0x1988, { 0xcb, 0x96 });
        gbc.writeMem(0xc1b9, { 0x90 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x61ea, gbc.sp());
        EXPECT(0x198a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xc1b9));
        // CB 96 03B1
        gbc.setState(0xa570, 0x8f6f, 0x1030, 0x1cb9, 0xe938, 0x4e9c, 0x1, 0x0);
        gbc.writeMem(0x4e9c, { 0xc0 });
        gbc.writeMem(0xa570, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8f6f, gbc.sp());
        EXPECT(0xa572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa570));
        EXPECT(0x96, gbc.readMem(0xa571));
        // CB 96 03B3
        gbc.setState(0x74e1, 0xb9a9, 0x850, 0xf837, 0xcd15, 0xd1d4, 0x0, 0x0);
        gbc.writeMem(0x74e1, { 0xcb, 0x96 });
        gbc.writeMem(0xd1d4, { 0x6a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb9a9, gbc.sp());
        EXPECT(0x74e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd1d4));
        // CB 96 03B4
        gbc.setState(0x9188, 0x222b, 0x91a0, 0x60ac, 0xba1f, 0x9566, 0x1, 0x0);
        gbc.writeMem(0x9188, { 0xcb, 0x96 });
        gbc.writeMem(0x9566, { 0xdd });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x222b, gbc.sp());
        EXPECT(0x918a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9188));
        EXPECT(0x96, gbc.readMem(0x9189));
        EXPECT(0xd9, gbc.readMem(0x9566));
        // CB 96 03B5
        gbc.setState(0x3066, 0x8ef, 0x400, 0x3b43, 0xbd49, 0xbbc2, 0x1, 0x1);
        gbc.writeMem(0x3066, { 0xcb, 0x96 });
        gbc.writeMem(0xbbc2, { 0x47 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8ef, gbc.sp());
        EXPECT(0x3068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbbc2));
        // CB 96 03B7
        gbc.setState(0x39a3, 0x693b, 0x3ad0, 0x4484, 0x139e, 0x61b1, 0x0, 0x1);
        gbc.writeMem(0x39a3, { 0xcb, 0x96 });
        gbc.writeMem(0x61b1, { 0xe3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x693b, gbc.sp());
        EXPECT(0x39a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 03B9
        gbc.setState(0xd499, 0x2710, 0x59f0, 0xb34, 0x98cb, 0xafef, 0x1, 0x1);
        gbc.writeMem(0xafef, { 0x60 });
        gbc.writeMem(0xd499, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2710, gbc.sp());
        EXPECT(0xd49b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xafef));
        EXPECT(0xcb, gbc.readMem(0xd499));
        EXPECT(0x96, gbc.readMem(0xd49a));
        // CB 96 03BA
        gbc.setState(0x86f9, 0xc6b1, 0xeb40, 0xbd1, 0xca7, 0xacb2, 0x1, 0x0);
        gbc.writeMem(0x86f9, { 0xcb, 0x96 });
        gbc.writeMem(0xacb2, { 0xd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc6b1, gbc.sp());
        EXPECT(0x86fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f9));
        EXPECT(0x96, gbc.readMem(0x86fa));
        EXPECT(0x9, gbc.readMem(0xacb2));
        // CB 96 03BB
        gbc.setState(0xa0b1, 0x6c8f, 0xe1a0, 0xe187, 0xfeb1, 0xf8cc, 0x1, 0x1);
        gbc.writeMem(0xa0b1, { 0xcb, 0x96 });
        gbc.writeMem(0xf8cc, { 0x57 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6c8f, gbc.sp());
        EXPECT(0xa0b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b1));
        EXPECT(0x96, gbc.readMem(0xa0b2));
        EXPECT(0x53, gbc.readMem(0xf8cc));
        // CB 96 03BC
        gbc.setState(0xa82c, 0xd2ea, 0x4410, 0x42dd, 0xe5be, 0xdaf1, 0x0, 0x0);
        gbc.writeMem(0xa82c, { 0xcb, 0x96 });
        gbc.writeMem(0xdaf1, { 0x1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd2ea, gbc.sp());
        EXPECT(0xa82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa82c));
        EXPECT(0x96, gbc.readMem(0xa82d));
        EXPECT(0x1, gbc.readMem(0xdaf1));
        // CB 96 03BD
        gbc.setState(0xed21, 0x56a2, 0xe210, 0xa4c7, 0xb814, 0x953a, 0x0, 0x1);
        gbc.writeMem(0x953a, { 0x53 });
        gbc.writeMem(0xed21, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x56a2, gbc.sp());
        EXPECT(0xed23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x953a));
        EXPECT(0xcb, gbc.readMem(0xed21));
        EXPECT(0x96, gbc.readMem(0xed22));
        // CB 96 03BE
        gbc.setState(0x5b8f, 0x4e37, 0xae00, 0xc95d, 0xbb6d, 0xada6, 0x1, 0x0);
        gbc.writeMem(0x5b8f, { 0xcb, 0x96 });
        gbc.writeMem(0xada6, { 0x4a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4e37, gbc.sp());
        EXPECT(0x5b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xada6));
        // CB 96 03BF
        gbc.setState(0x32cf, 0x9a0a, 0x5150, 0x801b, 0x3dbd, 0xeee1, 0x0, 0x0);
        gbc.writeMem(0x32cf, { 0xcb, 0x96 });
        gbc.writeMem(0xeee1, { 0x45 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9a0a, gbc.sp());
        EXPECT(0x32d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xeee1));
        // CB 96 03C0
        gbc.setState(0x7e48, 0xeb2d, 0x69c0, 0x5d3a, 0x5ead, 0x2661, 0x1, 0x0);
        gbc.writeMem(0x2661, { 0x63 });
        gbc.writeMem(0x7e48, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xeb2d, gbc.sp());
        EXPECT(0x7e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 03C1
        gbc.setState(0x59a4, 0x24bf, 0xf760, 0x3a7e, 0xa9e0, 0x6204, 0x1, 0x1);
        gbc.writeMem(0x59a4, { 0xcb, 0x96 });
        gbc.writeMem(0x6204, { 0x49 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x24bf, gbc.sp());
        EXPECT(0x59a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 03C2
        gbc.setState(0x5a3d, 0x2ec, 0x6e0, 0x77ea, 0xf14e, 0xe13c, 0x0, 0x0);
        gbc.writeMem(0x5a3d, { 0xcb, 0x96 });
        gbc.writeMem(0xe13c, { 0x46 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2ec, gbc.sp());
        EXPECT(0x5a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe13c));
        // CB 96 03C3
        gbc.setState(0x1536, 0x3f31, 0x8610, 0xa9ff, 0xc4d2, 0xe3c6, 0x0, 0x1);
        gbc.writeMem(0x1536, { 0xcb, 0x96 });
        gbc.writeMem(0xe3c6, { 0x73 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3f31, gbc.sp());
        EXPECT(0x1538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xe3c6));
        // CB 96 03C4
        gbc.setState(0xd69a, 0x2fa4, 0x2cd0, 0xa901, 0x8ae0, 0xb966, 0x0, 0x0);
        gbc.writeMem(0xb966, { 0x12 });
        gbc.writeMem(0xd69a, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2fa4, gbc.sp());
        EXPECT(0xd69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb966));
        EXPECT(0xcb, gbc.readMem(0xd69a));
        EXPECT(0x96, gbc.readMem(0xd69b));
        // CB 96 03C5
        gbc.setState(0x2a63, 0x3425, 0xf340, 0x40f3, 0x46c5, 0xa28a, 0x1, 0x1);
        gbc.writeMem(0x2a63, { 0xcb, 0x96 });
        gbc.writeMem(0xa28a, { 0x1b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3425, gbc.sp());
        EXPECT(0x2a65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xa28a));
        // CB 96 03C6
        gbc.setState(0xa333, 0xce65, 0x8810, 0x3ce5, 0x9f8f, 0xf96e, 0x0, 0x0);
        gbc.writeMem(0xa333, { 0xcb, 0x96 });
        gbc.writeMem(0xf96e, { 0x4e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xce65, gbc.sp());
        EXPECT(0xa335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa333));
        EXPECT(0x96, gbc.readMem(0xa334));
        EXPECT(0x4a, gbc.readMem(0xf96e));
        // CB 96 03C7
        gbc.setState(0x32e5, 0x117c, 0xb550, 0xcb0c, 0xbdf8, 0x4dfc, 0x0, 0x1);
        gbc.writeMem(0x32e5, { 0xcb, 0x96 });
        gbc.writeMem(0x4dfc, { 0x43 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x117c, gbc.sp());
        EXPECT(0x32e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 03C9
        gbc.setState(0x51a1, 0x3798, 0xaba0, 0xe67b, 0x8036, 0x84f7, 0x1, 0x0);
        gbc.writeMem(0x51a1, { 0xcb, 0x96 });
        gbc.writeMem(0x84f7, { 0xaa });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3798, gbc.sp());
        EXPECT(0x51a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x84f7));
        // CB 96 03CA
        gbc.setState(0xacb5, 0xa5b6, 0xfbc0, 0x635, 0xe51a, 0xea0a, 0x1, 0x0);
        gbc.writeMem(0xacb5, { 0xcb, 0x96 });
        gbc.writeMem(0xea0a, { 0x62 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa5b6, gbc.sp());
        EXPECT(0xacb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb5));
        EXPECT(0x96, gbc.readMem(0xacb6));
        EXPECT(0x62, gbc.readMem(0xea0a));
        // CB 96 03CB
        gbc.setState(0x675f, 0x31f0, 0xa4d0, 0xe1bb, 0xc93f, 0xcb1f, 0x1, 0x0);
        gbc.writeMem(0x675f, { 0xcb, 0x96 });
        gbc.writeMem(0xcb1f, { 0xfe });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x31f0, gbc.sp());
        EXPECT(0x6761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xcb1f));
        // CB 96 03CC
        gbc.setState(0x877e, 0xb722, 0x9080, 0xc738, 0x522b, 0x6c92, 0x0, 0x1);
        gbc.writeMem(0x6c92, { 0xba });
        gbc.writeMem(0x877e, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb722, gbc.sp());
        EXPECT(0x8780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x877e));
        EXPECT(0x96, gbc.readMem(0x877f));
        // CB 96 03CD
        gbc.setState(0x3bc9, 0x5645, 0x8cc0, 0xf4f8, 0xdbfd, 0xdbf, 0x0, 0x1);
        gbc.writeMem(0xdbf, { 0x3b });
        gbc.writeMem(0x3bc9, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5645, gbc.sp());
        EXPECT(0x3bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 03CF
        gbc.setState(0xa157, 0xdf4a, 0xe740, 0x4cad, 0xb4ff, 0x8676, 0x1, 0x0);
        gbc.writeMem(0x8676, { 0xf2 });
        gbc.writeMem(0xa157, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdf4a, gbc.sp());
        EXPECT(0xa159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x8676));
        EXPECT(0xcb, gbc.readMem(0xa157));
        EXPECT(0x96, gbc.readMem(0xa158));
        // CB 96 03D2
        gbc.setState(0xa7ec, 0xbf94, 0xe360, 0x969d, 0x84bc, 0x11c8, 0x0, 0x1);
        gbc.writeMem(0x11c8, { 0x39 });
        gbc.writeMem(0xa7ec, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbf94, gbc.sp());
        EXPECT(0xa7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ec));
        EXPECT(0x96, gbc.readMem(0xa7ed));
        // CB 96 03D3
        gbc.setState(0x6876, 0x77e5, 0x6f50, 0x8787, 0xfeb4, 0xffed, 0x1, 0x0);
        gbc.writeMem(0x6876, { 0xcb, 0x96 });
        gbc.writeMem(0xffed, { 0xa9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x77e5, gbc.sp());
        EXPECT(0x6878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xffed));
        // CB 96 03D7
        gbc.setState(0xe8af, 0x929f, 0xd8e0, 0x549d, 0x91fe, 0x9057, 0x0, 0x1);
        gbc.writeMem(0x9057, { 0x79 });
        gbc.writeMem(0xe8af, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x929f, gbc.sp());
        EXPECT(0xe8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9057));
        EXPECT(0xcb, gbc.readMem(0xe8af));
        EXPECT(0x96, gbc.readMem(0xe8b0));
        // CB 96 03D9
        gbc.setState(0x5499, 0x960e, 0x410, 0x51d4, 0x6fa6, 0x5947, 0x1, 0x1);
        gbc.writeMem(0x5499, { 0xcb, 0x96 });
        gbc.writeMem(0x5947, { 0x2a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x960e, gbc.sp());
        EXPECT(0x549b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 96 03DC
        gbc.setState(0x1df9, 0x1837, 0x94f0, 0x1ec, 0x92d5, 0xde27, 0x0, 0x1);
        gbc.writeMem(0x1df9, { 0xcb, 0x96 });
        gbc.writeMem(0xde27, { 0xad });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1837, gbc.sp());
        EXPECT(0x1dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xde27));
        // CB 96 03DD
        gbc.setState(0xd9ba, 0xba7, 0x8f30, 0x45d5, 0xdd52, 0x7d70, 0x1, 0x0);
        gbc.writeMem(0x7d70, { 0x1 });
        gbc.writeMem(0xd9ba, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xba7, gbc.sp());
        EXPECT(0xd9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ba));
        EXPECT(0x96, gbc.readMem(0xd9bb));
        // CB 96 03DF
        gbc.setState(0x8a47, 0xbc37, 0x81b0, 0x3e05, 0xe15c, 0x9b3e, 0x1, 0x0);
        gbc.writeMem(0x8a47, { 0xcb, 0x96 });
        gbc.writeMem(0x9b3e, { 0xaa });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbc37, gbc.sp());
        EXPECT(0x8a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a47));
        EXPECT(0x96, gbc.readMem(0x8a48));
        EXPECT(0xaa, gbc.readMem(0x9b3e));
        // CB 96 03E0
        gbc.setState(0xb272, 0x533f, 0x1050, 0x3e22, 0xf5e6, 0xa5e7, 0x0, 0x0);
        gbc.writeMem(0xa5e7, { 0xe6 });
        gbc.writeMem(0xb272, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x533f, gbc.sp());
        EXPECT(0xb274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa5e7));
        EXPECT(0xcb, gbc.readMem(0xb272));
        EXPECT(0x96, gbc.readMem(0xb273));
        // CB 96 03E1
        gbc.setState(0x690d, 0x592a, 0x76c0, 0x69eb, 0xd91e, 0xa70a, 0x1, 0x0);
        gbc.writeMem(0x690d, { 0xcb, 0x96 });
        gbc.writeMem(0xa70a, { 0x4e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x592a, gbc.sp());
        EXPECT(0x690f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xa70a));
        // CB 96 03E2
        gbc.setState(0xccea, 0xe08a, 0x1530, 0xbe54, 0x2cb8, 0xe03a, 0x0, 0x0);
        gbc.writeMem(0xccea, { 0xcb, 0x96 });
        gbc.writeMem(0xe03a, { 0xfa });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe08a, gbc.sp());
        EXPECT(0xccec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccea));
        EXPECT(0x96, gbc.readMem(0xcceb));
        EXPECT(0xfa, gbc.readMem(0xe03a));
        // CB 96 03E3
        gbc.setState(0x4268, 0x22ec, 0x3460, 0x64d5, 0x9f23, 0x7aa7, 0x1, 0x1);
        gbc.writeMem(0x4268, { 0xcb, 0x96 });
        gbc.writeMem(0x7aa7, { 0xb8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x22ec, gbc.sp());
        EXPECT(0x426a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 96 03E4
        gbc.setState(0x4886, 0x1c75, 0x97f0, 0x994b, 0x6211, 0xb8d1, 0x1, 0x0);
        gbc.writeMem(0x4886, { 0xcb, 0x96 });
        gbc.writeMem(0xb8d1, { 0x1c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1c75, gbc.sp());
        EXPECT(0x4888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xb8d1));
        // CB 96 03E6
        gbc.setState(0xe8ec, 0xe6e1, 0x2250, 0x2b7f, 0x57ba, 0xccaf, 0x1, 0x0);
        gbc.writeMem(0xccaf, { 0x26 });
        gbc.writeMem(0xe8ec, { 0xcb, 0x96 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe6e1, gbc.sp());
        EXPECT(0xe8ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xccaf));
        EXPECT(0xcb, gbc.readMem(0xe8ec));
        EXPECT(0x96, gbc.readMem(0xe8ed));
    }
