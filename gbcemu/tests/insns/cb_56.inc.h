    TEST(gbcemu, opcode_cb_56) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 56 0000
        gbc.setState(0x206c, 0x23f9, 0xbe0, 0x923a, 0xec5, 0xd42a, 0x1, 0x1);
        gbc.writeMem(0x206c, { 0xcb, 0x56 });
        gbc.writeMem(0xd42a, { 0x97 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x23f9, gbc.sp());
        EXPECT(0x206e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd42a));
        // CB 56 0001
        gbc.setState(0x466a, 0x4031, 0x1af0, 0xb976, 0x8b44, 0x4fb4, 0x0, 0x1);
        gbc.writeMem(0x466a, { 0xcb, 0x56 });
        gbc.writeMem(0x4fb4, { 0xc3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4031, gbc.sp());
        EXPECT(0x466c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0003
        gbc.setState(0x59ac, 0x3f35, 0x9820, 0xde11, 0x5c73, 0x5213, 0x1, 0x0);
        gbc.writeMem(0x5213, { 0xd3 });
        gbc.writeMem(0x59ac, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3f35, gbc.sp());
        EXPECT(0x59ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0004
        gbc.setState(0x3913, 0x8c7f, 0x4ac0, 0x67fb, 0x685f, 0xadd4, 0x1, 0x1);
        gbc.writeMem(0x3913, { 0xcb, 0x56 });
        gbc.writeMem(0xadd4, { 0x65 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8c7f, gbc.sp());
        EXPECT(0x3915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xadd4));
        // CB 56 0005
        gbc.setState(0x11b6, 0xb788, 0x3970, 0xd186, 0x4e4d, 0xdf3f, 0x0, 0x1);
        gbc.writeMem(0x11b6, { 0xcb, 0x56 });
        gbc.writeMem(0xdf3f, { 0xac });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb788, gbc.sp());
        EXPECT(0x11b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdf3f));
        // CB 56 0006
        gbc.setState(0xd87a, 0x80bf, 0xc980, 0xdb1c, 0xe532, 0x4f9e, 0x0, 0x0);
        gbc.writeMem(0x4f9e, { 0x65 });
        gbc.writeMem(0xd87a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x80bf, gbc.sp());
        EXPECT(0xd87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87a));
        EXPECT(0x56, gbc.readMem(0xd87b));
        // CB 56 0007
        gbc.setState(0x3945, 0xbcd8, 0x6250, 0x159, 0xd2df, 0xf4f4, 0x1, 0x0);
        gbc.writeMem(0x3945, { 0xcb, 0x56 });
        gbc.writeMem(0xf4f4, { 0x5b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbcd8, gbc.sp());
        EXPECT(0x3947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xf4f4));
        // CB 56 0008
        gbc.setState(0xc007, 0x90bf, 0x3bd0, 0x8934, 0xa33, 0x48e6, 0x1, 0x0);
        gbc.writeMem(0x48e6, { 0x13 });
        gbc.writeMem(0xc007, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x90bf, gbc.sp());
        EXPECT(0xc009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc007));
        EXPECT(0x56, gbc.readMem(0xc008));
        // CB 56 0009
        gbc.setState(0x71c2, 0x4dc1, 0xe670, 0x9936, 0xbb76, 0x90ab, 0x0, 0x1);
        gbc.writeMem(0x71c2, { 0xcb, 0x56 });
        gbc.writeMem(0x90ab, { 0x59 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4dc1, gbc.sp());
        EXPECT(0x71c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x90ab));
        // CB 56 000A
        gbc.setState(0xc24a, 0x9c9, 0x8d20, 0xd15f, 0x7778, 0x2aca, 0x1, 0x1);
        gbc.writeMem(0x2aca, { 0xd5 });
        gbc.writeMem(0xc24a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9c9, gbc.sp());
        EXPECT(0xc24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc24a));
        EXPECT(0x56, gbc.readMem(0xc24b));
        // CB 56 000B
        gbc.setState(0x807c, 0xeacd, 0xbfd0, 0x6266, 0xa200, 0x4a91, 0x0, 0x1);
        gbc.writeMem(0x4a91, { 0x77 });
        gbc.writeMem(0x807c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xeacd, gbc.sp());
        EXPECT(0x807e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807c));
        EXPECT(0x56, gbc.readMem(0x807d));
        // CB 56 000C
        gbc.setState(0x301e, 0x2c01, 0x8860, 0xc517, 0xe48f, 0x88b5, 0x0, 0x1);
        gbc.writeMem(0x301e, { 0xcb, 0x56 });
        gbc.writeMem(0x88b5, { 0x24 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2c01, gbc.sp());
        EXPECT(0x3020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x88b5));
        // CB 56 000D
        gbc.setState(0x5856, 0x734d, 0xb80, 0x8497, 0x4c83, 0xd7de, 0x0, 0x0);
        gbc.writeMem(0x5856, { 0xcb, 0x56 });
        gbc.writeMem(0xd7de, { 0x6 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x734d, gbc.sp());
        EXPECT(0x5858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd7de));
        // CB 56 000E
        gbc.setState(0xcd34, 0xb1fd, 0x6b20, 0x3340, 0xc4b3, 0x1ecd, 0x0, 0x0);
        gbc.writeMem(0x1ecd, { 0xd });
        gbc.writeMem(0xcd34, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb1fd, gbc.sp());
        EXPECT(0xcd36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd34));
        EXPECT(0x56, gbc.readMem(0xcd35));
        // CB 56 000F
        gbc.setState(0x5eb0, 0x3bbc, 0xcd10, 0x591, 0xaaf0, 0x93e7, 0x0, 0x0);
        gbc.writeMem(0x5eb0, { 0xcb, 0x56 });
        gbc.writeMem(0x93e7, { 0x11 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3bbc, gbc.sp());
        EXPECT(0x5eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x93e7));
        // CB 56 0010
        gbc.setState(0x492c, 0xab37, 0x9a60, 0x4b9e, 0xeb2e, 0xf5f6, 0x1, 0x1);
        gbc.writeMem(0x492c, { 0xcb, 0x56 });
        gbc.writeMem(0xf5f6, { 0x59 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xab37, gbc.sp());
        EXPECT(0x492e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xf5f6));
        // CB 56 0011
        gbc.setState(0xce72, 0xde10, 0x7a20, 0x2eb9, 0x12c9, 0xec51, 0x0, 0x1);
        gbc.writeMem(0xce72, { 0xcb, 0x56 });
        gbc.writeMem(0xec51, { 0xd2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xde10, gbc.sp());
        EXPECT(0xce74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce72));
        EXPECT(0x56, gbc.readMem(0xce73));
        EXPECT(0xd2, gbc.readMem(0xec51));
        // CB 56 0012
        gbc.setState(0x55c7, 0xabc8, 0x3b80, 0x6f6, 0x6474, 0x6348, 0x0, 0x1);
        gbc.writeMem(0x55c7, { 0xcb, 0x56 });
        gbc.writeMem(0x6348, { 0xc6 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xabc8, gbc.sp());
        EXPECT(0x55c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0013
        gbc.setState(0xc55a, 0x828, 0x5b70, 0xa810, 0xd8c1, 0x4dc, 0x0, 0x0);
        gbc.writeMem(0x4dc, { 0x68 });
        gbc.writeMem(0xc55a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x828, gbc.sp());
        EXPECT(0xc55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55a));
        EXPECT(0x56, gbc.readMem(0xc55b));
        // CB 56 0014
        gbc.setState(0x5f, 0xa, 0xb910, 0xe03f, 0x58, 0x168e, 0x1, 0x1);
        gbc.writeMem(0x5f, { 0xcb, 0x56 });
        gbc.writeMem(0x168e, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa, gbc.sp());
        EXPECT(0x61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0015
        gbc.setState(0x6afe, 0xa298, 0x9590, 0x2f5, 0x7cf, 0xb5a9, 0x1, 0x0);
        gbc.writeMem(0x6afe, { 0xcb, 0x56 });
        gbc.writeMem(0xb5a9, { 0x3e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa298, gbc.sp());
        EXPECT(0x6b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb5a9));
        // CB 56 0016
        gbc.setState(0x5f2c, 0x5c09, 0x1de0, 0xbe60, 0xc0fb, 0xda74, 0x0, 0x1);
        gbc.writeMem(0x5f2c, { 0xcb, 0x56 });
        gbc.writeMem(0xda74, { 0x2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5c09, gbc.sp());
        EXPECT(0x5f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xda74));
        // CB 56 0017
        gbc.setState(0x72ee, 0x6ff1, 0x83f0, 0x1d9d, 0x12fc, 0x40e4, 0x0, 0x1);
        gbc.writeMem(0x40e4, { 0x39 });
        gbc.writeMem(0x72ee, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6ff1, gbc.sp());
        EXPECT(0x72f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0018
        gbc.setState(0x73ff, 0x422b, 0xfb00, 0xdef1, 0xb58e, 0x2219, 0x0, 0x0);
        gbc.writeMem(0x2219, { 0x1e });
        gbc.writeMem(0x73ff, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x422b, gbc.sp());
        EXPECT(0x7401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0019
        gbc.setState(0xe643, 0xed6e, 0xd2d0, 0x241d, 0x514e, 0xf1ff, 0x1, 0x0);
        gbc.writeMem(0xe643, { 0xcb, 0x56 });
        gbc.writeMem(0xf1ff, { 0x9a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xed6e, gbc.sp());
        EXPECT(0xe645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe643));
        EXPECT(0x56, gbc.readMem(0xe644));
        EXPECT(0x9a, gbc.readMem(0xf1ff));
        // CB 56 001A
        gbc.setState(0x1ccb, 0x9803, 0xffd0, 0x47, 0xad3c, 0xf7f9, 0x1, 0x0);
        gbc.writeMem(0x1ccb, { 0xcb, 0x56 });
        gbc.writeMem(0xf7f9, { 0x99 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9803, gbc.sp());
        EXPECT(0x1ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xf7f9));
        // CB 56 001B
        gbc.setState(0x82db, 0x6c47, 0x9920, 0x943, 0xcfc7, 0xa18c, 0x1, 0x0);
        gbc.writeMem(0x82db, { 0xcb, 0x56 });
        gbc.writeMem(0xa18c, { 0x68 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6c47, gbc.sp());
        EXPECT(0x82dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82db));
        EXPECT(0x56, gbc.readMem(0x82dc));
        EXPECT(0x68, gbc.readMem(0xa18c));
        // CB 56 001C
        gbc.setState(0x9fb8, 0xf1c5, 0xc4b0, 0x93f7, 0xc59c, 0xdedc, 0x0, 0x0);
        gbc.writeMem(0x9fb8, { 0xcb, 0x56 });
        gbc.writeMem(0xdedc, { 0x69 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf1c5, gbc.sp());
        EXPECT(0x9fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb8));
        EXPECT(0x56, gbc.readMem(0x9fb9));
        EXPECT(0x69, gbc.readMem(0xdedc));
        // CB 56 001D
        gbc.setState(0x83d8, 0x97dc, 0x6090, 0xd29c, 0xe499, 0xced6, 0x1, 0x1);
        gbc.writeMem(0x83d8, { 0xcb, 0x56 });
        gbc.writeMem(0xced6, { 0x2e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x97dc, gbc.sp());
        EXPECT(0x83da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d8));
        EXPECT(0x56, gbc.readMem(0x83d9));
        EXPECT(0x2e, gbc.readMem(0xced6));
        // CB 56 001E
        gbc.setState(0xb7f7, 0x9e5f, 0xdf20, 0x5b04, 0x1d96, 0x909f, 0x0, 0x0);
        gbc.writeMem(0x909f, { 0x36 });
        gbc.writeMem(0xb7f7, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9e5f, gbc.sp());
        EXPECT(0xb7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x909f));
        EXPECT(0xcb, gbc.readMem(0xb7f7));
        EXPECT(0x56, gbc.readMem(0xb7f8));
        // CB 56 001F
        gbc.setState(0xe078, 0xc1fc, 0x82b0, 0xbd1b, 0x29e3, 0xeca8, 0x1, 0x0);
        gbc.writeMem(0xe078, { 0xcb, 0x56 });
        gbc.writeMem(0xeca8, { 0xf4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc1fc, gbc.sp());
        EXPECT(0xe07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe078));
        EXPECT(0x56, gbc.readMem(0xe079));
        EXPECT(0xf4, gbc.readMem(0xeca8));
        // CB 56 0020
        gbc.setState(0xd3db, 0xabb6, 0xd2c0, 0x9e58, 0x4eb1, 0xcb26, 0x1, 0x1);
        gbc.writeMem(0xcb26, { 0xac });
        gbc.writeMem(0xd3db, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xabb6, gbc.sp());
        EXPECT(0xd3dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcb26));
        EXPECT(0xcb, gbc.readMem(0xd3db));
        EXPECT(0x56, gbc.readMem(0xd3dc));
        // CB 56 0021
        gbc.setState(0x566d, 0xfe71, 0xfdd0, 0xdbdf, 0xf84c, 0x7c6b, 0x0, 0x0);
        gbc.writeMem(0x566d, { 0xcb, 0x56 });
        gbc.writeMem(0x7c6b, { 0x9e });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfe71, gbc.sp());
        EXPECT(0x566f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0022
        gbc.setState(0x72bd, 0x785a, 0x90d0, 0x37a7, 0xc004, 0x6588, 0x0, 0x1);
        gbc.writeMem(0x6588, { 0x67 });
        gbc.writeMem(0x72bd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x785a, gbc.sp());
        EXPECT(0x72bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0024
        gbc.setState(0xa297, 0x36b0, 0x2440, 0x6db9, 0xaefc, 0x87a1, 0x1, 0x1);
        gbc.writeMem(0x87a1, { 0xd });
        gbc.writeMem(0xa297, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x36b0, gbc.sp());
        EXPECT(0xa299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x87a1));
        EXPECT(0xcb, gbc.readMem(0xa297));
        EXPECT(0x56, gbc.readMem(0xa298));
        // CB 56 0025
        gbc.setState(0x7cc5, 0x1239, 0xcf00, 0xdcd0, 0x50ac, 0x18c6, 0x0, 0x1);
        gbc.writeMem(0x18c6, { 0xe1 });
        gbc.writeMem(0x7cc5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1239, gbc.sp());
        EXPECT(0x7cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0026
        gbc.setState(0x85d1, 0xc327, 0x8890, 0xeeb5, 0x8752, 0x9dbf, 0x1, 0x1);
        gbc.writeMem(0x85d1, { 0xcb, 0x56 });
        gbc.writeMem(0x9dbf, { 0xe9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc327, gbc.sp());
        EXPECT(0x85d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d1));
        EXPECT(0x56, gbc.readMem(0x85d2));
        EXPECT(0xe9, gbc.readMem(0x9dbf));
        // CB 56 0027
        gbc.setState(0x842d, 0xf953, 0x4d70, 0xb918, 0xb9fc, 0xbb00, 0x0, 0x1);
        gbc.writeMem(0x842d, { 0xcb, 0x56 });
        gbc.writeMem(0xbb00, { 0x30 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf953, gbc.sp());
        EXPECT(0x842f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x842d));
        EXPECT(0x56, gbc.readMem(0x842e));
        EXPECT(0x30, gbc.readMem(0xbb00));
        // CB 56 0028
        gbc.setState(0x1358, 0xabd2, 0x8de0, 0xc0f4, 0xa6f8, 0x1b6f, 0x1, 0x1);
        gbc.writeMem(0x1358, { 0xcb, 0x56 });
        gbc.writeMem(0x1b6f, { 0x36 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xabd2, gbc.sp());
        EXPECT(0x135a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0029
        gbc.setState(0xbf3c, 0x79fa, 0x13a0, 0x1039, 0x7c53, 0x4d94, 0x0, 0x1);
        gbc.writeMem(0x4d94, { 0x88 });
        gbc.writeMem(0xbf3c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x79fa, gbc.sp());
        EXPECT(0xbf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf3c));
        EXPECT(0x56, gbc.readMem(0xbf3d));
        // CB 56 002A
        gbc.setState(0x6254, 0x9d63, 0xbda0, 0x5a, 0x702c, 0xdfac, 0x1, 0x1);
        gbc.writeMem(0x6254, { 0xcb, 0x56 });
        gbc.writeMem(0xdfac, { 0x87 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9d63, gbc.sp());
        EXPECT(0x6256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdfac));
        // CB 56 002B
        gbc.setState(0xe611, 0x1b2b, 0xa230, 0x78fe, 0xfc22, 0xc8f6, 0x0, 0x0);
        gbc.writeMem(0xc8f6, { 0x52 });
        gbc.writeMem(0xe611, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1b2b, gbc.sp());
        EXPECT(0xe613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc8f6));
        EXPECT(0xcb, gbc.readMem(0xe611));
        EXPECT(0x56, gbc.readMem(0xe612));
        // CB 56 002C
        gbc.setState(0x5a75, 0xfcb3, 0x6dc0, 0x760, 0x2767, 0xa02f, 0x1, 0x0);
        gbc.writeMem(0x5a75, { 0xcb, 0x56 });
        gbc.writeMem(0xa02f, { 0x44 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfcb3, gbc.sp());
        EXPECT(0x5a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa02f));
        // CB 56 002D
        gbc.setState(0xaa2d, 0xe3e3, 0xfe20, 0x4f0c, 0x857d, 0x5919, 0x1, 0x1);
        gbc.writeMem(0x5919, { 0xc8 });
        gbc.writeMem(0xaa2d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe3e3, gbc.sp());
        EXPECT(0xaa2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2d));
        EXPECT(0x56, gbc.readMem(0xaa2e));
        // CB 56 002E
        gbc.setState(0x51a9, 0x738a, 0x5400, 0xcf62, 0x3c81, 0x9b70, 0x0, 0x1);
        gbc.writeMem(0x51a9, { 0xcb, 0x56 });
        gbc.writeMem(0x9b70, { 0xe });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x738a, gbc.sp());
        EXPECT(0x51ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9b70));
        // CB 56 002F
        gbc.setState(0xd0bd, 0xb877, 0xa620, 0xaba1, 0xaa61, 0x5818, 0x0, 0x1);
        gbc.writeMem(0x5818, { 0x19 });
        gbc.writeMem(0xd0bd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb877, gbc.sp());
        EXPECT(0xd0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0bd));
        EXPECT(0x56, gbc.readMem(0xd0be));
        // CB 56 0030
        gbc.setState(0xecdd, 0x8b6d, 0xa710, 0xb8af, 0x96a6, 0xa830, 0x0, 0x0);
        gbc.writeMem(0xa830, { 0xa7 });
        gbc.writeMem(0xecdd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8b6d, gbc.sp());
        EXPECT(0xecdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa830));
        EXPECT(0xcb, gbc.readMem(0xecdd));
        EXPECT(0x56, gbc.readMem(0xecde));
        // CB 56 0031
        gbc.setState(0x10fe, 0xe435, 0xc9e0, 0x56cd, 0x2c80, 0xc7cd, 0x1, 0x0);
        gbc.writeMem(0x10fe, { 0xcb, 0x56 });
        gbc.writeMem(0xc7cd, { 0x2c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe435, gbc.sp());
        EXPECT(0x1100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc7cd));
        // CB 56 0032
        gbc.setState(0x8bae, 0xbdbd, 0x17a0, 0x7fd8, 0xbf90, 0x6039, 0x0, 0x1);
        gbc.writeMem(0x6039, { 0xc8 });
        gbc.writeMem(0x8bae, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbdbd, gbc.sp());
        EXPECT(0x8bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bae));
        EXPECT(0x56, gbc.readMem(0x8baf));
        // CB 56 0034
        gbc.setState(0x7a9c, 0xb674, 0xcb10, 0xe650, 0xd19c, 0xa211, 0x0, 0x0);
        gbc.writeMem(0x7a9c, { 0xcb, 0x56 });
        gbc.writeMem(0xa211, { 0x9e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb674, gbc.sp());
        EXPECT(0x7a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa211));
        // CB 56 0035
        gbc.setState(0x59bb, 0xe305, 0x8070, 0x243c, 0xeadb, 0x6f7f, 0x1, 0x1);
        gbc.writeMem(0x59bb, { 0xcb, 0x56 });
        gbc.writeMem(0x6f7f, { 0x8b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe305, gbc.sp());
        EXPECT(0x59bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0036
        gbc.setState(0xbff7, 0x5cc, 0xb3a0, 0x91c7, 0x35b2, 0xe0e0, 0x1, 0x1);
        gbc.writeMem(0xbff7, { 0xcb, 0x56 });
        gbc.writeMem(0xe0e0, { 0xa4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5cc, gbc.sp());
        EXPECT(0xbff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff7));
        EXPECT(0x56, gbc.readMem(0xbff8));
        EXPECT(0xa4, gbc.readMem(0xe0e0));
        // CB 56 0037
        gbc.setState(0x4caf, 0xe010, 0xe960, 0xf680, 0x8cbf, 0x76de, 0x0, 0x1);
        gbc.writeMem(0x4caf, { 0xcb, 0x56 });
        gbc.writeMem(0x76de, { 0xdc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe010, gbc.sp());
        EXPECT(0x4cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0038
        gbc.setState(0x9a54, 0xd1c5, 0x2ca0, 0x1ce7, 0xee3b, 0xb5c9, 0x0, 0x0);
        gbc.writeMem(0x9a54, { 0xcb, 0x56 });
        gbc.writeMem(0xb5c9, { 0xf0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd1c5, gbc.sp());
        EXPECT(0x9a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a54));
        EXPECT(0x56, gbc.readMem(0x9a55));
        EXPECT(0xf0, gbc.readMem(0xb5c9));
        // CB 56 0039
        gbc.setState(0x6b00, 0x321, 0x40f0, 0xd323, 0x71b8, 0xa14, 0x1, 0x0);
        gbc.writeMem(0xa14, { 0x9a });
        gbc.writeMem(0x6b00, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x321, gbc.sp());
        EXPECT(0x6b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 003B
        gbc.setState(0x22a2, 0xa273, 0xb410, 0x9acd, 0xbaf9, 0x63d7, 0x1, 0x0);
        gbc.writeMem(0x22a2, { 0xcb, 0x56 });
        gbc.writeMem(0x63d7, { 0x87 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa273, gbc.sp());
        EXPECT(0x22a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 003C
        gbc.setState(0x6239, 0xd9b2, 0xee50, 0xb727, 0x154b, 0xe43, 0x0, 0x1);
        gbc.writeMem(0xe43, { 0xa5 });
        gbc.writeMem(0x6239, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd9b2, gbc.sp());
        EXPECT(0x623b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 003D
        gbc.setState(0x85b2, 0xbbaa, 0xec0, 0xc428, 0x98f6, 0xa0d, 0x1, 0x0);
        gbc.writeMem(0xa0d, { 0x51 });
        gbc.writeMem(0x85b2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbbaa, gbc.sp());
        EXPECT(0x85b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b2));
        EXPECT(0x56, gbc.readMem(0x85b3));
        // CB 56 003E
        gbc.setState(0x6627, 0xf596, 0x2b70, 0x8b56, 0x92c1, 0xaa40, 0x0, 0x0);
        gbc.writeMem(0x6627, { 0xcb, 0x56 });
        gbc.writeMem(0xaa40, { 0x29 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf596, gbc.sp());
        EXPECT(0x6629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xaa40));
        // CB 56 003F
        gbc.setState(0x65db, 0xcc68, 0x7b90, 0x693c, 0x92d0, 0xd738, 0x1, 0x0);
        gbc.writeMem(0x65db, { 0xcb, 0x56 });
        gbc.writeMem(0xd738, { 0x51 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcc68, gbc.sp());
        EXPECT(0x65dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd738));
        // CB 56 0040
        gbc.setState(0x6d93, 0x7183, 0xff80, 0x441c, 0x25c0, 0x5c2a, 0x0, 0x1);
        gbc.writeMem(0x5c2a, { 0xcc });
        gbc.writeMem(0x6d93, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7183, gbc.sp());
        EXPECT(0x6d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0042
        gbc.setState(0x7608, 0xd2a5, 0x3090, 0xb4dd, 0x60e7, 0x394e, 0x0, 0x0);
        gbc.writeMem(0x394e, { 0xfc });
        gbc.writeMem(0x7608, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd2a5, gbc.sp());
        EXPECT(0x760a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0043
        gbc.setState(0xc526, 0xea11, 0x8aa0, 0xf069, 0xb69d, 0xb495, 0x1, 0x1);
        gbc.writeMem(0xb495, { 0x8d });
        gbc.writeMem(0xc526, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xea11, gbc.sp());
        EXPECT(0xc528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb495));
        EXPECT(0xcb, gbc.readMem(0xc526));
        EXPECT(0x56, gbc.readMem(0xc527));
        // CB 56 0044
        gbc.setState(0x7a46, 0xdbc7, 0xc2e0, 0xefce, 0x6730, 0xf84c, 0x1, 0x1);
        gbc.writeMem(0x7a46, { 0xcb, 0x56 });
        gbc.writeMem(0xf84c, { 0x7a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdbc7, gbc.sp());
        EXPECT(0x7a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xf84c));
        // CB 56 0045
        gbc.setState(0x50e1, 0x575c, 0xe080, 0x5d41, 0x3168, 0xec79, 0x1, 0x1);
        gbc.writeMem(0x50e1, { 0xcb, 0x56 });
        gbc.writeMem(0xec79, { 0x62 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x575c, gbc.sp());
        EXPECT(0x50e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xec79));
        // CB 56 0046
        gbc.setState(0xa387, 0xc65d, 0x2cd0, 0xa082, 0xeffe, 0x1567, 0x1, 0x0);
        gbc.writeMem(0x1567, { 0x7 });
        gbc.writeMem(0xa387, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc65d, gbc.sp());
        EXPECT(0xa389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa387));
        EXPECT(0x56, gbc.readMem(0xa388));
        // CB 56 0047
        gbc.setState(0x47cc, 0xc712, 0x7480, 0x44b6, 0xecc3, 0xbd7c, 0x1, 0x0);
        gbc.writeMem(0x47cc, { 0xcb, 0x56 });
        gbc.writeMem(0xbd7c, { 0x11 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc712, gbc.sp());
        EXPECT(0x47ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbd7c));
        // CB 56 0048
        gbc.setState(0xe285, 0xeeac, 0x3680, 0x44bc, 0x3668, 0x5b5f, 0x0, 0x1);
        gbc.writeMem(0x5b5f, { 0xd0 });
        gbc.writeMem(0xe285, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xeeac, gbc.sp());
        EXPECT(0xe287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe285));
        EXPECT(0x56, gbc.readMem(0xe286));
        // CB 56 0049
        gbc.setState(0x465b, 0x2308, 0x24a0, 0x121b, 0x7828, 0x2dbb, 0x1, 0x0);
        gbc.writeMem(0x2dbb, { 0x7b });
        gbc.writeMem(0x465b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2308, gbc.sp());
        EXPECT(0x465d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 004A
        gbc.setState(0x66ca, 0x3d7d, 0xa3e0, 0xd665, 0x6728, 0x3a0a, 0x0, 0x1);
        gbc.writeMem(0x3a0a, { 0x5e });
        gbc.writeMem(0x66ca, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3d7d, gbc.sp());
        EXPECT(0x66cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 004B
        gbc.setState(0x98b, 0xb67, 0x4c90, 0x5296, 0x18e4, 0x675e, 0x0, 0x0);
        gbc.writeMem(0x98b, { 0xcb, 0x56 });
        gbc.writeMem(0x675e, { 0x68 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb67, gbc.sp());
        EXPECT(0x98d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 004C
        gbc.setState(0x4dbe, 0x4857, 0x4f30, 0xbde8, 0x5a09, 0x978b, 0x0, 0x1);
        gbc.writeMem(0x4dbe, { 0xcb, 0x56 });
        gbc.writeMem(0x978b, { 0x11 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4857, gbc.sp());
        EXPECT(0x4dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x978b));
        // CB 56 004D
        gbc.setState(0xc1e5, 0xdb64, 0x72e0, 0x44b, 0xa18e, 0xe771, 0x0, 0x1);
        gbc.writeMem(0xc1e5, { 0xcb, 0x56 });
        gbc.writeMem(0xe771, { 0xb9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdb64, gbc.sp());
        EXPECT(0xc1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1e5));
        EXPECT(0x56, gbc.readMem(0xc1e6));
        EXPECT(0xb9, gbc.readMem(0xe771));
        // CB 56 004E
        gbc.setState(0x613c, 0xe26b, 0x97b0, 0x6369, 0x7ad, 0x5be4, 0x0, 0x1);
        gbc.writeMem(0x5be4, { 0x17 });
        gbc.writeMem(0x613c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe26b, gbc.sp());
        EXPECT(0x613e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 004F
        gbc.setState(0x4fc8, 0x45c5, 0x2e90, 0x196b, 0x965a, 0x87f8, 0x1, 0x1);
        gbc.writeMem(0x4fc8, { 0xcb, 0x56 });
        gbc.writeMem(0x87f8, { 0x50 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x45c5, gbc.sp());
        EXPECT(0x4fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x87f8));
        // CB 56 0050
        gbc.setState(0xd787, 0x72d4, 0x13b0, 0xa5dd, 0xa279, 0xf124, 0x1, 0x1);
        gbc.writeMem(0xd787, { 0xcb, 0x56 });
        gbc.writeMem(0xf124, { 0x4c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x72d4, gbc.sp());
        EXPECT(0xd789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd787));
        EXPECT(0x56, gbc.readMem(0xd788));
        EXPECT(0x4c, gbc.readMem(0xf124));
        // CB 56 0051
        gbc.setState(0x1c93, 0xaa49, 0xc4f0, 0xb6eb, 0xdb62, 0xeba5, 0x1, 0x0);
        gbc.writeMem(0x1c93, { 0xcb, 0x56 });
        gbc.writeMem(0xeba5, { 0x2d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xaa49, gbc.sp());
        EXPECT(0x1c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xeba5));
        // CB 56 0052
        gbc.setState(0x18b0, 0x5955, 0x6b40, 0x1af8, 0xcb5, 0x7ad5, 0x0, 0x1);
        gbc.writeMem(0x18b0, { 0xcb, 0x56 });
        gbc.writeMem(0x7ad5, { 0xc2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5955, gbc.sp());
        EXPECT(0x18b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0053
        gbc.setState(0x18f0, 0x3032, 0x79f0, 0x3741, 0xf56b, 0xf370, 0x1, 0x1);
        gbc.writeMem(0x18f0, { 0xcb, 0x56 });
        gbc.writeMem(0xf370, { 0x4c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3032, gbc.sp());
        EXPECT(0x18f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xf370));
        // CB 56 0054
        gbc.setState(0xb9e7, 0x2047, 0x7110, 0x4828, 0x223d, 0x43ab, 0x1, 0x0);
        gbc.writeMem(0x43ab, { 0xdb });
        gbc.writeMem(0xb9e7, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2047, gbc.sp());
        EXPECT(0xb9e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e7));
        EXPECT(0x56, gbc.readMem(0xb9e8));
        // CB 56 0055
        gbc.setState(0xed1a, 0xe74b, 0x9d00, 0xc375, 0x8194, 0xfd1f, 0x1, 0x0);
        gbc.writeMem(0xed1a, { 0xcb, 0x56 });
        gbc.writeMem(0xfd1f, { 0xf2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe74b, gbc.sp());
        EXPECT(0xed1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1a));
        EXPECT(0x56, gbc.readMem(0xed1b));
        EXPECT(0xf2, gbc.readMem(0xfd1f));
        // CB 56 0056
        gbc.setState(0xbd47, 0xaedb, 0x1150, 0xfb7b, 0x337e, 0xbaf7, 0x0, 0x1);
        gbc.writeMem(0xbaf7, { 0xbf });
        gbc.writeMem(0xbd47, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaedb, gbc.sp());
        EXPECT(0xbd49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbaf7));
        EXPECT(0xcb, gbc.readMem(0xbd47));
        EXPECT(0x56, gbc.readMem(0xbd48));
        // CB 56 0057
        gbc.setState(0xb47, 0x27b8, 0x23f0, 0x7ab6, 0x8751, 0x3483, 0x1, 0x1);
        gbc.writeMem(0xb47, { 0xcb, 0x56 });
        gbc.writeMem(0x3483, { 0x31 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x27b8, gbc.sp());
        EXPECT(0xb49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0058
        gbc.setState(0x3acc, 0xc976, 0xea50, 0x4d57, 0xa8ca, 0xc9ad, 0x1, 0x0);
        gbc.writeMem(0x3acc, { 0xcb, 0x56 });
        gbc.writeMem(0xc9ad, { 0x30 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc976, gbc.sp());
        EXPECT(0x3ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xc9ad));
        // CB 56 0059
        gbc.setState(0x97ed, 0xceac, 0x1d80, 0x6753, 0xf81e, 0x9db3, 0x1, 0x1);
        gbc.writeMem(0x97ed, { 0xcb, 0x56 });
        gbc.writeMem(0x9db3, { 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xceac, gbc.sp());
        EXPECT(0x97ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ed));
        EXPECT(0x56, gbc.readMem(0x97ee));
        EXPECT(0x1d, gbc.readMem(0x9db3));
        // CB 56 005A
        gbc.setState(0xd02b, 0xb95a, 0xb2d0, 0x60b8, 0x2a96, 0x96ea, 0x0, 0x1);
        gbc.writeMem(0x96ea, { 0x27 });
        gbc.writeMem(0xd02b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb95a, gbc.sp());
        EXPECT(0xd02d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x96ea));
        EXPECT(0xcb, gbc.readMem(0xd02b));
        EXPECT(0x56, gbc.readMem(0xd02c));
        // CB 56 005B
        gbc.setState(0x2442, 0xb4af, 0x6eb0, 0x7eb0, 0x36ed, 0x1989, 0x1, 0x1);
        gbc.writeMem(0x1989, { 0x39 });
        gbc.writeMem(0x2442, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb4af, gbc.sp());
        EXPECT(0x2444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 005C
        gbc.setState(0x5a29, 0x4f9a, 0x8320, 0xf112, 0x48f4, 0x1db0, 0x0, 0x1);
        gbc.writeMem(0x1db0, { 0xe6 });
        gbc.writeMem(0x5a29, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4f9a, gbc.sp());
        EXPECT(0x5a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 005D
        gbc.setState(0xe84e, 0x4fbe, 0x69d0, 0xb597, 0x2bf7, 0xb8a, 0x0, 0x1);
        gbc.writeMem(0xb8a, { 0x5b });
        gbc.writeMem(0xe84e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4fbe, gbc.sp());
        EXPECT(0xe850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe84e));
        EXPECT(0x56, gbc.readMem(0xe84f));
        // CB 56 005E
        gbc.setState(0x56f5, 0xe50d, 0x9e60, 0x5d5a, 0x6185, 0x3641, 0x0, 0x1);
        gbc.writeMem(0x3641, { 0xe6 });
        gbc.writeMem(0x56f5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe50d, gbc.sp());
        EXPECT(0x56f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 005F
        gbc.setState(0xdc51, 0xd245, 0x1f00, 0xbb87, 0x46a1, 0xe804, 0x0, 0x1);
        gbc.writeMem(0xdc51, { 0xcb, 0x56 });
        gbc.writeMem(0xe804, { 0xc3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd245, gbc.sp());
        EXPECT(0xdc53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc51));
        EXPECT(0x56, gbc.readMem(0xdc52));
        EXPECT(0xc3, gbc.readMem(0xe804));
        // CB 56 0060
        gbc.setState(0x90f4, 0x7a90, 0x1270, 0x354f, 0xd62a, 0xdda1, 0x0, 0x1);
        gbc.writeMem(0x90f4, { 0xcb, 0x56 });
        gbc.writeMem(0xdda1, { 0xa2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7a90, gbc.sp());
        EXPECT(0x90f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f4));
        EXPECT(0x56, gbc.readMem(0x90f5));
        EXPECT(0xa2, gbc.readMem(0xdda1));
        // CB 56 0061
        gbc.setState(0x3e5a, 0x598a, 0x9080, 0x205e, 0x1fcf, 0x3fc3, 0x0, 0x0);
        gbc.writeMem(0x3e5a, { 0xcb, 0x56 });
        gbc.writeMem(0x3fc3, { 0x57 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x598a, gbc.sp());
        EXPECT(0x3e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0062
        gbc.setState(0x57d2, 0x446c, 0xc270, 0x9a02, 0xb4fd, 0x3939, 0x0, 0x1);
        gbc.writeMem(0x3939, { 0x38 });
        gbc.writeMem(0x57d2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x446c, gbc.sp());
        EXPECT(0x57d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0064
        gbc.setState(0x6957, 0xe500, 0x72e0, 0x7307, 0xfc48, 0xece8, 0x1, 0x1);
        gbc.writeMem(0x6957, { 0xcb, 0x56 });
        gbc.writeMem(0xece8, { 0x63 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe500, gbc.sp());
        EXPECT(0x6959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xece8));
        // CB 56 0065
        gbc.setState(0xd886, 0xb6d, 0x86e0, 0x1ef0, 0xcc65, 0x42fe, 0x0, 0x1);
        gbc.writeMem(0x42fe, { 0x5e });
        gbc.writeMem(0xd886, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb6d, gbc.sp());
        EXPECT(0xd888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd886));
        EXPECT(0x56, gbc.readMem(0xd887));
        // CB 56 0066
        gbc.setState(0x5718, 0x694c, 0xa130, 0xe82a, 0x5471, 0x44ba, 0x0, 0x0);
        gbc.writeMem(0x44ba, { 0xa });
        gbc.writeMem(0x5718, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x694c, gbc.sp());
        EXPECT(0x571a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0067
        gbc.setState(0xb501, 0x149e, 0xebc0, 0x6c32, 0xace6, 0x4f77, 0x0, 0x1);
        gbc.writeMem(0x4f77, { 0x22 });
        gbc.writeMem(0xb501, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x149e, gbc.sp());
        EXPECT(0xb503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb501));
        EXPECT(0x56, gbc.readMem(0xb502));
        // CB 56 0068
        gbc.setState(0x3058, 0xe09a, 0x5840, 0x3f90, 0xe51e, 0xb022, 0x1, 0x1);
        gbc.writeMem(0x3058, { 0xcb, 0x56 });
        gbc.writeMem(0xb022, { 0xc4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe09a, gbc.sp());
        EXPECT(0x305a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xb022));
        // CB 56 0069
        gbc.setState(0x32c, 0x8816, 0x4900, 0xea33, 0x54c5, 0x8359, 0x0, 0x0);
        gbc.writeMem(0x32c, { 0xcb, 0x56 });
        gbc.writeMem(0x8359, { 0x78 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8816, gbc.sp());
        EXPECT(0x32e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8359));
        // CB 56 006A
        gbc.setState(0xb88e, 0x3c95, 0x44c0, 0x5e6c, 0xcc8e, 0x23ea, 0x1, 0x1);
        gbc.writeMem(0x23ea, { 0xa9 });
        gbc.writeMem(0xb88e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3c95, gbc.sp());
        EXPECT(0xb890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88e));
        EXPECT(0x56, gbc.readMem(0xb88f));
        // CB 56 006B
        gbc.setState(0x7595, 0xbac1, 0x9c10, 0x6876, 0x3e28, 0xd0d6, 0x0, 0x0);
        gbc.writeMem(0x7595, { 0xcb, 0x56 });
        gbc.writeMem(0xd0d6, { 0x2a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbac1, gbc.sp());
        EXPECT(0x7597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xd0d6));
        // CB 56 006C
        gbc.setState(0x2169, 0xb5e5, 0x1d40, 0x82b5, 0xe3be, 0x9f63, 0x1, 0x0);
        gbc.writeMem(0x2169, { 0xcb, 0x56 });
        gbc.writeMem(0x9f63, { 0x4d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb5e5, gbc.sp());
        EXPECT(0x216b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9f63));
        // CB 56 006D
        gbc.setState(0x5dc5, 0xf352, 0x7560, 0x8902, 0x97d4, 0x4e7d, 0x0, 0x1);
        gbc.writeMem(0x4e7d, { 0x95 });
        gbc.writeMem(0x5dc5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf352, gbc.sp());
        EXPECT(0x5dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 006E
        gbc.setState(0x82e9, 0xe284, 0xdc60, 0x6e9d, 0xa4a7, 0x3387, 0x0, 0x1);
        gbc.writeMem(0x3387, { 0x55 });
        gbc.writeMem(0x82e9, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe284, gbc.sp());
        EXPECT(0x82eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e9));
        EXPECT(0x56, gbc.readMem(0x82ea));
        // CB 56 006F
        gbc.setState(0x2dc, 0xb8e8, 0xa420, 0x1835, 0x339, 0x3c1b, 0x1, 0x1);
        gbc.writeMem(0x2dc, { 0xcb, 0x56 });
        gbc.writeMem(0x3c1b, { 0x73 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb8e8, gbc.sp());
        EXPECT(0x2de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0070
        gbc.setState(0x713b, 0xe555, 0xc40, 0x28, 0xdbcd, 0xb439, 0x0, 0x1);
        gbc.writeMem(0x713b, { 0xcb, 0x56 });
        gbc.writeMem(0xb439, { 0xc5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe555, gbc.sp());
        EXPECT(0x713d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb439));
        // CB 56 0071
        gbc.setState(0x6b0c, 0xc4f6, 0xaed0, 0xfb03, 0x733e, 0xa3c5, 0x0, 0x1);
        gbc.writeMem(0x6b0c, { 0xcb, 0x56 });
        gbc.writeMem(0xa3c5, { 0x89 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc4f6, gbc.sp());
        EXPECT(0x6b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa3c5));
        // CB 56 0074
        gbc.setState(0xd2f5, 0xbbc6, 0xfeb0, 0x9099, 0x9410, 0x337b, 0x0, 0x1);
        gbc.writeMem(0x337b, { 0x45 });
        gbc.writeMem(0xd2f5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbbc6, gbc.sp());
        EXPECT(0xd2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f5));
        EXPECT(0x56, gbc.readMem(0xd2f6));
        // CB 56 0075
        gbc.setState(0x1782, 0xd79b, 0x2d50, 0x57d5, 0xe27a, 0x10e6, 0x0, 0x0);
        gbc.writeMem(0x10e6, { 0xb5 });
        gbc.writeMem(0x1782, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd79b, gbc.sp());
        EXPECT(0x1784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0076
        gbc.setState(0x51e, 0x5967, 0x8790, 0x8eb6, 0x226, 0x8704, 0x1, 0x1);
        gbc.writeMem(0x51e, { 0xcb, 0x56 });
        gbc.writeMem(0x8704, { 0xf2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5967, gbc.sp());
        EXPECT(0x520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x8704));
        // CB 56 0077
        gbc.setState(0xb813, 0x92f8, 0x88f0, 0x1531, 0xefca, 0xe51d, 0x0, 0x1);
        gbc.writeMem(0xb813, { 0xcb, 0x56 });
        gbc.writeMem(0xe51d, { 0xb3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x92f8, gbc.sp());
        EXPECT(0xb815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb813));
        EXPECT(0x56, gbc.readMem(0xb814));
        EXPECT(0xb3, gbc.readMem(0xe51d));
        // CB 56 0078
        gbc.setState(0x6b4c, 0x1235, 0x18f0, 0x351c, 0x9495, 0x1cee, 0x0, 0x0);
        gbc.writeMem(0x1cee, { 0x72 });
        gbc.writeMem(0x6b4c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1235, gbc.sp());
        EXPECT(0x6b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0079
        gbc.setState(0x85b1, 0x532a, 0xeff0, 0x217e, 0x2543, 0xf9a8, 0x0, 0x1);
        gbc.writeMem(0x85b1, { 0xcb, 0x56 });
        gbc.writeMem(0xf9a8, { 0x10 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x532a, gbc.sp());
        EXPECT(0x85b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b1));
        EXPECT(0x56, gbc.readMem(0x85b2));
        EXPECT(0x10, gbc.readMem(0xf9a8));
        // CB 56 007A
        gbc.setState(0xc702, 0xa945, 0xc470, 0x9f9c, 0x308c, 0x4ea7, 0x0, 0x1);
        gbc.writeMem(0x4ea7, { 0xad });
        gbc.writeMem(0xc702, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa945, gbc.sp());
        EXPECT(0xc704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc702));
        EXPECT(0x56, gbc.readMem(0xc703));
        // CB 56 007B
        gbc.setState(0x7106, 0xe7ed, 0x7940, 0x8d95, 0x64cc, 0xf2a7, 0x0, 0x1);
        gbc.writeMem(0x7106, { 0xcb, 0x56 });
        gbc.writeMem(0xf2a7, { 0x5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe7ed, gbc.sp());
        EXPECT(0x7108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xf2a7));
        // CB 56 007C
        gbc.setState(0x1fd, 0xac2e, 0xf150, 0xcd62, 0x877e, 0xf380, 0x0, 0x0);
        gbc.writeMem(0x1fd, { 0xcb, 0x56 });
        gbc.writeMem(0xf380, { 0x73 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xac2e, gbc.sp());
        EXPECT(0x1ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xf380));
        // CB 56 007D
        gbc.setState(0x20f6, 0x4d1d, 0x2eb0, 0xd551, 0x3b8f, 0x104b, 0x1, 0x0);
        gbc.writeMem(0x104b, { 0xeb });
        gbc.writeMem(0x20f6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4d1d, gbc.sp());
        EXPECT(0x20f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 007E
        gbc.setState(0x26cb, 0x58da, 0xe330, 0x573d, 0xa432, 0x4676, 0x0, 0x0);
        gbc.writeMem(0x26cb, { 0xcb, 0x56 });
        gbc.writeMem(0x4676, { 0xcb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x58da, gbc.sp());
        EXPECT(0x26cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 007F
        gbc.setState(0x59aa, 0xbf1e, 0x5830, 0xcc35, 0x53c6, 0x5cd4, 0x1, 0x1);
        gbc.writeMem(0x59aa, { 0xcb, 0x56 });
        gbc.writeMem(0x5cd4, { 0x70 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbf1e, gbc.sp());
        EXPECT(0x59ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0080
        gbc.setState(0xaed1, 0x22bd, 0x71d0, 0x30c9, 0xe19, 0xb4d2, 0x1, 0x0);
        gbc.writeMem(0xaed1, { 0xcb, 0x56 });
        gbc.writeMem(0xb4d2, { 0x95 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x22bd, gbc.sp());
        EXPECT(0xaed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed1));
        EXPECT(0x56, gbc.readMem(0xaed2));
        EXPECT(0x95, gbc.readMem(0xb4d2));
        // CB 56 0081
        gbc.setState(0xd633, 0x7ac, 0xaa90, 0x9042, 0x2a2c, 0x6f69, 0x0, 0x1);
        gbc.writeMem(0x6f69, { 0xd2 });
        gbc.writeMem(0xd633, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7ac, gbc.sp());
        EXPECT(0xd635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd633));
        EXPECT(0x56, gbc.readMem(0xd634));
        // CB 56 0082
        gbc.setState(0xa8ba, 0x17f8, 0x1700, 0xc16, 0x93fb, 0xa2a0, 0x0, 0x1);
        gbc.writeMem(0xa2a0, { 0x77 });
        gbc.writeMem(0xa8ba, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x17f8, gbc.sp());
        EXPECT(0xa8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa2a0));
        EXPECT(0xcb, gbc.readMem(0xa8ba));
        EXPECT(0x56, gbc.readMem(0xa8bb));
        // CB 56 0083
        gbc.setState(0x2d8f, 0x8288, 0xbb10, 0x2704, 0xcaa8, 0x95eb, 0x0, 0x1);
        gbc.writeMem(0x2d8f, { 0xcb, 0x56 });
        gbc.writeMem(0x95eb, { 0x19 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8288, gbc.sp());
        EXPECT(0x2d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x95eb));
        // CB 56 0084
        gbc.setState(0x8385, 0x2b16, 0xc8c0, 0xfb62, 0xf91e, 0x967f, 0x1, 0x1);
        gbc.writeMem(0x8385, { 0xcb, 0x56 });
        gbc.writeMem(0x967f, { 0x27 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2b16, gbc.sp());
        EXPECT(0x8387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8385));
        EXPECT(0x56, gbc.readMem(0x8386));
        EXPECT(0x27, gbc.readMem(0x967f));
        // CB 56 0085
        gbc.setState(0x44cc, 0x43ae, 0x7fc0, 0x77a9, 0xc831, 0xf33a, 0x1, 0x0);
        gbc.writeMem(0x44cc, { 0xcb, 0x56 });
        gbc.writeMem(0xf33a, { 0xe4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x43ae, gbc.sp());
        EXPECT(0x44ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xf33a));
        // CB 56 0086
        gbc.setState(0x5966, 0x5aec, 0x9550, 0x67c3, 0x3ac, 0x8e54, 0x0, 0x1);
        gbc.writeMem(0x5966, { 0xcb, 0x56 });
        gbc.writeMem(0x8e54, { 0x4a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5aec, gbc.sp());
        EXPECT(0x5968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x8e54));
        // CB 56 0087
        gbc.setState(0x85bb, 0x6c6c, 0xbb40, 0xf9ae, 0x1703, 0x1910, 0x1, 0x1);
        gbc.writeMem(0x1910, { 0x61 });
        gbc.writeMem(0x85bb, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6c6c, gbc.sp());
        EXPECT(0x85bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85bb));
        EXPECT(0x56, gbc.readMem(0x85bc));
        // CB 56 0088
        gbc.setState(0x86fe, 0xdd86, 0x2cb0, 0xd8a1, 0xd8d2, 0xd71, 0x1, 0x1);
        gbc.writeMem(0xd71, { 0x93 });
        gbc.writeMem(0x86fe, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdd86, gbc.sp());
        EXPECT(0x8700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fe));
        EXPECT(0x56, gbc.readMem(0x86ff));
        // CB 56 0089
        gbc.setState(0x10c9, 0x3680, 0xd90, 0x395f, 0x8616, 0xd87c, 0x0, 0x0);
        gbc.writeMem(0x10c9, { 0xcb, 0x56 });
        gbc.writeMem(0xd87c, { 0x52 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3680, gbc.sp());
        EXPECT(0x10cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd87c));
        // CB 56 008A
        gbc.setState(0x52ac, 0xc11c, 0xa770, 0x7ceb, 0xcc4c, 0xb6bf, 0x0, 0x1);
        gbc.writeMem(0x52ac, { 0xcb, 0x56 });
        gbc.writeMem(0xb6bf, { 0x2d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc11c, gbc.sp());
        EXPECT(0x52ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb6bf));
        // CB 56 008C
        gbc.setState(0x970e, 0xa48c, 0x8c00, 0x19d9, 0x31d1, 0x2e1b, 0x1, 0x1);
        gbc.writeMem(0x2e1b, { 0x4b });
        gbc.writeMem(0x970e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa48c, gbc.sp());
        EXPECT(0x9710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x970e));
        EXPECT(0x56, gbc.readMem(0x970f));
        // CB 56 008D
        gbc.setState(0x78de, 0xb8dc, 0x41b0, 0x7cc7, 0xc48c, 0xfe27, 0x1, 0x0);
        gbc.writeMem(0x78de, { 0xcb, 0x56 });
        gbc.writeMem(0xfe27, { 0x9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb8dc, gbc.sp());
        EXPECT(0x78e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xfe27));
        // CB 56 008E
        gbc.setState(0x4dd0, 0x314a, 0xbd20, 0x11f6, 0x6d91, 0xbb61, 0x1, 0x1);
        gbc.writeMem(0x4dd0, { 0xcb, 0x56 });
        gbc.writeMem(0xbb61, { 0x9e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x314a, gbc.sp());
        EXPECT(0x4dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbb61));
        // CB 56 008F
        gbc.setState(0x9c51, 0x408c, 0x5d10, 0x70c5, 0xfece, 0xe338, 0x1, 0x0);
        gbc.writeMem(0x9c51, { 0xcb, 0x56 });
        gbc.writeMem(0xe338, { 0xd1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x408c, gbc.sp());
        EXPECT(0x9c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c51));
        EXPECT(0x56, gbc.readMem(0x9c52));
        EXPECT(0xd1, gbc.readMem(0xe338));
        // CB 56 0090
        gbc.setState(0x83a5, 0xdab5, 0x6480, 0x1bbb, 0x2ace, 0xc9b1, 0x0, 0x1);
        gbc.writeMem(0x83a5, { 0xcb, 0x56 });
        gbc.writeMem(0xc9b1, { 0xf2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdab5, gbc.sp());
        EXPECT(0x83a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a5));
        EXPECT(0x56, gbc.readMem(0x83a6));
        EXPECT(0xf2, gbc.readMem(0xc9b1));
        // CB 56 0091
        gbc.setState(0xef7a, 0xe359, 0x8960, 0x59a2, 0x31dc, 0x12df, 0x1, 0x1);
        gbc.writeMem(0x12df, { 0xfe });
        gbc.writeMem(0xef7a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe359, gbc.sp());
        EXPECT(0xef7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7a));
        EXPECT(0x56, gbc.readMem(0xef7b));
        // CB 56 0094
        gbc.setState(0xa50f, 0x179e, 0x7df0, 0xbaf, 0xe5f1, 0x1475, 0x1, 0x0);
        gbc.writeMem(0x1475, { 0x66 });
        gbc.writeMem(0xa50f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x179e, gbc.sp());
        EXPECT(0xa511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50f));
        EXPECT(0x56, gbc.readMem(0xa510));
        // CB 56 0095
        gbc.setState(0x3d5b, 0xf965, 0x4d50, 0x2d39, 0x324c, 0x105f, 0x0, 0x0);
        gbc.writeMem(0x105f, { 0x36 });
        gbc.writeMem(0x3d5b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf965, gbc.sp());
        EXPECT(0x3d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0097
        gbc.setState(0x82e5, 0x267c, 0xcc90, 0xdde2, 0x6a1e, 0xac4d, 0x1, 0x1);
        gbc.writeMem(0x82e5, { 0xcb, 0x56 });
        gbc.writeMem(0xac4d, { 0xff });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x267c, gbc.sp());
        EXPECT(0x82e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e5));
        EXPECT(0x56, gbc.readMem(0x82e6));
        EXPECT(0xff, gbc.readMem(0xac4d));
        // CB 56 0098
        gbc.setState(0x4b7a, 0x2503, 0x15a0, 0x60ca, 0xa91d, 0xec89, 0x1, 0x0);
        gbc.writeMem(0x4b7a, { 0xcb, 0x56 });
        gbc.writeMem(0xec89, { 0x61 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2503, gbc.sp());
        EXPECT(0x4b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xec89));
        // CB 56 0099
        gbc.setState(0x202e, 0xc73b, 0x7af0, 0xf4e6, 0x37b8, 0x9f15, 0x0, 0x0);
        gbc.writeMem(0x202e, { 0xcb, 0x56 });
        gbc.writeMem(0x9f15, { 0x40 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc73b, gbc.sp());
        EXPECT(0x2030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9f15));
        // CB 56 009A
        gbc.setState(0xa9f9, 0xd351, 0xa790, 0xaff3, 0x7258, 0xeffc, 0x1, 0x0);
        gbc.writeMem(0xa9f9, { 0xcb, 0x56 });
        gbc.writeMem(0xeffc, { 0xdf });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd351, gbc.sp());
        EXPECT(0xa9fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f9));
        EXPECT(0x56, gbc.readMem(0xa9fa));
        EXPECT(0xdf, gbc.readMem(0xeffc));
        // CB 56 009B
        gbc.setState(0x3cea, 0xfca1, 0xd4d0, 0x2f3d, 0x70f4, 0xf794, 0x0, 0x0);
        gbc.writeMem(0x3cea, { 0xcb, 0x56 });
        gbc.writeMem(0xf794, { 0xd9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfca1, gbc.sp());
        EXPECT(0x3cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xf794));
        // CB 56 009E
        gbc.setState(0xd409, 0x4961, 0x87b0, 0xd9c2, 0x1618, 0xe35c, 0x0, 0x0);
        gbc.writeMem(0xd409, { 0xcb, 0x56 });
        gbc.writeMem(0xe35c, { 0xa3 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4961, gbc.sp());
        EXPECT(0xd40b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd409));
        EXPECT(0x56, gbc.readMem(0xd40a));
        EXPECT(0xa3, gbc.readMem(0xe35c));
        // CB 56 009F
        gbc.setState(0xde79, 0x62fa, 0x9570, 0xe373, 0x1014, 0x99ce, 0x0, 0x0);
        gbc.writeMem(0x99ce, { 0x49 });
        gbc.writeMem(0xde79, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x62fa, gbc.sp());
        EXPECT(0xde7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x99ce));
        EXPECT(0xcb, gbc.readMem(0xde79));
        EXPECT(0x56, gbc.readMem(0xde7a));
        // CB 56 00A0
        gbc.setState(0xdcfe, 0x10c2, 0x9630, 0x4209, 0x19dc, 0x659a, 0x1, 0x1);
        gbc.writeMem(0x659a, { 0x13 });
        gbc.writeMem(0xdcfe, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x10c2, gbc.sp());
        EXPECT(0xdd00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcfe));
        EXPECT(0x56, gbc.readMem(0xdcff));
        // CB 56 00A1
        gbc.setState(0x9ccd, 0xb6c9, 0xe8e0, 0x3eda, 0x9884, 0xb73b, 0x1, 0x1);
        gbc.writeMem(0x9ccd, { 0xcb, 0x56 });
        gbc.writeMem(0xb73b, { 0x88 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb6c9, gbc.sp());
        EXPECT(0x9ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ccd));
        EXPECT(0x56, gbc.readMem(0x9cce));
        EXPECT(0x88, gbc.readMem(0xb73b));
        // CB 56 00A2
        gbc.setState(0x13d1, 0x4e51, 0x4b70, 0x9cd0, 0x42c6, 0xc4a7, 0x1, 0x1);
        gbc.writeMem(0x13d1, { 0xcb, 0x56 });
        gbc.writeMem(0xc4a7, { 0x95 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4e51, gbc.sp());
        EXPECT(0x13d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc4a7));
        // CB 56 00A3
        gbc.setState(0x4571, 0x6cac, 0x7a50, 0xabfc, 0xb9f3, 0x593b, 0x1, 0x1);
        gbc.writeMem(0x4571, { 0xcb, 0x56 });
        gbc.writeMem(0x593b, { 0xc7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6cac, gbc.sp());
        EXPECT(0x4573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 00A4
        gbc.setState(0xbf75, 0x9c05, 0xf6a0, 0x6b99, 0xcf74, 0x173a, 0x0, 0x1);
        gbc.writeMem(0x173a, { 0xb7 });
        gbc.writeMem(0xbf75, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9c05, gbc.sp());
        EXPECT(0xbf77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf75));
        EXPECT(0x56, gbc.readMem(0xbf76));
        // CB 56 00A5
        gbc.setState(0xb306, 0xc0b0, 0x1be0, 0xf408, 0x1da, 0xe158, 0x0, 0x0);
        gbc.writeMem(0xb306, { 0xcb, 0x56 });
        gbc.writeMem(0xe158, { 0x4c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc0b0, gbc.sp());
        EXPECT(0xb308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb306));
        EXPECT(0x56, gbc.readMem(0xb307));
        EXPECT(0x4c, gbc.readMem(0xe158));
        // CB 56 00A6
        gbc.setState(0x2675, 0xe60, 0x7920, 0x3b5d, 0x6e7, 0xa420, 0x0, 0x1);
        gbc.writeMem(0x2675, { 0xcb, 0x56 });
        gbc.writeMem(0xa420, { 0xf5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe60, gbc.sp());
        EXPECT(0x2677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xa420));
        // CB 56 00A7
        gbc.setState(0xc83f, 0xfa2d, 0x55a0, 0x6327, 0x3b8e, 0x6f1d, 0x1, 0x1);
        gbc.writeMem(0x6f1d, { 0x33 });
        gbc.writeMem(0xc83f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfa2d, gbc.sp());
        EXPECT(0xc841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83f));
        EXPECT(0x56, gbc.readMem(0xc840));
        // CB 56 00A8
        gbc.setState(0xedbd, 0xa8a8, 0x9ab0, 0xc195, 0x45df, 0xb332, 0x0, 0x1);
        gbc.writeMem(0xb332, { 0xad });
        gbc.writeMem(0xedbd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa8a8, gbc.sp());
        EXPECT(0xedbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xb332));
        EXPECT(0xcb, gbc.readMem(0xedbd));
        EXPECT(0x56, gbc.readMem(0xedbe));
        // CB 56 00A9
        gbc.setState(0x38e6, 0x8b7f, 0x8d70, 0x242c, 0x2e21, 0x8caf, 0x1, 0x1);
        gbc.writeMem(0x38e6, { 0xcb, 0x56 });
        gbc.writeMem(0x8caf, { 0xa8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8b7f, gbc.sp());
        EXPECT(0x38e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x8caf));
        // CB 56 00AA
        gbc.setState(0x9759, 0xe36c, 0x20c0, 0xecc6, 0x3e2d, 0xcece, 0x0, 0x1);
        gbc.writeMem(0x9759, { 0xcb, 0x56 });
        gbc.writeMem(0xcece, { 0x5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe36c, gbc.sp());
        EXPECT(0x975b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9759));
        EXPECT(0x56, gbc.readMem(0x975a));
        EXPECT(0x5, gbc.readMem(0xcece));
        // CB 56 00AB
        gbc.setState(0x3079, 0x6cba, 0x8db0, 0xe021, 0xaa44, 0x4a34, 0x1, 0x0);
        gbc.writeMem(0x3079, { 0xcb, 0x56 });
        gbc.writeMem(0x4a34, { 0x54 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6cba, gbc.sp());
        EXPECT(0x307b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 00AC
        gbc.setState(0x4cb0, 0x2398, 0xc700, 0xb507, 0x6723, 0xfcbb, 0x0, 0x0);
        gbc.writeMem(0x4cb0, { 0xcb, 0x56 });
        gbc.writeMem(0xfcbb, { 0x2e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2398, gbc.sp());
        EXPECT(0x4cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xfcbb));
        // CB 56 00AD
        gbc.setState(0xd7aa, 0xb8bd, 0xa8a0, 0x4b58, 0x58a6, 0xa005, 0x1, 0x0);
        gbc.writeMem(0xa005, { 0xd6 });
        gbc.writeMem(0xd7aa, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb8bd, gbc.sp());
        EXPECT(0xd7ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa005));
        EXPECT(0xcb, gbc.readMem(0xd7aa));
        EXPECT(0x56, gbc.readMem(0xd7ab));
        // CB 56 00AE
        gbc.setState(0xb18, 0x8bc0, 0x5990, 0xd7f6, 0x6715, 0x15d9, 0x1, 0x1);
        gbc.writeMem(0xb18, { 0xcb, 0x56 });
        gbc.writeMem(0x15d9, { 0x60 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8bc0, gbc.sp());
        EXPECT(0xb1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 00AF
        gbc.setState(0xdb55, 0x840e, 0x72c0, 0x25a1, 0x7905, 0xaca8, 0x0, 0x0);
        gbc.writeMem(0xaca8, { 0x27 });
        gbc.writeMem(0xdb55, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x840e, gbc.sp());
        EXPECT(0xdb57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xaca8));
        EXPECT(0xcb, gbc.readMem(0xdb55));
        EXPECT(0x56, gbc.readMem(0xdb56));
        // CB 56 00B0
        gbc.setState(0x18a5, 0xabd3, 0x9910, 0xa28b, 0xb45a, 0xc1f5, 0x1, 0x0);
        gbc.writeMem(0x18a5, { 0xcb, 0x56 });
        gbc.writeMem(0xc1f5, { 0xe0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xabd3, gbc.sp());
        EXPECT(0x18a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc1f5));
        // CB 56 00B1
        gbc.setState(0x4976, 0xbe88, 0x3a20, 0xf72a, 0xba69, 0x55f5, 0x0, 0x1);
        gbc.writeMem(0x4976, { 0xcb, 0x56 });
        gbc.writeMem(0x55f5, { 0x81 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbe88, gbc.sp());
        EXPECT(0x4978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 00B2
        gbc.setState(0x61f8, 0xb058, 0xb4b0, 0xda24, 0x614, 0xef, 0x0, 0x1);
        gbc.writeMem(0xef, { 0x40 });
        gbc.writeMem(0x61f8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb058, gbc.sp());
        EXPECT(0x61fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 00B3
        gbc.setState(0xa442, 0x6673, 0xc520, 0xc2, 0xd27e, 0x322b, 0x1, 0x0);
        gbc.writeMem(0x322b, { 0x32 });
        gbc.writeMem(0xa442, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6673, gbc.sp());
        EXPECT(0xa444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa442));
        EXPECT(0x56, gbc.readMem(0xa443));
        // CB 56 00B4
        gbc.setState(0x3b8e, 0x4570, 0x6820, 0x67f4, 0xcd40, 0x9a27, 0x0, 0x1);
        gbc.writeMem(0x3b8e, { 0xcb, 0x56 });
        gbc.writeMem(0x9a27, { 0xf4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4570, gbc.sp());
        EXPECT(0x3b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x9a27));
        // CB 56 00B5
        gbc.setState(0x42df, 0xe013, 0x7d0, 0x6310, 0x420a, 0x9479, 0x0, 0x0);
        gbc.writeMem(0x42df, { 0xcb, 0x56 });
        gbc.writeMem(0x9479, { 0x59 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe013, gbc.sp());
        EXPECT(0x42e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x9479));
        // CB 56 00B6
        gbc.setState(0x965, 0x3a9a, 0xc700, 0x48b6, 0x97b9, 0x3a04, 0x1, 0x0);
        gbc.writeMem(0x965, { 0xcb, 0x56 });
        gbc.writeMem(0x3a04, { 0x26 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3a9a, gbc.sp());
        EXPECT(0x967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 00B7
        gbc.setState(0x33b4, 0x3ee7, 0xc200, 0xd2f5, 0x1044, 0xe8fb, 0x0, 0x0);
        gbc.writeMem(0x33b4, { 0xcb, 0x56 });
        gbc.writeMem(0xe8fb, { 0x49 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3ee7, gbc.sp());
        EXPECT(0x33b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe8fb));
        // CB 56 00B9
        gbc.setState(0xdd88, 0x1109, 0x4ef0, 0x61b2, 0xbbb3, 0xc64f, 0x0, 0x0);
        gbc.writeMem(0xc64f, { 0x61 });
        gbc.writeMem(0xdd88, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1109, gbc.sp());
        EXPECT(0xdd8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc64f));
        EXPECT(0xcb, gbc.readMem(0xdd88));
        EXPECT(0x56, gbc.readMem(0xdd89));
        // CB 56 00BA
        gbc.setState(0x8e7a, 0x21c5, 0x82c0, 0x387a, 0x6b67, 0xa26b, 0x0, 0x0);
        gbc.writeMem(0x8e7a, { 0xcb, 0x56 });
        gbc.writeMem(0xa26b, { 0xa2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x21c5, gbc.sp());
        EXPECT(0x8e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e7a));
        EXPECT(0x56, gbc.readMem(0x8e7b));
        EXPECT(0xa2, gbc.readMem(0xa26b));
        // CB 56 00BB
        gbc.setState(0x846b, 0x9264, 0x17c0, 0x1831, 0x76db, 0x5de6, 0x0, 0x1);
        gbc.writeMem(0x5de6, { 0x53 });
        gbc.writeMem(0x846b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9264, gbc.sp());
        EXPECT(0x846d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x846b));
        EXPECT(0x56, gbc.readMem(0x846c));
        // CB 56 00BC
        gbc.setState(0xa1a7, 0x59ca, 0x2de0, 0x1d58, 0x856c, 0xdfe0, 0x0, 0x0);
        gbc.writeMem(0xa1a7, { 0xcb, 0x56 });
        gbc.writeMem(0xdfe0, { 0xf2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x59ca, gbc.sp());
        EXPECT(0xa1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a7));
        EXPECT(0x56, gbc.readMem(0xa1a8));
        EXPECT(0xf2, gbc.readMem(0xdfe0));
        // CB 56 00BD
        gbc.setState(0xd12c, 0x3ccb, 0x4230, 0x1ae6, 0x4af0, 0x91d9, 0x1, 0x1);
        gbc.writeMem(0x91d9, { 0x17 });
        gbc.writeMem(0xd12c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3ccb, gbc.sp());
        EXPECT(0xd12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x91d9));
        EXPECT(0xcb, gbc.readMem(0xd12c));
        EXPECT(0x56, gbc.readMem(0xd12d));
        // CB 56 00BE
        gbc.setState(0x2c2f, 0x9d98, 0x98f0, 0xd6ce, 0x53d8, 0xfe9, 0x0, 0x0);
        gbc.writeMem(0xfe9, { 0x3 });
        gbc.writeMem(0x2c2f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9d98, gbc.sp());
        EXPECT(0x2c31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 00BF
        gbc.setState(0xdb21, 0x649a, 0xd440, 0xa7fd, 0x6714, 0x44ab, 0x1, 0x0);
        gbc.writeMem(0x44ab, { 0x37 });
        gbc.writeMem(0xdb21, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x649a, gbc.sp());
        EXPECT(0xdb23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb21));
        EXPECT(0x56, gbc.readMem(0xdb22));
        // CB 56 00C1
        gbc.setState(0x8303, 0xf186, 0xa1c0, 0xb2fb, 0x26e9, 0xd42a, 0x0, 0x0);
        gbc.writeMem(0x8303, { 0xcb, 0x56 });
        gbc.writeMem(0xd42a, { 0x97 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf186, gbc.sp());
        EXPECT(0x8305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8303));
        EXPECT(0x56, gbc.readMem(0x8304));
        EXPECT(0x97, gbc.readMem(0xd42a));
        // CB 56 00C2
        gbc.setState(0xda90, 0xf04d, 0x52e0, 0x9be8, 0x4ca5, 0x7283, 0x1, 0x0);
        gbc.writeMem(0x7283, { 0x1a });
        gbc.writeMem(0xda90, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf04d, gbc.sp());
        EXPECT(0xda92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda90));
        EXPECT(0x56, gbc.readMem(0xda91));
        // CB 56 00C3
        gbc.setState(0x50b8, 0xa386, 0x9440, 0xdc85, 0x4e8c, 0x2598, 0x0, 0x0);
        gbc.writeMem(0x2598, { 0x59 });
        gbc.writeMem(0x50b8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa386, gbc.sp());
        EXPECT(0x50ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 00C4
        gbc.setState(0x3f48, 0x6662, 0x7670, 0x5452, 0xbff0, 0xd45a, 0x0, 0x1);
        gbc.writeMem(0x3f48, { 0xcb, 0x56 });
        gbc.writeMem(0xd45a, { 0x58 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6662, gbc.sp());
        EXPECT(0x3f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd45a));
        // CB 56 00C5
        gbc.setState(0x3109, 0x3190, 0x9530, 0x83a1, 0x373e, 0xa027, 0x1, 0x0);
        gbc.writeMem(0x3109, { 0xcb, 0x56 });
        gbc.writeMem(0xa027, { 0x1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3190, gbc.sp());
        EXPECT(0x310b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xa027));
        // CB 56 00C6
        gbc.setState(0xb2c5, 0xba1f, 0x34e0, 0xadc6, 0xedb, 0x388f, 0x1, 0x1);
        gbc.writeMem(0x388f, { 0x1f });
        gbc.writeMem(0xb2c5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xba1f, gbc.sp());
        EXPECT(0xb2c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2c5));
        EXPECT(0x56, gbc.readMem(0xb2c6));
        // CB 56 00C7
        gbc.setState(0x17d4, 0xb11f, 0xc5d0, 0xdbc5, 0xae9d, 0x75da, 0x1, 0x0);
        gbc.writeMem(0x17d4, { 0xcb, 0x56 });
        gbc.writeMem(0x75da, { 0x2c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb11f, gbc.sp());
        EXPECT(0x17d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 00C8
        gbc.setState(0x93e3, 0x8ddf, 0x7c10, 0x4531, 0x89e9, 0xbced, 0x0, 0x1);
        gbc.writeMem(0x93e3, { 0xcb, 0x56 });
        gbc.writeMem(0xbced, { 0xbb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8ddf, gbc.sp());
        EXPECT(0x93e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e3));
        EXPECT(0x56, gbc.readMem(0x93e4));
        EXPECT(0xbb, gbc.readMem(0xbced));
        // CB 56 00C9
        gbc.setState(0xbe22, 0x362e, 0x6210, 0x8ab2, 0xdeb0, 0x3963, 0x0, 0x1);
        gbc.writeMem(0x3963, { 0xd4 });
        gbc.writeMem(0xbe22, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x362e, gbc.sp());
        EXPECT(0xbe24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe22));
        EXPECT(0x56, gbc.readMem(0xbe23));
        // CB 56 00CA
        gbc.setState(0xbeaf, 0xc433, 0x3de0, 0x4dbf, 0x525f, 0xab0a, 0x1, 0x0);
        gbc.writeMem(0xab0a, { 0x42 });
        gbc.writeMem(0xbeaf, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc433, gbc.sp());
        EXPECT(0xbeb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xab0a));
        EXPECT(0xcb, gbc.readMem(0xbeaf));
        EXPECT(0x56, gbc.readMem(0xbeb0));
        // CB 56 00CB
        gbc.setState(0x4116, 0xf4c4, 0x5770, 0x5fb5, 0xbcec, 0xa8fa, 0x1, 0x1);
        gbc.writeMem(0x4116, { 0xcb, 0x56 });
        gbc.writeMem(0xa8fa, { 0x43 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf4c4, gbc.sp());
        EXPECT(0x4118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa8fa));
        // CB 56 00CC
        gbc.setState(0x9ba, 0x3ad8, 0xc970, 0xbf4a, 0xdfe0, 0x29c2, 0x0, 0x0);
        gbc.writeMem(0x9ba, { 0xcb, 0x56 });
        gbc.writeMem(0x29c2, { 0xce });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3ad8, gbc.sp());
        EXPECT(0x9bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 00CE
        gbc.setState(0xcf69, 0x1f21, 0x3dd0, 0x9b74, 0xcecc, 0x3e51, 0x1, 0x0);
        gbc.writeMem(0x3e51, { 0xf7 });
        gbc.writeMem(0xcf69, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1f21, gbc.sp());
        EXPECT(0xcf6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf69));
        EXPECT(0x56, gbc.readMem(0xcf6a));
        // CB 56 00CF
        gbc.setState(0x4939, 0xfb36, 0xcca0, 0x984f, 0x7739, 0x8ac8, 0x1, 0x0);
        gbc.writeMem(0x4939, { 0xcb, 0x56 });
        gbc.writeMem(0x8ac8, { 0xee });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfb36, gbc.sp());
        EXPECT(0x493b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x8ac8));
        // CB 56 00D0
        gbc.setState(0x1553, 0x6968, 0xe870, 0x9dc0, 0xc09e, 0xdea7, 0x1, 0x0);
        gbc.writeMem(0x1553, { 0xcb, 0x56 });
        gbc.writeMem(0xdea7, { 0xc0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6968, gbc.sp());
        EXPECT(0x1555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xdea7));
        // CB 56 00D1
        gbc.setState(0x3f4b, 0x6c80, 0xec20, 0xcd20, 0xb40, 0x7b18, 0x0, 0x0);
        gbc.writeMem(0x3f4b, { 0xcb, 0x56 });
        gbc.writeMem(0x7b18, { 0x2f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6c80, gbc.sp());
        EXPECT(0x3f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 00D2
        gbc.setState(0x5a63, 0x6762, 0xca30, 0x19a8, 0x2826, 0xadf2, 0x0, 0x0);
        gbc.writeMem(0x5a63, { 0xcb, 0x56 });
        gbc.writeMem(0xadf2, { 0x7b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6762, gbc.sp());
        EXPECT(0x5a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xadf2));
        // CB 56 00D3
        gbc.setState(0x82a5, 0xcf0a, 0xa4f0, 0x3f2c, 0xe9d3, 0xfd59, 0x0, 0x1);
        gbc.writeMem(0x82a5, { 0xcb, 0x56 });
        gbc.writeMem(0xfd59, { 0x92 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcf0a, gbc.sp());
        EXPECT(0x82a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a5));
        EXPECT(0x56, gbc.readMem(0x82a6));
        EXPECT(0x92, gbc.readMem(0xfd59));
        // CB 56 00D4
        gbc.setState(0x1abf, 0x812e, 0x5c90, 0xce89, 0x90e4, 0x6170, 0x0, 0x1);
        gbc.writeMem(0x1abf, { 0xcb, 0x56 });
        gbc.writeMem(0x6170, { 0x85 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x812e, gbc.sp());
        EXPECT(0x1ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 00D5
        gbc.setState(0xe2bd, 0xe3d0, 0xe130, 0x2177, 0xc455, 0xbca6, 0x0, 0x1);
        gbc.writeMem(0xbca6, { 0x9d });
        gbc.writeMem(0xe2bd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe3d0, gbc.sp());
        EXPECT(0xe2bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbca6));
        EXPECT(0xcb, gbc.readMem(0xe2bd));
        EXPECT(0x56, gbc.readMem(0xe2be));
        // CB 56 00D6
        gbc.setState(0xaf5f, 0x19e3, 0x94e0, 0xc86a, 0x759a, 0xc046, 0x0, 0x1);
        gbc.writeMem(0xaf5f, { 0xcb, 0x56 });
        gbc.writeMem(0xc046, { 0x7d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x19e3, gbc.sp());
        EXPECT(0xaf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5f));
        EXPECT(0x56, gbc.readMem(0xaf60));
        EXPECT(0x7d, gbc.readMem(0xc046));
        // CB 56 00D7
        gbc.setState(0x782b, 0x6992, 0x80e0, 0x6aae, 0xa6f4, 0x52c7, 0x1, 0x0);
        gbc.writeMem(0x52c7, { 0x44 });
        gbc.writeMem(0x782b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6992, gbc.sp());
        EXPECT(0x782d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 00D8
        gbc.setState(0x21f0, 0xa7a3, 0x8c90, 0x36de, 0x1d97, 0xa988, 0x0, 0x1);
        gbc.writeMem(0x21f0, { 0xcb, 0x56 });
        gbc.writeMem(0xa988, { 0xb5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa7a3, gbc.sp());
        EXPECT(0x21f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa988));
        // CB 56 00D9
        gbc.setState(0x25f, 0x478, 0x4f60, 0x3d93, 0x248c, 0x6d92, 0x1, 0x1);
        gbc.writeMem(0x25f, { 0xcb, 0x56 });
        gbc.writeMem(0x6d92, { 0x66 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x478, gbc.sp());
        EXPECT(0x261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 00DA
        gbc.setState(0xde68, 0x93a1, 0x91c0, 0x436d, 0x56cd, 0x1479, 0x1, 0x0);
        gbc.writeMem(0x1479, { 0x4f });
        gbc.writeMem(0xde68, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x93a1, gbc.sp());
        EXPECT(0xde6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde68));
        EXPECT(0x56, gbc.readMem(0xde69));
        // CB 56 00DB
        gbc.setState(0x1df1, 0x262, 0x4c60, 0xe87a, 0x4fd0, 0xa2f7, 0x1, 0x0);
        gbc.writeMem(0x1df1, { 0xcb, 0x56 });
        gbc.writeMem(0xa2f7, { 0xd7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x262, gbc.sp());
        EXPECT(0x1df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xa2f7));
        // CB 56 00DC
        gbc.setState(0x4571, 0x6a81, 0xbe70, 0x3448, 0x742c, 0x605b, 0x1, 0x1);
        gbc.writeMem(0x4571, { 0xcb, 0x56 });
        gbc.writeMem(0x605b, { 0x3d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6a81, gbc.sp());
        EXPECT(0x4573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 00DD
        gbc.setState(0xc00, 0x2af4, 0x4700, 0x261, 0xf10b, 0x18bf, 0x0, 0x0);
        gbc.writeMem(0xc00, { 0xcb, 0x56 });
        gbc.writeMem(0x18bf, { 0xcd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2af4, gbc.sp());
        EXPECT(0xc02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 00DE
        gbc.setState(0x4ad5, 0x2850, 0xa500, 0x323b, 0xc352, 0xebee, 0x0, 0x1);
        gbc.writeMem(0x4ad5, { 0xcb, 0x56 });
        gbc.writeMem(0xebee, { 0xb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2850, gbc.sp());
        EXPECT(0x4ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xebee));
        // CB 56 00DF
        gbc.setState(0x11ed, 0xe852, 0x640, 0x4ce7, 0xcdfc, 0x20b2, 0x0, 0x1);
        gbc.writeMem(0x11ed, { 0xcb, 0x56 });
        gbc.writeMem(0x20b2, { 0xe });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe852, gbc.sp());
        EXPECT(0x11ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 00E0
        gbc.setState(0xcef3, 0x6a71, 0xb5e0, 0x8e62, 0x6804, 0x572c, 0x1, 0x0);
        gbc.writeMem(0x572c, { 0xdc });
        gbc.writeMem(0xcef3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6a71, gbc.sp());
        EXPECT(0xcef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef3));
        EXPECT(0x56, gbc.readMem(0xcef4));
        // CB 56 00E1
        gbc.setState(0xb1b5, 0xde01, 0x5000, 0xb384, 0x2922, 0xe26a, 0x1, 0x1);
        gbc.writeMem(0xb1b5, { 0xcb, 0x56 });
        gbc.writeMem(0xe26a, { 0x6b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xde01, gbc.sp());
        EXPECT(0xb1b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b5));
        EXPECT(0x56, gbc.readMem(0xb1b6));
        EXPECT(0x6b, gbc.readMem(0xe26a));
        // CB 56 00E2
        gbc.setState(0x9da0, 0x251, 0xffa0, 0xaf66, 0x7c7d, 0xabd1, 0x0, 0x0);
        gbc.writeMem(0x9da0, { 0xcb, 0x56 });
        gbc.writeMem(0xabd1, { 0xe3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x251, gbc.sp());
        EXPECT(0x9da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da0));
        EXPECT(0x56, gbc.readMem(0x9da1));
        EXPECT(0xe3, gbc.readMem(0xabd1));
        // CB 56 00E3
        gbc.setState(0xca68, 0xde06, 0xdff0, 0x74d6, 0xc799, 0xbbb6, 0x1, 0x0);
        gbc.writeMem(0xbbb6, { 0x3e });
        gbc.writeMem(0xca68, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xde06, gbc.sp());
        EXPECT(0xca6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbbb6));
        EXPECT(0xcb, gbc.readMem(0xca68));
        EXPECT(0x56, gbc.readMem(0xca69));
        // CB 56 00E4
        gbc.setState(0x9d29, 0x2d02, 0xbe80, 0x15bb, 0xa427, 0x8e4b, 0x1, 0x0);
        gbc.writeMem(0x8e4b, { 0xf });
        gbc.writeMem(0x9d29, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2d02, gbc.sp());
        EXPECT(0x9d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x8e4b));
        EXPECT(0xcb, gbc.readMem(0x9d29));
        EXPECT(0x56, gbc.readMem(0x9d2a));
        // CB 56 00E5
        gbc.setState(0xe668, 0x1425, 0x4e60, 0x47c2, 0x9df0, 0xe634, 0x1, 0x0);
        gbc.writeMem(0xe634, { 0x66 });
        gbc.writeMem(0xe668, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1425, gbc.sp());
        EXPECT(0xe66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe634));
        EXPECT(0xcb, gbc.readMem(0xe668));
        EXPECT(0x56, gbc.readMem(0xe669));
        // CB 56 00E7
        gbc.setState(0xce85, 0xa37f, 0x7e50, 0x5055, 0x7916, 0xfafe, 0x0, 0x1);
        gbc.writeMem(0xce85, { 0xcb, 0x56 });
        gbc.writeMem(0xfafe, { 0xdc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa37f, gbc.sp());
        EXPECT(0xce87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce85));
        EXPECT(0x56, gbc.readMem(0xce86));
        EXPECT(0xdc, gbc.readMem(0xfafe));
        // CB 56 00E8
        gbc.setState(0xee4a, 0x5072, 0xca20, 0x9b7f, 0xe1cb, 0x3c8d, 0x0, 0x0);
        gbc.writeMem(0x3c8d, { 0x75 });
        gbc.writeMem(0xee4a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5072, gbc.sp());
        EXPECT(0xee4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee4a));
        EXPECT(0x56, gbc.readMem(0xee4b));
        // CB 56 00E9
        gbc.setState(0x44e7, 0x31c4, 0x3f40, 0x7e0f, 0x836d, 0x4431, 0x0, 0x0);
        gbc.writeMem(0x4431, { 0x99 });
        gbc.writeMem(0x44e7, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x31c4, gbc.sp());
        EXPECT(0x44e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 00EA
        gbc.setState(0x10c, 0x83ff, 0xf280, 0xf4ca, 0xc430, 0xc403, 0x1, 0x0);
        gbc.writeMem(0x10c, { 0xcb, 0x56 });
        gbc.writeMem(0xc403, { 0xd0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x83ff, gbc.sp());
        EXPECT(0x10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc403));
        // CB 56 00EB
        gbc.setState(0xd891, 0x770b, 0xb630, 0x868b, 0x7acb, 0x5837, 0x0, 0x1);
        gbc.writeMem(0x5837, { 0x5f });
        gbc.writeMem(0xd891, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x770b, gbc.sp());
        EXPECT(0xd893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd891));
        EXPECT(0x56, gbc.readMem(0xd892));
        // CB 56 00EC
        gbc.setState(0xbe0d, 0xfe1e, 0x2ea0, 0xa2fa, 0x1395, 0x76a, 0x0, 0x0);
        gbc.writeMem(0x76a, { 0xf });
        gbc.writeMem(0xbe0d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfe1e, gbc.sp());
        EXPECT(0xbe0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe0d));
        EXPECT(0x56, gbc.readMem(0xbe0e));
        // CB 56 00ED
        gbc.setState(0x44d0, 0x6ff8, 0x6760, 0x27f3, 0x406a, 0x7dde, 0x0, 0x0);
        gbc.writeMem(0x44d0, { 0xcb, 0x56 });
        gbc.writeMem(0x7dde, { 0x48 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6ff8, gbc.sp());
        EXPECT(0x44d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 00EE
        gbc.setState(0x468, 0x32fa, 0x8110, 0x6864, 0x52, 0xe239, 0x0, 0x0);
        gbc.writeMem(0x468, { 0xcb, 0x56 });
        gbc.writeMem(0xe239, { 0x1f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x32fa, gbc.sp());
        EXPECT(0x46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xe239));
        // CB 56 00EF
        gbc.setState(0x2216, 0x8d95, 0x8d80, 0x4b8e, 0x62c3, 0xf665, 0x0, 0x0);
        gbc.writeMem(0x2216, { 0xcb, 0x56 });
        gbc.writeMem(0xf665, { 0x95 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8d95, gbc.sp());
        EXPECT(0x2218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xf665));
        // CB 56 00F0
        gbc.setState(0x6e3a, 0x5c08, 0x5bd0, 0xa295, 0x7f93, 0xc789, 0x0, 0x1);
        gbc.writeMem(0x6e3a, { 0xcb, 0x56 });
        gbc.writeMem(0xc789, { 0xf0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5c08, gbc.sp());
        EXPECT(0x6e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc789));
        // CB 56 00F1
        gbc.setState(0xdef0, 0x1274, 0x8e10, 0xc1ac, 0xeb25, 0xf28f, 0x1, 0x1);
        gbc.writeMem(0xdef0, { 0xcb, 0x56 });
        gbc.writeMem(0xf28f, { 0x7a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1274, gbc.sp());
        EXPECT(0xdef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef0));
        EXPECT(0x56, gbc.readMem(0xdef1));
        EXPECT(0x7a, gbc.readMem(0xf28f));
        // CB 56 00F2
        gbc.setState(0xd5ff, 0x12ad, 0x25d0, 0x8e90, 0x608f, 0xc7ef, 0x0, 0x1);
        gbc.writeMem(0xc7ef, { 0x2f });
        gbc.writeMem(0xd5ff, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x12ad, gbc.sp());
        EXPECT(0xd601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc7ef));
        EXPECT(0xcb, gbc.readMem(0xd5ff));
        EXPECT(0x56, gbc.readMem(0xd600));
        // CB 56 00F3
        gbc.setState(0x2a87, 0x88c1, 0xcbc0, 0x1dbe, 0x5f85, 0x51dc, 0x0, 0x1);
        gbc.writeMem(0x2a87, { 0xcb, 0x56 });
        gbc.writeMem(0x51dc, { 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x88c1, gbc.sp());
        EXPECT(0x2a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 00F4
        gbc.setState(0xbb43, 0xc985, 0x9940, 0x70f, 0xf341, 0x12a7, 0x1, 0x1);
        gbc.writeMem(0x12a7, { 0x84 });
        gbc.writeMem(0xbb43, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc985, gbc.sp());
        EXPECT(0xbb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb43));
        EXPECT(0x56, gbc.readMem(0xbb44));
        // CB 56 00F5
        gbc.setState(0x17ea, 0x8495, 0xa550, 0x745, 0xb56f, 0xcf5b, 0x0, 0x0);
        gbc.writeMem(0x17ea, { 0xcb, 0x56 });
        gbc.writeMem(0xcf5b, { 0xec });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8495, gbc.sp());
        EXPECT(0x17ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xcf5b));
        // CB 56 00F6
        gbc.setState(0x5b43, 0x7e8, 0x1660, 0xc181, 0x1026, 0xb8f5, 0x1, 0x1);
        gbc.writeMem(0x5b43, { 0xcb, 0x56 });
        gbc.writeMem(0xb8f5, { 0xb7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7e8, gbc.sp());
        EXPECT(0x5b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb8f5));
        // CB 56 00F7
        gbc.setState(0x7c16, 0x4eed, 0xf840, 0x62bb, 0x591, 0xb2d2, 0x1, 0x0);
        gbc.writeMem(0x7c16, { 0xcb, 0x56 });
        gbc.writeMem(0xb2d2, { 0xe8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4eed, gbc.sp());
        EXPECT(0x7c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xb2d2));
        // CB 56 00F8
        gbc.setState(0x7c63, 0xae6, 0x6b60, 0xda6f, 0x7519, 0x3c67, 0x0, 0x0);
        gbc.writeMem(0x3c67, { 0x9a });
        gbc.writeMem(0x7c63, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xae6, gbc.sp());
        EXPECT(0x7c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 00F9
        gbc.setState(0x569c, 0x32f9, 0xd500, 0x6aa8, 0xf7d9, 0xfd96, 0x1, 0x1);
        gbc.writeMem(0x569c, { 0xcb, 0x56 });
        gbc.writeMem(0xfd96, { 0xe1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x32f9, gbc.sp());
        EXPECT(0x569e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xfd96));
        // CB 56 00FA
        gbc.setState(0x6c6a, 0x6ec3, 0xa6a0, 0xf50a, 0x365a, 0x3661, 0x1, 0x1);
        gbc.writeMem(0x3661, { 0xfc });
        gbc.writeMem(0x6c6a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6ec3, gbc.sp());
        EXPECT(0x6c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 00FB
        gbc.setState(0x4bd9, 0x155b, 0x520, 0xf4df, 0x8062, 0xd22c, 0x1, 0x1);
        gbc.writeMem(0x4bd9, { 0xcb, 0x56 });
        gbc.writeMem(0xd22c, { 0x8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x155b, gbc.sp());
        EXPECT(0x4bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xd22c));
        // CB 56 00FC
        gbc.setState(0xd331, 0x522a, 0x5c50, 0x5870, 0x3819, 0x9b57, 0x0, 0x0);
        gbc.writeMem(0x9b57, { 0x9e });
        gbc.writeMem(0xd331, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x522a, gbc.sp());
        EXPECT(0xd333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9b57));
        EXPECT(0xcb, gbc.readMem(0xd331));
        EXPECT(0x56, gbc.readMem(0xd332));
        // CB 56 00FD
        gbc.setState(0xa88d, 0x47c6, 0x9120, 0xf661, 0x8306, 0x5293, 0x1, 0x1);
        gbc.writeMem(0x5293, { 0x48 });
        gbc.writeMem(0xa88d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x47c6, gbc.sp());
        EXPECT(0xa88f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88d));
        EXPECT(0x56, gbc.readMem(0xa88e));
        // CB 56 00FE
        gbc.setState(0xe47, 0x9cd8, 0x97c0, 0x8ae2, 0x5133, 0x44a8, 0x0, 0x0);
        gbc.writeMem(0xe47, { 0xcb, 0x56 });
        gbc.writeMem(0x44a8, { 0x84 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9cd8, gbc.sp());
        EXPECT(0xe49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 00FF
        gbc.setState(0xa005, 0x92ed, 0xa780, 0x1889, 0x7694, 0xbe63, 0x0, 0x1);
        gbc.writeMem(0xa005, { 0xcb, 0x56 });
        gbc.writeMem(0xbe63, { 0x48 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x92ed, gbc.sp());
        EXPECT(0xa007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa005));
        EXPECT(0x56, gbc.readMem(0xa006));
        EXPECT(0x48, gbc.readMem(0xbe63));
        // CB 56 0100
        gbc.setState(0x365e, 0x75ae, 0xe6c0, 0xdbe4, 0x5104, 0x624b, 0x1, 0x1);
        gbc.writeMem(0x365e, { 0xcb, 0x56 });
        gbc.writeMem(0x624b, { 0xa7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x75ae, gbc.sp());
        EXPECT(0x3660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0102
        gbc.setState(0xd689, 0x9635, 0x4400, 0x4b71, 0x8ae8, 0xd907, 0x1, 0x0);
        gbc.writeMem(0xd689, { 0xcb, 0x56 });
        gbc.writeMem(0xd907, { 0x8c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9635, gbc.sp());
        EXPECT(0xd68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd689));
        EXPECT(0x56, gbc.readMem(0xd68a));
        EXPECT(0x8c, gbc.readMem(0xd907));
        // CB 56 0103
        gbc.setState(0xe3fc, 0xf891, 0x6b90, 0xf719, 0xb674, 0x9143, 0x0, 0x1);
        gbc.writeMem(0x9143, { 0xeb });
        gbc.writeMem(0xe3fc, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf891, gbc.sp());
        EXPECT(0xe3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x9143));
        EXPECT(0xcb, gbc.readMem(0xe3fc));
        EXPECT(0x56, gbc.readMem(0xe3fd));
        // CB 56 0106
        gbc.setState(0x3cd5, 0x795f, 0xc1e0, 0xd403, 0x1f29, 0x8289, 0x1, 0x0);
        gbc.writeMem(0x3cd5, { 0xcb, 0x56 });
        gbc.writeMem(0x8289, { 0xf7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x795f, gbc.sp());
        EXPECT(0x3cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8289));
        // CB 56 0107
        gbc.setState(0xc8b3, 0x892b, 0xe040, 0xee62, 0x2aad, 0x8924, 0x0, 0x1);
        gbc.writeMem(0x8924, { 0x37 });
        gbc.writeMem(0xc8b3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x892b, gbc.sp());
        EXPECT(0xc8b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8924));
        EXPECT(0xcb, gbc.readMem(0xc8b3));
        EXPECT(0x56, gbc.readMem(0xc8b4));
        // CB 56 0108
        gbc.setState(0x8f90, 0xf06, 0xb350, 0xf6c3, 0xff38, 0x6809, 0x0, 0x0);
        gbc.writeMem(0x6809, { 0x61 });
        gbc.writeMem(0x8f90, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf06, gbc.sp());
        EXPECT(0x8f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f90));
        EXPECT(0x56, gbc.readMem(0x8f91));
        // CB 56 0109
        gbc.setState(0x9764, 0xe43d, 0x5930, 0xe045, 0xbaa1, 0x6a37, 0x0, 0x0);
        gbc.writeMem(0x6a37, { 0x8b });
        gbc.writeMem(0x9764, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe43d, gbc.sp());
        EXPECT(0x9766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9764));
        EXPECT(0x56, gbc.readMem(0x9765));
        // CB 56 010A
        gbc.setState(0xcbba, 0xed31, 0x44f0, 0x2fc8, 0xbe36, 0x5a12, 0x1, 0x1);
        gbc.writeMem(0x5a12, { 0x3f });
        gbc.writeMem(0xcbba, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xed31, gbc.sp());
        EXPECT(0xcbbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbba));
        EXPECT(0x56, gbc.readMem(0xcbbb));
        // CB 56 010B
        gbc.setState(0x25f7, 0xf993, 0x2c40, 0x2922, 0x60be, 0xc33c, 0x0, 0x1);
        gbc.writeMem(0x25f7, { 0xcb, 0x56 });
        gbc.writeMem(0xc33c, { 0xf2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf993, gbc.sp());
        EXPECT(0x25f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xc33c));
        // CB 56 010D
        gbc.setState(0x5e8c, 0x283b, 0x82d0, 0x917b, 0xbcd0, 0xf754, 0x0, 0x1);
        gbc.writeMem(0x5e8c, { 0xcb, 0x56 });
        gbc.writeMem(0xf754, { 0xfb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x283b, gbc.sp());
        EXPECT(0x5e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xf754));
        // CB 56 010F
        gbc.setState(0x7726, 0xb1a7, 0x24f0, 0xc5c1, 0x8dfe, 0x2912, 0x1, 0x0);
        gbc.writeMem(0x2912, { 0x2f });
        gbc.writeMem(0x7726, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb1a7, gbc.sp());
        EXPECT(0x7728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0110
        gbc.setState(0x9587, 0xf8e5, 0x19a0, 0xb243, 0xe377, 0xf63e, 0x1, 0x0);
        gbc.writeMem(0x9587, { 0xcb, 0x56 });
        gbc.writeMem(0xf63e, { 0xf7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf8e5, gbc.sp());
        EXPECT(0x9589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9587));
        EXPECT(0x56, gbc.readMem(0x9588));
        EXPECT(0xf7, gbc.readMem(0xf63e));
        // CB 56 0111
        gbc.setState(0xe0fb, 0xdf90, 0xcdb0, 0xc789, 0x300, 0x2d3c, 0x1, 0x1);
        gbc.writeMem(0x2d3c, { 0xc1 });
        gbc.writeMem(0xe0fb, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdf90, gbc.sp());
        EXPECT(0xe0fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0fb));
        EXPECT(0x56, gbc.readMem(0xe0fc));
        // CB 56 0112
        gbc.setState(0xce1e, 0x8665, 0x81a0, 0x4fc1, 0x80bc, 0x1f60, 0x0, 0x0);
        gbc.writeMem(0x1f60, { 0x37 });
        gbc.writeMem(0xce1e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8665, gbc.sp());
        EXPECT(0xce20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1e));
        EXPECT(0x56, gbc.readMem(0xce1f));
        // CB 56 0113
        gbc.setState(0x6c12, 0x632d, 0xc660, 0xae4c, 0x5097, 0x2220, 0x1, 0x0);
        gbc.writeMem(0x2220, { 0xa3 });
        gbc.writeMem(0x6c12, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x632d, gbc.sp());
        EXPECT(0x6c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0114
        gbc.setState(0x7802, 0x1c79, 0x4880, 0xc78d, 0xcb45, 0xa32d, 0x1, 0x0);
        gbc.writeMem(0x7802, { 0xcb, 0x56 });
        gbc.writeMem(0xa32d, { 0x71 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1c79, gbc.sp());
        EXPECT(0x7804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa32d));
        // CB 56 0115
        gbc.setState(0x6db4, 0x7c28, 0xae70, 0x342c, 0xbaed, 0xb83f, 0x0, 0x1);
        gbc.writeMem(0x6db4, { 0xcb, 0x56 });
        gbc.writeMem(0xb83f, { 0x91 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7c28, gbc.sp());
        EXPECT(0x6db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb83f));
        // CB 56 0116
        gbc.setState(0xa29a, 0xaff2, 0xa70, 0xe62e, 0x4eae, 0x2919, 0x0, 0x0);
        gbc.writeMem(0x2919, { 0xd3 });
        gbc.writeMem(0xa29a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xaff2, gbc.sp());
        EXPECT(0xa29c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29a));
        EXPECT(0x56, gbc.readMem(0xa29b));
        // CB 56 0117
        gbc.setState(0xaa5d, 0x8917, 0xa240, 0x563c, 0x979a, 0x83e3, 0x1, 0x0);
        gbc.writeMem(0x83e3, { 0x6 });
        gbc.writeMem(0xaa5d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8917, gbc.sp());
        EXPECT(0xaa5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x83e3));
        EXPECT(0xcb, gbc.readMem(0xaa5d));
        EXPECT(0x56, gbc.readMem(0xaa5e));
        // CB 56 0118
        gbc.setState(0xb82a, 0x4591, 0x6110, 0x2259, 0x1a3d, 0x39b5, 0x1, 0x1);
        gbc.writeMem(0x39b5, { 0x97 });
        gbc.writeMem(0xb82a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4591, gbc.sp());
        EXPECT(0xb82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb82a));
        EXPECT(0x56, gbc.readMem(0xb82b));
        // CB 56 0119
        gbc.setState(0x270f, 0x2dd, 0x86b0, 0x1211, 0x9db3, 0xbdbc, 0x0, 0x1);
        gbc.writeMem(0x270f, { 0xcb, 0x56 });
        gbc.writeMem(0xbdbc, { 0x84 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2dd, gbc.sp());
        EXPECT(0x2711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xbdbc));
        // CB 56 011A
        gbc.setState(0x4979, 0x745, 0x46e0, 0x969a, 0x6890, 0x5157, 0x0, 0x1);
        gbc.writeMem(0x4979, { 0xcb, 0x56 });
        gbc.writeMem(0x5157, { 0x92 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x745, gbc.sp());
        EXPECT(0x497b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 011B
        gbc.setState(0x57da, 0xc8ce, 0xa040, 0x8e2, 0x7615, 0x136a, 0x1, 0x1);
        gbc.writeMem(0x136a, { 0x67 });
        gbc.writeMem(0x57da, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc8ce, gbc.sp());
        EXPECT(0x57dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 011C
        gbc.setState(0xe81c, 0x381, 0xcda0, 0x8511, 0xefaa, 0xd162, 0x0, 0x1);
        gbc.writeMem(0xd162, { 0xdd });
        gbc.writeMem(0xe81c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x381, gbc.sp());
        EXPECT(0xe81e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xd162));
        EXPECT(0xcb, gbc.readMem(0xe81c));
        EXPECT(0x56, gbc.readMem(0xe81d));
        // CB 56 011D
        gbc.setState(0x8b85, 0xf327, 0xf6d0, 0xa638, 0x964, 0x64cf, 0x1, 0x0);
        gbc.writeMem(0x64cf, { 0x76 });
        gbc.writeMem(0x8b85, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf327, gbc.sp());
        EXPECT(0x8b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b85));
        EXPECT(0x56, gbc.readMem(0x8b86));
        // CB 56 011E
        gbc.setState(0x4be2, 0x5853, 0x5b20, 0x3fc5, 0x1c55, 0x14dc, 0x0, 0x1);
        gbc.writeMem(0x14dc, { 0x2a });
        gbc.writeMem(0x4be2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5853, gbc.sp());
        EXPECT(0x4be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0120
        gbc.setState(0xb8e1, 0xfe5f, 0xf170, 0x8d87, 0xfe5a, 0x5ba5, 0x0, 0x0);
        gbc.writeMem(0x5ba5, { 0x81 });
        gbc.writeMem(0xb8e1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfe5f, gbc.sp());
        EXPECT(0xb8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e1));
        EXPECT(0x56, gbc.readMem(0xb8e2));
        // CB 56 0122
        gbc.setState(0x739e, 0xf409, 0x31b0, 0xd29b, 0xa189, 0xf3b4, 0x0, 0x0);
        gbc.writeMem(0x739e, { 0xcb, 0x56 });
        gbc.writeMem(0xf3b4, { 0xd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf409, gbc.sp());
        EXPECT(0x73a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xf3b4));
        // CB 56 0123
        gbc.setState(0x85bd, 0xaf48, 0xfd10, 0x93cd, 0x9951, 0xe048, 0x1, 0x1);
        gbc.writeMem(0x85bd, { 0xcb, 0x56 });
        gbc.writeMem(0xe048, { 0x16 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaf48, gbc.sp());
        EXPECT(0x85bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85bd));
        EXPECT(0x56, gbc.readMem(0x85be));
        EXPECT(0x16, gbc.readMem(0xe048));
        // CB 56 0124
        gbc.setState(0xacbb, 0xabd0, 0x32e0, 0xf6e2, 0x56d, 0x6db1, 0x0, 0x0);
        gbc.writeMem(0x6db1, { 0x43 });
        gbc.writeMem(0xacbb, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xabd0, gbc.sp());
        EXPECT(0xacbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacbb));
        EXPECT(0x56, gbc.readMem(0xacbc));
        // CB 56 0125
        gbc.setState(0x235c, 0xf21f, 0x9170, 0x3a1e, 0x1db5, 0x9627, 0x1, 0x1);
        gbc.writeMem(0x235c, { 0xcb, 0x56 });
        gbc.writeMem(0x9627, { 0x7d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf21f, gbc.sp());
        EXPECT(0x235e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9627));
        // CB 56 0126
        gbc.setState(0x186a, 0xf607, 0x7990, 0x483b, 0xae9e, 0xb89b, 0x1, 0x0);
        gbc.writeMem(0x186a, { 0xcb, 0x56 });
        gbc.writeMem(0xb89b, { 0x22 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf607, gbc.sp());
        EXPECT(0x186c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb89b));
        // CB 56 0127
        gbc.setState(0x9088, 0x2bb4, 0xc880, 0xbe29, 0xdaf0, 0x3170, 0x0, 0x1);
        gbc.writeMem(0x3170, { 0xd6 });
        gbc.writeMem(0x9088, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2bb4, gbc.sp());
        EXPECT(0x908a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9088));
        EXPECT(0x56, gbc.readMem(0x9089));
        // CB 56 0128
        gbc.setState(0xa4b7, 0xda87, 0x1c90, 0xd175, 0x2141, 0xe0bc, 0x1, 0x0);
        gbc.writeMem(0xa4b7, { 0xcb, 0x56 });
        gbc.writeMem(0xe0bc, { 0x8f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xda87, gbc.sp());
        EXPECT(0xa4b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b7));
        EXPECT(0x56, gbc.readMem(0xa4b8));
        EXPECT(0x8f, gbc.readMem(0xe0bc));
        // CB 56 0129
        gbc.setState(0xd15f, 0xf89d, 0x59a0, 0x83ec, 0x6bb0, 0x73c9, 0x0, 0x1);
        gbc.writeMem(0x73c9, { 0xa6 });
        gbc.writeMem(0xd15f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf89d, gbc.sp());
        EXPECT(0xd161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15f));
        EXPECT(0x56, gbc.readMem(0xd160));
        // CB 56 012A
        gbc.setState(0x52ca, 0x61f9, 0x4360, 0x74b8, 0xa0a8, 0x7062, 0x1, 0x0);
        gbc.writeMem(0x52ca, { 0xcb, 0x56 });
        gbc.writeMem(0x7062, { 0xa3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x61f9, gbc.sp());
        EXPECT(0x52cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 012B
        gbc.setState(0x4da, 0xdd1, 0x2320, 0x583a, 0x6f1b, 0x3f61, 0x0, 0x1);
        gbc.writeMem(0x4da, { 0xcb, 0x56 });
        gbc.writeMem(0x3f61, { 0xe9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdd1, gbc.sp());
        EXPECT(0x4dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 012C
        gbc.setState(0x1fcb, 0x849a, 0x5660, 0x8182, 0xe2e0, 0xdc85, 0x0, 0x1);
        gbc.writeMem(0x1fcb, { 0xcb, 0x56 });
        gbc.writeMem(0xdc85, { 0x6b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x849a, gbc.sp());
        EXPECT(0x1fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xdc85));
        // CB 56 012D
        gbc.setState(0x878c, 0x2565, 0x5ed0, 0x385a, 0x14d6, 0x137c, 0x1, 0x1);
        gbc.writeMem(0x137c, { 0x98 });
        gbc.writeMem(0x878c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2565, gbc.sp());
        EXPECT(0x878e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x878c));
        EXPECT(0x56, gbc.readMem(0x878d));
        // CB 56 012E
        gbc.setState(0x7741, 0x756e, 0xe8c0, 0x5be6, 0x6ba1, 0xf2a1, 0x0, 0x1);
        gbc.writeMem(0x7741, { 0xcb, 0x56 });
        gbc.writeMem(0xf2a1, { 0xb1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x756e, gbc.sp());
        EXPECT(0x7743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xf2a1));
        // CB 56 012F
        gbc.setState(0x9bfb, 0x4e1, 0x62b0, 0xf151, 0xc6d2, 0x3ea0, 0x0, 0x1);
        gbc.writeMem(0x3ea0, { 0xc6 });
        gbc.writeMem(0x9bfb, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4e1, gbc.sp());
        EXPECT(0x9bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfb));
        EXPECT(0x56, gbc.readMem(0x9bfc));
        // CB 56 0130
        gbc.setState(0x8250, 0x9172, 0xd470, 0x6581, 0x9205, 0x676, 0x1, 0x1);
        gbc.writeMem(0x676, { 0xad });
        gbc.writeMem(0x8250, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9172, gbc.sp());
        EXPECT(0x8252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8250));
        EXPECT(0x56, gbc.readMem(0x8251));
        // CB 56 0131
        gbc.setState(0x5e2c, 0xe32f, 0xea90, 0x1795, 0x6d06, 0xc065, 0x1, 0x0);
        gbc.writeMem(0x5e2c, { 0xcb, 0x56 });
        gbc.writeMem(0xc065, { 0x9a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe32f, gbc.sp());
        EXPECT(0x5e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc065));
        // CB 56 0133
        gbc.setState(0xcea2, 0x63e2, 0x3ef0, 0x3783, 0x8828, 0xfb96, 0x1, 0x0);
        gbc.writeMem(0xcea2, { 0xcb, 0x56 });
        gbc.writeMem(0xfb96, { 0x1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x63e2, gbc.sp());
        EXPECT(0xcea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea2));
        EXPECT(0x56, gbc.readMem(0xcea3));
        EXPECT(0x1, gbc.readMem(0xfb96));
        // CB 56 0134
        gbc.setState(0x476, 0xd8ba, 0x9390, 0xb0a5, 0x13b0, 0x814a, 0x0, 0x0);
        gbc.writeMem(0x476, { 0xcb, 0x56 });
        gbc.writeMem(0x814a, { 0x9f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd8ba, gbc.sp());
        EXPECT(0x478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x814a));
        // CB 56 0135
        gbc.setState(0x7f58, 0xab4f, 0xbff0, 0x55b8, 0xb79c, 0x1ddd, 0x0, 0x0);
        gbc.writeMem(0x1ddd, { 0x1c });
        gbc.writeMem(0x7f58, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xab4f, gbc.sp());
        EXPECT(0x7f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0136
        gbc.setState(0x14f8, 0xe0a4, 0x1540, 0x628e, 0xac96, 0xb5e6, 0x1, 0x1);
        gbc.writeMem(0x14f8, { 0xcb, 0x56 });
        gbc.writeMem(0xb5e6, { 0x48 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe0a4, gbc.sp());
        EXPECT(0x14fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb5e6));
        // CB 56 0138
        gbc.setState(0xe5e0, 0xf30b, 0x3880, 0x3f5c, 0x265f, 0xf1b5, 0x0, 0x1);
        gbc.writeMem(0xe5e0, { 0xcb, 0x56 });
        gbc.writeMem(0xf1b5, { 0xd4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf30b, gbc.sp());
        EXPECT(0xe5e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e0));
        EXPECT(0x56, gbc.readMem(0xe5e1));
        EXPECT(0xd4, gbc.readMem(0xf1b5));
        // CB 56 0139
        gbc.setState(0xb3b8, 0x78f, 0x3810, 0x4151, 0xf43, 0xb264, 0x1, 0x0);
        gbc.writeMem(0xb264, { 0xa3 });
        gbc.writeMem(0xb3b8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x78f, gbc.sp());
        EXPECT(0xb3ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb264));
        EXPECT(0xcb, gbc.readMem(0xb3b8));
        EXPECT(0x56, gbc.readMem(0xb3b9));
        // CB 56 013A
        gbc.setState(0xaee6, 0x9a9, 0xf620, 0x2eaa, 0x4846, 0xb1fe, 0x1, 0x0);
        gbc.writeMem(0xaee6, { 0xcb, 0x56 });
        gbc.writeMem(0xb1fe, { 0xb6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9a9, gbc.sp());
        EXPECT(0xaee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee6));
        EXPECT(0x56, gbc.readMem(0xaee7));
        EXPECT(0xb6, gbc.readMem(0xb1fe));
        // CB 56 013B
        gbc.setState(0xe249, 0xc14, 0x82f0, 0x5fd2, 0x177f, 0x2415, 0x1, 0x0);
        gbc.writeMem(0x2415, { 0x9d });
        gbc.writeMem(0xe249, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc14, gbc.sp());
        EXPECT(0xe24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe249));
        EXPECT(0x56, gbc.readMem(0xe24a));
        // CB 56 013C
        gbc.setState(0xd346, 0xa30, 0xd770, 0x60dd, 0xac96, 0x5fe6, 0x0, 0x0);
        gbc.writeMem(0x5fe6, { 0x40 });
        gbc.writeMem(0xd346, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa30, gbc.sp());
        EXPECT(0xd348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd346));
        EXPECT(0x56, gbc.readMem(0xd347));
        // CB 56 013D
        gbc.setState(0xa9c4, 0xc77b, 0x8ad0, 0xc02c, 0x284, 0x9819, 0x1, 0x1);
        gbc.writeMem(0x9819, { 0x28 });
        gbc.writeMem(0xa9c4, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc77b, gbc.sp());
        EXPECT(0xa9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x9819));
        EXPECT(0xcb, gbc.readMem(0xa9c4));
        EXPECT(0x56, gbc.readMem(0xa9c5));
        // CB 56 013E
        gbc.setState(0x4451, 0x57f3, 0xd020, 0x2b8a, 0xb3cf, 0x3d60, 0x0, 0x0);
        gbc.writeMem(0x3d60, { 0x49 });
        gbc.writeMem(0x4451, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x57f3, gbc.sp());
        EXPECT(0x4453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 013F
        gbc.setState(0x935f, 0x50e0, 0xdfb0, 0xf019, 0xaac8, 0x32e, 0x0, 0x1);
        gbc.writeMem(0x32e, { 0x5a });
        gbc.writeMem(0x935f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x50e0, gbc.sp());
        EXPECT(0x9361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935f));
        EXPECT(0x56, gbc.readMem(0x9360));
        // CB 56 0140
        gbc.setState(0xc98f, 0xc044, 0xec30, 0x217b, 0x13da, 0x491e, 0x0, 0x1);
        gbc.writeMem(0x491e, { 0x7c });
        gbc.writeMem(0xc98f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc044, gbc.sp());
        EXPECT(0xc991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98f));
        EXPECT(0x56, gbc.readMem(0xc990));
        // CB 56 0141
        gbc.setState(0x6788, 0xaf1d, 0x1a80, 0x496a, 0x8363, 0x718d, 0x1, 0x0);
        gbc.writeMem(0x6788, { 0xcb, 0x56 });
        gbc.writeMem(0x718d, { 0xb3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xaf1d, gbc.sp());
        EXPECT(0x678a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0142
        gbc.setState(0x849b, 0x585e, 0x3900, 0x9d55, 0xd472, 0xcd61, 0x1, 0x1);
        gbc.writeMem(0x849b, { 0xcb, 0x56 });
        gbc.writeMem(0xcd61, { 0x7e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x585e, gbc.sp());
        EXPECT(0x849d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849b));
        EXPECT(0x56, gbc.readMem(0x849c));
        EXPECT(0x7e, gbc.readMem(0xcd61));
        // CB 56 0143
        gbc.setState(0xebfd, 0xb166, 0x7b20, 0x46a5, 0x607a, 0x3c53, 0x0, 0x0);
        gbc.writeMem(0x3c53, { 0x5d });
        gbc.writeMem(0xebfd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb166, gbc.sp());
        EXPECT(0xebff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfd));
        EXPECT(0x56, gbc.readMem(0xebfe));
        // CB 56 0144
        gbc.setState(0x9fd2, 0xdd0d, 0x2240, 0x3ff0, 0x1a39, 0xd756, 0x0, 0x1);
        gbc.writeMem(0x9fd2, { 0xcb, 0x56 });
        gbc.writeMem(0xd756, { 0x36 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdd0d, gbc.sp());
        EXPECT(0x9fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd2));
        EXPECT(0x56, gbc.readMem(0x9fd3));
        EXPECT(0x36, gbc.readMem(0xd756));
        // CB 56 0145
        gbc.setState(0xd988, 0xa65a, 0xf920, 0x38b, 0xbc52, 0xebbc, 0x1, 0x0);
        gbc.writeMem(0xd988, { 0xcb, 0x56 });
        gbc.writeMem(0xebbc, { 0x21 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa65a, gbc.sp());
        EXPECT(0xd98a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd988));
        EXPECT(0x56, gbc.readMem(0xd989));
        EXPECT(0x21, gbc.readMem(0xebbc));
        // CB 56 0146
        gbc.setState(0x1d0f, 0xd464, 0xace0, 0x95aa, 0xfc7, 0x3643, 0x0, 0x0);
        gbc.writeMem(0x1d0f, { 0xcb, 0x56 });
        gbc.writeMem(0x3643, { 0x2a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd464, gbc.sp());
        EXPECT(0x1d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0147
        gbc.setState(0xeee4, 0x9412, 0xd380, 0xe9b2, 0x99df, 0x93ea, 0x1, 0x1);
        gbc.writeMem(0x93ea, { 0x4e });
        gbc.writeMem(0xeee4, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9412, gbc.sp());
        EXPECT(0xeee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x93ea));
        EXPECT(0xcb, gbc.readMem(0xeee4));
        EXPECT(0x56, gbc.readMem(0xeee5));
        // CB 56 0148
        gbc.setState(0x666c, 0x7339, 0x1180, 0x8da, 0x947e, 0x63ec, 0x1, 0x0);
        gbc.writeMem(0x63ec, { 0xa8 });
        gbc.writeMem(0x666c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7339, gbc.sp());
        EXPECT(0x666e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0149
        gbc.setState(0x966, 0xee43, 0x30c0, 0x4f09, 0x867e, 0x30c, 0x0, 0x1);
        gbc.writeMem(0x30c, { 0x2c });
        gbc.writeMem(0x966, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xee43, gbc.sp());
        EXPECT(0x968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 014A
        gbc.setState(0x12ab, 0x848a, 0xa500, 0x159b, 0x6f53, 0x44f9, 0x0, 0x1);
        gbc.writeMem(0x12ab, { 0xcb, 0x56 });
        gbc.writeMem(0x44f9, { 0x8c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x848a, gbc.sp());
        EXPECT(0x12ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 014B
        gbc.setState(0x41b8, 0x3797, 0xa5a0, 0x599e, 0xc6a5, 0xc2b1, 0x0, 0x1);
        gbc.writeMem(0x41b8, { 0xcb, 0x56 });
        gbc.writeMem(0xc2b1, { 0xff });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3797, gbc.sp());
        EXPECT(0x41ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc2b1));
        // CB 56 014C
        gbc.setState(0x70d3, 0x8f2c, 0x8750, 0xeddd, 0x9e02, 0x1a0f, 0x0, 0x1);
        gbc.writeMem(0x1a0f, { 0x39 });
        gbc.writeMem(0x70d3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8f2c, gbc.sp());
        EXPECT(0x70d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 014D
        gbc.setState(0xb612, 0x3cac, 0x27c0, 0x22af, 0xb3f8, 0x6cae, 0x0, 0x0);
        gbc.writeMem(0x6cae, { 0xb3 });
        gbc.writeMem(0xb612, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3cac, gbc.sp());
        EXPECT(0xb614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb612));
        EXPECT(0x56, gbc.readMem(0xb613));
        // CB 56 014E
        gbc.setState(0xc326, 0xc47f, 0x4990, 0xeb70, 0x12e9, 0xa332, 0x0, 0x1);
        gbc.writeMem(0xa332, { 0xc4 });
        gbc.writeMem(0xc326, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc47f, gbc.sp());
        EXPECT(0xc328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xa332));
        EXPECT(0xcb, gbc.readMem(0xc326));
        EXPECT(0x56, gbc.readMem(0xc327));
        // CB 56 014F
        gbc.setState(0xe104, 0x2211, 0x7f20, 0xef89, 0xa294, 0x7d30, 0x0, 0x1);
        gbc.writeMem(0x7d30, { 0x98 });
        gbc.writeMem(0xe104, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2211, gbc.sp());
        EXPECT(0xe106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe104));
        EXPECT(0x56, gbc.readMem(0xe105));
        // CB 56 0150
        gbc.setState(0x6668, 0xfde1, 0x9ee0, 0xdcb9, 0x4452, 0xb755, 0x0, 0x0);
        gbc.writeMem(0x6668, { 0xcb, 0x56 });
        gbc.writeMem(0xb755, { 0xef });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xfde1, gbc.sp());
        EXPECT(0x666a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xb755));
        // CB 56 0151
        gbc.setState(0x5c02, 0x5ae7, 0xdee0, 0x308e, 0xdffd, 0xf659, 0x1, 0x0);
        gbc.writeMem(0x5c02, { 0xcb, 0x56 });
        gbc.writeMem(0xf659, { 0x5e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5ae7, gbc.sp());
        EXPECT(0x5c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xf659));
        // CB 56 0153
        gbc.setState(0xa1a6, 0xd3aa, 0xbc20, 0x467e, 0xeb7e, 0x8015, 0x0, 0x1);
        gbc.writeMem(0x8015, { 0x83 });
        gbc.writeMem(0xa1a6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd3aa, gbc.sp());
        EXPECT(0xa1a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x8015));
        EXPECT(0xcb, gbc.readMem(0xa1a6));
        EXPECT(0x56, gbc.readMem(0xa1a7));
        // CB 56 0154
        gbc.setState(0xa5c6, 0x5243, 0x1490, 0xb6e1, 0x34a, 0x1780, 0x1, 0x1);
        gbc.writeMem(0x1780, { 0x32 });
        gbc.writeMem(0xa5c6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5243, gbc.sp());
        EXPECT(0xa5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c6));
        EXPECT(0x56, gbc.readMem(0xa5c7));
        // CB 56 0155
        gbc.setState(0x5ab7, 0x1883, 0xf340, 0xc35b, 0x7179, 0x4ed4, 0x1, 0x0);
        gbc.writeMem(0x4ed4, { 0xc1 });
        gbc.writeMem(0x5ab7, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1883, gbc.sp());
        EXPECT(0x5ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0156
        gbc.setState(0xa6d6, 0xe72d, 0x8f80, 0x642f, 0x4319, 0xaa24, 0x0, 0x1);
        gbc.writeMem(0xa6d6, { 0xcb, 0x56 });
        gbc.writeMem(0xaa24, { 0x4d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe72d, gbc.sp());
        EXPECT(0xa6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d6));
        EXPECT(0x56, gbc.readMem(0xa6d7));
        EXPECT(0x4d, gbc.readMem(0xaa24));
        // CB 56 0157
        gbc.setState(0xba59, 0x763c, 0x6d0, 0xbad, 0x9593, 0x6ff, 0x1, 0x1);
        gbc.writeMem(0x6ff, { 0x68 });
        gbc.writeMem(0xba59, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x763c, gbc.sp());
        EXPECT(0xba5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba59));
        EXPECT(0x56, gbc.readMem(0xba5a));
        // CB 56 0158
        gbc.setState(0x2cd7, 0x1953, 0x3d20, 0xd67b, 0x39bf, 0xb63b, 0x0, 0x0);
        gbc.writeMem(0x2cd7, { 0xcb, 0x56 });
        gbc.writeMem(0xb63b, { 0x22 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1953, gbc.sp());
        EXPECT(0x2cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb63b));
        // CB 56 0159
        gbc.setState(0x3c81, 0xc7ba, 0x3760, 0x6da7, 0xe13f, 0xef1b, 0x1, 0x0);
        gbc.writeMem(0x3c81, { 0xcb, 0x56 });
        gbc.writeMem(0xef1b, { 0xc2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc7ba, gbc.sp());
        EXPECT(0x3c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xef1b));
        // CB 56 015A
        gbc.setState(0xd7e2, 0x59ad, 0x8980, 0xef0d, 0x493d, 0x473a, 0x1, 0x0);
        gbc.writeMem(0x473a, { 0xfa });
        gbc.writeMem(0xd7e2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x59ad, gbc.sp());
        EXPECT(0xd7e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e2));
        EXPECT(0x56, gbc.readMem(0xd7e3));
        // CB 56 015B
        gbc.setState(0xb16c, 0x6594, 0xf550, 0xde6e, 0xc655, 0xea06, 0x0, 0x0);
        gbc.writeMem(0xb16c, { 0xcb, 0x56 });
        gbc.writeMem(0xea06, { 0x99 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6594, gbc.sp());
        EXPECT(0xb16e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb16c));
        EXPECT(0x56, gbc.readMem(0xb16d));
        EXPECT(0x99, gbc.readMem(0xea06));
        // CB 56 015C
        gbc.setState(0x6c1b, 0x61db, 0x230, 0x16cb, 0xe1d3, 0xa8af, 0x1, 0x1);
        gbc.writeMem(0x6c1b, { 0xcb, 0x56 });
        gbc.writeMem(0xa8af, { 0x19 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x61db, gbc.sp());
        EXPECT(0x6c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa8af));
        // CB 56 015D
        gbc.setState(0xd9d0, 0xb0af, 0xc8b0, 0xc90b, 0xcb76, 0x36e8, 0x1, 0x0);
        gbc.writeMem(0x36e8, { 0x3b });
        gbc.writeMem(0xd9d0, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb0af, gbc.sp());
        EXPECT(0xd9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d0));
        EXPECT(0x56, gbc.readMem(0xd9d1));
        // CB 56 015F
        gbc.setState(0x1b10, 0xb9a4, 0xf1b0, 0x4356, 0xc652, 0xffbf, 0x1, 0x1);
        gbc.writeMem(0x1b10, { 0xcb, 0x56 });
        gbc.writeMem(0xffbf, { 0xec });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb9a4, gbc.sp());
        EXPECT(0x1b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xffbf));
        // CB 56 0160
        gbc.setState(0x53dc, 0x67cd, 0xa9f0, 0xbc41, 0x19c, 0x3703, 0x1, 0x0);
        gbc.writeMem(0x3703, { 0x64 });
        gbc.writeMem(0x53dc, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x67cd, gbc.sp());
        EXPECT(0x53de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0161
        gbc.setState(0x3459, 0x3354, 0x8d90, 0xef81, 0xb4f0, 0xbb8f, 0x1, 0x0);
        gbc.writeMem(0x3459, { 0xcb, 0x56 });
        gbc.writeMem(0xbb8f, { 0x42 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3354, gbc.sp());
        EXPECT(0x345b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbb8f));
        // CB 56 0162
        gbc.setState(0x8d7e, 0xbfa, 0x5b60, 0x6133, 0x7724, 0x2689, 0x0, 0x0);
        gbc.writeMem(0x2689, { 0x24 });
        gbc.writeMem(0x8d7e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbfa, gbc.sp());
        EXPECT(0x8d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7e));
        EXPECT(0x56, gbc.readMem(0x8d7f));
        // CB 56 0163
        gbc.setState(0x697b, 0xd067, 0x3710, 0x1eab, 0x5ab2, 0xd686, 0x0, 0x0);
        gbc.writeMem(0x697b, { 0xcb, 0x56 });
        gbc.writeMem(0xd686, { 0x2c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd067, gbc.sp());
        EXPECT(0x697d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd686));
        // CB 56 0164
        gbc.setState(0x6c9f, 0xec49, 0x31d0, 0x8f52, 0xd1f4, 0xcf5f, 0x0, 0x1);
        gbc.writeMem(0x6c9f, { 0xcb, 0x56 });
        gbc.writeMem(0xcf5f, { 0x7f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xec49, gbc.sp());
        EXPECT(0x6ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xcf5f));
        // CB 56 0165
        gbc.setState(0xc724, 0xb7ab, 0xa8e0, 0xc06a, 0x31ca, 0x563a, 0x1, 0x1);
        gbc.writeMem(0x563a, { 0x70 });
        gbc.writeMem(0xc724, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb7ab, gbc.sp());
        EXPECT(0xc726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc724));
        EXPECT(0x56, gbc.readMem(0xc725));
        // CB 56 0166
        gbc.setState(0x1f92, 0x642d, 0xdcb0, 0xbaf4, 0xc046, 0x566d, 0x1, 0x1);
        gbc.writeMem(0x1f92, { 0xcb, 0x56 });
        gbc.writeMem(0x566d, { 0x3c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x642d, gbc.sp());
        EXPECT(0x1f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0167
        gbc.setState(0xd665, 0x32c, 0xa0, 0x7430, 0x7c65, 0xd066, 0x1, 0x1);
        gbc.writeMem(0xd066, { 0x72 });
        gbc.writeMem(0xd665, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x32c, gbc.sp());
        EXPECT(0xd667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xd066));
        EXPECT(0xcb, gbc.readMem(0xd665));
        EXPECT(0x56, gbc.readMem(0xd666));
        // CB 56 0168
        gbc.setState(0xdd71, 0xeaa7, 0x6980, 0xc92d, 0x23a3, 0x7f5, 0x1, 0x0);
        gbc.writeMem(0x7f5, { 0x55 });
        gbc.writeMem(0xdd71, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xeaa7, gbc.sp());
        EXPECT(0xdd73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd71));
        EXPECT(0x56, gbc.readMem(0xdd72));
        // CB 56 0169
        gbc.setState(0x5abd, 0xede, 0x9060, 0x6c52, 0xf0ed, 0x7add, 0x1, 0x1);
        gbc.writeMem(0x5abd, { 0xcb, 0x56 });
        gbc.writeMem(0x7add, { 0xab });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xede, gbc.sp());
        EXPECT(0x5abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 016A
        gbc.setState(0xb0e7, 0x4692, 0x8cf0, 0xb55, 0x7f0, 0xc481, 0x1, 0x0);
        gbc.writeMem(0xb0e7, { 0xcb, 0x56 });
        gbc.writeMem(0xc481, { 0xf9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4692, gbc.sp());
        EXPECT(0xb0e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e7));
        EXPECT(0x56, gbc.readMem(0xb0e8));
        EXPECT(0xf9, gbc.readMem(0xc481));
        // CB 56 016B
        gbc.setState(0xa17, 0x8a6e, 0xf3e0, 0xeb4e, 0x280d, 0x81e5, 0x1, 0x0);
        gbc.writeMem(0xa17, { 0xcb, 0x56 });
        gbc.writeMem(0x81e5, { 0xf5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8a6e, gbc.sp());
        EXPECT(0xa19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x81e5));
        // CB 56 016D
        gbc.setState(0x9116, 0x6b80, 0xf7f0, 0x5eba, 0xd15f, 0x5912, 0x1, 0x0);
        gbc.writeMem(0x5912, { 0x3 });
        gbc.writeMem(0x9116, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6b80, gbc.sp());
        EXPECT(0x9118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9116));
        EXPECT(0x56, gbc.readMem(0x9117));
        // CB 56 016E
        gbc.setState(0x2267, 0xa350, 0x6530, 0x2ea1, 0x331, 0x2f28, 0x0, 0x0);
        gbc.writeMem(0x2267, { 0xcb, 0x56 });
        gbc.writeMem(0x2f28, { 0x63 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa350, gbc.sp());
        EXPECT(0x2269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 016F
        gbc.setState(0xed3f, 0xd0cf, 0xa560, 0x361d, 0x50b8, 0x9bc4, 0x1, 0x0);
        gbc.writeMem(0x9bc4, { 0x69 });
        gbc.writeMem(0xed3f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd0cf, gbc.sp());
        EXPECT(0xed41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9bc4));
        EXPECT(0xcb, gbc.readMem(0xed3f));
        EXPECT(0x56, gbc.readMem(0xed40));
        // CB 56 0170
        gbc.setState(0xd0a1, 0xfdfa, 0xfb90, 0x3262, 0x7dd7, 0xeb6, 0x0, 0x0);
        gbc.writeMem(0xeb6, { 0x4c });
        gbc.writeMem(0xd0a1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfdfa, gbc.sp());
        EXPECT(0xd0a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a1));
        EXPECT(0x56, gbc.readMem(0xd0a2));
        // CB 56 0171
        gbc.setState(0x7bf6, 0x1180, 0x7d40, 0xdcb9, 0xd14, 0x43f0, 0x1, 0x0);
        gbc.writeMem(0x43f0, { 0x2 });
        gbc.writeMem(0x7bf6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1180, gbc.sp());
        EXPECT(0x7bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0172
        gbc.setState(0x2643, 0x1da1, 0x710, 0x5fe1, 0xc864, 0x63e8, 0x0, 0x0);
        gbc.writeMem(0x2643, { 0xcb, 0x56 });
        gbc.writeMem(0x63e8, { 0x17 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1da1, gbc.sp());
        EXPECT(0x2645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0173
        gbc.setState(0x5762, 0xdaa, 0xe310, 0xa54a, 0xa80c, 0xc602, 0x1, 0x1);
        gbc.writeMem(0x5762, { 0xcb, 0x56 });
        gbc.writeMem(0xc602, { 0xdb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdaa, gbc.sp());
        EXPECT(0x5764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xc602));
        // CB 56 0174
        gbc.setState(0x4bb6, 0x437, 0x3ab0, 0x6468, 0x7968, 0x4914, 0x0, 0x0);
        gbc.writeMem(0x4914, { 0xf6 });
        gbc.writeMem(0x4bb6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x437, gbc.sp());
        EXPECT(0x4bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0175
        gbc.setState(0xd7d2, 0xab2e, 0xe0, 0xad47, 0x325e, 0x58a8, 0x0, 0x1);
        gbc.writeMem(0x58a8, { 0x80 });
        gbc.writeMem(0xd7d2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xab2e, gbc.sp());
        EXPECT(0xd7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d2));
        EXPECT(0x56, gbc.readMem(0xd7d3));
        // CB 56 0176
        gbc.setState(0x7d59, 0x3480, 0x6bc0, 0x8f78, 0x3156, 0x5cd1, 0x1, 0x0);
        gbc.writeMem(0x5cd1, { 0x24 });
        gbc.writeMem(0x7d59, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3480, gbc.sp());
        EXPECT(0x7d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0177
        gbc.setState(0x343, 0xf2f1, 0xa950, 0xfd20, 0xd4c0, 0xed43, 0x1, 0x1);
        gbc.writeMem(0x343, { 0xcb, 0x56 });
        gbc.writeMem(0xed43, { 0x1c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf2f1, gbc.sp());
        EXPECT(0x345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xed43));
        // CB 56 0178
        gbc.setState(0xc992, 0x9993, 0x9b20, 0xe887, 0xadf1, 0xe05c, 0x0, 0x0);
        gbc.writeMem(0xc992, { 0xcb, 0x56 });
        gbc.writeMem(0xe05c, { 0xe });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9993, gbc.sp());
        EXPECT(0xc994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc992));
        EXPECT(0x56, gbc.readMem(0xc993));
        EXPECT(0xe, gbc.readMem(0xe05c));
        // CB 56 0179
        gbc.setState(0xd8a4, 0x1154, 0xf8f0, 0xb003, 0xdd1b, 0xc58e, 0x0, 0x0);
        gbc.writeMem(0xc58e, { 0xf4 });
        gbc.writeMem(0xd8a4, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1154, gbc.sp());
        EXPECT(0xd8a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xc58e));
        EXPECT(0xcb, gbc.readMem(0xd8a4));
        EXPECT(0x56, gbc.readMem(0xd8a5));
        // CB 56 017A
        gbc.setState(0x83ad, 0x4f7d, 0x67d0, 0x5a3a, 0x9636, 0xbe8, 0x1, 0x0);
        gbc.writeMem(0xbe8, { 0x10 });
        gbc.writeMem(0x83ad, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4f7d, gbc.sp());
        EXPECT(0x83af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ad));
        EXPECT(0x56, gbc.readMem(0x83ae));
        // CB 56 017B
        gbc.setState(0xb770, 0xd88b, 0x1320, 0x9c94, 0xbd2c, 0x9996, 0x0, 0x0);
        gbc.writeMem(0x9996, { 0x94 });
        gbc.writeMem(0xb770, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd88b, gbc.sp());
        EXPECT(0xb772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9996));
        EXPECT(0xcb, gbc.readMem(0xb770));
        EXPECT(0x56, gbc.readMem(0xb771));
        // CB 56 017C
        gbc.setState(0x1024, 0xad89, 0x28c0, 0xc103, 0xdf29, 0xfa86, 0x0, 0x1);
        gbc.writeMem(0x1024, { 0xcb, 0x56 });
        gbc.writeMem(0xfa86, { 0x14 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xad89, gbc.sp());
        EXPECT(0x1026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xfa86));
        // CB 56 017D
        gbc.setState(0x4f11, 0x9156, 0xc0, 0x8576, 0xcecc, 0xeac6, 0x1, 0x1);
        gbc.writeMem(0x4f11, { 0xcb, 0x56 });
        gbc.writeMem(0xeac6, { 0xc6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9156, gbc.sp());
        EXPECT(0x4f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xeac6));
        // CB 56 017E
        gbc.setState(0x62e3, 0x751e, 0x84f0, 0xefef, 0x1b2a, 0x6253, 0x0, 0x0);
        gbc.writeMem(0x6253, { 0xf4 });
        gbc.writeMem(0x62e3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x751e, gbc.sp());
        EXPECT(0x62e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 017F
        gbc.setState(0x21b9, 0x171b, 0x9160, 0xec5f, 0x705c, 0x9422, 0x1, 0x0);
        gbc.writeMem(0x21b9, { 0xcb, 0x56 });
        gbc.writeMem(0x9422, { 0xc9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x171b, gbc.sp());
        EXPECT(0x21bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9422));
        // CB 56 0180
        gbc.setState(0xb465, 0x62bd, 0x7b0, 0x8864, 0x71bb, 0xd186, 0x1, 0x0);
        gbc.writeMem(0xb465, { 0xcb, 0x56 });
        gbc.writeMem(0xd186, { 0xa2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x62bd, gbc.sp());
        EXPECT(0xb467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb465));
        EXPECT(0x56, gbc.readMem(0xb466));
        EXPECT(0xa2, gbc.readMem(0xd186));
        // CB 56 0181
        gbc.setState(0x231f, 0xafb, 0x90c0, 0xe13, 0xf2de, 0x46ab, 0x0, 0x1);
        gbc.writeMem(0x231f, { 0xcb, 0x56 });
        gbc.writeMem(0x46ab, { 0xba });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xafb, gbc.sp());
        EXPECT(0x2321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0182
        gbc.setState(0xe920, 0x7ad4, 0x3e20, 0xfe2b, 0x71ef, 0x5ff1, 0x0, 0x0);
        gbc.writeMem(0x5ff1, { 0x1a });
        gbc.writeMem(0xe920, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7ad4, gbc.sp());
        EXPECT(0xe922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe920));
        EXPECT(0x56, gbc.readMem(0xe921));
        // CB 56 0183
        gbc.setState(0x8ef6, 0xec96, 0xe200, 0x53d6, 0xf833, 0xa885, 0x0, 0x1);
        gbc.writeMem(0x8ef6, { 0xcb, 0x56 });
        gbc.writeMem(0xa885, { 0xa8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xec96, gbc.sp());
        EXPECT(0x8ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef6));
        EXPECT(0x56, gbc.readMem(0x8ef7));
        EXPECT(0xa8, gbc.readMem(0xa885));
        // CB 56 0184
        gbc.setState(0x8795, 0xe619, 0xeac0, 0xabba, 0x7489, 0x5f86, 0x1, 0x0);
        gbc.writeMem(0x5f86, { 0xa8 });
        gbc.writeMem(0x8795, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe619, gbc.sp());
        EXPECT(0x8797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8795));
        EXPECT(0x56, gbc.readMem(0x8796));
        // CB 56 0185
        gbc.setState(0xc3fb, 0xbedc, 0x8610, 0xee0c, 0xacf4, 0x2918, 0x1, 0x0);
        gbc.writeMem(0x2918, { 0x9a });
        gbc.writeMem(0xc3fb, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbedc, gbc.sp());
        EXPECT(0xc3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3fb));
        EXPECT(0x56, gbc.readMem(0xc3fc));
        // CB 56 0186
        gbc.setState(0x22ee, 0xf60e, 0x4190, 0xe901, 0xacc, 0xf63d, 0x1, 0x0);
        gbc.writeMem(0x22ee, { 0xcb, 0x56 });
        gbc.writeMem(0xf63d, { 0x1c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf60e, gbc.sp());
        EXPECT(0x22f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xf63d));
        // CB 56 0187
        gbc.setState(0xe543, 0x6b9f, 0xbbe0, 0xead, 0xfcb4, 0xcfac, 0x0, 0x1);
        gbc.writeMem(0xcfac, { 0xaf });
        gbc.writeMem(0xe543, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6b9f, gbc.sp());
        EXPECT(0xe545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xcfac));
        EXPECT(0xcb, gbc.readMem(0xe543));
        EXPECT(0x56, gbc.readMem(0xe544));
        // CB 56 0188
        gbc.setState(0x2672, 0x21d7, 0x2e30, 0x5f46, 0xa8e8, 0x4377, 0x0, 0x0);
        gbc.writeMem(0x2672, { 0xcb, 0x56 });
        gbc.writeMem(0x4377, { 0x75 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x21d7, gbc.sp());
        EXPECT(0x2674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0189
        gbc.setState(0x4055, 0x4287, 0x2830, 0x93e8, 0x5581, 0xc45b, 0x1, 0x0);
        gbc.writeMem(0x4055, { 0xcb, 0x56 });
        gbc.writeMem(0xc45b, { 0x5e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4287, gbc.sp());
        EXPECT(0x4057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc45b));
        // CB 56 018A
        gbc.setState(0xca1d, 0x9b93, 0xe3f0, 0x15c7, 0x9e89, 0xf02b, 0x0, 0x0);
        gbc.writeMem(0xca1d, { 0xcb, 0x56 });
        gbc.writeMem(0xf02b, { 0xd2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9b93, gbc.sp());
        EXPECT(0xca1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca1d));
        EXPECT(0x56, gbc.readMem(0xca1e));
        EXPECT(0xd2, gbc.readMem(0xf02b));
        // CB 56 018B
        gbc.setState(0xcd72, 0x3433, 0xa4f0, 0x8966, 0x964a, 0xa7de, 0x1, 0x1);
        gbc.writeMem(0xa7de, { 0x38 });
        gbc.writeMem(0xcd72, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3433, gbc.sp());
        EXPECT(0xcd74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa7de));
        EXPECT(0xcb, gbc.readMem(0xcd72));
        EXPECT(0x56, gbc.readMem(0xcd73));
        // CB 56 018C
        gbc.setState(0x96a3, 0x9646, 0xa840, 0x4d77, 0x2fa, 0x48c8, 0x1, 0x0);
        gbc.writeMem(0x48c8, { 0xa1 });
        gbc.writeMem(0x96a3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9646, gbc.sp());
        EXPECT(0x96a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a3));
        EXPECT(0x56, gbc.readMem(0x96a4));
        // CB 56 018D
        gbc.setState(0x9517, 0xbe0a, 0x2ab0, 0x6ea5, 0x193d, 0xcd2d, 0x1, 0x0);
        gbc.writeMem(0x9517, { 0xcb, 0x56 });
        gbc.writeMem(0xcd2d, { 0x6c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbe0a, gbc.sp());
        EXPECT(0x9519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9517));
        EXPECT(0x56, gbc.readMem(0x9518));
        EXPECT(0x6c, gbc.readMem(0xcd2d));
        // CB 56 018E
        gbc.setState(0x7bfb, 0x51f2, 0x8050, 0x1656, 0x5b4a, 0xd4d2, 0x0, 0x0);
        gbc.writeMem(0x7bfb, { 0xcb, 0x56 });
        gbc.writeMem(0xd4d2, { 0xc1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x51f2, gbc.sp());
        EXPECT(0x7bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd4d2));
        // CB 56 018F
        gbc.setState(0x8f85, 0x2cb3, 0x7140, 0x5840, 0x7978, 0x8b52, 0x1, 0x0);
        gbc.writeMem(0x8b52, { 0x8a });
        gbc.writeMem(0x8f85, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2cb3, gbc.sp());
        EXPECT(0x8f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8b52));
        EXPECT(0xcb, gbc.readMem(0x8f85));
        EXPECT(0x56, gbc.readMem(0x8f86));
        // CB 56 0190
        gbc.setState(0x7f32, 0x8298, 0xd560, 0x1b07, 0xe545, 0x3269, 0x1, 0x1);
        gbc.writeMem(0x3269, { 0x8e });
        gbc.writeMem(0x7f32, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8298, gbc.sp());
        EXPECT(0x7f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0191
        gbc.setState(0x171, 0x1830, 0xe910, 0xfa45, 0xfeca, 0xfa83, 0x1, 0x1);
        gbc.writeMem(0x171, { 0xcb, 0x56 });
        gbc.writeMem(0xfa83, { 0x3a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1830, gbc.sp());
        EXPECT(0x173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xfa83));
        // CB 56 0192
        gbc.setState(0x7948, 0xa250, 0x3b90, 0x7d5c, 0x1d4b, 0xd133, 0x0, 0x0);
        gbc.writeMem(0x7948, { 0xcb, 0x56 });
        gbc.writeMem(0xd133, { 0x37 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa250, gbc.sp());
        EXPECT(0x794a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd133));
        // CB 56 0193
        gbc.setState(0x9840, 0xfbc7, 0x9bb0, 0xe5d0, 0x56b3, 0x38d4, 0x1, 0x1);
        gbc.writeMem(0x38d4, { 0x33 });
        gbc.writeMem(0x9840, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfbc7, gbc.sp());
        EXPECT(0x9842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9840));
        EXPECT(0x56, gbc.readMem(0x9841));
        // CB 56 0194
        gbc.setState(0x4c32, 0x56b0, 0x4bc0, 0x17d, 0x887f, 0x434, 0x1, 0x1);
        gbc.writeMem(0x434, { 0x7a });
        gbc.writeMem(0x4c32, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x56b0, gbc.sp());
        EXPECT(0x4c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0195
        gbc.setState(0x1aa6, 0xb705, 0x90, 0xbe05, 0xacf2, 0x9bc5, 0x0, 0x1);
        gbc.writeMem(0x1aa6, { 0xcb, 0x56 });
        gbc.writeMem(0x9bc5, { 0x1e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb705, gbc.sp());
        EXPECT(0x1aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x9bc5));
        // CB 56 0196
        gbc.setState(0xd65f, 0x72a7, 0xcd50, 0xb0b4, 0x7be5, 0xc0fa, 0x0, 0x1);
        gbc.writeMem(0xc0fa, { 0xbe });
        gbc.writeMem(0xd65f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x72a7, gbc.sp());
        EXPECT(0xd661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xc0fa));
        EXPECT(0xcb, gbc.readMem(0xd65f));
        EXPECT(0x56, gbc.readMem(0xd660));
        // CB 56 0197
        gbc.setState(0x54ca, 0xa524, 0xccf0, 0x9f6a, 0x4e99, 0xd018, 0x0, 0x0);
        gbc.writeMem(0x54ca, { 0xcb, 0x56 });
        gbc.writeMem(0xd018, { 0x40 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa524, gbc.sp());
        EXPECT(0x54cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd018));
        // CB 56 0198
        gbc.setState(0xaf14, 0x2011, 0xdbd0, 0x63a5, 0x780e, 0xf236, 0x1, 0x1);
        gbc.writeMem(0xaf14, { 0xcb, 0x56 });
        gbc.writeMem(0xf236, { 0x21 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2011, gbc.sp());
        EXPECT(0xaf16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf14));
        EXPECT(0x56, gbc.readMem(0xaf15));
        EXPECT(0x21, gbc.readMem(0xf236));
        // CB 56 0199
        gbc.setState(0x2236, 0x2f68, 0x8470, 0x3249, 0xdd07, 0xace5, 0x0, 0x1);
        gbc.writeMem(0x2236, { 0xcb, 0x56 });
        gbc.writeMem(0xace5, { 0x50 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2f68, gbc.sp());
        EXPECT(0x2238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xace5));
        // CB 56 019A
        gbc.setState(0x5693, 0x56a3, 0x9c70, 0x5d71, 0x120e, 0x61c9, 0x0, 0x0);
        gbc.writeMem(0x5693, { 0xcb, 0x56 });
        gbc.writeMem(0x61c9, { 0x23 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x56a3, gbc.sp());
        EXPECT(0x5695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 019B
        gbc.setState(0x5387, 0xf01f, 0xc7b0, 0x9367, 0xb2c, 0x89e3, 0x0, 0x0);
        gbc.writeMem(0x5387, { 0xcb, 0x56 });
        gbc.writeMem(0x89e3, { 0x80 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0x5389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x89e3));
        // CB 56 019C
        gbc.setState(0x5e8b, 0xaa0d, 0xda50, 0xe53b, 0x2524, 0xbb27, 0x0, 0x0);
        gbc.writeMem(0x5e8b, { 0xcb, 0x56 });
        gbc.writeMem(0xbb27, { 0x4c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xaa0d, gbc.sp());
        EXPECT(0x5e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbb27));
        // CB 56 019D
        gbc.setState(0x52be, 0x91b, 0xc780, 0x3669, 0x4616, 0x937f, 0x1, 0x0);
        gbc.writeMem(0x52be, { 0xcb, 0x56 });
        gbc.writeMem(0x937f, { 0x42 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x91b, gbc.sp());
        EXPECT(0x52c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x937f));
        // CB 56 019E
        gbc.setState(0x131d, 0xdab8, 0x7170, 0x1916, 0x79bb, 0x61be, 0x1, 0x0);
        gbc.writeMem(0x131d, { 0xcb, 0x56 });
        gbc.writeMem(0x61be, { 0xa4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdab8, gbc.sp());
        EXPECT(0x131f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 019F
        gbc.setState(0x49d6, 0x1a56, 0xd9b0, 0x67a, 0x3eb9, 0xbc3f, 0x0, 0x0);
        gbc.writeMem(0x49d6, { 0xcb, 0x56 });
        gbc.writeMem(0xbc3f, { 0xef });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1a56, gbc.sp());
        EXPECT(0x49d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xbc3f));
        // CB 56 01A0
        gbc.setState(0x8a44, 0xcf52, 0x7740, 0x8c94, 0x6e6f, 0x8c85, 0x1, 0x0);
        gbc.writeMem(0x8a44, { 0xcb, 0x56 });
        gbc.writeMem(0x8c85, { 0xf9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcf52, gbc.sp());
        EXPECT(0x8a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a44));
        EXPECT(0x56, gbc.readMem(0x8a45));
        EXPECT(0xf9, gbc.readMem(0x8c85));
        // CB 56 01A1
        gbc.setState(0x9a36, 0x77dd, 0x28c0, 0x6477, 0xf892, 0x6fc1, 0x1, 0x0);
        gbc.writeMem(0x6fc1, { 0x93 });
        gbc.writeMem(0x9a36, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x77dd, gbc.sp());
        EXPECT(0x9a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a36));
        EXPECT(0x56, gbc.readMem(0x9a37));
        // CB 56 01A2
        gbc.setState(0xa997, 0x488a, 0xe150, 0x515c, 0x1dbb, 0x55c8, 0x0, 0x1);
        gbc.writeMem(0x55c8, { 0x68 });
        gbc.writeMem(0xa997, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x488a, gbc.sp());
        EXPECT(0xa999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa997));
        EXPECT(0x56, gbc.readMem(0xa998));
        // CB 56 01A3
        gbc.setState(0xc8f0, 0x819, 0x6590, 0x81f3, 0xfa20, 0x5946, 0x1, 0x0);
        gbc.writeMem(0x5946, { 0x9a });
        gbc.writeMem(0xc8f0, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x819, gbc.sp());
        EXPECT(0xc8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f0));
        EXPECT(0x56, gbc.readMem(0xc8f1));
        // CB 56 01A4
        gbc.setState(0x60a3, 0x1f86, 0xab60, 0xed44, 0xd702, 0x75ae, 0x1, 0x0);
        gbc.writeMem(0x60a3, { 0xcb, 0x56 });
        gbc.writeMem(0x75ae, { 0xe2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1f86, gbc.sp());
        EXPECT(0x60a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 01A5
        gbc.setState(0x31cd, 0xe398, 0xe450, 0x5a14, 0xbfcc, 0xca67, 0x0, 0x0);
        gbc.writeMem(0x31cd, { 0xcb, 0x56 });
        gbc.writeMem(0xca67, { 0x25 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe398, gbc.sp());
        EXPECT(0x31cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xca67));
        // CB 56 01A6
        gbc.setState(0x94ab, 0x40d2, 0x8670, 0xf3e3, 0x9b89, 0xf12, 0x0, 0x0);
        gbc.writeMem(0xf12, { 0x27 });
        gbc.writeMem(0x94ab, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x40d2, gbc.sp());
        EXPECT(0x94ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ab));
        EXPECT(0x56, gbc.readMem(0x94ac));
        // CB 56 01A7
        gbc.setState(0x4175, 0x413b, 0x62e0, 0x75f7, 0x2eb9, 0xac54, 0x1, 0x1);
        gbc.writeMem(0x4175, { 0xcb, 0x56 });
        gbc.writeMem(0xac54, { 0x86 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x413b, gbc.sp());
        EXPECT(0x4177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xac54));
        // CB 56 01A8
        gbc.setState(0xdb54, 0x493a, 0xfde0, 0x3a3b, 0x35a3, 0x888f, 0x1, 0x1);
        gbc.writeMem(0x888f, { 0x0 });
        gbc.writeMem(0xdb54, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x493a, gbc.sp());
        EXPECT(0xdb56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x888f));
        EXPECT(0xcb, gbc.readMem(0xdb54));
        EXPECT(0x56, gbc.readMem(0xdb55));
        // CB 56 01A9
        gbc.setState(0xc24c, 0xda22, 0x44b0, 0x4097, 0xece4, 0x3866, 0x1, 0x1);
        gbc.writeMem(0x3866, { 0xe7 });
        gbc.writeMem(0xc24c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xda22, gbc.sp());
        EXPECT(0xc24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc24c));
        EXPECT(0x56, gbc.readMem(0xc24d));
        // CB 56 01AA
        gbc.setState(0x1c2d, 0x2599, 0x9c40, 0xc735, 0x19d5, 0x8848, 0x0, 0x1);
        gbc.writeMem(0x1c2d, { 0xcb, 0x56 });
        gbc.writeMem(0x8848, { 0x2b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2599, gbc.sp());
        EXPECT(0x1c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8848));
        // CB 56 01AB
        gbc.setState(0xedca, 0xd633, 0x1fb0, 0x2505, 0xb1b, 0x7c6e, 0x0, 0x0);
        gbc.writeMem(0x7c6e, { 0x12 });
        gbc.writeMem(0xedca, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd633, gbc.sp());
        EXPECT(0xedcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedca));
        EXPECT(0x56, gbc.readMem(0xedcb));
        // CB 56 01AC
        gbc.setState(0x4170, 0x7c1e, 0x4cf0, 0xe4ab, 0x5478, 0x3503, 0x1, 0x1);
        gbc.writeMem(0x3503, { 0x92 });
        gbc.writeMem(0x4170, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7c1e, gbc.sp());
        EXPECT(0x4172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 01AD
        gbc.setState(0x6e0c, 0xe91e, 0x60c0, 0xe604, 0x4c50, 0xeef6, 0x1, 0x0);
        gbc.writeMem(0x6e0c, { 0xcb, 0x56 });
        gbc.writeMem(0xeef6, { 0x39 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe91e, gbc.sp());
        EXPECT(0x6e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xeef6));
        // CB 56 01AE
        gbc.setState(0x1138, 0x2df, 0x1d20, 0xf512, 0x707d, 0xebb5, 0x0, 0x0);
        gbc.writeMem(0x1138, { 0xcb, 0x56 });
        gbc.writeMem(0xebb5, { 0x3b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2df, gbc.sp());
        EXPECT(0x113a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xebb5));
        // CB 56 01AF
        gbc.setState(0xc891, 0xd064, 0xb750, 0x6233, 0x8bc9, 0x2137, 0x1, 0x1);
        gbc.writeMem(0x2137, { 0xb1 });
        gbc.writeMem(0xc891, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd064, gbc.sp());
        EXPECT(0xc893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc891));
        EXPECT(0x56, gbc.readMem(0xc892));
        // CB 56 01B0
        gbc.setState(0xbe7e, 0x6fd2, 0x7ac0, 0xe2d3, 0x3ef, 0x7b06, 0x1, 0x1);
        gbc.writeMem(0x7b06, { 0x5a });
        gbc.writeMem(0xbe7e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6fd2, gbc.sp());
        EXPECT(0xbe80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe7e));
        EXPECT(0x56, gbc.readMem(0xbe7f));
        // CB 56 01B1
        gbc.setState(0x76e3, 0x18e4, 0x9760, 0x367, 0x45f2, 0x1448, 0x0, 0x1);
        gbc.writeMem(0x1448, { 0x4e });
        gbc.writeMem(0x76e3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x18e4, gbc.sp());
        EXPECT(0x76e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 01B2
        gbc.setState(0x4160, 0x9b0e, 0x13c0, 0xd3c6, 0xee6d, 0x3894, 0x0, 0x0);
        gbc.writeMem(0x3894, { 0xb0 });
        gbc.writeMem(0x4160, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9b0e, gbc.sp());
        EXPECT(0x4162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 01B3
        gbc.setState(0x947d, 0xd42d, 0xa1c0, 0x788f, 0xf556, 0x7523, 0x0, 0x0);
        gbc.writeMem(0x7523, { 0x57 });
        gbc.writeMem(0x947d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd42d, gbc.sp());
        EXPECT(0x947f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947d));
        EXPECT(0x56, gbc.readMem(0x947e));
        // CB 56 01B4
        gbc.setState(0x1ec7, 0x1410, 0x38f0, 0xf106, 0x15a4, 0x7c46, 0x0, 0x0);
        gbc.writeMem(0x1ec7, { 0xcb, 0x56 });
        gbc.writeMem(0x7c46, { 0x1f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1410, gbc.sp());
        EXPECT(0x1ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 01B5
        gbc.setState(0x4d4c, 0xd2a5, 0xf5e0, 0xaa, 0x6f00, 0xb9b5, 0x0, 0x1);
        gbc.writeMem(0x4d4c, { 0xcb, 0x56 });
        gbc.writeMem(0xb9b5, { 0x9e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd2a5, gbc.sp());
        EXPECT(0x4d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb9b5));
        // CB 56 01B6
        gbc.setState(0xc8c8, 0x3ef9, 0xf080, 0xc437, 0xf64a, 0xb641, 0x0, 0x1);
        gbc.writeMem(0xb641, { 0xb });
        gbc.writeMem(0xc8c8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3ef9, gbc.sp());
        EXPECT(0xc8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb641));
        EXPECT(0xcb, gbc.readMem(0xc8c8));
        EXPECT(0x56, gbc.readMem(0xc8c9));
        // CB 56 01B7
        gbc.setState(0xae4, 0x5651, 0x2c10, 0xb74d, 0x12b3, 0xd002, 0x1, 0x0);
        gbc.writeMem(0xae4, { 0xcb, 0x56 });
        gbc.writeMem(0xd002, { 0xa7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5651, gbc.sp());
        EXPECT(0xae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd002));
        // CB 56 01B8
        gbc.setState(0x1ef, 0xf312, 0xf990, 0xb897, 0xf210, 0x2e8e, 0x0, 0x1);
        gbc.writeMem(0x1ef, { 0xcb, 0x56 });
        gbc.writeMem(0x2e8e, { 0x81 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf312, gbc.sp());
        EXPECT(0x1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 01B9
        gbc.setState(0x83dd, 0xde56, 0x2840, 0x9569, 0x1c09, 0x727f, 0x1, 0x0);
        gbc.writeMem(0x727f, { 0x84 });
        gbc.writeMem(0x83dd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xde56, gbc.sp());
        EXPECT(0x83df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83dd));
        EXPECT(0x56, gbc.readMem(0x83de));
        // CB 56 01BA
        gbc.setState(0x79e2, 0x8de8, 0xca70, 0x28e1, 0x7c03, 0xaee0, 0x0, 0x0);
        gbc.writeMem(0x79e2, { 0xcb, 0x56 });
        gbc.writeMem(0xaee0, { 0xd8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8de8, gbc.sp());
        EXPECT(0x79e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xaee0));
        // CB 56 01BB
        gbc.setState(0xbc07, 0xead8, 0xeb0, 0x6c52, 0xeeef, 0xaa0a, 0x0, 0x1);
        gbc.writeMem(0xaa0a, { 0x2d });
        gbc.writeMem(0xbc07, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xead8, gbc.sp());
        EXPECT(0xbc09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xaa0a));
        EXPECT(0xcb, gbc.readMem(0xbc07));
        EXPECT(0x56, gbc.readMem(0xbc08));
        // CB 56 01BC
        gbc.setState(0x685, 0x4a2c, 0x5140, 0x33cc, 0x57d7, 0x9634, 0x0, 0x0);
        gbc.writeMem(0x685, { 0xcb, 0x56 });
        gbc.writeMem(0x9634, { 0xe9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4a2c, gbc.sp());
        EXPECT(0x687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9634));
        // CB 56 01BD
        gbc.setState(0xc619, 0x7f81, 0x3850, 0x5ba5, 0x54eb, 0xb82d, 0x1, 0x1);
        gbc.writeMem(0xb82d, { 0x12 });
        gbc.writeMem(0xc619, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7f81, gbc.sp());
        EXPECT(0xc61b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb82d));
        EXPECT(0xcb, gbc.readMem(0xc619));
        EXPECT(0x56, gbc.readMem(0xc61a));
        // CB 56 01BE
        gbc.setState(0xe758, 0xbe60, 0x9290, 0xde91, 0xa902, 0x285b, 0x1, 0x1);
        gbc.writeMem(0x285b, { 0xce });
        gbc.writeMem(0xe758, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbe60, gbc.sp());
        EXPECT(0xe75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe758));
        EXPECT(0x56, gbc.readMem(0xe759));
        // CB 56 01BF
        gbc.setState(0x8dde, 0xd8ef, 0x2290, 0x6255, 0xe45a, 0x91c9, 0x0, 0x0);
        gbc.writeMem(0x8dde, { 0xcb, 0x56 });
        gbc.writeMem(0x91c9, { 0xf1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd8ef, gbc.sp());
        EXPECT(0x8de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dde));
        EXPECT(0x56, gbc.readMem(0x8ddf));
        EXPECT(0xf1, gbc.readMem(0x91c9));
        // CB 56 01C0
        gbc.setState(0xdb08, 0xed8a, 0x8700, 0xfae8, 0x6bd4, 0x2d7f, 0x0, 0x1);
        gbc.writeMem(0x2d7f, { 0xb9 });
        gbc.writeMem(0xdb08, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xed8a, gbc.sp());
        EXPECT(0xdb0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb08));
        EXPECT(0x56, gbc.readMem(0xdb09));
        // CB 56 01C1
        gbc.setState(0x9952, 0x5e81, 0xfb30, 0xd4a8, 0x66f8, 0xfc2, 0x1, 0x1);
        gbc.writeMem(0xfc2, { 0x87 });
        gbc.writeMem(0x9952, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5e81, gbc.sp());
        EXPECT(0x9954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9952));
        EXPECT(0x56, gbc.readMem(0x9953));
        // CB 56 01C3
        gbc.setState(0xc6a3, 0x9ffa, 0x5470, 0x229c, 0x7ca5, 0x34f, 0x0, 0x0);
        gbc.writeMem(0x34f, { 0x44 });
        gbc.writeMem(0xc6a3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9ffa, gbc.sp());
        EXPECT(0xc6a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a3));
        EXPECT(0x56, gbc.readMem(0xc6a4));
        // CB 56 01C4
        gbc.setState(0x28d7, 0xeead, 0x4d50, 0xdfb, 0x12be, 0x1c8b, 0x0, 0x0);
        gbc.writeMem(0x1c8b, { 0x8b });
        gbc.writeMem(0x28d7, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xeead, gbc.sp());
        EXPECT(0x28d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 01C5
        gbc.setState(0xe06, 0x797b, 0x2ad0, 0x193f, 0xa783, 0x76c1, 0x1, 0x0);
        gbc.writeMem(0xe06, { 0xcb, 0x56 });
        gbc.writeMem(0x76c1, { 0xbd });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x797b, gbc.sp());
        EXPECT(0xe08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 01C6
        gbc.setState(0xed0e, 0xb9a9, 0x5f50, 0x9ae7, 0xef54, 0x106, 0x1, 0x1);
        gbc.writeMem(0x106, { 0x34 });
        gbc.writeMem(0xed0e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb9a9, gbc.sp());
        EXPECT(0xed10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed0e));
        EXPECT(0x56, gbc.readMem(0xed0f));
        // CB 56 01C9
        gbc.setState(0x71c5, 0xa94c, 0xec50, 0x3da6, 0x56f8, 0x7cd3, 0x0, 0x0);
        gbc.writeMem(0x71c5, { 0xcb, 0x56 });
        gbc.writeMem(0x7cd3, { 0x6f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa94c, gbc.sp());
        EXPECT(0x71c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 01CA
        gbc.setState(0x6d37, 0x53ec, 0x4860, 0x4c50, 0x5758, 0xfe58, 0x0, 0x0);
        gbc.writeMem(0x6d37, { 0xcb, 0x56 });
        gbc.writeMem(0xfe58, { 0xc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x53ec, gbc.sp());
        EXPECT(0x6d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xfe58));
        // CB 56 01CB
        gbc.setState(0x7532, 0x8911, 0x3ff0, 0x1a3e, 0x9f1, 0x3fce, 0x0, 0x1);
        gbc.writeMem(0x3fce, { 0xf3 });
        gbc.writeMem(0x7532, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8911, gbc.sp());
        EXPECT(0x7534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 01CC
        gbc.setState(0x19ce, 0xdada, 0xf1e0, 0xe975, 0x8a5e, 0x68d8, 0x0, 0x1);
        gbc.writeMem(0x19ce, { 0xcb, 0x56 });
        gbc.writeMem(0x68d8, { 0x6c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdada, gbc.sp());
        EXPECT(0x19d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 01CD
        gbc.setState(0x8ced, 0x4f3c, 0x94b0, 0x63e1, 0x11f3, 0xe237, 0x1, 0x0);
        gbc.writeMem(0x8ced, { 0xcb, 0x56 });
        gbc.writeMem(0xe237, { 0x79 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4f3c, gbc.sp());
        EXPECT(0x8cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ced));
        EXPECT(0x56, gbc.readMem(0x8cee));
        EXPECT(0x79, gbc.readMem(0xe237));
        // CB 56 01CE
        gbc.setState(0x4f91, 0x4e98, 0xac80, 0x2f78, 0x6051, 0x7dc2, 0x0, 0x1);
        gbc.writeMem(0x4f91, { 0xcb, 0x56 });
        gbc.writeMem(0x7dc2, { 0x4e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4e98, gbc.sp());
        EXPECT(0x4f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 01CF
        gbc.setState(0xc524, 0x26f5, 0xf260, 0x9d5f, 0x28a4, 0x96af, 0x1, 0x1);
        gbc.writeMem(0x96af, { 0x2e });
        gbc.writeMem(0xc524, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x26f5, gbc.sp());
        EXPECT(0xc526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x96af));
        EXPECT(0xcb, gbc.readMem(0xc524));
        EXPECT(0x56, gbc.readMem(0xc525));
        // CB 56 01D1
        gbc.setState(0x5c64, 0x806d, 0x2c30, 0x8756, 0x8823, 0xb8ee, 0x1, 0x0);
        gbc.writeMem(0x5c64, { 0xcb, 0x56 });
        gbc.writeMem(0xb8ee, { 0x5d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x806d, gbc.sp());
        EXPECT(0x5c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb8ee));
        // CB 56 01D2
        gbc.setState(0xeba1, 0xaecc, 0x9f30, 0x8975, 0x1d29, 0x61f8, 0x0, 0x0);
        gbc.writeMem(0x61f8, { 0xc5 });
        gbc.writeMem(0xeba1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xaecc, gbc.sp());
        EXPECT(0xeba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeba1));
        EXPECT(0x56, gbc.readMem(0xeba2));
        // CB 56 01D3
        gbc.setState(0x37cb, 0x3f0d, 0x360, 0x95f6, 0x9bc4, 0x47dd, 0x0, 0x1);
        gbc.writeMem(0x37cb, { 0xcb, 0x56 });
        gbc.writeMem(0x47dd, { 0xbd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3f0d, gbc.sp());
        EXPECT(0x37cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 01D5
        gbc.setState(0x1ed1, 0xf29c, 0x77c0, 0xd239, 0xf564, 0xfa03, 0x1, 0x0);
        gbc.writeMem(0x1ed1, { 0xcb, 0x56 });
        gbc.writeMem(0xfa03, { 0xf0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf29c, gbc.sp());
        EXPECT(0x1ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xfa03));
        // CB 56 01D6
        gbc.setState(0xbc46, 0xc543, 0x1a30, 0x345e, 0x7f0c, 0x7b90, 0x0, 0x1);
        gbc.writeMem(0x7b90, { 0x67 });
        gbc.writeMem(0xbc46, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc543, gbc.sp());
        EXPECT(0xbc48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc46));
        EXPECT(0x56, gbc.readMem(0xbc47));
        // CB 56 01D7
        gbc.setState(0xb1ab, 0x19b2, 0x7e40, 0x8d9a, 0xca9a, 0xc0dd, 0x1, 0x1);
        gbc.writeMem(0xb1ab, { 0xcb, 0x56 });
        gbc.writeMem(0xc0dd, { 0x5c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x19b2, gbc.sp());
        EXPECT(0xb1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ab));
        EXPECT(0x56, gbc.readMem(0xb1ac));
        EXPECT(0x5c, gbc.readMem(0xc0dd));
        // CB 56 01D8
        gbc.setState(0x4c05, 0x5ac, 0xfcd0, 0xe04e, 0xeb6f, 0xcc47, 0x1, 0x0);
        gbc.writeMem(0x4c05, { 0xcb, 0x56 });
        gbc.writeMem(0xcc47, { 0xcb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5ac, gbc.sp());
        EXPECT(0x4c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc47));
        // CB 56 01D9
        gbc.setState(0xedc2, 0xf9e5, 0xac70, 0xfdc, 0x840b, 0x7e62, 0x0, 0x1);
        gbc.writeMem(0x7e62, { 0x96 });
        gbc.writeMem(0xedc2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf9e5, gbc.sp());
        EXPECT(0xedc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc2));
        EXPECT(0x56, gbc.readMem(0xedc3));
        // CB 56 01DA
        gbc.setState(0xa3e5, 0xb7e6, 0xa2c0, 0xc8, 0xd48a, 0x1284, 0x0, 0x1);
        gbc.writeMem(0x1284, { 0x77 });
        gbc.writeMem(0xa3e5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb7e6, gbc.sp());
        EXPECT(0xa3e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e5));
        EXPECT(0x56, gbc.readMem(0xa3e6));
        // CB 56 01DB
        gbc.setState(0x5568, 0xca1b, 0xcd30, 0x85ce, 0x6c80, 0x6ae9, 0x1, 0x0);
        gbc.writeMem(0x5568, { 0xcb, 0x56 });
        gbc.writeMem(0x6ae9, { 0x7f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xca1b, gbc.sp());
        EXPECT(0x556a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 01DC
        gbc.setState(0xb2f9, 0xcac9, 0x4450, 0x33fc, 0x99f0, 0x880, 0x0, 0x0);
        gbc.writeMem(0x880, { 0xc4 });
        gbc.writeMem(0xb2f9, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcac9, gbc.sp());
        EXPECT(0xb2fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f9));
        EXPECT(0x56, gbc.readMem(0xb2fa));
        // CB 56 01DD
        gbc.setState(0xd042, 0xdfb6, 0x1dc0, 0x5bb6, 0xff4e, 0xebbe, 0x0, 0x1);
        gbc.writeMem(0xd042, { 0xcb, 0x56 });
        gbc.writeMem(0xebbe, { 0x16 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdfb6, gbc.sp());
        EXPECT(0xd044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd042));
        EXPECT(0x56, gbc.readMem(0xd043));
        EXPECT(0x16, gbc.readMem(0xebbe));
        // CB 56 01DF
        gbc.setState(0x4b60, 0xba6, 0xf6e0, 0x808b, 0x657c, 0x1bc0, 0x0, 0x0);
        gbc.writeMem(0x1bc0, { 0xb7 });
        gbc.writeMem(0x4b60, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xba6, gbc.sp());
        EXPECT(0x4b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 01E0
        gbc.setState(0x2565, 0x6eab, 0xdf60, 0x7b4a, 0x4921, 0x5d8b, 0x0, 0x0);
        gbc.writeMem(0x2565, { 0xcb, 0x56 });
        gbc.writeMem(0x5d8b, { 0x7f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6eab, gbc.sp());
        EXPECT(0x2567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 01E1
        gbc.setState(0x877a, 0x2471, 0xce0, 0xf1d1, 0xb220, 0x7a36, 0x0, 0x1);
        gbc.writeMem(0x7a36, { 0x60 });
        gbc.writeMem(0x877a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2471, gbc.sp());
        EXPECT(0x877c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x877a));
        EXPECT(0x56, gbc.readMem(0x877b));
        // CB 56 01E2
        gbc.setState(0x4942, 0xc54f, 0xed10, 0xde45, 0x8eb2, 0x5b0c, 0x1, 0x1);
        gbc.writeMem(0x4942, { 0xcb, 0x56 });
        gbc.writeMem(0x5b0c, { 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc54f, gbc.sp());
        EXPECT(0x4944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 01E3
        gbc.setState(0x221b, 0xb69f, 0x1ae0, 0x24b8, 0x5ce9, 0x579, 0x1, 0x1);
        gbc.writeMem(0x579, { 0x54 });
        gbc.writeMem(0x221b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb69f, gbc.sp());
        EXPECT(0x221d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 01E4
        gbc.setState(0x6deb, 0xf2d6, 0x3200, 0xd354, 0xbb9e, 0x9b23, 0x0, 0x0);
        gbc.writeMem(0x6deb, { 0xcb, 0x56 });
        gbc.writeMem(0x9b23, { 0x92 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf2d6, gbc.sp());
        EXPECT(0x6ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9b23));
        // CB 56 01E5
        gbc.setState(0xb8d5, 0xb11b, 0x2720, 0xcd79, 0x19ae, 0x1274, 0x0, 0x1);
        gbc.writeMem(0x1274, { 0xb9 });
        gbc.writeMem(0xb8d5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb11b, gbc.sp());
        EXPECT(0xb8d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d5));
        EXPECT(0x56, gbc.readMem(0xb8d6));
        // CB 56 01E6
        gbc.setState(0xcb4a, 0xd4d2, 0x5a80, 0xa9d1, 0xfad5, 0x1e7e, 0x1, 0x1);
        gbc.writeMem(0x1e7e, { 0x6 });
        gbc.writeMem(0xcb4a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd4d2, gbc.sp());
        EXPECT(0xcb4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4a));
        EXPECT(0x56, gbc.readMem(0xcb4b));
        // CB 56 01E7
        gbc.setState(0x7f90, 0xf136, 0xda60, 0xe232, 0x38be, 0x9a20, 0x0, 0x0);
        gbc.writeMem(0x7f90, { 0xcb, 0x56 });
        gbc.writeMem(0x9a20, { 0x4b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf136, gbc.sp());
        EXPECT(0x7f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9a20));
        // CB 56 01E8
        gbc.setState(0x97a0, 0x35a2, 0x8420, 0x115a, 0x4e7, 0x8893, 0x1, 0x1);
        gbc.writeMem(0x8893, { 0xc });
        gbc.writeMem(0x97a0, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x35a2, gbc.sp());
        EXPECT(0x97a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8893));
        EXPECT(0xcb, gbc.readMem(0x97a0));
        EXPECT(0x56, gbc.readMem(0x97a1));
        // CB 56 01E9
        gbc.setState(0x13db, 0xeb, 0xef90, 0xa328, 0x2b96, 0xfaae, 0x1, 0x0);
        gbc.writeMem(0x13db, { 0xcb, 0x56 });
        gbc.writeMem(0xfaae, { 0xda });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xeb, gbc.sp());
        EXPECT(0x13dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xfaae));
        // CB 56 01EA
        gbc.setState(0x13bd, 0xcad8, 0xeaf0, 0x22bb, 0xb290, 0xe28, 0x1, 0x0);
        gbc.writeMem(0xe28, { 0x40 });
        gbc.writeMem(0x13bd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcad8, gbc.sp());
        EXPECT(0x13bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 01EB
        gbc.setState(0x7966, 0xbaef, 0xff0, 0x93e2, 0xbd78, 0x8f94, 0x0, 0x0);
        gbc.writeMem(0x7966, { 0xcb, 0x56 });
        gbc.writeMem(0x8f94, { 0xfa });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbaef, gbc.sp());
        EXPECT(0x7968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8f94));
        // CB 56 01EC
        gbc.setState(0xd804, 0x918c, 0xf700, 0xa59, 0x75fa, 0xcb33, 0x1, 0x1);
        gbc.writeMem(0xcb33, { 0x5f });
        gbc.writeMem(0xd804, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x918c, gbc.sp());
        EXPECT(0xd806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xcb33));
        EXPECT(0xcb, gbc.readMem(0xd804));
        EXPECT(0x56, gbc.readMem(0xd805));
        // CB 56 01ED
        gbc.setState(0xdf7, 0x395e, 0xdfd0, 0x185f, 0x81c, 0xb876, 0x0, 0x1);
        gbc.writeMem(0xdf7, { 0xcb, 0x56 });
        gbc.writeMem(0xb876, { 0x16 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x395e, gbc.sp());
        EXPECT(0xdf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb876));
        // CB 56 01EE
        gbc.setState(0x648f, 0x1018, 0xfa50, 0x6db1, 0xe10f, 0xcc21, 0x0, 0x0);
        gbc.writeMem(0x648f, { 0xcb, 0x56 });
        gbc.writeMem(0xcc21, { 0x9a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1018, gbc.sp());
        EXPECT(0x6491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcc21));
        // CB 56 01F0
        gbc.setState(0x66a7, 0xad76, 0x7c30, 0x19c5, 0x178c, 0xa1ea, 0x0, 0x0);
        gbc.writeMem(0x66a7, { 0xcb, 0x56 });
        gbc.writeMem(0xa1ea, { 0xf6 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xad76, gbc.sp());
        EXPECT(0x66a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xa1ea));
        // CB 56 01F1
        gbc.setState(0x29dc, 0x73ea, 0x7000, 0xba3a, 0x8552, 0xf201, 0x0, 0x1);
        gbc.writeMem(0x29dc, { 0xcb, 0x56 });
        gbc.writeMem(0xf201, { 0x21 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x73ea, gbc.sp());
        EXPECT(0x29de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xf201));
        // CB 56 01F2
        gbc.setState(0x380a, 0x4fa1, 0x2e0, 0x9815, 0x5ab2, 0xaecb, 0x0, 0x0);
        gbc.writeMem(0x380a, { 0xcb, 0x56 });
        gbc.writeMem(0xaecb, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4fa1, gbc.sp());
        EXPECT(0x380c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xaecb));
        // CB 56 01F3
        gbc.setState(0x2b07, 0x5942, 0xd270, 0xe550, 0x7185, 0x479a, 0x1, 0x0);
        gbc.writeMem(0x2b07, { 0xcb, 0x56 });
        gbc.writeMem(0x479a, { 0xc7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5942, gbc.sp());
        EXPECT(0x2b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 01F4
        gbc.setState(0x7ef9, 0xdaf4, 0x4be0, 0x12e6, 0x1744, 0xf144, 0x0, 0x1);
        gbc.writeMem(0x7ef9, { 0xcb, 0x56 });
        gbc.writeMem(0xf144, { 0x38 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdaf4, gbc.sp());
        EXPECT(0x7efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xf144));
        // CB 56 01F5
        gbc.setState(0xcd56, 0x8de3, 0x4470, 0xe4fc, 0xf98d, 0xc756, 0x1, 0x1);
        gbc.writeMem(0xc756, { 0x96 });
        gbc.writeMem(0xcd56, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8de3, gbc.sp());
        EXPECT(0xcd58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xc756));
        EXPECT(0xcb, gbc.readMem(0xcd56));
        EXPECT(0x56, gbc.readMem(0xcd57));
        // CB 56 01F6
        gbc.setState(0xe491, 0x52fe, 0x5f80, 0x4a20, 0xa2b3, 0x6ef5, 0x1, 0x1);
        gbc.writeMem(0x6ef5, { 0xb0 });
        gbc.writeMem(0xe491, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x52fe, gbc.sp());
        EXPECT(0xe493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe491));
        EXPECT(0x56, gbc.readMem(0xe492));
        // CB 56 01F7
        gbc.setState(0xd1f6, 0x5b2, 0xb7a0, 0x2aca, 0x4717, 0x33a, 0x1, 0x1);
        gbc.writeMem(0x33a, { 0x6 });
        gbc.writeMem(0xd1f6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5b2, gbc.sp());
        EXPECT(0xd1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f6));
        EXPECT(0x56, gbc.readMem(0xd1f7));
        // CB 56 01F8
        gbc.setState(0x9012, 0x88c6, 0xa80, 0xed24, 0xbfee, 0xc6e, 0x1, 0x1);
        gbc.writeMem(0xc6e, { 0xb9 });
        gbc.writeMem(0x9012, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x88c6, gbc.sp());
        EXPECT(0x9014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9012));
        EXPECT(0x56, gbc.readMem(0x9013));
        // CB 56 01F9
        gbc.setState(0x1c7, 0xcc11, 0x6d80, 0xbe2a, 0xfed1, 0x1328, 0x0, 0x0);
        gbc.writeMem(0x1c7, { 0xcb, 0x56 });
        gbc.writeMem(0x1328, { 0x80 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcc11, gbc.sp());
        EXPECT(0x1c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 01FA
        gbc.setState(0x4d1b, 0x9885, 0x6500, 0xc4a9, 0x53f4, 0x2af9, 0x1, 0x1);
        gbc.writeMem(0x2af9, { 0xce });
        gbc.writeMem(0x4d1b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9885, gbc.sp());
        EXPECT(0x4d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 01FB
        gbc.setState(0x2393, 0x4c5f, 0xf730, 0x12c9, 0x2a10, 0x4838, 0x0, 0x0);
        gbc.writeMem(0x2393, { 0xcb, 0x56 });
        gbc.writeMem(0x4838, { 0x86 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4c5f, gbc.sp());
        EXPECT(0x2395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 01FC
        gbc.setState(0xea26, 0xc3a0, 0x2d70, 0x37e6, 0x67ed, 0x1ea5, 0x0, 0x0);
        gbc.writeMem(0x1ea5, { 0x90 });
        gbc.writeMem(0xea26, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc3a0, gbc.sp());
        EXPECT(0xea28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea26));
        EXPECT(0x56, gbc.readMem(0xea27));
        // CB 56 01FD
        gbc.setState(0x3ba5, 0x4a56, 0x72a0, 0x14c6, 0x137d, 0x7c55, 0x1, 0x1);
        gbc.writeMem(0x3ba5, { 0xcb, 0x56 });
        gbc.writeMem(0x7c55, { 0x62 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4a56, gbc.sp());
        EXPECT(0x3ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 01FE
        gbc.setState(0xdfad, 0xbcb0, 0x5f00, 0x6182, 0x8ac7, 0xed31, 0x1, 0x1);
        gbc.writeMem(0xdfad, { 0xcb, 0x56 });
        gbc.writeMem(0xed31, { 0x1c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbcb0, gbc.sp());
        EXPECT(0xdfaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfad));
        EXPECT(0x56, gbc.readMem(0xdfae));
        EXPECT(0x1c, gbc.readMem(0xed31));
        // CB 56 01FF
        gbc.setState(0x7b6, 0xed15, 0xc370, 0xac14, 0xfe0f, 0xbef8, 0x1, 0x1);
        gbc.writeMem(0x7b6, { 0xcb, 0x56 });
        gbc.writeMem(0xbef8, { 0x58 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xed15, gbc.sp());
        EXPECT(0x7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbef8));
        // CB 56 0200
        gbc.setState(0x6ce3, 0x685f, 0x3660, 0xc99a, 0x1ef7, 0x7106, 0x1, 0x0);
        gbc.writeMem(0x6ce3, { 0xcb, 0x56 });
        gbc.writeMem(0x7106, { 0x2f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x685f, gbc.sp());
        EXPECT(0x6ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0201
        gbc.setState(0x514f, 0x7c2d, 0xa710, 0x93fc, 0x7fe7, 0x716b, 0x1, 0x1);
        gbc.writeMem(0x514f, { 0xcb, 0x56 });
        gbc.writeMem(0x716b, { 0xa2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7c2d, gbc.sp());
        EXPECT(0x5151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0202
        gbc.setState(0xbfa7, 0x4cfd, 0x7050, 0x4901, 0x3564, 0xcb66, 0x0, 0x0);
        gbc.writeMem(0xbfa7, { 0xcb, 0x56 });
        gbc.writeMem(0xcb66, { 0xee });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4cfd, gbc.sp());
        EXPECT(0xbfa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa7));
        EXPECT(0x56, gbc.readMem(0xbfa8));
        EXPECT(0xee, gbc.readMem(0xcb66));
        // CB 56 0203
        gbc.setState(0xac8a, 0x8872, 0xa4f0, 0x3a66, 0xae58, 0x80f2, 0x1, 0x1);
        gbc.writeMem(0x80f2, { 0x15 });
        gbc.writeMem(0xac8a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8872, gbc.sp());
        EXPECT(0xac8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x80f2));
        EXPECT(0xcb, gbc.readMem(0xac8a));
        EXPECT(0x56, gbc.readMem(0xac8b));
        // CB 56 0204
        gbc.setState(0x978b, 0xd177, 0xce10, 0xad13, 0xc2c8, 0xfd92, 0x0, 0x1);
        gbc.writeMem(0x978b, { 0xcb, 0x56 });
        gbc.writeMem(0xfd92, { 0x80 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd177, gbc.sp());
        EXPECT(0x978d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x978b));
        EXPECT(0x56, gbc.readMem(0x978c));
        EXPECT(0x80, gbc.readMem(0xfd92));
        // CB 56 0205
        gbc.setState(0x7db4, 0x6f0e, 0x50, 0x879c, 0x17d4, 0x4bfb, 0x1, 0x0);
        gbc.writeMem(0x4bfb, { 0xbc });
        gbc.writeMem(0x7db4, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6f0e, gbc.sp());
        EXPECT(0x7db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0206
        gbc.setState(0x91ea, 0x257e, 0x46b0, 0xcefe, 0x50dd, 0xf8cb, 0x1, 0x1);
        gbc.writeMem(0x91ea, { 0xcb, 0x56 });
        gbc.writeMem(0xf8cb, { 0x2a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x257e, gbc.sp());
        EXPECT(0x91ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ea));
        EXPECT(0x56, gbc.readMem(0x91eb));
        EXPECT(0x2a, gbc.readMem(0xf8cb));
        // CB 56 0207
        gbc.setState(0xa11a, 0x1a7b, 0x33a0, 0x91f3, 0x7632, 0x66cb, 0x1, 0x1);
        gbc.writeMem(0x66cb, { 0xe2 });
        gbc.writeMem(0xa11a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1a7b, gbc.sp());
        EXPECT(0xa11c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa11a));
        EXPECT(0x56, gbc.readMem(0xa11b));
        // CB 56 0208
        gbc.setState(0xc90f, 0x9370, 0x7640, 0x291e, 0x1243, 0xdcea, 0x0, 0x0);
        gbc.writeMem(0xc90f, { 0xcb, 0x56 });
        gbc.writeMem(0xdcea, { 0x7a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9370, gbc.sp());
        EXPECT(0xc911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc90f));
        EXPECT(0x56, gbc.readMem(0xc910));
        EXPECT(0x7a, gbc.readMem(0xdcea));
        // CB 56 0209
        gbc.setState(0x47c6, 0x5eac, 0xcd90, 0x34b7, 0xed5a, 0x3961, 0x0, 0x0);
        gbc.writeMem(0x3961, { 0x4a });
        gbc.writeMem(0x47c6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5eac, gbc.sp());
        EXPECT(0x47c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 020B
        gbc.setState(0xc29d, 0x46ad, 0xe570, 0x7e05, 0x71a, 0x5c13, 0x1, 0x0);
        gbc.writeMem(0x5c13, { 0x3e });
        gbc.writeMem(0xc29d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x46ad, gbc.sp());
        EXPECT(0xc29f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc29d));
        EXPECT(0x56, gbc.readMem(0xc29e));
        // CB 56 020C
        gbc.setState(0xb9a5, 0x846c, 0xcbf0, 0xf798, 0x16bd, 0xa387, 0x0, 0x0);
        gbc.writeMem(0xa387, { 0x82 });
        gbc.writeMem(0xb9a5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x846c, gbc.sp());
        EXPECT(0xb9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa387));
        EXPECT(0xcb, gbc.readMem(0xb9a5));
        EXPECT(0x56, gbc.readMem(0xb9a6));
        // CB 56 020D
        gbc.setState(0x317f, 0x868c, 0xec60, 0xf164, 0x8570, 0x90d1, 0x1, 0x1);
        gbc.writeMem(0x317f, { 0xcb, 0x56 });
        gbc.writeMem(0x90d1, { 0xed });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x868c, gbc.sp());
        EXPECT(0x3181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x90d1));
        // CB 56 020E
        gbc.setState(0xafce, 0x32d6, 0x1530, 0x8472, 0x6fee, 0xdd7c, 0x0, 0x1);
        gbc.writeMem(0xafce, { 0xcb, 0x56 });
        gbc.writeMem(0xdd7c, { 0xf2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x32d6, gbc.sp());
        EXPECT(0xafd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafce));
        EXPECT(0x56, gbc.readMem(0xafcf));
        EXPECT(0xf2, gbc.readMem(0xdd7c));
        // CB 56 020F
        gbc.setState(0x7a4a, 0x3136, 0x1940, 0xada5, 0xd81c, 0x43a7, 0x1, 0x1);
        gbc.writeMem(0x43a7, { 0x26 });
        gbc.writeMem(0x7a4a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3136, gbc.sp());
        EXPECT(0x7a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0210
        gbc.setState(0xc105, 0x564a, 0x6930, 0xa569, 0x6f2c, 0x6c22, 0x0, 0x0);
        gbc.writeMem(0x6c22, { 0x58 });
        gbc.writeMem(0xc105, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x564a, gbc.sp());
        EXPECT(0xc107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc105));
        EXPECT(0x56, gbc.readMem(0xc106));
        // CB 56 0211
        gbc.setState(0x9b34, 0xf699, 0x3790, 0x6177, 0x4ccb, 0xa301, 0x1, 0x1);
        gbc.writeMem(0x9b34, { 0xcb, 0x56 });
        gbc.writeMem(0xa301, { 0x5b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf699, gbc.sp());
        EXPECT(0x9b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b34));
        EXPECT(0x56, gbc.readMem(0x9b35));
        EXPECT(0x5b, gbc.readMem(0xa301));
        // CB 56 0212
        gbc.setState(0xfcf, 0xbd9e, 0x2910, 0x6084, 0x8b36, 0x8e3e, 0x1, 0x1);
        gbc.writeMem(0xfcf, { 0xcb, 0x56 });
        gbc.writeMem(0x8e3e, { 0xa0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbd9e, gbc.sp());
        EXPECT(0xfd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8e3e));
        // CB 56 0213
        gbc.setState(0x2fea, 0x191e, 0x41b0, 0x3f1c, 0x6e40, 0x6ca5, 0x0, 0x1);
        gbc.writeMem(0x2fea, { 0xcb, 0x56 });
        gbc.writeMem(0x6ca5, { 0x7b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x191e, gbc.sp());
        EXPECT(0x2fec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0214
        gbc.setState(0x5afd, 0x5afe, 0x4e40, 0xca89, 0x8fb2, 0x5143, 0x0, 0x1);
        gbc.writeMem(0x5143, { 0xb3 });
        gbc.writeMem(0x5afd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5afe, gbc.sp());
        EXPECT(0x5aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0215
        gbc.setState(0xc246, 0xa2c3, 0x3aa0, 0x5976, 0xc78, 0x3052, 0x1, 0x0);
        gbc.writeMem(0x3052, { 0xef });
        gbc.writeMem(0xc246, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa2c3, gbc.sp());
        EXPECT(0xc248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc246));
        EXPECT(0x56, gbc.readMem(0xc247));
        // CB 56 0216
        gbc.setState(0xc0ac, 0x57bd, 0x26e0, 0xe7e2, 0xe476, 0x728, 0x1, 0x0);
        gbc.writeMem(0x728, { 0xa4 });
        gbc.writeMem(0xc0ac, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x57bd, gbc.sp());
        EXPECT(0xc0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ac));
        EXPECT(0x56, gbc.readMem(0xc0ad));
        // CB 56 0217
        gbc.setState(0xd037, 0x3be0, 0x6100, 0x41eb, 0x34d, 0xadaa, 0x1, 0x1);
        gbc.writeMem(0xadaa, { 0xd2 });
        gbc.writeMem(0xd037, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3be0, gbc.sp());
        EXPECT(0xd039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xadaa));
        EXPECT(0xcb, gbc.readMem(0xd037));
        EXPECT(0x56, gbc.readMem(0xd038));
        // CB 56 0218
        gbc.setState(0xb56d, 0xbbf0, 0x9920, 0x461, 0x6fe1, 0x24ae, 0x1, 0x0);
        gbc.writeMem(0x24ae, { 0xe0 });
        gbc.writeMem(0xb56d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbbf0, gbc.sp());
        EXPECT(0xb56f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb56d));
        EXPECT(0x56, gbc.readMem(0xb56e));
        // CB 56 0219
        gbc.setState(0xec95, 0x8760, 0x9eb0, 0x4bb1, 0xf117, 0xb2a3, 0x0, 0x0);
        gbc.writeMem(0xb2a3, { 0x25 });
        gbc.writeMem(0xec95, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8760, gbc.sp());
        EXPECT(0xec97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb2a3));
        EXPECT(0xcb, gbc.readMem(0xec95));
        EXPECT(0x56, gbc.readMem(0xec96));
        // CB 56 021A
        gbc.setState(0x8b76, 0x7d40, 0x5f80, 0xd2cd, 0x25c4, 0x1564, 0x1, 0x1);
        gbc.writeMem(0x1564, { 0x58 });
        gbc.writeMem(0x8b76, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7d40, gbc.sp());
        EXPECT(0x8b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b76));
        EXPECT(0x56, gbc.readMem(0x8b77));
        // CB 56 021C
        gbc.setState(0x21c0, 0x8964, 0x91d0, 0xe616, 0xffbf, 0x3b8f, 0x1, 0x0);
        gbc.writeMem(0x21c0, { 0xcb, 0x56 });
        gbc.writeMem(0x3b8f, { 0x8a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8964, gbc.sp());
        EXPECT(0x21c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 021D
        gbc.setState(0x4cd6, 0x9655, 0xbdf0, 0x8436, 0xf89e, 0x338a, 0x0, 0x1);
        gbc.writeMem(0x338a, { 0x38 });
        gbc.writeMem(0x4cd6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9655, gbc.sp());
        EXPECT(0x4cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 021E
        gbc.setState(0x5f21, 0xe198, 0x69f0, 0x390c, 0xde36, 0x7b8e, 0x0, 0x0);
        gbc.writeMem(0x5f21, { 0xcb, 0x56 });
        gbc.writeMem(0x7b8e, { 0x27 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe198, gbc.sp());
        EXPECT(0x5f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0220
        gbc.setState(0xa07, 0xfdbf, 0x6e30, 0x4796, 0x6e16, 0x8d11, 0x1, 0x1);
        gbc.writeMem(0xa07, { 0xcb, 0x56 });
        gbc.writeMem(0x8d11, { 0x34 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfdbf, gbc.sp());
        EXPECT(0xa09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8d11));
        // CB 56 0221
        gbc.setState(0x1899, 0x797d, 0xaf0, 0x4553, 0xc775, 0x39a1, 0x1, 0x1);
        gbc.writeMem(0x1899, { 0xcb, 0x56 });
        gbc.writeMem(0x39a1, { 0xdc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x797d, gbc.sp());
        EXPECT(0x189b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0222
        gbc.setState(0xd9d5, 0x42b8, 0xffa0, 0xfe79, 0x2785, 0x8ff, 0x1, 0x1);
        gbc.writeMem(0x8ff, { 0x3f });
        gbc.writeMem(0xd9d5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x42b8, gbc.sp());
        EXPECT(0xd9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d5));
        EXPECT(0x56, gbc.readMem(0xd9d6));
        // CB 56 0223
        gbc.setState(0x494f, 0x105e, 0x5170, 0x2211, 0x49df, 0xa924, 0x1, 0x1);
        gbc.writeMem(0x494f, { 0xcb, 0x56 });
        gbc.writeMem(0xa924, { 0x2a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x105e, gbc.sp());
        EXPECT(0x4951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xa924));
        // CB 56 0224
        gbc.setState(0x2448, 0x5397, 0x65b0, 0xc9cb, 0xc264, 0x9572, 0x1, 0x1);
        gbc.writeMem(0x2448, { 0xcb, 0x56 });
        gbc.writeMem(0x9572, { 0x15 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5397, gbc.sp());
        EXPECT(0x244a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9572));
        // CB 56 0225
        gbc.setState(0xb171, 0x4a6f, 0x9f50, 0x5010, 0x19e4, 0x42f2, 0x0, 0x0);
        gbc.writeMem(0x42f2, { 0x70 });
        gbc.writeMem(0xb171, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4a6f, gbc.sp());
        EXPECT(0xb173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb171));
        EXPECT(0x56, gbc.readMem(0xb172));
        // CB 56 0226
        gbc.setState(0x7e43, 0x1f6b, 0x4a0, 0xe7ac, 0x58bb, 0xa056, 0x1, 0x0);
        gbc.writeMem(0x7e43, { 0xcb, 0x56 });
        gbc.writeMem(0xa056, { 0x9e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1f6b, gbc.sp());
        EXPECT(0x7e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa056));
        // CB 56 0227
        gbc.setState(0xcf49, 0xa601, 0x1b90, 0xa297, 0x692, 0xa4bb, 0x1, 0x0);
        gbc.writeMem(0xa4bb, { 0x7d });
        gbc.writeMem(0xcf49, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa601, gbc.sp());
        EXPECT(0xcf4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa4bb));
        EXPECT(0xcb, gbc.readMem(0xcf49));
        EXPECT(0x56, gbc.readMem(0xcf4a));
        // CB 56 0228
        gbc.setState(0x5fd6, 0x83ba, 0x8740, 0x8617, 0x6879, 0x73f5, 0x0, 0x0);
        gbc.writeMem(0x5fd6, { 0xcb, 0x56 });
        gbc.writeMem(0x73f5, { 0xce });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x83ba, gbc.sp());
        EXPECT(0x5fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0229
        gbc.setState(0xd7c, 0xdd74, 0x79a0, 0x58f0, 0xd5be, 0x5bbb, 0x0, 0x1);
        gbc.writeMem(0xd7c, { 0xcb, 0x56 });
        gbc.writeMem(0x5bbb, { 0x84 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdd74, gbc.sp());
        EXPECT(0xd7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 022A
        gbc.setState(0x4871, 0xc62e, 0xf390, 0x5b15, 0x1512, 0xf019, 0x1, 0x1);
        gbc.writeMem(0x4871, { 0xcb, 0x56 });
        gbc.writeMem(0xf019, { 0xc2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc62e, gbc.sp());
        EXPECT(0x4873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xf019));
        // CB 56 022B
        gbc.setState(0x758, 0x259f, 0x6830, 0x7601, 0xd277, 0x80b4, 0x0, 0x1);
        gbc.writeMem(0x758, { 0xcb, 0x56 });
        gbc.writeMem(0x80b4, { 0x2c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x259f, gbc.sp());
        EXPECT(0x75a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x80b4));
        // CB 56 022C
        gbc.setState(0x26ee, 0x671e, 0x1490, 0x885e, 0xefc7, 0x919b, 0x1, 0x1);
        gbc.writeMem(0x26ee, { 0xcb, 0x56 });
        gbc.writeMem(0x919b, { 0x5d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x671e, gbc.sp());
        EXPECT(0x26f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x919b));
        // CB 56 022D
        gbc.setState(0xc2db, 0x9ff3, 0xe240, 0x9ceb, 0x42f8, 0xc129, 0x0, 0x0);
        gbc.writeMem(0xc129, { 0x5 });
        gbc.writeMem(0xc2db, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9ff3, gbc.sp());
        EXPECT(0xc2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc129));
        EXPECT(0xcb, gbc.readMem(0xc2db));
        EXPECT(0x56, gbc.readMem(0xc2dc));
        // CB 56 022E
        gbc.setState(0xca1, 0x9ea6, 0xde80, 0x15d4, 0x91e9, 0x2572, 0x1, 0x1);
        gbc.writeMem(0xca1, { 0xcb, 0x56 });
        gbc.writeMem(0x2572, { 0xd });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9ea6, gbc.sp());
        EXPECT(0xca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 022F
        gbc.setState(0x9952, 0x149b, 0x1570, 0x5bd4, 0xb95, 0xc5ec, 0x0, 0x1);
        gbc.writeMem(0x9952, { 0xcb, 0x56 });
        gbc.writeMem(0xc5ec, { 0xfe });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x149b, gbc.sp());
        EXPECT(0x9954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9952));
        EXPECT(0x56, gbc.readMem(0x9953));
        EXPECT(0xfe, gbc.readMem(0xc5ec));
        // CB 56 0230
        gbc.setState(0x2b76, 0x814b, 0xabe0, 0x56c1, 0x95fd, 0x2cd1, 0x1, 0x1);
        gbc.writeMem(0x2b76, { 0xcb, 0x56 });
        gbc.writeMem(0x2cd1, { 0x31 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x814b, gbc.sp());
        EXPECT(0x2b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0231
        gbc.setState(0xdcf2, 0x7c2c, 0xd9c0, 0xce56, 0x2099, 0xc44e, 0x0, 0x0);
        gbc.writeMem(0xc44e, { 0xfb });
        gbc.writeMem(0xdcf2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7c2c, gbc.sp());
        EXPECT(0xdcf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xc44e));
        EXPECT(0xcb, gbc.readMem(0xdcf2));
        EXPECT(0x56, gbc.readMem(0xdcf3));
        // CB 56 0232
        gbc.setState(0xe6dc, 0x4b7d, 0x6220, 0xd7f, 0xee50, 0x6c7d, 0x1, 0x1);
        gbc.writeMem(0x6c7d, { 0x7e });
        gbc.writeMem(0xe6dc, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4b7d, gbc.sp());
        EXPECT(0xe6de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6dc));
        EXPECT(0x56, gbc.readMem(0xe6dd));
        // CB 56 0233
        gbc.setState(0x4d40, 0x5abb, 0x75a0, 0xdd4b, 0x32b4, 0x9f3a, 0x0, 0x0);
        gbc.writeMem(0x4d40, { 0xcb, 0x56 });
        gbc.writeMem(0x9f3a, { 0xb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5abb, gbc.sp());
        EXPECT(0x4d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9f3a));
        // CB 56 0234
        gbc.setState(0x7235, 0x32b1, 0x9f0, 0x252, 0x55bb, 0x7937, 0x0, 0x1);
        gbc.writeMem(0x7235, { 0xcb, 0x56 });
        gbc.writeMem(0x7937, { 0x65 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x32b1, gbc.sp());
        EXPECT(0x7237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0236
        gbc.setState(0xd759, 0xde91, 0x8b80, 0x3422, 0xb43f, 0xc089, 0x1, 0x0);
        gbc.writeMem(0xc089, { 0x31 });
        gbc.writeMem(0xd759, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xde91, gbc.sp());
        EXPECT(0xd75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc089));
        EXPECT(0xcb, gbc.readMem(0xd759));
        EXPECT(0x56, gbc.readMem(0xd75a));
        // CB 56 0237
        gbc.setState(0x854c, 0x5306, 0xe8a0, 0xb2cd, 0xf54f, 0xc25b, 0x1, 0x1);
        gbc.writeMem(0x854c, { 0xcb, 0x56 });
        gbc.writeMem(0xc25b, { 0x88 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5306, gbc.sp());
        EXPECT(0x854e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854c));
        EXPECT(0x56, gbc.readMem(0x854d));
        EXPECT(0x88, gbc.readMem(0xc25b));
        // CB 56 0238
        gbc.setState(0x1664, 0x6f0f, 0x4240, 0x5b81, 0xe3cf, 0x71dc, 0x1, 0x0);
        gbc.writeMem(0x1664, { 0xcb, 0x56 });
        gbc.writeMem(0x71dc, { 0x71 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6f0f, gbc.sp());
        EXPECT(0x1666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0239
        gbc.setState(0xaed, 0x4ba1, 0x52a0, 0x4505, 0x6b6f, 0x20b2, 0x1, 0x0);
        gbc.writeMem(0xaed, { 0xcb, 0x56 });
        gbc.writeMem(0x20b2, { 0xe });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4ba1, gbc.sp());
        EXPECT(0xaef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 023A
        gbc.setState(0x7810, 0x870a, 0x8760, 0x40bb, 0x3a05, 0x7736, 0x0, 0x1);
        gbc.writeMem(0x7736, { 0x92 });
        gbc.writeMem(0x7810, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x870a, gbc.sp());
        EXPECT(0x7812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 023B
        gbc.setState(0xbb8b, 0x9926, 0x22a0, 0x8c9a, 0xc4f5, 0x6aaf, 0x1, 0x1);
        gbc.writeMem(0x6aaf, { 0xb7 });
        gbc.writeMem(0xbb8b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9926, gbc.sp());
        EXPECT(0xbb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb8b));
        EXPECT(0x56, gbc.readMem(0xbb8c));
        // CB 56 023C
        gbc.setState(0x6859, 0x3275, 0xcd40, 0x98cb, 0x3b34, 0x6634, 0x0, 0x1);
        gbc.writeMem(0x6634, { 0x6d });
        gbc.writeMem(0x6859, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3275, gbc.sp());
        EXPECT(0x685b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 023D
        gbc.setState(0x1128, 0x69e, 0x3660, 0x2824, 0xddd6, 0x788d, 0x0, 0x0);
        gbc.writeMem(0x1128, { 0xcb, 0x56 });
        gbc.writeMem(0x788d, { 0x5a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x69e, gbc.sp());
        EXPECT(0x112a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 023E
        gbc.setState(0xc89c, 0x19d8, 0x72e0, 0x85e9, 0xe5, 0xba6, 0x0, 0x0);
        gbc.writeMem(0xba6, { 0x42 });
        gbc.writeMem(0xc89c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x19d8, gbc.sp());
        EXPECT(0xc89e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc89c));
        EXPECT(0x56, gbc.readMem(0xc89d));
        // CB 56 023F
        gbc.setState(0xe5b4, 0xcde9, 0x83c0, 0xb3fa, 0x9c8, 0xa050, 0x1, 0x0);
        gbc.writeMem(0xa050, { 0x64 });
        gbc.writeMem(0xe5b4, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcde9, gbc.sp());
        EXPECT(0xe5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa050));
        EXPECT(0xcb, gbc.readMem(0xe5b4));
        EXPECT(0x56, gbc.readMem(0xe5b5));
        // CB 56 0240
        gbc.setState(0xcd55, 0x266, 0x4460, 0x1dea, 0x1b5f, 0xcf5a, 0x0, 0x1);
        gbc.writeMem(0xcd55, { 0xcb, 0x56 });
        gbc.writeMem(0xcf5a, { 0x63 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x266, gbc.sp());
        EXPECT(0xcd57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd55));
        EXPECT(0x56, gbc.readMem(0xcd56));
        EXPECT(0x63, gbc.readMem(0xcf5a));
        // CB 56 0241
        gbc.setState(0x687b, 0xf0e7, 0xdb0, 0x94f7, 0x398b, 0xecc6, 0x1, 0x1);
        gbc.writeMem(0x687b, { 0xcb, 0x56 });
        gbc.writeMem(0xecc6, { 0xfc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf0e7, gbc.sp());
        EXPECT(0x687d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xecc6));
        // CB 56 0242
        gbc.setState(0x400f, 0xaac1, 0x5f40, 0x8b70, 0xa60f, 0x566e, 0x1, 0x1);
        gbc.writeMem(0x400f, { 0xcb, 0x56 });
        gbc.writeMem(0x566e, { 0x9e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xaac1, gbc.sp());
        EXPECT(0x4011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0243
        gbc.setState(0x4d51, 0x7b50, 0x6790, 0xd238, 0x6e4, 0x1087, 0x0, 0x1);
        gbc.writeMem(0x1087, { 0xa });
        gbc.writeMem(0x4d51, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7b50, gbc.sp());
        EXPECT(0x4d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0244
        gbc.setState(0x3626, 0x2e5c, 0x4050, 0x19be, 0xe215, 0x4e43, 0x1, 0x1);
        gbc.writeMem(0x3626, { 0xcb, 0x56 });
        gbc.writeMem(0x4e43, { 0xde });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2e5c, gbc.sp());
        EXPECT(0x3628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0245
        gbc.setState(0x83c0, 0xaf63, 0x3170, 0x5938, 0x9f63, 0x151d, 0x1, 0x0);
        gbc.writeMem(0x151d, { 0xde });
        gbc.writeMem(0x83c0, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xaf63, gbc.sp());
        EXPECT(0x83c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c0));
        EXPECT(0x56, gbc.readMem(0x83c1));
        // CB 56 0246
        gbc.setState(0x861d, 0xbf38, 0xe9f0, 0x2568, 0xa00c, 0x554b, 0x0, 0x0);
        gbc.writeMem(0x554b, { 0x54 });
        gbc.writeMem(0x861d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbf38, gbc.sp());
        EXPECT(0x861f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x861d));
        EXPECT(0x56, gbc.readMem(0x861e));
        // CB 56 0247
        gbc.setState(0xc704, 0x5044, 0x77f0, 0x584b, 0x7ea4, 0x5329, 0x1, 0x0);
        gbc.writeMem(0x5329, { 0xb6 });
        gbc.writeMem(0xc704, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5044, gbc.sp());
        EXPECT(0xc706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc704));
        EXPECT(0x56, gbc.readMem(0xc705));
        // CB 56 0248
        gbc.setState(0xe3f5, 0x50dd, 0x9ed0, 0x5b9e, 0xbec, 0x9825, 0x0, 0x1);
        gbc.writeMem(0x9825, { 0x5a });
        gbc.writeMem(0xe3f5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x50dd, gbc.sp());
        EXPECT(0xe3f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x9825));
        EXPECT(0xcb, gbc.readMem(0xe3f5));
        EXPECT(0x56, gbc.readMem(0xe3f6));
        // CB 56 0249
        gbc.setState(0xe6bc, 0x527f, 0xb100, 0x1013, 0xf2a0, 0x8c9a, 0x1, 0x1);
        gbc.writeMem(0x8c9a, { 0xec });
        gbc.writeMem(0xe6bc, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x527f, gbc.sp());
        EXPECT(0xe6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x8c9a));
        EXPECT(0xcb, gbc.readMem(0xe6bc));
        EXPECT(0x56, gbc.readMem(0xe6bd));
        // CB 56 024A
        gbc.setState(0xe372, 0x66b9, 0x9450, 0x26ce, 0x1fc9, 0x35ba, 0x1, 0x1);
        gbc.writeMem(0x35ba, { 0x72 });
        gbc.writeMem(0xe372, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x66b9, gbc.sp());
        EXPECT(0xe374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe372));
        EXPECT(0x56, gbc.readMem(0xe373));
        // CB 56 024B
        gbc.setState(0xce02, 0x5c9d, 0xf7d0, 0x7eb8, 0x189b, 0xef19, 0x0, 0x1);
        gbc.writeMem(0xce02, { 0xcb, 0x56 });
        gbc.writeMem(0xef19, { 0x9a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5c9d, gbc.sp());
        EXPECT(0xce04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce02));
        EXPECT(0x56, gbc.readMem(0xce03));
        EXPECT(0x9a, gbc.readMem(0xef19));
        // CB 56 024C
        gbc.setState(0x28bc, 0xfcb0, 0x7a80, 0x8a0e, 0xe156, 0x53d, 0x0, 0x1);
        gbc.writeMem(0x53d, { 0x7e });
        gbc.writeMem(0x28bc, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfcb0, gbc.sp());
        EXPECT(0x28be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 024D
        gbc.setState(0x2fb4, 0x1180, 0x1250, 0x9b75, 0x35ba, 0x60db, 0x0, 0x1);
        gbc.writeMem(0x2fb4, { 0xcb, 0x56 });
        gbc.writeMem(0x60db, { 0x3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1180, gbc.sp());
        EXPECT(0x2fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 024E
        gbc.setState(0x4245, 0xed8, 0xac20, 0xb840, 0x95f0, 0x5f05, 0x1, 0x0);
        gbc.writeMem(0x4245, { 0xcb, 0x56 });
        gbc.writeMem(0x5f05, { 0xba });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xed8, gbc.sp());
        EXPECT(0x4247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 024F
        gbc.setState(0x5efb, 0x12b2, 0x2ff0, 0x9b13, 0x17d9, 0xfad1, 0x0, 0x0);
        gbc.writeMem(0x5efb, { 0xcb, 0x56 });
        gbc.writeMem(0xfad1, { 0xb3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x12b2, gbc.sp());
        EXPECT(0x5efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xfad1));
        // CB 56 0250
        gbc.setState(0xce8c, 0x479, 0xef20, 0xd0da, 0xf8b7, 0x970e, 0x0, 0x0);
        gbc.writeMem(0x970e, { 0x96 });
        gbc.writeMem(0xce8c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x479, gbc.sp());
        EXPECT(0xce8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x970e));
        EXPECT(0xcb, gbc.readMem(0xce8c));
        EXPECT(0x56, gbc.readMem(0xce8d));
        // CB 56 0251
        gbc.setState(0xb9f1, 0x6c0e, 0xa310, 0xc95c, 0xcc8d, 0x785, 0x0, 0x1);
        gbc.writeMem(0x785, { 0xd5 });
        gbc.writeMem(0xb9f1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6c0e, gbc.sp());
        EXPECT(0xb9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f1));
        EXPECT(0x56, gbc.readMem(0xb9f2));
        // CB 56 0252
        gbc.setState(0xc6e0, 0x5537, 0xce60, 0xdb5a, 0x4e7b, 0xdd5c, 0x0, 0x0);
        gbc.writeMem(0xc6e0, { 0xcb, 0x56 });
        gbc.writeMem(0xdd5c, { 0xd5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5537, gbc.sp());
        EXPECT(0xc6e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e0));
        EXPECT(0x56, gbc.readMem(0xc6e1));
        EXPECT(0xd5, gbc.readMem(0xdd5c));
        // CB 56 0253
        gbc.setState(0x52e, 0x93da, 0x5880, 0xbc31, 0x9c40, 0xac5d, 0x0, 0x0);
        gbc.writeMem(0x52e, { 0xcb, 0x56 });
        gbc.writeMem(0xac5d, { 0x85 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x93da, gbc.sp());
        EXPECT(0x530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xac5d));
        // CB 56 0254
        gbc.setState(0x4e44, 0x6e1f, 0xa620, 0x74a4, 0x2223, 0x73ce, 0x1, 0x0);
        gbc.writeMem(0x4e44, { 0xcb, 0x56 });
        gbc.writeMem(0x73ce, { 0x9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6e1f, gbc.sp());
        EXPECT(0x4e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0255
        gbc.setState(0xe275, 0xf079, 0x3ad0, 0x629f, 0x204e, 0x1693, 0x0, 0x1);
        gbc.writeMem(0x1693, { 0xd0 });
        gbc.writeMem(0xe275, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf079, gbc.sp());
        EXPECT(0xe277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe275));
        EXPECT(0x56, gbc.readMem(0xe276));
        // CB 56 0256
        gbc.setState(0x957e, 0x36d6, 0xe110, 0xd296, 0xe074, 0x4141, 0x0, 0x1);
        gbc.writeMem(0x4141, { 0x4f });
        gbc.writeMem(0x957e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x36d6, gbc.sp());
        EXPECT(0x9580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957e));
        EXPECT(0x56, gbc.readMem(0x957f));
        // CB 56 0258
        gbc.setState(0x235, 0x9d4a, 0x390, 0xad1d, 0x8577, 0xc102, 0x0, 0x0);
        gbc.writeMem(0x235, { 0xcb, 0x56 });
        gbc.writeMem(0xc102, { 0xcd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9d4a, gbc.sp());
        EXPECT(0x237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xc102));
        // CB 56 0259
        gbc.setState(0x83e9, 0x23d8, 0x8c70, 0x5f33, 0x9a68, 0xf166, 0x0, 0x1);
        gbc.writeMem(0x83e9, { 0xcb, 0x56 });
        gbc.writeMem(0xf166, { 0x8b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x23d8, gbc.sp());
        EXPECT(0x83eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e9));
        EXPECT(0x56, gbc.readMem(0x83ea));
        EXPECT(0x8b, gbc.readMem(0xf166));
        // CB 56 025A
        gbc.setState(0x2388, 0xef92, 0x4510, 0x1a8e, 0xd2c6, 0xb1b0, 0x0, 0x1);
        gbc.writeMem(0x2388, { 0xcb, 0x56 });
        gbc.writeMem(0xb1b0, { 0xe7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xef92, gbc.sp());
        EXPECT(0x238a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb1b0));
        // CB 56 025C
        gbc.setState(0xb73d, 0x7447, 0x2c60, 0x123e, 0xc6f7, 0x4ec4, 0x0, 0x1);
        gbc.writeMem(0x4ec4, { 0x5a });
        gbc.writeMem(0xb73d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7447, gbc.sp());
        EXPECT(0xb73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73d));
        EXPECT(0x56, gbc.readMem(0xb73e));
        // CB 56 025D
        gbc.setState(0xb042, 0x9540, 0x5fa0, 0x26a1, 0xd6ae, 0x7457, 0x0, 0x1);
        gbc.writeMem(0x7457, { 0x31 });
        gbc.writeMem(0xb042, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9540, gbc.sp());
        EXPECT(0xb044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb042));
        EXPECT(0x56, gbc.readMem(0xb043));
        // CB 56 025E
        gbc.setState(0x454a, 0x494d, 0x1c30, 0x8549, 0xd21d, 0xd14b, 0x0, 0x0);
        gbc.writeMem(0x454a, { 0xcb, 0x56 });
        gbc.writeMem(0xd14b, { 0xdc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x494d, gbc.sp());
        EXPECT(0x454c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xd14b));
        // CB 56 025F
        gbc.setState(0x4a96, 0x7b77, 0x7b10, 0x8b5e, 0x3bc8, 0xf1ae, 0x1, 0x0);
        gbc.writeMem(0x4a96, { 0xcb, 0x56 });
        gbc.writeMem(0xf1ae, { 0xf8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7b77, gbc.sp());
        EXPECT(0x4a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xf1ae));
        // CB 56 0260
        gbc.setState(0x7a38, 0xdf01, 0x8750, 0xe80a, 0xf0e6, 0xbe65, 0x0, 0x1);
        gbc.writeMem(0x7a38, { 0xcb, 0x56 });
        gbc.writeMem(0xbe65, { 0x6 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdf01, gbc.sp());
        EXPECT(0x7a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbe65));
        // CB 56 0261
        gbc.setState(0xc141, 0x6428, 0x9580, 0xf632, 0xa7e1, 0xe46f, 0x0, 0x0);
        gbc.writeMem(0xc141, { 0xcb, 0x56 });
        gbc.writeMem(0xe46f, { 0xaa });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6428, gbc.sp());
        EXPECT(0xc143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc141));
        EXPECT(0x56, gbc.readMem(0xc142));
        EXPECT(0xaa, gbc.readMem(0xe46f));
        // CB 56 0262
        gbc.setState(0xeeb5, 0x6f1c, 0xd5a0, 0xeef, 0x1bf2, 0xf27f, 0x1, 0x1);
        gbc.writeMem(0xeeb5, { 0xcb, 0x56 });
        gbc.writeMem(0xf27f, { 0x76 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6f1c, gbc.sp());
        EXPECT(0xeeb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb5));
        EXPECT(0x56, gbc.readMem(0xeeb6));
        EXPECT(0x76, gbc.readMem(0xf27f));
        // CB 56 0263
        gbc.setState(0x72f7, 0xa156, 0x63e0, 0x109c, 0xcfba, 0x7dae, 0x0, 0x1);
        gbc.writeMem(0x72f7, { 0xcb, 0x56 });
        gbc.writeMem(0x7dae, { 0xe0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa156, gbc.sp());
        EXPECT(0x72f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0264
        gbc.setState(0xa3f2, 0x839b, 0x7fb0, 0x43ca, 0x944e, 0x46b8, 0x1, 0x0);
        gbc.writeMem(0x46b8, { 0x9b });
        gbc.writeMem(0xa3f2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x839b, gbc.sp());
        EXPECT(0xa3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f2));
        EXPECT(0x56, gbc.readMem(0xa3f3));
        // CB 56 0265
        gbc.setState(0x95c6, 0x14e2, 0xce90, 0x2dba, 0xb14a, 0xff48, 0x1, 0x1);
        gbc.writeMem(0x95c6, { 0xcb, 0x56 });
        gbc.writeMem(0xff48, { 0xad });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x14e2, gbc.sp());
        EXPECT(0x95c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c6));
        EXPECT(0x56, gbc.readMem(0x95c7));
        EXPECT(0xad, gbc.readMem(0xff48));
        // CB 56 0266
        gbc.setState(0x99c0, 0x46c1, 0x8440, 0xcd1f, 0x3161, 0x80d2, 0x1, 0x0);
        gbc.writeMem(0x80d2, { 0x90 });
        gbc.writeMem(0x99c0, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x46c1, gbc.sp());
        EXPECT(0x99c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x80d2));
        EXPECT(0xcb, gbc.readMem(0x99c0));
        EXPECT(0x56, gbc.readMem(0x99c1));
        // CB 56 0267
        gbc.setState(0x83bc, 0x307c, 0xfb20, 0x9c15, 0xf1dd, 0xdf5d, 0x1, 0x0);
        gbc.writeMem(0x83bc, { 0xcb, 0x56 });
        gbc.writeMem(0xdf5d, { 0x47 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x307c, gbc.sp());
        EXPECT(0x83be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83bc));
        EXPECT(0x56, gbc.readMem(0x83bd));
        EXPECT(0x47, gbc.readMem(0xdf5d));
        // CB 56 0268
        gbc.setState(0xedf1, 0x3ccc, 0xd850, 0x95ba, 0x9ad7, 0x50ba, 0x0, 0x1);
        gbc.writeMem(0x50ba, { 0xce });
        gbc.writeMem(0xedf1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3ccc, gbc.sp());
        EXPECT(0xedf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf1));
        EXPECT(0x56, gbc.readMem(0xedf2));
        // CB 56 0269
        gbc.setState(0x325c, 0xdc, 0xa570, 0x854c, 0x86c1, 0xd1b1, 0x1, 0x1);
        gbc.writeMem(0x325c, { 0xcb, 0x56 });
        gbc.writeMem(0xd1b1, { 0x7a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdc, gbc.sp());
        EXPECT(0x325e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd1b1));
        // CB 56 026A
        gbc.setState(0x2d8b, 0x7453, 0x3440, 0x2cec, 0xeaa8, 0x34e4, 0x1, 0x1);
        gbc.writeMem(0x2d8b, { 0xcb, 0x56 });
        gbc.writeMem(0x34e4, { 0x53 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7453, gbc.sp());
        EXPECT(0x2d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 026B
        gbc.setState(0x32ef, 0xc0da, 0xa810, 0x87e, 0xe8a7, 0xa2b7, 0x0, 0x0);
        gbc.writeMem(0x32ef, { 0xcb, 0x56 });
        gbc.writeMem(0xa2b7, { 0xf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc0da, gbc.sp());
        EXPECT(0x32f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xa2b7));
        // CB 56 026C
        gbc.setState(0xe850, 0x9300, 0x9e0, 0x9a6a, 0xad53, 0xb1fa, 0x0, 0x1);
        gbc.writeMem(0xb1fa, { 0x49 });
        gbc.writeMem(0xe850, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9300, gbc.sp());
        EXPECT(0xe852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb1fa));
        EXPECT(0xcb, gbc.readMem(0xe850));
        EXPECT(0x56, gbc.readMem(0xe851));
        // CB 56 026D
        gbc.setState(0x5c78, 0xe902, 0x3af0, 0x7fa3, 0x57de, 0x3b80, 0x1, 0x0);
        gbc.writeMem(0x3b80, { 0x48 });
        gbc.writeMem(0x5c78, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe902, gbc.sp());
        EXPECT(0x5c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 026E
        gbc.setState(0xac34, 0x4611, 0xb980, 0xffad, 0xe716, 0x1247, 0x1, 0x0);
        gbc.writeMem(0x1247, { 0xc1 });
        gbc.writeMem(0xac34, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4611, gbc.sp());
        EXPECT(0xac36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac34));
        EXPECT(0x56, gbc.readMem(0xac35));
        // CB 56 026F
        gbc.setState(0x718, 0x962d, 0x2b10, 0x18ad, 0x6ff2, 0x4019, 0x0, 0x1);
        gbc.writeMem(0x718, { 0xcb, 0x56 });
        gbc.writeMem(0x4019, { 0x96 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x962d, gbc.sp());
        EXPECT(0x71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0270
        gbc.setState(0xdd72, 0x37f2, 0x3860, 0x4de2, 0x382b, 0xc493, 0x0, 0x1);
        gbc.writeMem(0xc493, { 0xd2 });
        gbc.writeMem(0xdd72, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x37f2, gbc.sp());
        EXPECT(0xdd74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xc493));
        EXPECT(0xcb, gbc.readMem(0xdd72));
        EXPECT(0x56, gbc.readMem(0xdd73));
        // CB 56 0271
        gbc.setState(0x70fe, 0x324b, 0x8670, 0x54e3, 0x6155, 0x532c, 0x0, 0x1);
        gbc.writeMem(0x532c, { 0x62 });
        gbc.writeMem(0x70fe, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x324b, gbc.sp());
        EXPECT(0x7100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0272
        gbc.setState(0x9884, 0x6e27, 0x4fe0, 0xd1a6, 0x914, 0x6a5f, 0x0, 0x1);
        gbc.writeMem(0x6a5f, { 0x30 });
        gbc.writeMem(0x9884, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6e27, gbc.sp());
        EXPECT(0x9886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9884));
        EXPECT(0x56, gbc.readMem(0x9885));
        // CB 56 0273
        gbc.setState(0x824e, 0xb011, 0xe450, 0xacf6, 0xd9f2, 0x9912, 0x1, 0x0);
        gbc.writeMem(0x824e, { 0xcb, 0x56 });
        gbc.writeMem(0x9912, { 0x17 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb011, gbc.sp());
        EXPECT(0x8250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x824e));
        EXPECT(0x56, gbc.readMem(0x824f));
        EXPECT(0x17, gbc.readMem(0x9912));
        // CB 56 0274
        gbc.setState(0x29d9, 0x8044, 0x6250, 0x666d, 0x5b15, 0xd877, 0x0, 0x0);
        gbc.writeMem(0x29d9, { 0xcb, 0x56 });
        gbc.writeMem(0xd877, { 0xf8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8044, gbc.sp());
        EXPECT(0x29db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd877));
        // CB 56 0275
        gbc.setState(0x7bb9, 0xec7b, 0x75e0, 0x2660, 0x6e14, 0xca8b, 0x1, 0x1);
        gbc.writeMem(0x7bb9, { 0xcb, 0x56 });
        gbc.writeMem(0xca8b, { 0xda });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xec7b, gbc.sp());
        EXPECT(0x7bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xca8b));
        // CB 56 0276
        gbc.setState(0x4cd6, 0xa6b4, 0x3bc0, 0x6a27, 0xc644, 0xf8cc, 0x0, 0x0);
        gbc.writeMem(0x4cd6, { 0xcb, 0x56 });
        gbc.writeMem(0xf8cc, { 0x57 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa6b4, gbc.sp());
        EXPECT(0x4cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xf8cc));
        // CB 56 0277
        gbc.setState(0xb917, 0xa1ee, 0xe9c0, 0xfdd0, 0xe4cd, 0x6c0a, 0x0, 0x0);
        gbc.writeMem(0x6c0a, { 0xb9 });
        gbc.writeMem(0xb917, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa1ee, gbc.sp());
        EXPECT(0xb919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb917));
        EXPECT(0x56, gbc.readMem(0xb918));
        // CB 56 0278
        gbc.setState(0xbc8f, 0x14a7, 0x8570, 0x5f46, 0xc1aa, 0x954f, 0x0, 0x1);
        gbc.writeMem(0x954f, { 0xee });
        gbc.writeMem(0xbc8f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x14a7, gbc.sp());
        EXPECT(0xbc91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x954f));
        EXPECT(0xcb, gbc.readMem(0xbc8f));
        EXPECT(0x56, gbc.readMem(0xbc90));
        // CB 56 0279
        gbc.setState(0xb2e9, 0x24cb, 0x9270, 0x3ff2, 0x55e3, 0x2311, 0x0, 0x0);
        gbc.writeMem(0x2311, { 0xd7 });
        gbc.writeMem(0xb2e9, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x24cb, gbc.sp());
        EXPECT(0xb2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e9));
        EXPECT(0x56, gbc.readMem(0xb2ea));
        // CB 56 027A
        gbc.setState(0xc8ae, 0x4620, 0xf720, 0x3298, 0xf682, 0x5dad, 0x1, 0x1);
        gbc.writeMem(0x5dad, { 0x64 });
        gbc.writeMem(0xc8ae, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4620, gbc.sp());
        EXPECT(0xc8b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ae));
        EXPECT(0x56, gbc.readMem(0xc8af));
        // CB 56 027B
        gbc.setState(0xd9df, 0x503b, 0xb350, 0x3331, 0x5cf8, 0xa588, 0x1, 0x1);
        gbc.writeMem(0xa588, { 0x7f });
        gbc.writeMem(0xd9df, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x503b, gbc.sp());
        EXPECT(0xd9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xa588));
        EXPECT(0xcb, gbc.readMem(0xd9df));
        EXPECT(0x56, gbc.readMem(0xd9e0));
        // CB 56 027C
        gbc.setState(0x7d9a, 0xd17e, 0x260, 0xf8a3, 0x95, 0x6b81, 0x0, 0x0);
        gbc.writeMem(0x6b81, { 0x40 });
        gbc.writeMem(0x7d9a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd17e, gbc.sp());
        EXPECT(0x7d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 027D
        gbc.setState(0x7242, 0x9420, 0x2720, 0x796a, 0x2ef7, 0xaec2, 0x1, 0x1);
        gbc.writeMem(0x7242, { 0xcb, 0x56 });
        gbc.writeMem(0xaec2, { 0x91 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9420, gbc.sp());
        EXPECT(0x7244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xaec2));
        // CB 56 027E
        gbc.setState(0x3ac7, 0x4e83, 0xd9b0, 0x16f2, 0x31f7, 0xa5e6, 0x0, 0x0);
        gbc.writeMem(0x3ac7, { 0xcb, 0x56 });
        gbc.writeMem(0xa5e6, { 0x49 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4e83, gbc.sp());
        EXPECT(0x3ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa5e6));
        // CB 56 027F
        gbc.setState(0x9fb3, 0x1f36, 0xfd0, 0xd427, 0x640d, 0xfe95, 0x0, 0x0);
        gbc.writeMem(0x9fb3, { 0xcb, 0x56 });
        gbc.writeMem(0xfe95, { 0xe0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1f36, gbc.sp());
        EXPECT(0x9fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb3));
        EXPECT(0x56, gbc.readMem(0x9fb4));
        EXPECT(0xe0, gbc.readMem(0xfe95));
        // CB 56 0280
        gbc.setState(0xc130, 0xc4f0, 0xece0, 0x2b98, 0x6e8a, 0x3de1, 0x1, 0x0);
        gbc.writeMem(0x3de1, { 0x52 });
        gbc.writeMem(0xc130, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc4f0, gbc.sp());
        EXPECT(0xc132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc130));
        EXPECT(0x56, gbc.readMem(0xc131));
        // CB 56 0281
        gbc.setState(0xcab4, 0xe5e6, 0x8a50, 0x747a, 0xd8bc, 0xdb2c, 0x1, 0x0);
        gbc.writeMem(0xcab4, { 0xcb, 0x56 });
        gbc.writeMem(0xdb2c, { 0x86 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe5e6, gbc.sp());
        EXPECT(0xcab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab4));
        EXPECT(0x56, gbc.readMem(0xcab5));
        EXPECT(0x86, gbc.readMem(0xdb2c));
        // CB 56 0282
        gbc.setState(0xa8cd, 0xec20, 0x0, 0xd268, 0xcab5, 0x60d3, 0x1, 0x0);
        gbc.writeMem(0x60d3, { 0xa4 });
        gbc.writeMem(0xa8cd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xec20, gbc.sp());
        EXPECT(0xa8cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8cd));
        EXPECT(0x56, gbc.readMem(0xa8ce));
        // CB 56 0283
        gbc.setState(0x6fd9, 0x5e7d, 0x9000, 0xe967, 0x4f4, 0xa094, 0x1, 0x1);
        gbc.writeMem(0x6fd9, { 0xcb, 0x56 });
        gbc.writeMem(0xa094, { 0x29 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5e7d, gbc.sp());
        EXPECT(0x6fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa094));
        // CB 56 0284
        gbc.setState(0xe3a8, 0x5376, 0x47f0, 0x475d, 0x93da, 0xa7c1, 0x1, 0x1);
        gbc.writeMem(0xa7c1, { 0x7 });
        gbc.writeMem(0xe3a8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5376, gbc.sp());
        EXPECT(0xe3aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa7c1));
        EXPECT(0xcb, gbc.readMem(0xe3a8));
        EXPECT(0x56, gbc.readMem(0xe3a9));
        // CB 56 0285
        gbc.setState(0x85be, 0x796b, 0x8850, 0x592a, 0x5939, 0x44f0, 0x0, 0x1);
        gbc.writeMem(0x44f0, { 0x17 });
        gbc.writeMem(0x85be, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x796b, gbc.sp());
        EXPECT(0x85c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85be));
        EXPECT(0x56, gbc.readMem(0x85bf));
        // CB 56 0286
        gbc.setState(0x4992, 0xe6c8, 0xd4f0, 0xd60b, 0x44ba, 0xa629, 0x0, 0x0);
        gbc.writeMem(0x4992, { 0xcb, 0x56 });
        gbc.writeMem(0xa629, { 0x3f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe6c8, gbc.sp());
        EXPECT(0x4994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa629));
        // CB 56 0287
        gbc.setState(0x1853, 0xfa70, 0x9250, 0x831c, 0x78c7, 0xa4d2, 0x1, 0x1);
        gbc.writeMem(0x1853, { 0xcb, 0x56 });
        gbc.writeMem(0xa4d2, { 0xea });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfa70, gbc.sp());
        EXPECT(0x1855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xa4d2));
        // CB 56 0288
        gbc.setState(0x8dd0, 0x2d40, 0xcf70, 0xc407, 0x40f, 0xd239, 0x0, 0x0);
        gbc.writeMem(0x8dd0, { 0xcb, 0x56 });
        gbc.writeMem(0xd239, { 0xd0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2d40, gbc.sp());
        EXPECT(0x8dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd0));
        EXPECT(0x56, gbc.readMem(0x8dd1));
        EXPECT(0xd0, gbc.readMem(0xd239));
        // CB 56 0289
        gbc.setState(0x41d7, 0xa74a, 0x6e90, 0xfb33, 0x6c0d, 0x9d4, 0x0, 0x0);
        gbc.writeMem(0x9d4, { 0x5c });
        gbc.writeMem(0x41d7, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa74a, gbc.sp());
        EXPECT(0x41d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 028A
        gbc.setState(0x57a0, 0xbceb, 0x16b0, 0xbbf7, 0x924f, 0x31f8, 0x1, 0x0);
        gbc.writeMem(0x31f8, { 0xb2 });
        gbc.writeMem(0x57a0, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbceb, gbc.sp());
        EXPECT(0x57a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 028B
        gbc.setState(0x2600, 0xa8f9, 0x5cd0, 0x80f2, 0x992c, 0x80bf, 0x1, 0x1);
        gbc.writeMem(0x2600, { 0xcb, 0x56 });
        gbc.writeMem(0x80bf, { 0x8c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa8f9, gbc.sp());
        EXPECT(0x2602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x80bf));
        // CB 56 028C
        gbc.setState(0xe162, 0xce9, 0x65d0, 0x251c, 0x676e, 0x827d, 0x0, 0x0);
        gbc.writeMem(0x827d, { 0x98 });
        gbc.writeMem(0xe162, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xce9, gbc.sp());
        EXPECT(0xe164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x827d));
        EXPECT(0xcb, gbc.readMem(0xe162));
        EXPECT(0x56, gbc.readMem(0xe163));
        // CB 56 028D
        gbc.setState(0x46bb, 0x25b, 0x4790, 0xd223, 0x66f8, 0x9da9, 0x0, 0x1);
        gbc.writeMem(0x46bb, { 0xcb, 0x56 });
        gbc.writeMem(0x9da9, { 0x67 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x25b, gbc.sp());
        EXPECT(0x46bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x9da9));
        // CB 56 028E
        gbc.setState(0x1e7a, 0x6cd, 0xd4f0, 0x919b, 0xd722, 0x118b, 0x1, 0x0);
        gbc.writeMem(0x118b, { 0x81 });
        gbc.writeMem(0x1e7a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6cd, gbc.sp());
        EXPECT(0x1e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 028F
        gbc.setState(0xcece, 0xafdb, 0x89c0, 0x43c0, 0xb47e, 0x95e5, 0x1, 0x1);
        gbc.writeMem(0x95e5, { 0x4c });
        gbc.writeMem(0xcece, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xafdb, gbc.sp());
        EXPECT(0xced0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x95e5));
        EXPECT(0xcb, gbc.readMem(0xcece));
        EXPECT(0x56, gbc.readMem(0xcecf));
        // CB 56 0290
        gbc.setState(0x80, 0x4dc7, 0x24a0, 0x9ffd, 0x471b, 0xc904, 0x1, 0x1);
        gbc.writeMem(0x80, { 0xcb, 0x56 });
        gbc.writeMem(0xc904, { 0xbd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4dc7, gbc.sp());
        EXPECT(0x82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc904));
        // CB 56 0291
        gbc.setState(0xe605, 0xc2ef, 0x6230, 0x1a88, 0xd8da, 0x5a62, 0x0, 0x1);
        gbc.writeMem(0x5a62, { 0xfe });
        gbc.writeMem(0xe605, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc2ef, gbc.sp());
        EXPECT(0xe607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe605));
        EXPECT(0x56, gbc.readMem(0xe606));
        // CB 56 0292
        gbc.setState(0xa489, 0x5e04, 0xaec0, 0xe527, 0xe6ef, 0xda4c, 0x1, 0x0);
        gbc.writeMem(0xa489, { 0xcb, 0x56 });
        gbc.writeMem(0xda4c, { 0xc0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5e04, gbc.sp());
        EXPECT(0xa48b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa489));
        EXPECT(0x56, gbc.readMem(0xa48a));
        EXPECT(0xc0, gbc.readMem(0xda4c));
        // CB 56 0293
        gbc.setState(0x4d5c, 0x92ce, 0x6800, 0x2518, 0xf94e, 0x41dd, 0x0, 0x1);
        gbc.writeMem(0x41dd, { 0x24 });
        gbc.writeMem(0x4d5c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x92ce, gbc.sp());
        EXPECT(0x4d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0294
        gbc.setState(0x80b0, 0x474c, 0x7e70, 0xed3a, 0x88da, 0x76f8, 0x0, 0x1);
        gbc.writeMem(0x76f8, { 0x9b });
        gbc.writeMem(0x80b0, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x474c, gbc.sp());
        EXPECT(0x80b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80b0));
        EXPECT(0x56, gbc.readMem(0x80b1));
        // CB 56 0295
        gbc.setState(0xe21a, 0x2ebf, 0x9c60, 0xa92a, 0x505, 0xd840, 0x1, 0x0);
        gbc.writeMem(0xd840, { 0x1c });
        gbc.writeMem(0xe21a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2ebf, gbc.sp());
        EXPECT(0xe21c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xd840));
        EXPECT(0xcb, gbc.readMem(0xe21a));
        EXPECT(0x56, gbc.readMem(0xe21b));
        // CB 56 0296
        gbc.setState(0x6c27, 0xa730, 0x6a0, 0xa0b1, 0x71b0, 0x2c74, 0x1, 0x1);
        gbc.writeMem(0x2c74, { 0x75 });
        gbc.writeMem(0x6c27, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa730, gbc.sp());
        EXPECT(0x6c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0297
        gbc.setState(0xe1a8, 0x183d, 0x86e0, 0x331f, 0x4c3d, 0x936f, 0x1, 0x1);
        gbc.writeMem(0x936f, { 0xd0 });
        gbc.writeMem(0xe1a8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x183d, gbc.sp());
        EXPECT(0xe1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x936f));
        EXPECT(0xcb, gbc.readMem(0xe1a8));
        EXPECT(0x56, gbc.readMem(0xe1a9));
        // CB 56 0299
        gbc.setState(0x8a92, 0x43f0, 0xe290, 0x7e4a, 0x2683, 0x30a1, 0x1, 0x1);
        gbc.writeMem(0x30a1, { 0xcd });
        gbc.writeMem(0x8a92, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x43f0, gbc.sp());
        EXPECT(0x8a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a92));
        EXPECT(0x56, gbc.readMem(0x8a93));
        // CB 56 029A
        gbc.setState(0x38ef, 0x63d3, 0x6d40, 0xda11, 0x2d03, 0xbf30, 0x0, 0x1);
        gbc.writeMem(0x38ef, { 0xcb, 0x56 });
        gbc.writeMem(0xbf30, { 0x1f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x63d3, gbc.sp());
        EXPECT(0x38f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xbf30));
        // CB 56 029B
        gbc.setState(0xc78a, 0xfee7, 0xa940, 0x4899, 0x902e, 0x3361, 0x0, 0x0);
        gbc.writeMem(0x3361, { 0xb5 });
        gbc.writeMem(0xc78a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfee7, gbc.sp());
        EXPECT(0xc78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78a));
        EXPECT(0x56, gbc.readMem(0xc78b));
        // CB 56 029C
        gbc.setState(0x31cf, 0x7f26, 0xc7f0, 0x3393, 0xfed2, 0x7c02, 0x0, 0x1);
        gbc.writeMem(0x31cf, { 0xcb, 0x56 });
        gbc.writeMem(0x7c02, { 0x38 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7f26, gbc.sp());
        EXPECT(0x31d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 029E
        gbc.setState(0x40f7, 0xe5f, 0x76b0, 0x9f07, 0x8796, 0x5d5e, 0x0, 0x0);
        gbc.writeMem(0x40f7, { 0xcb, 0x56 });
        gbc.writeMem(0x5d5e, { 0x2e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe5f, gbc.sp());
        EXPECT(0x40f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 029F
        gbc.setState(0xbeb1, 0xaf09, 0x2ec0, 0x3063, 0x4467, 0xb7e5, 0x1, 0x0);
        gbc.writeMem(0xb7e5, { 0x5f });
        gbc.writeMem(0xbeb1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xaf09, gbc.sp());
        EXPECT(0xbeb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xb7e5));
        EXPECT(0xcb, gbc.readMem(0xbeb1));
        EXPECT(0x56, gbc.readMem(0xbeb2));
        // CB 56 02A0
        gbc.setState(0xcb6e, 0xc706, 0xd070, 0x6d21, 0xdb09, 0x322f, 0x1, 0x1);
        gbc.writeMem(0x322f, { 0xa2 });
        gbc.writeMem(0xcb6e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc706, gbc.sp());
        EXPECT(0xcb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6e));
        EXPECT(0x56, gbc.readMem(0xcb6f));
        // CB 56 02A1
        gbc.setState(0xaaf3, 0x324e, 0x910, 0x146c, 0xd61f, 0xfa5e, 0x0, 0x1);
        gbc.writeMem(0xaaf3, { 0xcb, 0x56 });
        gbc.writeMem(0xfa5e, { 0xd2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x324e, gbc.sp());
        EXPECT(0xaaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf3));
        EXPECT(0x56, gbc.readMem(0xaaf4));
        EXPECT(0xd2, gbc.readMem(0xfa5e));
        // CB 56 02A2
        gbc.setState(0xd4d3, 0x3e3b, 0x3170, 0x5297, 0xf118, 0x8439, 0x0, 0x1);
        gbc.writeMem(0x8439, { 0x42 });
        gbc.writeMem(0xd4d3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3e3b, gbc.sp());
        EXPECT(0xd4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8439));
        EXPECT(0xcb, gbc.readMem(0xd4d3));
        EXPECT(0x56, gbc.readMem(0xd4d4));
        // CB 56 02A3
        gbc.setState(0x595d, 0x45af, 0xa630, 0xc4cd, 0x5d99, 0x9bd1, 0x1, 0x1);
        gbc.writeMem(0x595d, { 0xcb, 0x56 });
        gbc.writeMem(0x9bd1, { 0x33 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x45af, gbc.sp());
        EXPECT(0x595f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9bd1));
        // CB 56 02A4
        gbc.setState(0x2c07, 0xd3f1, 0xf280, 0xc88f, 0xa454, 0xe8a8, 0x0, 0x0);
        gbc.writeMem(0x2c07, { 0xcb, 0x56 });
        gbc.writeMem(0xe8a8, { 0x7f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd3f1, gbc.sp());
        EXPECT(0x2c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xe8a8));
        // CB 56 02A5
        gbc.setState(0x5a52, 0xb9c6, 0xaf90, 0xd3ef, 0x602b, 0x3024, 0x1, 0x0);
        gbc.writeMem(0x3024, { 0x63 });
        gbc.writeMem(0x5a52, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb9c6, gbc.sp());
        EXPECT(0x5a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 02A6
        gbc.setState(0xca07, 0xbfba, 0xded0, 0xf2de, 0xb8db, 0x935f, 0x1, 0x0);
        gbc.writeMem(0x935f, { 0x31 });
        gbc.writeMem(0xca07, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbfba, gbc.sp());
        EXPECT(0xca09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x935f));
        EXPECT(0xcb, gbc.readMem(0xca07));
        EXPECT(0x56, gbc.readMem(0xca08));
        // CB 56 02A7
        gbc.setState(0x2932, 0x626f, 0x7fe0, 0xd19, 0xcba, 0xb0de, 0x0, 0x0);
        gbc.writeMem(0x2932, { 0xcb, 0x56 });
        gbc.writeMem(0xb0de, { 0xf0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x626f, gbc.sp());
        EXPECT(0x2934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb0de));
        // CB 56 02A8
        gbc.setState(0x494b, 0x2b13, 0x58f0, 0xf9ea, 0x926a, 0xa4c9, 0x1, 0x1);
        gbc.writeMem(0x494b, { 0xcb, 0x56 });
        gbc.writeMem(0xa4c9, { 0x42 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2b13, gbc.sp());
        EXPECT(0x494d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa4c9));
        // CB 56 02A9
        gbc.setState(0xbe2f, 0xd001, 0xbe50, 0x8900, 0xc451, 0x1ee8, 0x1, 0x0);
        gbc.writeMem(0x1ee8, { 0xc9 });
        gbc.writeMem(0xbe2f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd001, gbc.sp());
        EXPECT(0xbe31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe2f));
        EXPECT(0x56, gbc.readMem(0xbe30));
        // CB 56 02AA
        gbc.setState(0x4ffa, 0x201c, 0x3010, 0x3eaf, 0xdd0a, 0x8d2e, 0x1, 0x0);
        gbc.writeMem(0x4ffa, { 0xcb, 0x56 });
        gbc.writeMem(0x8d2e, { 0xc5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x201c, gbc.sp());
        EXPECT(0x4ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8d2e));
        // CB 56 02AB
        gbc.setState(0x3e1a, 0x4ded, 0xa4c0, 0x57bc, 0x787f, 0xfab6, 0x0, 0x1);
        gbc.writeMem(0x3e1a, { 0xcb, 0x56 });
        gbc.writeMem(0xfab6, { 0x6f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4ded, gbc.sp());
        EXPECT(0x3e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xfab6));
        // CB 56 02AC
        gbc.setState(0x4a57, 0x6b, 0x7e40, 0x374d, 0xe3be, 0xaf18, 0x1, 0x0);
        gbc.writeMem(0x4a57, { 0xcb, 0x56 });
        gbc.writeMem(0xaf18, { 0xc1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6b, gbc.sp());
        EXPECT(0x4a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xaf18));
        // CB 56 02AD
        gbc.setState(0x49ca, 0x7dbf, 0xc720, 0x40ad, 0x7f1, 0x93bc, 0x0, 0x0);
        gbc.writeMem(0x49ca, { 0xcb, 0x56 });
        gbc.writeMem(0x93bc, { 0x85 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7dbf, gbc.sp());
        EXPECT(0x49cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x93bc));
        // CB 56 02AE
        gbc.setState(0x33fc, 0xc693, 0x47e0, 0x2524, 0x1e2c, 0x5e29, 0x1, 0x1);
        gbc.writeMem(0x33fc, { 0xcb, 0x56 });
        gbc.writeMem(0x5e29, { 0x10 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc693, gbc.sp());
        EXPECT(0x33fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 02AF
        gbc.setState(0x4a7f, 0xb4e4, 0x97e0, 0xfa33, 0xad4a, 0x41bf, 0x1, 0x0);
        gbc.writeMem(0x41bf, { 0x14 });
        gbc.writeMem(0x4a7f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb4e4, gbc.sp());
        EXPECT(0x4a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 02B0
        gbc.setState(0x579b, 0xa269, 0xb4b0, 0x42c8, 0xdfc, 0x4769, 0x1, 0x0);
        gbc.writeMem(0x4769, { 0xe6 });
        gbc.writeMem(0x579b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa269, gbc.sp());
        EXPECT(0x579d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 02B1
        gbc.setState(0x3d53, 0xea29, 0xb960, 0xcc76, 0x9d2b, 0x9e1d, 0x1, 0x0);
        gbc.writeMem(0x3d53, { 0xcb, 0x56 });
        gbc.writeMem(0x9e1d, { 0x43 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xea29, gbc.sp());
        EXPECT(0x3d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9e1d));
        // CB 56 02B2
        gbc.setState(0xbaac, 0xa4d3, 0xeee0, 0xd32f, 0xb88e, 0xad8b, 0x1, 0x1);
        gbc.writeMem(0xad8b, { 0x49 });
        gbc.writeMem(0xbaac, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa4d3, gbc.sp());
        EXPECT(0xbaae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xad8b));
        EXPECT(0xcb, gbc.readMem(0xbaac));
        EXPECT(0x56, gbc.readMem(0xbaad));
        // CB 56 02B4
        gbc.setState(0x71d, 0xd37b, 0x7d50, 0x7374, 0x9e13, 0x37ec, 0x1, 0x0);
        gbc.writeMem(0x71d, { 0xcb, 0x56 });
        gbc.writeMem(0x37ec, { 0x45 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd37b, gbc.sp());
        EXPECT(0x71f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 02B5
        gbc.setState(0x9db5, 0x9e38, 0xf860, 0x7774, 0x43ec, 0xcba, 0x0, 0x0);
        gbc.writeMem(0xcba, { 0x71 });
        gbc.writeMem(0x9db5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9e38, gbc.sp());
        EXPECT(0x9db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db5));
        EXPECT(0x56, gbc.readMem(0x9db6));
        // CB 56 02B6
        gbc.setState(0xd4be, 0xe216, 0x9a50, 0x45e5, 0x66c1, 0x4308, 0x1, 0x0);
        gbc.writeMem(0x4308, { 0x1d });
        gbc.writeMem(0xd4be, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe216, gbc.sp());
        EXPECT(0xd4c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4be));
        EXPECT(0x56, gbc.readMem(0xd4bf));
        // CB 56 02B7
        gbc.setState(0x908, 0x2a4b, 0x77c0, 0xb708, 0xfdfe, 0x1fce, 0x1, 0x0);
        gbc.writeMem(0x908, { 0xcb, 0x56 });
        gbc.writeMem(0x1fce, { 0xa4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2a4b, gbc.sp());
        EXPECT(0x90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 02B8
        gbc.setState(0x4e48, 0xdb5f, 0x5300, 0x57ef, 0x7a27, 0x43d1, 0x0, 0x0);
        gbc.writeMem(0x43d1, { 0x0 });
        gbc.writeMem(0x4e48, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdb5f, gbc.sp());
        EXPECT(0x4e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 02B9
        gbc.setState(0x91ab, 0x643b, 0x2430, 0x36c5, 0x1afa, 0x8c0a, 0x0, 0x1);
        gbc.writeMem(0x8c0a, { 0x1b });
        gbc.writeMem(0x91ab, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x643b, gbc.sp());
        EXPECT(0x91ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x8c0a));
        EXPECT(0xcb, gbc.readMem(0x91ab));
        EXPECT(0x56, gbc.readMem(0x91ac));
        // CB 56 02BA
        gbc.setState(0x4c77, 0xaa4f, 0xe200, 0x4ad5, 0x7c7d, 0x7b9d, 0x0, 0x1);
        gbc.writeMem(0x4c77, { 0xcb, 0x56 });
        gbc.writeMem(0x7b9d, { 0xf6 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xaa4f, gbc.sp());
        EXPECT(0x4c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 02BB
        gbc.setState(0xd624, 0xf531, 0xf4f0, 0xe4d3, 0xa3b9, 0x242b, 0x1, 0x0);
        gbc.writeMem(0x242b, { 0x1a });
        gbc.writeMem(0xd624, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf531, gbc.sp());
        EXPECT(0xd626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd624));
        EXPECT(0x56, gbc.readMem(0xd625));
        // CB 56 02BC
        gbc.setState(0x7787, 0xb222, 0x5150, 0xec47, 0xf432, 0x328c, 0x1, 0x1);
        gbc.writeMem(0x328c, { 0x57 });
        gbc.writeMem(0x7787, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb222, gbc.sp());
        EXPECT(0x7789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 02BD
        gbc.setState(0x7e3e, 0x4c8e, 0x7a40, 0xc260, 0xb293, 0x5635, 0x0, 0x1);
        gbc.writeMem(0x5635, { 0x86 });
        gbc.writeMem(0x7e3e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4c8e, gbc.sp());
        EXPECT(0x7e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 02BE
        gbc.setState(0xe2ff, 0x16f4, 0xa0b0, 0xf8f, 0x1ce2, 0xa1b8, 0x1, 0x0);
        gbc.writeMem(0xa1b8, { 0xec });
        gbc.writeMem(0xe2ff, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x16f4, gbc.sp());
        EXPECT(0xe301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xa1b8));
        EXPECT(0xcb, gbc.readMem(0xe2ff));
        EXPECT(0x56, gbc.readMem(0xe300));
        // CB 56 02BF
        gbc.setState(0x5ae8, 0x9643, 0x30a0, 0xb6ab, 0xd678, 0xa08f, 0x1, 0x1);
        gbc.writeMem(0x5ae8, { 0xcb, 0x56 });
        gbc.writeMem(0xa08f, { 0xc6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9643, gbc.sp());
        EXPECT(0x5aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa08f));
        // CB 56 02C0
        gbc.setState(0xd5ff, 0xf0d6, 0x2eb0, 0xcaf, 0x5b45, 0xa918, 0x1, 0x0);
        gbc.writeMem(0xa918, { 0x86 });
        gbc.writeMem(0xd5ff, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf0d6, gbc.sp());
        EXPECT(0xd601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa918));
        EXPECT(0xcb, gbc.readMem(0xd5ff));
        EXPECT(0x56, gbc.readMem(0xd600));
        // CB 56 02C1
        gbc.setState(0x1747, 0x83bc, 0x7020, 0xde37, 0x2501, 0x37d5, 0x0, 0x1);
        gbc.writeMem(0x1747, { 0xcb, 0x56 });
        gbc.writeMem(0x37d5, { 0x7c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x83bc, gbc.sp());
        EXPECT(0x1749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 02C2
        gbc.setState(0xc347, 0x7b09, 0xac50, 0x7228, 0xabb3, 0xe816, 0x0, 0x1);
        gbc.writeMem(0xc347, { 0xcb, 0x56 });
        gbc.writeMem(0xe816, { 0x8a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7b09, gbc.sp());
        EXPECT(0xc349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc347));
        EXPECT(0x56, gbc.readMem(0xc348));
        EXPECT(0x8a, gbc.readMem(0xe816));
        // CB 56 02C3
        gbc.setState(0x5ab4, 0x9654, 0xa4d0, 0x3008, 0x1e11, 0xe751, 0x0, 0x1);
        gbc.writeMem(0x5ab4, { 0xcb, 0x56 });
        gbc.writeMem(0xe751, { 0xfd });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9654, gbc.sp());
        EXPECT(0x5ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xe751));
        // CB 56 02C5
        gbc.setState(0xc714, 0x4164, 0x8ec0, 0x108, 0x78f2, 0x195a, 0x1, 0x1);
        gbc.writeMem(0x195a, { 0x8b });
        gbc.writeMem(0xc714, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4164, gbc.sp());
        EXPECT(0xc716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc714));
        EXPECT(0x56, gbc.readMem(0xc715));
        // CB 56 02C6
        gbc.setState(0x6f90, 0x6fb4, 0x3680, 0x1f63, 0x1a68, 0x1d65, 0x1, 0x1);
        gbc.writeMem(0x1d65, { 0x12 });
        gbc.writeMem(0x6f90, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6fb4, gbc.sp());
        EXPECT(0x6f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 02C7
        gbc.setState(0xe019, 0xe749, 0x5da0, 0x9bd1, 0x9736, 0x9459, 0x0, 0x0);
        gbc.writeMem(0x9459, { 0xe5 });
        gbc.writeMem(0xe019, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe749, gbc.sp());
        EXPECT(0xe01b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9459));
        EXPECT(0xcb, gbc.readMem(0xe019));
        EXPECT(0x56, gbc.readMem(0xe01a));
        // CB 56 02C8
        gbc.setState(0x7695, 0x2d50, 0x5680, 0xd37a, 0xd899, 0x6ac1, 0x0, 0x1);
        gbc.writeMem(0x6ac1, { 0x3f });
        gbc.writeMem(0x7695, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2d50, gbc.sp());
        EXPECT(0x7697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 02C9
        gbc.setState(0x8eba, 0x166, 0xa040, 0xcfd6, 0xfc61, 0xe1c2, 0x0, 0x1);
        gbc.writeMem(0x8eba, { 0xcb, 0x56 });
        gbc.writeMem(0xe1c2, { 0xb2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x166, gbc.sp());
        EXPECT(0x8ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eba));
        EXPECT(0x56, gbc.readMem(0x8ebb));
        EXPECT(0xb2, gbc.readMem(0xe1c2));
        // CB 56 02CA
        gbc.setState(0x1c03, 0xeb3f, 0x6b90, 0x7f5d, 0xa7f0, 0x8ea8, 0x0, 0x0);
        gbc.writeMem(0x1c03, { 0xcb, 0x56 });
        gbc.writeMem(0x8ea8, { 0x3e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xeb3f, gbc.sp());
        EXPECT(0x1c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8ea8));
        // CB 56 02CB
        gbc.setState(0xb105, 0xaac2, 0x4b70, 0xaf6d, 0xd9ab, 0xe428, 0x0, 0x0);
        gbc.writeMem(0xb105, { 0xcb, 0x56 });
        gbc.writeMem(0xe428, { 0x4c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xaac2, gbc.sp());
        EXPECT(0xb107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb105));
        EXPECT(0x56, gbc.readMem(0xb106));
        EXPECT(0x4c, gbc.readMem(0xe428));
        // CB 56 02CC
        gbc.setState(0x671f, 0xeb57, 0x23c0, 0xd0c5, 0xff94, 0x6d65, 0x1, 0x0);
        gbc.writeMem(0x671f, { 0xcb, 0x56 });
        gbc.writeMem(0x6d65, { 0xae });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xeb57, gbc.sp());
        EXPECT(0x6721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 02CD
        gbc.setState(0xd5b9, 0x2290, 0xefa0, 0xca0d, 0x1bf5, 0x1f66, 0x1, 0x0);
        gbc.writeMem(0x1f66, { 0xf4 });
        gbc.writeMem(0xd5b9, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2290, gbc.sp());
        EXPECT(0xd5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b9));
        EXPECT(0x56, gbc.readMem(0xd5ba));
        // CB 56 02CE
        gbc.setState(0x84a8, 0x624, 0xa710, 0xe7f5, 0x5763, 0x6fbf, 0x0, 0x1);
        gbc.writeMem(0x6fbf, { 0x3b });
        gbc.writeMem(0x84a8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x624, gbc.sp());
        EXPECT(0x84aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a8));
        EXPECT(0x56, gbc.readMem(0x84a9));
        // CB 56 02CF
        gbc.setState(0x1ef5, 0xb847, 0xe300, 0x856f, 0xd021, 0x5f00, 0x0, 0x0);
        gbc.writeMem(0x1ef5, { 0xcb, 0x56 });
        gbc.writeMem(0x5f00, { 0x18 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb847, gbc.sp());
        EXPECT(0x1ef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 02D0
        gbc.setState(0x5aec, 0x5d7, 0x5a80, 0xfc37, 0x9af5, 0x4ef8, 0x0, 0x1);
        gbc.writeMem(0x4ef8, { 0x97 });
        gbc.writeMem(0x5aec, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5d7, gbc.sp());
        EXPECT(0x5aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 02D1
        gbc.setState(0xed5b, 0x6234, 0xcc0, 0x5d21, 0x5751, 0x5dd6, 0x0, 0x1);
        gbc.writeMem(0x5dd6, { 0x2d });
        gbc.writeMem(0xed5b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6234, gbc.sp());
        EXPECT(0xed5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed5b));
        EXPECT(0x56, gbc.readMem(0xed5c));
        // CB 56 02D2
        gbc.setState(0xd219, 0x3430, 0xf5c0, 0xe838, 0x54ce, 0x7241, 0x0, 0x0);
        gbc.writeMem(0x7241, { 0x1d });
        gbc.writeMem(0xd219, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3430, gbc.sp());
        EXPECT(0xd21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd219));
        EXPECT(0x56, gbc.readMem(0xd21a));
        // CB 56 02D3
        gbc.setState(0x594a, 0xd500, 0xf870, 0x448a, 0x990b, 0xa21d, 0x1, 0x1);
        gbc.writeMem(0x594a, { 0xcb, 0x56 });
        gbc.writeMem(0xa21d, { 0xf9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd500, gbc.sp());
        EXPECT(0x594c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xa21d));
        // CB 56 02D4
        gbc.setState(0x1cbc, 0x1c93, 0xce50, 0x9dd8, 0x3b8d, 0x13a, 0x1, 0x0);
        gbc.writeMem(0x13a, { 0x46 });
        gbc.writeMem(0x1cbc, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1c93, gbc.sp());
        EXPECT(0x1cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 02D5
        gbc.setState(0x4627, 0x66ab, 0xe790, 0xddd1, 0x7f38, 0x2b10, 0x0, 0x1);
        gbc.writeMem(0x2b10, { 0x9a });
        gbc.writeMem(0x4627, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x66ab, gbc.sp());
        EXPECT(0x4629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 02D6
        gbc.setState(0xeeb8, 0x47a3, 0x3a0, 0x7139, 0xf7d0, 0xa406, 0x0, 0x1);
        gbc.writeMem(0xa406, { 0xf8 });
        gbc.writeMem(0xeeb8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x47a3, gbc.sp());
        EXPECT(0xeeba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa406));
        EXPECT(0xcb, gbc.readMem(0xeeb8));
        EXPECT(0x56, gbc.readMem(0xeeb9));
        // CB 56 02D7
        gbc.setState(0xb473, 0x2519, 0xe220, 0x26e, 0xcdf5, 0xf491, 0x0, 0x0);
        gbc.writeMem(0xb473, { 0xcb, 0x56 });
        gbc.writeMem(0xf491, { 0xbc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2519, gbc.sp());
        EXPECT(0xb475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb473));
        EXPECT(0x56, gbc.readMem(0xb474));
        EXPECT(0xbc, gbc.readMem(0xf491));
        // CB 56 02D8
        gbc.setState(0xd98, 0xd2f5, 0x2b90, 0xb646, 0x22e8, 0x1161, 0x1, 0x0);
        gbc.writeMem(0xd98, { 0xcb, 0x56 });
        gbc.writeMem(0x1161, { 0x53 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd2f5, gbc.sp());
        EXPECT(0xd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 02D9
        gbc.setState(0x373b, 0xc586, 0xd430, 0xb07, 0xf923, 0x9644, 0x0, 0x0);
        gbc.writeMem(0x373b, { 0xcb, 0x56 });
        gbc.writeMem(0x9644, { 0xe6 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc586, gbc.sp());
        EXPECT(0x373d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9644));
        // CB 56 02DA
        gbc.setState(0xd8f9, 0x132d, 0xf8a0, 0xb0de, 0x1e96, 0xb09f, 0x0, 0x1);
        gbc.writeMem(0xb09f, { 0xeb });
        gbc.writeMem(0xd8f9, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x132d, gbc.sp());
        EXPECT(0xd8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xb09f));
        EXPECT(0xcb, gbc.readMem(0xd8f9));
        EXPECT(0x56, gbc.readMem(0xd8fa));
        // CB 56 02DB
        gbc.setState(0x2ad, 0xb8ed, 0x7cc0, 0x7c8c, 0xfd1b, 0xdc69, 0x1, 0x1);
        gbc.writeMem(0x2ad, { 0xcb, 0x56 });
        gbc.writeMem(0xdc69, { 0x40 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb8ed, gbc.sp());
        EXPECT(0x2af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdc69));
        // CB 56 02DC
        gbc.setState(0xef, 0xe43d, 0x9890, 0xd689, 0xea42, 0xfe, 0x1, 0x0);
        gbc.writeMem(0xef, { 0xcb, 0x56 });
        gbc.writeMem(0xfe, { 0x97 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe43d, gbc.sp());
        EXPECT(0xf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 02DD
        gbc.setState(0x8852, 0x63ec, 0xb990, 0x38b2, 0x66ec, 0xc49, 0x0, 0x0);
        gbc.writeMem(0xc49, { 0xe4 });
        gbc.writeMem(0x8852, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x63ec, gbc.sp());
        EXPECT(0x8854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8852));
        EXPECT(0x56, gbc.readMem(0x8853));
        // CB 56 02DE
        gbc.setState(0x9abe, 0xb6ae, 0x5b00, 0x4f4b, 0x415e, 0xa21a, 0x0, 0x0);
        gbc.writeMem(0x9abe, { 0xcb, 0x56 });
        gbc.writeMem(0xa21a, { 0x73 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb6ae, gbc.sp());
        EXPECT(0x9ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abe));
        EXPECT(0x56, gbc.readMem(0x9abf));
        EXPECT(0x73, gbc.readMem(0xa21a));
        // CB 56 02E0
        gbc.setState(0xaa28, 0x9257, 0xdc30, 0xddeb, 0x1ef4, 0x86d6, 0x0, 0x0);
        gbc.writeMem(0x86d6, { 0x1f });
        gbc.writeMem(0xaa28, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9257, gbc.sp());
        EXPECT(0xaa2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x86d6));
        EXPECT(0xcb, gbc.readMem(0xaa28));
        EXPECT(0x56, gbc.readMem(0xaa29));
        // CB 56 02E1
        gbc.setState(0xbdf, 0x7ab7, 0x89b0, 0x4b74, 0x12b9, 0x216c, 0x1, 0x1);
        gbc.writeMem(0xbdf, { 0xcb, 0x56 });
        gbc.writeMem(0x216c, { 0xe7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7ab7, gbc.sp());
        EXPECT(0xbe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 02E2
        gbc.setState(0xb9cd, 0xd3e7, 0x1940, 0x807a, 0x2cd7, 0x8dcb, 0x1, 0x0);
        gbc.writeMem(0x8dcb, { 0x8f });
        gbc.writeMem(0xb9cd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd3e7, gbc.sp());
        EXPECT(0xb9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8dcb));
        EXPECT(0xcb, gbc.readMem(0xb9cd));
        EXPECT(0x56, gbc.readMem(0xb9ce));
        // CB 56 02E3
        gbc.setState(0xbd43, 0x16ea, 0x5870, 0x492, 0x8d7d, 0xab82, 0x0, 0x0);
        gbc.writeMem(0xab82, { 0xbd });
        gbc.writeMem(0xbd43, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x16ea, gbc.sp());
        EXPECT(0xbd45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xab82));
        EXPECT(0xcb, gbc.readMem(0xbd43));
        EXPECT(0x56, gbc.readMem(0xbd44));
        // CB 56 02E4
        gbc.setState(0x802c, 0xebbc, 0x4830, 0x3f75, 0xecf0, 0x8b43, 0x1, 0x0);
        gbc.writeMem(0x802c, { 0xcb, 0x56 });
        gbc.writeMem(0x8b43, { 0x59 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xebbc, gbc.sp());
        EXPECT(0x802e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802c));
        EXPECT(0x56, gbc.readMem(0x802d));
        EXPECT(0x59, gbc.readMem(0x8b43));
        // CB 56 02E5
        gbc.setState(0x81cd, 0xbdc7, 0xa560, 0x9d7d, 0x16e6, 0x2a6f, 0x1, 0x1);
        gbc.writeMem(0x2a6f, { 0xfe });
        gbc.writeMem(0x81cd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbdc7, gbc.sp());
        EXPECT(0x81cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81cd));
        EXPECT(0x56, gbc.readMem(0x81ce));
        // CB 56 02E6
        gbc.setState(0xe13a, 0x826e, 0xc130, 0x78cb, 0x6f7, 0xa83f, 0x0, 0x0);
        gbc.writeMem(0xa83f, { 0xff });
        gbc.writeMem(0xe13a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x826e, gbc.sp());
        EXPECT(0xe13c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa83f));
        EXPECT(0xcb, gbc.readMem(0xe13a));
        EXPECT(0x56, gbc.readMem(0xe13b));
        // CB 56 02E8
        gbc.setState(0x1dc7, 0x59d9, 0x1690, 0x742d, 0x2c1a, 0xe0f1, 0x0, 0x0);
        gbc.writeMem(0x1dc7, { 0xcb, 0x56 });
        gbc.writeMem(0xe0f1, { 0x12 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x59d9, gbc.sp());
        EXPECT(0x1dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xe0f1));
        // CB 56 02E9
        gbc.setState(0x4d26, 0xcf02, 0xd760, 0x3cb6, 0xb477, 0xc2e5, 0x0, 0x0);
        gbc.writeMem(0x4d26, { 0xcb, 0x56 });
        gbc.writeMem(0xc2e5, { 0x64 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcf02, gbc.sp());
        EXPECT(0x4d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc2e5));
        // CB 56 02EA
        gbc.setState(0x14, 0xb59e, 0x15b0, 0xefdf, 0xa9cc, 0xa5c9, 0x0, 0x1);
        gbc.writeMem(0x14, { 0xcb, 0x56 });
        gbc.writeMem(0xa5c9, { 0x7c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb59e, gbc.sp());
        EXPECT(0x16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xa5c9));
        // CB 56 02EB
        gbc.setState(0x902a, 0x4073, 0x6d60, 0x9638, 0x2ff, 0x32fc, 0x0, 0x1);
        gbc.writeMem(0x32fc, { 0x3a });
        gbc.writeMem(0x902a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4073, gbc.sp());
        EXPECT(0x902c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x902a));
        EXPECT(0x56, gbc.readMem(0x902b));
        // CB 56 02EC
        gbc.setState(0xb3a4, 0x347, 0x6350, 0x1ce9, 0x6409, 0xc429, 0x0, 0x1);
        gbc.writeMem(0xb3a4, { 0xcb, 0x56 });
        gbc.writeMem(0xc429, { 0x1b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x347, gbc.sp());
        EXPECT(0xb3a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a4));
        EXPECT(0x56, gbc.readMem(0xb3a5));
        EXPECT(0x1b, gbc.readMem(0xc429));
        // CB 56 02ED
        gbc.setState(0xcd52, 0x6585, 0xde10, 0x117d, 0x7535, 0xd0c8, 0x1, 0x1);
        gbc.writeMem(0xcd52, { 0xcb, 0x56 });
        gbc.writeMem(0xd0c8, { 0xfa });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6585, gbc.sp());
        EXPECT(0xcd54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd52));
        EXPECT(0x56, gbc.readMem(0xcd53));
        EXPECT(0xfa, gbc.readMem(0xd0c8));
        // CB 56 02EE
        gbc.setState(0x3175, 0x21e, 0x60b0, 0x83e6, 0x32ba, 0xd82e, 0x0, 0x1);
        gbc.writeMem(0x3175, { 0xcb, 0x56 });
        gbc.writeMem(0xd82e, { 0xea });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x21e, gbc.sp());
        EXPECT(0x3177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xd82e));
        // CB 56 02EF
        gbc.setState(0x160c, 0x2b61, 0x5500, 0x97f8, 0xd0e7, 0x5c58, 0x0, 0x0);
        gbc.writeMem(0x160c, { 0xcb, 0x56 });
        gbc.writeMem(0x5c58, { 0xae });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2b61, gbc.sp());
        EXPECT(0x160e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 02F0
        gbc.setState(0xc8b5, 0xf347, 0x48e0, 0x4e2, 0x2bc2, 0x368e, 0x1, 0x0);
        gbc.writeMem(0x368e, { 0xe2 });
        gbc.writeMem(0xc8b5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf347, gbc.sp());
        EXPECT(0xc8b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b5));
        EXPECT(0x56, gbc.readMem(0xc8b6));
        // CB 56 02F1
        gbc.setState(0x8631, 0xb3ff, 0xaa00, 0x3a6e, 0x5e64, 0x646d, 0x1, 0x1);
        gbc.writeMem(0x646d, { 0x82 });
        gbc.writeMem(0x8631, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb3ff, gbc.sp());
        EXPECT(0x8633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8631));
        EXPECT(0x56, gbc.readMem(0x8632));
        // CB 56 02F4
        gbc.setState(0x69fa, 0x1c94, 0xb010, 0x1cb4, 0x1389, 0x3391, 0x0, 0x1);
        gbc.writeMem(0x3391, { 0xd });
        gbc.writeMem(0x69fa, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1c94, gbc.sp());
        EXPECT(0x69fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 02F5
        gbc.setState(0x7712, 0x44c6, 0xb90, 0x7b22, 0x3972, 0x2bd1, 0x1, 0x1);
        gbc.writeMem(0x2bd1, { 0x18 });
        gbc.writeMem(0x7712, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x44c6, gbc.sp());
        EXPECT(0x7714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 02F7
        gbc.setState(0xa600, 0x80db, 0x9460, 0xa12, 0xe0b8, 0xb29f, 0x1, 0x1);
        gbc.writeMem(0xa600, { 0xcb, 0x56 });
        gbc.writeMem(0xb29f, { 0xed });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x80db, gbc.sp());
        EXPECT(0xa602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa600));
        EXPECT(0x56, gbc.readMem(0xa601));
        EXPECT(0xed, gbc.readMem(0xb29f));
        // CB 56 02F8
        gbc.setState(0xdf88, 0xcc4c, 0x7ca0, 0xb927, 0xdb73, 0xe3b2, 0x0, 0x1);
        gbc.writeMem(0xdf88, { 0xcb, 0x56 });
        gbc.writeMem(0xe3b2, { 0x42 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcc4c, gbc.sp());
        EXPECT(0xdf8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf88));
        EXPECT(0x56, gbc.readMem(0xdf89));
        EXPECT(0x42, gbc.readMem(0xe3b2));
        // CB 56 02F9
        gbc.setState(0x4600, 0xd9e2, 0x6ee0, 0x3cb5, 0xcf17, 0x4ae6, 0x0, 0x1);
        gbc.writeMem(0x4600, { 0xcb, 0x56 });
        gbc.writeMem(0x4ae6, { 0x9b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd9e2, gbc.sp());
        EXPECT(0x4602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 02FA
        gbc.setState(0x2132, 0x3a7c, 0xd4f0, 0x245e, 0x5c13, 0x63ae, 0x1, 0x0);
        gbc.writeMem(0x2132, { 0xcb, 0x56 });
        gbc.writeMem(0x63ae, { 0xfb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3a7c, gbc.sp());
        EXPECT(0x2134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 02FB
        gbc.setState(0xca7e, 0x3b4, 0x8820, 0x4eba, 0x74af, 0xc89b, 0x1, 0x1);
        gbc.writeMem(0xc89b, { 0x12 });
        gbc.writeMem(0xca7e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3b4, gbc.sp());
        EXPECT(0xca80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc89b));
        EXPECT(0xcb, gbc.readMem(0xca7e));
        EXPECT(0x56, gbc.readMem(0xca7f));
        // CB 56 02FC
        gbc.setState(0x6998, 0x3cb0, 0x3570, 0x4cc7, 0xf47c, 0x7ae8, 0x1, 0x1);
        gbc.writeMem(0x6998, { 0xcb, 0x56 });
        gbc.writeMem(0x7ae8, { 0xa5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3cb0, gbc.sp());
        EXPECT(0x699a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 02FD
        gbc.setState(0x6170, 0x8ddf, 0x3550, 0x2b49, 0xb0ac, 0x6a97, 0x1, 0x1);
        gbc.writeMem(0x6170, { 0xcb, 0x56 });
        gbc.writeMem(0x6a97, { 0xcd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8ddf, gbc.sp());
        EXPECT(0x6172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 02FE
        gbc.setState(0xaac1, 0x958b, 0x6db0, 0xada9, 0xcc8a, 0xa26, 0x1, 0x1);
        gbc.writeMem(0xa26, { 0x53 });
        gbc.writeMem(0xaac1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x958b, gbc.sp());
        EXPECT(0xaac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac1));
        EXPECT(0x56, gbc.readMem(0xaac2));
        // CB 56 02FF
        gbc.setState(0x384d, 0x83f9, 0x88b0, 0x9efc, 0xc89a, 0x892c, 0x1, 0x1);
        gbc.writeMem(0x384d, { 0xcb, 0x56 });
        gbc.writeMem(0x892c, { 0xf4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x83f9, gbc.sp());
        EXPECT(0x384f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x892c));
        // CB 56 0300
        gbc.setState(0x7d5, 0x62fb, 0x6240, 0xf84f, 0x135a, 0x1934, 0x0, 0x1);
        gbc.writeMem(0x7d5, { 0xcb, 0x56 });
        gbc.writeMem(0x1934, { 0xbd });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x62fb, gbc.sp());
        EXPECT(0x7d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0301
        gbc.setState(0xae7c, 0x28d1, 0xd7e0, 0x5596, 0x63e8, 0x17e9, 0x1, 0x0);
        gbc.writeMem(0x17e9, { 0x36 });
        gbc.writeMem(0xae7c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x28d1, gbc.sp());
        EXPECT(0xae7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae7c));
        EXPECT(0x56, gbc.readMem(0xae7d));
        // CB 56 0302
        gbc.setState(0x3cc8, 0x6ab, 0xe080, 0xbafc, 0xa001, 0x809e, 0x1, 0x1);
        gbc.writeMem(0x3cc8, { 0xcb, 0x56 });
        gbc.writeMem(0x809e, { 0xac });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6ab, gbc.sp());
        EXPECT(0x3cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x809e));
        // CB 56 0303
        gbc.setState(0x460f, 0x773e, 0x87a0, 0xc5d7, 0x8f4c, 0xf803, 0x0, 0x0);
        gbc.writeMem(0x460f, { 0xcb, 0x56 });
        gbc.writeMem(0xf803, { 0x80 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x773e, gbc.sp());
        EXPECT(0x4611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xf803));
        // CB 56 0304
        gbc.setState(0x2cfc, 0x2f0b, 0xf0, 0xa510, 0x75ad, 0xc95b, 0x0, 0x0);
        gbc.writeMem(0x2cfc, { 0xcb, 0x56 });
        gbc.writeMem(0xc95b, { 0x57 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2f0b, gbc.sp());
        EXPECT(0x2cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc95b));
        // CB 56 0305
        gbc.setState(0x3a68, 0x5b7e, 0x1810, 0x42b1, 0x6789, 0xc0ac, 0x0, 0x1);
        gbc.writeMem(0x3a68, { 0xcb, 0x56 });
        gbc.writeMem(0xc0ac, { 0x8c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5b7e, gbc.sp());
        EXPECT(0x3a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc0ac));
        // CB 56 0306
        gbc.setState(0x4e17, 0xedd, 0xeee0, 0x6f68, 0xd206, 0x1474, 0x0, 0x1);
        gbc.writeMem(0x1474, { 0xe3 });
        gbc.writeMem(0x4e17, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xedd, gbc.sp());
        EXPECT(0x4e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0307
        gbc.setState(0xa077, 0x590, 0x2bd0, 0xb51a, 0x95bd, 0xdfad, 0x1, 0x1);
        gbc.writeMem(0xa077, { 0xcb, 0x56 });
        gbc.writeMem(0xdfad, { 0x49 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x590, gbc.sp());
        EXPECT(0xa079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa077));
        EXPECT(0x56, gbc.readMem(0xa078));
        EXPECT(0x49, gbc.readMem(0xdfad));
        // CB 56 0309
        gbc.setState(0x519, 0x3c90, 0xb260, 0x42c5, 0x6436, 0x7f21, 0x0, 0x1);
        gbc.writeMem(0x519, { 0xcb, 0x56 });
        gbc.writeMem(0x7f21, { 0x1f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3c90, gbc.sp());
        EXPECT(0x51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 030A
        gbc.setState(0xb020, 0x35cd, 0x4900, 0x7373, 0x1062, 0x1a6, 0x0, 0x0);
        gbc.writeMem(0x1a6, { 0xb6 });
        gbc.writeMem(0xb020, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x35cd, gbc.sp());
        EXPECT(0xb022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb020));
        EXPECT(0x56, gbc.readMem(0xb021));
        // CB 56 030B
        gbc.setState(0x4317, 0x609d, 0x1350, 0x6948, 0xcc1a, 0xc3c1, 0x0, 0x1);
        gbc.writeMem(0x4317, { 0xcb, 0x56 });
        gbc.writeMem(0xc3c1, { 0xa2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x609d, gbc.sp());
        EXPECT(0x4319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc3c1));
        // CB 56 030C
        gbc.setState(0x1d1e, 0x591b, 0x3cf0, 0x3396, 0xbcc5, 0x70e5, 0x0, 0x0);
        gbc.writeMem(0x1d1e, { 0xcb, 0x56 });
        gbc.writeMem(0x70e5, { 0xa2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x591b, gbc.sp());
        EXPECT(0x1d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 030D
        gbc.setState(0xae9c, 0xd3ba, 0x8a90, 0x68ad, 0xc197, 0x4d6b, 0x0, 0x1);
        gbc.writeMem(0x4d6b, { 0xff });
        gbc.writeMem(0xae9c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd3ba, gbc.sp());
        EXPECT(0xae9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae9c));
        EXPECT(0x56, gbc.readMem(0xae9d));
        // CB 56 030E
        gbc.setState(0xd939, 0xbf26, 0xb2c0, 0xc4e3, 0x2ead, 0x4af7, 0x1, 0x1);
        gbc.writeMem(0x4af7, { 0x7a });
        gbc.writeMem(0xd939, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbf26, gbc.sp());
        EXPECT(0xd93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd939));
        EXPECT(0x56, gbc.readMem(0xd93a));
        // CB 56 030F
        gbc.setState(0x80bf, 0x8170, 0x6140, 0x121b, 0x36c2, 0xaa45, 0x1, 0x1);
        gbc.writeMem(0x80bf, { 0xcb, 0x56 });
        gbc.writeMem(0xaa45, { 0xe4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8170, gbc.sp());
        EXPECT(0x80c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80bf));
        EXPECT(0x56, gbc.readMem(0x80c0));
        EXPECT(0xe4, gbc.readMem(0xaa45));
        // CB 56 0310
        gbc.setState(0x730b, 0xfbb8, 0x2c90, 0xb284, 0x34ea, 0xf9c6, 0x0, 0x0);
        gbc.writeMem(0x730b, { 0xcb, 0x56 });
        gbc.writeMem(0xf9c6, { 0x71 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfbb8, gbc.sp());
        EXPECT(0x730d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xf9c6));
        // CB 56 0311
        gbc.setState(0x86d7, 0x45bf, 0x5e0, 0x5670, 0xdf07, 0xcc0f, 0x0, 0x0);
        gbc.writeMem(0x86d7, { 0xcb, 0x56 });
        gbc.writeMem(0xcc0f, { 0x33 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x45bf, gbc.sp());
        EXPECT(0x86d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d7));
        EXPECT(0x56, gbc.readMem(0x86d8));
        EXPECT(0x33, gbc.readMem(0xcc0f));
        // CB 56 0312
        gbc.setState(0x8758, 0xc493, 0x62b0, 0x1ac7, 0x16a9, 0x8f80, 0x1, 0x0);
        gbc.writeMem(0x8758, { 0xcb, 0x56 });
        gbc.writeMem(0x8f80, { 0xd3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc493, gbc.sp());
        EXPECT(0x875a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8758));
        EXPECT(0x56, gbc.readMem(0x8759));
        EXPECT(0xd3, gbc.readMem(0x8f80));
        // CB 56 0313
        gbc.setState(0x2d96, 0xe283, 0xfe90, 0xcd3, 0x9c28, 0xb2c4, 0x0, 0x0);
        gbc.writeMem(0x2d96, { 0xcb, 0x56 });
        gbc.writeMem(0xb2c4, { 0xd6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe283, gbc.sp());
        EXPECT(0x2d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb2c4));
        // CB 56 0314
        gbc.setState(0xb2ce, 0xb68b, 0xb700, 0x5f4d, 0xa713, 0xf8f0, 0x0, 0x0);
        gbc.writeMem(0xb2ce, { 0xcb, 0x56 });
        gbc.writeMem(0xf8f0, { 0x80 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb68b, gbc.sp());
        EXPECT(0xb2d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ce));
        EXPECT(0x56, gbc.readMem(0xb2cf));
        EXPECT(0x80, gbc.readMem(0xf8f0));
        // CB 56 0315
        gbc.setState(0x3f0b, 0x7ec1, 0xff20, 0x4f9a, 0x2a74, 0x6a57, 0x0, 0x0);
        gbc.writeMem(0x3f0b, { 0xcb, 0x56 });
        gbc.writeMem(0x6a57, { 0x87 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7ec1, gbc.sp());
        EXPECT(0x3f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0316
        gbc.setState(0x98b4, 0x3b44, 0xa420, 0x1c73, 0xf49c, 0x5f16, 0x1, 0x0);
        gbc.writeMem(0x5f16, { 0x5 });
        gbc.writeMem(0x98b4, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3b44, gbc.sp());
        EXPECT(0x98b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b4));
        EXPECT(0x56, gbc.readMem(0x98b5));
        // CB 56 0317
        gbc.setState(0x4422, 0xc0cf, 0xd770, 0xf5c7, 0x89f9, 0x57a2, 0x0, 0x0);
        gbc.writeMem(0x4422, { 0xcb, 0x56 });
        gbc.writeMem(0x57a2, { 0x1a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc0cf, gbc.sp());
        EXPECT(0x4424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0318
        gbc.setState(0x7d18, 0x311d, 0x5cf0, 0xb525, 0x5c80, 0xf9dd, 0x1, 0x1);
        gbc.writeMem(0x7d18, { 0xcb, 0x56 });
        gbc.writeMem(0xf9dd, { 0x1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x311d, gbc.sp());
        EXPECT(0x7d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xf9dd));
        // CB 56 0319
        gbc.setState(0x7dd5, 0xce9d, 0x7bc0, 0xe328, 0x31d5, 0xc552, 0x1, 0x0);
        gbc.writeMem(0x7dd5, { 0xcb, 0x56 });
        gbc.writeMem(0xc552, { 0xa4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xce9d, gbc.sp());
        EXPECT(0x7dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc552));
        // CB 56 031A
        gbc.setState(0x8590, 0x4462, 0x9b60, 0x75f5, 0x858a, 0xe5de, 0x1, 0x1);
        gbc.writeMem(0x8590, { 0xcb, 0x56 });
        gbc.writeMem(0xe5de, { 0xb0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4462, gbc.sp());
        EXPECT(0x8592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8590));
        EXPECT(0x56, gbc.readMem(0x8591));
        EXPECT(0xb0, gbc.readMem(0xe5de));
        // CB 56 031B
        gbc.setState(0x654b, 0x6c21, 0x3b30, 0xcdba, 0xbe2a, 0xb31e, 0x0, 0x1);
        gbc.writeMem(0x654b, { 0xcb, 0x56 });
        gbc.writeMem(0xb31e, { 0xda });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6c21, gbc.sp());
        EXPECT(0x654d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb31e));
        // CB 56 031D
        gbc.setState(0xbf70, 0xe93b, 0x8e60, 0x99ce, 0x1586, 0x8597, 0x1, 0x0);
        gbc.writeMem(0x8597, { 0x7b });
        gbc.writeMem(0xbf70, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe93b, gbc.sp());
        EXPECT(0xbf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8597));
        EXPECT(0xcb, gbc.readMem(0xbf70));
        EXPECT(0x56, gbc.readMem(0xbf71));
        // CB 56 031E
        gbc.setState(0xc55b, 0xb833, 0xef80, 0x7900, 0x69b2, 0xfaa9, 0x1, 0x1);
        gbc.writeMem(0xc55b, { 0xcb, 0x56 });
        gbc.writeMem(0xfaa9, { 0x80 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb833, gbc.sp());
        EXPECT(0xc55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55b));
        EXPECT(0x56, gbc.readMem(0xc55c));
        EXPECT(0x80, gbc.readMem(0xfaa9));
        // CB 56 031F
        gbc.setState(0xda3f, 0xf3b9, 0x9830, 0x5eed, 0xd799, 0xe086, 0x0, 0x0);
        gbc.writeMem(0xda3f, { 0xcb, 0x56 });
        gbc.writeMem(0xe086, { 0x80 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf3b9, gbc.sp());
        EXPECT(0xda41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3f));
        EXPECT(0x56, gbc.readMem(0xda40));
        EXPECT(0x80, gbc.readMem(0xe086));
        // CB 56 0320
        gbc.setState(0x77d5, 0x20e, 0x6470, 0x2d6a, 0xbaa3, 0x47ce, 0x0, 0x1);
        gbc.writeMem(0x47ce, { 0x84 });
        gbc.writeMem(0x77d5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x20e, gbc.sp());
        EXPECT(0x77d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0321
        gbc.setState(0x4090, 0x95a6, 0xe810, 0x77c0, 0xc2ad, 0x82af, 0x0, 0x1);
        gbc.writeMem(0x4090, { 0xcb, 0x56 });
        gbc.writeMem(0x82af, { 0x3e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x95a6, gbc.sp());
        EXPECT(0x4092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x82af));
        // CB 56 0322
        gbc.setState(0x62ac, 0x9df1, 0x9470, 0x83e8, 0x6884, 0x7fb7, 0x1, 0x1);
        gbc.writeMem(0x62ac, { 0xcb, 0x56 });
        gbc.writeMem(0x7fb7, { 0x51 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9df1, gbc.sp());
        EXPECT(0x62ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0323
        gbc.setState(0x5c5c, 0xc85d, 0xd440, 0xbb9a, 0x3be8, 0x829d, 0x1, 0x1);
        gbc.writeMem(0x5c5c, { 0xcb, 0x56 });
        gbc.writeMem(0x829d, { 0xbc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc85d, gbc.sp());
        EXPECT(0x5c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x829d));
        // CB 56 0324
        gbc.setState(0xeca8, 0xf7dc, 0x8430, 0xbf40, 0xbc98, 0x3e8f, 0x0, 0x1);
        gbc.writeMem(0x3e8f, { 0x65 });
        gbc.writeMem(0xeca8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf7dc, gbc.sp());
        EXPECT(0xecaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca8));
        EXPECT(0x56, gbc.readMem(0xeca9));
        // CB 56 0325
        gbc.setState(0x10c5, 0x52df, 0x8560, 0x1dd3, 0xaec8, 0xb288, 0x1, 0x1);
        gbc.writeMem(0x10c5, { 0xcb, 0x56 });
        gbc.writeMem(0xb288, { 0xf2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x52df, gbc.sp());
        EXPECT(0x10c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xb288));
        // CB 56 0326
        gbc.setState(0xec4e, 0xa803, 0xfed0, 0xaecd, 0x91fd, 0xf952, 0x0, 0x1);
        gbc.writeMem(0xec4e, { 0xcb, 0x56 });
        gbc.writeMem(0xf952, { 0x52 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa803, gbc.sp());
        EXPECT(0xec50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec4e));
        EXPECT(0x56, gbc.readMem(0xec4f));
        EXPECT(0x52, gbc.readMem(0xf952));
        // CB 56 0327
        gbc.setState(0x7e7c, 0x4e6e, 0xf660, 0xac18, 0xd940, 0xaa48, 0x1, 0x0);
        gbc.writeMem(0x7e7c, { 0xcb, 0x56 });
        gbc.writeMem(0xaa48, { 0xd5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4e6e, gbc.sp());
        EXPECT(0x7e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xaa48));
        // CB 56 0328
        gbc.setState(0x6336, 0x6b6d, 0xeec0, 0x841d, 0x63c6, 0x5094, 0x1, 0x1);
        gbc.writeMem(0x5094, { 0x71 });
        gbc.writeMem(0x6336, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6b6d, gbc.sp());
        EXPECT(0x6338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0329
        gbc.setState(0x2ca2, 0x9fe4, 0xdb50, 0x4a1e, 0x9d69, 0xbebb, 0x0, 0x0);
        gbc.writeMem(0x2ca2, { 0xcb, 0x56 });
        gbc.writeMem(0xbebb, { 0x8b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9fe4, gbc.sp());
        EXPECT(0x2ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xbebb));
        // CB 56 032A
        gbc.setState(0x7731, 0xbc9b, 0x7160, 0xd867, 0xc198, 0xa8b1, 0x1, 0x0);
        gbc.writeMem(0x7731, { 0xcb, 0x56 });
        gbc.writeMem(0xa8b1, { 0x6e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbc9b, gbc.sp());
        EXPECT(0x7733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa8b1));
        // CB 56 032B
        gbc.setState(0x78ba, 0x65dd, 0xb570, 0xd173, 0xf025, 0xa103, 0x0, 0x0);
        gbc.writeMem(0x78ba, { 0xcb, 0x56 });
        gbc.writeMem(0xa103, { 0x74 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x65dd, gbc.sp());
        EXPECT(0x78bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa103));
        // CB 56 032C
        gbc.setState(0x1ebe, 0x8a2a, 0xaa0, 0x12ae, 0x26ce, 0x954a, 0x0, 0x0);
        gbc.writeMem(0x1ebe, { 0xcb, 0x56 });
        gbc.writeMem(0x954a, { 0xc6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8a2a, gbc.sp());
        EXPECT(0x1ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x954a));
        // CB 56 032D
        gbc.setState(0xbdf, 0xbd64, 0x6440, 0x2f2f, 0x65c5, 0x68d5, 0x1, 0x0);
        gbc.writeMem(0xbdf, { 0xcb, 0x56 });
        gbc.writeMem(0x68d5, { 0x65 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbd64, gbc.sp());
        EXPECT(0xbe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 032E
        gbc.setState(0x2f3e, 0x9699, 0xd850, 0x6e1a, 0x62b4, 0xcba1, 0x1, 0x1);
        gbc.writeMem(0x2f3e, { 0xcb, 0x56 });
        gbc.writeMem(0xcba1, { 0x51 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9699, gbc.sp());
        EXPECT(0x2f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcba1));
        // CB 56 032F
        gbc.setState(0xa177, 0x9311, 0xbed0, 0x4fce, 0xbbd7, 0x32f, 0x0, 0x0);
        gbc.writeMem(0x32f, { 0xea });
        gbc.writeMem(0xa177, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9311, gbc.sp());
        EXPECT(0xa179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa177));
        EXPECT(0x56, gbc.readMem(0xa178));
        // CB 56 0330
        gbc.setState(0x3599, 0x71c3, 0x5730, 0x2748, 0x2d, 0x3788, 0x0, 0x1);
        gbc.writeMem(0x3599, { 0xcb, 0x56 });
        gbc.writeMem(0x3788, { 0xe2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x71c3, gbc.sp());
        EXPECT(0x359b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0331
        gbc.setState(0x997d, 0xc21a, 0xf1e0, 0x301d, 0x3126, 0x39c3, 0x1, 0x0);
        gbc.writeMem(0x39c3, { 0xea });
        gbc.writeMem(0x997d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc21a, gbc.sp());
        EXPECT(0x997f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997d));
        EXPECT(0x56, gbc.readMem(0x997e));
        // CB 56 0332
        gbc.setState(0x22d3, 0x41ad, 0xf90, 0x56ca, 0x5d33, 0x28a9, 0x0, 0x0);
        gbc.writeMem(0x22d3, { 0xcb, 0x56 });
        gbc.writeMem(0x28a9, { 0x9a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x41ad, gbc.sp());
        EXPECT(0x22d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0333
        gbc.setState(0x5571, 0x577, 0x640, 0x405c, 0xf340, 0x228e, 0x1, 0x0);
        gbc.writeMem(0x228e, { 0x1d });
        gbc.writeMem(0x5571, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x577, gbc.sp());
        EXPECT(0x5573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0334
        gbc.setState(0x24a8, 0x7ecd, 0xdc10, 0xdd76, 0xe4b6, 0xc9b9, 0x0, 0x1);
        gbc.writeMem(0x24a8, { 0xcb, 0x56 });
        gbc.writeMem(0xc9b9, { 0xa2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7ecd, gbc.sp());
        EXPECT(0x24aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc9b9));
        // CB 56 0335
        gbc.setState(0xba39, 0x8de3, 0xca20, 0xad13, 0x2b5, 0x54a7, 0x0, 0x1);
        gbc.writeMem(0x54a7, { 0x89 });
        gbc.writeMem(0xba39, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8de3, gbc.sp());
        EXPECT(0xba3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba39));
        EXPECT(0x56, gbc.readMem(0xba3a));
        // CB 56 0336
        gbc.setState(0xdfa3, 0x4f60, 0x5730, 0xd80e, 0xd09e, 0x211d, 0x0, 0x1);
        gbc.writeMem(0x211d, { 0xa4 });
        gbc.writeMem(0xdfa3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4f60, gbc.sp());
        EXPECT(0xdfa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa3));
        EXPECT(0x56, gbc.readMem(0xdfa4));
        // CB 56 0337
        gbc.setState(0x80bf, 0x473, 0x70, 0xf82c, 0xb416, 0x2cc8, 0x0, 0x0);
        gbc.writeMem(0x2cc8, { 0xf5 });
        gbc.writeMem(0x80bf, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x473, gbc.sp());
        EXPECT(0x80c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80bf));
        EXPECT(0x56, gbc.readMem(0x80c0));
        // CB 56 0339
        gbc.setState(0x6871, 0x6af9, 0x3d70, 0x206b, 0x8bd6, 0xb731, 0x0, 0x0);
        gbc.writeMem(0x6871, { 0xcb, 0x56 });
        gbc.writeMem(0xb731, { 0x56 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6af9, gbc.sp());
        EXPECT(0x6873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb731));
        // CB 56 033A
        gbc.setState(0xb98a, 0x238c, 0x41d0, 0xefa3, 0xfe58, 0x8392, 0x1, 0x1);
        gbc.writeMem(0x8392, { 0x53 });
        gbc.writeMem(0xb98a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x238c, gbc.sp());
        EXPECT(0xb98c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8392));
        EXPECT(0xcb, gbc.readMem(0xb98a));
        EXPECT(0x56, gbc.readMem(0xb98b));
        // CB 56 033C
        gbc.setState(0xc75f, 0xa31e, 0x4310, 0x60c5, 0x326, 0x9720, 0x0, 0x0);
        gbc.writeMem(0x9720, { 0xbc });
        gbc.writeMem(0xc75f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa31e, gbc.sp());
        EXPECT(0xc761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9720));
        EXPECT(0xcb, gbc.readMem(0xc75f));
        EXPECT(0x56, gbc.readMem(0xc760));
        // CB 56 033D
        gbc.setState(0x529e, 0x6af2, 0x2740, 0x7101, 0xda55, 0x4ec6, 0x0, 0x0);
        gbc.writeMem(0x4ec6, { 0x51 });
        gbc.writeMem(0x529e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6af2, gbc.sp());
        EXPECT(0x52a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 033E
        gbc.setState(0xdd9e, 0xc416, 0xf6b0, 0xd3c7, 0xc12a, 0x4d98, 0x1, 0x1);
        gbc.writeMem(0x4d98, { 0xa6 });
        gbc.writeMem(0xdd9e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc416, gbc.sp());
        EXPECT(0xdda0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd9e));
        EXPECT(0x56, gbc.readMem(0xdd9f));
        // CB 56 033F
        gbc.setState(0xd28a, 0x1dca, 0x67c0, 0x24ae, 0x121d, 0xb27f, 0x1, 0x0);
        gbc.writeMem(0xb27f, { 0xae });
        gbc.writeMem(0xd28a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1dca, gbc.sp());
        EXPECT(0xd28c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xb27f));
        EXPECT(0xcb, gbc.readMem(0xd28a));
        EXPECT(0x56, gbc.readMem(0xd28b));
        // CB 56 0340
        gbc.setState(0x215c, 0xdc07, 0xcb20, 0xaf93, 0xd813, 0x6ba5, 0x0, 0x0);
        gbc.writeMem(0x215c, { 0xcb, 0x56 });
        gbc.writeMem(0x6ba5, { 0x69 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdc07, gbc.sp());
        EXPECT(0x215e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0341
        gbc.setState(0x76ee, 0x2dce, 0xfc90, 0x891c, 0x6159, 0x7d64, 0x0, 0x0);
        gbc.writeMem(0x76ee, { 0xcb, 0x56 });
        gbc.writeMem(0x7d64, { 0xac });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2dce, gbc.sp());
        EXPECT(0x76f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0342
        gbc.setState(0x54f7, 0x21ce, 0xa5b0, 0x7bef, 0x9087, 0xeeb2, 0x0, 0x0);
        gbc.writeMem(0x54f7, { 0xcb, 0x56 });
        gbc.writeMem(0xeeb2, { 0x99 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x21ce, gbc.sp());
        EXPECT(0x54f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xeeb2));
        // CB 56 0343
        gbc.setState(0xe786, 0x6ca7, 0x990, 0x49b0, 0xef68, 0xced2, 0x1, 0x0);
        gbc.writeMem(0xced2, { 0x2c });
        gbc.writeMem(0xe786, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6ca7, gbc.sp());
        EXPECT(0xe788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xced2));
        EXPECT(0xcb, gbc.readMem(0xe786));
        EXPECT(0x56, gbc.readMem(0xe787));
        // CB 56 0344
        gbc.setState(0x25fd, 0x7ae4, 0xf2f0, 0x7a17, 0x7f73, 0xc19f, 0x1, 0x1);
        gbc.writeMem(0x25fd, { 0xcb, 0x56 });
        gbc.writeMem(0xc19f, { 0xa8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7ae4, gbc.sp());
        EXPECT(0x25ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xc19f));
        // CB 56 0346
        gbc.setState(0xd913, 0xf34c, 0x92b0, 0x4b63, 0xd0cc, 0x8903, 0x1, 0x0);
        gbc.writeMem(0x8903, { 0x5 });
        gbc.writeMem(0xd913, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf34c, gbc.sp());
        EXPECT(0xd915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8903));
        EXPECT(0xcb, gbc.readMem(0xd913));
        EXPECT(0x56, gbc.readMem(0xd914));
        // CB 56 0347
        gbc.setState(0xc9c8, 0xfb22, 0x5a30, 0xa49e, 0xaccd, 0x4205, 0x1, 0x0);
        gbc.writeMem(0x4205, { 0x76 });
        gbc.writeMem(0xc9c8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfb22, gbc.sp());
        EXPECT(0xc9ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c8));
        EXPECT(0x56, gbc.readMem(0xc9c9));
        // CB 56 0348
        gbc.setState(0xb99b, 0x2a0d, 0x5780, 0x56b0, 0x6a5d, 0x18b4, 0x1, 0x1);
        gbc.writeMem(0x18b4, { 0xd6 });
        gbc.writeMem(0xb99b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2a0d, gbc.sp());
        EXPECT(0xb99d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb99b));
        EXPECT(0x56, gbc.readMem(0xb99c));
        // CB 56 0349
        gbc.setState(0xb2a2, 0x4baf, 0xd660, 0xf290, 0x3927, 0xfcf3, 0x0, 0x0);
        gbc.writeMem(0xb2a2, { 0xcb, 0x56 });
        gbc.writeMem(0xfcf3, { 0xd8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4baf, gbc.sp());
        EXPECT(0xb2a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a2));
        EXPECT(0x56, gbc.readMem(0xb2a3));
        EXPECT(0xd8, gbc.readMem(0xfcf3));
        // CB 56 034A
        gbc.setState(0x1970, 0x283d, 0x6770, 0xb014, 0x476b, 0x43fb, 0x1, 0x0);
        gbc.writeMem(0x1970, { 0xcb, 0x56 });
        gbc.writeMem(0x43fb, { 0xbe });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x283d, gbc.sp());
        EXPECT(0x1972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 034B
        gbc.setState(0x6f0b, 0x2446, 0x27d0, 0xdbff, 0x5fcb, 0xe702, 0x0, 0x0);
        gbc.writeMem(0x6f0b, { 0xcb, 0x56 });
        gbc.writeMem(0xe702, { 0x49 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2446, gbc.sp());
        EXPECT(0x6f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe702));
        // CB 56 034C
        gbc.setState(0xd7e3, 0x5705, 0xb8f0, 0x4c00, 0x8c0b, 0x2ead, 0x1, 0x1);
        gbc.writeMem(0x2ead, { 0xb0 });
        gbc.writeMem(0xd7e3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5705, gbc.sp());
        EXPECT(0xd7e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e3));
        EXPECT(0x56, gbc.readMem(0xd7e4));
        // CB 56 034D
        gbc.setState(0x969d, 0x9d03, 0xd010, 0xf713, 0xd2be, 0xe043, 0x1, 0x0);
        gbc.writeMem(0x969d, { 0xcb, 0x56 });
        gbc.writeMem(0xe043, { 0x79 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9d03, gbc.sp());
        EXPECT(0x969f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x969d));
        EXPECT(0x56, gbc.readMem(0x969e));
        EXPECT(0x79, gbc.readMem(0xe043));
        // CB 56 034E
        gbc.setState(0x3c50, 0x384a, 0x1d10, 0x39f3, 0xbf77, 0x4b1e, 0x0, 0x1);
        gbc.writeMem(0x3c50, { 0xcb, 0x56 });
        gbc.writeMem(0x4b1e, { 0x45 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x384a, gbc.sp());
        EXPECT(0x3c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 034F
        gbc.setState(0x5e23, 0x701a, 0xe380, 0xed29, 0xdd49, 0xb0ea, 0x0, 0x1);
        gbc.writeMem(0x5e23, { 0xcb, 0x56 });
        gbc.writeMem(0xb0ea, { 0xee });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x701a, gbc.sp());
        EXPECT(0x5e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xb0ea));
        // CB 56 0350
        gbc.setState(0x6f24, 0xa8b6, 0xce70, 0x2216, 0xc1bf, 0xb9d3, 0x1, 0x1);
        gbc.writeMem(0x6f24, { 0xcb, 0x56 });
        gbc.writeMem(0xb9d3, { 0x85 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa8b6, gbc.sp());
        EXPECT(0x6f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb9d3));
        // CB 56 0351
        gbc.setState(0xa6b3, 0x50de, 0xe520, 0x52fe, 0x3df2, 0xdab2, 0x0, 0x1);
        gbc.writeMem(0xa6b3, { 0xcb, 0x56 });
        gbc.writeMem(0xdab2, { 0x34 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x50de, gbc.sp());
        EXPECT(0xa6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b3));
        EXPECT(0x56, gbc.readMem(0xa6b4));
        EXPECT(0x34, gbc.readMem(0xdab2));
        // CB 56 0352
        gbc.setState(0xab3b, 0x2ff3, 0x3350, 0x934d, 0xc062, 0x40c1, 0x0, 0x0);
        gbc.writeMem(0x40c1, { 0x13 });
        gbc.writeMem(0xab3b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2ff3, gbc.sp());
        EXPECT(0xab3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3b));
        EXPECT(0x56, gbc.readMem(0xab3c));
        // CB 56 0353
        gbc.setState(0x556f, 0x8a06, 0x9f60, 0x9803, 0xf20f, 0x39e, 0x1, 0x0);
        gbc.writeMem(0x39e, { 0x9 });
        gbc.writeMem(0x556f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8a06, gbc.sp());
        EXPECT(0x5571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0355
        gbc.setState(0x45f2, 0x14d0, 0x1eb0, 0xb073, 0x53fa, 0xaca1, 0x0, 0x0);
        gbc.writeMem(0x45f2, { 0xcb, 0x56 });
        gbc.writeMem(0xaca1, { 0xed });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x14d0, gbc.sp());
        EXPECT(0x45f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xaca1));
        // CB 56 0356
        gbc.setState(0x8799, 0x3571, 0xb4a0, 0xeae7, 0x7fe5, 0xb8ab, 0x1, 0x0);
        gbc.writeMem(0x8799, { 0xcb, 0x56 });
        gbc.writeMem(0xb8ab, { 0xef });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3571, gbc.sp());
        EXPECT(0x879b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8799));
        EXPECT(0x56, gbc.readMem(0x879a));
        EXPECT(0xef, gbc.readMem(0xb8ab));
        // CB 56 0357
        gbc.setState(0x204, 0x7a29, 0xb040, 0xe002, 0x3742, 0xe14e, 0x1, 0x1);
        gbc.writeMem(0x204, { 0xcb, 0x56 });
        gbc.writeMem(0xe14e, { 0x3b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7a29, gbc.sp());
        EXPECT(0x206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe14e));
        // CB 56 0358
        gbc.setState(0x24d0, 0x3f46, 0x4580, 0xa244, 0x86cf, 0x450e, 0x0, 0x0);
        gbc.writeMem(0x24d0, { 0xcb, 0x56 });
        gbc.writeMem(0x450e, { 0x30 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3f46, gbc.sp());
        EXPECT(0x24d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0359
        gbc.setState(0x37aa, 0x7fef, 0x7710, 0xc82e, 0x69e6, 0x7dc3, 0x1, 0x0);
        gbc.writeMem(0x37aa, { 0xcb, 0x56 });
        gbc.writeMem(0x7dc3, { 0x26 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7fef, gbc.sp());
        EXPECT(0x37ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 035A
        gbc.setState(0xb09e, 0xcc1d, 0xa670, 0x39b1, 0x3de2, 0x661a, 0x1, 0x1);
        gbc.writeMem(0x661a, { 0x9f });
        gbc.writeMem(0xb09e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcc1d, gbc.sp());
        EXPECT(0xb0a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09e));
        EXPECT(0x56, gbc.readMem(0xb09f));
        // CB 56 035B
        gbc.setState(0x76b5, 0xc315, 0x6a10, 0xb04d, 0x18fe, 0xd202, 0x1, 0x0);
        gbc.writeMem(0x76b5, { 0xcb, 0x56 });
        gbc.writeMem(0xd202, { 0x92 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc315, gbc.sp());
        EXPECT(0x76b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd202));
        // CB 56 035C
        gbc.setState(0x9c21, 0x43c, 0x7860, 0x4a96, 0x56a9, 0x7256, 0x1, 0x0);
        gbc.writeMem(0x7256, { 0x8a });
        gbc.writeMem(0x9c21, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x43c, gbc.sp());
        EXPECT(0x9c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c21));
        EXPECT(0x56, gbc.readMem(0x9c22));
        // CB 56 035D
        gbc.setState(0xe877, 0x2105, 0x8380, 0x185b, 0x84ac, 0x4df2, 0x1, 0x1);
        gbc.writeMem(0x4df2, { 0xce });
        gbc.writeMem(0xe877, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2105, gbc.sp());
        EXPECT(0xe879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe877));
        EXPECT(0x56, gbc.readMem(0xe878));
        // CB 56 035E
        gbc.setState(0xbe35, 0xae31, 0x3310, 0x153e, 0x57b7, 0xf530, 0x1, 0x0);
        gbc.writeMem(0xbe35, { 0xcb, 0x56 });
        gbc.writeMem(0xf530, { 0x6d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xae31, gbc.sp());
        EXPECT(0xbe37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe35));
        EXPECT(0x56, gbc.readMem(0xbe36));
        EXPECT(0x6d, gbc.readMem(0xf530));
        // CB 56 035F
        gbc.setState(0xb3e2, 0xfed6, 0xeff0, 0x52a7, 0x2319, 0x3742, 0x0, 0x1);
        gbc.writeMem(0x3742, { 0x23 });
        gbc.writeMem(0xb3e2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfed6, gbc.sp());
        EXPECT(0xb3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e2));
        EXPECT(0x56, gbc.readMem(0xb3e3));
        // CB 56 0360
        gbc.setState(0x269f, 0x7c21, 0xdb90, 0x3308, 0x7e4c, 0x248b, 0x0, 0x0);
        gbc.writeMem(0x248b, { 0xd7 });
        gbc.writeMem(0x269f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7c21, gbc.sp());
        EXPECT(0x26a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0361
        gbc.setState(0x58ea, 0x6ca4, 0x85b0, 0x1519, 0xd6bc, 0x211a, 0x0, 0x0);
        gbc.writeMem(0x211a, { 0x7d });
        gbc.writeMem(0x58ea, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6ca4, gbc.sp());
        EXPECT(0x58ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0363
        gbc.setState(0x583c, 0xcf38, 0x8af0, 0x5205, 0xb92e, 0x233c, 0x0, 0x0);
        gbc.writeMem(0x233c, { 0xcd });
        gbc.writeMem(0x583c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcf38, gbc.sp());
        EXPECT(0x583e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0364
        gbc.setState(0xec33, 0x855c, 0x74f0, 0xa989, 0x6b3c, 0xf965, 0x0, 0x0);
        gbc.writeMem(0xec33, { 0xcb, 0x56 });
        gbc.writeMem(0xf965, { 0x4a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x855c, gbc.sp());
        EXPECT(0xec35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec33));
        EXPECT(0x56, gbc.readMem(0xec34));
        EXPECT(0x4a, gbc.readMem(0xf965));
        // CB 56 0365
        gbc.setState(0xeb6f, 0x873a, 0x49d0, 0xc5e1, 0x78b8, 0x4fef, 0x1, 0x0);
        gbc.writeMem(0x4fef, { 0x2e });
        gbc.writeMem(0xeb6f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x873a, gbc.sp());
        EXPECT(0xeb71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6f));
        EXPECT(0x56, gbc.readMem(0xeb70));
        // CB 56 0366
        gbc.setState(0x4633, 0xb8c5, 0x6460, 0x468a, 0x3357, 0xcecf, 0x0, 0x0);
        gbc.writeMem(0x4633, { 0xcb, 0x56 });
        gbc.writeMem(0xcecf, { 0x32 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb8c5, gbc.sp());
        EXPECT(0x4635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xcecf));
        // CB 56 0367
        gbc.setState(0x4aed, 0xa1a, 0xdb20, 0x947, 0x6906, 0xed3e, 0x0, 0x0);
        gbc.writeMem(0x4aed, { 0xcb, 0x56 });
        gbc.writeMem(0xed3e, { 0xa9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa1a, gbc.sp());
        EXPECT(0x4aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xed3e));
        // CB 56 0368
        gbc.setState(0x3c92, 0x2438, 0x9ac0, 0x7f6, 0x6ae7, 0x7f6b, 0x1, 0x0);
        gbc.writeMem(0x3c92, { 0xcb, 0x56 });
        gbc.writeMem(0x7f6b, { 0x71 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2438, gbc.sp());
        EXPECT(0x3c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0369
        gbc.setState(0x874e, 0xc08a, 0xab60, 0x1114, 0xf358, 0x461d, 0x1, 0x0);
        gbc.writeMem(0x461d, { 0x1f });
        gbc.writeMem(0x874e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc08a, gbc.sp());
        EXPECT(0x8750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874e));
        EXPECT(0x56, gbc.readMem(0x874f));
        // CB 56 036A
        gbc.setState(0xce42, 0x38fc, 0xeb60, 0x5a32, 0x3fbf, 0xd03a, 0x1, 0x0);
        gbc.writeMem(0xce42, { 0xcb, 0x56 });
        gbc.writeMem(0xd03a, { 0xc9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x38fc, gbc.sp());
        EXPECT(0xce44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce42));
        EXPECT(0x56, gbc.readMem(0xce43));
        EXPECT(0xc9, gbc.readMem(0xd03a));
        // CB 56 036C
        gbc.setState(0xae54, 0xed4c, 0xdc30, 0x2cd6, 0x145e, 0x6c3e, 0x1, 0x0);
        gbc.writeMem(0x6c3e, { 0x46 });
        gbc.writeMem(0xae54, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xed4c, gbc.sp());
        EXPECT(0xae56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae54));
        EXPECT(0x56, gbc.readMem(0xae55));
        // CB 56 036E
        gbc.setState(0x3f52, 0x6cd8, 0x5b40, 0xc4c4, 0x5728, 0x84b5, 0x1, 0x0);
        gbc.writeMem(0x3f52, { 0xcb, 0x56 });
        gbc.writeMem(0x84b5, { 0x35 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6cd8, gbc.sp());
        EXPECT(0x3f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x84b5));
        // CB 56 036F
        gbc.setState(0xd467, 0xbe2b, 0xaff0, 0x2829, 0xeeeb, 0x1574, 0x1, 0x0);
        gbc.writeMem(0x1574, { 0xb9 });
        gbc.writeMem(0xd467, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbe2b, gbc.sp());
        EXPECT(0xd469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd467));
        EXPECT(0x56, gbc.readMem(0xd468));
        // CB 56 0370
        gbc.setState(0xee7c, 0x8611, 0x3350, 0xd7a6, 0x3b93, 0xd0de, 0x0, 0x1);
        gbc.writeMem(0xd0de, { 0xcf });
        gbc.writeMem(0xee7c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8611, gbc.sp());
        EXPECT(0xee7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xd0de));
        EXPECT(0xcb, gbc.readMem(0xee7c));
        EXPECT(0x56, gbc.readMem(0xee7d));
        // CB 56 0371
        gbc.setState(0x9560, 0xb542, 0xaf20, 0xecb, 0xf26a, 0x5260, 0x1, 0x0);
        gbc.writeMem(0x5260, { 0x2c });
        gbc.writeMem(0x9560, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb542, gbc.sp());
        EXPECT(0x9562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9560));
        EXPECT(0x56, gbc.readMem(0x9561));
        // CB 56 0372
        gbc.setState(0x1b64, 0xce8, 0x4740, 0x6ffe, 0x61d5, 0x347d, 0x0, 0x1);
        gbc.writeMem(0x1b64, { 0xcb, 0x56 });
        gbc.writeMem(0x347d, { 0x2b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xce8, gbc.sp());
        EXPECT(0x1b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0373
        gbc.setState(0x9e97, 0x49d5, 0xb9b0, 0x2144, 0xeea1, 0x8442, 0x1, 0x1);
        gbc.writeMem(0x8442, { 0x43 });
        gbc.writeMem(0x9e97, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x49d5, gbc.sp());
        EXPECT(0x9e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8442));
        EXPECT(0xcb, gbc.readMem(0x9e97));
        EXPECT(0x56, gbc.readMem(0x9e98));
        // CB 56 0374
        gbc.setState(0xb84e, 0xebf2, 0xd450, 0xbe3b, 0x82cb, 0x1857, 0x0, 0x1);
        gbc.writeMem(0x1857, { 0x68 });
        gbc.writeMem(0xb84e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xebf2, gbc.sp());
        EXPECT(0xb850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb84e));
        EXPECT(0x56, gbc.readMem(0xb84f));
        // CB 56 0375
        gbc.setState(0x33cb, 0x450c, 0x8ec0, 0x943, 0xbf07, 0x2435, 0x0, 0x0);
        gbc.writeMem(0x2435, { 0xc9 });
        gbc.writeMem(0x33cb, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x450c, gbc.sp());
        EXPECT(0x33cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0376
        gbc.setState(0x95ea, 0xb2b7, 0x9e40, 0xbcaf, 0x6a6f, 0xe714, 0x0, 0x0);
        gbc.writeMem(0x95ea, { 0xcb, 0x56 });
        gbc.writeMem(0xe714, { 0xa9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb2b7, gbc.sp());
        EXPECT(0x95ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ea));
        EXPECT(0x56, gbc.readMem(0x95eb));
        EXPECT(0xa9, gbc.readMem(0xe714));
        // CB 56 0377
        gbc.setState(0x8909, 0xf9d0, 0xc8f0, 0x9173, 0xdcd8, 0xc5ee, 0x0, 0x0);
        gbc.writeMem(0x8909, { 0xcb, 0x56 });
        gbc.writeMem(0xc5ee, { 0xb8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf9d0, gbc.sp());
        EXPECT(0x890b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8909));
        EXPECT(0x56, gbc.readMem(0x890a));
        EXPECT(0xb8, gbc.readMem(0xc5ee));
        // CB 56 0378
        gbc.setState(0xdc01, 0x1b9f, 0x7280, 0xdab9, 0xb320, 0x84b3, 0x1, 0x1);
        gbc.writeMem(0x84b3, { 0x77 });
        gbc.writeMem(0xdc01, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1b9f, gbc.sp());
        EXPECT(0xdc03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x84b3));
        EXPECT(0xcb, gbc.readMem(0xdc01));
        EXPECT(0x56, gbc.readMem(0xdc02));
        // CB 56 0379
        gbc.setState(0xc26c, 0x8f19, 0xfe00, 0x365b, 0xa8c3, 0x5f85, 0x0, 0x1);
        gbc.writeMem(0x5f85, { 0xa0 });
        gbc.writeMem(0xc26c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8f19, gbc.sp());
        EXPECT(0xc26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc26c));
        EXPECT(0x56, gbc.readMem(0xc26d));
        // CB 56 037A
        gbc.setState(0x3eb6, 0x3013, 0xe990, 0x6f78, 0x5fbb, 0x541d, 0x1, 0x0);
        gbc.writeMem(0x3eb6, { 0xcb, 0x56 });
        gbc.writeMem(0x541d, { 0x60 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3013, gbc.sp());
        EXPECT(0x3eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 037B
        gbc.setState(0x440f, 0x8457, 0xfe40, 0x20d2, 0xed04, 0x72bc, 0x1, 0x1);
        gbc.writeMem(0x440f, { 0xcb, 0x56 });
        gbc.writeMem(0x72bc, { 0xfd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8457, gbc.sp());
        EXPECT(0x4411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 037D
        gbc.setState(0xc6c1, 0x4f5c, 0xc100, 0xfc11, 0xa0c4, 0x68d1, 0x1, 0x0);
        gbc.writeMem(0x68d1, { 0xc7 });
        gbc.writeMem(0xc6c1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4f5c, gbc.sp());
        EXPECT(0xc6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c1));
        EXPECT(0x56, gbc.readMem(0xc6c2));
        // CB 56 037E
        gbc.setState(0xb413, 0x863, 0xfb40, 0x655d, 0xfbef, 0xbe53, 0x0, 0x0);
        gbc.writeMem(0xb413, { 0xcb, 0x56 });
        gbc.writeMem(0xbe53, { 0x78 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x863, gbc.sp());
        EXPECT(0xb415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb413));
        EXPECT(0x56, gbc.readMem(0xb414));
        EXPECT(0x78, gbc.readMem(0xbe53));
        // CB 56 037F
        gbc.setState(0x32cd, 0x2430, 0xee80, 0x52b3, 0x3aab, 0xfa7d, 0x1, 0x0);
        gbc.writeMem(0x32cd, { 0xcb, 0x56 });
        gbc.writeMem(0xfa7d, { 0x68 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2430, gbc.sp());
        EXPECT(0x32cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xfa7d));
        // CB 56 0380
        gbc.setState(0xb427, 0x86a1, 0x60c0, 0x3034, 0x2f12, 0xd6a6, 0x0, 0x0);
        gbc.writeMem(0xb427, { 0xcb, 0x56 });
        gbc.writeMem(0xd6a6, { 0x29 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x86a1, gbc.sp());
        EXPECT(0xb429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb427));
        EXPECT(0x56, gbc.readMem(0xb428));
        EXPECT(0x29, gbc.readMem(0xd6a6));
        // CB 56 0381
        gbc.setState(0xb3a1, 0x2994, 0x5a00, 0xa105, 0x3c7, 0x3995, 0x0, 0x1);
        gbc.writeMem(0x3995, { 0x6a });
        gbc.writeMem(0xb3a1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2994, gbc.sp());
        EXPECT(0xb3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a1));
        EXPECT(0x56, gbc.readMem(0xb3a2));
        // CB 56 0382
        gbc.setState(0x7f16, 0x481c, 0xb0, 0x9402, 0xdae, 0xf02e, 0x0, 0x0);
        gbc.writeMem(0x7f16, { 0xcb, 0x56 });
        gbc.writeMem(0xf02e, { 0x53 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x481c, gbc.sp());
        EXPECT(0x7f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xf02e));
        // CB 56 0383
        gbc.setState(0xb4cf, 0x44b9, 0xdff0, 0x778a, 0x5122, 0x224f, 0x0, 0x0);
        gbc.writeMem(0x224f, { 0x78 });
        gbc.writeMem(0xb4cf, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x44b9, gbc.sp());
        EXPECT(0xb4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4cf));
        EXPECT(0x56, gbc.readMem(0xb4d0));
        // CB 56 0384
        gbc.setState(0xc845, 0xdfb1, 0xa6f0, 0x6e01, 0xf22d, 0x4457, 0x1, 0x1);
        gbc.writeMem(0x4457, { 0x1f });
        gbc.writeMem(0xc845, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdfb1, gbc.sp());
        EXPECT(0xc847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc845));
        EXPECT(0x56, gbc.readMem(0xc846));
        // CB 56 0385
        gbc.setState(0x6c3b, 0xc065, 0x4980, 0xa56e, 0xa8de, 0xa834, 0x1, 0x0);
        gbc.writeMem(0x6c3b, { 0xcb, 0x56 });
        gbc.writeMem(0xa834, { 0x88 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc065, gbc.sp());
        EXPECT(0x6c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa834));
        // CB 56 0386
        gbc.setState(0xa70, 0xde80, 0xbb70, 0x9686, 0x71dc, 0x430d, 0x0, 0x1);
        gbc.writeMem(0xa70, { 0xcb, 0x56 });
        gbc.writeMem(0x430d, { 0x29 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xde80, gbc.sp());
        EXPECT(0xa72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0387
        gbc.setState(0x643c, 0xcbcc, 0x5190, 0x42a1, 0xa9a8, 0x583a, 0x1, 0x1);
        gbc.writeMem(0x583a, { 0xec });
        gbc.writeMem(0x643c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcbcc, gbc.sp());
        EXPECT(0x643e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0388
        gbc.setState(0xd82, 0xfdb9, 0x1990, 0x3ca5, 0x7f5f, 0x13a1, 0x1, 0x1);
        gbc.writeMem(0xd82, { 0xcb, 0x56 });
        gbc.writeMem(0x13a1, { 0xc0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfdb9, gbc.sp());
        EXPECT(0xd84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0389
        gbc.setState(0x79ed, 0xce0e, 0xcd0, 0x5579, 0xaa25, 0x277, 0x0, 0x1);
        gbc.writeMem(0x277, { 0x45 });
        gbc.writeMem(0x79ed, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xce0e, gbc.sp());
        EXPECT(0x79ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 038B
        gbc.setState(0xd76d, 0x2e0, 0x24b0, 0xae3a, 0xb9d1, 0xd2c7, 0x0, 0x0);
        gbc.writeMem(0xd2c7, { 0x35 });
        gbc.writeMem(0xd76d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2e0, gbc.sp());
        EXPECT(0xd76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xd2c7));
        EXPECT(0xcb, gbc.readMem(0xd76d));
        EXPECT(0x56, gbc.readMem(0xd76e));
        // CB 56 038C
        gbc.setState(0x53db, 0x1a34, 0xe1c0, 0xef63, 0xfd89, 0xce08, 0x0, 0x0);
        gbc.writeMem(0x53db, { 0xcb, 0x56 });
        gbc.writeMem(0xce08, { 0xde });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1a34, gbc.sp());
        EXPECT(0x53dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xce08));
        // CB 56 038E
        gbc.setState(0x9923, 0x6748, 0xc5c0, 0x2ac, 0x1194, 0xaaf, 0x1, 0x1);
        gbc.writeMem(0xaaf, { 0x12 });
        gbc.writeMem(0x9923, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6748, gbc.sp());
        EXPECT(0x9925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9923));
        EXPECT(0x56, gbc.readMem(0x9924));
        // CB 56 038F
        gbc.setState(0x1ec7, 0x12d7, 0x9180, 0xd701, 0xeb32, 0x1d8e, 0x1, 0x1);
        gbc.writeMem(0x1d8e, { 0xa1 });
        gbc.writeMem(0x1ec7, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x12d7, gbc.sp());
        EXPECT(0x1ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 0390
        gbc.setState(0x7bd2, 0x45d, 0xb8d0, 0x55, 0xd4ca, 0x9ab6, 0x1, 0x0);
        gbc.writeMem(0x7bd2, { 0xcb, 0x56 });
        gbc.writeMem(0x9ab6, { 0xc1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x45d, gbc.sp());
        EXPECT(0x7bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9ab6));
        // CB 56 0391
        gbc.setState(0xc1af, 0x55c8, 0x2490, 0xa573, 0x90f0, 0xc16e, 0x0, 0x1);
        gbc.writeMem(0xc16e, { 0x97 });
        gbc.writeMem(0xc1af, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x55c8, gbc.sp());
        EXPECT(0xc1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc16e));
        EXPECT(0xcb, gbc.readMem(0xc1af));
        EXPECT(0x56, gbc.readMem(0xc1b0));
        // CB 56 0392
        gbc.setState(0x6983, 0x3f08, 0x330, 0x4213, 0x92a2, 0xde9d, 0x1, 0x1);
        gbc.writeMem(0x6983, { 0xcb, 0x56 });
        gbc.writeMem(0xde9d, { 0xc4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3f08, gbc.sp());
        EXPECT(0x6985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xde9d));
        // CB 56 0393
        gbc.setState(0x7cce, 0x549, 0x4b0, 0x9f23, 0xf297, 0x2067, 0x1, 0x0);
        gbc.writeMem(0x2067, { 0x44 });
        gbc.writeMem(0x7cce, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x549, gbc.sp());
        EXPECT(0x7cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 0394
        gbc.setState(0x8996, 0x7120, 0xdf00, 0x6b42, 0x4b1b, 0x5ce7, 0x0, 0x0);
        gbc.writeMem(0x5ce7, { 0xc3 });
        gbc.writeMem(0x8996, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7120, gbc.sp());
        EXPECT(0x8998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8996));
        EXPECT(0x56, gbc.readMem(0x8997));
        // CB 56 0396
        gbc.setState(0xa46f, 0xec5a, 0xf480, 0x14b6, 0x5139, 0x197a, 0x1, 0x0);
        gbc.writeMem(0x197a, { 0xf0 });
        gbc.writeMem(0xa46f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xec5a, gbc.sp());
        EXPECT(0xa471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46f));
        EXPECT(0x56, gbc.readMem(0xa470));
        // CB 56 0398
        gbc.setState(0xb116, 0x697c, 0x3af0, 0x221c, 0x9184, 0xe503, 0x0, 0x0);
        gbc.writeMem(0xb116, { 0xcb, 0x56 });
        gbc.writeMem(0xe503, { 0x1e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x697c, gbc.sp());
        EXPECT(0xb118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb116));
        EXPECT(0x56, gbc.readMem(0xb117));
        EXPECT(0x1e, gbc.readMem(0xe503));
        // CB 56 0399
        gbc.setState(0xbe65, 0xf3b, 0x9920, 0x7871, 0x9a6b, 0x2fe9, 0x0, 0x1);
        gbc.writeMem(0x2fe9, { 0x4e });
        gbc.writeMem(0xbe65, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf3b, gbc.sp());
        EXPECT(0xbe67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe65));
        EXPECT(0x56, gbc.readMem(0xbe66));
        // CB 56 039A
        gbc.setState(0xdc8c, 0x8e4, 0xe720, 0x9ff6, 0x2ad, 0x2c30, 0x0, 0x0);
        gbc.writeMem(0x2c30, { 0x49 });
        gbc.writeMem(0xdc8c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8e4, gbc.sp());
        EXPECT(0xdc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8c));
        EXPECT(0x56, gbc.readMem(0xdc8d));
        // CB 56 039B
        gbc.setState(0x8802, 0xdfa2, 0x8680, 0x762b, 0x3019, 0x336f, 0x1, 0x1);
        gbc.writeMem(0x336f, { 0x20 });
        gbc.writeMem(0x8802, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdfa2, gbc.sp());
        EXPECT(0x8804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8802));
        EXPECT(0x56, gbc.readMem(0x8803));
        // CB 56 039C
        gbc.setState(0xbe5e, 0x26c3, 0xc430, 0xfe4f, 0xe4ed, 0x36cd, 0x0, 0x1);
        gbc.writeMem(0x36cd, { 0xe6 });
        gbc.writeMem(0xbe5e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x26c3, gbc.sp());
        EXPECT(0xbe60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe5e));
        EXPECT(0x56, gbc.readMem(0xbe5f));
        // CB 56 039D
        gbc.setState(0x7587, 0xd80e, 0x240, 0x3c47, 0xc8f5, 0xeb64, 0x0, 0x1);
        gbc.writeMem(0x7587, { 0xcb, 0x56 });
        gbc.writeMem(0xeb64, { 0x2b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd80e, gbc.sp());
        EXPECT(0x7589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xeb64));
        // CB 56 039E
        gbc.setState(0xcdab, 0xe8b8, 0xd6c0, 0x182f, 0x47cc, 0x944, 0x0, 0x1);
        gbc.writeMem(0x944, { 0x2f });
        gbc.writeMem(0xcdab, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe8b8, gbc.sp());
        EXPECT(0xcdad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdab));
        EXPECT(0x56, gbc.readMem(0xcdac));
        // CB 56 039F
        gbc.setState(0xd0bd, 0xf274, 0xbcb0, 0x79e4, 0x2292, 0x3f2, 0x0, 0x0);
        gbc.writeMem(0x3f2, { 0x77 });
        gbc.writeMem(0xd0bd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf274, gbc.sp());
        EXPECT(0xd0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0bd));
        EXPECT(0x56, gbc.readMem(0xd0be));
        // CB 56 03A0
        gbc.setState(0x2ce8, 0xaf82, 0x8450, 0x1d0e, 0x690c, 0xa0da, 0x1, 0x0);
        gbc.writeMem(0x2ce8, { 0xcb, 0x56 });
        gbc.writeMem(0xa0da, { 0xaa });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xaf82, gbc.sp());
        EXPECT(0x2cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa0da));
        // CB 56 03A1
        gbc.setState(0x2b81, 0x2d3a, 0xe230, 0xcb30, 0xd4d8, 0x3e8b, 0x0, 0x0);
        gbc.writeMem(0x2b81, { 0xcb, 0x56 });
        gbc.writeMem(0x3e8b, { 0x55 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2d3a, gbc.sp());
        EXPECT(0x2b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 03A2
        gbc.setState(0xe05f, 0xd501, 0x4a90, 0x531f, 0x4739, 0xa1dc, 0x0, 0x1);
        gbc.writeMem(0xa1dc, { 0xb5 });
        gbc.writeMem(0xe05f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd501, gbc.sp());
        EXPECT(0xe061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa1dc));
        EXPECT(0xcb, gbc.readMem(0xe05f));
        EXPECT(0x56, gbc.readMem(0xe060));
        // CB 56 03A3
        gbc.setState(0xc1f3, 0x917a, 0xc4e0, 0x7659, 0xddd2, 0xc23, 0x0, 0x0);
        gbc.writeMem(0xc23, { 0xab });
        gbc.writeMem(0xc1f3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x917a, gbc.sp());
        EXPECT(0xc1f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f3));
        EXPECT(0x56, gbc.readMem(0xc1f4));
        // CB 56 03A5
        gbc.setState(0x51ba, 0x1492, 0x4ab0, 0xc31f, 0xbd74, 0x6e66, 0x0, 0x1);
        gbc.writeMem(0x51ba, { 0xcb, 0x56 });
        gbc.writeMem(0x6e66, { 0x25 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1492, gbc.sp());
        EXPECT(0x51bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 03A6
        gbc.setState(0x4c4e, 0xcacc, 0xdee0, 0x6e5, 0x2670, 0xa78d, 0x1, 0x1);
        gbc.writeMem(0x4c4e, { 0xcb, 0x56 });
        gbc.writeMem(0xa78d, { 0x70 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcacc, gbc.sp());
        EXPECT(0x4c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xa78d));
        // CB 56 03A7
        gbc.setState(0x5a1, 0x9340, 0x50, 0x49f9, 0x79e4, 0x66a, 0x1, 0x1);
        gbc.writeMem(0x5a1, { 0xcb, 0x56 });
        gbc.writeMem(0x66a, { 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9340, gbc.sp());
        EXPECT(0x5a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 03A8
        gbc.setState(0xc07e, 0x8d6a, 0xe4b0, 0xce08, 0x3afe, 0xde2e, 0x1, 0x1);
        gbc.writeMem(0xc07e, { 0xcb, 0x56 });
        gbc.writeMem(0xde2e, { 0xf4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8d6a, gbc.sp());
        EXPECT(0xc080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07e));
        EXPECT(0x56, gbc.readMem(0xc07f));
        EXPECT(0xf4, gbc.readMem(0xde2e));
        // CB 56 03A9
        gbc.setState(0x8a87, 0x94c3, 0x7930, 0xc826, 0xe5d3, 0xf0ee, 0x1, 0x1);
        gbc.writeMem(0x8a87, { 0xcb, 0x56 });
        gbc.writeMem(0xf0ee, { 0xde });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x94c3, gbc.sp());
        EXPECT(0x8a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a87));
        EXPECT(0x56, gbc.readMem(0x8a88));
        EXPECT(0xde, gbc.readMem(0xf0ee));
        // CB 56 03AA
        gbc.setState(0x3199, 0xac0, 0xdf10, 0x315, 0x9e98, 0xcb5a, 0x0, 0x1);
        gbc.writeMem(0x3199, { 0xcb, 0x56 });
        gbc.writeMem(0xcb5a, { 0x21 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xac0, gbc.sp());
        EXPECT(0x319b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcb5a));
        // CB 56 03AB
        gbc.setState(0xdb42, 0xb875, 0x6f60, 0xeeee, 0xc253, 0x593, 0x1, 0x0);
        gbc.writeMem(0x593, { 0x3d });
        gbc.writeMem(0xdb42, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb875, gbc.sp());
        EXPECT(0xdb44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb42));
        EXPECT(0x56, gbc.readMem(0xdb43));
        // CB 56 03AC
        gbc.setState(0xdc7f, 0xc64d, 0xe0c0, 0x145f, 0xf9b2, 0x6d74, 0x1, 0x1);
        gbc.writeMem(0x6d74, { 0x19 });
        gbc.writeMem(0xdc7f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc64d, gbc.sp());
        EXPECT(0xdc81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7f));
        EXPECT(0x56, gbc.readMem(0xdc80));
        // CB 56 03AD
        gbc.setState(0x4e1d, 0xeb2d, 0x9b50, 0x510d, 0x4627, 0x3b49, 0x0, 0x1);
        gbc.writeMem(0x3b49, { 0x72 });
        gbc.writeMem(0x4e1d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xeb2d, gbc.sp());
        EXPECT(0x4e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 03AE
        gbc.setState(0x317d, 0x8a25, 0xc230, 0x4858, 0x32fb, 0x87c0, 0x1, 0x0);
        gbc.writeMem(0x317d, { 0xcb, 0x56 });
        gbc.writeMem(0x87c0, { 0xd4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8a25, gbc.sp());
        EXPECT(0x317f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x87c0));
        // CB 56 03AF
        gbc.setState(0x8efa, 0x3647, 0x8fc0, 0xa7b9, 0xff7c, 0x8ab0, 0x0, 0x0);
        gbc.writeMem(0x8ab0, { 0x50 });
        gbc.writeMem(0x8efa, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3647, gbc.sp());
        EXPECT(0x8efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8ab0));
        EXPECT(0xcb, gbc.readMem(0x8efa));
        EXPECT(0x56, gbc.readMem(0x8efb));
        // CB 56 03B0
        gbc.setState(0xe768, 0x3d79, 0xfb20, 0xfa6b, 0x2ad9, 0xf166, 0x0, 0x0);
        gbc.writeMem(0xe768, { 0xcb, 0x56 });
        gbc.writeMem(0xf166, { 0x8b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3d79, gbc.sp());
        EXPECT(0xe76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe768));
        EXPECT(0x56, gbc.readMem(0xe769));
        EXPECT(0x8b, gbc.readMem(0xf166));
        // CB 56 03B1
        gbc.setState(0xbfe6, 0xb811, 0x4b50, 0x725a, 0x55e, 0x3958, 0x0, 0x1);
        gbc.writeMem(0x3958, { 0x1d });
        gbc.writeMem(0xbfe6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb811, gbc.sp());
        EXPECT(0xbfe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe6));
        EXPECT(0x56, gbc.readMem(0xbfe7));
        // CB 56 03B2
        gbc.setState(0x82a2, 0x417f, 0xb1b0, 0xc87a, 0x62df, 0xb391, 0x0, 0x1);
        gbc.writeMem(0x82a2, { 0xcb, 0x56 });
        gbc.writeMem(0xb391, { 0x77 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x417f, gbc.sp());
        EXPECT(0x82a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a2));
        EXPECT(0x56, gbc.readMem(0x82a3));
        EXPECT(0x77, gbc.readMem(0xb391));
        // CB 56 03B3
        gbc.setState(0x91ad, 0x93fe, 0xca20, 0x9e70, 0x3b76, 0xc0e1, 0x1, 0x0);
        gbc.writeMem(0x91ad, { 0xcb, 0x56 });
        gbc.writeMem(0xc0e1, { 0x6a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x93fe, gbc.sp());
        EXPECT(0x91af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ad));
        EXPECT(0x56, gbc.readMem(0x91ae));
        EXPECT(0x6a, gbc.readMem(0xc0e1));
        // CB 56 03B5
        gbc.setState(0xe111, 0x903c, 0x1450, 0x64c2, 0xe41e, 0x29ef, 0x1, 0x0);
        gbc.writeMem(0x29ef, { 0xe4 });
        gbc.writeMem(0xe111, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x903c, gbc.sp());
        EXPECT(0xe113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe111));
        EXPECT(0x56, gbc.readMem(0xe112));
        // CB 56 03B6
        gbc.setState(0x5f2c, 0x3f91, 0xb0a0, 0xe838, 0x79f, 0x2395, 0x1, 0x0);
        gbc.writeMem(0x2395, { 0x6d });
        gbc.writeMem(0x5f2c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3f91, gbc.sp());
        EXPECT(0x5f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 03B8
        gbc.setState(0xbfdb, 0xe9f, 0x4810, 0x71c3, 0x610e, 0x92cf, 0x0, 0x0);
        gbc.writeMem(0x92cf, { 0x8b });
        gbc.writeMem(0xbfdb, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe9f, gbc.sp());
        EXPECT(0xbfdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x92cf));
        EXPECT(0xcb, gbc.readMem(0xbfdb));
        EXPECT(0x56, gbc.readMem(0xbfdc));
        // CB 56 03B9
        gbc.setState(0x2721, 0xf4ef, 0x1280, 0x4b29, 0xd09c, 0x6d06, 0x1, 0x0);
        gbc.writeMem(0x2721, { 0xcb, 0x56 });
        gbc.writeMem(0x6d06, { 0x15 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf4ef, gbc.sp());
        EXPECT(0x2723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 03BA
        gbc.setState(0xedb2, 0x9e15, 0xa10, 0x59f9, 0xf713, 0xbab0, 0x1, 0x1);
        gbc.writeMem(0xbab0, { 0x44 });
        gbc.writeMem(0xedb2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9e15, gbc.sp());
        EXPECT(0xedb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbab0));
        EXPECT(0xcb, gbc.readMem(0xedb2));
        EXPECT(0x56, gbc.readMem(0xedb3));
        // CB 56 03BB
        gbc.setState(0xeaec, 0xd47f, 0xd100, 0x6f6, 0x5d55, 0xb2a9, 0x1, 0x0);
        gbc.writeMem(0xb2a9, { 0x9f });
        gbc.writeMem(0xeaec, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd47f, gbc.sp());
        EXPECT(0xeaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb2a9));
        EXPECT(0xcb, gbc.readMem(0xeaec));
        EXPECT(0x56, gbc.readMem(0xeaed));
        // CB 56 03BC
        gbc.setState(0xe69a, 0x7965, 0xd910, 0xe56f, 0xdf8f, 0xbe17, 0x1, 0x1);
        gbc.writeMem(0xbe17, { 0x35 });
        gbc.writeMem(0xe69a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7965, gbc.sp());
        EXPECT(0xe69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xbe17));
        EXPECT(0xcb, gbc.readMem(0xe69a));
        EXPECT(0x56, gbc.readMem(0xe69b));
        // CB 56 03BD
        gbc.setState(0x3aec, 0x4127, 0xf610, 0xdca2, 0x5ecf, 0xaf78, 0x0, 0x0);
        gbc.writeMem(0x3aec, { 0xcb, 0x56 });
        gbc.writeMem(0xaf78, { 0x63 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4127, gbc.sp());
        EXPECT(0x3aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xaf78));
        // CB 56 03BE
        gbc.setState(0x9567, 0x2ac4, 0xe260, 0xd9a9, 0x2d4e, 0xcce1, 0x0, 0x0);
        gbc.writeMem(0x9567, { 0xcb, 0x56 });
        gbc.writeMem(0xcce1, { 0x70 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2ac4, gbc.sp());
        EXPECT(0x9569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9567));
        EXPECT(0x56, gbc.readMem(0x9568));
        EXPECT(0x70, gbc.readMem(0xcce1));
        // CB 56 03BF
        gbc.setState(0xda10, 0xb8f0, 0x7530, 0x4b82, 0x7c2c, 0xa672, 0x0, 0x1);
        gbc.writeMem(0xa672, { 0xa3 });
        gbc.writeMem(0xda10, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb8f0, gbc.sp());
        EXPECT(0xda12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa672));
        EXPECT(0xcb, gbc.readMem(0xda10));
        EXPECT(0x56, gbc.readMem(0xda11));
        // CB 56 03C0
        gbc.setState(0x2a4d, 0xea1f, 0x7970, 0xaefd, 0x9a2e, 0x878b, 0x0, 0x1);
        gbc.writeMem(0x2a4d, { 0xcb, 0x56 });
        gbc.writeMem(0x878b, { 0x40 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xea1f, gbc.sp());
        EXPECT(0x2a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x878b));
        // CB 56 03C2
        gbc.setState(0x4e21, 0x2864, 0x4d80, 0x5b79, 0xd25d, 0x4884, 0x1, 0x1);
        gbc.writeMem(0x4884, { 0x2d });
        gbc.writeMem(0x4e21, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2864, gbc.sp());
        EXPECT(0x4e23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 03C3
        gbc.setState(0xe3c9, 0xda44, 0x2a00, 0x160d, 0x7a6f, 0x35b1, 0x1, 0x1);
        gbc.writeMem(0x35b1, { 0x5d });
        gbc.writeMem(0xe3c9, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xda44, gbc.sp());
        EXPECT(0xe3cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c9));
        EXPECT(0x56, gbc.readMem(0xe3ca));
        // CB 56 03C4
        gbc.setState(0x80dc, 0x789a, 0xc590, 0x8648, 0x3929, 0xed00, 0x0, 0x1);
        gbc.writeMem(0x80dc, { 0xcb, 0x56 });
        gbc.writeMem(0xed00, { 0x23 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x789a, gbc.sp());
        EXPECT(0x80de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80dc));
        EXPECT(0x56, gbc.readMem(0x80dd));
        EXPECT(0x23, gbc.readMem(0xed00));
        // CB 56 03C5
        gbc.setState(0xc243, 0xd5d6, 0xf040, 0x92a5, 0x5086, 0x4927, 0x0, 0x1);
        gbc.writeMem(0x4927, { 0x72 });
        gbc.writeMem(0xc243, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd5d6, gbc.sp());
        EXPECT(0xc245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc243));
        EXPECT(0x56, gbc.readMem(0xc244));
        // CB 56 03C6
        gbc.setState(0xe241, 0xa2cc, 0xd450, 0x4c85, 0x82d, 0x4b81, 0x0, 0x1);
        gbc.writeMem(0x4b81, { 0x75 });
        gbc.writeMem(0xe241, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa2cc, gbc.sp());
        EXPECT(0xe243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe241));
        EXPECT(0x56, gbc.readMem(0xe242));
        // CB 56 03C7
        gbc.setState(0x4e1a, 0x2685, 0xbd30, 0xa55e, 0x2349, 0xbf6b, 0x1, 0x1);
        gbc.writeMem(0x4e1a, { 0xcb, 0x56 });
        gbc.writeMem(0xbf6b, { 0xab });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2685, gbc.sp());
        EXPECT(0x4e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xbf6b));
        // CB 56 03C8
        gbc.setState(0x67b1, 0x9e84, 0x7520, 0xc655, 0x5983, 0xda66, 0x0, 0x0);
        gbc.writeMem(0x67b1, { 0xcb, 0x56 });
        gbc.writeMem(0xda66, { 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9e84, gbc.sp());
        EXPECT(0x67b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xda66));
        // CB 56 03C9
        gbc.setState(0x3b39, 0x2337, 0x58a0, 0xc698, 0xf0f1, 0x516c, 0x0, 0x0);
        gbc.writeMem(0x3b39, { 0xcb, 0x56 });
        gbc.writeMem(0x516c, { 0xfc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2337, gbc.sp());
        EXPECT(0x3b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 03CA
        gbc.setState(0xec26, 0x94ae, 0xc730, 0x5578, 0x25df, 0xf647, 0x0, 0x1);
        gbc.writeMem(0xec26, { 0xcb, 0x56 });
        gbc.writeMem(0xf647, { 0xb2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x94ae, gbc.sp());
        EXPECT(0xec28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec26));
        EXPECT(0x56, gbc.readMem(0xec27));
        EXPECT(0xb2, gbc.readMem(0xf647));
        // CB 56 03CB
        gbc.setState(0x15cf, 0x2eb8, 0xbbb0, 0x2888, 0xc3e5, 0x8ba6, 0x1, 0x0);
        gbc.writeMem(0x15cf, { 0xcb, 0x56 });
        gbc.writeMem(0x8ba6, { 0xf9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2eb8, gbc.sp());
        EXPECT(0x15d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x8ba6));
        // CB 56 03CD
        gbc.setState(0x114b, 0x4d65, 0xd600, 0x8ba0, 0x1e29, 0x2b65, 0x1, 0x1);
        gbc.writeMem(0x114b, { 0xcb, 0x56 });
        gbc.writeMem(0x2b65, { 0x51 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4d65, gbc.sp());
        EXPECT(0x114d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 03CE
        gbc.setState(0x37b0, 0x61cc, 0x5930, 0xceb9, 0x4f7b, 0xa507, 0x1, 0x0);
        gbc.writeMem(0x37b0, { 0xcb, 0x56 });
        gbc.writeMem(0xa507, { 0xfc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x61cc, gbc.sp());
        EXPECT(0x37b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xa507));
        // CB 56 03CF
        gbc.setState(0x989, 0x5472, 0xf3d0, 0x5c27, 0x5592, 0xf286, 0x1, 0x0);
        gbc.writeMem(0x989, { 0xcb, 0x56 });
        gbc.writeMem(0xf286, { 0xd4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5472, gbc.sp());
        EXPECT(0x98b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xf286));
        // CB 56 03D0
        gbc.setState(0x23ba, 0xd172, 0xa7a0, 0xf382, 0x5e74, 0xb4ca, 0x0, 0x0);
        gbc.writeMem(0x23ba, { 0xcb, 0x56 });
        gbc.writeMem(0xb4ca, { 0x2a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd172, gbc.sp());
        EXPECT(0x23bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xb4ca));
        // CB 56 03D1
        gbc.setState(0x448a, 0x9708, 0xad70, 0x398c, 0xaf0a, 0xab40, 0x0, 0x0);
        gbc.writeMem(0x448a, { 0xcb, 0x56 });
        gbc.writeMem(0xab40, { 0x35 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9708, gbc.sp());
        EXPECT(0x448c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xab40));
        // CB 56 03D2
        gbc.setState(0x5096, 0x75a6, 0x780, 0xf6e4, 0x8ae0, 0x7fa1, 0x1, 0x0);
        gbc.writeMem(0x5096, { 0xcb, 0x56 });
        gbc.writeMem(0x7fa1, { 0x35 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x75a6, gbc.sp());
        EXPECT(0x5098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 03D3
        gbc.setState(0x64a2, 0xf3be, 0x2300, 0x1650, 0x8bcb, 0x64a2, 0x1, 0x0);
        gbc.writeMem(0x64a2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf3be, gbc.sp());
        EXPECT(0x64a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 03D4
        gbc.setState(0x880b, 0x9c0c, 0x51b0, 0x545a, 0x7de3, 0xfb3c, 0x0, 0x1);
        gbc.writeMem(0x880b, { 0xcb, 0x56 });
        gbc.writeMem(0xfb3c, { 0x15 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9c0c, gbc.sp());
        EXPECT(0x880d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x880b));
        EXPECT(0x56, gbc.readMem(0x880c));
        EXPECT(0x15, gbc.readMem(0xfb3c));
        // CB 56 03D5
        gbc.setState(0x6930, 0x73e2, 0x9d70, 0x5062, 0x3326, 0x5e52, 0x0, 0x1);
        gbc.writeMem(0x5e52, { 0x94 });
        gbc.writeMem(0x6930, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x73e2, gbc.sp());
        EXPECT(0x6932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 03D6
        gbc.setState(0x62f4, 0x83a2, 0x2080, 0xf6ef, 0x9b5, 0x377f, 0x1, 0x1);
        gbc.writeMem(0x377f, { 0xa0 });
        gbc.writeMem(0x62f4, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x83a2, gbc.sp());
        EXPECT(0x62f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 56 03D7
        gbc.setState(0xb6a9, 0xce7a, 0x6100, 0xcf4c, 0x1a17, 0xe8d5, 0x1, 0x0);
        gbc.writeMem(0xb6a9, { 0xcb, 0x56 });
        gbc.writeMem(0xe8d5, { 0x44 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xce7a, gbc.sp());
        EXPECT(0xb6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a9));
        EXPECT(0x56, gbc.readMem(0xb6aa));
        EXPECT(0x44, gbc.readMem(0xe8d5));
        // CB 56 03D8
        gbc.setState(0x7db, 0xe65, 0x64c0, 0xee98, 0xdb36, 0xf121, 0x0, 0x1);
        gbc.writeMem(0x7db, { 0xcb, 0x56 });
        gbc.writeMem(0xf121, { 0x97 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe65, gbc.sp());
        EXPECT(0x7dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xf121));
        // CB 56 03D9
        gbc.setState(0xd87c, 0xd4cb, 0xb100, 0xaf55, 0xcad0, 0x435a, 0x0, 0x1);
        gbc.writeMem(0x435a, { 0x87 });
        gbc.writeMem(0xd87c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd4cb, gbc.sp());
        EXPECT(0xd87e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87c));
        EXPECT(0x56, gbc.readMem(0xd87d));
        // CB 56 03DB
        gbc.setState(0x69c8, 0x4bf0, 0x56b0, 0x728a, 0xc73a, 0x4199, 0x0, 0x0);
        gbc.writeMem(0x4199, { 0xe });
        gbc.writeMem(0x69c8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4bf0, gbc.sp());
        EXPECT(0x69ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 56 03DC
        gbc.setState(0x26f5, 0xae8d, 0xbbe0, 0xec54, 0x16e, 0x8922, 0x0, 0x1);
        gbc.writeMem(0x26f5, { 0xcb, 0x56 });
        gbc.writeMem(0x8922, { 0x17 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xae8d, gbc.sp());
        EXPECT(0x26f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x8922));
        // CB 56 03DD
        gbc.setState(0x5a85, 0xc065, 0x1a70, 0x6b7b, 0x9815, 0x90b6, 0x1, 0x1);
        gbc.writeMem(0x5a85, { 0xcb, 0x56 });
        gbc.writeMem(0x90b6, { 0x40 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc065, gbc.sp());
        EXPECT(0x5a87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x90b6));
        // CB 56 03DE
        gbc.setState(0xda00, 0x3173, 0x2580, 0x8260, 0xf9df, 0x4e1a, 0x1, 0x0);
        gbc.writeMem(0x4e1a, { 0xe8 });
        gbc.writeMem(0xda00, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3173, gbc.sp());
        EXPECT(0xda02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda00));
        EXPECT(0x56, gbc.readMem(0xda01));
        // CB 56 03DF
        gbc.setState(0xb282, 0xd7f, 0x6d30, 0x234b, 0x9303, 0xabec, 0x0, 0x1);
        gbc.writeMem(0xabec, { 0x15 });
        gbc.writeMem(0xb282, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd7f, gbc.sp());
        EXPECT(0xb284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xabec));
        EXPECT(0xcb, gbc.readMem(0xb282));
        EXPECT(0x56, gbc.readMem(0xb283));
        // CB 56 03E0
        gbc.setState(0xd321, 0xcda4, 0x60f0, 0x7efe, 0x77c8, 0xa9b1, 0x1, 0x1);
        gbc.writeMem(0xa9b1, { 0xaf });
        gbc.writeMem(0xd321, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcda4, gbc.sp());
        EXPECT(0xd323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xa9b1));
        EXPECT(0xcb, gbc.readMem(0xd321));
        EXPECT(0x56, gbc.readMem(0xd322));
        // CB 56 03E1
        gbc.setState(0xa95e, 0x6a29, 0x5960, 0x13f7, 0x38af, 0x8452, 0x0, 0x0);
        gbc.writeMem(0x8452, { 0x6d });
        gbc.writeMem(0xa95e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6a29, gbc.sp());
        EXPECT(0xa960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8452));
        EXPECT(0xcb, gbc.readMem(0xa95e));
        EXPECT(0x56, gbc.readMem(0xa95f));
        // CB 56 03E2
        gbc.setState(0x123b, 0xa4f9, 0x8c90, 0x3a21, 0x5ce8, 0xbc43, 0x1, 0x0);
        gbc.writeMem(0x123b, { 0xcb, 0x56 });
        gbc.writeMem(0xbc43, { 0x4e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa4f9, gbc.sp());
        EXPECT(0x123d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbc43));
        // CB 56 03E3
        gbc.setState(0xef88, 0x49bb, 0xfe20, 0x98ce, 0x5cea, 0xbf8d, 0x1, 0x0);
        gbc.writeMem(0xbf8d, { 0xa7 });
        gbc.writeMem(0xef88, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x49bb, gbc.sp());
        EXPECT(0xef8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbf8d));
        EXPECT(0xcb, gbc.readMem(0xef88));
        EXPECT(0x56, gbc.readMem(0xef89));
        // CB 56 03E4
        gbc.setState(0x510c, 0xfb1f, 0xe640, 0x6c9d, 0x6edb, 0x8e71, 0x1, 0x0);
        gbc.writeMem(0x510c, { 0xcb, 0x56 });
        gbc.writeMem(0x8e71, { 0xcd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfb1f, gbc.sp());
        EXPECT(0x510e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x8e71));
        // CB 56 03E5
        gbc.setState(0xdd32, 0xb466, 0xb5f0, 0xaaa1, 0xc45d, 0xe34c, 0x1, 0x1);
        gbc.writeMem(0xdd32, { 0xcb, 0x56 });
        gbc.writeMem(0xe34c, { 0x3d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb466, gbc.sp());
        EXPECT(0xdd34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd32));
        EXPECT(0x56, gbc.readMem(0xdd33));
        EXPECT(0x3d, gbc.readMem(0xe34c));
        // CB 56 03E6
        gbc.setState(0xc07f, 0xbdf2, 0x8730, 0x5593, 0x973e, 0xf850, 0x1, 0x0);
        gbc.writeMem(0xc07f, { 0xcb, 0x56 });
        gbc.writeMem(0xf850, { 0x29 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbdf2, gbc.sp());
        EXPECT(0xc081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07f));
        EXPECT(0x56, gbc.readMem(0xc080));
        EXPECT(0x29, gbc.readMem(0xf850));
        // CB 56 03E7
        gbc.setState(0x8826, 0x1da6, 0x20f0, 0xeca3, 0xc87f, 0x5890, 0x1, 0x0);
        gbc.writeMem(0x5890, { 0x5f });
        gbc.writeMem(0x8826, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1da6, gbc.sp());
        EXPECT(0x8828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8826));
        EXPECT(0x56, gbc.readMem(0x8827));
    }
