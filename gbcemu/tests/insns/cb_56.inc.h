    TEST(gbcemu, opcode_cb_56) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 56 0000
        gbc.setState(0x206c, 0x23f9, 0xbe0, 0x923a, 0xec5, 0xd42a, 0x1, 0x1);
        gbc.writeMem(0x206c, { 0xcb, 0x56 });
        gbc.writeMem(0xd42a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x23f9);
        EXPECT(gbc.pc(), 0x206e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd42a), 0x97);
        // CB 56 0001
        gbc.setState(0x466a, 0x4031, 0x1af0, 0xb976, 0x8b44, 0x4fb4, 0x0, 0x1);
        gbc.writeMem(0x466a, { 0xcb, 0x56 });
        gbc.writeMem(0x4fb4, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4031);
        EXPECT(gbc.pc(), 0x466c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0003
        gbc.setState(0x59ac, 0x3f35, 0x9820, 0xde11, 0x5c73, 0x5213, 0x1, 0x0);
        gbc.writeMem(0x5213, { 0xd3 });
        gbc.writeMem(0x59ac, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3f35);
        EXPECT(gbc.pc(), 0x59ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0004
        gbc.setState(0x3913, 0x8c7f, 0x4ac0, 0x67fb, 0x685f, 0xadd4, 0x1, 0x1);
        gbc.writeMem(0x3913, { 0xcb, 0x56 });
        gbc.writeMem(0xadd4, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8c7f);
        EXPECT(gbc.pc(), 0x3915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadd4), 0x65);
        // CB 56 0005
        gbc.setState(0x11b6, 0xb788, 0x3970, 0xd186, 0x4e4d, 0xdf3f, 0x0, 0x1);
        gbc.writeMem(0x11b6, { 0xcb, 0x56 });
        gbc.writeMem(0xdf3f, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb788);
        EXPECT(gbc.pc(), 0x11b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf3f), 0xac);
        // CB 56 0006
        gbc.setState(0xd87a, 0x80bf, 0xc980, 0xdb1c, 0xe532, 0x4f9e, 0x0, 0x0);
        gbc.writeMem(0x4f9e, { 0x65 });
        gbc.writeMem(0xd87a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x80bf);
        EXPECT(gbc.pc(), 0xd87c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd87a), 0xcb);
        EXPECT(gbc.readMem(0xd87b), 0x56);
        // CB 56 0007
        gbc.setState(0x3945, 0xbcd8, 0x6250, 0x159, 0xd2df, 0xf4f4, 0x1, 0x0);
        gbc.writeMem(0x3945, { 0xcb, 0x56 });
        gbc.writeMem(0xf4f4, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbcd8);
        EXPECT(gbc.pc(), 0x3947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf4f4), 0x5b);
        // CB 56 0008
        gbc.setState(0xc007, 0x90bf, 0x3bd0, 0x8934, 0xa33, 0x48e6, 0x1, 0x0);
        gbc.writeMem(0x48e6, { 0x13 });
        gbc.writeMem(0xc007, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x90bf);
        EXPECT(gbc.pc(), 0xc009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc007), 0xcb);
        EXPECT(gbc.readMem(0xc008), 0x56);
        // CB 56 0009
        gbc.setState(0x71c2, 0x4dc1, 0xe670, 0x9936, 0xbb76, 0x90ab, 0x0, 0x1);
        gbc.writeMem(0x71c2, { 0xcb, 0x56 });
        gbc.writeMem(0x90ab, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4dc1);
        EXPECT(gbc.pc(), 0x71c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ab), 0x59);
        // CB 56 000A
        gbc.setState(0xc24a, 0x9c9, 0x8d20, 0xd15f, 0x7778, 0x2aca, 0x1, 0x1);
        gbc.writeMem(0x2aca, { 0xd5 });
        gbc.writeMem(0xc24a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9c9);
        EXPECT(gbc.pc(), 0xc24c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc24a), 0xcb);
        EXPECT(gbc.readMem(0xc24b), 0x56);
        // CB 56 000B
        gbc.setState(0x807c, 0xeacd, 0xbfd0, 0x6266, 0xa200, 0x4a91, 0x0, 0x1);
        gbc.writeMem(0x4a91, { 0x77 });
        gbc.writeMem(0x807c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xeacd);
        EXPECT(gbc.pc(), 0x807e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x807c), 0xcb);
        EXPECT(gbc.readMem(0x807d), 0x56);
        // CB 56 000C
        gbc.setState(0x301e, 0x2c01, 0x8860, 0xc517, 0xe48f, 0x88b5, 0x0, 0x1);
        gbc.writeMem(0x301e, { 0xcb, 0x56 });
        gbc.writeMem(0x88b5, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2c01);
        EXPECT(gbc.pc(), 0x3020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b5), 0x24);
        // CB 56 000D
        gbc.setState(0x5856, 0x734d, 0xb80, 0x8497, 0x4c83, 0xd7de, 0x0, 0x0);
        gbc.writeMem(0x5856, { 0xcb, 0x56 });
        gbc.writeMem(0xd7de, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x734d);
        EXPECT(gbc.pc(), 0x5858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7de), 0x6);
        // CB 56 000E
        gbc.setState(0xcd34, 0xb1fd, 0x6b20, 0x3340, 0xc4b3, 0x1ecd, 0x0, 0x0);
        gbc.writeMem(0x1ecd, { 0xd });
        gbc.writeMem(0xcd34, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb1fd);
        EXPECT(gbc.pc(), 0xcd36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd34), 0xcb);
        EXPECT(gbc.readMem(0xcd35), 0x56);
        // CB 56 000F
        gbc.setState(0x5eb0, 0x3bbc, 0xcd10, 0x591, 0xaaf0, 0x93e7, 0x0, 0x0);
        gbc.writeMem(0x5eb0, { 0xcb, 0x56 });
        gbc.writeMem(0x93e7, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3bbc);
        EXPECT(gbc.pc(), 0x5eb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e7), 0x11);
        // CB 56 0010
        gbc.setState(0x492c, 0xab37, 0x9a60, 0x4b9e, 0xeb2e, 0xf5f6, 0x1, 0x1);
        gbc.writeMem(0x492c, { 0xcb, 0x56 });
        gbc.writeMem(0xf5f6, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xab37);
        EXPECT(gbc.pc(), 0x492e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf5f6), 0x59);
        // CB 56 0011
        gbc.setState(0xce72, 0xde10, 0x7a20, 0x2eb9, 0x12c9, 0xec51, 0x0, 0x1);
        gbc.writeMem(0xce72, { 0xcb, 0x56 });
        gbc.writeMem(0xec51, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xde10);
        EXPECT(gbc.pc(), 0xce74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce72), 0xcb);
        EXPECT(gbc.readMem(0xce73), 0x56);
        EXPECT(gbc.readMem(0xec51), 0xd2);
        // CB 56 0012
        gbc.setState(0x55c7, 0xabc8, 0x3b80, 0x6f6, 0x6474, 0x6348, 0x0, 0x1);
        gbc.writeMem(0x55c7, { 0xcb, 0x56 });
        gbc.writeMem(0x6348, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xabc8);
        EXPECT(gbc.pc(), 0x55c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0013
        gbc.setState(0xc55a, 0x828, 0x5b70, 0xa810, 0xd8c1, 0x4dc, 0x0, 0x0);
        gbc.writeMem(0x4dc, { 0x68 });
        gbc.writeMem(0xc55a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x828);
        EXPECT(gbc.pc(), 0xc55c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc55a), 0xcb);
        EXPECT(gbc.readMem(0xc55b), 0x56);
        // CB 56 0014
        gbc.setState(0x5f, 0xa, 0xb910, 0xe03f, 0x58, 0x168e, 0x1, 0x1);
        gbc.writeMem(0x5f, { 0xcb, 0x56 });
        gbc.writeMem(0x168e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa);
        EXPECT(gbc.pc(), 0x61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0015
        gbc.setState(0x6afe, 0xa298, 0x9590, 0x2f5, 0x7cf, 0xb5a9, 0x1, 0x0);
        gbc.writeMem(0x6afe, { 0xcb, 0x56 });
        gbc.writeMem(0xb5a9, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa298);
        EXPECT(gbc.pc(), 0x6b00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5a9), 0x3e);
        // CB 56 0016
        gbc.setState(0x5f2c, 0x5c09, 0x1de0, 0xbe60, 0xc0fb, 0xda74, 0x0, 0x1);
        gbc.writeMem(0x5f2c, { 0xcb, 0x56 });
        gbc.writeMem(0xda74, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5c09);
        EXPECT(gbc.pc(), 0x5f2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda74), 0x2);
        // CB 56 0017
        gbc.setState(0x72ee, 0x6ff1, 0x83f0, 0x1d9d, 0x12fc, 0x40e4, 0x0, 0x1);
        gbc.writeMem(0x40e4, { 0x39 });
        gbc.writeMem(0x72ee, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6ff1);
        EXPECT(gbc.pc(), 0x72f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0018
        gbc.setState(0x73ff, 0x422b, 0xfb00, 0xdef1, 0xb58e, 0x2219, 0x0, 0x0);
        gbc.writeMem(0x2219, { 0x1e });
        gbc.writeMem(0x73ff, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x422b);
        EXPECT(gbc.pc(), 0x7401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0019
        gbc.setState(0xe643, 0xed6e, 0xd2d0, 0x241d, 0x514e, 0xf1ff, 0x1, 0x0);
        gbc.writeMem(0xe643, { 0xcb, 0x56 });
        gbc.writeMem(0xf1ff, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xed6e);
        EXPECT(gbc.pc(), 0xe645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe643), 0xcb);
        EXPECT(gbc.readMem(0xe644), 0x56);
        EXPECT(gbc.readMem(0xf1ff), 0x9a);
        // CB 56 001A
        gbc.setState(0x1ccb, 0x9803, 0xffd0, 0x47, 0xad3c, 0xf7f9, 0x1, 0x0);
        gbc.writeMem(0x1ccb, { 0xcb, 0x56 });
        gbc.writeMem(0xf7f9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9803);
        EXPECT(gbc.pc(), 0x1ccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf7f9), 0x99);
        // CB 56 001B
        gbc.setState(0x82db, 0x6c47, 0x9920, 0x943, 0xcfc7, 0xa18c, 0x1, 0x0);
        gbc.writeMem(0x82db, { 0xcb, 0x56 });
        gbc.writeMem(0xa18c, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x6c47);
        EXPECT(gbc.pc(), 0x82dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82db), 0xcb);
        EXPECT(gbc.readMem(0x82dc), 0x56);
        EXPECT(gbc.readMem(0xa18c), 0x68);
        // CB 56 001C
        gbc.setState(0x9fb8, 0xf1c5, 0xc4b0, 0x93f7, 0xc59c, 0xdedc, 0x0, 0x0);
        gbc.writeMem(0x9fb8, { 0xcb, 0x56 });
        gbc.writeMem(0xdedc, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf1c5);
        EXPECT(gbc.pc(), 0x9fba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fb8), 0xcb);
        EXPECT(gbc.readMem(0x9fb9), 0x56);
        EXPECT(gbc.readMem(0xdedc), 0x69);
        // CB 56 001D
        gbc.setState(0x83d8, 0x97dc, 0x6090, 0xd29c, 0xe499, 0xced6, 0x1, 0x1);
        gbc.writeMem(0x83d8, { 0xcb, 0x56 });
        gbc.writeMem(0xced6, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x97dc);
        EXPECT(gbc.pc(), 0x83da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83d8), 0xcb);
        EXPECT(gbc.readMem(0x83d9), 0x56);
        EXPECT(gbc.readMem(0xced6), 0x2e);
        // CB 56 001E
        gbc.setState(0xb7f7, 0x9e5f, 0xdf20, 0x5b04, 0x1d96, 0x909f, 0x0, 0x0);
        gbc.writeMem(0x909f, { 0x36 });
        gbc.writeMem(0xb7f7, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9e5f);
        EXPECT(gbc.pc(), 0xb7f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909f), 0x36);
        EXPECT(gbc.readMem(0xb7f7), 0xcb);
        EXPECT(gbc.readMem(0xb7f8), 0x56);
        // CB 56 001F
        gbc.setState(0xe078, 0xc1fc, 0x82b0, 0xbd1b, 0x29e3, 0xeca8, 0x1, 0x0);
        gbc.writeMem(0xe078, { 0xcb, 0x56 });
        gbc.writeMem(0xeca8, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc1fc);
        EXPECT(gbc.pc(), 0xe07a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe078), 0xcb);
        EXPECT(gbc.readMem(0xe079), 0x56);
        EXPECT(gbc.readMem(0xeca8), 0xf4);
        // CB 56 0020
        gbc.setState(0xd3db, 0xabb6, 0xd2c0, 0x9e58, 0x4eb1, 0xcb26, 0x1, 0x1);
        gbc.writeMem(0xcb26, { 0xac });
        gbc.writeMem(0xd3db, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xabb6);
        EXPECT(gbc.pc(), 0xd3dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb26), 0xac);
        EXPECT(gbc.readMem(0xd3db), 0xcb);
        EXPECT(gbc.readMem(0xd3dc), 0x56);
        // CB 56 0021
        gbc.setState(0x566d, 0xfe71, 0xfdd0, 0xdbdf, 0xf84c, 0x7c6b, 0x0, 0x0);
        gbc.writeMem(0x566d, { 0xcb, 0x56 });
        gbc.writeMem(0x7c6b, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfe71);
        EXPECT(gbc.pc(), 0x566f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0022
        gbc.setState(0x72bd, 0x785a, 0x90d0, 0x37a7, 0xc004, 0x6588, 0x0, 0x1);
        gbc.writeMem(0x6588, { 0x67 });
        gbc.writeMem(0x72bd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x785a);
        EXPECT(gbc.pc(), 0x72bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0024
        gbc.setState(0xa297, 0x36b0, 0x2440, 0x6db9, 0xaefc, 0x87a1, 0x1, 0x1);
        gbc.writeMem(0x87a1, { 0xd });
        gbc.writeMem(0xa297, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x36b0);
        EXPECT(gbc.pc(), 0xa299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a1), 0xd);
        EXPECT(gbc.readMem(0xa297), 0xcb);
        EXPECT(gbc.readMem(0xa298), 0x56);
        // CB 56 0025
        gbc.setState(0x7cc5, 0x1239, 0xcf00, 0xdcd0, 0x50ac, 0x18c6, 0x0, 0x1);
        gbc.writeMem(0x18c6, { 0xe1 });
        gbc.writeMem(0x7cc5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1239);
        EXPECT(gbc.pc(), 0x7cc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0026
        gbc.setState(0x85d1, 0xc327, 0x8890, 0xeeb5, 0x8752, 0x9dbf, 0x1, 0x1);
        gbc.writeMem(0x85d1, { 0xcb, 0x56 });
        gbc.writeMem(0x9dbf, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc327);
        EXPECT(gbc.pc(), 0x85d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d1), 0xcb);
        EXPECT(gbc.readMem(0x85d2), 0x56);
        EXPECT(gbc.readMem(0x9dbf), 0xe9);
        // CB 56 0027
        gbc.setState(0x842d, 0xf953, 0x4d70, 0xb918, 0xb9fc, 0xbb00, 0x0, 0x1);
        gbc.writeMem(0x842d, { 0xcb, 0x56 });
        gbc.writeMem(0xbb00, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf953);
        EXPECT(gbc.pc(), 0x842f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x842d), 0xcb);
        EXPECT(gbc.readMem(0x842e), 0x56);
        EXPECT(gbc.readMem(0xbb00), 0x30);
        // CB 56 0028
        gbc.setState(0x1358, 0xabd2, 0x8de0, 0xc0f4, 0xa6f8, 0x1b6f, 0x1, 0x1);
        gbc.writeMem(0x1358, { 0xcb, 0x56 });
        gbc.writeMem(0x1b6f, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xabd2);
        EXPECT(gbc.pc(), 0x135a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0029
        gbc.setState(0xbf3c, 0x79fa, 0x13a0, 0x1039, 0x7c53, 0x4d94, 0x0, 0x1);
        gbc.writeMem(0x4d94, { 0x88 });
        gbc.writeMem(0xbf3c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x79fa);
        EXPECT(gbc.pc(), 0xbf3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf3c), 0xcb);
        EXPECT(gbc.readMem(0xbf3d), 0x56);
        // CB 56 002A
        gbc.setState(0x6254, 0x9d63, 0xbda0, 0x5a, 0x702c, 0xdfac, 0x1, 0x1);
        gbc.writeMem(0x6254, { 0xcb, 0x56 });
        gbc.writeMem(0xdfac, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9d63);
        EXPECT(gbc.pc(), 0x6256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfac), 0x87);
        // CB 56 002B
        gbc.setState(0xe611, 0x1b2b, 0xa230, 0x78fe, 0xfc22, 0xc8f6, 0x0, 0x0);
        gbc.writeMem(0xc8f6, { 0x52 });
        gbc.writeMem(0xe611, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1b2b);
        EXPECT(gbc.pc(), 0xe613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f6), 0x52);
        EXPECT(gbc.readMem(0xe611), 0xcb);
        EXPECT(gbc.readMem(0xe612), 0x56);
        // CB 56 002C
        gbc.setState(0x5a75, 0xfcb3, 0x6dc0, 0x760, 0x2767, 0xa02f, 0x1, 0x0);
        gbc.writeMem(0x5a75, { 0xcb, 0x56 });
        gbc.writeMem(0xa02f, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfcb3);
        EXPECT(gbc.pc(), 0x5a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02f), 0x44);
        // CB 56 002D
        gbc.setState(0xaa2d, 0xe3e3, 0xfe20, 0x4f0c, 0x857d, 0x5919, 0x1, 0x1);
        gbc.writeMem(0x5919, { 0xc8 });
        gbc.writeMem(0xaa2d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe3e3);
        EXPECT(gbc.pc(), 0xaa2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa2d), 0xcb);
        EXPECT(gbc.readMem(0xaa2e), 0x56);
        // CB 56 002E
        gbc.setState(0x51a9, 0x738a, 0x5400, 0xcf62, 0x3c81, 0x9b70, 0x0, 0x1);
        gbc.writeMem(0x51a9, { 0xcb, 0x56 });
        gbc.writeMem(0x9b70, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x738a);
        EXPECT(gbc.pc(), 0x51ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b70), 0xe);
        // CB 56 002F
        gbc.setState(0xd0bd, 0xb877, 0xa620, 0xaba1, 0xaa61, 0x5818, 0x0, 0x1);
        gbc.writeMem(0x5818, { 0x19 });
        gbc.writeMem(0xd0bd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb877);
        EXPECT(gbc.pc(), 0xd0bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0bd), 0xcb);
        EXPECT(gbc.readMem(0xd0be), 0x56);
        // CB 56 0030
        gbc.setState(0xecdd, 0x8b6d, 0xa710, 0xb8af, 0x96a6, 0xa830, 0x0, 0x0);
        gbc.writeMem(0xa830, { 0xa7 });
        gbc.writeMem(0xecdd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8b6d);
        EXPECT(gbc.pc(), 0xecdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa830), 0xa7);
        EXPECT(gbc.readMem(0xecdd), 0xcb);
        EXPECT(gbc.readMem(0xecde), 0x56);
        // CB 56 0031
        gbc.setState(0x10fe, 0xe435, 0xc9e0, 0x56cd, 0x2c80, 0xc7cd, 0x1, 0x0);
        gbc.writeMem(0x10fe, { 0xcb, 0x56 });
        gbc.writeMem(0xc7cd, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe435);
        EXPECT(gbc.pc(), 0x1100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7cd), 0x2c);
        // CB 56 0032
        gbc.setState(0x8bae, 0xbdbd, 0x17a0, 0x7fd8, 0xbf90, 0x6039, 0x0, 0x1);
        gbc.writeMem(0x6039, { 0xc8 });
        gbc.writeMem(0x8bae, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xbdbd);
        EXPECT(gbc.pc(), 0x8bb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bae), 0xcb);
        EXPECT(gbc.readMem(0x8baf), 0x56);
        // CB 56 0034
        gbc.setState(0x7a9c, 0xb674, 0xcb10, 0xe650, 0xd19c, 0xa211, 0x0, 0x0);
        gbc.writeMem(0x7a9c, { 0xcb, 0x56 });
        gbc.writeMem(0xa211, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb674);
        EXPECT(gbc.pc(), 0x7a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa211), 0x9e);
        // CB 56 0035
        gbc.setState(0x59bb, 0xe305, 0x8070, 0x243c, 0xeadb, 0x6f7f, 0x1, 0x1);
        gbc.writeMem(0x59bb, { 0xcb, 0x56 });
        gbc.writeMem(0x6f7f, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe305);
        EXPECT(gbc.pc(), 0x59bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0036
        gbc.setState(0xbff7, 0x5cc, 0xb3a0, 0x91c7, 0x35b2, 0xe0e0, 0x1, 0x1);
        gbc.writeMem(0xbff7, { 0xcb, 0x56 });
        gbc.writeMem(0xe0e0, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5cc);
        EXPECT(gbc.pc(), 0xbff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff7), 0xcb);
        EXPECT(gbc.readMem(0xbff8), 0x56);
        EXPECT(gbc.readMem(0xe0e0), 0xa4);
        // CB 56 0037
        gbc.setState(0x4caf, 0xe010, 0xe960, 0xf680, 0x8cbf, 0x76de, 0x0, 0x1);
        gbc.writeMem(0x4caf, { 0xcb, 0x56 });
        gbc.writeMem(0x76de, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe010);
        EXPECT(gbc.pc(), 0x4cb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0038
        gbc.setState(0x9a54, 0xd1c5, 0x2ca0, 0x1ce7, 0xee3b, 0xb5c9, 0x0, 0x0);
        gbc.writeMem(0x9a54, { 0xcb, 0x56 });
        gbc.writeMem(0xb5c9, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd1c5);
        EXPECT(gbc.pc(), 0x9a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a54), 0xcb);
        EXPECT(gbc.readMem(0x9a55), 0x56);
        EXPECT(gbc.readMem(0xb5c9), 0xf0);
        // CB 56 0039
        gbc.setState(0x6b00, 0x321, 0x40f0, 0xd323, 0x71b8, 0xa14, 0x1, 0x0);
        gbc.writeMem(0xa14, { 0x9a });
        gbc.writeMem(0x6b00, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x321);
        EXPECT(gbc.pc(), 0x6b02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 003B
        gbc.setState(0x22a2, 0xa273, 0xb410, 0x9acd, 0xbaf9, 0x63d7, 0x1, 0x0);
        gbc.writeMem(0x22a2, { 0xcb, 0x56 });
        gbc.writeMem(0x63d7, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa273);
        EXPECT(gbc.pc(), 0x22a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 003C
        gbc.setState(0x6239, 0xd9b2, 0xee50, 0xb727, 0x154b, 0xe43, 0x0, 0x1);
        gbc.writeMem(0xe43, { 0xa5 });
        gbc.writeMem(0x6239, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd9b2);
        EXPECT(gbc.pc(), 0x623b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 003D
        gbc.setState(0x85b2, 0xbbaa, 0xec0, 0xc428, 0x98f6, 0xa0d, 0x1, 0x0);
        gbc.writeMem(0xa0d, { 0x51 });
        gbc.writeMem(0x85b2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xbbaa);
        EXPECT(gbc.pc(), 0x85b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b2), 0xcb);
        EXPECT(gbc.readMem(0x85b3), 0x56);
        // CB 56 003E
        gbc.setState(0x6627, 0xf596, 0x2b70, 0x8b56, 0x92c1, 0xaa40, 0x0, 0x0);
        gbc.writeMem(0x6627, { 0xcb, 0x56 });
        gbc.writeMem(0xaa40, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf596);
        EXPECT(gbc.pc(), 0x6629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa40), 0x29);
        // CB 56 003F
        gbc.setState(0x65db, 0xcc68, 0x7b90, 0x693c, 0x92d0, 0xd738, 0x1, 0x0);
        gbc.writeMem(0x65db, { 0xcb, 0x56 });
        gbc.writeMem(0xd738, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcc68);
        EXPECT(gbc.pc(), 0x65dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd738), 0x51);
        // CB 56 0040
        gbc.setState(0x6d93, 0x7183, 0xff80, 0x441c, 0x25c0, 0x5c2a, 0x0, 0x1);
        gbc.writeMem(0x5c2a, { 0xcc });
        gbc.writeMem(0x6d93, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7183);
        EXPECT(gbc.pc(), 0x6d95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0042
        gbc.setState(0x7608, 0xd2a5, 0x3090, 0xb4dd, 0x60e7, 0x394e, 0x0, 0x0);
        gbc.writeMem(0x394e, { 0xfc });
        gbc.writeMem(0x7608, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd2a5);
        EXPECT(gbc.pc(), 0x760a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0043
        gbc.setState(0xc526, 0xea11, 0x8aa0, 0xf069, 0xb69d, 0xb495, 0x1, 0x1);
        gbc.writeMem(0xb495, { 0x8d });
        gbc.writeMem(0xc526, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xea11);
        EXPECT(gbc.pc(), 0xc528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb495), 0x8d);
        EXPECT(gbc.readMem(0xc526), 0xcb);
        EXPECT(gbc.readMem(0xc527), 0x56);
        // CB 56 0044
        gbc.setState(0x7a46, 0xdbc7, 0xc2e0, 0xefce, 0x6730, 0xf84c, 0x1, 0x1);
        gbc.writeMem(0x7a46, { 0xcb, 0x56 });
        gbc.writeMem(0xf84c, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdbc7);
        EXPECT(gbc.pc(), 0x7a48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf84c), 0x7a);
        // CB 56 0045
        gbc.setState(0x50e1, 0x575c, 0xe080, 0x5d41, 0x3168, 0xec79, 0x1, 0x1);
        gbc.writeMem(0x50e1, { 0xcb, 0x56 });
        gbc.writeMem(0xec79, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x575c);
        EXPECT(gbc.pc(), 0x50e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec79), 0x62);
        // CB 56 0046
        gbc.setState(0xa387, 0xc65d, 0x2cd0, 0xa082, 0xeffe, 0x1567, 0x1, 0x0);
        gbc.writeMem(0x1567, { 0x7 });
        gbc.writeMem(0xa387, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc65d);
        EXPECT(gbc.pc(), 0xa389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa387), 0xcb);
        EXPECT(gbc.readMem(0xa388), 0x56);
        // CB 56 0047
        gbc.setState(0x47cc, 0xc712, 0x7480, 0x44b6, 0xecc3, 0xbd7c, 0x1, 0x0);
        gbc.writeMem(0x47cc, { 0xcb, 0x56 });
        gbc.writeMem(0xbd7c, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc712);
        EXPECT(gbc.pc(), 0x47ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7c), 0x11);
        // CB 56 0048
        gbc.setState(0xe285, 0xeeac, 0x3680, 0x44bc, 0x3668, 0x5b5f, 0x0, 0x1);
        gbc.writeMem(0x5b5f, { 0xd0 });
        gbc.writeMem(0xe285, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xeeac);
        EXPECT(gbc.pc(), 0xe287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe285), 0xcb);
        EXPECT(gbc.readMem(0xe286), 0x56);
        // CB 56 0049
        gbc.setState(0x465b, 0x2308, 0x24a0, 0x121b, 0x7828, 0x2dbb, 0x1, 0x0);
        gbc.writeMem(0x2dbb, { 0x7b });
        gbc.writeMem(0x465b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2308);
        EXPECT(gbc.pc(), 0x465d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 004A
        gbc.setState(0x66ca, 0x3d7d, 0xa3e0, 0xd665, 0x6728, 0x3a0a, 0x0, 0x1);
        gbc.writeMem(0x3a0a, { 0x5e });
        gbc.writeMem(0x66ca, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3d7d);
        EXPECT(gbc.pc(), 0x66cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 004B
        gbc.setState(0x98b, 0xb67, 0x4c90, 0x5296, 0x18e4, 0x675e, 0x0, 0x0);
        gbc.writeMem(0x98b, { 0xcb, 0x56 });
        gbc.writeMem(0x675e, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb67);
        EXPECT(gbc.pc(), 0x98d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 004C
        gbc.setState(0x4dbe, 0x4857, 0x4f30, 0xbde8, 0x5a09, 0x978b, 0x0, 0x1);
        gbc.writeMem(0x4dbe, { 0xcb, 0x56 });
        gbc.writeMem(0x978b, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4857);
        EXPECT(gbc.pc(), 0x4dc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x978b), 0x11);
        // CB 56 004D
        gbc.setState(0xc1e5, 0xdb64, 0x72e0, 0x44b, 0xa18e, 0xe771, 0x0, 0x1);
        gbc.writeMem(0xc1e5, { 0xcb, 0x56 });
        gbc.writeMem(0xe771, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xdb64);
        EXPECT(gbc.pc(), 0xc1e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e5), 0xcb);
        EXPECT(gbc.readMem(0xc1e6), 0x56);
        EXPECT(gbc.readMem(0xe771), 0xb9);
        // CB 56 004E
        gbc.setState(0x613c, 0xe26b, 0x97b0, 0x6369, 0x7ad, 0x5be4, 0x0, 0x1);
        gbc.writeMem(0x5be4, { 0x17 });
        gbc.writeMem(0x613c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe26b);
        EXPECT(gbc.pc(), 0x613e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 004F
        gbc.setState(0x4fc8, 0x45c5, 0x2e90, 0x196b, 0x965a, 0x87f8, 0x1, 0x1);
        gbc.writeMem(0x4fc8, { 0xcb, 0x56 });
        gbc.writeMem(0x87f8, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x45c5);
        EXPECT(gbc.pc(), 0x4fca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87f8), 0x50);
        // CB 56 0050
        gbc.setState(0xd787, 0x72d4, 0x13b0, 0xa5dd, 0xa279, 0xf124, 0x1, 0x1);
        gbc.writeMem(0xd787, { 0xcb, 0x56 });
        gbc.writeMem(0xf124, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x72d4);
        EXPECT(gbc.pc(), 0xd789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd787), 0xcb);
        EXPECT(gbc.readMem(0xd788), 0x56);
        EXPECT(gbc.readMem(0xf124), 0x4c);
        // CB 56 0051
        gbc.setState(0x1c93, 0xaa49, 0xc4f0, 0xb6eb, 0xdb62, 0xeba5, 0x1, 0x0);
        gbc.writeMem(0x1c93, { 0xcb, 0x56 });
        gbc.writeMem(0xeba5, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xaa49);
        EXPECT(gbc.pc(), 0x1c95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba5), 0x2d);
        // CB 56 0052
        gbc.setState(0x18b0, 0x5955, 0x6b40, 0x1af8, 0xcb5, 0x7ad5, 0x0, 0x1);
        gbc.writeMem(0x18b0, { 0xcb, 0x56 });
        gbc.writeMem(0x7ad5, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5955);
        EXPECT(gbc.pc(), 0x18b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0053
        gbc.setState(0x18f0, 0x3032, 0x79f0, 0x3741, 0xf56b, 0xf370, 0x1, 0x1);
        gbc.writeMem(0x18f0, { 0xcb, 0x56 });
        gbc.writeMem(0xf370, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3032);
        EXPECT(gbc.pc(), 0x18f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf370), 0x4c);
        // CB 56 0054
        gbc.setState(0xb9e7, 0x2047, 0x7110, 0x4828, 0x223d, 0x43ab, 0x1, 0x0);
        gbc.writeMem(0x43ab, { 0xdb });
        gbc.writeMem(0xb9e7, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2047);
        EXPECT(gbc.pc(), 0xb9e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9e7), 0xcb);
        EXPECT(gbc.readMem(0xb9e8), 0x56);
        // CB 56 0055
        gbc.setState(0xed1a, 0xe74b, 0x9d00, 0xc375, 0x8194, 0xfd1f, 0x1, 0x0);
        gbc.writeMem(0xed1a, { 0xcb, 0x56 });
        gbc.writeMem(0xfd1f, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe74b);
        EXPECT(gbc.pc(), 0xed1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed1a), 0xcb);
        EXPECT(gbc.readMem(0xed1b), 0x56);
        EXPECT(gbc.readMem(0xfd1f), 0xf2);
        // CB 56 0056
        gbc.setState(0xbd47, 0xaedb, 0x1150, 0xfb7b, 0x337e, 0xbaf7, 0x0, 0x1);
        gbc.writeMem(0xbaf7, { 0xbf });
        gbc.writeMem(0xbd47, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xaedb);
        EXPECT(gbc.pc(), 0xbd49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaf7), 0xbf);
        EXPECT(gbc.readMem(0xbd47), 0xcb);
        EXPECT(gbc.readMem(0xbd48), 0x56);
        // CB 56 0057
        gbc.setState(0xb47, 0x27b8, 0x23f0, 0x7ab6, 0x8751, 0x3483, 0x1, 0x1);
        gbc.writeMem(0xb47, { 0xcb, 0x56 });
        gbc.writeMem(0x3483, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x27b8);
        EXPECT(gbc.pc(), 0xb49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0058
        gbc.setState(0x3acc, 0xc976, 0xea50, 0x4d57, 0xa8ca, 0xc9ad, 0x1, 0x0);
        gbc.writeMem(0x3acc, { 0xcb, 0x56 });
        gbc.writeMem(0xc9ad, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc976);
        EXPECT(gbc.pc(), 0x3ace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ad), 0x30);
        // CB 56 0059
        gbc.setState(0x97ed, 0xceac, 0x1d80, 0x6753, 0xf81e, 0x9db3, 0x1, 0x1);
        gbc.writeMem(0x97ed, { 0xcb, 0x56 });
        gbc.writeMem(0x9db3, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xceac);
        EXPECT(gbc.pc(), 0x97ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97ed), 0xcb);
        EXPECT(gbc.readMem(0x97ee), 0x56);
        EXPECT(gbc.readMem(0x9db3), 0x1d);
        // CB 56 005A
        gbc.setState(0xd02b, 0xb95a, 0xb2d0, 0x60b8, 0x2a96, 0x96ea, 0x0, 0x1);
        gbc.writeMem(0x96ea, { 0x27 });
        gbc.writeMem(0xd02b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb95a);
        EXPECT(gbc.pc(), 0xd02d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ea), 0x27);
        EXPECT(gbc.readMem(0xd02b), 0xcb);
        EXPECT(gbc.readMem(0xd02c), 0x56);
        // CB 56 005B
        gbc.setState(0x2442, 0xb4af, 0x6eb0, 0x7eb0, 0x36ed, 0x1989, 0x1, 0x1);
        gbc.writeMem(0x1989, { 0x39 });
        gbc.writeMem(0x2442, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb4af);
        EXPECT(gbc.pc(), 0x2444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 005C
        gbc.setState(0x5a29, 0x4f9a, 0x8320, 0xf112, 0x48f4, 0x1db0, 0x0, 0x1);
        gbc.writeMem(0x1db0, { 0xe6 });
        gbc.writeMem(0x5a29, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4f9a);
        EXPECT(gbc.pc(), 0x5a2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 005D
        gbc.setState(0xe84e, 0x4fbe, 0x69d0, 0xb597, 0x2bf7, 0xb8a, 0x0, 0x1);
        gbc.writeMem(0xb8a, { 0x5b });
        gbc.writeMem(0xe84e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4fbe);
        EXPECT(gbc.pc(), 0xe850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe84e), 0xcb);
        EXPECT(gbc.readMem(0xe84f), 0x56);
        // CB 56 005E
        gbc.setState(0x56f5, 0xe50d, 0x9e60, 0x5d5a, 0x6185, 0x3641, 0x0, 0x1);
        gbc.writeMem(0x3641, { 0xe6 });
        gbc.writeMem(0x56f5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe50d);
        EXPECT(gbc.pc(), 0x56f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 005F
        gbc.setState(0xdc51, 0xd245, 0x1f00, 0xbb87, 0x46a1, 0xe804, 0x0, 0x1);
        gbc.writeMem(0xdc51, { 0xcb, 0x56 });
        gbc.writeMem(0xe804, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd245);
        EXPECT(gbc.pc(), 0xdc53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc51), 0xcb);
        EXPECT(gbc.readMem(0xdc52), 0x56);
        EXPECT(gbc.readMem(0xe804), 0xc3);
        // CB 56 0060
        gbc.setState(0x90f4, 0x7a90, 0x1270, 0x354f, 0xd62a, 0xdda1, 0x0, 0x1);
        gbc.writeMem(0x90f4, { 0xcb, 0x56 });
        gbc.writeMem(0xdda1, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7a90);
        EXPECT(gbc.pc(), 0x90f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f4), 0xcb);
        EXPECT(gbc.readMem(0x90f5), 0x56);
        EXPECT(gbc.readMem(0xdda1), 0xa2);
        // CB 56 0061
        gbc.setState(0x3e5a, 0x598a, 0x9080, 0x205e, 0x1fcf, 0x3fc3, 0x0, 0x0);
        gbc.writeMem(0x3e5a, { 0xcb, 0x56 });
        gbc.writeMem(0x3fc3, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x598a);
        EXPECT(gbc.pc(), 0x3e5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0062
        gbc.setState(0x57d2, 0x446c, 0xc270, 0x9a02, 0xb4fd, 0x3939, 0x0, 0x1);
        gbc.writeMem(0x3939, { 0x38 });
        gbc.writeMem(0x57d2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x446c);
        EXPECT(gbc.pc(), 0x57d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0064
        gbc.setState(0x6957, 0xe500, 0x72e0, 0x7307, 0xfc48, 0xece8, 0x1, 0x1);
        gbc.writeMem(0x6957, { 0xcb, 0x56 });
        gbc.writeMem(0xece8, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe500);
        EXPECT(gbc.pc(), 0x6959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece8), 0x63);
        // CB 56 0065
        gbc.setState(0xd886, 0xb6d, 0x86e0, 0x1ef0, 0xcc65, 0x42fe, 0x0, 0x1);
        gbc.writeMem(0x42fe, { 0x5e });
        gbc.writeMem(0xd886, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb6d);
        EXPECT(gbc.pc(), 0xd888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd886), 0xcb);
        EXPECT(gbc.readMem(0xd887), 0x56);
        // CB 56 0066
        gbc.setState(0x5718, 0x694c, 0xa130, 0xe82a, 0x5471, 0x44ba, 0x0, 0x0);
        gbc.writeMem(0x44ba, { 0xa });
        gbc.writeMem(0x5718, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x694c);
        EXPECT(gbc.pc(), 0x571a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0067
        gbc.setState(0xb501, 0x149e, 0xebc0, 0x6c32, 0xace6, 0x4f77, 0x0, 0x1);
        gbc.writeMem(0x4f77, { 0x22 });
        gbc.writeMem(0xb501, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x149e);
        EXPECT(gbc.pc(), 0xb503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb501), 0xcb);
        EXPECT(gbc.readMem(0xb502), 0x56);
        // CB 56 0068
        gbc.setState(0x3058, 0xe09a, 0x5840, 0x3f90, 0xe51e, 0xb022, 0x1, 0x1);
        gbc.writeMem(0x3058, { 0xcb, 0x56 });
        gbc.writeMem(0xb022, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe09a);
        EXPECT(gbc.pc(), 0x305a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb022), 0xc4);
        // CB 56 0069
        gbc.setState(0x32c, 0x8816, 0x4900, 0xea33, 0x54c5, 0x8359, 0x0, 0x0);
        gbc.writeMem(0x32c, { 0xcb, 0x56 });
        gbc.writeMem(0x8359, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8816);
        EXPECT(gbc.pc(), 0x32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8359), 0x78);
        // CB 56 006A
        gbc.setState(0xb88e, 0x3c95, 0x44c0, 0x5e6c, 0xcc8e, 0x23ea, 0x1, 0x1);
        gbc.writeMem(0x23ea, { 0xa9 });
        gbc.writeMem(0xb88e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3c95);
        EXPECT(gbc.pc(), 0xb890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb88e), 0xcb);
        EXPECT(gbc.readMem(0xb88f), 0x56);
        // CB 56 006B
        gbc.setState(0x7595, 0xbac1, 0x9c10, 0x6876, 0x3e28, 0xd0d6, 0x0, 0x0);
        gbc.writeMem(0x7595, { 0xcb, 0x56 });
        gbc.writeMem(0xd0d6, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xbac1);
        EXPECT(gbc.pc(), 0x7597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d6), 0x2a);
        // CB 56 006C
        gbc.setState(0x2169, 0xb5e5, 0x1d40, 0x82b5, 0xe3be, 0x9f63, 0x1, 0x0);
        gbc.writeMem(0x2169, { 0xcb, 0x56 });
        gbc.writeMem(0x9f63, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb5e5);
        EXPECT(gbc.pc(), 0x216b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f63), 0x4d);
        // CB 56 006D
        gbc.setState(0x5dc5, 0xf352, 0x7560, 0x8902, 0x97d4, 0x4e7d, 0x0, 0x1);
        gbc.writeMem(0x4e7d, { 0x95 });
        gbc.writeMem(0x5dc5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf352);
        EXPECT(gbc.pc(), 0x5dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 006E
        gbc.setState(0x82e9, 0xe284, 0xdc60, 0x6e9d, 0xa4a7, 0x3387, 0x0, 0x1);
        gbc.writeMem(0x3387, { 0x55 });
        gbc.writeMem(0x82e9, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe284);
        EXPECT(gbc.pc(), 0x82eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e9), 0xcb);
        EXPECT(gbc.readMem(0x82ea), 0x56);
        // CB 56 006F
        gbc.setState(0x2dc, 0xb8e8, 0xa420, 0x1835, 0x339, 0x3c1b, 0x1, 0x1);
        gbc.writeMem(0x2dc, { 0xcb, 0x56 });
        gbc.writeMem(0x3c1b, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb8e8);
        EXPECT(gbc.pc(), 0x2de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0070
        gbc.setState(0x713b, 0xe555, 0xc40, 0x28, 0xdbcd, 0xb439, 0x0, 0x1);
        gbc.writeMem(0x713b, { 0xcb, 0x56 });
        gbc.writeMem(0xb439, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe555);
        EXPECT(gbc.pc(), 0x713d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb439), 0xc5);
        // CB 56 0071
        gbc.setState(0x6b0c, 0xc4f6, 0xaed0, 0xfb03, 0x733e, 0xa3c5, 0x0, 0x1);
        gbc.writeMem(0x6b0c, { 0xcb, 0x56 });
        gbc.writeMem(0xa3c5, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc4f6);
        EXPECT(gbc.pc(), 0x6b0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c5), 0x89);
        // CB 56 0074
        gbc.setState(0xd2f5, 0xbbc6, 0xfeb0, 0x9099, 0x9410, 0x337b, 0x0, 0x1);
        gbc.writeMem(0x337b, { 0x45 });
        gbc.writeMem(0xd2f5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xbbc6);
        EXPECT(gbc.pc(), 0xd2f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f5), 0xcb);
        EXPECT(gbc.readMem(0xd2f6), 0x56);
        // CB 56 0075
        gbc.setState(0x1782, 0xd79b, 0x2d50, 0x57d5, 0xe27a, 0x10e6, 0x0, 0x0);
        gbc.writeMem(0x10e6, { 0xb5 });
        gbc.writeMem(0x1782, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd79b);
        EXPECT(gbc.pc(), 0x1784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0076
        gbc.setState(0x51e, 0x5967, 0x8790, 0x8eb6, 0x226, 0x8704, 0x1, 0x1);
        gbc.writeMem(0x51e, { 0xcb, 0x56 });
        gbc.writeMem(0x8704, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5967);
        EXPECT(gbc.pc(), 0x520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8704), 0xf2);
        // CB 56 0077
        gbc.setState(0xb813, 0x92f8, 0x88f0, 0x1531, 0xefca, 0xe51d, 0x0, 0x1);
        gbc.writeMem(0xb813, { 0xcb, 0x56 });
        gbc.writeMem(0xe51d, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x92f8);
        EXPECT(gbc.pc(), 0xb815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb813), 0xcb);
        EXPECT(gbc.readMem(0xb814), 0x56);
        EXPECT(gbc.readMem(0xe51d), 0xb3);
        // CB 56 0078
        gbc.setState(0x6b4c, 0x1235, 0x18f0, 0x351c, 0x9495, 0x1cee, 0x0, 0x0);
        gbc.writeMem(0x1cee, { 0x72 });
        gbc.writeMem(0x6b4c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1235);
        EXPECT(gbc.pc(), 0x6b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0079
        gbc.setState(0x85b1, 0x532a, 0xeff0, 0x217e, 0x2543, 0xf9a8, 0x0, 0x1);
        gbc.writeMem(0x85b1, { 0xcb, 0x56 });
        gbc.writeMem(0xf9a8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x532a);
        EXPECT(gbc.pc(), 0x85b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85b1), 0xcb);
        EXPECT(gbc.readMem(0x85b2), 0x56);
        EXPECT(gbc.readMem(0xf9a8), 0x10);
        // CB 56 007A
        gbc.setState(0xc702, 0xa945, 0xc470, 0x9f9c, 0x308c, 0x4ea7, 0x0, 0x1);
        gbc.writeMem(0x4ea7, { 0xad });
        gbc.writeMem(0xc702, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa945);
        EXPECT(gbc.pc(), 0xc704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc702), 0xcb);
        EXPECT(gbc.readMem(0xc703), 0x56);
        // CB 56 007B
        gbc.setState(0x7106, 0xe7ed, 0x7940, 0x8d95, 0x64cc, 0xf2a7, 0x0, 0x1);
        gbc.writeMem(0x7106, { 0xcb, 0x56 });
        gbc.writeMem(0xf2a7, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe7ed);
        EXPECT(gbc.pc(), 0x7108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf2a7), 0x5);
        // CB 56 007C
        gbc.setState(0x1fd, 0xac2e, 0xf150, 0xcd62, 0x877e, 0xf380, 0x0, 0x0);
        gbc.writeMem(0x1fd, { 0xcb, 0x56 });
        gbc.writeMem(0xf380, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xac2e);
        EXPECT(gbc.pc(), 0x1ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf380), 0x73);
        // CB 56 007D
        gbc.setState(0x20f6, 0x4d1d, 0x2eb0, 0xd551, 0x3b8f, 0x104b, 0x1, 0x0);
        gbc.writeMem(0x104b, { 0xeb });
        gbc.writeMem(0x20f6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4d1d);
        EXPECT(gbc.pc(), 0x20f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 007E
        gbc.setState(0x26cb, 0x58da, 0xe330, 0x573d, 0xa432, 0x4676, 0x0, 0x0);
        gbc.writeMem(0x26cb, { 0xcb, 0x56 });
        gbc.writeMem(0x4676, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x58da);
        EXPECT(gbc.pc(), 0x26cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 007F
        gbc.setState(0x59aa, 0xbf1e, 0x5830, 0xcc35, 0x53c6, 0x5cd4, 0x1, 0x1);
        gbc.writeMem(0x59aa, { 0xcb, 0x56 });
        gbc.writeMem(0x5cd4, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbf1e);
        EXPECT(gbc.pc(), 0x59ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0080
        gbc.setState(0xaed1, 0x22bd, 0x71d0, 0x30c9, 0xe19, 0xb4d2, 0x1, 0x0);
        gbc.writeMem(0xaed1, { 0xcb, 0x56 });
        gbc.writeMem(0xb4d2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x22bd);
        EXPECT(gbc.pc(), 0xaed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed1), 0xcb);
        EXPECT(gbc.readMem(0xaed2), 0x56);
        EXPECT(gbc.readMem(0xb4d2), 0x95);
        // CB 56 0081
        gbc.setState(0xd633, 0x7ac, 0xaa90, 0x9042, 0x2a2c, 0x6f69, 0x0, 0x1);
        gbc.writeMem(0x6f69, { 0xd2 });
        gbc.writeMem(0xd633, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7ac);
        EXPECT(gbc.pc(), 0xd635);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd633), 0xcb);
        EXPECT(gbc.readMem(0xd634), 0x56);
        // CB 56 0082
        gbc.setState(0xa8ba, 0x17f8, 0x1700, 0xc16, 0x93fb, 0xa2a0, 0x0, 0x1);
        gbc.writeMem(0xa2a0, { 0x77 });
        gbc.writeMem(0xa8ba, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x17f8);
        EXPECT(gbc.pc(), 0xa8bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2a0), 0x77);
        EXPECT(gbc.readMem(0xa8ba), 0xcb);
        EXPECT(gbc.readMem(0xa8bb), 0x56);
        // CB 56 0083
        gbc.setState(0x2d8f, 0x8288, 0xbb10, 0x2704, 0xcaa8, 0x95eb, 0x0, 0x1);
        gbc.writeMem(0x2d8f, { 0xcb, 0x56 });
        gbc.writeMem(0x95eb, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8288);
        EXPECT(gbc.pc(), 0x2d91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95eb), 0x19);
        // CB 56 0084
        gbc.setState(0x8385, 0x2b16, 0xc8c0, 0xfb62, 0xf91e, 0x967f, 0x1, 0x1);
        gbc.writeMem(0x8385, { 0xcb, 0x56 });
        gbc.writeMem(0x967f, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2b16);
        EXPECT(gbc.pc(), 0x8387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8385), 0xcb);
        EXPECT(gbc.readMem(0x8386), 0x56);
        EXPECT(gbc.readMem(0x967f), 0x27);
        // CB 56 0085
        gbc.setState(0x44cc, 0x43ae, 0x7fc0, 0x77a9, 0xc831, 0xf33a, 0x1, 0x0);
        gbc.writeMem(0x44cc, { 0xcb, 0x56 });
        gbc.writeMem(0xf33a, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x43ae);
        EXPECT(gbc.pc(), 0x44ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf33a), 0xe4);
        // CB 56 0086
        gbc.setState(0x5966, 0x5aec, 0x9550, 0x67c3, 0x3ac, 0x8e54, 0x0, 0x1);
        gbc.writeMem(0x5966, { 0xcb, 0x56 });
        gbc.writeMem(0x8e54, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5aec);
        EXPECT(gbc.pc(), 0x5968);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e54), 0x4a);
        // CB 56 0087
        gbc.setState(0x85bb, 0x6c6c, 0xbb40, 0xf9ae, 0x1703, 0x1910, 0x1, 0x1);
        gbc.writeMem(0x1910, { 0x61 });
        gbc.writeMem(0x85bb, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6c6c);
        EXPECT(gbc.pc(), 0x85bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85bb), 0xcb);
        EXPECT(gbc.readMem(0x85bc), 0x56);
        // CB 56 0088
        gbc.setState(0x86fe, 0xdd86, 0x2cb0, 0xd8a1, 0xd8d2, 0xd71, 0x1, 0x1);
        gbc.writeMem(0xd71, { 0x93 });
        gbc.writeMem(0x86fe, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xdd86);
        EXPECT(gbc.pc(), 0x8700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86fe), 0xcb);
        EXPECT(gbc.readMem(0x86ff), 0x56);
        // CB 56 0089
        gbc.setState(0x10c9, 0x3680, 0xd90, 0x395f, 0x8616, 0xd87c, 0x0, 0x0);
        gbc.writeMem(0x10c9, { 0xcb, 0x56 });
        gbc.writeMem(0xd87c, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3680);
        EXPECT(gbc.pc(), 0x10cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd87c), 0x52);
        // CB 56 008A
        gbc.setState(0x52ac, 0xc11c, 0xa770, 0x7ceb, 0xcc4c, 0xb6bf, 0x0, 0x1);
        gbc.writeMem(0x52ac, { 0xcb, 0x56 });
        gbc.writeMem(0xb6bf, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc11c);
        EXPECT(gbc.pc(), 0x52ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6bf), 0x2d);
        // CB 56 008C
        gbc.setState(0x970e, 0xa48c, 0x8c00, 0x19d9, 0x31d1, 0x2e1b, 0x1, 0x1);
        gbc.writeMem(0x2e1b, { 0x4b });
        gbc.writeMem(0x970e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa48c);
        EXPECT(gbc.pc(), 0x9710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x970e), 0xcb);
        EXPECT(gbc.readMem(0x970f), 0x56);
        // CB 56 008D
        gbc.setState(0x78de, 0xb8dc, 0x41b0, 0x7cc7, 0xc48c, 0xfe27, 0x1, 0x0);
        gbc.writeMem(0x78de, { 0xcb, 0x56 });
        gbc.writeMem(0xfe27, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb8dc);
        EXPECT(gbc.pc(), 0x78e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe27), 0x9);
        // CB 56 008E
        gbc.setState(0x4dd0, 0x314a, 0xbd20, 0x11f6, 0x6d91, 0xbb61, 0x1, 0x1);
        gbc.writeMem(0x4dd0, { 0xcb, 0x56 });
        gbc.writeMem(0xbb61, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x314a);
        EXPECT(gbc.pc(), 0x4dd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb61), 0x9e);
        // CB 56 008F
        gbc.setState(0x9c51, 0x408c, 0x5d10, 0x70c5, 0xfece, 0xe338, 0x1, 0x0);
        gbc.writeMem(0x9c51, { 0xcb, 0x56 });
        gbc.writeMem(0xe338, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x408c);
        EXPECT(gbc.pc(), 0x9c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c51), 0xcb);
        EXPECT(gbc.readMem(0x9c52), 0x56);
        EXPECT(gbc.readMem(0xe338), 0xd1);
        // CB 56 0090
        gbc.setState(0x83a5, 0xdab5, 0x6480, 0x1bbb, 0x2ace, 0xc9b1, 0x0, 0x1);
        gbc.writeMem(0x83a5, { 0xcb, 0x56 });
        gbc.writeMem(0xc9b1, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdab5);
        EXPECT(gbc.pc(), 0x83a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a5), 0xcb);
        EXPECT(gbc.readMem(0x83a6), 0x56);
        EXPECT(gbc.readMem(0xc9b1), 0xf2);
        // CB 56 0091
        gbc.setState(0xef7a, 0xe359, 0x8960, 0x59a2, 0x31dc, 0x12df, 0x1, 0x1);
        gbc.writeMem(0x12df, { 0xfe });
        gbc.writeMem(0xef7a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe359);
        EXPECT(gbc.pc(), 0xef7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef7a), 0xcb);
        EXPECT(gbc.readMem(0xef7b), 0x56);
        // CB 56 0094
        gbc.setState(0xa50f, 0x179e, 0x7df0, 0xbaf, 0xe5f1, 0x1475, 0x1, 0x0);
        gbc.writeMem(0x1475, { 0x66 });
        gbc.writeMem(0xa50f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x179e);
        EXPECT(gbc.pc(), 0xa511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa50f), 0xcb);
        EXPECT(gbc.readMem(0xa510), 0x56);
        // CB 56 0095
        gbc.setState(0x3d5b, 0xf965, 0x4d50, 0x2d39, 0x324c, 0x105f, 0x0, 0x0);
        gbc.writeMem(0x105f, { 0x36 });
        gbc.writeMem(0x3d5b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf965);
        EXPECT(gbc.pc(), 0x3d5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0097
        gbc.setState(0x82e5, 0x267c, 0xcc90, 0xdde2, 0x6a1e, 0xac4d, 0x1, 0x1);
        gbc.writeMem(0x82e5, { 0xcb, 0x56 });
        gbc.writeMem(0xac4d, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x267c);
        EXPECT(gbc.pc(), 0x82e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e5), 0xcb);
        EXPECT(gbc.readMem(0x82e6), 0x56);
        EXPECT(gbc.readMem(0xac4d), 0xff);
        // CB 56 0098
        gbc.setState(0x4b7a, 0x2503, 0x15a0, 0x60ca, 0xa91d, 0xec89, 0x1, 0x0);
        gbc.writeMem(0x4b7a, { 0xcb, 0x56 });
        gbc.writeMem(0xec89, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2503);
        EXPECT(gbc.pc(), 0x4b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec89), 0x61);
        // CB 56 0099
        gbc.setState(0x202e, 0xc73b, 0x7af0, 0xf4e6, 0x37b8, 0x9f15, 0x0, 0x0);
        gbc.writeMem(0x202e, { 0xcb, 0x56 });
        gbc.writeMem(0x9f15, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc73b);
        EXPECT(gbc.pc(), 0x2030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f15), 0x40);
        // CB 56 009A
        gbc.setState(0xa9f9, 0xd351, 0xa790, 0xaff3, 0x7258, 0xeffc, 0x1, 0x0);
        gbc.writeMem(0xa9f9, { 0xcb, 0x56 });
        gbc.writeMem(0xeffc, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd351);
        EXPECT(gbc.pc(), 0xa9fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9f9), 0xcb);
        EXPECT(gbc.readMem(0xa9fa), 0x56);
        EXPECT(gbc.readMem(0xeffc), 0xdf);
        // CB 56 009B
        gbc.setState(0x3cea, 0xfca1, 0xd4d0, 0x2f3d, 0x70f4, 0xf794, 0x0, 0x0);
        gbc.writeMem(0x3cea, { 0xcb, 0x56 });
        gbc.writeMem(0xf794, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xfca1);
        EXPECT(gbc.pc(), 0x3cec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf794), 0xd9);
        // CB 56 009E
        gbc.setState(0xd409, 0x4961, 0x87b0, 0xd9c2, 0x1618, 0xe35c, 0x0, 0x0);
        gbc.writeMem(0xd409, { 0xcb, 0x56 });
        gbc.writeMem(0xe35c, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4961);
        EXPECT(gbc.pc(), 0xd40b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd409), 0xcb);
        EXPECT(gbc.readMem(0xd40a), 0x56);
        EXPECT(gbc.readMem(0xe35c), 0xa3);
        // CB 56 009F
        gbc.setState(0xde79, 0x62fa, 0x9570, 0xe373, 0x1014, 0x99ce, 0x0, 0x0);
        gbc.writeMem(0x99ce, { 0x49 });
        gbc.writeMem(0xde79, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x62fa);
        EXPECT(gbc.pc(), 0xde7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99ce), 0x49);
        EXPECT(gbc.readMem(0xde79), 0xcb);
        EXPECT(gbc.readMem(0xde7a), 0x56);
        // CB 56 00A0
        gbc.setState(0xdcfe, 0x10c2, 0x9630, 0x4209, 0x19dc, 0x659a, 0x1, 0x1);
        gbc.writeMem(0x659a, { 0x13 });
        gbc.writeMem(0xdcfe, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x10c2);
        EXPECT(gbc.pc(), 0xdd00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcfe), 0xcb);
        EXPECT(gbc.readMem(0xdcff), 0x56);
        // CB 56 00A1
        gbc.setState(0x9ccd, 0xb6c9, 0xe8e0, 0x3eda, 0x9884, 0xb73b, 0x1, 0x1);
        gbc.writeMem(0x9ccd, { 0xcb, 0x56 });
        gbc.writeMem(0xb73b, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb6c9);
        EXPECT(gbc.pc(), 0x9ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ccd), 0xcb);
        EXPECT(gbc.readMem(0x9cce), 0x56);
        EXPECT(gbc.readMem(0xb73b), 0x88);
        // CB 56 00A2
        gbc.setState(0x13d1, 0x4e51, 0x4b70, 0x9cd0, 0x42c6, 0xc4a7, 0x1, 0x1);
        gbc.writeMem(0x13d1, { 0xcb, 0x56 });
        gbc.writeMem(0xc4a7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4e51);
        EXPECT(gbc.pc(), 0x13d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4a7), 0x95);
        // CB 56 00A3
        gbc.setState(0x4571, 0x6cac, 0x7a50, 0xabfc, 0xb9f3, 0x593b, 0x1, 0x1);
        gbc.writeMem(0x4571, { 0xcb, 0x56 });
        gbc.writeMem(0x593b, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6cac);
        EXPECT(gbc.pc(), 0x4573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 00A4
        gbc.setState(0xbf75, 0x9c05, 0xf6a0, 0x6b99, 0xcf74, 0x173a, 0x0, 0x1);
        gbc.writeMem(0x173a, { 0xb7 });
        gbc.writeMem(0xbf75, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9c05);
        EXPECT(gbc.pc(), 0xbf77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf75), 0xcb);
        EXPECT(gbc.readMem(0xbf76), 0x56);
        // CB 56 00A5
        gbc.setState(0xb306, 0xc0b0, 0x1be0, 0xf408, 0x1da, 0xe158, 0x0, 0x0);
        gbc.writeMem(0xb306, { 0xcb, 0x56 });
        gbc.writeMem(0xe158, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc0b0);
        EXPECT(gbc.pc(), 0xb308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb306), 0xcb);
        EXPECT(gbc.readMem(0xb307), 0x56);
        EXPECT(gbc.readMem(0xe158), 0x4c);
        // CB 56 00A6
        gbc.setState(0x2675, 0xe60, 0x7920, 0x3b5d, 0x6e7, 0xa420, 0x0, 0x1);
        gbc.writeMem(0x2675, { 0xcb, 0x56 });
        gbc.writeMem(0xa420, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe60);
        EXPECT(gbc.pc(), 0x2677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa420), 0xf5);
        // CB 56 00A7
        gbc.setState(0xc83f, 0xfa2d, 0x55a0, 0x6327, 0x3b8e, 0x6f1d, 0x1, 0x1);
        gbc.writeMem(0x6f1d, { 0x33 });
        gbc.writeMem(0xc83f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfa2d);
        EXPECT(gbc.pc(), 0xc841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc83f), 0xcb);
        EXPECT(gbc.readMem(0xc840), 0x56);
        // CB 56 00A8
        gbc.setState(0xedbd, 0xa8a8, 0x9ab0, 0xc195, 0x45df, 0xb332, 0x0, 0x1);
        gbc.writeMem(0xb332, { 0xad });
        gbc.writeMem(0xedbd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa8a8);
        EXPECT(gbc.pc(), 0xedbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb332), 0xad);
        EXPECT(gbc.readMem(0xedbd), 0xcb);
        EXPECT(gbc.readMem(0xedbe), 0x56);
        // CB 56 00A9
        gbc.setState(0x38e6, 0x8b7f, 0x8d70, 0x242c, 0x2e21, 0x8caf, 0x1, 0x1);
        gbc.writeMem(0x38e6, { 0xcb, 0x56 });
        gbc.writeMem(0x8caf, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8b7f);
        EXPECT(gbc.pc(), 0x38e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8caf), 0xa8);
        // CB 56 00AA
        gbc.setState(0x9759, 0xe36c, 0x20c0, 0xecc6, 0x3e2d, 0xcece, 0x0, 0x1);
        gbc.writeMem(0x9759, { 0xcb, 0x56 });
        gbc.writeMem(0xcece, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe36c);
        EXPECT(gbc.pc(), 0x975b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9759), 0xcb);
        EXPECT(gbc.readMem(0x975a), 0x56);
        EXPECT(gbc.readMem(0xcece), 0x5);
        // CB 56 00AB
        gbc.setState(0x3079, 0x6cba, 0x8db0, 0xe021, 0xaa44, 0x4a34, 0x1, 0x0);
        gbc.writeMem(0x3079, { 0xcb, 0x56 });
        gbc.writeMem(0x4a34, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6cba);
        EXPECT(gbc.pc(), 0x307b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 00AC
        gbc.setState(0x4cb0, 0x2398, 0xc700, 0xb507, 0x6723, 0xfcbb, 0x0, 0x0);
        gbc.writeMem(0x4cb0, { 0xcb, 0x56 });
        gbc.writeMem(0xfcbb, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2398);
        EXPECT(gbc.pc(), 0x4cb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfcbb), 0x2e);
        // CB 56 00AD
        gbc.setState(0xd7aa, 0xb8bd, 0xa8a0, 0x4b58, 0x58a6, 0xa005, 0x1, 0x0);
        gbc.writeMem(0xa005, { 0xd6 });
        gbc.writeMem(0xd7aa, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb8bd);
        EXPECT(gbc.pc(), 0xd7ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa005), 0xd6);
        EXPECT(gbc.readMem(0xd7aa), 0xcb);
        EXPECT(gbc.readMem(0xd7ab), 0x56);
        // CB 56 00AE
        gbc.setState(0xb18, 0x8bc0, 0x5990, 0xd7f6, 0x6715, 0x15d9, 0x1, 0x1);
        gbc.writeMem(0xb18, { 0xcb, 0x56 });
        gbc.writeMem(0x15d9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8bc0);
        EXPECT(gbc.pc(), 0xb1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 00AF
        gbc.setState(0xdb55, 0x840e, 0x72c0, 0x25a1, 0x7905, 0xaca8, 0x0, 0x0);
        gbc.writeMem(0xaca8, { 0x27 });
        gbc.writeMem(0xdb55, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x840e);
        EXPECT(gbc.pc(), 0xdb57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca8), 0x27);
        EXPECT(gbc.readMem(0xdb55), 0xcb);
        EXPECT(gbc.readMem(0xdb56), 0x56);
        // CB 56 00B0
        gbc.setState(0x18a5, 0xabd3, 0x9910, 0xa28b, 0xb45a, 0xc1f5, 0x1, 0x0);
        gbc.writeMem(0x18a5, { 0xcb, 0x56 });
        gbc.writeMem(0xc1f5, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xabd3);
        EXPECT(gbc.pc(), 0x18a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f5), 0xe0);
        // CB 56 00B1
        gbc.setState(0x4976, 0xbe88, 0x3a20, 0xf72a, 0xba69, 0x55f5, 0x0, 0x1);
        gbc.writeMem(0x4976, { 0xcb, 0x56 });
        gbc.writeMem(0x55f5, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbe88);
        EXPECT(gbc.pc(), 0x4978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 00B2
        gbc.setState(0x61f8, 0xb058, 0xb4b0, 0xda24, 0x614, 0xef, 0x0, 0x1);
        gbc.writeMem(0xef, { 0x40 });
        gbc.writeMem(0x61f8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb058);
        EXPECT(gbc.pc(), 0x61fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 00B3
        gbc.setState(0xa442, 0x6673, 0xc520, 0xc2, 0xd27e, 0x322b, 0x1, 0x0);
        gbc.writeMem(0x322b, { 0x32 });
        gbc.writeMem(0xa442, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6673);
        EXPECT(gbc.pc(), 0xa444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa442), 0xcb);
        EXPECT(gbc.readMem(0xa443), 0x56);
        // CB 56 00B4
        gbc.setState(0x3b8e, 0x4570, 0x6820, 0x67f4, 0xcd40, 0x9a27, 0x0, 0x1);
        gbc.writeMem(0x3b8e, { 0xcb, 0x56 });
        gbc.writeMem(0x9a27, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4570);
        EXPECT(gbc.pc(), 0x3b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a27), 0xf4);
        // CB 56 00B5
        gbc.setState(0x42df, 0xe013, 0x7d0, 0x6310, 0x420a, 0x9479, 0x0, 0x0);
        gbc.writeMem(0x42df, { 0xcb, 0x56 });
        gbc.writeMem(0x9479, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe013);
        EXPECT(gbc.pc(), 0x42e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9479), 0x59);
        // CB 56 00B6
        gbc.setState(0x965, 0x3a9a, 0xc700, 0x48b6, 0x97b9, 0x3a04, 0x1, 0x0);
        gbc.writeMem(0x965, { 0xcb, 0x56 });
        gbc.writeMem(0x3a04, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3a9a);
        EXPECT(gbc.pc(), 0x967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 00B7
        gbc.setState(0x33b4, 0x3ee7, 0xc200, 0xd2f5, 0x1044, 0xe8fb, 0x0, 0x0);
        gbc.writeMem(0x33b4, { 0xcb, 0x56 });
        gbc.writeMem(0xe8fb, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3ee7);
        EXPECT(gbc.pc(), 0x33b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8fb), 0x49);
        // CB 56 00B9
        gbc.setState(0xdd88, 0x1109, 0x4ef0, 0x61b2, 0xbbb3, 0xc64f, 0x0, 0x0);
        gbc.writeMem(0xc64f, { 0x61 });
        gbc.writeMem(0xdd88, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1109);
        EXPECT(gbc.pc(), 0xdd8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc64f), 0x61);
        EXPECT(gbc.readMem(0xdd88), 0xcb);
        EXPECT(gbc.readMem(0xdd89), 0x56);
        // CB 56 00BA
        gbc.setState(0x8e7a, 0x21c5, 0x82c0, 0x387a, 0x6b67, 0xa26b, 0x0, 0x0);
        gbc.writeMem(0x8e7a, { 0xcb, 0x56 });
        gbc.writeMem(0xa26b, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x21c5);
        EXPECT(gbc.pc(), 0x8e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e7a), 0xcb);
        EXPECT(gbc.readMem(0x8e7b), 0x56);
        EXPECT(gbc.readMem(0xa26b), 0xa2);
        // CB 56 00BB
        gbc.setState(0x846b, 0x9264, 0x17c0, 0x1831, 0x76db, 0x5de6, 0x0, 0x1);
        gbc.writeMem(0x5de6, { 0x53 });
        gbc.writeMem(0x846b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9264);
        EXPECT(gbc.pc(), 0x846d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x846b), 0xcb);
        EXPECT(gbc.readMem(0x846c), 0x56);
        // CB 56 00BC
        gbc.setState(0xa1a7, 0x59ca, 0x2de0, 0x1d58, 0x856c, 0xdfe0, 0x0, 0x0);
        gbc.writeMem(0xa1a7, { 0xcb, 0x56 });
        gbc.writeMem(0xdfe0, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x59ca);
        EXPECT(gbc.pc(), 0xa1a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1a7), 0xcb);
        EXPECT(gbc.readMem(0xa1a8), 0x56);
        EXPECT(gbc.readMem(0xdfe0), 0xf2);
        // CB 56 00BD
        gbc.setState(0xd12c, 0x3ccb, 0x4230, 0x1ae6, 0x4af0, 0x91d9, 0x1, 0x1);
        gbc.writeMem(0x91d9, { 0x17 });
        gbc.writeMem(0xd12c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3ccb);
        EXPECT(gbc.pc(), 0xd12e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91d9), 0x17);
        EXPECT(gbc.readMem(0xd12c), 0xcb);
        EXPECT(gbc.readMem(0xd12d), 0x56);
        // CB 56 00BE
        gbc.setState(0x2c2f, 0x9d98, 0x98f0, 0xd6ce, 0x53d8, 0xfe9, 0x0, 0x0);
        gbc.writeMem(0xfe9, { 0x3 });
        gbc.writeMem(0x2c2f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9d98);
        EXPECT(gbc.pc(), 0x2c31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 00BF
        gbc.setState(0xdb21, 0x649a, 0xd440, 0xa7fd, 0x6714, 0x44ab, 0x1, 0x0);
        gbc.writeMem(0x44ab, { 0x37 });
        gbc.writeMem(0xdb21, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x649a);
        EXPECT(gbc.pc(), 0xdb23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb21), 0xcb);
        EXPECT(gbc.readMem(0xdb22), 0x56);
        // CB 56 00C1
        gbc.setState(0x8303, 0xf186, 0xa1c0, 0xb2fb, 0x26e9, 0xd42a, 0x0, 0x0);
        gbc.writeMem(0x8303, { 0xcb, 0x56 });
        gbc.writeMem(0xd42a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf186);
        EXPECT(gbc.pc(), 0x8305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8303), 0xcb);
        EXPECT(gbc.readMem(0x8304), 0x56);
        EXPECT(gbc.readMem(0xd42a), 0x97);
        // CB 56 00C2
        gbc.setState(0xda90, 0xf04d, 0x52e0, 0x9be8, 0x4ca5, 0x7283, 0x1, 0x0);
        gbc.writeMem(0x7283, { 0x1a });
        gbc.writeMem(0xda90, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf04d);
        EXPECT(gbc.pc(), 0xda92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda90), 0xcb);
        EXPECT(gbc.readMem(0xda91), 0x56);
        // CB 56 00C3
        gbc.setState(0x50b8, 0xa386, 0x9440, 0xdc85, 0x4e8c, 0x2598, 0x0, 0x0);
        gbc.writeMem(0x2598, { 0x59 });
        gbc.writeMem(0x50b8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa386);
        EXPECT(gbc.pc(), 0x50ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 00C4
        gbc.setState(0x3f48, 0x6662, 0x7670, 0x5452, 0xbff0, 0xd45a, 0x0, 0x1);
        gbc.writeMem(0x3f48, { 0xcb, 0x56 });
        gbc.writeMem(0xd45a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6662);
        EXPECT(gbc.pc(), 0x3f4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd45a), 0x58);
        // CB 56 00C5
        gbc.setState(0x3109, 0x3190, 0x9530, 0x83a1, 0x373e, 0xa027, 0x1, 0x0);
        gbc.writeMem(0x3109, { 0xcb, 0x56 });
        gbc.writeMem(0xa027, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3190);
        EXPECT(gbc.pc(), 0x310b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa027), 0x1);
        // CB 56 00C6
        gbc.setState(0xb2c5, 0xba1f, 0x34e0, 0xadc6, 0xedb, 0x388f, 0x1, 0x1);
        gbc.writeMem(0x388f, { 0x1f });
        gbc.writeMem(0xb2c5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xba1f);
        EXPECT(gbc.pc(), 0xb2c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2c5), 0xcb);
        EXPECT(gbc.readMem(0xb2c6), 0x56);
        // CB 56 00C7
        gbc.setState(0x17d4, 0xb11f, 0xc5d0, 0xdbc5, 0xae9d, 0x75da, 0x1, 0x0);
        gbc.writeMem(0x17d4, { 0xcb, 0x56 });
        gbc.writeMem(0x75da, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb11f);
        EXPECT(gbc.pc(), 0x17d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 00C8
        gbc.setState(0x93e3, 0x8ddf, 0x7c10, 0x4531, 0x89e9, 0xbced, 0x0, 0x1);
        gbc.writeMem(0x93e3, { 0xcb, 0x56 });
        gbc.writeMem(0xbced, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8ddf);
        EXPECT(gbc.pc(), 0x93e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e3), 0xcb);
        EXPECT(gbc.readMem(0x93e4), 0x56);
        EXPECT(gbc.readMem(0xbced), 0xbb);
        // CB 56 00C9
        gbc.setState(0xbe22, 0x362e, 0x6210, 0x8ab2, 0xdeb0, 0x3963, 0x0, 0x1);
        gbc.writeMem(0x3963, { 0xd4 });
        gbc.writeMem(0xbe22, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x362e);
        EXPECT(gbc.pc(), 0xbe24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe22), 0xcb);
        EXPECT(gbc.readMem(0xbe23), 0x56);
        // CB 56 00CA
        gbc.setState(0xbeaf, 0xc433, 0x3de0, 0x4dbf, 0x525f, 0xab0a, 0x1, 0x0);
        gbc.writeMem(0xab0a, { 0x42 });
        gbc.writeMem(0xbeaf, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc433);
        EXPECT(gbc.pc(), 0xbeb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab0a), 0x42);
        EXPECT(gbc.readMem(0xbeaf), 0xcb);
        EXPECT(gbc.readMem(0xbeb0), 0x56);
        // CB 56 00CB
        gbc.setState(0x4116, 0xf4c4, 0x5770, 0x5fb5, 0xbcec, 0xa8fa, 0x1, 0x1);
        gbc.writeMem(0x4116, { 0xcb, 0x56 });
        gbc.writeMem(0xa8fa, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf4c4);
        EXPECT(gbc.pc(), 0x4118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8fa), 0x43);
        // CB 56 00CC
        gbc.setState(0x9ba, 0x3ad8, 0xc970, 0xbf4a, 0xdfe0, 0x29c2, 0x0, 0x0);
        gbc.writeMem(0x9ba, { 0xcb, 0x56 });
        gbc.writeMem(0x29c2, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3ad8);
        EXPECT(gbc.pc(), 0x9bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 00CE
        gbc.setState(0xcf69, 0x1f21, 0x3dd0, 0x9b74, 0xcecc, 0x3e51, 0x1, 0x0);
        gbc.writeMem(0x3e51, { 0xf7 });
        gbc.writeMem(0xcf69, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1f21);
        EXPECT(gbc.pc(), 0xcf6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf69), 0xcb);
        EXPECT(gbc.readMem(0xcf6a), 0x56);
        // CB 56 00CF
        gbc.setState(0x4939, 0xfb36, 0xcca0, 0x984f, 0x7739, 0x8ac8, 0x1, 0x0);
        gbc.writeMem(0x4939, { 0xcb, 0x56 });
        gbc.writeMem(0x8ac8, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfb36);
        EXPECT(gbc.pc(), 0x493b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac8), 0xee);
        // CB 56 00D0
        gbc.setState(0x1553, 0x6968, 0xe870, 0x9dc0, 0xc09e, 0xdea7, 0x1, 0x0);
        gbc.writeMem(0x1553, { 0xcb, 0x56 });
        gbc.writeMem(0xdea7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6968);
        EXPECT(gbc.pc(), 0x1555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdea7), 0xc0);
        // CB 56 00D1
        gbc.setState(0x3f4b, 0x6c80, 0xec20, 0xcd20, 0xb40, 0x7b18, 0x0, 0x0);
        gbc.writeMem(0x3f4b, { 0xcb, 0x56 });
        gbc.writeMem(0x7b18, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6c80);
        EXPECT(gbc.pc(), 0x3f4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 00D2
        gbc.setState(0x5a63, 0x6762, 0xca30, 0x19a8, 0x2826, 0xadf2, 0x0, 0x0);
        gbc.writeMem(0x5a63, { 0xcb, 0x56 });
        gbc.writeMem(0xadf2, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6762);
        EXPECT(gbc.pc(), 0x5a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf2), 0x7b);
        // CB 56 00D3
        gbc.setState(0x82a5, 0xcf0a, 0xa4f0, 0x3f2c, 0xe9d3, 0xfd59, 0x0, 0x1);
        gbc.writeMem(0x82a5, { 0xcb, 0x56 });
        gbc.writeMem(0xfd59, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcf0a);
        EXPECT(gbc.pc(), 0x82a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a5), 0xcb);
        EXPECT(gbc.readMem(0x82a6), 0x56);
        EXPECT(gbc.readMem(0xfd59), 0x92);
        // CB 56 00D4
        gbc.setState(0x1abf, 0x812e, 0x5c90, 0xce89, 0x90e4, 0x6170, 0x0, 0x1);
        gbc.writeMem(0x1abf, { 0xcb, 0x56 });
        gbc.writeMem(0x6170, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x812e);
        EXPECT(gbc.pc(), 0x1ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 00D5
        gbc.setState(0xe2bd, 0xe3d0, 0xe130, 0x2177, 0xc455, 0xbca6, 0x0, 0x1);
        gbc.writeMem(0xbca6, { 0x9d });
        gbc.writeMem(0xe2bd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe3d0);
        EXPECT(gbc.pc(), 0xe2bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbca6), 0x9d);
        EXPECT(gbc.readMem(0xe2bd), 0xcb);
        EXPECT(gbc.readMem(0xe2be), 0x56);
        // CB 56 00D6
        gbc.setState(0xaf5f, 0x19e3, 0x94e0, 0xc86a, 0x759a, 0xc046, 0x0, 0x1);
        gbc.writeMem(0xaf5f, { 0xcb, 0x56 });
        gbc.writeMem(0xc046, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x19e3);
        EXPECT(gbc.pc(), 0xaf61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf5f), 0xcb);
        EXPECT(gbc.readMem(0xaf60), 0x56);
        EXPECT(gbc.readMem(0xc046), 0x7d);
        // CB 56 00D7
        gbc.setState(0x782b, 0x6992, 0x80e0, 0x6aae, 0xa6f4, 0x52c7, 0x1, 0x0);
        gbc.writeMem(0x52c7, { 0x44 });
        gbc.writeMem(0x782b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6992);
        EXPECT(gbc.pc(), 0x782d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 00D8
        gbc.setState(0x21f0, 0xa7a3, 0x8c90, 0x36de, 0x1d97, 0xa988, 0x0, 0x1);
        gbc.writeMem(0x21f0, { 0xcb, 0x56 });
        gbc.writeMem(0xa988, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa7a3);
        EXPECT(gbc.pc(), 0x21f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa988), 0xb5);
        // CB 56 00D9
        gbc.setState(0x25f, 0x478, 0x4f60, 0x3d93, 0x248c, 0x6d92, 0x1, 0x1);
        gbc.writeMem(0x25f, { 0xcb, 0x56 });
        gbc.writeMem(0x6d92, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x478);
        EXPECT(gbc.pc(), 0x261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 00DA
        gbc.setState(0xde68, 0x93a1, 0x91c0, 0x436d, 0x56cd, 0x1479, 0x1, 0x0);
        gbc.writeMem(0x1479, { 0x4f });
        gbc.writeMem(0xde68, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x93a1);
        EXPECT(gbc.pc(), 0xde6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde68), 0xcb);
        EXPECT(gbc.readMem(0xde69), 0x56);
        // CB 56 00DB
        gbc.setState(0x1df1, 0x262, 0x4c60, 0xe87a, 0x4fd0, 0xa2f7, 0x1, 0x0);
        gbc.writeMem(0x1df1, { 0xcb, 0x56 });
        gbc.writeMem(0xa2f7, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x262);
        EXPECT(gbc.pc(), 0x1df3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2f7), 0xd7);
        // CB 56 00DC
        gbc.setState(0x4571, 0x6a81, 0xbe70, 0x3448, 0x742c, 0x605b, 0x1, 0x1);
        gbc.writeMem(0x4571, { 0xcb, 0x56 });
        gbc.writeMem(0x605b, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6a81);
        EXPECT(gbc.pc(), 0x4573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 00DD
        gbc.setState(0xc00, 0x2af4, 0x4700, 0x261, 0xf10b, 0x18bf, 0x0, 0x0);
        gbc.writeMem(0xc00, { 0xcb, 0x56 });
        gbc.writeMem(0x18bf, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2af4);
        EXPECT(gbc.pc(), 0xc02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 00DE
        gbc.setState(0x4ad5, 0x2850, 0xa500, 0x323b, 0xc352, 0xebee, 0x0, 0x1);
        gbc.writeMem(0x4ad5, { 0xcb, 0x56 });
        gbc.writeMem(0xebee, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2850);
        EXPECT(gbc.pc(), 0x4ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebee), 0xb);
        // CB 56 00DF
        gbc.setState(0x11ed, 0xe852, 0x640, 0x4ce7, 0xcdfc, 0x20b2, 0x0, 0x1);
        gbc.writeMem(0x11ed, { 0xcb, 0x56 });
        gbc.writeMem(0x20b2, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe852);
        EXPECT(gbc.pc(), 0x11ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 00E0
        gbc.setState(0xcef3, 0x6a71, 0xb5e0, 0x8e62, 0x6804, 0x572c, 0x1, 0x0);
        gbc.writeMem(0x572c, { 0xdc });
        gbc.writeMem(0xcef3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6a71);
        EXPECT(gbc.pc(), 0xcef5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef3), 0xcb);
        EXPECT(gbc.readMem(0xcef4), 0x56);
        // CB 56 00E1
        gbc.setState(0xb1b5, 0xde01, 0x5000, 0xb384, 0x2922, 0xe26a, 0x1, 0x1);
        gbc.writeMem(0xb1b5, { 0xcb, 0x56 });
        gbc.writeMem(0xe26a, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xde01);
        EXPECT(gbc.pc(), 0xb1b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b5), 0xcb);
        EXPECT(gbc.readMem(0xb1b6), 0x56);
        EXPECT(gbc.readMem(0xe26a), 0x6b);
        // CB 56 00E2
        gbc.setState(0x9da0, 0x251, 0xffa0, 0xaf66, 0x7c7d, 0xabd1, 0x0, 0x0);
        gbc.writeMem(0x9da0, { 0xcb, 0x56 });
        gbc.writeMem(0xabd1, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x251);
        EXPECT(gbc.pc(), 0x9da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da0), 0xcb);
        EXPECT(gbc.readMem(0x9da1), 0x56);
        EXPECT(gbc.readMem(0xabd1), 0xe3);
        // CB 56 00E3
        gbc.setState(0xca68, 0xde06, 0xdff0, 0x74d6, 0xc799, 0xbbb6, 0x1, 0x0);
        gbc.writeMem(0xbbb6, { 0x3e });
        gbc.writeMem(0xca68, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xde06);
        EXPECT(gbc.pc(), 0xca6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb6), 0x3e);
        EXPECT(gbc.readMem(0xca68), 0xcb);
        EXPECT(gbc.readMem(0xca69), 0x56);
        // CB 56 00E4
        gbc.setState(0x9d29, 0x2d02, 0xbe80, 0x15bb, 0xa427, 0x8e4b, 0x1, 0x0);
        gbc.writeMem(0x8e4b, { 0xf });
        gbc.writeMem(0x9d29, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2d02);
        EXPECT(gbc.pc(), 0x9d2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e4b), 0xf);
        EXPECT(gbc.readMem(0x9d29), 0xcb);
        EXPECT(gbc.readMem(0x9d2a), 0x56);
        // CB 56 00E5
        gbc.setState(0xe668, 0x1425, 0x4e60, 0x47c2, 0x9df0, 0xe634, 0x1, 0x0);
        gbc.writeMem(0xe634, { 0x66 });
        gbc.writeMem(0xe668, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1425);
        EXPECT(gbc.pc(), 0xe66a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe634), 0x66);
        EXPECT(gbc.readMem(0xe668), 0xcb);
        EXPECT(gbc.readMem(0xe669), 0x56);
        // CB 56 00E7
        gbc.setState(0xce85, 0xa37f, 0x7e50, 0x5055, 0x7916, 0xfafe, 0x0, 0x1);
        gbc.writeMem(0xce85, { 0xcb, 0x56 });
        gbc.writeMem(0xfafe, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa37f);
        EXPECT(gbc.pc(), 0xce87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce85), 0xcb);
        EXPECT(gbc.readMem(0xce86), 0x56);
        EXPECT(gbc.readMem(0xfafe), 0xdc);
        // CB 56 00E8
        gbc.setState(0xee4a, 0x5072, 0xca20, 0x9b7f, 0xe1cb, 0x3c8d, 0x0, 0x0);
        gbc.writeMem(0x3c8d, { 0x75 });
        gbc.writeMem(0xee4a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5072);
        EXPECT(gbc.pc(), 0xee4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee4a), 0xcb);
        EXPECT(gbc.readMem(0xee4b), 0x56);
        // CB 56 00E9
        gbc.setState(0x44e7, 0x31c4, 0x3f40, 0x7e0f, 0x836d, 0x4431, 0x0, 0x0);
        gbc.writeMem(0x4431, { 0x99 });
        gbc.writeMem(0x44e7, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x31c4);
        EXPECT(gbc.pc(), 0x44e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 00EA
        gbc.setState(0x10c, 0x83ff, 0xf280, 0xf4ca, 0xc430, 0xc403, 0x1, 0x0);
        gbc.writeMem(0x10c, { 0xcb, 0x56 });
        gbc.writeMem(0xc403, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x83ff);
        EXPECT(gbc.pc(), 0x10e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc403), 0xd0);
        // CB 56 00EB
        gbc.setState(0xd891, 0x770b, 0xb630, 0x868b, 0x7acb, 0x5837, 0x0, 0x1);
        gbc.writeMem(0x5837, { 0x5f });
        gbc.writeMem(0xd891, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x770b);
        EXPECT(gbc.pc(), 0xd893);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd891), 0xcb);
        EXPECT(gbc.readMem(0xd892), 0x56);
        // CB 56 00EC
        gbc.setState(0xbe0d, 0xfe1e, 0x2ea0, 0xa2fa, 0x1395, 0x76a, 0x0, 0x0);
        gbc.writeMem(0x76a, { 0xf });
        gbc.writeMem(0xbe0d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfe1e);
        EXPECT(gbc.pc(), 0xbe0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe0d), 0xcb);
        EXPECT(gbc.readMem(0xbe0e), 0x56);
        // CB 56 00ED
        gbc.setState(0x44d0, 0x6ff8, 0x6760, 0x27f3, 0x406a, 0x7dde, 0x0, 0x0);
        gbc.writeMem(0x44d0, { 0xcb, 0x56 });
        gbc.writeMem(0x7dde, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6ff8);
        EXPECT(gbc.pc(), 0x44d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 00EE
        gbc.setState(0x468, 0x32fa, 0x8110, 0x6864, 0x52, 0xe239, 0x0, 0x0);
        gbc.writeMem(0x468, { 0xcb, 0x56 });
        gbc.writeMem(0xe239, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x32fa);
        EXPECT(gbc.pc(), 0x46a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe239), 0x1f);
        // CB 56 00EF
        gbc.setState(0x2216, 0x8d95, 0x8d80, 0x4b8e, 0x62c3, 0xf665, 0x0, 0x0);
        gbc.writeMem(0x2216, { 0xcb, 0x56 });
        gbc.writeMem(0xf665, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8d95);
        EXPECT(gbc.pc(), 0x2218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf665), 0x95);
        // CB 56 00F0
        gbc.setState(0x6e3a, 0x5c08, 0x5bd0, 0xa295, 0x7f93, 0xc789, 0x0, 0x1);
        gbc.writeMem(0x6e3a, { 0xcb, 0x56 });
        gbc.writeMem(0xc789, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5c08);
        EXPECT(gbc.pc(), 0x6e3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc789), 0xf0);
        // CB 56 00F1
        gbc.setState(0xdef0, 0x1274, 0x8e10, 0xc1ac, 0xeb25, 0xf28f, 0x1, 0x1);
        gbc.writeMem(0xdef0, { 0xcb, 0x56 });
        gbc.writeMem(0xf28f, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1274);
        EXPECT(gbc.pc(), 0xdef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdef0), 0xcb);
        EXPECT(gbc.readMem(0xdef1), 0x56);
        EXPECT(gbc.readMem(0xf28f), 0x7a);
        // CB 56 00F2
        gbc.setState(0xd5ff, 0x12ad, 0x25d0, 0x8e90, 0x608f, 0xc7ef, 0x0, 0x1);
        gbc.writeMem(0xc7ef, { 0x2f });
        gbc.writeMem(0xd5ff, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x12ad);
        EXPECT(gbc.pc(), 0xd601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ef), 0x2f);
        EXPECT(gbc.readMem(0xd5ff), 0xcb);
        EXPECT(gbc.readMem(0xd600), 0x56);
        // CB 56 00F3
        gbc.setState(0x2a87, 0x88c1, 0xcbc0, 0x1dbe, 0x5f85, 0x51dc, 0x0, 0x1);
        gbc.writeMem(0x2a87, { 0xcb, 0x56 });
        gbc.writeMem(0x51dc, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x88c1);
        EXPECT(gbc.pc(), 0x2a89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 00F4
        gbc.setState(0xbb43, 0xc985, 0x9940, 0x70f, 0xf341, 0x12a7, 0x1, 0x1);
        gbc.writeMem(0x12a7, { 0x84 });
        gbc.writeMem(0xbb43, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc985);
        EXPECT(gbc.pc(), 0xbb45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb43), 0xcb);
        EXPECT(gbc.readMem(0xbb44), 0x56);
        // CB 56 00F5
        gbc.setState(0x17ea, 0x8495, 0xa550, 0x745, 0xb56f, 0xcf5b, 0x0, 0x0);
        gbc.writeMem(0x17ea, { 0xcb, 0x56 });
        gbc.writeMem(0xcf5b, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8495);
        EXPECT(gbc.pc(), 0x17ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf5b), 0xec);
        // CB 56 00F6
        gbc.setState(0x5b43, 0x7e8, 0x1660, 0xc181, 0x1026, 0xb8f5, 0x1, 0x1);
        gbc.writeMem(0x5b43, { 0xcb, 0x56 });
        gbc.writeMem(0xb8f5, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7e8);
        EXPECT(gbc.pc(), 0x5b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f5), 0xb7);
        // CB 56 00F7
        gbc.setState(0x7c16, 0x4eed, 0xf840, 0x62bb, 0x591, 0xb2d2, 0x1, 0x0);
        gbc.writeMem(0x7c16, { 0xcb, 0x56 });
        gbc.writeMem(0xb2d2, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4eed);
        EXPECT(gbc.pc(), 0x7c18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2d2), 0xe8);
        // CB 56 00F8
        gbc.setState(0x7c63, 0xae6, 0x6b60, 0xda6f, 0x7519, 0x3c67, 0x0, 0x0);
        gbc.writeMem(0x3c67, { 0x9a });
        gbc.writeMem(0x7c63, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xae6);
        EXPECT(gbc.pc(), 0x7c65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 00F9
        gbc.setState(0x569c, 0x32f9, 0xd500, 0x6aa8, 0xf7d9, 0xfd96, 0x1, 0x1);
        gbc.writeMem(0x569c, { 0xcb, 0x56 });
        gbc.writeMem(0xfd96, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x32f9);
        EXPECT(gbc.pc(), 0x569e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfd96), 0xe1);
        // CB 56 00FA
        gbc.setState(0x6c6a, 0x6ec3, 0xa6a0, 0xf50a, 0x365a, 0x3661, 0x1, 0x1);
        gbc.writeMem(0x3661, { 0xfc });
        gbc.writeMem(0x6c6a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6ec3);
        EXPECT(gbc.pc(), 0x6c6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 00FB
        gbc.setState(0x4bd9, 0x155b, 0x520, 0xf4df, 0x8062, 0xd22c, 0x1, 0x1);
        gbc.writeMem(0x4bd9, { 0xcb, 0x56 });
        gbc.writeMem(0xd22c, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x155b);
        EXPECT(gbc.pc(), 0x4bdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd22c), 0x8);
        // CB 56 00FC
        gbc.setState(0xd331, 0x522a, 0x5c50, 0x5870, 0x3819, 0x9b57, 0x0, 0x0);
        gbc.writeMem(0x9b57, { 0x9e });
        gbc.writeMem(0xd331, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x522a);
        EXPECT(gbc.pc(), 0xd333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b57), 0x9e);
        EXPECT(gbc.readMem(0xd331), 0xcb);
        EXPECT(gbc.readMem(0xd332), 0x56);
        // CB 56 00FD
        gbc.setState(0xa88d, 0x47c6, 0x9120, 0xf661, 0x8306, 0x5293, 0x1, 0x1);
        gbc.writeMem(0x5293, { 0x48 });
        gbc.writeMem(0xa88d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x47c6);
        EXPECT(gbc.pc(), 0xa88f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88d), 0xcb);
        EXPECT(gbc.readMem(0xa88e), 0x56);
        // CB 56 00FE
        gbc.setState(0xe47, 0x9cd8, 0x97c0, 0x8ae2, 0x5133, 0x44a8, 0x0, 0x0);
        gbc.writeMem(0xe47, { 0xcb, 0x56 });
        gbc.writeMem(0x44a8, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9cd8);
        EXPECT(gbc.pc(), 0xe49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 00FF
        gbc.setState(0xa005, 0x92ed, 0xa780, 0x1889, 0x7694, 0xbe63, 0x0, 0x1);
        gbc.writeMem(0xa005, { 0xcb, 0x56 });
        gbc.writeMem(0xbe63, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x92ed);
        EXPECT(gbc.pc(), 0xa007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa005), 0xcb);
        EXPECT(gbc.readMem(0xa006), 0x56);
        EXPECT(gbc.readMem(0xbe63), 0x48);
        // CB 56 0100
        gbc.setState(0x365e, 0x75ae, 0xe6c0, 0xdbe4, 0x5104, 0x624b, 0x1, 0x1);
        gbc.writeMem(0x365e, { 0xcb, 0x56 });
        gbc.writeMem(0x624b, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x75ae);
        EXPECT(gbc.pc(), 0x3660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0102
        gbc.setState(0xd689, 0x9635, 0x4400, 0x4b71, 0x8ae8, 0xd907, 0x1, 0x0);
        gbc.writeMem(0xd689, { 0xcb, 0x56 });
        gbc.writeMem(0xd907, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9635);
        EXPECT(gbc.pc(), 0xd68b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd689), 0xcb);
        EXPECT(gbc.readMem(0xd68a), 0x56);
        EXPECT(gbc.readMem(0xd907), 0x8c);
        // CB 56 0103
        gbc.setState(0xe3fc, 0xf891, 0x6b90, 0xf719, 0xb674, 0x9143, 0x0, 0x1);
        gbc.writeMem(0x9143, { 0xeb });
        gbc.writeMem(0xe3fc, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf891);
        EXPECT(gbc.pc(), 0xe3fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9143), 0xeb);
        EXPECT(gbc.readMem(0xe3fc), 0xcb);
        EXPECT(gbc.readMem(0xe3fd), 0x56);
        // CB 56 0106
        gbc.setState(0x3cd5, 0x795f, 0xc1e0, 0xd403, 0x1f29, 0x8289, 0x1, 0x0);
        gbc.writeMem(0x3cd5, { 0xcb, 0x56 });
        gbc.writeMem(0x8289, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x795f);
        EXPECT(gbc.pc(), 0x3cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8289), 0xf7);
        // CB 56 0107
        gbc.setState(0xc8b3, 0x892b, 0xe040, 0xee62, 0x2aad, 0x8924, 0x0, 0x1);
        gbc.writeMem(0x8924, { 0x37 });
        gbc.writeMem(0xc8b3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x892b);
        EXPECT(gbc.pc(), 0xc8b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8924), 0x37);
        EXPECT(gbc.readMem(0xc8b3), 0xcb);
        EXPECT(gbc.readMem(0xc8b4), 0x56);
        // CB 56 0108
        gbc.setState(0x8f90, 0xf06, 0xb350, 0xf6c3, 0xff38, 0x6809, 0x0, 0x0);
        gbc.writeMem(0x6809, { 0x61 });
        gbc.writeMem(0x8f90, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf06);
        EXPECT(gbc.pc(), 0x8f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f90), 0xcb);
        EXPECT(gbc.readMem(0x8f91), 0x56);
        // CB 56 0109
        gbc.setState(0x9764, 0xe43d, 0x5930, 0xe045, 0xbaa1, 0x6a37, 0x0, 0x0);
        gbc.writeMem(0x6a37, { 0x8b });
        gbc.writeMem(0x9764, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe43d);
        EXPECT(gbc.pc(), 0x9766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9764), 0xcb);
        EXPECT(gbc.readMem(0x9765), 0x56);
        // CB 56 010A
        gbc.setState(0xcbba, 0xed31, 0x44f0, 0x2fc8, 0xbe36, 0x5a12, 0x1, 0x1);
        gbc.writeMem(0x5a12, { 0x3f });
        gbc.writeMem(0xcbba, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xed31);
        EXPECT(gbc.pc(), 0xcbbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbba), 0xcb);
        EXPECT(gbc.readMem(0xcbbb), 0x56);
        // CB 56 010B
        gbc.setState(0x25f7, 0xf993, 0x2c40, 0x2922, 0x60be, 0xc33c, 0x0, 0x1);
        gbc.writeMem(0x25f7, { 0xcb, 0x56 });
        gbc.writeMem(0xc33c, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf993);
        EXPECT(gbc.pc(), 0x25f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc33c), 0xf2);
        // CB 56 010D
        gbc.setState(0x5e8c, 0x283b, 0x82d0, 0x917b, 0xbcd0, 0xf754, 0x0, 0x1);
        gbc.writeMem(0x5e8c, { 0xcb, 0x56 });
        gbc.writeMem(0xf754, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x283b);
        EXPECT(gbc.pc(), 0x5e8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf754), 0xfb);
        // CB 56 010F
        gbc.setState(0x7726, 0xb1a7, 0x24f0, 0xc5c1, 0x8dfe, 0x2912, 0x1, 0x0);
        gbc.writeMem(0x2912, { 0x2f });
        gbc.writeMem(0x7726, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb1a7);
        EXPECT(gbc.pc(), 0x7728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0110
        gbc.setState(0x9587, 0xf8e5, 0x19a0, 0xb243, 0xe377, 0xf63e, 0x1, 0x0);
        gbc.writeMem(0x9587, { 0xcb, 0x56 });
        gbc.writeMem(0xf63e, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf8e5);
        EXPECT(gbc.pc(), 0x9589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9587), 0xcb);
        EXPECT(gbc.readMem(0x9588), 0x56);
        EXPECT(gbc.readMem(0xf63e), 0xf7);
        // CB 56 0111
        gbc.setState(0xe0fb, 0xdf90, 0xcdb0, 0xc789, 0x300, 0x2d3c, 0x1, 0x1);
        gbc.writeMem(0x2d3c, { 0xc1 });
        gbc.writeMem(0xe0fb, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xdf90);
        EXPECT(gbc.pc(), 0xe0fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0fb), 0xcb);
        EXPECT(gbc.readMem(0xe0fc), 0x56);
        // CB 56 0112
        gbc.setState(0xce1e, 0x8665, 0x81a0, 0x4fc1, 0x80bc, 0x1f60, 0x0, 0x0);
        gbc.writeMem(0x1f60, { 0x37 });
        gbc.writeMem(0xce1e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8665);
        EXPECT(gbc.pc(), 0xce20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce1e), 0xcb);
        EXPECT(gbc.readMem(0xce1f), 0x56);
        // CB 56 0113
        gbc.setState(0x6c12, 0x632d, 0xc660, 0xae4c, 0x5097, 0x2220, 0x1, 0x0);
        gbc.writeMem(0x2220, { 0xa3 });
        gbc.writeMem(0x6c12, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x632d);
        EXPECT(gbc.pc(), 0x6c14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0114
        gbc.setState(0x7802, 0x1c79, 0x4880, 0xc78d, 0xcb45, 0xa32d, 0x1, 0x0);
        gbc.writeMem(0x7802, { 0xcb, 0x56 });
        gbc.writeMem(0xa32d, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1c79);
        EXPECT(gbc.pc(), 0x7804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa32d), 0x71);
        // CB 56 0115
        gbc.setState(0x6db4, 0x7c28, 0xae70, 0x342c, 0xbaed, 0xb83f, 0x0, 0x1);
        gbc.writeMem(0x6db4, { 0xcb, 0x56 });
        gbc.writeMem(0xb83f, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7c28);
        EXPECT(gbc.pc(), 0x6db6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb83f), 0x91);
        // CB 56 0116
        gbc.setState(0xa29a, 0xaff2, 0xa70, 0xe62e, 0x4eae, 0x2919, 0x0, 0x0);
        gbc.writeMem(0x2919, { 0xd3 });
        gbc.writeMem(0xa29a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xaff2);
        EXPECT(gbc.pc(), 0xa29c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa29a), 0xcb);
        EXPECT(gbc.readMem(0xa29b), 0x56);
        // CB 56 0117
        gbc.setState(0xaa5d, 0x8917, 0xa240, 0x563c, 0x979a, 0x83e3, 0x1, 0x0);
        gbc.writeMem(0x83e3, { 0x6 });
        gbc.writeMem(0xaa5d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8917);
        EXPECT(gbc.pc(), 0xaa5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e3), 0x6);
        EXPECT(gbc.readMem(0xaa5d), 0xcb);
        EXPECT(gbc.readMem(0xaa5e), 0x56);
        // CB 56 0118
        gbc.setState(0xb82a, 0x4591, 0x6110, 0x2259, 0x1a3d, 0x39b5, 0x1, 0x1);
        gbc.writeMem(0x39b5, { 0x97 });
        gbc.writeMem(0xb82a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4591);
        EXPECT(gbc.pc(), 0xb82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb82a), 0xcb);
        EXPECT(gbc.readMem(0xb82b), 0x56);
        // CB 56 0119
        gbc.setState(0x270f, 0x2dd, 0x86b0, 0x1211, 0x9db3, 0xbdbc, 0x0, 0x1);
        gbc.writeMem(0x270f, { 0xcb, 0x56 });
        gbc.writeMem(0xbdbc, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2dd);
        EXPECT(gbc.pc(), 0x2711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdbc), 0x84);
        // CB 56 011A
        gbc.setState(0x4979, 0x745, 0x46e0, 0x969a, 0x6890, 0x5157, 0x0, 0x1);
        gbc.writeMem(0x4979, { 0xcb, 0x56 });
        gbc.writeMem(0x5157, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x745);
        EXPECT(gbc.pc(), 0x497b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 011B
        gbc.setState(0x57da, 0xc8ce, 0xa040, 0x8e2, 0x7615, 0x136a, 0x1, 0x1);
        gbc.writeMem(0x136a, { 0x67 });
        gbc.writeMem(0x57da, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc8ce);
        EXPECT(gbc.pc(), 0x57dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 011C
        gbc.setState(0xe81c, 0x381, 0xcda0, 0x8511, 0xefaa, 0xd162, 0x0, 0x1);
        gbc.writeMem(0xd162, { 0xdd });
        gbc.writeMem(0xe81c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x381);
        EXPECT(gbc.pc(), 0xe81e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd162), 0xdd);
        EXPECT(gbc.readMem(0xe81c), 0xcb);
        EXPECT(gbc.readMem(0xe81d), 0x56);
        // CB 56 011D
        gbc.setState(0x8b85, 0xf327, 0xf6d0, 0xa638, 0x964, 0x64cf, 0x1, 0x0);
        gbc.writeMem(0x64cf, { 0x76 });
        gbc.writeMem(0x8b85, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf327);
        EXPECT(gbc.pc(), 0x8b87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b85), 0xcb);
        EXPECT(gbc.readMem(0x8b86), 0x56);
        // CB 56 011E
        gbc.setState(0x4be2, 0x5853, 0x5b20, 0x3fc5, 0x1c55, 0x14dc, 0x0, 0x1);
        gbc.writeMem(0x14dc, { 0x2a });
        gbc.writeMem(0x4be2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5853);
        EXPECT(gbc.pc(), 0x4be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0120
        gbc.setState(0xb8e1, 0xfe5f, 0xf170, 0x8d87, 0xfe5a, 0x5ba5, 0x0, 0x0);
        gbc.writeMem(0x5ba5, { 0x81 });
        gbc.writeMem(0xb8e1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xfe5f);
        EXPECT(gbc.pc(), 0xb8e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8e1), 0xcb);
        EXPECT(gbc.readMem(0xb8e2), 0x56);
        // CB 56 0122
        gbc.setState(0x739e, 0xf409, 0x31b0, 0xd29b, 0xa189, 0xf3b4, 0x0, 0x0);
        gbc.writeMem(0x739e, { 0xcb, 0x56 });
        gbc.writeMem(0xf3b4, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf409);
        EXPECT(gbc.pc(), 0x73a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf3b4), 0xd);
        // CB 56 0123
        gbc.setState(0x85bd, 0xaf48, 0xfd10, 0x93cd, 0x9951, 0xe048, 0x1, 0x1);
        gbc.writeMem(0x85bd, { 0xcb, 0x56 });
        gbc.writeMem(0xe048, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xaf48);
        EXPECT(gbc.pc(), 0x85bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85bd), 0xcb);
        EXPECT(gbc.readMem(0x85be), 0x56);
        EXPECT(gbc.readMem(0xe048), 0x16);
        // CB 56 0124
        gbc.setState(0xacbb, 0xabd0, 0x32e0, 0xf6e2, 0x56d, 0x6db1, 0x0, 0x0);
        gbc.writeMem(0x6db1, { 0x43 });
        gbc.writeMem(0xacbb, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xabd0);
        EXPECT(gbc.pc(), 0xacbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacbb), 0xcb);
        EXPECT(gbc.readMem(0xacbc), 0x56);
        // CB 56 0125
        gbc.setState(0x235c, 0xf21f, 0x9170, 0x3a1e, 0x1db5, 0x9627, 0x1, 0x1);
        gbc.writeMem(0x235c, { 0xcb, 0x56 });
        gbc.writeMem(0x9627, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf21f);
        EXPECT(gbc.pc(), 0x235e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9627), 0x7d);
        // CB 56 0126
        gbc.setState(0x186a, 0xf607, 0x7990, 0x483b, 0xae9e, 0xb89b, 0x1, 0x0);
        gbc.writeMem(0x186a, { 0xcb, 0x56 });
        gbc.writeMem(0xb89b, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf607);
        EXPECT(gbc.pc(), 0x186c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb89b), 0x22);
        // CB 56 0127
        gbc.setState(0x9088, 0x2bb4, 0xc880, 0xbe29, 0xdaf0, 0x3170, 0x0, 0x1);
        gbc.writeMem(0x3170, { 0xd6 });
        gbc.writeMem(0x9088, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2bb4);
        EXPECT(gbc.pc(), 0x908a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9088), 0xcb);
        EXPECT(gbc.readMem(0x9089), 0x56);
        // CB 56 0128
        gbc.setState(0xa4b7, 0xda87, 0x1c90, 0xd175, 0x2141, 0xe0bc, 0x1, 0x0);
        gbc.writeMem(0xa4b7, { 0xcb, 0x56 });
        gbc.writeMem(0xe0bc, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xda87);
        EXPECT(gbc.pc(), 0xa4b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b7), 0xcb);
        EXPECT(gbc.readMem(0xa4b8), 0x56);
        EXPECT(gbc.readMem(0xe0bc), 0x8f);
        // CB 56 0129
        gbc.setState(0xd15f, 0xf89d, 0x59a0, 0x83ec, 0x6bb0, 0x73c9, 0x0, 0x1);
        gbc.writeMem(0x73c9, { 0xa6 });
        gbc.writeMem(0xd15f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf89d);
        EXPECT(gbc.pc(), 0xd161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd15f), 0xcb);
        EXPECT(gbc.readMem(0xd160), 0x56);
        // CB 56 012A
        gbc.setState(0x52ca, 0x61f9, 0x4360, 0x74b8, 0xa0a8, 0x7062, 0x1, 0x0);
        gbc.writeMem(0x52ca, { 0xcb, 0x56 });
        gbc.writeMem(0x7062, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x61f9);
        EXPECT(gbc.pc(), 0x52cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 012B
        gbc.setState(0x4da, 0xdd1, 0x2320, 0x583a, 0x6f1b, 0x3f61, 0x0, 0x1);
        gbc.writeMem(0x4da, { 0xcb, 0x56 });
        gbc.writeMem(0x3f61, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xdd1);
        EXPECT(gbc.pc(), 0x4dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 012C
        gbc.setState(0x1fcb, 0x849a, 0x5660, 0x8182, 0xe2e0, 0xdc85, 0x0, 0x1);
        gbc.writeMem(0x1fcb, { 0xcb, 0x56 });
        gbc.writeMem(0xdc85, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x849a);
        EXPECT(gbc.pc(), 0x1fcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc85), 0x6b);
        // CB 56 012D
        gbc.setState(0x878c, 0x2565, 0x5ed0, 0x385a, 0x14d6, 0x137c, 0x1, 0x1);
        gbc.writeMem(0x137c, { 0x98 });
        gbc.writeMem(0x878c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x2565);
        EXPECT(gbc.pc(), 0x878e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x878c), 0xcb);
        EXPECT(gbc.readMem(0x878d), 0x56);
        // CB 56 012E
        gbc.setState(0x7741, 0x756e, 0xe8c0, 0x5be6, 0x6ba1, 0xf2a1, 0x0, 0x1);
        gbc.writeMem(0x7741, { 0xcb, 0x56 });
        gbc.writeMem(0xf2a1, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x756e);
        EXPECT(gbc.pc(), 0x7743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf2a1), 0xb1);
        // CB 56 012F
        gbc.setState(0x9bfb, 0x4e1, 0x62b0, 0xf151, 0xc6d2, 0x3ea0, 0x0, 0x1);
        gbc.writeMem(0x3ea0, { 0xc6 });
        gbc.writeMem(0x9bfb, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4e1);
        EXPECT(gbc.pc(), 0x9bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bfb), 0xcb);
        EXPECT(gbc.readMem(0x9bfc), 0x56);
        // CB 56 0130
        gbc.setState(0x8250, 0x9172, 0xd470, 0x6581, 0x9205, 0x676, 0x1, 0x1);
        gbc.writeMem(0x676, { 0xad });
        gbc.writeMem(0x8250, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9172);
        EXPECT(gbc.pc(), 0x8252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8250), 0xcb);
        EXPECT(gbc.readMem(0x8251), 0x56);
        // CB 56 0131
        gbc.setState(0x5e2c, 0xe32f, 0xea90, 0x1795, 0x6d06, 0xc065, 0x1, 0x0);
        gbc.writeMem(0x5e2c, { 0xcb, 0x56 });
        gbc.writeMem(0xc065, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe32f);
        EXPECT(gbc.pc(), 0x5e2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc065), 0x9a);
        // CB 56 0133
        gbc.setState(0xcea2, 0x63e2, 0x3ef0, 0x3783, 0x8828, 0xfb96, 0x1, 0x0);
        gbc.writeMem(0xcea2, { 0xcb, 0x56 });
        gbc.writeMem(0xfb96, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x63e2);
        EXPECT(gbc.pc(), 0xcea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea2), 0xcb);
        EXPECT(gbc.readMem(0xcea3), 0x56);
        EXPECT(gbc.readMem(0xfb96), 0x1);
        // CB 56 0134
        gbc.setState(0x476, 0xd8ba, 0x9390, 0xb0a5, 0x13b0, 0x814a, 0x0, 0x0);
        gbc.writeMem(0x476, { 0xcb, 0x56 });
        gbc.writeMem(0x814a, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd8ba);
        EXPECT(gbc.pc(), 0x478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x814a), 0x9f);
        // CB 56 0135
        gbc.setState(0x7f58, 0xab4f, 0xbff0, 0x55b8, 0xb79c, 0x1ddd, 0x0, 0x0);
        gbc.writeMem(0x1ddd, { 0x1c });
        gbc.writeMem(0x7f58, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xab4f);
        EXPECT(gbc.pc(), 0x7f5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0136
        gbc.setState(0x14f8, 0xe0a4, 0x1540, 0x628e, 0xac96, 0xb5e6, 0x1, 0x1);
        gbc.writeMem(0x14f8, { 0xcb, 0x56 });
        gbc.writeMem(0xb5e6, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe0a4);
        EXPECT(gbc.pc(), 0x14fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e6), 0x48);
        // CB 56 0138
        gbc.setState(0xe5e0, 0xf30b, 0x3880, 0x3f5c, 0x265f, 0xf1b5, 0x0, 0x1);
        gbc.writeMem(0xe5e0, { 0xcb, 0x56 });
        gbc.writeMem(0xf1b5, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf30b);
        EXPECT(gbc.pc(), 0xe5e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e0), 0xcb);
        EXPECT(gbc.readMem(0xe5e1), 0x56);
        EXPECT(gbc.readMem(0xf1b5), 0xd4);
        // CB 56 0139
        gbc.setState(0xb3b8, 0x78f, 0x3810, 0x4151, 0xf43, 0xb264, 0x1, 0x0);
        gbc.writeMem(0xb264, { 0xa3 });
        gbc.writeMem(0xb3b8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x78f);
        EXPECT(gbc.pc(), 0xb3ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb264), 0xa3);
        EXPECT(gbc.readMem(0xb3b8), 0xcb);
        EXPECT(gbc.readMem(0xb3b9), 0x56);
        // CB 56 013A
        gbc.setState(0xaee6, 0x9a9, 0xf620, 0x2eaa, 0x4846, 0xb1fe, 0x1, 0x0);
        gbc.writeMem(0xaee6, { 0xcb, 0x56 });
        gbc.writeMem(0xb1fe, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9a9);
        EXPECT(gbc.pc(), 0xaee8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee6), 0xcb);
        EXPECT(gbc.readMem(0xaee7), 0x56);
        EXPECT(gbc.readMem(0xb1fe), 0xb6);
        // CB 56 013B
        gbc.setState(0xe249, 0xc14, 0x82f0, 0x5fd2, 0x177f, 0x2415, 0x1, 0x0);
        gbc.writeMem(0x2415, { 0x9d });
        gbc.writeMem(0xe249, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc14);
        EXPECT(gbc.pc(), 0xe24b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe249), 0xcb);
        EXPECT(gbc.readMem(0xe24a), 0x56);
        // CB 56 013C
        gbc.setState(0xd346, 0xa30, 0xd770, 0x60dd, 0xac96, 0x5fe6, 0x0, 0x0);
        gbc.writeMem(0x5fe6, { 0x40 });
        gbc.writeMem(0xd346, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa30);
        EXPECT(gbc.pc(), 0xd348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd346), 0xcb);
        EXPECT(gbc.readMem(0xd347), 0x56);
        // CB 56 013D
        gbc.setState(0xa9c4, 0xc77b, 0x8ad0, 0xc02c, 0x284, 0x9819, 0x1, 0x1);
        gbc.writeMem(0x9819, { 0x28 });
        gbc.writeMem(0xa9c4, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc77b);
        EXPECT(gbc.pc(), 0xa9c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9819), 0x28);
        EXPECT(gbc.readMem(0xa9c4), 0xcb);
        EXPECT(gbc.readMem(0xa9c5), 0x56);
        // CB 56 013E
        gbc.setState(0x4451, 0x57f3, 0xd020, 0x2b8a, 0xb3cf, 0x3d60, 0x0, 0x0);
        gbc.writeMem(0x3d60, { 0x49 });
        gbc.writeMem(0x4451, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x57f3);
        EXPECT(gbc.pc(), 0x4453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 013F
        gbc.setState(0x935f, 0x50e0, 0xdfb0, 0xf019, 0xaac8, 0x32e, 0x0, 0x1);
        gbc.writeMem(0x32e, { 0x5a });
        gbc.writeMem(0x935f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x50e0);
        EXPECT(gbc.pc(), 0x9361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x935f), 0xcb);
        EXPECT(gbc.readMem(0x9360), 0x56);
        // CB 56 0140
        gbc.setState(0xc98f, 0xc044, 0xec30, 0x217b, 0x13da, 0x491e, 0x0, 0x1);
        gbc.writeMem(0x491e, { 0x7c });
        gbc.writeMem(0xc98f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc044);
        EXPECT(gbc.pc(), 0xc991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98f), 0xcb);
        EXPECT(gbc.readMem(0xc990), 0x56);
        // CB 56 0141
        gbc.setState(0x6788, 0xaf1d, 0x1a80, 0x496a, 0x8363, 0x718d, 0x1, 0x0);
        gbc.writeMem(0x6788, { 0xcb, 0x56 });
        gbc.writeMem(0x718d, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xaf1d);
        EXPECT(gbc.pc(), 0x678a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0142
        gbc.setState(0x849b, 0x585e, 0x3900, 0x9d55, 0xd472, 0xcd61, 0x1, 0x1);
        gbc.writeMem(0x849b, { 0xcb, 0x56 });
        gbc.writeMem(0xcd61, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x585e);
        EXPECT(gbc.pc(), 0x849d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x849b), 0xcb);
        EXPECT(gbc.readMem(0x849c), 0x56);
        EXPECT(gbc.readMem(0xcd61), 0x7e);
        // CB 56 0143
        gbc.setState(0xebfd, 0xb166, 0x7b20, 0x46a5, 0x607a, 0x3c53, 0x0, 0x0);
        gbc.writeMem(0x3c53, { 0x5d });
        gbc.writeMem(0xebfd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb166);
        EXPECT(gbc.pc(), 0xebff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebfd), 0xcb);
        EXPECT(gbc.readMem(0xebfe), 0x56);
        // CB 56 0144
        gbc.setState(0x9fd2, 0xdd0d, 0x2240, 0x3ff0, 0x1a39, 0xd756, 0x0, 0x1);
        gbc.writeMem(0x9fd2, { 0xcb, 0x56 });
        gbc.writeMem(0xd756, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xdd0d);
        EXPECT(gbc.pc(), 0x9fd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd2), 0xcb);
        EXPECT(gbc.readMem(0x9fd3), 0x56);
        EXPECT(gbc.readMem(0xd756), 0x36);
        // CB 56 0145
        gbc.setState(0xd988, 0xa65a, 0xf920, 0x38b, 0xbc52, 0xebbc, 0x1, 0x0);
        gbc.writeMem(0xd988, { 0xcb, 0x56 });
        gbc.writeMem(0xebbc, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa65a);
        EXPECT(gbc.pc(), 0xd98a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd988), 0xcb);
        EXPECT(gbc.readMem(0xd989), 0x56);
        EXPECT(gbc.readMem(0xebbc), 0x21);
        // CB 56 0146
        gbc.setState(0x1d0f, 0xd464, 0xace0, 0x95aa, 0xfc7, 0x3643, 0x0, 0x0);
        gbc.writeMem(0x1d0f, { 0xcb, 0x56 });
        gbc.writeMem(0x3643, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd464);
        EXPECT(gbc.pc(), 0x1d11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0147
        gbc.setState(0xeee4, 0x9412, 0xd380, 0xe9b2, 0x99df, 0x93ea, 0x1, 0x1);
        gbc.writeMem(0x93ea, { 0x4e });
        gbc.writeMem(0xeee4, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9412);
        EXPECT(gbc.pc(), 0xeee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93ea), 0x4e);
        EXPECT(gbc.readMem(0xeee4), 0xcb);
        EXPECT(gbc.readMem(0xeee5), 0x56);
        // CB 56 0148
        gbc.setState(0x666c, 0x7339, 0x1180, 0x8da, 0x947e, 0x63ec, 0x1, 0x0);
        gbc.writeMem(0x63ec, { 0xa8 });
        gbc.writeMem(0x666c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7339);
        EXPECT(gbc.pc(), 0x666e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0149
        gbc.setState(0x966, 0xee43, 0x30c0, 0x4f09, 0x867e, 0x30c, 0x0, 0x1);
        gbc.writeMem(0x30c, { 0x2c });
        gbc.writeMem(0x966, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xee43);
        EXPECT(gbc.pc(), 0x968);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 014A
        gbc.setState(0x12ab, 0x848a, 0xa500, 0x159b, 0x6f53, 0x44f9, 0x0, 0x1);
        gbc.writeMem(0x12ab, { 0xcb, 0x56 });
        gbc.writeMem(0x44f9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x848a);
        EXPECT(gbc.pc(), 0x12ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 014B
        gbc.setState(0x41b8, 0x3797, 0xa5a0, 0x599e, 0xc6a5, 0xc2b1, 0x0, 0x1);
        gbc.writeMem(0x41b8, { 0xcb, 0x56 });
        gbc.writeMem(0xc2b1, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3797);
        EXPECT(gbc.pc(), 0x41ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b1), 0xff);
        // CB 56 014C
        gbc.setState(0x70d3, 0x8f2c, 0x8750, 0xeddd, 0x9e02, 0x1a0f, 0x0, 0x1);
        gbc.writeMem(0x1a0f, { 0x39 });
        gbc.writeMem(0x70d3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8f2c);
        EXPECT(gbc.pc(), 0x70d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 014D
        gbc.setState(0xb612, 0x3cac, 0x27c0, 0x22af, 0xb3f8, 0x6cae, 0x0, 0x0);
        gbc.writeMem(0x6cae, { 0xb3 });
        gbc.writeMem(0xb612, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3cac);
        EXPECT(gbc.pc(), 0xb614);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb612), 0xcb);
        EXPECT(gbc.readMem(0xb613), 0x56);
        // CB 56 014E
        gbc.setState(0xc326, 0xc47f, 0x4990, 0xeb70, 0x12e9, 0xa332, 0x0, 0x1);
        gbc.writeMem(0xa332, { 0xc4 });
        gbc.writeMem(0xc326, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc47f);
        EXPECT(gbc.pc(), 0xc328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa332), 0xc4);
        EXPECT(gbc.readMem(0xc326), 0xcb);
        EXPECT(gbc.readMem(0xc327), 0x56);
        // CB 56 014F
        gbc.setState(0xe104, 0x2211, 0x7f20, 0xef89, 0xa294, 0x7d30, 0x0, 0x1);
        gbc.writeMem(0x7d30, { 0x98 });
        gbc.writeMem(0xe104, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2211);
        EXPECT(gbc.pc(), 0xe106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe104), 0xcb);
        EXPECT(gbc.readMem(0xe105), 0x56);
        // CB 56 0150
        gbc.setState(0x6668, 0xfde1, 0x9ee0, 0xdcb9, 0x4452, 0xb755, 0x0, 0x0);
        gbc.writeMem(0x6668, { 0xcb, 0x56 });
        gbc.writeMem(0xb755, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfde1);
        EXPECT(gbc.pc(), 0x666a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb755), 0xef);
        // CB 56 0151
        gbc.setState(0x5c02, 0x5ae7, 0xdee0, 0x308e, 0xdffd, 0xf659, 0x1, 0x0);
        gbc.writeMem(0x5c02, { 0xcb, 0x56 });
        gbc.writeMem(0xf659, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5ae7);
        EXPECT(gbc.pc(), 0x5c04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf659), 0x5e);
        // CB 56 0153
        gbc.setState(0xa1a6, 0xd3aa, 0xbc20, 0x467e, 0xeb7e, 0x8015, 0x0, 0x1);
        gbc.writeMem(0x8015, { 0x83 });
        gbc.writeMem(0xa1a6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd3aa);
        EXPECT(gbc.pc(), 0xa1a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8015), 0x83);
        EXPECT(gbc.readMem(0xa1a6), 0xcb);
        EXPECT(gbc.readMem(0xa1a7), 0x56);
        // CB 56 0154
        gbc.setState(0xa5c6, 0x5243, 0x1490, 0xb6e1, 0x34a, 0x1780, 0x1, 0x1);
        gbc.writeMem(0x1780, { 0x32 });
        gbc.writeMem(0xa5c6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5243);
        EXPECT(gbc.pc(), 0xa5c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c6), 0xcb);
        EXPECT(gbc.readMem(0xa5c7), 0x56);
        // CB 56 0155
        gbc.setState(0x5ab7, 0x1883, 0xf340, 0xc35b, 0x7179, 0x4ed4, 0x1, 0x0);
        gbc.writeMem(0x4ed4, { 0xc1 });
        gbc.writeMem(0x5ab7, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1883);
        EXPECT(gbc.pc(), 0x5ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0156
        gbc.setState(0xa6d6, 0xe72d, 0x8f80, 0x642f, 0x4319, 0xaa24, 0x0, 0x1);
        gbc.writeMem(0xa6d6, { 0xcb, 0x56 });
        gbc.writeMem(0xaa24, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe72d);
        EXPECT(gbc.pc(), 0xa6d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d6), 0xcb);
        EXPECT(gbc.readMem(0xa6d7), 0x56);
        EXPECT(gbc.readMem(0xaa24), 0x4d);
        // CB 56 0157
        gbc.setState(0xba59, 0x763c, 0x6d0, 0xbad, 0x9593, 0x6ff, 0x1, 0x1);
        gbc.writeMem(0x6ff, { 0x68 });
        gbc.writeMem(0xba59, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x763c);
        EXPECT(gbc.pc(), 0xba5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba59), 0xcb);
        EXPECT(gbc.readMem(0xba5a), 0x56);
        // CB 56 0158
        gbc.setState(0x2cd7, 0x1953, 0x3d20, 0xd67b, 0x39bf, 0xb63b, 0x0, 0x0);
        gbc.writeMem(0x2cd7, { 0xcb, 0x56 });
        gbc.writeMem(0xb63b, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1953);
        EXPECT(gbc.pc(), 0x2cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb63b), 0x22);
        // CB 56 0159
        gbc.setState(0x3c81, 0xc7ba, 0x3760, 0x6da7, 0xe13f, 0xef1b, 0x1, 0x0);
        gbc.writeMem(0x3c81, { 0xcb, 0x56 });
        gbc.writeMem(0xef1b, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc7ba);
        EXPECT(gbc.pc(), 0x3c83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef1b), 0xc2);
        // CB 56 015A
        gbc.setState(0xd7e2, 0x59ad, 0x8980, 0xef0d, 0x493d, 0x473a, 0x1, 0x0);
        gbc.writeMem(0x473a, { 0xfa });
        gbc.writeMem(0xd7e2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x59ad);
        EXPECT(gbc.pc(), 0xd7e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e2), 0xcb);
        EXPECT(gbc.readMem(0xd7e3), 0x56);
        // CB 56 015B
        gbc.setState(0xb16c, 0x6594, 0xf550, 0xde6e, 0xc655, 0xea06, 0x0, 0x0);
        gbc.writeMem(0xb16c, { 0xcb, 0x56 });
        gbc.writeMem(0xea06, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6594);
        EXPECT(gbc.pc(), 0xb16e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16c), 0xcb);
        EXPECT(gbc.readMem(0xb16d), 0x56);
        EXPECT(gbc.readMem(0xea06), 0x99);
        // CB 56 015C
        gbc.setState(0x6c1b, 0x61db, 0x230, 0x16cb, 0xe1d3, 0xa8af, 0x1, 0x1);
        gbc.writeMem(0x6c1b, { 0xcb, 0x56 });
        gbc.writeMem(0xa8af, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x61db);
        EXPECT(gbc.pc(), 0x6c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8af), 0x19);
        // CB 56 015D
        gbc.setState(0xd9d0, 0xb0af, 0xc8b0, 0xc90b, 0xcb76, 0x36e8, 0x1, 0x0);
        gbc.writeMem(0x36e8, { 0x3b });
        gbc.writeMem(0xd9d0, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb0af);
        EXPECT(gbc.pc(), 0xd9d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d0), 0xcb);
        EXPECT(gbc.readMem(0xd9d1), 0x56);
        // CB 56 015F
        gbc.setState(0x1b10, 0xb9a4, 0xf1b0, 0x4356, 0xc652, 0xffbf, 0x1, 0x1);
        gbc.writeMem(0x1b10, { 0xcb, 0x56 });
        gbc.writeMem(0xffbf, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb9a4);
        EXPECT(gbc.pc(), 0x1b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffbf), 0xec);
        // CB 56 0160
        gbc.setState(0x53dc, 0x67cd, 0xa9f0, 0xbc41, 0x19c, 0x3703, 0x1, 0x0);
        gbc.writeMem(0x3703, { 0x64 });
        gbc.writeMem(0x53dc, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x67cd);
        EXPECT(gbc.pc(), 0x53de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0161
        gbc.setState(0x3459, 0x3354, 0x8d90, 0xef81, 0xb4f0, 0xbb8f, 0x1, 0x0);
        gbc.writeMem(0x3459, { 0xcb, 0x56 });
        gbc.writeMem(0xbb8f, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3354);
        EXPECT(gbc.pc(), 0x345b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb8f), 0x42);
        // CB 56 0162
        gbc.setState(0x8d7e, 0xbfa, 0x5b60, 0x6133, 0x7724, 0x2689, 0x0, 0x0);
        gbc.writeMem(0x2689, { 0x24 });
        gbc.writeMem(0x8d7e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbfa);
        EXPECT(gbc.pc(), 0x8d80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d7e), 0xcb);
        EXPECT(gbc.readMem(0x8d7f), 0x56);
        // CB 56 0163
        gbc.setState(0x697b, 0xd067, 0x3710, 0x1eab, 0x5ab2, 0xd686, 0x0, 0x0);
        gbc.writeMem(0x697b, { 0xcb, 0x56 });
        gbc.writeMem(0xd686, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd067);
        EXPECT(gbc.pc(), 0x697d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd686), 0x2c);
        // CB 56 0164
        gbc.setState(0x6c9f, 0xec49, 0x31d0, 0x8f52, 0xd1f4, 0xcf5f, 0x0, 0x1);
        gbc.writeMem(0x6c9f, { 0xcb, 0x56 });
        gbc.writeMem(0xcf5f, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xec49);
        EXPECT(gbc.pc(), 0x6ca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf5f), 0x7f);
        // CB 56 0165
        gbc.setState(0xc724, 0xb7ab, 0xa8e0, 0xc06a, 0x31ca, 0x563a, 0x1, 0x1);
        gbc.writeMem(0x563a, { 0x70 });
        gbc.writeMem(0xc724, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb7ab);
        EXPECT(gbc.pc(), 0xc726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc724), 0xcb);
        EXPECT(gbc.readMem(0xc725), 0x56);
        // CB 56 0166
        gbc.setState(0x1f92, 0x642d, 0xdcb0, 0xbaf4, 0xc046, 0x566d, 0x1, 0x1);
        gbc.writeMem(0x1f92, { 0xcb, 0x56 });
        gbc.writeMem(0x566d, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x642d);
        EXPECT(gbc.pc(), 0x1f94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0167
        gbc.setState(0xd665, 0x32c, 0xa0, 0x7430, 0x7c65, 0xd066, 0x1, 0x1);
        gbc.writeMem(0xd066, { 0x72 });
        gbc.writeMem(0xd665, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x32c);
        EXPECT(gbc.pc(), 0xd667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd066), 0x72);
        EXPECT(gbc.readMem(0xd665), 0xcb);
        EXPECT(gbc.readMem(0xd666), 0x56);
        // CB 56 0168
        gbc.setState(0xdd71, 0xeaa7, 0x6980, 0xc92d, 0x23a3, 0x7f5, 0x1, 0x0);
        gbc.writeMem(0x7f5, { 0x55 });
        gbc.writeMem(0xdd71, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xeaa7);
        EXPECT(gbc.pc(), 0xdd73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd71), 0xcb);
        EXPECT(gbc.readMem(0xdd72), 0x56);
        // CB 56 0169
        gbc.setState(0x5abd, 0xede, 0x9060, 0x6c52, 0xf0ed, 0x7add, 0x1, 0x1);
        gbc.writeMem(0x5abd, { 0xcb, 0x56 });
        gbc.writeMem(0x7add, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xede);
        EXPECT(gbc.pc(), 0x5abf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 016A
        gbc.setState(0xb0e7, 0x4692, 0x8cf0, 0xb55, 0x7f0, 0xc481, 0x1, 0x0);
        gbc.writeMem(0xb0e7, { 0xcb, 0x56 });
        gbc.writeMem(0xc481, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4692);
        EXPECT(gbc.pc(), 0xb0e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e7), 0xcb);
        EXPECT(gbc.readMem(0xb0e8), 0x56);
        EXPECT(gbc.readMem(0xc481), 0xf9);
        // CB 56 016B
        gbc.setState(0xa17, 0x8a6e, 0xf3e0, 0xeb4e, 0x280d, 0x81e5, 0x1, 0x0);
        gbc.writeMem(0xa17, { 0xcb, 0x56 });
        gbc.writeMem(0x81e5, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8a6e);
        EXPECT(gbc.pc(), 0xa19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e5), 0xf5);
        // CB 56 016D
        gbc.setState(0x9116, 0x6b80, 0xf7f0, 0x5eba, 0xd15f, 0x5912, 0x1, 0x0);
        gbc.writeMem(0x5912, { 0x3 });
        gbc.writeMem(0x9116, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6b80);
        EXPECT(gbc.pc(), 0x9118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9116), 0xcb);
        EXPECT(gbc.readMem(0x9117), 0x56);
        // CB 56 016E
        gbc.setState(0x2267, 0xa350, 0x6530, 0x2ea1, 0x331, 0x2f28, 0x0, 0x0);
        gbc.writeMem(0x2267, { 0xcb, 0x56 });
        gbc.writeMem(0x2f28, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa350);
        EXPECT(gbc.pc(), 0x2269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 016F
        gbc.setState(0xed3f, 0xd0cf, 0xa560, 0x361d, 0x50b8, 0x9bc4, 0x1, 0x0);
        gbc.writeMem(0x9bc4, { 0x69 });
        gbc.writeMem(0xed3f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd0cf);
        EXPECT(gbc.pc(), 0xed41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bc4), 0x69);
        EXPECT(gbc.readMem(0xed3f), 0xcb);
        EXPECT(gbc.readMem(0xed40), 0x56);
        // CB 56 0170
        gbc.setState(0xd0a1, 0xfdfa, 0xfb90, 0x3262, 0x7dd7, 0xeb6, 0x0, 0x0);
        gbc.writeMem(0xeb6, { 0x4c });
        gbc.writeMem(0xd0a1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xfdfa);
        EXPECT(gbc.pc(), 0xd0a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0a1), 0xcb);
        EXPECT(gbc.readMem(0xd0a2), 0x56);
        // CB 56 0171
        gbc.setState(0x7bf6, 0x1180, 0x7d40, 0xdcb9, 0xd14, 0x43f0, 0x1, 0x0);
        gbc.writeMem(0x43f0, { 0x2 });
        gbc.writeMem(0x7bf6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1180);
        EXPECT(gbc.pc(), 0x7bf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0172
        gbc.setState(0x2643, 0x1da1, 0x710, 0x5fe1, 0xc864, 0x63e8, 0x0, 0x0);
        gbc.writeMem(0x2643, { 0xcb, 0x56 });
        gbc.writeMem(0x63e8, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1da1);
        EXPECT(gbc.pc(), 0x2645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0173
        gbc.setState(0x5762, 0xdaa, 0xe310, 0xa54a, 0xa80c, 0xc602, 0x1, 0x1);
        gbc.writeMem(0x5762, { 0xcb, 0x56 });
        gbc.writeMem(0xc602, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdaa);
        EXPECT(gbc.pc(), 0x5764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc602), 0xdb);
        // CB 56 0174
        gbc.setState(0x4bb6, 0x437, 0x3ab0, 0x6468, 0x7968, 0x4914, 0x0, 0x0);
        gbc.writeMem(0x4914, { 0xf6 });
        gbc.writeMem(0x4bb6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x437);
        EXPECT(gbc.pc(), 0x4bb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0175
        gbc.setState(0xd7d2, 0xab2e, 0xe0, 0xad47, 0x325e, 0x58a8, 0x0, 0x1);
        gbc.writeMem(0x58a8, { 0x80 });
        gbc.writeMem(0xd7d2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xab2e);
        EXPECT(gbc.pc(), 0xd7d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7d2), 0xcb);
        EXPECT(gbc.readMem(0xd7d3), 0x56);
        // CB 56 0176
        gbc.setState(0x7d59, 0x3480, 0x6bc0, 0x8f78, 0x3156, 0x5cd1, 0x1, 0x0);
        gbc.writeMem(0x5cd1, { 0x24 });
        gbc.writeMem(0x7d59, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3480);
        EXPECT(gbc.pc(), 0x7d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0177
        gbc.setState(0x343, 0xf2f1, 0xa950, 0xfd20, 0xd4c0, 0xed43, 0x1, 0x1);
        gbc.writeMem(0x343, { 0xcb, 0x56 });
        gbc.writeMem(0xed43, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf2f1);
        EXPECT(gbc.pc(), 0x345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed43), 0x1c);
        // CB 56 0178
        gbc.setState(0xc992, 0x9993, 0x9b20, 0xe887, 0xadf1, 0xe05c, 0x0, 0x0);
        gbc.writeMem(0xc992, { 0xcb, 0x56 });
        gbc.writeMem(0xe05c, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9993);
        EXPECT(gbc.pc(), 0xc994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc992), 0xcb);
        EXPECT(gbc.readMem(0xc993), 0x56);
        EXPECT(gbc.readMem(0xe05c), 0xe);
        // CB 56 0179
        gbc.setState(0xd8a4, 0x1154, 0xf8f0, 0xb003, 0xdd1b, 0xc58e, 0x0, 0x0);
        gbc.writeMem(0xc58e, { 0xf4 });
        gbc.writeMem(0xd8a4, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1154);
        EXPECT(gbc.pc(), 0xd8a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc58e), 0xf4);
        EXPECT(gbc.readMem(0xd8a4), 0xcb);
        EXPECT(gbc.readMem(0xd8a5), 0x56);
        // CB 56 017A
        gbc.setState(0x83ad, 0x4f7d, 0x67d0, 0x5a3a, 0x9636, 0xbe8, 0x1, 0x0);
        gbc.writeMem(0xbe8, { 0x10 });
        gbc.writeMem(0x83ad, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4f7d);
        EXPECT(gbc.pc(), 0x83af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ad), 0xcb);
        EXPECT(gbc.readMem(0x83ae), 0x56);
        // CB 56 017B
        gbc.setState(0xb770, 0xd88b, 0x1320, 0x9c94, 0xbd2c, 0x9996, 0x0, 0x0);
        gbc.writeMem(0x9996, { 0x94 });
        gbc.writeMem(0xb770, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd88b);
        EXPECT(gbc.pc(), 0xb772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9996), 0x94);
        EXPECT(gbc.readMem(0xb770), 0xcb);
        EXPECT(gbc.readMem(0xb771), 0x56);
        // CB 56 017C
        gbc.setState(0x1024, 0xad89, 0x28c0, 0xc103, 0xdf29, 0xfa86, 0x0, 0x1);
        gbc.writeMem(0x1024, { 0xcb, 0x56 });
        gbc.writeMem(0xfa86, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xad89);
        EXPECT(gbc.pc(), 0x1026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa86), 0x14);
        // CB 56 017D
        gbc.setState(0x4f11, 0x9156, 0xc0, 0x8576, 0xcecc, 0xeac6, 0x1, 0x1);
        gbc.writeMem(0x4f11, { 0xcb, 0x56 });
        gbc.writeMem(0xeac6, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9156);
        EXPECT(gbc.pc(), 0x4f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeac6), 0xc6);
        // CB 56 017E
        gbc.setState(0x62e3, 0x751e, 0x84f0, 0xefef, 0x1b2a, 0x6253, 0x0, 0x0);
        gbc.writeMem(0x6253, { 0xf4 });
        gbc.writeMem(0x62e3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x751e);
        EXPECT(gbc.pc(), 0x62e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 017F
        gbc.setState(0x21b9, 0x171b, 0x9160, 0xec5f, 0x705c, 0x9422, 0x1, 0x0);
        gbc.writeMem(0x21b9, { 0xcb, 0x56 });
        gbc.writeMem(0x9422, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x171b);
        EXPECT(gbc.pc(), 0x21bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9422), 0xc9);
        // CB 56 0180
        gbc.setState(0xb465, 0x62bd, 0x7b0, 0x8864, 0x71bb, 0xd186, 0x1, 0x0);
        gbc.writeMem(0xb465, { 0xcb, 0x56 });
        gbc.writeMem(0xd186, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x62bd);
        EXPECT(gbc.pc(), 0xb467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb465), 0xcb);
        EXPECT(gbc.readMem(0xb466), 0x56);
        EXPECT(gbc.readMem(0xd186), 0xa2);
        // CB 56 0181
        gbc.setState(0x231f, 0xafb, 0x90c0, 0xe13, 0xf2de, 0x46ab, 0x0, 0x1);
        gbc.writeMem(0x231f, { 0xcb, 0x56 });
        gbc.writeMem(0x46ab, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xafb);
        EXPECT(gbc.pc(), 0x2321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0182
        gbc.setState(0xe920, 0x7ad4, 0x3e20, 0xfe2b, 0x71ef, 0x5ff1, 0x0, 0x0);
        gbc.writeMem(0x5ff1, { 0x1a });
        gbc.writeMem(0xe920, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7ad4);
        EXPECT(gbc.pc(), 0xe922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe920), 0xcb);
        EXPECT(gbc.readMem(0xe921), 0x56);
        // CB 56 0183
        gbc.setState(0x8ef6, 0xec96, 0xe200, 0x53d6, 0xf833, 0xa885, 0x0, 0x1);
        gbc.writeMem(0x8ef6, { 0xcb, 0x56 });
        gbc.writeMem(0xa885, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xec96);
        EXPECT(gbc.pc(), 0x8ef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ef6), 0xcb);
        EXPECT(gbc.readMem(0x8ef7), 0x56);
        EXPECT(gbc.readMem(0xa885), 0xa8);
        // CB 56 0184
        gbc.setState(0x8795, 0xe619, 0xeac0, 0xabba, 0x7489, 0x5f86, 0x1, 0x0);
        gbc.writeMem(0x5f86, { 0xa8 });
        gbc.writeMem(0x8795, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe619);
        EXPECT(gbc.pc(), 0x8797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8795), 0xcb);
        EXPECT(gbc.readMem(0x8796), 0x56);
        // CB 56 0185
        gbc.setState(0xc3fb, 0xbedc, 0x8610, 0xee0c, 0xacf4, 0x2918, 0x1, 0x0);
        gbc.writeMem(0x2918, { 0x9a });
        gbc.writeMem(0xc3fb, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbedc);
        EXPECT(gbc.pc(), 0xc3fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3fb), 0xcb);
        EXPECT(gbc.readMem(0xc3fc), 0x56);
        // CB 56 0186
        gbc.setState(0x22ee, 0xf60e, 0x4190, 0xe901, 0xacc, 0xf63d, 0x1, 0x0);
        gbc.writeMem(0x22ee, { 0xcb, 0x56 });
        gbc.writeMem(0xf63d, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf60e);
        EXPECT(gbc.pc(), 0x22f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf63d), 0x1c);
        // CB 56 0187
        gbc.setState(0xe543, 0x6b9f, 0xbbe0, 0xead, 0xfcb4, 0xcfac, 0x0, 0x1);
        gbc.writeMem(0xcfac, { 0xaf });
        gbc.writeMem(0xe543, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6b9f);
        EXPECT(gbc.pc(), 0xe545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfac), 0xaf);
        EXPECT(gbc.readMem(0xe543), 0xcb);
        EXPECT(gbc.readMem(0xe544), 0x56);
        // CB 56 0188
        gbc.setState(0x2672, 0x21d7, 0x2e30, 0x5f46, 0xa8e8, 0x4377, 0x0, 0x0);
        gbc.writeMem(0x2672, { 0xcb, 0x56 });
        gbc.writeMem(0x4377, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x21d7);
        EXPECT(gbc.pc(), 0x2674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0189
        gbc.setState(0x4055, 0x4287, 0x2830, 0x93e8, 0x5581, 0xc45b, 0x1, 0x0);
        gbc.writeMem(0x4055, { 0xcb, 0x56 });
        gbc.writeMem(0xc45b, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4287);
        EXPECT(gbc.pc(), 0x4057);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc45b), 0x5e);
        // CB 56 018A
        gbc.setState(0xca1d, 0x9b93, 0xe3f0, 0x15c7, 0x9e89, 0xf02b, 0x0, 0x0);
        gbc.writeMem(0xca1d, { 0xcb, 0x56 });
        gbc.writeMem(0xf02b, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9b93);
        EXPECT(gbc.pc(), 0xca1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca1d), 0xcb);
        EXPECT(gbc.readMem(0xca1e), 0x56);
        EXPECT(gbc.readMem(0xf02b), 0xd2);
        // CB 56 018B
        gbc.setState(0xcd72, 0x3433, 0xa4f0, 0x8966, 0x964a, 0xa7de, 0x1, 0x1);
        gbc.writeMem(0xa7de, { 0x38 });
        gbc.writeMem(0xcd72, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3433);
        EXPECT(gbc.pc(), 0xcd74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7de), 0x38);
        EXPECT(gbc.readMem(0xcd72), 0xcb);
        EXPECT(gbc.readMem(0xcd73), 0x56);
        // CB 56 018C
        gbc.setState(0x96a3, 0x9646, 0xa840, 0x4d77, 0x2fa, 0x48c8, 0x1, 0x0);
        gbc.writeMem(0x48c8, { 0xa1 });
        gbc.writeMem(0x96a3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9646);
        EXPECT(gbc.pc(), 0x96a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a3), 0xcb);
        EXPECT(gbc.readMem(0x96a4), 0x56);
        // CB 56 018D
        gbc.setState(0x9517, 0xbe0a, 0x2ab0, 0x6ea5, 0x193d, 0xcd2d, 0x1, 0x0);
        gbc.writeMem(0x9517, { 0xcb, 0x56 });
        gbc.writeMem(0xcd2d, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xbe0a);
        EXPECT(gbc.pc(), 0x9519);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9517), 0xcb);
        EXPECT(gbc.readMem(0x9518), 0x56);
        EXPECT(gbc.readMem(0xcd2d), 0x6c);
        // CB 56 018E
        gbc.setState(0x7bfb, 0x51f2, 0x8050, 0x1656, 0x5b4a, 0xd4d2, 0x0, 0x0);
        gbc.writeMem(0x7bfb, { 0xcb, 0x56 });
        gbc.writeMem(0xd4d2, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x51f2);
        EXPECT(gbc.pc(), 0x7bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d2), 0xc1);
        // CB 56 018F
        gbc.setState(0x8f85, 0x2cb3, 0x7140, 0x5840, 0x7978, 0x8b52, 0x1, 0x0);
        gbc.writeMem(0x8b52, { 0x8a });
        gbc.writeMem(0x8f85, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2cb3);
        EXPECT(gbc.pc(), 0x8f87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b52), 0x8a);
        EXPECT(gbc.readMem(0x8f85), 0xcb);
        EXPECT(gbc.readMem(0x8f86), 0x56);
        // CB 56 0190
        gbc.setState(0x7f32, 0x8298, 0xd560, 0x1b07, 0xe545, 0x3269, 0x1, 0x1);
        gbc.writeMem(0x3269, { 0x8e });
        gbc.writeMem(0x7f32, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8298);
        EXPECT(gbc.pc(), 0x7f34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0191
        gbc.setState(0x171, 0x1830, 0xe910, 0xfa45, 0xfeca, 0xfa83, 0x1, 0x1);
        gbc.writeMem(0x171, { 0xcb, 0x56 });
        gbc.writeMem(0xfa83, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1830);
        EXPECT(gbc.pc(), 0x173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa83), 0x3a);
        // CB 56 0192
        gbc.setState(0x7948, 0xa250, 0x3b90, 0x7d5c, 0x1d4b, 0xd133, 0x0, 0x0);
        gbc.writeMem(0x7948, { 0xcb, 0x56 });
        gbc.writeMem(0xd133, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa250);
        EXPECT(gbc.pc(), 0x794a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd133), 0x37);
        // CB 56 0193
        gbc.setState(0x9840, 0xfbc7, 0x9bb0, 0xe5d0, 0x56b3, 0x38d4, 0x1, 0x1);
        gbc.writeMem(0x38d4, { 0x33 });
        gbc.writeMem(0x9840, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfbc7);
        EXPECT(gbc.pc(), 0x9842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9840), 0xcb);
        EXPECT(gbc.readMem(0x9841), 0x56);
        // CB 56 0194
        gbc.setState(0x4c32, 0x56b0, 0x4bc0, 0x17d, 0x887f, 0x434, 0x1, 0x1);
        gbc.writeMem(0x434, { 0x7a });
        gbc.writeMem(0x4c32, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x56b0);
        EXPECT(gbc.pc(), 0x4c34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0195
        gbc.setState(0x1aa6, 0xb705, 0x90, 0xbe05, 0xacf2, 0x9bc5, 0x0, 0x1);
        gbc.writeMem(0x1aa6, { 0xcb, 0x56 });
        gbc.writeMem(0x9bc5, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb705);
        EXPECT(gbc.pc(), 0x1aa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc5), 0x1e);
        // CB 56 0196
        gbc.setState(0xd65f, 0x72a7, 0xcd50, 0xb0b4, 0x7be5, 0xc0fa, 0x0, 0x1);
        gbc.writeMem(0xc0fa, { 0xbe });
        gbc.writeMem(0xd65f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x72a7);
        EXPECT(gbc.pc(), 0xd661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0fa), 0xbe);
        EXPECT(gbc.readMem(0xd65f), 0xcb);
        EXPECT(gbc.readMem(0xd660), 0x56);
        // CB 56 0197
        gbc.setState(0x54ca, 0xa524, 0xccf0, 0x9f6a, 0x4e99, 0xd018, 0x0, 0x0);
        gbc.writeMem(0x54ca, { 0xcb, 0x56 });
        gbc.writeMem(0xd018, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa524);
        EXPECT(gbc.pc(), 0x54cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd018), 0x40);
        // CB 56 0198
        gbc.setState(0xaf14, 0x2011, 0xdbd0, 0x63a5, 0x780e, 0xf236, 0x1, 0x1);
        gbc.writeMem(0xaf14, { 0xcb, 0x56 });
        gbc.writeMem(0xf236, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2011);
        EXPECT(gbc.pc(), 0xaf16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf14), 0xcb);
        EXPECT(gbc.readMem(0xaf15), 0x56);
        EXPECT(gbc.readMem(0xf236), 0x21);
        // CB 56 0199
        gbc.setState(0x2236, 0x2f68, 0x8470, 0x3249, 0xdd07, 0xace5, 0x0, 0x1);
        gbc.writeMem(0x2236, { 0xcb, 0x56 });
        gbc.writeMem(0xace5, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2f68);
        EXPECT(gbc.pc(), 0x2238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xace5), 0x50);
        // CB 56 019A
        gbc.setState(0x5693, 0x56a3, 0x9c70, 0x5d71, 0x120e, 0x61c9, 0x0, 0x0);
        gbc.writeMem(0x5693, { 0xcb, 0x56 });
        gbc.writeMem(0x61c9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x56a3);
        EXPECT(gbc.pc(), 0x5695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 019B
        gbc.setState(0x5387, 0xf01f, 0xc7b0, 0x9367, 0xb2c, 0x89e3, 0x0, 0x0);
        gbc.writeMem(0x5387, { 0xcb, 0x56 });
        gbc.writeMem(0x89e3, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf01f);
        EXPECT(gbc.pc(), 0x5389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89e3), 0x80);
        // CB 56 019C
        gbc.setState(0x5e8b, 0xaa0d, 0xda50, 0xe53b, 0x2524, 0xbb27, 0x0, 0x0);
        gbc.writeMem(0x5e8b, { 0xcb, 0x56 });
        gbc.writeMem(0xbb27, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xaa0d);
        EXPECT(gbc.pc(), 0x5e8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb27), 0x4c);
        // CB 56 019D
        gbc.setState(0x52be, 0x91b, 0xc780, 0x3669, 0x4616, 0x937f, 0x1, 0x0);
        gbc.writeMem(0x52be, { 0xcb, 0x56 });
        gbc.writeMem(0x937f, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x91b);
        EXPECT(gbc.pc(), 0x52c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x937f), 0x42);
        // CB 56 019E
        gbc.setState(0x131d, 0xdab8, 0x7170, 0x1916, 0x79bb, 0x61be, 0x1, 0x0);
        gbc.writeMem(0x131d, { 0xcb, 0x56 });
        gbc.writeMem(0x61be, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xdab8);
        EXPECT(gbc.pc(), 0x131f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 019F
        gbc.setState(0x49d6, 0x1a56, 0xd9b0, 0x67a, 0x3eb9, 0xbc3f, 0x0, 0x0);
        gbc.writeMem(0x49d6, { 0xcb, 0x56 });
        gbc.writeMem(0xbc3f, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1a56);
        EXPECT(gbc.pc(), 0x49d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc3f), 0xef);
        // CB 56 01A0
        gbc.setState(0x8a44, 0xcf52, 0x7740, 0x8c94, 0x6e6f, 0x8c85, 0x1, 0x0);
        gbc.writeMem(0x8a44, { 0xcb, 0x56 });
        gbc.writeMem(0x8c85, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xcf52);
        EXPECT(gbc.pc(), 0x8a46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a44), 0xcb);
        EXPECT(gbc.readMem(0x8a45), 0x56);
        EXPECT(gbc.readMem(0x8c85), 0xf9);
        // CB 56 01A1
        gbc.setState(0x9a36, 0x77dd, 0x28c0, 0x6477, 0xf892, 0x6fc1, 0x1, 0x0);
        gbc.writeMem(0x6fc1, { 0x93 });
        gbc.writeMem(0x9a36, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x77dd);
        EXPECT(gbc.pc(), 0x9a38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a36), 0xcb);
        EXPECT(gbc.readMem(0x9a37), 0x56);
        // CB 56 01A2
        gbc.setState(0xa997, 0x488a, 0xe150, 0x515c, 0x1dbb, 0x55c8, 0x0, 0x1);
        gbc.writeMem(0x55c8, { 0x68 });
        gbc.writeMem(0xa997, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x488a);
        EXPECT(gbc.pc(), 0xa999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa997), 0xcb);
        EXPECT(gbc.readMem(0xa998), 0x56);
        // CB 56 01A3
        gbc.setState(0xc8f0, 0x819, 0x6590, 0x81f3, 0xfa20, 0x5946, 0x1, 0x0);
        gbc.writeMem(0x5946, { 0x9a });
        gbc.writeMem(0xc8f0, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x819);
        EXPECT(gbc.pc(), 0xc8f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f0), 0xcb);
        EXPECT(gbc.readMem(0xc8f1), 0x56);
        // CB 56 01A4
        gbc.setState(0x60a3, 0x1f86, 0xab60, 0xed44, 0xd702, 0x75ae, 0x1, 0x0);
        gbc.writeMem(0x60a3, { 0xcb, 0x56 });
        gbc.writeMem(0x75ae, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1f86);
        EXPECT(gbc.pc(), 0x60a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 01A5
        gbc.setState(0x31cd, 0xe398, 0xe450, 0x5a14, 0xbfcc, 0xca67, 0x0, 0x0);
        gbc.writeMem(0x31cd, { 0xcb, 0x56 });
        gbc.writeMem(0xca67, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe398);
        EXPECT(gbc.pc(), 0x31cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca67), 0x25);
        // CB 56 01A6
        gbc.setState(0x94ab, 0x40d2, 0x8670, 0xf3e3, 0x9b89, 0xf12, 0x0, 0x0);
        gbc.writeMem(0xf12, { 0x27 });
        gbc.writeMem(0x94ab, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x40d2);
        EXPECT(gbc.pc(), 0x94ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ab), 0xcb);
        EXPECT(gbc.readMem(0x94ac), 0x56);
        // CB 56 01A7
        gbc.setState(0x4175, 0x413b, 0x62e0, 0x75f7, 0x2eb9, 0xac54, 0x1, 0x1);
        gbc.writeMem(0x4175, { 0xcb, 0x56 });
        gbc.writeMem(0xac54, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x413b);
        EXPECT(gbc.pc(), 0x4177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac54), 0x86);
        // CB 56 01A8
        gbc.setState(0xdb54, 0x493a, 0xfde0, 0x3a3b, 0x35a3, 0x888f, 0x1, 0x1);
        gbc.writeMem(0x888f, { 0x0 });
        gbc.writeMem(0xdb54, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x493a);
        EXPECT(gbc.pc(), 0xdb56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x888f), 0x0);
        EXPECT(gbc.readMem(0xdb54), 0xcb);
        EXPECT(gbc.readMem(0xdb55), 0x56);
        // CB 56 01A9
        gbc.setState(0xc24c, 0xda22, 0x44b0, 0x4097, 0xece4, 0x3866, 0x1, 0x1);
        gbc.writeMem(0x3866, { 0xe7 });
        gbc.writeMem(0xc24c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xda22);
        EXPECT(gbc.pc(), 0xc24e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc24c), 0xcb);
        EXPECT(gbc.readMem(0xc24d), 0x56);
        // CB 56 01AA
        gbc.setState(0x1c2d, 0x2599, 0x9c40, 0xc735, 0x19d5, 0x8848, 0x0, 0x1);
        gbc.writeMem(0x1c2d, { 0xcb, 0x56 });
        gbc.writeMem(0x8848, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2599);
        EXPECT(gbc.pc(), 0x1c2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8848), 0x2b);
        // CB 56 01AB
        gbc.setState(0xedca, 0xd633, 0x1fb0, 0x2505, 0xb1b, 0x7c6e, 0x0, 0x0);
        gbc.writeMem(0x7c6e, { 0x12 });
        gbc.writeMem(0xedca, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd633);
        EXPECT(gbc.pc(), 0xedcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedca), 0xcb);
        EXPECT(gbc.readMem(0xedcb), 0x56);
        // CB 56 01AC
        gbc.setState(0x4170, 0x7c1e, 0x4cf0, 0xe4ab, 0x5478, 0x3503, 0x1, 0x1);
        gbc.writeMem(0x3503, { 0x92 });
        gbc.writeMem(0x4170, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7c1e);
        EXPECT(gbc.pc(), 0x4172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 01AD
        gbc.setState(0x6e0c, 0xe91e, 0x60c0, 0xe604, 0x4c50, 0xeef6, 0x1, 0x0);
        gbc.writeMem(0x6e0c, { 0xcb, 0x56 });
        gbc.writeMem(0xeef6, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe91e);
        EXPECT(gbc.pc(), 0x6e0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeef6), 0x39);
        // CB 56 01AE
        gbc.setState(0x1138, 0x2df, 0x1d20, 0xf512, 0x707d, 0xebb5, 0x0, 0x0);
        gbc.writeMem(0x1138, { 0xcb, 0x56 });
        gbc.writeMem(0xebb5, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2df);
        EXPECT(gbc.pc(), 0x113a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebb5), 0x3b);
        // CB 56 01AF
        gbc.setState(0xc891, 0xd064, 0xb750, 0x6233, 0x8bc9, 0x2137, 0x1, 0x1);
        gbc.writeMem(0x2137, { 0xb1 });
        gbc.writeMem(0xc891, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd064);
        EXPECT(gbc.pc(), 0xc893);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc891), 0xcb);
        EXPECT(gbc.readMem(0xc892), 0x56);
        // CB 56 01B0
        gbc.setState(0xbe7e, 0x6fd2, 0x7ac0, 0xe2d3, 0x3ef, 0x7b06, 0x1, 0x1);
        gbc.writeMem(0x7b06, { 0x5a });
        gbc.writeMem(0xbe7e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6fd2);
        EXPECT(gbc.pc(), 0xbe80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe7e), 0xcb);
        EXPECT(gbc.readMem(0xbe7f), 0x56);
        // CB 56 01B1
        gbc.setState(0x76e3, 0x18e4, 0x9760, 0x367, 0x45f2, 0x1448, 0x0, 0x1);
        gbc.writeMem(0x1448, { 0x4e });
        gbc.writeMem(0x76e3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x18e4);
        EXPECT(gbc.pc(), 0x76e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 01B2
        gbc.setState(0x4160, 0x9b0e, 0x13c0, 0xd3c6, 0xee6d, 0x3894, 0x0, 0x0);
        gbc.writeMem(0x3894, { 0xb0 });
        gbc.writeMem(0x4160, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9b0e);
        EXPECT(gbc.pc(), 0x4162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 01B3
        gbc.setState(0x947d, 0xd42d, 0xa1c0, 0x788f, 0xf556, 0x7523, 0x0, 0x0);
        gbc.writeMem(0x7523, { 0x57 });
        gbc.writeMem(0x947d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd42d);
        EXPECT(gbc.pc(), 0x947f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x947d), 0xcb);
        EXPECT(gbc.readMem(0x947e), 0x56);
        // CB 56 01B4
        gbc.setState(0x1ec7, 0x1410, 0x38f0, 0xf106, 0x15a4, 0x7c46, 0x0, 0x0);
        gbc.writeMem(0x1ec7, { 0xcb, 0x56 });
        gbc.writeMem(0x7c46, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1410);
        EXPECT(gbc.pc(), 0x1ec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 01B5
        gbc.setState(0x4d4c, 0xd2a5, 0xf5e0, 0xaa, 0x6f00, 0xb9b5, 0x0, 0x1);
        gbc.writeMem(0x4d4c, { 0xcb, 0x56 });
        gbc.writeMem(0xb9b5, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd2a5);
        EXPECT(gbc.pc(), 0x4d4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b5), 0x9e);
        // CB 56 01B6
        gbc.setState(0xc8c8, 0x3ef9, 0xf080, 0xc437, 0xf64a, 0xb641, 0x0, 0x1);
        gbc.writeMem(0xb641, { 0xb });
        gbc.writeMem(0xc8c8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3ef9);
        EXPECT(gbc.pc(), 0xc8ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb641), 0xb);
        EXPECT(gbc.readMem(0xc8c8), 0xcb);
        EXPECT(gbc.readMem(0xc8c9), 0x56);
        // CB 56 01B7
        gbc.setState(0xae4, 0x5651, 0x2c10, 0xb74d, 0x12b3, 0xd002, 0x1, 0x0);
        gbc.writeMem(0xae4, { 0xcb, 0x56 });
        gbc.writeMem(0xd002, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5651);
        EXPECT(gbc.pc(), 0xae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd002), 0xa7);
        // CB 56 01B8
        gbc.setState(0x1ef, 0xf312, 0xf990, 0xb897, 0xf210, 0x2e8e, 0x0, 0x1);
        gbc.writeMem(0x1ef, { 0xcb, 0x56 });
        gbc.writeMem(0x2e8e, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf312);
        EXPECT(gbc.pc(), 0x1f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 01B9
        gbc.setState(0x83dd, 0xde56, 0x2840, 0x9569, 0x1c09, 0x727f, 0x1, 0x0);
        gbc.writeMem(0x727f, { 0x84 });
        gbc.writeMem(0x83dd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xde56);
        EXPECT(gbc.pc(), 0x83df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83dd), 0xcb);
        EXPECT(gbc.readMem(0x83de), 0x56);
        // CB 56 01BA
        gbc.setState(0x79e2, 0x8de8, 0xca70, 0x28e1, 0x7c03, 0xaee0, 0x0, 0x0);
        gbc.writeMem(0x79e2, { 0xcb, 0x56 });
        gbc.writeMem(0xaee0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8de8);
        EXPECT(gbc.pc(), 0x79e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee0), 0xd8);
        // CB 56 01BB
        gbc.setState(0xbc07, 0xead8, 0xeb0, 0x6c52, 0xeeef, 0xaa0a, 0x0, 0x1);
        gbc.writeMem(0xaa0a, { 0x2d });
        gbc.writeMem(0xbc07, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xead8);
        EXPECT(gbc.pc(), 0xbc09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa0a), 0x2d);
        EXPECT(gbc.readMem(0xbc07), 0xcb);
        EXPECT(gbc.readMem(0xbc08), 0x56);
        // CB 56 01BC
        gbc.setState(0x685, 0x4a2c, 0x5140, 0x33cc, 0x57d7, 0x9634, 0x0, 0x0);
        gbc.writeMem(0x685, { 0xcb, 0x56 });
        gbc.writeMem(0x9634, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4a2c);
        EXPECT(gbc.pc(), 0x687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9634), 0xe9);
        // CB 56 01BD
        gbc.setState(0xc619, 0x7f81, 0x3850, 0x5ba5, 0x54eb, 0xb82d, 0x1, 0x1);
        gbc.writeMem(0xb82d, { 0x12 });
        gbc.writeMem(0xc619, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7f81);
        EXPECT(gbc.pc(), 0xc61b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb82d), 0x12);
        EXPECT(gbc.readMem(0xc619), 0xcb);
        EXPECT(gbc.readMem(0xc61a), 0x56);
        // CB 56 01BE
        gbc.setState(0xe758, 0xbe60, 0x9290, 0xde91, 0xa902, 0x285b, 0x1, 0x1);
        gbc.writeMem(0x285b, { 0xce });
        gbc.writeMem(0xe758, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xbe60);
        EXPECT(gbc.pc(), 0xe75a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe758), 0xcb);
        EXPECT(gbc.readMem(0xe759), 0x56);
        // CB 56 01BF
        gbc.setState(0x8dde, 0xd8ef, 0x2290, 0x6255, 0xe45a, 0x91c9, 0x0, 0x0);
        gbc.writeMem(0x8dde, { 0xcb, 0x56 });
        gbc.writeMem(0x91c9, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd8ef);
        EXPECT(gbc.pc(), 0x8de0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dde), 0xcb);
        EXPECT(gbc.readMem(0x8ddf), 0x56);
        EXPECT(gbc.readMem(0x91c9), 0xf1);
        // CB 56 01C0
        gbc.setState(0xdb08, 0xed8a, 0x8700, 0xfae8, 0x6bd4, 0x2d7f, 0x0, 0x1);
        gbc.writeMem(0x2d7f, { 0xb9 });
        gbc.writeMem(0xdb08, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xed8a);
        EXPECT(gbc.pc(), 0xdb0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb08), 0xcb);
        EXPECT(gbc.readMem(0xdb09), 0x56);
        // CB 56 01C1
        gbc.setState(0x9952, 0x5e81, 0xfb30, 0xd4a8, 0x66f8, 0xfc2, 0x1, 0x1);
        gbc.writeMem(0xfc2, { 0x87 });
        gbc.writeMem(0x9952, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5e81);
        EXPECT(gbc.pc(), 0x9954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9952), 0xcb);
        EXPECT(gbc.readMem(0x9953), 0x56);
        // CB 56 01C3
        gbc.setState(0xc6a3, 0x9ffa, 0x5470, 0x229c, 0x7ca5, 0x34f, 0x0, 0x0);
        gbc.writeMem(0x34f, { 0x44 });
        gbc.writeMem(0xc6a3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9ffa);
        EXPECT(gbc.pc(), 0xc6a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6a3), 0xcb);
        EXPECT(gbc.readMem(0xc6a4), 0x56);
        // CB 56 01C4
        gbc.setState(0x28d7, 0xeead, 0x4d50, 0xdfb, 0x12be, 0x1c8b, 0x0, 0x0);
        gbc.writeMem(0x1c8b, { 0x8b });
        gbc.writeMem(0x28d7, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xeead);
        EXPECT(gbc.pc(), 0x28d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 01C5
        gbc.setState(0xe06, 0x797b, 0x2ad0, 0x193f, 0xa783, 0x76c1, 0x1, 0x0);
        gbc.writeMem(0xe06, { 0xcb, 0x56 });
        gbc.writeMem(0x76c1, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x797b);
        EXPECT(gbc.pc(), 0xe08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 01C6
        gbc.setState(0xed0e, 0xb9a9, 0x5f50, 0x9ae7, 0xef54, 0x106, 0x1, 0x1);
        gbc.writeMem(0x106, { 0x34 });
        gbc.writeMem(0xed0e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb9a9);
        EXPECT(gbc.pc(), 0xed10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed0e), 0xcb);
        EXPECT(gbc.readMem(0xed0f), 0x56);
        // CB 56 01C9
        gbc.setState(0x71c5, 0xa94c, 0xec50, 0x3da6, 0x56f8, 0x7cd3, 0x0, 0x0);
        gbc.writeMem(0x71c5, { 0xcb, 0x56 });
        gbc.writeMem(0x7cd3, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa94c);
        EXPECT(gbc.pc(), 0x71c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 01CA
        gbc.setState(0x6d37, 0x53ec, 0x4860, 0x4c50, 0x5758, 0xfe58, 0x0, 0x0);
        gbc.writeMem(0x6d37, { 0xcb, 0x56 });
        gbc.writeMem(0xfe58, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x53ec);
        EXPECT(gbc.pc(), 0x6d39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe58), 0xc);
        // CB 56 01CB
        gbc.setState(0x7532, 0x8911, 0x3ff0, 0x1a3e, 0x9f1, 0x3fce, 0x0, 0x1);
        gbc.writeMem(0x3fce, { 0xf3 });
        gbc.writeMem(0x7532, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8911);
        EXPECT(gbc.pc(), 0x7534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 01CC
        gbc.setState(0x19ce, 0xdada, 0xf1e0, 0xe975, 0x8a5e, 0x68d8, 0x0, 0x1);
        gbc.writeMem(0x19ce, { 0xcb, 0x56 });
        gbc.writeMem(0x68d8, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xdada);
        EXPECT(gbc.pc(), 0x19d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 01CD
        gbc.setState(0x8ced, 0x4f3c, 0x94b0, 0x63e1, 0x11f3, 0xe237, 0x1, 0x0);
        gbc.writeMem(0x8ced, { 0xcb, 0x56 });
        gbc.writeMem(0xe237, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4f3c);
        EXPECT(gbc.pc(), 0x8cef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ced), 0xcb);
        EXPECT(gbc.readMem(0x8cee), 0x56);
        EXPECT(gbc.readMem(0xe237), 0x79);
        // CB 56 01CE
        gbc.setState(0x4f91, 0x4e98, 0xac80, 0x2f78, 0x6051, 0x7dc2, 0x0, 0x1);
        gbc.writeMem(0x4f91, { 0xcb, 0x56 });
        gbc.writeMem(0x7dc2, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4e98);
        EXPECT(gbc.pc(), 0x4f93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 01CF
        gbc.setState(0xc524, 0x26f5, 0xf260, 0x9d5f, 0x28a4, 0x96af, 0x1, 0x1);
        gbc.writeMem(0x96af, { 0x2e });
        gbc.writeMem(0xc524, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x26f5);
        EXPECT(gbc.pc(), 0xc526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96af), 0x2e);
        EXPECT(gbc.readMem(0xc524), 0xcb);
        EXPECT(gbc.readMem(0xc525), 0x56);
        // CB 56 01D1
        gbc.setState(0x5c64, 0x806d, 0x2c30, 0x8756, 0x8823, 0xb8ee, 0x1, 0x0);
        gbc.writeMem(0x5c64, { 0xcb, 0x56 });
        gbc.writeMem(0xb8ee, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x806d);
        EXPECT(gbc.pc(), 0x5c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ee), 0x5d);
        // CB 56 01D2
        gbc.setState(0xeba1, 0xaecc, 0x9f30, 0x8975, 0x1d29, 0x61f8, 0x0, 0x0);
        gbc.writeMem(0x61f8, { 0xc5 });
        gbc.writeMem(0xeba1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xaecc);
        EXPECT(gbc.pc(), 0xeba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba1), 0xcb);
        EXPECT(gbc.readMem(0xeba2), 0x56);
        // CB 56 01D3
        gbc.setState(0x37cb, 0x3f0d, 0x360, 0x95f6, 0x9bc4, 0x47dd, 0x0, 0x1);
        gbc.writeMem(0x37cb, { 0xcb, 0x56 });
        gbc.writeMem(0x47dd, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3f0d);
        EXPECT(gbc.pc(), 0x37cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 01D5
        gbc.setState(0x1ed1, 0xf29c, 0x77c0, 0xd239, 0xf564, 0xfa03, 0x1, 0x0);
        gbc.writeMem(0x1ed1, { 0xcb, 0x56 });
        gbc.writeMem(0xfa03, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf29c);
        EXPECT(gbc.pc(), 0x1ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa03), 0xf0);
        // CB 56 01D6
        gbc.setState(0xbc46, 0xc543, 0x1a30, 0x345e, 0x7f0c, 0x7b90, 0x0, 0x1);
        gbc.writeMem(0x7b90, { 0x67 });
        gbc.writeMem(0xbc46, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc543);
        EXPECT(gbc.pc(), 0xbc48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc46), 0xcb);
        EXPECT(gbc.readMem(0xbc47), 0x56);
        // CB 56 01D7
        gbc.setState(0xb1ab, 0x19b2, 0x7e40, 0x8d9a, 0xca9a, 0xc0dd, 0x1, 0x1);
        gbc.writeMem(0xb1ab, { 0xcb, 0x56 });
        gbc.writeMem(0xc0dd, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x19b2);
        EXPECT(gbc.pc(), 0xb1ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ab), 0xcb);
        EXPECT(gbc.readMem(0xb1ac), 0x56);
        EXPECT(gbc.readMem(0xc0dd), 0x5c);
        // CB 56 01D8
        gbc.setState(0x4c05, 0x5ac, 0xfcd0, 0xe04e, 0xeb6f, 0xcc47, 0x1, 0x0);
        gbc.writeMem(0x4c05, { 0xcb, 0x56 });
        gbc.writeMem(0xcc47, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5ac);
        EXPECT(gbc.pc(), 0x4c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc47), 0xcb);
        // CB 56 01D9
        gbc.setState(0xedc2, 0xf9e5, 0xac70, 0xfdc, 0x840b, 0x7e62, 0x0, 0x1);
        gbc.writeMem(0x7e62, { 0x96 });
        gbc.writeMem(0xedc2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf9e5);
        EXPECT(gbc.pc(), 0xedc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedc2), 0xcb);
        EXPECT(gbc.readMem(0xedc3), 0x56);
        // CB 56 01DA
        gbc.setState(0xa3e5, 0xb7e6, 0xa2c0, 0xc8, 0xd48a, 0x1284, 0x0, 0x1);
        gbc.writeMem(0x1284, { 0x77 });
        gbc.writeMem(0xa3e5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb7e6);
        EXPECT(gbc.pc(), 0xa3e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e5), 0xcb);
        EXPECT(gbc.readMem(0xa3e6), 0x56);
        // CB 56 01DB
        gbc.setState(0x5568, 0xca1b, 0xcd30, 0x85ce, 0x6c80, 0x6ae9, 0x1, 0x0);
        gbc.writeMem(0x5568, { 0xcb, 0x56 });
        gbc.writeMem(0x6ae9, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xca1b);
        EXPECT(gbc.pc(), 0x556a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 01DC
        gbc.setState(0xb2f9, 0xcac9, 0x4450, 0x33fc, 0x99f0, 0x880, 0x0, 0x0);
        gbc.writeMem(0x880, { 0xc4 });
        gbc.writeMem(0xb2f9, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcac9);
        EXPECT(gbc.pc(), 0xb2fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f9), 0xcb);
        EXPECT(gbc.readMem(0xb2fa), 0x56);
        // CB 56 01DD
        gbc.setState(0xd042, 0xdfb6, 0x1dc0, 0x5bb6, 0xff4e, 0xebbe, 0x0, 0x1);
        gbc.writeMem(0xd042, { 0xcb, 0x56 });
        gbc.writeMem(0xebbe, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xdfb6);
        EXPECT(gbc.pc(), 0xd044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd042), 0xcb);
        EXPECT(gbc.readMem(0xd043), 0x56);
        EXPECT(gbc.readMem(0xebbe), 0x16);
        // CB 56 01DF
        gbc.setState(0x4b60, 0xba6, 0xf6e0, 0x808b, 0x657c, 0x1bc0, 0x0, 0x0);
        gbc.writeMem(0x1bc0, { 0xb7 });
        gbc.writeMem(0x4b60, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xba6);
        EXPECT(gbc.pc(), 0x4b62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 01E0
        gbc.setState(0x2565, 0x6eab, 0xdf60, 0x7b4a, 0x4921, 0x5d8b, 0x0, 0x0);
        gbc.writeMem(0x2565, { 0xcb, 0x56 });
        gbc.writeMem(0x5d8b, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6eab);
        EXPECT(gbc.pc(), 0x2567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 01E1
        gbc.setState(0x877a, 0x2471, 0xce0, 0xf1d1, 0xb220, 0x7a36, 0x0, 0x1);
        gbc.writeMem(0x7a36, { 0x60 });
        gbc.writeMem(0x877a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2471);
        EXPECT(gbc.pc(), 0x877c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x877a), 0xcb);
        EXPECT(gbc.readMem(0x877b), 0x56);
        // CB 56 01E2
        gbc.setState(0x4942, 0xc54f, 0xed10, 0xde45, 0x8eb2, 0x5b0c, 0x1, 0x1);
        gbc.writeMem(0x4942, { 0xcb, 0x56 });
        gbc.writeMem(0x5b0c, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc54f);
        EXPECT(gbc.pc(), 0x4944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 01E3
        gbc.setState(0x221b, 0xb69f, 0x1ae0, 0x24b8, 0x5ce9, 0x579, 0x1, 0x1);
        gbc.writeMem(0x579, { 0x54 });
        gbc.writeMem(0x221b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb69f);
        EXPECT(gbc.pc(), 0x221d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 01E4
        gbc.setState(0x6deb, 0xf2d6, 0x3200, 0xd354, 0xbb9e, 0x9b23, 0x0, 0x0);
        gbc.writeMem(0x6deb, { 0xcb, 0x56 });
        gbc.writeMem(0x9b23, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf2d6);
        EXPECT(gbc.pc(), 0x6ded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b23), 0x92);
        // CB 56 01E5
        gbc.setState(0xb8d5, 0xb11b, 0x2720, 0xcd79, 0x19ae, 0x1274, 0x0, 0x1);
        gbc.writeMem(0x1274, { 0xb9 });
        gbc.writeMem(0xb8d5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb11b);
        EXPECT(gbc.pc(), 0xb8d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d5), 0xcb);
        EXPECT(gbc.readMem(0xb8d6), 0x56);
        // CB 56 01E6
        gbc.setState(0xcb4a, 0xd4d2, 0x5a80, 0xa9d1, 0xfad5, 0x1e7e, 0x1, 0x1);
        gbc.writeMem(0x1e7e, { 0x6 });
        gbc.writeMem(0xcb4a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd4d2);
        EXPECT(gbc.pc(), 0xcb4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb4a), 0xcb);
        EXPECT(gbc.readMem(0xcb4b), 0x56);
        // CB 56 01E7
        gbc.setState(0x7f90, 0xf136, 0xda60, 0xe232, 0x38be, 0x9a20, 0x0, 0x0);
        gbc.writeMem(0x7f90, { 0xcb, 0x56 });
        gbc.writeMem(0x9a20, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf136);
        EXPECT(gbc.pc(), 0x7f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a20), 0x4b);
        // CB 56 01E8
        gbc.setState(0x97a0, 0x35a2, 0x8420, 0x115a, 0x4e7, 0x8893, 0x1, 0x1);
        gbc.writeMem(0x8893, { 0xc });
        gbc.writeMem(0x97a0, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x35a2);
        EXPECT(gbc.pc(), 0x97a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8893), 0xc);
        EXPECT(gbc.readMem(0x97a0), 0xcb);
        EXPECT(gbc.readMem(0x97a1), 0x56);
        // CB 56 01E9
        gbc.setState(0x13db, 0xeb, 0xef90, 0xa328, 0x2b96, 0xfaae, 0x1, 0x0);
        gbc.writeMem(0x13db, { 0xcb, 0x56 });
        gbc.writeMem(0xfaae, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xeb);
        EXPECT(gbc.pc(), 0x13dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfaae), 0xda);
        // CB 56 01EA
        gbc.setState(0x13bd, 0xcad8, 0xeaf0, 0x22bb, 0xb290, 0xe28, 0x1, 0x0);
        gbc.writeMem(0xe28, { 0x40 });
        gbc.writeMem(0x13bd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xcad8);
        EXPECT(gbc.pc(), 0x13bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 01EB
        gbc.setState(0x7966, 0xbaef, 0xff0, 0x93e2, 0xbd78, 0x8f94, 0x0, 0x0);
        gbc.writeMem(0x7966, { 0xcb, 0x56 });
        gbc.writeMem(0x8f94, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbaef);
        EXPECT(gbc.pc(), 0x7968);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f94), 0xfa);
        // CB 56 01EC
        gbc.setState(0xd804, 0x918c, 0xf700, 0xa59, 0x75fa, 0xcb33, 0x1, 0x1);
        gbc.writeMem(0xcb33, { 0x5f });
        gbc.writeMem(0xd804, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x918c);
        EXPECT(gbc.pc(), 0xd806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb33), 0x5f);
        EXPECT(gbc.readMem(0xd804), 0xcb);
        EXPECT(gbc.readMem(0xd805), 0x56);
        // CB 56 01ED
        gbc.setState(0xdf7, 0x395e, 0xdfd0, 0x185f, 0x81c, 0xb876, 0x0, 0x1);
        gbc.writeMem(0xdf7, { 0xcb, 0x56 });
        gbc.writeMem(0xb876, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x395e);
        EXPECT(gbc.pc(), 0xdf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb876), 0x16);
        // CB 56 01EE
        gbc.setState(0x648f, 0x1018, 0xfa50, 0x6db1, 0xe10f, 0xcc21, 0x0, 0x0);
        gbc.writeMem(0x648f, { 0xcb, 0x56 });
        gbc.writeMem(0xcc21, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1018);
        EXPECT(gbc.pc(), 0x6491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc21), 0x9a);
        // CB 56 01F0
        gbc.setState(0x66a7, 0xad76, 0x7c30, 0x19c5, 0x178c, 0xa1ea, 0x0, 0x0);
        gbc.writeMem(0x66a7, { 0xcb, 0x56 });
        gbc.writeMem(0xa1ea, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xad76);
        EXPECT(gbc.pc(), 0x66a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ea), 0xf6);
        // CB 56 01F1
        gbc.setState(0x29dc, 0x73ea, 0x7000, 0xba3a, 0x8552, 0xf201, 0x0, 0x1);
        gbc.writeMem(0x29dc, { 0xcb, 0x56 });
        gbc.writeMem(0xf201, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x73ea);
        EXPECT(gbc.pc(), 0x29de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf201), 0x21);
        // CB 56 01F2
        gbc.setState(0x380a, 0x4fa1, 0x2e0, 0x9815, 0x5ab2, 0xaecb, 0x0, 0x0);
        gbc.writeMem(0x380a, { 0xcb, 0x56 });
        gbc.writeMem(0xaecb, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4fa1);
        EXPECT(gbc.pc(), 0x380c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaecb), 0xa4);
        // CB 56 01F3
        gbc.setState(0x2b07, 0x5942, 0xd270, 0xe550, 0x7185, 0x479a, 0x1, 0x0);
        gbc.writeMem(0x2b07, { 0xcb, 0x56 });
        gbc.writeMem(0x479a, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5942);
        EXPECT(gbc.pc(), 0x2b09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 01F4
        gbc.setState(0x7ef9, 0xdaf4, 0x4be0, 0x12e6, 0x1744, 0xf144, 0x0, 0x1);
        gbc.writeMem(0x7ef9, { 0xcb, 0x56 });
        gbc.writeMem(0xf144, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xdaf4);
        EXPECT(gbc.pc(), 0x7efb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf144), 0x38);
        // CB 56 01F5
        gbc.setState(0xcd56, 0x8de3, 0x4470, 0xe4fc, 0xf98d, 0xc756, 0x1, 0x1);
        gbc.writeMem(0xc756, { 0x96 });
        gbc.writeMem(0xcd56, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8de3);
        EXPECT(gbc.pc(), 0xcd58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc756), 0x96);
        EXPECT(gbc.readMem(0xcd56), 0xcb);
        EXPECT(gbc.readMem(0xcd57), 0x56);
        // CB 56 01F6
        gbc.setState(0xe491, 0x52fe, 0x5f80, 0x4a20, 0xa2b3, 0x6ef5, 0x1, 0x1);
        gbc.writeMem(0x6ef5, { 0xb0 });
        gbc.writeMem(0xe491, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x52fe);
        EXPECT(gbc.pc(), 0xe493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe491), 0xcb);
        EXPECT(gbc.readMem(0xe492), 0x56);
        // CB 56 01F7
        gbc.setState(0xd1f6, 0x5b2, 0xb7a0, 0x2aca, 0x4717, 0x33a, 0x1, 0x1);
        gbc.writeMem(0x33a, { 0x6 });
        gbc.writeMem(0xd1f6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5b2);
        EXPECT(gbc.pc(), 0xd1f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f6), 0xcb);
        EXPECT(gbc.readMem(0xd1f7), 0x56);
        // CB 56 01F8
        gbc.setState(0x9012, 0x88c6, 0xa80, 0xed24, 0xbfee, 0xc6e, 0x1, 0x1);
        gbc.writeMem(0xc6e, { 0xb9 });
        gbc.writeMem(0x9012, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x88c6);
        EXPECT(gbc.pc(), 0x9014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9012), 0xcb);
        EXPECT(gbc.readMem(0x9013), 0x56);
        // CB 56 01F9
        gbc.setState(0x1c7, 0xcc11, 0x6d80, 0xbe2a, 0xfed1, 0x1328, 0x0, 0x0);
        gbc.writeMem(0x1c7, { 0xcb, 0x56 });
        gbc.writeMem(0x1328, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xcc11);
        EXPECT(gbc.pc(), 0x1c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 01FA
        gbc.setState(0x4d1b, 0x9885, 0x6500, 0xc4a9, 0x53f4, 0x2af9, 0x1, 0x1);
        gbc.writeMem(0x2af9, { 0xce });
        gbc.writeMem(0x4d1b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9885);
        EXPECT(gbc.pc(), 0x4d1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 01FB
        gbc.setState(0x2393, 0x4c5f, 0xf730, 0x12c9, 0x2a10, 0x4838, 0x0, 0x0);
        gbc.writeMem(0x2393, { 0xcb, 0x56 });
        gbc.writeMem(0x4838, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4c5f);
        EXPECT(gbc.pc(), 0x2395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 01FC
        gbc.setState(0xea26, 0xc3a0, 0x2d70, 0x37e6, 0x67ed, 0x1ea5, 0x0, 0x0);
        gbc.writeMem(0x1ea5, { 0x90 });
        gbc.writeMem(0xea26, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc3a0);
        EXPECT(gbc.pc(), 0xea28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea26), 0xcb);
        EXPECT(gbc.readMem(0xea27), 0x56);
        // CB 56 01FD
        gbc.setState(0x3ba5, 0x4a56, 0x72a0, 0x14c6, 0x137d, 0x7c55, 0x1, 0x1);
        gbc.writeMem(0x3ba5, { 0xcb, 0x56 });
        gbc.writeMem(0x7c55, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4a56);
        EXPECT(gbc.pc(), 0x3ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 01FE
        gbc.setState(0xdfad, 0xbcb0, 0x5f00, 0x6182, 0x8ac7, 0xed31, 0x1, 0x1);
        gbc.writeMem(0xdfad, { 0xcb, 0x56 });
        gbc.writeMem(0xed31, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbcb0);
        EXPECT(gbc.pc(), 0xdfaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfad), 0xcb);
        EXPECT(gbc.readMem(0xdfae), 0x56);
        EXPECT(gbc.readMem(0xed31), 0x1c);
        // CB 56 01FF
        gbc.setState(0x7b6, 0xed15, 0xc370, 0xac14, 0xfe0f, 0xbef8, 0x1, 0x1);
        gbc.writeMem(0x7b6, { 0xcb, 0x56 });
        gbc.writeMem(0xbef8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xed15);
        EXPECT(gbc.pc(), 0x7b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef8), 0x58);
        // CB 56 0200
        gbc.setState(0x6ce3, 0x685f, 0x3660, 0xc99a, 0x1ef7, 0x7106, 0x1, 0x0);
        gbc.writeMem(0x6ce3, { 0xcb, 0x56 });
        gbc.writeMem(0x7106, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x685f);
        EXPECT(gbc.pc(), 0x6ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0201
        gbc.setState(0x514f, 0x7c2d, 0xa710, 0x93fc, 0x7fe7, 0x716b, 0x1, 0x1);
        gbc.writeMem(0x514f, { 0xcb, 0x56 });
        gbc.writeMem(0x716b, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7c2d);
        EXPECT(gbc.pc(), 0x5151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0202
        gbc.setState(0xbfa7, 0x4cfd, 0x7050, 0x4901, 0x3564, 0xcb66, 0x0, 0x0);
        gbc.writeMem(0xbfa7, { 0xcb, 0x56 });
        gbc.writeMem(0xcb66, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4cfd);
        EXPECT(gbc.pc(), 0xbfa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa7), 0xcb);
        EXPECT(gbc.readMem(0xbfa8), 0x56);
        EXPECT(gbc.readMem(0xcb66), 0xee);
        // CB 56 0203
        gbc.setState(0xac8a, 0x8872, 0xa4f0, 0x3a66, 0xae58, 0x80f2, 0x1, 0x1);
        gbc.writeMem(0x80f2, { 0x15 });
        gbc.writeMem(0xac8a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8872);
        EXPECT(gbc.pc(), 0xac8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f2), 0x15);
        EXPECT(gbc.readMem(0xac8a), 0xcb);
        EXPECT(gbc.readMem(0xac8b), 0x56);
        // CB 56 0204
        gbc.setState(0x978b, 0xd177, 0xce10, 0xad13, 0xc2c8, 0xfd92, 0x0, 0x1);
        gbc.writeMem(0x978b, { 0xcb, 0x56 });
        gbc.writeMem(0xfd92, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd177);
        EXPECT(gbc.pc(), 0x978d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x978b), 0xcb);
        EXPECT(gbc.readMem(0x978c), 0x56);
        EXPECT(gbc.readMem(0xfd92), 0x80);
        // CB 56 0205
        gbc.setState(0x7db4, 0x6f0e, 0x50, 0x879c, 0x17d4, 0x4bfb, 0x1, 0x0);
        gbc.writeMem(0x4bfb, { 0xbc });
        gbc.writeMem(0x7db4, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6f0e);
        EXPECT(gbc.pc(), 0x7db6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0206
        gbc.setState(0x91ea, 0x257e, 0x46b0, 0xcefe, 0x50dd, 0xf8cb, 0x1, 0x1);
        gbc.writeMem(0x91ea, { 0xcb, 0x56 });
        gbc.writeMem(0xf8cb, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x257e);
        EXPECT(gbc.pc(), 0x91ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91ea), 0xcb);
        EXPECT(gbc.readMem(0x91eb), 0x56);
        EXPECT(gbc.readMem(0xf8cb), 0x2a);
        // CB 56 0207
        gbc.setState(0xa11a, 0x1a7b, 0x33a0, 0x91f3, 0x7632, 0x66cb, 0x1, 0x1);
        gbc.writeMem(0x66cb, { 0xe2 });
        gbc.writeMem(0xa11a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1a7b);
        EXPECT(gbc.pc(), 0xa11c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa11a), 0xcb);
        EXPECT(gbc.readMem(0xa11b), 0x56);
        // CB 56 0208
        gbc.setState(0xc90f, 0x9370, 0x7640, 0x291e, 0x1243, 0xdcea, 0x0, 0x0);
        gbc.writeMem(0xc90f, { 0xcb, 0x56 });
        gbc.writeMem(0xdcea, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9370);
        EXPECT(gbc.pc(), 0xc911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc90f), 0xcb);
        EXPECT(gbc.readMem(0xc910), 0x56);
        EXPECT(gbc.readMem(0xdcea), 0x7a);
        // CB 56 0209
        gbc.setState(0x47c6, 0x5eac, 0xcd90, 0x34b7, 0xed5a, 0x3961, 0x0, 0x0);
        gbc.writeMem(0x3961, { 0x4a });
        gbc.writeMem(0x47c6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5eac);
        EXPECT(gbc.pc(), 0x47c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 020B
        gbc.setState(0xc29d, 0x46ad, 0xe570, 0x7e05, 0x71a, 0x5c13, 0x1, 0x0);
        gbc.writeMem(0x5c13, { 0x3e });
        gbc.writeMem(0xc29d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x46ad);
        EXPECT(gbc.pc(), 0xc29f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc29d), 0xcb);
        EXPECT(gbc.readMem(0xc29e), 0x56);
        // CB 56 020C
        gbc.setState(0xb9a5, 0x846c, 0xcbf0, 0xf798, 0x16bd, 0xa387, 0x0, 0x0);
        gbc.writeMem(0xa387, { 0x82 });
        gbc.writeMem(0xb9a5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x846c);
        EXPECT(gbc.pc(), 0xb9a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa387), 0x82);
        EXPECT(gbc.readMem(0xb9a5), 0xcb);
        EXPECT(gbc.readMem(0xb9a6), 0x56);
        // CB 56 020D
        gbc.setState(0x317f, 0x868c, 0xec60, 0xf164, 0x8570, 0x90d1, 0x1, 0x1);
        gbc.writeMem(0x317f, { 0xcb, 0x56 });
        gbc.writeMem(0x90d1, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x868c);
        EXPECT(gbc.pc(), 0x3181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d1), 0xed);
        // CB 56 020E
        gbc.setState(0xafce, 0x32d6, 0x1530, 0x8472, 0x6fee, 0xdd7c, 0x0, 0x1);
        gbc.writeMem(0xafce, { 0xcb, 0x56 });
        gbc.writeMem(0xdd7c, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x32d6);
        EXPECT(gbc.pc(), 0xafd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafce), 0xcb);
        EXPECT(gbc.readMem(0xafcf), 0x56);
        EXPECT(gbc.readMem(0xdd7c), 0xf2);
        // CB 56 020F
        gbc.setState(0x7a4a, 0x3136, 0x1940, 0xada5, 0xd81c, 0x43a7, 0x1, 0x1);
        gbc.writeMem(0x43a7, { 0x26 });
        gbc.writeMem(0x7a4a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3136);
        EXPECT(gbc.pc(), 0x7a4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0210
        gbc.setState(0xc105, 0x564a, 0x6930, 0xa569, 0x6f2c, 0x6c22, 0x0, 0x0);
        gbc.writeMem(0x6c22, { 0x58 });
        gbc.writeMem(0xc105, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x564a);
        EXPECT(gbc.pc(), 0xc107);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc105), 0xcb);
        EXPECT(gbc.readMem(0xc106), 0x56);
        // CB 56 0211
        gbc.setState(0x9b34, 0xf699, 0x3790, 0x6177, 0x4ccb, 0xa301, 0x1, 0x1);
        gbc.writeMem(0x9b34, { 0xcb, 0x56 });
        gbc.writeMem(0xa301, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf699);
        EXPECT(gbc.pc(), 0x9b36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b34), 0xcb);
        EXPECT(gbc.readMem(0x9b35), 0x56);
        EXPECT(gbc.readMem(0xa301), 0x5b);
        // CB 56 0212
        gbc.setState(0xfcf, 0xbd9e, 0x2910, 0x6084, 0x8b36, 0x8e3e, 0x1, 0x1);
        gbc.writeMem(0xfcf, { 0xcb, 0x56 });
        gbc.writeMem(0x8e3e, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbd9e);
        EXPECT(gbc.pc(), 0xfd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e3e), 0xa0);
        // CB 56 0213
        gbc.setState(0x2fea, 0x191e, 0x41b0, 0x3f1c, 0x6e40, 0x6ca5, 0x0, 0x1);
        gbc.writeMem(0x2fea, { 0xcb, 0x56 });
        gbc.writeMem(0x6ca5, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x191e);
        EXPECT(gbc.pc(), 0x2fec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0214
        gbc.setState(0x5afd, 0x5afe, 0x4e40, 0xca89, 0x8fb2, 0x5143, 0x0, 0x1);
        gbc.writeMem(0x5143, { 0xb3 });
        gbc.writeMem(0x5afd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x5afe);
        EXPECT(gbc.pc(), 0x5aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0215
        gbc.setState(0xc246, 0xa2c3, 0x3aa0, 0x5976, 0xc78, 0x3052, 0x1, 0x0);
        gbc.writeMem(0x3052, { 0xef });
        gbc.writeMem(0xc246, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa2c3);
        EXPECT(gbc.pc(), 0xc248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc246), 0xcb);
        EXPECT(gbc.readMem(0xc247), 0x56);
        // CB 56 0216
        gbc.setState(0xc0ac, 0x57bd, 0x26e0, 0xe7e2, 0xe476, 0x728, 0x1, 0x0);
        gbc.writeMem(0x728, { 0xa4 });
        gbc.writeMem(0xc0ac, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x57bd);
        EXPECT(gbc.pc(), 0xc0ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ac), 0xcb);
        EXPECT(gbc.readMem(0xc0ad), 0x56);
        // CB 56 0217
        gbc.setState(0xd037, 0x3be0, 0x6100, 0x41eb, 0x34d, 0xadaa, 0x1, 0x1);
        gbc.writeMem(0xadaa, { 0xd2 });
        gbc.writeMem(0xd037, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3be0);
        EXPECT(gbc.pc(), 0xd039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadaa), 0xd2);
        EXPECT(gbc.readMem(0xd037), 0xcb);
        EXPECT(gbc.readMem(0xd038), 0x56);
        // CB 56 0218
        gbc.setState(0xb56d, 0xbbf0, 0x9920, 0x461, 0x6fe1, 0x24ae, 0x1, 0x0);
        gbc.writeMem(0x24ae, { 0xe0 });
        gbc.writeMem(0xb56d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xbbf0);
        EXPECT(gbc.pc(), 0xb56f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb56d), 0xcb);
        EXPECT(gbc.readMem(0xb56e), 0x56);
        // CB 56 0219
        gbc.setState(0xec95, 0x8760, 0x9eb0, 0x4bb1, 0xf117, 0xb2a3, 0x0, 0x0);
        gbc.writeMem(0xb2a3, { 0x25 });
        gbc.writeMem(0xec95, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8760);
        EXPECT(gbc.pc(), 0xec97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2a3), 0x25);
        EXPECT(gbc.readMem(0xec95), 0xcb);
        EXPECT(gbc.readMem(0xec96), 0x56);
        // CB 56 021A
        gbc.setState(0x8b76, 0x7d40, 0x5f80, 0xd2cd, 0x25c4, 0x1564, 0x1, 0x1);
        gbc.writeMem(0x1564, { 0x58 });
        gbc.writeMem(0x8b76, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7d40);
        EXPECT(gbc.pc(), 0x8b78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b76), 0xcb);
        EXPECT(gbc.readMem(0x8b77), 0x56);
        // CB 56 021C
        gbc.setState(0x21c0, 0x8964, 0x91d0, 0xe616, 0xffbf, 0x3b8f, 0x1, 0x0);
        gbc.writeMem(0x21c0, { 0xcb, 0x56 });
        gbc.writeMem(0x3b8f, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8964);
        EXPECT(gbc.pc(), 0x21c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 021D
        gbc.setState(0x4cd6, 0x9655, 0xbdf0, 0x8436, 0xf89e, 0x338a, 0x0, 0x1);
        gbc.writeMem(0x338a, { 0x38 });
        gbc.writeMem(0x4cd6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9655);
        EXPECT(gbc.pc(), 0x4cd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 021E
        gbc.setState(0x5f21, 0xe198, 0x69f0, 0x390c, 0xde36, 0x7b8e, 0x0, 0x0);
        gbc.writeMem(0x5f21, { 0xcb, 0x56 });
        gbc.writeMem(0x7b8e, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe198);
        EXPECT(gbc.pc(), 0x5f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0220
        gbc.setState(0xa07, 0xfdbf, 0x6e30, 0x4796, 0x6e16, 0x8d11, 0x1, 0x1);
        gbc.writeMem(0xa07, { 0xcb, 0x56 });
        gbc.writeMem(0x8d11, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xfdbf);
        EXPECT(gbc.pc(), 0xa09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d11), 0x34);
        // CB 56 0221
        gbc.setState(0x1899, 0x797d, 0xaf0, 0x4553, 0xc775, 0x39a1, 0x1, 0x1);
        gbc.writeMem(0x1899, { 0xcb, 0x56 });
        gbc.writeMem(0x39a1, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x797d);
        EXPECT(gbc.pc(), 0x189b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0222
        gbc.setState(0xd9d5, 0x42b8, 0xffa0, 0xfe79, 0x2785, 0x8ff, 0x1, 0x1);
        gbc.writeMem(0x8ff, { 0x3f });
        gbc.writeMem(0xd9d5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x42b8);
        EXPECT(gbc.pc(), 0xd9d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d5), 0xcb);
        EXPECT(gbc.readMem(0xd9d6), 0x56);
        // CB 56 0223
        gbc.setState(0x494f, 0x105e, 0x5170, 0x2211, 0x49df, 0xa924, 0x1, 0x1);
        gbc.writeMem(0x494f, { 0xcb, 0x56 });
        gbc.writeMem(0xa924, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x105e);
        EXPECT(gbc.pc(), 0x4951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa924), 0x2a);
        // CB 56 0224
        gbc.setState(0x2448, 0x5397, 0x65b0, 0xc9cb, 0xc264, 0x9572, 0x1, 0x1);
        gbc.writeMem(0x2448, { 0xcb, 0x56 });
        gbc.writeMem(0x9572, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5397);
        EXPECT(gbc.pc(), 0x244a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9572), 0x15);
        // CB 56 0225
        gbc.setState(0xb171, 0x4a6f, 0x9f50, 0x5010, 0x19e4, 0x42f2, 0x0, 0x0);
        gbc.writeMem(0x42f2, { 0x70 });
        gbc.writeMem(0xb171, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4a6f);
        EXPECT(gbc.pc(), 0xb173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb171), 0xcb);
        EXPECT(gbc.readMem(0xb172), 0x56);
        // CB 56 0226
        gbc.setState(0x7e43, 0x1f6b, 0x4a0, 0xe7ac, 0x58bb, 0xa056, 0x1, 0x0);
        gbc.writeMem(0x7e43, { 0xcb, 0x56 });
        gbc.writeMem(0xa056, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1f6b);
        EXPECT(gbc.pc(), 0x7e45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa056), 0x9e);
        // CB 56 0227
        gbc.setState(0xcf49, 0xa601, 0x1b90, 0xa297, 0x692, 0xa4bb, 0x1, 0x0);
        gbc.writeMem(0xa4bb, { 0x7d });
        gbc.writeMem(0xcf49, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa601);
        EXPECT(gbc.pc(), 0xcf4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4bb), 0x7d);
        EXPECT(gbc.readMem(0xcf49), 0xcb);
        EXPECT(gbc.readMem(0xcf4a), 0x56);
        // CB 56 0228
        gbc.setState(0x5fd6, 0x83ba, 0x8740, 0x8617, 0x6879, 0x73f5, 0x0, 0x0);
        gbc.writeMem(0x5fd6, { 0xcb, 0x56 });
        gbc.writeMem(0x73f5, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x83ba);
        EXPECT(gbc.pc(), 0x5fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0229
        gbc.setState(0xd7c, 0xdd74, 0x79a0, 0x58f0, 0xd5be, 0x5bbb, 0x0, 0x1);
        gbc.writeMem(0xd7c, { 0xcb, 0x56 });
        gbc.writeMem(0x5bbb, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xdd74);
        EXPECT(gbc.pc(), 0xd7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 022A
        gbc.setState(0x4871, 0xc62e, 0xf390, 0x5b15, 0x1512, 0xf019, 0x1, 0x1);
        gbc.writeMem(0x4871, { 0xcb, 0x56 });
        gbc.writeMem(0xf019, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc62e);
        EXPECT(gbc.pc(), 0x4873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf019), 0xc2);
        // CB 56 022B
        gbc.setState(0x758, 0x259f, 0x6830, 0x7601, 0xd277, 0x80b4, 0x0, 0x1);
        gbc.writeMem(0x758, { 0xcb, 0x56 });
        gbc.writeMem(0x80b4, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x259f);
        EXPECT(gbc.pc(), 0x75a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80b4), 0x2c);
        // CB 56 022C
        gbc.setState(0x26ee, 0x671e, 0x1490, 0x885e, 0xefc7, 0x919b, 0x1, 0x1);
        gbc.writeMem(0x26ee, { 0xcb, 0x56 });
        gbc.writeMem(0x919b, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x671e);
        EXPECT(gbc.pc(), 0x26f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x919b), 0x5d);
        // CB 56 022D
        gbc.setState(0xc2db, 0x9ff3, 0xe240, 0x9ceb, 0x42f8, 0xc129, 0x0, 0x0);
        gbc.writeMem(0xc129, { 0x5 });
        gbc.writeMem(0xc2db, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9ff3);
        EXPECT(gbc.pc(), 0xc2dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc129), 0x5);
        EXPECT(gbc.readMem(0xc2db), 0xcb);
        EXPECT(gbc.readMem(0xc2dc), 0x56);
        // CB 56 022E
        gbc.setState(0xca1, 0x9ea6, 0xde80, 0x15d4, 0x91e9, 0x2572, 0x1, 0x1);
        gbc.writeMem(0xca1, { 0xcb, 0x56 });
        gbc.writeMem(0x2572, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9ea6);
        EXPECT(gbc.pc(), 0xca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 022F
        gbc.setState(0x9952, 0x149b, 0x1570, 0x5bd4, 0xb95, 0xc5ec, 0x0, 0x1);
        gbc.writeMem(0x9952, { 0xcb, 0x56 });
        gbc.writeMem(0xc5ec, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x149b);
        EXPECT(gbc.pc(), 0x9954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9952), 0xcb);
        EXPECT(gbc.readMem(0x9953), 0x56);
        EXPECT(gbc.readMem(0xc5ec), 0xfe);
        // CB 56 0230
        gbc.setState(0x2b76, 0x814b, 0xabe0, 0x56c1, 0x95fd, 0x2cd1, 0x1, 0x1);
        gbc.writeMem(0x2b76, { 0xcb, 0x56 });
        gbc.writeMem(0x2cd1, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x814b);
        EXPECT(gbc.pc(), 0x2b78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0231
        gbc.setState(0xdcf2, 0x7c2c, 0xd9c0, 0xce56, 0x2099, 0xc44e, 0x0, 0x0);
        gbc.writeMem(0xc44e, { 0xfb });
        gbc.writeMem(0xdcf2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7c2c);
        EXPECT(gbc.pc(), 0xdcf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc44e), 0xfb);
        EXPECT(gbc.readMem(0xdcf2), 0xcb);
        EXPECT(gbc.readMem(0xdcf3), 0x56);
        // CB 56 0232
        gbc.setState(0xe6dc, 0x4b7d, 0x6220, 0xd7f, 0xee50, 0x6c7d, 0x1, 0x1);
        gbc.writeMem(0x6c7d, { 0x7e });
        gbc.writeMem(0xe6dc, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4b7d);
        EXPECT(gbc.pc(), 0xe6de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6dc), 0xcb);
        EXPECT(gbc.readMem(0xe6dd), 0x56);
        // CB 56 0233
        gbc.setState(0x4d40, 0x5abb, 0x75a0, 0xdd4b, 0x32b4, 0x9f3a, 0x0, 0x0);
        gbc.writeMem(0x4d40, { 0xcb, 0x56 });
        gbc.writeMem(0x9f3a, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5abb);
        EXPECT(gbc.pc(), 0x4d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f3a), 0xb);
        // CB 56 0234
        gbc.setState(0x7235, 0x32b1, 0x9f0, 0x252, 0x55bb, 0x7937, 0x0, 0x1);
        gbc.writeMem(0x7235, { 0xcb, 0x56 });
        gbc.writeMem(0x7937, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x32b1);
        EXPECT(gbc.pc(), 0x7237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0236
        gbc.setState(0xd759, 0xde91, 0x8b80, 0x3422, 0xb43f, 0xc089, 0x1, 0x0);
        gbc.writeMem(0xc089, { 0x31 });
        gbc.writeMem(0xd759, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xde91);
        EXPECT(gbc.pc(), 0xd75b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc089), 0x31);
        EXPECT(gbc.readMem(0xd759), 0xcb);
        EXPECT(gbc.readMem(0xd75a), 0x56);
        // CB 56 0237
        gbc.setState(0x854c, 0x5306, 0xe8a0, 0xb2cd, 0xf54f, 0xc25b, 0x1, 0x1);
        gbc.writeMem(0x854c, { 0xcb, 0x56 });
        gbc.writeMem(0xc25b, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5306);
        EXPECT(gbc.pc(), 0x854e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x854c), 0xcb);
        EXPECT(gbc.readMem(0x854d), 0x56);
        EXPECT(gbc.readMem(0xc25b), 0x88);
        // CB 56 0238
        gbc.setState(0x1664, 0x6f0f, 0x4240, 0x5b81, 0xe3cf, 0x71dc, 0x1, 0x0);
        gbc.writeMem(0x1664, { 0xcb, 0x56 });
        gbc.writeMem(0x71dc, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6f0f);
        EXPECT(gbc.pc(), 0x1666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0239
        gbc.setState(0xaed, 0x4ba1, 0x52a0, 0x4505, 0x6b6f, 0x20b2, 0x1, 0x0);
        gbc.writeMem(0xaed, { 0xcb, 0x56 });
        gbc.writeMem(0x20b2, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4ba1);
        EXPECT(gbc.pc(), 0xaef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 023A
        gbc.setState(0x7810, 0x870a, 0x8760, 0x40bb, 0x3a05, 0x7736, 0x0, 0x1);
        gbc.writeMem(0x7736, { 0x92 });
        gbc.writeMem(0x7810, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x870a);
        EXPECT(gbc.pc(), 0x7812);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 023B
        gbc.setState(0xbb8b, 0x9926, 0x22a0, 0x8c9a, 0xc4f5, 0x6aaf, 0x1, 0x1);
        gbc.writeMem(0x6aaf, { 0xb7 });
        gbc.writeMem(0xbb8b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9926);
        EXPECT(gbc.pc(), 0xbb8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb8b), 0xcb);
        EXPECT(gbc.readMem(0xbb8c), 0x56);
        // CB 56 023C
        gbc.setState(0x6859, 0x3275, 0xcd40, 0x98cb, 0x3b34, 0x6634, 0x0, 0x1);
        gbc.writeMem(0x6634, { 0x6d });
        gbc.writeMem(0x6859, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3275);
        EXPECT(gbc.pc(), 0x685b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 023D
        gbc.setState(0x1128, 0x69e, 0x3660, 0x2824, 0xddd6, 0x788d, 0x0, 0x0);
        gbc.writeMem(0x1128, { 0xcb, 0x56 });
        gbc.writeMem(0x788d, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x69e);
        EXPECT(gbc.pc(), 0x112a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 023E
        gbc.setState(0xc89c, 0x19d8, 0x72e0, 0x85e9, 0xe5, 0xba6, 0x0, 0x0);
        gbc.writeMem(0xba6, { 0x42 });
        gbc.writeMem(0xc89c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x19d8);
        EXPECT(gbc.pc(), 0xc89e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc89c), 0xcb);
        EXPECT(gbc.readMem(0xc89d), 0x56);
        // CB 56 023F
        gbc.setState(0xe5b4, 0xcde9, 0x83c0, 0xb3fa, 0x9c8, 0xa050, 0x1, 0x0);
        gbc.writeMem(0xa050, { 0x64 });
        gbc.writeMem(0xe5b4, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xcde9);
        EXPECT(gbc.pc(), 0xe5b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa050), 0x64);
        EXPECT(gbc.readMem(0xe5b4), 0xcb);
        EXPECT(gbc.readMem(0xe5b5), 0x56);
        // CB 56 0240
        gbc.setState(0xcd55, 0x266, 0x4460, 0x1dea, 0x1b5f, 0xcf5a, 0x0, 0x1);
        gbc.writeMem(0xcd55, { 0xcb, 0x56 });
        gbc.writeMem(0xcf5a, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x266);
        EXPECT(gbc.pc(), 0xcd57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd55), 0xcb);
        EXPECT(gbc.readMem(0xcd56), 0x56);
        EXPECT(gbc.readMem(0xcf5a), 0x63);
        // CB 56 0241
        gbc.setState(0x687b, 0xf0e7, 0xdb0, 0x94f7, 0x398b, 0xecc6, 0x1, 0x1);
        gbc.writeMem(0x687b, { 0xcb, 0x56 });
        gbc.writeMem(0xecc6, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf0e7);
        EXPECT(gbc.pc(), 0x687d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecc6), 0xfc);
        // CB 56 0242
        gbc.setState(0x400f, 0xaac1, 0x5f40, 0x8b70, 0xa60f, 0x566e, 0x1, 0x1);
        gbc.writeMem(0x400f, { 0xcb, 0x56 });
        gbc.writeMem(0x566e, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xaac1);
        EXPECT(gbc.pc(), 0x4011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0243
        gbc.setState(0x4d51, 0x7b50, 0x6790, 0xd238, 0x6e4, 0x1087, 0x0, 0x1);
        gbc.writeMem(0x1087, { 0xa });
        gbc.writeMem(0x4d51, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7b50);
        EXPECT(gbc.pc(), 0x4d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0244
        gbc.setState(0x3626, 0x2e5c, 0x4050, 0x19be, 0xe215, 0x4e43, 0x1, 0x1);
        gbc.writeMem(0x3626, { 0xcb, 0x56 });
        gbc.writeMem(0x4e43, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2e5c);
        EXPECT(gbc.pc(), 0x3628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0245
        gbc.setState(0x83c0, 0xaf63, 0x3170, 0x5938, 0x9f63, 0x151d, 0x1, 0x0);
        gbc.writeMem(0x151d, { 0xde });
        gbc.writeMem(0x83c0, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xaf63);
        EXPECT(gbc.pc(), 0x83c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c0), 0xcb);
        EXPECT(gbc.readMem(0x83c1), 0x56);
        // CB 56 0246
        gbc.setState(0x861d, 0xbf38, 0xe9f0, 0x2568, 0xa00c, 0x554b, 0x0, 0x0);
        gbc.writeMem(0x554b, { 0x54 });
        gbc.writeMem(0x861d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbf38);
        EXPECT(gbc.pc(), 0x861f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x861d), 0xcb);
        EXPECT(gbc.readMem(0x861e), 0x56);
        // CB 56 0247
        gbc.setState(0xc704, 0x5044, 0x77f0, 0x584b, 0x7ea4, 0x5329, 0x1, 0x0);
        gbc.writeMem(0x5329, { 0xb6 });
        gbc.writeMem(0xc704, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5044);
        EXPECT(gbc.pc(), 0xc706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc704), 0xcb);
        EXPECT(gbc.readMem(0xc705), 0x56);
        // CB 56 0248
        gbc.setState(0xe3f5, 0x50dd, 0x9ed0, 0x5b9e, 0xbec, 0x9825, 0x0, 0x1);
        gbc.writeMem(0x9825, { 0x5a });
        gbc.writeMem(0xe3f5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x50dd);
        EXPECT(gbc.pc(), 0xe3f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9825), 0x5a);
        EXPECT(gbc.readMem(0xe3f5), 0xcb);
        EXPECT(gbc.readMem(0xe3f6), 0x56);
        // CB 56 0249
        gbc.setState(0xe6bc, 0x527f, 0xb100, 0x1013, 0xf2a0, 0x8c9a, 0x1, 0x1);
        gbc.writeMem(0x8c9a, { 0xec });
        gbc.writeMem(0xe6bc, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x527f);
        EXPECT(gbc.pc(), 0xe6be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c9a), 0xec);
        EXPECT(gbc.readMem(0xe6bc), 0xcb);
        EXPECT(gbc.readMem(0xe6bd), 0x56);
        // CB 56 024A
        gbc.setState(0xe372, 0x66b9, 0x9450, 0x26ce, 0x1fc9, 0x35ba, 0x1, 0x1);
        gbc.writeMem(0x35ba, { 0x72 });
        gbc.writeMem(0xe372, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x66b9);
        EXPECT(gbc.pc(), 0xe374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe372), 0xcb);
        EXPECT(gbc.readMem(0xe373), 0x56);
        // CB 56 024B
        gbc.setState(0xce02, 0x5c9d, 0xf7d0, 0x7eb8, 0x189b, 0xef19, 0x0, 0x1);
        gbc.writeMem(0xce02, { 0xcb, 0x56 });
        gbc.writeMem(0xef19, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5c9d);
        EXPECT(gbc.pc(), 0xce04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce02), 0xcb);
        EXPECT(gbc.readMem(0xce03), 0x56);
        EXPECT(gbc.readMem(0xef19), 0x9a);
        // CB 56 024C
        gbc.setState(0x28bc, 0xfcb0, 0x7a80, 0x8a0e, 0xe156, 0x53d, 0x0, 0x1);
        gbc.writeMem(0x53d, { 0x7e });
        gbc.writeMem(0x28bc, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xfcb0);
        EXPECT(gbc.pc(), 0x28be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 024D
        gbc.setState(0x2fb4, 0x1180, 0x1250, 0x9b75, 0x35ba, 0x60db, 0x0, 0x1);
        gbc.writeMem(0x2fb4, { 0xcb, 0x56 });
        gbc.writeMem(0x60db, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1180);
        EXPECT(gbc.pc(), 0x2fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 024E
        gbc.setState(0x4245, 0xed8, 0xac20, 0xb840, 0x95f0, 0x5f05, 0x1, 0x0);
        gbc.writeMem(0x4245, { 0xcb, 0x56 });
        gbc.writeMem(0x5f05, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xed8);
        EXPECT(gbc.pc(), 0x4247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 024F
        gbc.setState(0x5efb, 0x12b2, 0x2ff0, 0x9b13, 0x17d9, 0xfad1, 0x0, 0x0);
        gbc.writeMem(0x5efb, { 0xcb, 0x56 });
        gbc.writeMem(0xfad1, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x12b2);
        EXPECT(gbc.pc(), 0x5efd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfad1), 0xb3);
        // CB 56 0250
        gbc.setState(0xce8c, 0x479, 0xef20, 0xd0da, 0xf8b7, 0x970e, 0x0, 0x0);
        gbc.writeMem(0x970e, { 0x96 });
        gbc.writeMem(0xce8c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x479);
        EXPECT(gbc.pc(), 0xce8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x970e), 0x96);
        EXPECT(gbc.readMem(0xce8c), 0xcb);
        EXPECT(gbc.readMem(0xce8d), 0x56);
        // CB 56 0251
        gbc.setState(0xb9f1, 0x6c0e, 0xa310, 0xc95c, 0xcc8d, 0x785, 0x0, 0x1);
        gbc.writeMem(0x785, { 0xd5 });
        gbc.writeMem(0xb9f1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6c0e);
        EXPECT(gbc.pc(), 0xb9f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9f1), 0xcb);
        EXPECT(gbc.readMem(0xb9f2), 0x56);
        // CB 56 0252
        gbc.setState(0xc6e0, 0x5537, 0xce60, 0xdb5a, 0x4e7b, 0xdd5c, 0x0, 0x0);
        gbc.writeMem(0xc6e0, { 0xcb, 0x56 });
        gbc.writeMem(0xdd5c, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5537);
        EXPECT(gbc.pc(), 0xc6e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e0), 0xcb);
        EXPECT(gbc.readMem(0xc6e1), 0x56);
        EXPECT(gbc.readMem(0xdd5c), 0xd5);
        // CB 56 0253
        gbc.setState(0x52e, 0x93da, 0x5880, 0xbc31, 0x9c40, 0xac5d, 0x0, 0x0);
        gbc.writeMem(0x52e, { 0xcb, 0x56 });
        gbc.writeMem(0xac5d, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x93da);
        EXPECT(gbc.pc(), 0x530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac5d), 0x85);
        // CB 56 0254
        gbc.setState(0x4e44, 0x6e1f, 0xa620, 0x74a4, 0x2223, 0x73ce, 0x1, 0x0);
        gbc.writeMem(0x4e44, { 0xcb, 0x56 });
        gbc.writeMem(0x73ce, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6e1f);
        EXPECT(gbc.pc(), 0x4e46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0255
        gbc.setState(0xe275, 0xf079, 0x3ad0, 0x629f, 0x204e, 0x1693, 0x0, 0x1);
        gbc.writeMem(0x1693, { 0xd0 });
        gbc.writeMem(0xe275, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf079);
        EXPECT(gbc.pc(), 0xe277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe275), 0xcb);
        EXPECT(gbc.readMem(0xe276), 0x56);
        // CB 56 0256
        gbc.setState(0x957e, 0x36d6, 0xe110, 0xd296, 0xe074, 0x4141, 0x0, 0x1);
        gbc.writeMem(0x4141, { 0x4f });
        gbc.writeMem(0x957e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x36d6);
        EXPECT(gbc.pc(), 0x9580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x957e), 0xcb);
        EXPECT(gbc.readMem(0x957f), 0x56);
        // CB 56 0258
        gbc.setState(0x235, 0x9d4a, 0x390, 0xad1d, 0x8577, 0xc102, 0x0, 0x0);
        gbc.writeMem(0x235, { 0xcb, 0x56 });
        gbc.writeMem(0xc102, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9d4a);
        EXPECT(gbc.pc(), 0x237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc102), 0xcd);
        // CB 56 0259
        gbc.setState(0x83e9, 0x23d8, 0x8c70, 0x5f33, 0x9a68, 0xf166, 0x0, 0x1);
        gbc.writeMem(0x83e9, { 0xcb, 0x56 });
        gbc.writeMem(0xf166, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x23d8);
        EXPECT(gbc.pc(), 0x83eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e9), 0xcb);
        EXPECT(gbc.readMem(0x83ea), 0x56);
        EXPECT(gbc.readMem(0xf166), 0x8b);
        // CB 56 025A
        gbc.setState(0x2388, 0xef92, 0x4510, 0x1a8e, 0xd2c6, 0xb1b0, 0x0, 0x1);
        gbc.writeMem(0x2388, { 0xcb, 0x56 });
        gbc.writeMem(0xb1b0, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xef92);
        EXPECT(gbc.pc(), 0x238a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1b0), 0xe7);
        // CB 56 025C
        gbc.setState(0xb73d, 0x7447, 0x2c60, 0x123e, 0xc6f7, 0x4ec4, 0x0, 0x1);
        gbc.writeMem(0x4ec4, { 0x5a });
        gbc.writeMem(0xb73d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7447);
        EXPECT(gbc.pc(), 0xb73f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb73d), 0xcb);
        EXPECT(gbc.readMem(0xb73e), 0x56);
        // CB 56 025D
        gbc.setState(0xb042, 0x9540, 0x5fa0, 0x26a1, 0xd6ae, 0x7457, 0x0, 0x1);
        gbc.writeMem(0x7457, { 0x31 });
        gbc.writeMem(0xb042, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9540);
        EXPECT(gbc.pc(), 0xb044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb042), 0xcb);
        EXPECT(gbc.readMem(0xb043), 0x56);
        // CB 56 025E
        gbc.setState(0x454a, 0x494d, 0x1c30, 0x8549, 0xd21d, 0xd14b, 0x0, 0x0);
        gbc.writeMem(0x454a, { 0xcb, 0x56 });
        gbc.writeMem(0xd14b, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x494d);
        EXPECT(gbc.pc(), 0x454c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd14b), 0xdc);
        // CB 56 025F
        gbc.setState(0x4a96, 0x7b77, 0x7b10, 0x8b5e, 0x3bc8, 0xf1ae, 0x1, 0x0);
        gbc.writeMem(0x4a96, { 0xcb, 0x56 });
        gbc.writeMem(0xf1ae, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7b77);
        EXPECT(gbc.pc(), 0x4a98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf1ae), 0xf8);
        // CB 56 0260
        gbc.setState(0x7a38, 0xdf01, 0x8750, 0xe80a, 0xf0e6, 0xbe65, 0x0, 0x1);
        gbc.writeMem(0x7a38, { 0xcb, 0x56 });
        gbc.writeMem(0xbe65, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xdf01);
        EXPECT(gbc.pc(), 0x7a3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe65), 0x6);
        // CB 56 0261
        gbc.setState(0xc141, 0x6428, 0x9580, 0xf632, 0xa7e1, 0xe46f, 0x0, 0x0);
        gbc.writeMem(0xc141, { 0xcb, 0x56 });
        gbc.writeMem(0xe46f, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6428);
        EXPECT(gbc.pc(), 0xc143);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc141), 0xcb);
        EXPECT(gbc.readMem(0xc142), 0x56);
        EXPECT(gbc.readMem(0xe46f), 0xaa);
        // CB 56 0262
        gbc.setState(0xeeb5, 0x6f1c, 0xd5a0, 0xeef, 0x1bf2, 0xf27f, 0x1, 0x1);
        gbc.writeMem(0xeeb5, { 0xcb, 0x56 });
        gbc.writeMem(0xf27f, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6f1c);
        EXPECT(gbc.pc(), 0xeeb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeb5), 0xcb);
        EXPECT(gbc.readMem(0xeeb6), 0x56);
        EXPECT(gbc.readMem(0xf27f), 0x76);
        // CB 56 0263
        gbc.setState(0x72f7, 0xa156, 0x63e0, 0x109c, 0xcfba, 0x7dae, 0x0, 0x1);
        gbc.writeMem(0x72f7, { 0xcb, 0x56 });
        gbc.writeMem(0x7dae, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa156);
        EXPECT(gbc.pc(), 0x72f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0264
        gbc.setState(0xa3f2, 0x839b, 0x7fb0, 0x43ca, 0x944e, 0x46b8, 0x1, 0x0);
        gbc.writeMem(0x46b8, { 0x9b });
        gbc.writeMem(0xa3f2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x839b);
        EXPECT(gbc.pc(), 0xa3f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f2), 0xcb);
        EXPECT(gbc.readMem(0xa3f3), 0x56);
        // CB 56 0265
        gbc.setState(0x95c6, 0x14e2, 0xce90, 0x2dba, 0xb14a, 0xff48, 0x1, 0x1);
        gbc.writeMem(0x95c6, { 0xcb, 0x56 });
        gbc.writeMem(0xff48, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x14e2);
        EXPECT(gbc.pc(), 0x95c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95c6), 0xcb);
        EXPECT(gbc.readMem(0x95c7), 0x56);
        EXPECT(gbc.readMem(0xff48), 0xad);
        // CB 56 0266
        gbc.setState(0x99c0, 0x46c1, 0x8440, 0xcd1f, 0x3161, 0x80d2, 0x1, 0x0);
        gbc.writeMem(0x80d2, { 0x90 });
        gbc.writeMem(0x99c0, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x46c1);
        EXPECT(gbc.pc(), 0x99c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d2), 0x90);
        EXPECT(gbc.readMem(0x99c0), 0xcb);
        EXPECT(gbc.readMem(0x99c1), 0x56);
        // CB 56 0267
        gbc.setState(0x83bc, 0x307c, 0xfb20, 0x9c15, 0xf1dd, 0xdf5d, 0x1, 0x0);
        gbc.writeMem(0x83bc, { 0xcb, 0x56 });
        gbc.writeMem(0xdf5d, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x307c);
        EXPECT(gbc.pc(), 0x83be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83bc), 0xcb);
        EXPECT(gbc.readMem(0x83bd), 0x56);
        EXPECT(gbc.readMem(0xdf5d), 0x47);
        // CB 56 0268
        gbc.setState(0xedf1, 0x3ccc, 0xd850, 0x95ba, 0x9ad7, 0x50ba, 0x0, 0x1);
        gbc.writeMem(0x50ba, { 0xce });
        gbc.writeMem(0xedf1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3ccc);
        EXPECT(gbc.pc(), 0xedf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedf1), 0xcb);
        EXPECT(gbc.readMem(0xedf2), 0x56);
        // CB 56 0269
        gbc.setState(0x325c, 0xdc, 0xa570, 0x854c, 0x86c1, 0xd1b1, 0x1, 0x1);
        gbc.writeMem(0x325c, { 0xcb, 0x56 });
        gbc.writeMem(0xd1b1, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdc);
        EXPECT(gbc.pc(), 0x325e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1b1), 0x7a);
        // CB 56 026A
        gbc.setState(0x2d8b, 0x7453, 0x3440, 0x2cec, 0xeaa8, 0x34e4, 0x1, 0x1);
        gbc.writeMem(0x2d8b, { 0xcb, 0x56 });
        gbc.writeMem(0x34e4, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7453);
        EXPECT(gbc.pc(), 0x2d8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 026B
        gbc.setState(0x32ef, 0xc0da, 0xa810, 0x87e, 0xe8a7, 0xa2b7, 0x0, 0x0);
        gbc.writeMem(0x32ef, { 0xcb, 0x56 });
        gbc.writeMem(0xa2b7, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc0da);
        EXPECT(gbc.pc(), 0x32f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2b7), 0xf);
        // CB 56 026C
        gbc.setState(0xe850, 0x9300, 0x9e0, 0x9a6a, 0xad53, 0xb1fa, 0x0, 0x1);
        gbc.writeMem(0xb1fa, { 0x49 });
        gbc.writeMem(0xe850, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9300);
        EXPECT(gbc.pc(), 0xe852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1fa), 0x49);
        EXPECT(gbc.readMem(0xe850), 0xcb);
        EXPECT(gbc.readMem(0xe851), 0x56);
        // CB 56 026D
        gbc.setState(0x5c78, 0xe902, 0x3af0, 0x7fa3, 0x57de, 0x3b80, 0x1, 0x0);
        gbc.writeMem(0x3b80, { 0x48 });
        gbc.writeMem(0x5c78, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe902);
        EXPECT(gbc.pc(), 0x5c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 026E
        gbc.setState(0xac34, 0x4611, 0xb980, 0xffad, 0xe716, 0x1247, 0x1, 0x0);
        gbc.writeMem(0x1247, { 0xc1 });
        gbc.writeMem(0xac34, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4611);
        EXPECT(gbc.pc(), 0xac36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac34), 0xcb);
        EXPECT(gbc.readMem(0xac35), 0x56);
        // CB 56 026F
        gbc.setState(0x718, 0x962d, 0x2b10, 0x18ad, 0x6ff2, 0x4019, 0x0, 0x1);
        gbc.writeMem(0x718, { 0xcb, 0x56 });
        gbc.writeMem(0x4019, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x962d);
        EXPECT(gbc.pc(), 0x71a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0270
        gbc.setState(0xdd72, 0x37f2, 0x3860, 0x4de2, 0x382b, 0xc493, 0x0, 0x1);
        gbc.writeMem(0xc493, { 0xd2 });
        gbc.writeMem(0xdd72, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x37f2);
        EXPECT(gbc.pc(), 0xdd74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc493), 0xd2);
        EXPECT(gbc.readMem(0xdd72), 0xcb);
        EXPECT(gbc.readMem(0xdd73), 0x56);
        // CB 56 0271
        gbc.setState(0x70fe, 0x324b, 0x8670, 0x54e3, 0x6155, 0x532c, 0x0, 0x1);
        gbc.writeMem(0x532c, { 0x62 });
        gbc.writeMem(0x70fe, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x324b);
        EXPECT(gbc.pc(), 0x7100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0272
        gbc.setState(0x9884, 0x6e27, 0x4fe0, 0xd1a6, 0x914, 0x6a5f, 0x0, 0x1);
        gbc.writeMem(0x6a5f, { 0x30 });
        gbc.writeMem(0x9884, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6e27);
        EXPECT(gbc.pc(), 0x9886);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9884), 0xcb);
        EXPECT(gbc.readMem(0x9885), 0x56);
        // CB 56 0273
        gbc.setState(0x824e, 0xb011, 0xe450, 0xacf6, 0xd9f2, 0x9912, 0x1, 0x0);
        gbc.writeMem(0x824e, { 0xcb, 0x56 });
        gbc.writeMem(0x9912, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb011);
        EXPECT(gbc.pc(), 0x8250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x824e), 0xcb);
        EXPECT(gbc.readMem(0x824f), 0x56);
        EXPECT(gbc.readMem(0x9912), 0x17);
        // CB 56 0274
        gbc.setState(0x29d9, 0x8044, 0x6250, 0x666d, 0x5b15, 0xd877, 0x0, 0x0);
        gbc.writeMem(0x29d9, { 0xcb, 0x56 });
        gbc.writeMem(0xd877, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8044);
        EXPECT(gbc.pc(), 0x29db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd877), 0xf8);
        // CB 56 0275
        gbc.setState(0x7bb9, 0xec7b, 0x75e0, 0x2660, 0x6e14, 0xca8b, 0x1, 0x1);
        gbc.writeMem(0x7bb9, { 0xcb, 0x56 });
        gbc.writeMem(0xca8b, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xec7b);
        EXPECT(gbc.pc(), 0x7bbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca8b), 0xda);
        // CB 56 0276
        gbc.setState(0x4cd6, 0xa6b4, 0x3bc0, 0x6a27, 0xc644, 0xf8cc, 0x0, 0x0);
        gbc.writeMem(0x4cd6, { 0xcb, 0x56 });
        gbc.writeMem(0xf8cc, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa6b4);
        EXPECT(gbc.pc(), 0x4cd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8cc), 0x57);
        // CB 56 0277
        gbc.setState(0xb917, 0xa1ee, 0xe9c0, 0xfdd0, 0xe4cd, 0x6c0a, 0x0, 0x0);
        gbc.writeMem(0x6c0a, { 0xb9 });
        gbc.writeMem(0xb917, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa1ee);
        EXPECT(gbc.pc(), 0xb919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb917), 0xcb);
        EXPECT(gbc.readMem(0xb918), 0x56);
        // CB 56 0278
        gbc.setState(0xbc8f, 0x14a7, 0x8570, 0x5f46, 0xc1aa, 0x954f, 0x0, 0x1);
        gbc.writeMem(0x954f, { 0xee });
        gbc.writeMem(0xbc8f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x14a7);
        EXPECT(gbc.pc(), 0xbc91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x954f), 0xee);
        EXPECT(gbc.readMem(0xbc8f), 0xcb);
        EXPECT(gbc.readMem(0xbc90), 0x56);
        // CB 56 0279
        gbc.setState(0xb2e9, 0x24cb, 0x9270, 0x3ff2, 0x55e3, 0x2311, 0x0, 0x0);
        gbc.writeMem(0x2311, { 0xd7 });
        gbc.writeMem(0xb2e9, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x24cb);
        EXPECT(gbc.pc(), 0xb2eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2e9), 0xcb);
        EXPECT(gbc.readMem(0xb2ea), 0x56);
        // CB 56 027A
        gbc.setState(0xc8ae, 0x4620, 0xf720, 0x3298, 0xf682, 0x5dad, 0x1, 0x1);
        gbc.writeMem(0x5dad, { 0x64 });
        gbc.writeMem(0xc8ae, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4620);
        EXPECT(gbc.pc(), 0xc8b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ae), 0xcb);
        EXPECT(gbc.readMem(0xc8af), 0x56);
        // CB 56 027B
        gbc.setState(0xd9df, 0x503b, 0xb350, 0x3331, 0x5cf8, 0xa588, 0x1, 0x1);
        gbc.writeMem(0xa588, { 0x7f });
        gbc.writeMem(0xd9df, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x503b);
        EXPECT(gbc.pc(), 0xd9e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa588), 0x7f);
        EXPECT(gbc.readMem(0xd9df), 0xcb);
        EXPECT(gbc.readMem(0xd9e0), 0x56);
        // CB 56 027C
        gbc.setState(0x7d9a, 0xd17e, 0x260, 0xf8a3, 0x95, 0x6b81, 0x0, 0x0);
        gbc.writeMem(0x6b81, { 0x40 });
        gbc.writeMem(0x7d9a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd17e);
        EXPECT(gbc.pc(), 0x7d9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 027D
        gbc.setState(0x7242, 0x9420, 0x2720, 0x796a, 0x2ef7, 0xaec2, 0x1, 0x1);
        gbc.writeMem(0x7242, { 0xcb, 0x56 });
        gbc.writeMem(0xaec2, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9420);
        EXPECT(gbc.pc(), 0x7244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec2), 0x91);
        // CB 56 027E
        gbc.setState(0x3ac7, 0x4e83, 0xd9b0, 0x16f2, 0x31f7, 0xa5e6, 0x0, 0x0);
        gbc.writeMem(0x3ac7, { 0xcb, 0x56 });
        gbc.writeMem(0xa5e6, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4e83);
        EXPECT(gbc.pc(), 0x3ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5e6), 0x49);
        // CB 56 027F
        gbc.setState(0x9fb3, 0x1f36, 0xfd0, 0xd427, 0x640d, 0xfe95, 0x0, 0x0);
        gbc.writeMem(0x9fb3, { 0xcb, 0x56 });
        gbc.writeMem(0xfe95, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1f36);
        EXPECT(gbc.pc(), 0x9fb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fb3), 0xcb);
        EXPECT(gbc.readMem(0x9fb4), 0x56);
        EXPECT(gbc.readMem(0xfe95), 0xe0);
        // CB 56 0280
        gbc.setState(0xc130, 0xc4f0, 0xece0, 0x2b98, 0x6e8a, 0x3de1, 0x1, 0x0);
        gbc.writeMem(0x3de1, { 0x52 });
        gbc.writeMem(0xc130, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc4f0);
        EXPECT(gbc.pc(), 0xc132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc130), 0xcb);
        EXPECT(gbc.readMem(0xc131), 0x56);
        // CB 56 0281
        gbc.setState(0xcab4, 0xe5e6, 0x8a50, 0x747a, 0xd8bc, 0xdb2c, 0x1, 0x0);
        gbc.writeMem(0xcab4, { 0xcb, 0x56 });
        gbc.writeMem(0xdb2c, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe5e6);
        EXPECT(gbc.pc(), 0xcab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab4), 0xcb);
        EXPECT(gbc.readMem(0xcab5), 0x56);
        EXPECT(gbc.readMem(0xdb2c), 0x86);
        // CB 56 0282
        gbc.setState(0xa8cd, 0xec20, 0x0, 0xd268, 0xcab5, 0x60d3, 0x1, 0x0);
        gbc.writeMem(0x60d3, { 0xa4 });
        gbc.writeMem(0xa8cd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xec20);
        EXPECT(gbc.pc(), 0xa8cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8cd), 0xcb);
        EXPECT(gbc.readMem(0xa8ce), 0x56);
        // CB 56 0283
        gbc.setState(0x6fd9, 0x5e7d, 0x9000, 0xe967, 0x4f4, 0xa094, 0x1, 0x1);
        gbc.writeMem(0x6fd9, { 0xcb, 0x56 });
        gbc.writeMem(0xa094, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5e7d);
        EXPECT(gbc.pc(), 0x6fdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa094), 0x29);
        // CB 56 0284
        gbc.setState(0xe3a8, 0x5376, 0x47f0, 0x475d, 0x93da, 0xa7c1, 0x1, 0x1);
        gbc.writeMem(0xa7c1, { 0x7 });
        gbc.writeMem(0xe3a8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5376);
        EXPECT(gbc.pc(), 0xe3aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7c1), 0x7);
        EXPECT(gbc.readMem(0xe3a8), 0xcb);
        EXPECT(gbc.readMem(0xe3a9), 0x56);
        // CB 56 0285
        gbc.setState(0x85be, 0x796b, 0x8850, 0x592a, 0x5939, 0x44f0, 0x0, 0x1);
        gbc.writeMem(0x44f0, { 0x17 });
        gbc.writeMem(0x85be, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x796b);
        EXPECT(gbc.pc(), 0x85c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85be), 0xcb);
        EXPECT(gbc.readMem(0x85bf), 0x56);
        // CB 56 0286
        gbc.setState(0x4992, 0xe6c8, 0xd4f0, 0xd60b, 0x44ba, 0xa629, 0x0, 0x0);
        gbc.writeMem(0x4992, { 0xcb, 0x56 });
        gbc.writeMem(0xa629, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe6c8);
        EXPECT(gbc.pc(), 0x4994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa629), 0x3f);
        // CB 56 0287
        gbc.setState(0x1853, 0xfa70, 0x9250, 0x831c, 0x78c7, 0xa4d2, 0x1, 0x1);
        gbc.writeMem(0x1853, { 0xcb, 0x56 });
        gbc.writeMem(0xa4d2, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfa70);
        EXPECT(gbc.pc(), 0x1855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d2), 0xea);
        // CB 56 0288
        gbc.setState(0x8dd0, 0x2d40, 0xcf70, 0xc407, 0x40f, 0xd239, 0x0, 0x0);
        gbc.writeMem(0x8dd0, { 0xcb, 0x56 });
        gbc.writeMem(0xd239, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2d40);
        EXPECT(gbc.pc(), 0x8dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dd0), 0xcb);
        EXPECT(gbc.readMem(0x8dd1), 0x56);
        EXPECT(gbc.readMem(0xd239), 0xd0);
        // CB 56 0289
        gbc.setState(0x41d7, 0xa74a, 0x6e90, 0xfb33, 0x6c0d, 0x9d4, 0x0, 0x0);
        gbc.writeMem(0x9d4, { 0x5c });
        gbc.writeMem(0x41d7, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa74a);
        EXPECT(gbc.pc(), 0x41d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 028A
        gbc.setState(0x57a0, 0xbceb, 0x16b0, 0xbbf7, 0x924f, 0x31f8, 0x1, 0x0);
        gbc.writeMem(0x31f8, { 0xb2 });
        gbc.writeMem(0x57a0, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbceb);
        EXPECT(gbc.pc(), 0x57a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 028B
        gbc.setState(0x2600, 0xa8f9, 0x5cd0, 0x80f2, 0x992c, 0x80bf, 0x1, 0x1);
        gbc.writeMem(0x2600, { 0xcb, 0x56 });
        gbc.writeMem(0x80bf, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa8f9);
        EXPECT(gbc.pc(), 0x2602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80bf), 0x8c);
        // CB 56 028C
        gbc.setState(0xe162, 0xce9, 0x65d0, 0x251c, 0x676e, 0x827d, 0x0, 0x0);
        gbc.writeMem(0x827d, { 0x98 });
        gbc.writeMem(0xe162, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xce9);
        EXPECT(gbc.pc(), 0xe164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x827d), 0x98);
        EXPECT(gbc.readMem(0xe162), 0xcb);
        EXPECT(gbc.readMem(0xe163), 0x56);
        // CB 56 028D
        gbc.setState(0x46bb, 0x25b, 0x4790, 0xd223, 0x66f8, 0x9da9, 0x0, 0x1);
        gbc.writeMem(0x46bb, { 0xcb, 0x56 });
        gbc.writeMem(0x9da9, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x25b);
        EXPECT(gbc.pc(), 0x46bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da9), 0x67);
        // CB 56 028E
        gbc.setState(0x1e7a, 0x6cd, 0xd4f0, 0x919b, 0xd722, 0x118b, 0x1, 0x0);
        gbc.writeMem(0x118b, { 0x81 });
        gbc.writeMem(0x1e7a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6cd);
        EXPECT(gbc.pc(), 0x1e7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 028F
        gbc.setState(0xcece, 0xafdb, 0x89c0, 0x43c0, 0xb47e, 0x95e5, 0x1, 0x1);
        gbc.writeMem(0x95e5, { 0x4c });
        gbc.writeMem(0xcece, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xafdb);
        EXPECT(gbc.pc(), 0xced0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e5), 0x4c);
        EXPECT(gbc.readMem(0xcece), 0xcb);
        EXPECT(gbc.readMem(0xcecf), 0x56);
        // CB 56 0290
        gbc.setState(0x80, 0x4dc7, 0x24a0, 0x9ffd, 0x471b, 0xc904, 0x1, 0x1);
        gbc.writeMem(0x80, { 0xcb, 0x56 });
        gbc.writeMem(0xc904, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4dc7);
        EXPECT(gbc.pc(), 0x82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc904), 0xbd);
        // CB 56 0291
        gbc.setState(0xe605, 0xc2ef, 0x6230, 0x1a88, 0xd8da, 0x5a62, 0x0, 0x1);
        gbc.writeMem(0x5a62, { 0xfe });
        gbc.writeMem(0xe605, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc2ef);
        EXPECT(gbc.pc(), 0xe607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe605), 0xcb);
        EXPECT(gbc.readMem(0xe606), 0x56);
        // CB 56 0292
        gbc.setState(0xa489, 0x5e04, 0xaec0, 0xe527, 0xe6ef, 0xda4c, 0x1, 0x0);
        gbc.writeMem(0xa489, { 0xcb, 0x56 });
        gbc.writeMem(0xda4c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5e04);
        EXPECT(gbc.pc(), 0xa48b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa489), 0xcb);
        EXPECT(gbc.readMem(0xa48a), 0x56);
        EXPECT(gbc.readMem(0xda4c), 0xc0);
        // CB 56 0293
        gbc.setState(0x4d5c, 0x92ce, 0x6800, 0x2518, 0xf94e, 0x41dd, 0x0, 0x1);
        gbc.writeMem(0x41dd, { 0x24 });
        gbc.writeMem(0x4d5c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x92ce);
        EXPECT(gbc.pc(), 0x4d5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0294
        gbc.setState(0x80b0, 0x474c, 0x7e70, 0xed3a, 0x88da, 0x76f8, 0x0, 0x1);
        gbc.writeMem(0x76f8, { 0x9b });
        gbc.writeMem(0x80b0, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x474c);
        EXPECT(gbc.pc(), 0x80b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80b0), 0xcb);
        EXPECT(gbc.readMem(0x80b1), 0x56);
        // CB 56 0295
        gbc.setState(0xe21a, 0x2ebf, 0x9c60, 0xa92a, 0x505, 0xd840, 0x1, 0x0);
        gbc.writeMem(0xd840, { 0x1c });
        gbc.writeMem(0xe21a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2ebf);
        EXPECT(gbc.pc(), 0xe21c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd840), 0x1c);
        EXPECT(gbc.readMem(0xe21a), 0xcb);
        EXPECT(gbc.readMem(0xe21b), 0x56);
        // CB 56 0296
        gbc.setState(0x6c27, 0xa730, 0x6a0, 0xa0b1, 0x71b0, 0x2c74, 0x1, 0x1);
        gbc.writeMem(0x2c74, { 0x75 });
        gbc.writeMem(0x6c27, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa730);
        EXPECT(gbc.pc(), 0x6c29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0297
        gbc.setState(0xe1a8, 0x183d, 0x86e0, 0x331f, 0x4c3d, 0x936f, 0x1, 0x1);
        gbc.writeMem(0x936f, { 0xd0 });
        gbc.writeMem(0xe1a8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x183d);
        EXPECT(gbc.pc(), 0xe1aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x936f), 0xd0);
        EXPECT(gbc.readMem(0xe1a8), 0xcb);
        EXPECT(gbc.readMem(0xe1a9), 0x56);
        // CB 56 0299
        gbc.setState(0x8a92, 0x43f0, 0xe290, 0x7e4a, 0x2683, 0x30a1, 0x1, 0x1);
        gbc.writeMem(0x30a1, { 0xcd });
        gbc.writeMem(0x8a92, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x43f0);
        EXPECT(gbc.pc(), 0x8a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a92), 0xcb);
        EXPECT(gbc.readMem(0x8a93), 0x56);
        // CB 56 029A
        gbc.setState(0x38ef, 0x63d3, 0x6d40, 0xda11, 0x2d03, 0xbf30, 0x0, 0x1);
        gbc.writeMem(0x38ef, { 0xcb, 0x56 });
        gbc.writeMem(0xbf30, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x63d3);
        EXPECT(gbc.pc(), 0x38f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf30), 0x1f);
        // CB 56 029B
        gbc.setState(0xc78a, 0xfee7, 0xa940, 0x4899, 0x902e, 0x3361, 0x0, 0x0);
        gbc.writeMem(0x3361, { 0xb5 });
        gbc.writeMem(0xc78a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xfee7);
        EXPECT(gbc.pc(), 0xc78c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78a), 0xcb);
        EXPECT(gbc.readMem(0xc78b), 0x56);
        // CB 56 029C
        gbc.setState(0x31cf, 0x7f26, 0xc7f0, 0x3393, 0xfed2, 0x7c02, 0x0, 0x1);
        gbc.writeMem(0x31cf, { 0xcb, 0x56 });
        gbc.writeMem(0x7c02, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7f26);
        EXPECT(gbc.pc(), 0x31d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 029E
        gbc.setState(0x40f7, 0xe5f, 0x76b0, 0x9f07, 0x8796, 0x5d5e, 0x0, 0x0);
        gbc.writeMem(0x40f7, { 0xcb, 0x56 });
        gbc.writeMem(0x5d5e, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe5f);
        EXPECT(gbc.pc(), 0x40f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 029F
        gbc.setState(0xbeb1, 0xaf09, 0x2ec0, 0x3063, 0x4467, 0xb7e5, 0x1, 0x0);
        gbc.writeMem(0xb7e5, { 0x5f });
        gbc.writeMem(0xbeb1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xaf09);
        EXPECT(gbc.pc(), 0xbeb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7e5), 0x5f);
        EXPECT(gbc.readMem(0xbeb1), 0xcb);
        EXPECT(gbc.readMem(0xbeb2), 0x56);
        // CB 56 02A0
        gbc.setState(0xcb6e, 0xc706, 0xd070, 0x6d21, 0xdb09, 0x322f, 0x1, 0x1);
        gbc.writeMem(0x322f, { 0xa2 });
        gbc.writeMem(0xcb6e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc706);
        EXPECT(gbc.pc(), 0xcb70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb6e), 0xcb);
        EXPECT(gbc.readMem(0xcb6f), 0x56);
        // CB 56 02A1
        gbc.setState(0xaaf3, 0x324e, 0x910, 0x146c, 0xd61f, 0xfa5e, 0x0, 0x1);
        gbc.writeMem(0xaaf3, { 0xcb, 0x56 });
        gbc.writeMem(0xfa5e, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x324e);
        EXPECT(gbc.pc(), 0xaaf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf3), 0xcb);
        EXPECT(gbc.readMem(0xaaf4), 0x56);
        EXPECT(gbc.readMem(0xfa5e), 0xd2);
        // CB 56 02A2
        gbc.setState(0xd4d3, 0x3e3b, 0x3170, 0x5297, 0xf118, 0x8439, 0x0, 0x1);
        gbc.writeMem(0x8439, { 0x42 });
        gbc.writeMem(0xd4d3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3e3b);
        EXPECT(gbc.pc(), 0xd4d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8439), 0x42);
        EXPECT(gbc.readMem(0xd4d3), 0xcb);
        EXPECT(gbc.readMem(0xd4d4), 0x56);
        // CB 56 02A3
        gbc.setState(0x595d, 0x45af, 0xa630, 0xc4cd, 0x5d99, 0x9bd1, 0x1, 0x1);
        gbc.writeMem(0x595d, { 0xcb, 0x56 });
        gbc.writeMem(0x9bd1, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x45af);
        EXPECT(gbc.pc(), 0x595f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd1), 0x33);
        // CB 56 02A4
        gbc.setState(0x2c07, 0xd3f1, 0xf280, 0xc88f, 0xa454, 0xe8a8, 0x0, 0x0);
        gbc.writeMem(0x2c07, { 0xcb, 0x56 });
        gbc.writeMem(0xe8a8, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd3f1);
        EXPECT(gbc.pc(), 0x2c09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8a8), 0x7f);
        // CB 56 02A5
        gbc.setState(0x5a52, 0xb9c6, 0xaf90, 0xd3ef, 0x602b, 0x3024, 0x1, 0x0);
        gbc.writeMem(0x3024, { 0x63 });
        gbc.writeMem(0x5a52, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb9c6);
        EXPECT(gbc.pc(), 0x5a54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 02A6
        gbc.setState(0xca07, 0xbfba, 0xded0, 0xf2de, 0xb8db, 0x935f, 0x1, 0x0);
        gbc.writeMem(0x935f, { 0x31 });
        gbc.writeMem(0xca07, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xbfba);
        EXPECT(gbc.pc(), 0xca09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x935f), 0x31);
        EXPECT(gbc.readMem(0xca07), 0xcb);
        EXPECT(gbc.readMem(0xca08), 0x56);
        // CB 56 02A7
        gbc.setState(0x2932, 0x626f, 0x7fe0, 0xd19, 0xcba, 0xb0de, 0x0, 0x0);
        gbc.writeMem(0x2932, { 0xcb, 0x56 });
        gbc.writeMem(0xb0de, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x626f);
        EXPECT(gbc.pc(), 0x2934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0de), 0xf0);
        // CB 56 02A8
        gbc.setState(0x494b, 0x2b13, 0x58f0, 0xf9ea, 0x926a, 0xa4c9, 0x1, 0x1);
        gbc.writeMem(0x494b, { 0xcb, 0x56 });
        gbc.writeMem(0xa4c9, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2b13);
        EXPECT(gbc.pc(), 0x494d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c9), 0x42);
        // CB 56 02A9
        gbc.setState(0xbe2f, 0xd001, 0xbe50, 0x8900, 0xc451, 0x1ee8, 0x1, 0x0);
        gbc.writeMem(0x1ee8, { 0xc9 });
        gbc.writeMem(0xbe2f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd001);
        EXPECT(gbc.pc(), 0xbe31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe2f), 0xcb);
        EXPECT(gbc.readMem(0xbe30), 0x56);
        // CB 56 02AA
        gbc.setState(0x4ffa, 0x201c, 0x3010, 0x3eaf, 0xdd0a, 0x8d2e, 0x1, 0x0);
        gbc.writeMem(0x4ffa, { 0xcb, 0x56 });
        gbc.writeMem(0x8d2e, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x201c);
        EXPECT(gbc.pc(), 0x4ffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d2e), 0xc5);
        // CB 56 02AB
        gbc.setState(0x3e1a, 0x4ded, 0xa4c0, 0x57bc, 0x787f, 0xfab6, 0x0, 0x1);
        gbc.writeMem(0x3e1a, { 0xcb, 0x56 });
        gbc.writeMem(0xfab6, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4ded);
        EXPECT(gbc.pc(), 0x3e1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfab6), 0x6f);
        // CB 56 02AC
        gbc.setState(0x4a57, 0x6b, 0x7e40, 0x374d, 0xe3be, 0xaf18, 0x1, 0x0);
        gbc.writeMem(0x4a57, { 0xcb, 0x56 });
        gbc.writeMem(0xaf18, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6b);
        EXPECT(gbc.pc(), 0x4a59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf18), 0xc1);
        // CB 56 02AD
        gbc.setState(0x49ca, 0x7dbf, 0xc720, 0x40ad, 0x7f1, 0x93bc, 0x0, 0x0);
        gbc.writeMem(0x49ca, { 0xcb, 0x56 });
        gbc.writeMem(0x93bc, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7dbf);
        EXPECT(gbc.pc(), 0x49cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93bc), 0x85);
        // CB 56 02AE
        gbc.setState(0x33fc, 0xc693, 0x47e0, 0x2524, 0x1e2c, 0x5e29, 0x1, 0x1);
        gbc.writeMem(0x33fc, { 0xcb, 0x56 });
        gbc.writeMem(0x5e29, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc693);
        EXPECT(gbc.pc(), 0x33fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 02AF
        gbc.setState(0x4a7f, 0xb4e4, 0x97e0, 0xfa33, 0xad4a, 0x41bf, 0x1, 0x0);
        gbc.writeMem(0x41bf, { 0x14 });
        gbc.writeMem(0x4a7f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb4e4);
        EXPECT(gbc.pc(), 0x4a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 02B0
        gbc.setState(0x579b, 0xa269, 0xb4b0, 0x42c8, 0xdfc, 0x4769, 0x1, 0x0);
        gbc.writeMem(0x4769, { 0xe6 });
        gbc.writeMem(0x579b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa269);
        EXPECT(gbc.pc(), 0x579d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 02B1
        gbc.setState(0x3d53, 0xea29, 0xb960, 0xcc76, 0x9d2b, 0x9e1d, 0x1, 0x0);
        gbc.writeMem(0x3d53, { 0xcb, 0x56 });
        gbc.writeMem(0x9e1d, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xea29);
        EXPECT(gbc.pc(), 0x3d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e1d), 0x43);
        // CB 56 02B2
        gbc.setState(0xbaac, 0xa4d3, 0xeee0, 0xd32f, 0xb88e, 0xad8b, 0x1, 0x1);
        gbc.writeMem(0xad8b, { 0x49 });
        gbc.writeMem(0xbaac, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa4d3);
        EXPECT(gbc.pc(), 0xbaae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad8b), 0x49);
        EXPECT(gbc.readMem(0xbaac), 0xcb);
        EXPECT(gbc.readMem(0xbaad), 0x56);
        // CB 56 02B4
        gbc.setState(0x71d, 0xd37b, 0x7d50, 0x7374, 0x9e13, 0x37ec, 0x1, 0x0);
        gbc.writeMem(0x71d, { 0xcb, 0x56 });
        gbc.writeMem(0x37ec, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd37b);
        EXPECT(gbc.pc(), 0x71f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 02B5
        gbc.setState(0x9db5, 0x9e38, 0xf860, 0x7774, 0x43ec, 0xcba, 0x0, 0x0);
        gbc.writeMem(0xcba, { 0x71 });
        gbc.writeMem(0x9db5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9e38);
        EXPECT(gbc.pc(), 0x9db7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db5), 0xcb);
        EXPECT(gbc.readMem(0x9db6), 0x56);
        // CB 56 02B6
        gbc.setState(0xd4be, 0xe216, 0x9a50, 0x45e5, 0x66c1, 0x4308, 0x1, 0x0);
        gbc.writeMem(0x4308, { 0x1d });
        gbc.writeMem(0xd4be, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe216);
        EXPECT(gbc.pc(), 0xd4c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4be), 0xcb);
        EXPECT(gbc.readMem(0xd4bf), 0x56);
        // CB 56 02B7
        gbc.setState(0x908, 0x2a4b, 0x77c0, 0xb708, 0xfdfe, 0x1fce, 0x1, 0x0);
        gbc.writeMem(0x908, { 0xcb, 0x56 });
        gbc.writeMem(0x1fce, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2a4b);
        EXPECT(gbc.pc(), 0x90a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 02B8
        gbc.setState(0x4e48, 0xdb5f, 0x5300, 0x57ef, 0x7a27, 0x43d1, 0x0, 0x0);
        gbc.writeMem(0x43d1, { 0x0 });
        gbc.writeMem(0x4e48, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xdb5f);
        EXPECT(gbc.pc(), 0x4e4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 02B9
        gbc.setState(0x91ab, 0x643b, 0x2430, 0x36c5, 0x1afa, 0x8c0a, 0x0, 0x1);
        gbc.writeMem(0x8c0a, { 0x1b });
        gbc.writeMem(0x91ab, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x643b);
        EXPECT(gbc.pc(), 0x91ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c0a), 0x1b);
        EXPECT(gbc.readMem(0x91ab), 0xcb);
        EXPECT(gbc.readMem(0x91ac), 0x56);
        // CB 56 02BA
        gbc.setState(0x4c77, 0xaa4f, 0xe200, 0x4ad5, 0x7c7d, 0x7b9d, 0x0, 0x1);
        gbc.writeMem(0x4c77, { 0xcb, 0x56 });
        gbc.writeMem(0x7b9d, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xaa4f);
        EXPECT(gbc.pc(), 0x4c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 02BB
        gbc.setState(0xd624, 0xf531, 0xf4f0, 0xe4d3, 0xa3b9, 0x242b, 0x1, 0x0);
        gbc.writeMem(0x242b, { 0x1a });
        gbc.writeMem(0xd624, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf531);
        EXPECT(gbc.pc(), 0xd626);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd624), 0xcb);
        EXPECT(gbc.readMem(0xd625), 0x56);
        // CB 56 02BC
        gbc.setState(0x7787, 0xb222, 0x5150, 0xec47, 0xf432, 0x328c, 0x1, 0x1);
        gbc.writeMem(0x328c, { 0x57 });
        gbc.writeMem(0x7787, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb222);
        EXPECT(gbc.pc(), 0x7789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 02BD
        gbc.setState(0x7e3e, 0x4c8e, 0x7a40, 0xc260, 0xb293, 0x5635, 0x0, 0x1);
        gbc.writeMem(0x5635, { 0x86 });
        gbc.writeMem(0x7e3e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4c8e);
        EXPECT(gbc.pc(), 0x7e40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 02BE
        gbc.setState(0xe2ff, 0x16f4, 0xa0b0, 0xf8f, 0x1ce2, 0xa1b8, 0x1, 0x0);
        gbc.writeMem(0xa1b8, { 0xec });
        gbc.writeMem(0xe2ff, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x16f4);
        EXPECT(gbc.pc(), 0xe301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b8), 0xec);
        EXPECT(gbc.readMem(0xe2ff), 0xcb);
        EXPECT(gbc.readMem(0xe300), 0x56);
        // CB 56 02BF
        gbc.setState(0x5ae8, 0x9643, 0x30a0, 0xb6ab, 0xd678, 0xa08f, 0x1, 0x1);
        gbc.writeMem(0x5ae8, { 0xcb, 0x56 });
        gbc.writeMem(0xa08f, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9643);
        EXPECT(gbc.pc(), 0x5aea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08f), 0xc6);
        // CB 56 02C0
        gbc.setState(0xd5ff, 0xf0d6, 0x2eb0, 0xcaf, 0x5b45, 0xa918, 0x1, 0x0);
        gbc.writeMem(0xa918, { 0x86 });
        gbc.writeMem(0xd5ff, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf0d6);
        EXPECT(gbc.pc(), 0xd601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa918), 0x86);
        EXPECT(gbc.readMem(0xd5ff), 0xcb);
        EXPECT(gbc.readMem(0xd600), 0x56);
        // CB 56 02C1
        gbc.setState(0x1747, 0x83bc, 0x7020, 0xde37, 0x2501, 0x37d5, 0x0, 0x1);
        gbc.writeMem(0x1747, { 0xcb, 0x56 });
        gbc.writeMem(0x37d5, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x83bc);
        EXPECT(gbc.pc(), 0x1749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 02C2
        gbc.setState(0xc347, 0x7b09, 0xac50, 0x7228, 0xabb3, 0xe816, 0x0, 0x1);
        gbc.writeMem(0xc347, { 0xcb, 0x56 });
        gbc.writeMem(0xe816, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7b09);
        EXPECT(gbc.pc(), 0xc349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc347), 0xcb);
        EXPECT(gbc.readMem(0xc348), 0x56);
        EXPECT(gbc.readMem(0xe816), 0x8a);
        // CB 56 02C3
        gbc.setState(0x5ab4, 0x9654, 0xa4d0, 0x3008, 0x1e11, 0xe751, 0x0, 0x1);
        gbc.writeMem(0x5ab4, { 0xcb, 0x56 });
        gbc.writeMem(0xe751, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9654);
        EXPECT(gbc.pc(), 0x5ab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe751), 0xfd);
        // CB 56 02C5
        gbc.setState(0xc714, 0x4164, 0x8ec0, 0x108, 0x78f2, 0x195a, 0x1, 0x1);
        gbc.writeMem(0x195a, { 0x8b });
        gbc.writeMem(0xc714, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4164);
        EXPECT(gbc.pc(), 0xc716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc714), 0xcb);
        EXPECT(gbc.readMem(0xc715), 0x56);
        // CB 56 02C6
        gbc.setState(0x6f90, 0x6fb4, 0x3680, 0x1f63, 0x1a68, 0x1d65, 0x1, 0x1);
        gbc.writeMem(0x1d65, { 0x12 });
        gbc.writeMem(0x6f90, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6fb4);
        EXPECT(gbc.pc(), 0x6f92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 02C7
        gbc.setState(0xe019, 0xe749, 0x5da0, 0x9bd1, 0x9736, 0x9459, 0x0, 0x0);
        gbc.writeMem(0x9459, { 0xe5 });
        gbc.writeMem(0xe019, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe749);
        EXPECT(gbc.pc(), 0xe01b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9459), 0xe5);
        EXPECT(gbc.readMem(0xe019), 0xcb);
        EXPECT(gbc.readMem(0xe01a), 0x56);
        // CB 56 02C8
        gbc.setState(0x7695, 0x2d50, 0x5680, 0xd37a, 0xd899, 0x6ac1, 0x0, 0x1);
        gbc.writeMem(0x6ac1, { 0x3f });
        gbc.writeMem(0x7695, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2d50);
        EXPECT(gbc.pc(), 0x7697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 02C9
        gbc.setState(0x8eba, 0x166, 0xa040, 0xcfd6, 0xfc61, 0xe1c2, 0x0, 0x1);
        gbc.writeMem(0x8eba, { 0xcb, 0x56 });
        gbc.writeMem(0xe1c2, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x166);
        EXPECT(gbc.pc(), 0x8ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eba), 0xcb);
        EXPECT(gbc.readMem(0x8ebb), 0x56);
        EXPECT(gbc.readMem(0xe1c2), 0xb2);
        // CB 56 02CA
        gbc.setState(0x1c03, 0xeb3f, 0x6b90, 0x7f5d, 0xa7f0, 0x8ea8, 0x0, 0x0);
        gbc.writeMem(0x1c03, { 0xcb, 0x56 });
        gbc.writeMem(0x8ea8, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xeb3f);
        EXPECT(gbc.pc(), 0x1c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea8), 0x3e);
        // CB 56 02CB
        gbc.setState(0xb105, 0xaac2, 0x4b70, 0xaf6d, 0xd9ab, 0xe428, 0x0, 0x0);
        gbc.writeMem(0xb105, { 0xcb, 0x56 });
        gbc.writeMem(0xe428, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xaac2);
        EXPECT(gbc.pc(), 0xb107);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb105), 0xcb);
        EXPECT(gbc.readMem(0xb106), 0x56);
        EXPECT(gbc.readMem(0xe428), 0x4c);
        // CB 56 02CC
        gbc.setState(0x671f, 0xeb57, 0x23c0, 0xd0c5, 0xff94, 0x6d65, 0x1, 0x0);
        gbc.writeMem(0x671f, { 0xcb, 0x56 });
        gbc.writeMem(0x6d65, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xeb57);
        EXPECT(gbc.pc(), 0x6721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 02CD
        gbc.setState(0xd5b9, 0x2290, 0xefa0, 0xca0d, 0x1bf5, 0x1f66, 0x1, 0x0);
        gbc.writeMem(0x1f66, { 0xf4 });
        gbc.writeMem(0xd5b9, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2290);
        EXPECT(gbc.pc(), 0xd5bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5b9), 0xcb);
        EXPECT(gbc.readMem(0xd5ba), 0x56);
        // CB 56 02CE
        gbc.setState(0x84a8, 0x624, 0xa710, 0xe7f5, 0x5763, 0x6fbf, 0x0, 0x1);
        gbc.writeMem(0x6fbf, { 0x3b });
        gbc.writeMem(0x84a8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x624);
        EXPECT(gbc.pc(), 0x84aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a8), 0xcb);
        EXPECT(gbc.readMem(0x84a9), 0x56);
        // CB 56 02CF
        gbc.setState(0x1ef5, 0xb847, 0xe300, 0x856f, 0xd021, 0x5f00, 0x0, 0x0);
        gbc.writeMem(0x1ef5, { 0xcb, 0x56 });
        gbc.writeMem(0x5f00, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb847);
        EXPECT(gbc.pc(), 0x1ef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 02D0
        gbc.setState(0x5aec, 0x5d7, 0x5a80, 0xfc37, 0x9af5, 0x4ef8, 0x0, 0x1);
        gbc.writeMem(0x4ef8, { 0x97 });
        gbc.writeMem(0x5aec, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5d7);
        EXPECT(gbc.pc(), 0x5aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 02D1
        gbc.setState(0xed5b, 0x6234, 0xcc0, 0x5d21, 0x5751, 0x5dd6, 0x0, 0x1);
        gbc.writeMem(0x5dd6, { 0x2d });
        gbc.writeMem(0xed5b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6234);
        EXPECT(gbc.pc(), 0xed5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed5b), 0xcb);
        EXPECT(gbc.readMem(0xed5c), 0x56);
        // CB 56 02D2
        gbc.setState(0xd219, 0x3430, 0xf5c0, 0xe838, 0x54ce, 0x7241, 0x0, 0x0);
        gbc.writeMem(0x7241, { 0x1d });
        gbc.writeMem(0xd219, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3430);
        EXPECT(gbc.pc(), 0xd21b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd219), 0xcb);
        EXPECT(gbc.readMem(0xd21a), 0x56);
        // CB 56 02D3
        gbc.setState(0x594a, 0xd500, 0xf870, 0x448a, 0x990b, 0xa21d, 0x1, 0x1);
        gbc.writeMem(0x594a, { 0xcb, 0x56 });
        gbc.writeMem(0xa21d, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd500);
        EXPECT(gbc.pc(), 0x594c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa21d), 0xf9);
        // CB 56 02D4
        gbc.setState(0x1cbc, 0x1c93, 0xce50, 0x9dd8, 0x3b8d, 0x13a, 0x1, 0x0);
        gbc.writeMem(0x13a, { 0x46 });
        gbc.writeMem(0x1cbc, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1c93);
        EXPECT(gbc.pc(), 0x1cbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 02D5
        gbc.setState(0x4627, 0x66ab, 0xe790, 0xddd1, 0x7f38, 0x2b10, 0x0, 0x1);
        gbc.writeMem(0x2b10, { 0x9a });
        gbc.writeMem(0x4627, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x66ab);
        EXPECT(gbc.pc(), 0x4629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 02D6
        gbc.setState(0xeeb8, 0x47a3, 0x3a0, 0x7139, 0xf7d0, 0xa406, 0x0, 0x1);
        gbc.writeMem(0xa406, { 0xf8 });
        gbc.writeMem(0xeeb8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x47a3);
        EXPECT(gbc.pc(), 0xeeba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa406), 0xf8);
        EXPECT(gbc.readMem(0xeeb8), 0xcb);
        EXPECT(gbc.readMem(0xeeb9), 0x56);
        // CB 56 02D7
        gbc.setState(0xb473, 0x2519, 0xe220, 0x26e, 0xcdf5, 0xf491, 0x0, 0x0);
        gbc.writeMem(0xb473, { 0xcb, 0x56 });
        gbc.writeMem(0xf491, { 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2519);
        EXPECT(gbc.pc(), 0xb475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb473), 0xcb);
        EXPECT(gbc.readMem(0xb474), 0x56);
        EXPECT(gbc.readMem(0xf491), 0xbc);
        // CB 56 02D8
        gbc.setState(0xd98, 0xd2f5, 0x2b90, 0xb646, 0x22e8, 0x1161, 0x1, 0x0);
        gbc.writeMem(0xd98, { 0xcb, 0x56 });
        gbc.writeMem(0x1161, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd2f5);
        EXPECT(gbc.pc(), 0xd9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 02D9
        gbc.setState(0x373b, 0xc586, 0xd430, 0xb07, 0xf923, 0x9644, 0x0, 0x0);
        gbc.writeMem(0x373b, { 0xcb, 0x56 });
        gbc.writeMem(0x9644, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc586);
        EXPECT(gbc.pc(), 0x373d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9644), 0xe6);
        // CB 56 02DA
        gbc.setState(0xd8f9, 0x132d, 0xf8a0, 0xb0de, 0x1e96, 0xb09f, 0x0, 0x1);
        gbc.writeMem(0xb09f, { 0xeb });
        gbc.writeMem(0xd8f9, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x132d);
        EXPECT(gbc.pc(), 0xd8fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09f), 0xeb);
        EXPECT(gbc.readMem(0xd8f9), 0xcb);
        EXPECT(gbc.readMem(0xd8fa), 0x56);
        // CB 56 02DB
        gbc.setState(0x2ad, 0xb8ed, 0x7cc0, 0x7c8c, 0xfd1b, 0xdc69, 0x1, 0x1);
        gbc.writeMem(0x2ad, { 0xcb, 0x56 });
        gbc.writeMem(0xdc69, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb8ed);
        EXPECT(gbc.pc(), 0x2af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc69), 0x40);
        // CB 56 02DC
        gbc.setState(0xef, 0xe43d, 0x9890, 0xd689, 0xea42, 0xfe, 0x1, 0x0);
        gbc.writeMem(0xef, { 0xcb, 0x56 });
        gbc.writeMem(0xfe, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe43d);
        EXPECT(gbc.pc(), 0xf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 02DD
        gbc.setState(0x8852, 0x63ec, 0xb990, 0x38b2, 0x66ec, 0xc49, 0x0, 0x0);
        gbc.writeMem(0xc49, { 0xe4 });
        gbc.writeMem(0x8852, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x63ec);
        EXPECT(gbc.pc(), 0x8854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8852), 0xcb);
        EXPECT(gbc.readMem(0x8853), 0x56);
        // CB 56 02DE
        gbc.setState(0x9abe, 0xb6ae, 0x5b00, 0x4f4b, 0x415e, 0xa21a, 0x0, 0x0);
        gbc.writeMem(0x9abe, { 0xcb, 0x56 });
        gbc.writeMem(0xa21a, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb6ae);
        EXPECT(gbc.pc(), 0x9ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9abe), 0xcb);
        EXPECT(gbc.readMem(0x9abf), 0x56);
        EXPECT(gbc.readMem(0xa21a), 0x73);
        // CB 56 02E0
        gbc.setState(0xaa28, 0x9257, 0xdc30, 0xddeb, 0x1ef4, 0x86d6, 0x0, 0x0);
        gbc.writeMem(0x86d6, { 0x1f });
        gbc.writeMem(0xaa28, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9257);
        EXPECT(gbc.pc(), 0xaa2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d6), 0x1f);
        EXPECT(gbc.readMem(0xaa28), 0xcb);
        EXPECT(gbc.readMem(0xaa29), 0x56);
        // CB 56 02E1
        gbc.setState(0xbdf, 0x7ab7, 0x89b0, 0x4b74, 0x12b9, 0x216c, 0x1, 0x1);
        gbc.writeMem(0xbdf, { 0xcb, 0x56 });
        gbc.writeMem(0x216c, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7ab7);
        EXPECT(gbc.pc(), 0xbe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 02E2
        gbc.setState(0xb9cd, 0xd3e7, 0x1940, 0x807a, 0x2cd7, 0x8dcb, 0x1, 0x0);
        gbc.writeMem(0x8dcb, { 0x8f });
        gbc.writeMem(0xb9cd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd3e7);
        EXPECT(gbc.pc(), 0xb9cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dcb), 0x8f);
        EXPECT(gbc.readMem(0xb9cd), 0xcb);
        EXPECT(gbc.readMem(0xb9ce), 0x56);
        // CB 56 02E3
        gbc.setState(0xbd43, 0x16ea, 0x5870, 0x492, 0x8d7d, 0xab82, 0x0, 0x0);
        gbc.writeMem(0xab82, { 0xbd });
        gbc.writeMem(0xbd43, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x16ea);
        EXPECT(gbc.pc(), 0xbd45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab82), 0xbd);
        EXPECT(gbc.readMem(0xbd43), 0xcb);
        EXPECT(gbc.readMem(0xbd44), 0x56);
        // CB 56 02E4
        gbc.setState(0x802c, 0xebbc, 0x4830, 0x3f75, 0xecf0, 0x8b43, 0x1, 0x0);
        gbc.writeMem(0x802c, { 0xcb, 0x56 });
        gbc.writeMem(0x8b43, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xebbc);
        EXPECT(gbc.pc(), 0x802e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x802c), 0xcb);
        EXPECT(gbc.readMem(0x802d), 0x56);
        EXPECT(gbc.readMem(0x8b43), 0x59);
        // CB 56 02E5
        gbc.setState(0x81cd, 0xbdc7, 0xa560, 0x9d7d, 0x16e6, 0x2a6f, 0x1, 0x1);
        gbc.writeMem(0x2a6f, { 0xfe });
        gbc.writeMem(0x81cd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xbdc7);
        EXPECT(gbc.pc(), 0x81cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81cd), 0xcb);
        EXPECT(gbc.readMem(0x81ce), 0x56);
        // CB 56 02E6
        gbc.setState(0xe13a, 0x826e, 0xc130, 0x78cb, 0x6f7, 0xa83f, 0x0, 0x0);
        gbc.writeMem(0xa83f, { 0xff });
        gbc.writeMem(0xe13a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x826e);
        EXPECT(gbc.pc(), 0xe13c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa83f), 0xff);
        EXPECT(gbc.readMem(0xe13a), 0xcb);
        EXPECT(gbc.readMem(0xe13b), 0x56);
        // CB 56 02E8
        gbc.setState(0x1dc7, 0x59d9, 0x1690, 0x742d, 0x2c1a, 0xe0f1, 0x0, 0x0);
        gbc.writeMem(0x1dc7, { 0xcb, 0x56 });
        gbc.writeMem(0xe0f1, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x59d9);
        EXPECT(gbc.pc(), 0x1dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0f1), 0x12);
        // CB 56 02E9
        gbc.setState(0x4d26, 0xcf02, 0xd760, 0x3cb6, 0xb477, 0xc2e5, 0x0, 0x0);
        gbc.writeMem(0x4d26, { 0xcb, 0x56 });
        gbc.writeMem(0xc2e5, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xcf02);
        EXPECT(gbc.pc(), 0x4d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e5), 0x64);
        // CB 56 02EA
        gbc.setState(0x14, 0xb59e, 0x15b0, 0xefdf, 0xa9cc, 0xa5c9, 0x0, 0x1);
        gbc.writeMem(0x14, { 0xcb, 0x56 });
        gbc.writeMem(0xa5c9, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb59e);
        EXPECT(gbc.pc(), 0x16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c9), 0x7c);
        // CB 56 02EB
        gbc.setState(0x902a, 0x4073, 0x6d60, 0x9638, 0x2ff, 0x32fc, 0x0, 0x1);
        gbc.writeMem(0x32fc, { 0x3a });
        gbc.writeMem(0x902a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4073);
        EXPECT(gbc.pc(), 0x902c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x902a), 0xcb);
        EXPECT(gbc.readMem(0x902b), 0x56);
        // CB 56 02EC
        gbc.setState(0xb3a4, 0x347, 0x6350, 0x1ce9, 0x6409, 0xc429, 0x0, 0x1);
        gbc.writeMem(0xb3a4, { 0xcb, 0x56 });
        gbc.writeMem(0xc429, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x347);
        EXPECT(gbc.pc(), 0xb3a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a4), 0xcb);
        EXPECT(gbc.readMem(0xb3a5), 0x56);
        EXPECT(gbc.readMem(0xc429), 0x1b);
        // CB 56 02ED
        gbc.setState(0xcd52, 0x6585, 0xde10, 0x117d, 0x7535, 0xd0c8, 0x1, 0x1);
        gbc.writeMem(0xcd52, { 0xcb, 0x56 });
        gbc.writeMem(0xd0c8, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6585);
        EXPECT(gbc.pc(), 0xcd54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd52), 0xcb);
        EXPECT(gbc.readMem(0xcd53), 0x56);
        EXPECT(gbc.readMem(0xd0c8), 0xfa);
        // CB 56 02EE
        gbc.setState(0x3175, 0x21e, 0x60b0, 0x83e6, 0x32ba, 0xd82e, 0x0, 0x1);
        gbc.writeMem(0x3175, { 0xcb, 0x56 });
        gbc.writeMem(0xd82e, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x21e);
        EXPECT(gbc.pc(), 0x3177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd82e), 0xea);
        // CB 56 02EF
        gbc.setState(0x160c, 0x2b61, 0x5500, 0x97f8, 0xd0e7, 0x5c58, 0x0, 0x0);
        gbc.writeMem(0x160c, { 0xcb, 0x56 });
        gbc.writeMem(0x5c58, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2b61);
        EXPECT(gbc.pc(), 0x160e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 02F0
        gbc.setState(0xc8b5, 0xf347, 0x48e0, 0x4e2, 0x2bc2, 0x368e, 0x1, 0x0);
        gbc.writeMem(0x368e, { 0xe2 });
        gbc.writeMem(0xc8b5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf347);
        EXPECT(gbc.pc(), 0xc8b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b5), 0xcb);
        EXPECT(gbc.readMem(0xc8b6), 0x56);
        // CB 56 02F1
        gbc.setState(0x8631, 0xb3ff, 0xaa00, 0x3a6e, 0x5e64, 0x646d, 0x1, 0x1);
        gbc.writeMem(0x646d, { 0x82 });
        gbc.writeMem(0x8631, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb3ff);
        EXPECT(gbc.pc(), 0x8633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8631), 0xcb);
        EXPECT(gbc.readMem(0x8632), 0x56);
        // CB 56 02F4
        gbc.setState(0x69fa, 0x1c94, 0xb010, 0x1cb4, 0x1389, 0x3391, 0x0, 0x1);
        gbc.writeMem(0x3391, { 0xd });
        gbc.writeMem(0x69fa, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1c94);
        EXPECT(gbc.pc(), 0x69fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 02F5
        gbc.setState(0x7712, 0x44c6, 0xb90, 0x7b22, 0x3972, 0x2bd1, 0x1, 0x1);
        gbc.writeMem(0x2bd1, { 0x18 });
        gbc.writeMem(0x7712, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x44c6);
        EXPECT(gbc.pc(), 0x7714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 02F7
        gbc.setState(0xa600, 0x80db, 0x9460, 0xa12, 0xe0b8, 0xb29f, 0x1, 0x1);
        gbc.writeMem(0xa600, { 0xcb, 0x56 });
        gbc.writeMem(0xb29f, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x80db);
        EXPECT(gbc.pc(), 0xa602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa600), 0xcb);
        EXPECT(gbc.readMem(0xa601), 0x56);
        EXPECT(gbc.readMem(0xb29f), 0xed);
        // CB 56 02F8
        gbc.setState(0xdf88, 0xcc4c, 0x7ca0, 0xb927, 0xdb73, 0xe3b2, 0x0, 0x1);
        gbc.writeMem(0xdf88, { 0xcb, 0x56 });
        gbc.writeMem(0xe3b2, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xcc4c);
        EXPECT(gbc.pc(), 0xdf8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf88), 0xcb);
        EXPECT(gbc.readMem(0xdf89), 0x56);
        EXPECT(gbc.readMem(0xe3b2), 0x42);
        // CB 56 02F9
        gbc.setState(0x4600, 0xd9e2, 0x6ee0, 0x3cb5, 0xcf17, 0x4ae6, 0x0, 0x1);
        gbc.writeMem(0x4600, { 0xcb, 0x56 });
        gbc.writeMem(0x4ae6, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd9e2);
        EXPECT(gbc.pc(), 0x4602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 02FA
        gbc.setState(0x2132, 0x3a7c, 0xd4f0, 0x245e, 0x5c13, 0x63ae, 0x1, 0x0);
        gbc.writeMem(0x2132, { 0xcb, 0x56 });
        gbc.writeMem(0x63ae, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3a7c);
        EXPECT(gbc.pc(), 0x2134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 02FB
        gbc.setState(0xca7e, 0x3b4, 0x8820, 0x4eba, 0x74af, 0xc89b, 0x1, 0x1);
        gbc.writeMem(0xc89b, { 0x12 });
        gbc.writeMem(0xca7e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3b4);
        EXPECT(gbc.pc(), 0xca80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc89b), 0x12);
        EXPECT(gbc.readMem(0xca7e), 0xcb);
        EXPECT(gbc.readMem(0xca7f), 0x56);
        // CB 56 02FC
        gbc.setState(0x6998, 0x3cb0, 0x3570, 0x4cc7, 0xf47c, 0x7ae8, 0x1, 0x1);
        gbc.writeMem(0x6998, { 0xcb, 0x56 });
        gbc.writeMem(0x7ae8, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3cb0);
        EXPECT(gbc.pc(), 0x699a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 02FD
        gbc.setState(0x6170, 0x8ddf, 0x3550, 0x2b49, 0xb0ac, 0x6a97, 0x1, 0x1);
        gbc.writeMem(0x6170, { 0xcb, 0x56 });
        gbc.writeMem(0x6a97, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8ddf);
        EXPECT(gbc.pc(), 0x6172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 02FE
        gbc.setState(0xaac1, 0x958b, 0x6db0, 0xada9, 0xcc8a, 0xa26, 0x1, 0x1);
        gbc.writeMem(0xa26, { 0x53 });
        gbc.writeMem(0xaac1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x958b);
        EXPECT(gbc.pc(), 0xaac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaac1), 0xcb);
        EXPECT(gbc.readMem(0xaac2), 0x56);
        // CB 56 02FF
        gbc.setState(0x384d, 0x83f9, 0x88b0, 0x9efc, 0xc89a, 0x892c, 0x1, 0x1);
        gbc.writeMem(0x384d, { 0xcb, 0x56 });
        gbc.writeMem(0x892c, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x83f9);
        EXPECT(gbc.pc(), 0x384f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x892c), 0xf4);
        // CB 56 0300
        gbc.setState(0x7d5, 0x62fb, 0x6240, 0xf84f, 0x135a, 0x1934, 0x0, 0x1);
        gbc.writeMem(0x7d5, { 0xcb, 0x56 });
        gbc.writeMem(0x1934, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x62fb);
        EXPECT(gbc.pc(), 0x7d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0301
        gbc.setState(0xae7c, 0x28d1, 0xd7e0, 0x5596, 0x63e8, 0x17e9, 0x1, 0x0);
        gbc.writeMem(0x17e9, { 0x36 });
        gbc.writeMem(0xae7c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x28d1);
        EXPECT(gbc.pc(), 0xae7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae7c), 0xcb);
        EXPECT(gbc.readMem(0xae7d), 0x56);
        // CB 56 0302
        gbc.setState(0x3cc8, 0x6ab, 0xe080, 0xbafc, 0xa001, 0x809e, 0x1, 0x1);
        gbc.writeMem(0x3cc8, { 0xcb, 0x56 });
        gbc.writeMem(0x809e, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6ab);
        EXPECT(gbc.pc(), 0x3cca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x809e), 0xac);
        // CB 56 0303
        gbc.setState(0x460f, 0x773e, 0x87a0, 0xc5d7, 0x8f4c, 0xf803, 0x0, 0x0);
        gbc.writeMem(0x460f, { 0xcb, 0x56 });
        gbc.writeMem(0xf803, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x773e);
        EXPECT(gbc.pc(), 0x4611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf803), 0x80);
        // CB 56 0304
        gbc.setState(0x2cfc, 0x2f0b, 0xf0, 0xa510, 0x75ad, 0xc95b, 0x0, 0x0);
        gbc.writeMem(0x2cfc, { 0xcb, 0x56 });
        gbc.writeMem(0xc95b, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2f0b);
        EXPECT(gbc.pc(), 0x2cfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc95b), 0x57);
        // CB 56 0305
        gbc.setState(0x3a68, 0x5b7e, 0x1810, 0x42b1, 0x6789, 0xc0ac, 0x0, 0x1);
        gbc.writeMem(0x3a68, { 0xcb, 0x56 });
        gbc.writeMem(0xc0ac, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5b7e);
        EXPECT(gbc.pc(), 0x3a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0ac), 0x8c);
        // CB 56 0306
        gbc.setState(0x4e17, 0xedd, 0xeee0, 0x6f68, 0xd206, 0x1474, 0x0, 0x1);
        gbc.writeMem(0x1474, { 0xe3 });
        gbc.writeMem(0x4e17, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xedd);
        EXPECT(gbc.pc(), 0x4e19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0307
        gbc.setState(0xa077, 0x590, 0x2bd0, 0xb51a, 0x95bd, 0xdfad, 0x1, 0x1);
        gbc.writeMem(0xa077, { 0xcb, 0x56 });
        gbc.writeMem(0xdfad, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x590);
        EXPECT(gbc.pc(), 0xa079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa077), 0xcb);
        EXPECT(gbc.readMem(0xa078), 0x56);
        EXPECT(gbc.readMem(0xdfad), 0x49);
        // CB 56 0309
        gbc.setState(0x519, 0x3c90, 0xb260, 0x42c5, 0x6436, 0x7f21, 0x0, 0x1);
        gbc.writeMem(0x519, { 0xcb, 0x56 });
        gbc.writeMem(0x7f21, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3c90);
        EXPECT(gbc.pc(), 0x51b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 030A
        gbc.setState(0xb020, 0x35cd, 0x4900, 0x7373, 0x1062, 0x1a6, 0x0, 0x0);
        gbc.writeMem(0x1a6, { 0xb6 });
        gbc.writeMem(0xb020, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x35cd);
        EXPECT(gbc.pc(), 0xb022);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb020), 0xcb);
        EXPECT(gbc.readMem(0xb021), 0x56);
        // CB 56 030B
        gbc.setState(0x4317, 0x609d, 0x1350, 0x6948, 0xcc1a, 0xc3c1, 0x0, 0x1);
        gbc.writeMem(0x4317, { 0xcb, 0x56 });
        gbc.writeMem(0xc3c1, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x609d);
        EXPECT(gbc.pc(), 0x4319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3c1), 0xa2);
        // CB 56 030C
        gbc.setState(0x1d1e, 0x591b, 0x3cf0, 0x3396, 0xbcc5, 0x70e5, 0x0, 0x0);
        gbc.writeMem(0x1d1e, { 0xcb, 0x56 });
        gbc.writeMem(0x70e5, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x591b);
        EXPECT(gbc.pc(), 0x1d20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 030D
        gbc.setState(0xae9c, 0xd3ba, 0x8a90, 0x68ad, 0xc197, 0x4d6b, 0x0, 0x1);
        gbc.writeMem(0x4d6b, { 0xff });
        gbc.writeMem(0xae9c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd3ba);
        EXPECT(gbc.pc(), 0xae9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae9c), 0xcb);
        EXPECT(gbc.readMem(0xae9d), 0x56);
        // CB 56 030E
        gbc.setState(0xd939, 0xbf26, 0xb2c0, 0xc4e3, 0x2ead, 0x4af7, 0x1, 0x1);
        gbc.writeMem(0x4af7, { 0x7a });
        gbc.writeMem(0xd939, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbf26);
        EXPECT(gbc.pc(), 0xd93b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd939), 0xcb);
        EXPECT(gbc.readMem(0xd93a), 0x56);
        // CB 56 030F
        gbc.setState(0x80bf, 0x8170, 0x6140, 0x121b, 0x36c2, 0xaa45, 0x1, 0x1);
        gbc.writeMem(0x80bf, { 0xcb, 0x56 });
        gbc.writeMem(0xaa45, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8170);
        EXPECT(gbc.pc(), 0x80c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80bf), 0xcb);
        EXPECT(gbc.readMem(0x80c0), 0x56);
        EXPECT(gbc.readMem(0xaa45), 0xe4);
        // CB 56 0310
        gbc.setState(0x730b, 0xfbb8, 0x2c90, 0xb284, 0x34ea, 0xf9c6, 0x0, 0x0);
        gbc.writeMem(0x730b, { 0xcb, 0x56 });
        gbc.writeMem(0xf9c6, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfbb8);
        EXPECT(gbc.pc(), 0x730d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf9c6), 0x71);
        // CB 56 0311
        gbc.setState(0x86d7, 0x45bf, 0x5e0, 0x5670, 0xdf07, 0xcc0f, 0x0, 0x0);
        gbc.writeMem(0x86d7, { 0xcb, 0x56 });
        gbc.writeMem(0xcc0f, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x45bf);
        EXPECT(gbc.pc(), 0x86d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d7), 0xcb);
        EXPECT(gbc.readMem(0x86d8), 0x56);
        EXPECT(gbc.readMem(0xcc0f), 0x33);
        // CB 56 0312
        gbc.setState(0x8758, 0xc493, 0x62b0, 0x1ac7, 0x16a9, 0x8f80, 0x1, 0x0);
        gbc.writeMem(0x8758, { 0xcb, 0x56 });
        gbc.writeMem(0x8f80, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc493);
        EXPECT(gbc.pc(), 0x875a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8758), 0xcb);
        EXPECT(gbc.readMem(0x8759), 0x56);
        EXPECT(gbc.readMem(0x8f80), 0xd3);
        // CB 56 0313
        gbc.setState(0x2d96, 0xe283, 0xfe90, 0xcd3, 0x9c28, 0xb2c4, 0x0, 0x0);
        gbc.writeMem(0x2d96, { 0xcb, 0x56 });
        gbc.writeMem(0xb2c4, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe283);
        EXPECT(gbc.pc(), 0x2d98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2c4), 0xd6);
        // CB 56 0314
        gbc.setState(0xb2ce, 0xb68b, 0xb700, 0x5f4d, 0xa713, 0xf8f0, 0x0, 0x0);
        gbc.writeMem(0xb2ce, { 0xcb, 0x56 });
        gbc.writeMem(0xf8f0, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb68b);
        EXPECT(gbc.pc(), 0xb2d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ce), 0xcb);
        EXPECT(gbc.readMem(0xb2cf), 0x56);
        EXPECT(gbc.readMem(0xf8f0), 0x80);
        // CB 56 0315
        gbc.setState(0x3f0b, 0x7ec1, 0xff20, 0x4f9a, 0x2a74, 0x6a57, 0x0, 0x0);
        gbc.writeMem(0x3f0b, { 0xcb, 0x56 });
        gbc.writeMem(0x6a57, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7ec1);
        EXPECT(gbc.pc(), 0x3f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0316
        gbc.setState(0x98b4, 0x3b44, 0xa420, 0x1c73, 0xf49c, 0x5f16, 0x1, 0x0);
        gbc.writeMem(0x5f16, { 0x5 });
        gbc.writeMem(0x98b4, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3b44);
        EXPECT(gbc.pc(), 0x98b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b4), 0xcb);
        EXPECT(gbc.readMem(0x98b5), 0x56);
        // CB 56 0317
        gbc.setState(0x4422, 0xc0cf, 0xd770, 0xf5c7, 0x89f9, 0x57a2, 0x0, 0x0);
        gbc.writeMem(0x4422, { 0xcb, 0x56 });
        gbc.writeMem(0x57a2, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc0cf);
        EXPECT(gbc.pc(), 0x4424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0318
        gbc.setState(0x7d18, 0x311d, 0x5cf0, 0xb525, 0x5c80, 0xf9dd, 0x1, 0x1);
        gbc.writeMem(0x7d18, { 0xcb, 0x56 });
        gbc.writeMem(0xf9dd, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x311d);
        EXPECT(gbc.pc(), 0x7d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf9dd), 0x1);
        // CB 56 0319
        gbc.setState(0x7dd5, 0xce9d, 0x7bc0, 0xe328, 0x31d5, 0xc552, 0x1, 0x0);
        gbc.writeMem(0x7dd5, { 0xcb, 0x56 });
        gbc.writeMem(0xc552, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xce9d);
        EXPECT(gbc.pc(), 0x7dd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc552), 0xa4);
        // CB 56 031A
        gbc.setState(0x8590, 0x4462, 0x9b60, 0x75f5, 0x858a, 0xe5de, 0x1, 0x1);
        gbc.writeMem(0x8590, { 0xcb, 0x56 });
        gbc.writeMem(0xe5de, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4462);
        EXPECT(gbc.pc(), 0x8592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8590), 0xcb);
        EXPECT(gbc.readMem(0x8591), 0x56);
        EXPECT(gbc.readMem(0xe5de), 0xb0);
        // CB 56 031B
        gbc.setState(0x654b, 0x6c21, 0x3b30, 0xcdba, 0xbe2a, 0xb31e, 0x0, 0x1);
        gbc.writeMem(0x654b, { 0xcb, 0x56 });
        gbc.writeMem(0xb31e, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6c21);
        EXPECT(gbc.pc(), 0x654d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb31e), 0xda);
        // CB 56 031D
        gbc.setState(0xbf70, 0xe93b, 0x8e60, 0x99ce, 0x1586, 0x8597, 0x1, 0x0);
        gbc.writeMem(0x8597, { 0x7b });
        gbc.writeMem(0xbf70, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe93b);
        EXPECT(gbc.pc(), 0xbf72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8597), 0x7b);
        EXPECT(gbc.readMem(0xbf70), 0xcb);
        EXPECT(gbc.readMem(0xbf71), 0x56);
        // CB 56 031E
        gbc.setState(0xc55b, 0xb833, 0xef80, 0x7900, 0x69b2, 0xfaa9, 0x1, 0x1);
        gbc.writeMem(0xc55b, { 0xcb, 0x56 });
        gbc.writeMem(0xfaa9, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb833);
        EXPECT(gbc.pc(), 0xc55d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc55b), 0xcb);
        EXPECT(gbc.readMem(0xc55c), 0x56);
        EXPECT(gbc.readMem(0xfaa9), 0x80);
        // CB 56 031F
        gbc.setState(0xda3f, 0xf3b9, 0x9830, 0x5eed, 0xd799, 0xe086, 0x0, 0x0);
        gbc.writeMem(0xda3f, { 0xcb, 0x56 });
        gbc.writeMem(0xe086, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf3b9);
        EXPECT(gbc.pc(), 0xda41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda3f), 0xcb);
        EXPECT(gbc.readMem(0xda40), 0x56);
        EXPECT(gbc.readMem(0xe086), 0x80);
        // CB 56 0320
        gbc.setState(0x77d5, 0x20e, 0x6470, 0x2d6a, 0xbaa3, 0x47ce, 0x0, 0x1);
        gbc.writeMem(0x47ce, { 0x84 });
        gbc.writeMem(0x77d5, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x20e);
        EXPECT(gbc.pc(), 0x77d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0321
        gbc.setState(0x4090, 0x95a6, 0xe810, 0x77c0, 0xc2ad, 0x82af, 0x0, 0x1);
        gbc.writeMem(0x4090, { 0xcb, 0x56 });
        gbc.writeMem(0x82af, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x95a6);
        EXPECT(gbc.pc(), 0x4092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82af), 0x3e);
        // CB 56 0322
        gbc.setState(0x62ac, 0x9df1, 0x9470, 0x83e8, 0x6884, 0x7fb7, 0x1, 0x1);
        gbc.writeMem(0x62ac, { 0xcb, 0x56 });
        gbc.writeMem(0x7fb7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9df1);
        EXPECT(gbc.pc(), 0x62ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0323
        gbc.setState(0x5c5c, 0xc85d, 0xd440, 0xbb9a, 0x3be8, 0x829d, 0x1, 0x1);
        gbc.writeMem(0x5c5c, { 0xcb, 0x56 });
        gbc.writeMem(0x829d, { 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc85d);
        EXPECT(gbc.pc(), 0x5c5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x829d), 0xbc);
        // CB 56 0324
        gbc.setState(0xeca8, 0xf7dc, 0x8430, 0xbf40, 0xbc98, 0x3e8f, 0x0, 0x1);
        gbc.writeMem(0x3e8f, { 0x65 });
        gbc.writeMem(0xeca8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf7dc);
        EXPECT(gbc.pc(), 0xecaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeca8), 0xcb);
        EXPECT(gbc.readMem(0xeca9), 0x56);
        // CB 56 0325
        gbc.setState(0x10c5, 0x52df, 0x8560, 0x1dd3, 0xaec8, 0xb288, 0x1, 0x1);
        gbc.writeMem(0x10c5, { 0xcb, 0x56 });
        gbc.writeMem(0xb288, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x52df);
        EXPECT(gbc.pc(), 0x10c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb288), 0xf2);
        // CB 56 0326
        gbc.setState(0xec4e, 0xa803, 0xfed0, 0xaecd, 0x91fd, 0xf952, 0x0, 0x1);
        gbc.writeMem(0xec4e, { 0xcb, 0x56 });
        gbc.writeMem(0xf952, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa803);
        EXPECT(gbc.pc(), 0xec50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec4e), 0xcb);
        EXPECT(gbc.readMem(0xec4f), 0x56);
        EXPECT(gbc.readMem(0xf952), 0x52);
        // CB 56 0327
        gbc.setState(0x7e7c, 0x4e6e, 0xf660, 0xac18, 0xd940, 0xaa48, 0x1, 0x0);
        gbc.writeMem(0x7e7c, { 0xcb, 0x56 });
        gbc.writeMem(0xaa48, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4e6e);
        EXPECT(gbc.pc(), 0x7e7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa48), 0xd5);
        // CB 56 0328
        gbc.setState(0x6336, 0x6b6d, 0xeec0, 0x841d, 0x63c6, 0x5094, 0x1, 0x1);
        gbc.writeMem(0x5094, { 0x71 });
        gbc.writeMem(0x6336, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6b6d);
        EXPECT(gbc.pc(), 0x6338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0329
        gbc.setState(0x2ca2, 0x9fe4, 0xdb50, 0x4a1e, 0x9d69, 0xbebb, 0x0, 0x0);
        gbc.writeMem(0x2ca2, { 0xcb, 0x56 });
        gbc.writeMem(0xbebb, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9fe4);
        EXPECT(gbc.pc(), 0x2ca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbebb), 0x8b);
        // CB 56 032A
        gbc.setState(0x7731, 0xbc9b, 0x7160, 0xd867, 0xc198, 0xa8b1, 0x1, 0x0);
        gbc.writeMem(0x7731, { 0xcb, 0x56 });
        gbc.writeMem(0xa8b1, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbc9b);
        EXPECT(gbc.pc(), 0x7733);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b1), 0x6e);
        // CB 56 032B
        gbc.setState(0x78ba, 0x65dd, 0xb570, 0xd173, 0xf025, 0xa103, 0x0, 0x0);
        gbc.writeMem(0x78ba, { 0xcb, 0x56 });
        gbc.writeMem(0xa103, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x65dd);
        EXPECT(gbc.pc(), 0x78bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa103), 0x74);
        // CB 56 032C
        gbc.setState(0x1ebe, 0x8a2a, 0xaa0, 0x12ae, 0x26ce, 0x954a, 0x0, 0x0);
        gbc.writeMem(0x1ebe, { 0xcb, 0x56 });
        gbc.writeMem(0x954a, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8a2a);
        EXPECT(gbc.pc(), 0x1ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x954a), 0xc6);
        // CB 56 032D
        gbc.setState(0xbdf, 0xbd64, 0x6440, 0x2f2f, 0x65c5, 0x68d5, 0x1, 0x0);
        gbc.writeMem(0xbdf, { 0xcb, 0x56 });
        gbc.writeMem(0x68d5, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xbd64);
        EXPECT(gbc.pc(), 0xbe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 032E
        gbc.setState(0x2f3e, 0x9699, 0xd850, 0x6e1a, 0x62b4, 0xcba1, 0x1, 0x1);
        gbc.writeMem(0x2f3e, { 0xcb, 0x56 });
        gbc.writeMem(0xcba1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9699);
        EXPECT(gbc.pc(), 0x2f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba1), 0x51);
        // CB 56 032F
        gbc.setState(0xa177, 0x9311, 0xbed0, 0x4fce, 0xbbd7, 0x32f, 0x0, 0x0);
        gbc.writeMem(0x32f, { 0xea });
        gbc.writeMem(0xa177, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9311);
        EXPECT(gbc.pc(), 0xa179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa177), 0xcb);
        EXPECT(gbc.readMem(0xa178), 0x56);
        // CB 56 0330
        gbc.setState(0x3599, 0x71c3, 0x5730, 0x2748, 0x2d, 0x3788, 0x0, 0x1);
        gbc.writeMem(0x3599, { 0xcb, 0x56 });
        gbc.writeMem(0x3788, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x71c3);
        EXPECT(gbc.pc(), 0x359b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0331
        gbc.setState(0x997d, 0xc21a, 0xf1e0, 0x301d, 0x3126, 0x39c3, 0x1, 0x0);
        gbc.writeMem(0x39c3, { 0xea });
        gbc.writeMem(0x997d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc21a);
        EXPECT(gbc.pc(), 0x997f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997d), 0xcb);
        EXPECT(gbc.readMem(0x997e), 0x56);
        // CB 56 0332
        gbc.setState(0x22d3, 0x41ad, 0xf90, 0x56ca, 0x5d33, 0x28a9, 0x0, 0x0);
        gbc.writeMem(0x22d3, { 0xcb, 0x56 });
        gbc.writeMem(0x28a9, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x41ad);
        EXPECT(gbc.pc(), 0x22d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0333
        gbc.setState(0x5571, 0x577, 0x640, 0x405c, 0xf340, 0x228e, 0x1, 0x0);
        gbc.writeMem(0x228e, { 0x1d });
        gbc.writeMem(0x5571, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x577);
        EXPECT(gbc.pc(), 0x5573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0334
        gbc.setState(0x24a8, 0x7ecd, 0xdc10, 0xdd76, 0xe4b6, 0xc9b9, 0x0, 0x1);
        gbc.writeMem(0x24a8, { 0xcb, 0x56 });
        gbc.writeMem(0xc9b9, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7ecd);
        EXPECT(gbc.pc(), 0x24aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9b9), 0xa2);
        // CB 56 0335
        gbc.setState(0xba39, 0x8de3, 0xca20, 0xad13, 0x2b5, 0x54a7, 0x0, 0x1);
        gbc.writeMem(0x54a7, { 0x89 });
        gbc.writeMem(0xba39, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8de3);
        EXPECT(gbc.pc(), 0xba3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba39), 0xcb);
        EXPECT(gbc.readMem(0xba3a), 0x56);
        // CB 56 0336
        gbc.setState(0xdfa3, 0x4f60, 0x5730, 0xd80e, 0xd09e, 0x211d, 0x0, 0x1);
        gbc.writeMem(0x211d, { 0xa4 });
        gbc.writeMem(0xdfa3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4f60);
        EXPECT(gbc.pc(), 0xdfa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfa3), 0xcb);
        EXPECT(gbc.readMem(0xdfa4), 0x56);
        // CB 56 0337
        gbc.setState(0x80bf, 0x473, 0x70, 0xf82c, 0xb416, 0x2cc8, 0x0, 0x0);
        gbc.writeMem(0x2cc8, { 0xf5 });
        gbc.writeMem(0x80bf, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x473);
        EXPECT(gbc.pc(), 0x80c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80bf), 0xcb);
        EXPECT(gbc.readMem(0x80c0), 0x56);
        // CB 56 0339
        gbc.setState(0x6871, 0x6af9, 0x3d70, 0x206b, 0x8bd6, 0xb731, 0x0, 0x0);
        gbc.writeMem(0x6871, { 0xcb, 0x56 });
        gbc.writeMem(0xb731, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6af9);
        EXPECT(gbc.pc(), 0x6873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb731), 0x56);
        // CB 56 033A
        gbc.setState(0xb98a, 0x238c, 0x41d0, 0xefa3, 0xfe58, 0x8392, 0x1, 0x1);
        gbc.writeMem(0x8392, { 0x53 });
        gbc.writeMem(0xb98a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x238c);
        EXPECT(gbc.pc(), 0xb98c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8392), 0x53);
        EXPECT(gbc.readMem(0xb98a), 0xcb);
        EXPECT(gbc.readMem(0xb98b), 0x56);
        // CB 56 033C
        gbc.setState(0xc75f, 0xa31e, 0x4310, 0x60c5, 0x326, 0x9720, 0x0, 0x0);
        gbc.writeMem(0x9720, { 0xbc });
        gbc.writeMem(0xc75f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa31e);
        EXPECT(gbc.pc(), 0xc761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9720), 0xbc);
        EXPECT(gbc.readMem(0xc75f), 0xcb);
        EXPECT(gbc.readMem(0xc760), 0x56);
        // CB 56 033D
        gbc.setState(0x529e, 0x6af2, 0x2740, 0x7101, 0xda55, 0x4ec6, 0x0, 0x0);
        gbc.writeMem(0x4ec6, { 0x51 });
        gbc.writeMem(0x529e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6af2);
        EXPECT(gbc.pc(), 0x52a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 033E
        gbc.setState(0xdd9e, 0xc416, 0xf6b0, 0xd3c7, 0xc12a, 0x4d98, 0x1, 0x1);
        gbc.writeMem(0x4d98, { 0xa6 });
        gbc.writeMem(0xdd9e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc416);
        EXPECT(gbc.pc(), 0xdda0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd9e), 0xcb);
        EXPECT(gbc.readMem(0xdd9f), 0x56);
        // CB 56 033F
        gbc.setState(0xd28a, 0x1dca, 0x67c0, 0x24ae, 0x121d, 0xb27f, 0x1, 0x0);
        gbc.writeMem(0xb27f, { 0xae });
        gbc.writeMem(0xd28a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1dca);
        EXPECT(gbc.pc(), 0xd28c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb27f), 0xae);
        EXPECT(gbc.readMem(0xd28a), 0xcb);
        EXPECT(gbc.readMem(0xd28b), 0x56);
        // CB 56 0340
        gbc.setState(0x215c, 0xdc07, 0xcb20, 0xaf93, 0xd813, 0x6ba5, 0x0, 0x0);
        gbc.writeMem(0x215c, { 0xcb, 0x56 });
        gbc.writeMem(0x6ba5, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xdc07);
        EXPECT(gbc.pc(), 0x215e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0341
        gbc.setState(0x76ee, 0x2dce, 0xfc90, 0x891c, 0x6159, 0x7d64, 0x0, 0x0);
        gbc.writeMem(0x76ee, { 0xcb, 0x56 });
        gbc.writeMem(0x7d64, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2dce);
        EXPECT(gbc.pc(), 0x76f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0342
        gbc.setState(0x54f7, 0x21ce, 0xa5b0, 0x7bef, 0x9087, 0xeeb2, 0x0, 0x0);
        gbc.writeMem(0x54f7, { 0xcb, 0x56 });
        gbc.writeMem(0xeeb2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x21ce);
        EXPECT(gbc.pc(), 0x54f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb2), 0x99);
        // CB 56 0343
        gbc.setState(0xe786, 0x6ca7, 0x990, 0x49b0, 0xef68, 0xced2, 0x1, 0x0);
        gbc.writeMem(0xced2, { 0x2c });
        gbc.writeMem(0xe786, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6ca7);
        EXPECT(gbc.pc(), 0xe788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xced2), 0x2c);
        EXPECT(gbc.readMem(0xe786), 0xcb);
        EXPECT(gbc.readMem(0xe787), 0x56);
        // CB 56 0344
        gbc.setState(0x25fd, 0x7ae4, 0xf2f0, 0x7a17, 0x7f73, 0xc19f, 0x1, 0x1);
        gbc.writeMem(0x25fd, { 0xcb, 0x56 });
        gbc.writeMem(0xc19f, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7ae4);
        EXPECT(gbc.pc(), 0x25ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc19f), 0xa8);
        // CB 56 0346
        gbc.setState(0xd913, 0xf34c, 0x92b0, 0x4b63, 0xd0cc, 0x8903, 0x1, 0x0);
        gbc.writeMem(0x8903, { 0x5 });
        gbc.writeMem(0xd913, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf34c);
        EXPECT(gbc.pc(), 0xd915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8903), 0x5);
        EXPECT(gbc.readMem(0xd913), 0xcb);
        EXPECT(gbc.readMem(0xd914), 0x56);
        // CB 56 0347
        gbc.setState(0xc9c8, 0xfb22, 0x5a30, 0xa49e, 0xaccd, 0x4205, 0x1, 0x0);
        gbc.writeMem(0x4205, { 0x76 });
        gbc.writeMem(0xc9c8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xfb22);
        EXPECT(gbc.pc(), 0xc9ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c8), 0xcb);
        EXPECT(gbc.readMem(0xc9c9), 0x56);
        // CB 56 0348
        gbc.setState(0xb99b, 0x2a0d, 0x5780, 0x56b0, 0x6a5d, 0x18b4, 0x1, 0x1);
        gbc.writeMem(0x18b4, { 0xd6 });
        gbc.writeMem(0xb99b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2a0d);
        EXPECT(gbc.pc(), 0xb99d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb99b), 0xcb);
        EXPECT(gbc.readMem(0xb99c), 0x56);
        // CB 56 0349
        gbc.setState(0xb2a2, 0x4baf, 0xd660, 0xf290, 0x3927, 0xfcf3, 0x0, 0x0);
        gbc.writeMem(0xb2a2, { 0xcb, 0x56 });
        gbc.writeMem(0xfcf3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4baf);
        EXPECT(gbc.pc(), 0xb2a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a2), 0xcb);
        EXPECT(gbc.readMem(0xb2a3), 0x56);
        EXPECT(gbc.readMem(0xfcf3), 0xd8);
        // CB 56 034A
        gbc.setState(0x1970, 0x283d, 0x6770, 0xb014, 0x476b, 0x43fb, 0x1, 0x0);
        gbc.writeMem(0x1970, { 0xcb, 0x56 });
        gbc.writeMem(0x43fb, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x283d);
        EXPECT(gbc.pc(), 0x1972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 034B
        gbc.setState(0x6f0b, 0x2446, 0x27d0, 0xdbff, 0x5fcb, 0xe702, 0x0, 0x0);
        gbc.writeMem(0x6f0b, { 0xcb, 0x56 });
        gbc.writeMem(0xe702, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2446);
        EXPECT(gbc.pc(), 0x6f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe702), 0x49);
        // CB 56 034C
        gbc.setState(0xd7e3, 0x5705, 0xb8f0, 0x4c00, 0x8c0b, 0x2ead, 0x1, 0x1);
        gbc.writeMem(0x2ead, { 0xb0 });
        gbc.writeMem(0xd7e3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5705);
        EXPECT(gbc.pc(), 0xd7e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e3), 0xcb);
        EXPECT(gbc.readMem(0xd7e4), 0x56);
        // CB 56 034D
        gbc.setState(0x969d, 0x9d03, 0xd010, 0xf713, 0xd2be, 0xe043, 0x1, 0x0);
        gbc.writeMem(0x969d, { 0xcb, 0x56 });
        gbc.writeMem(0xe043, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9d03);
        EXPECT(gbc.pc(), 0x969f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x969d), 0xcb);
        EXPECT(gbc.readMem(0x969e), 0x56);
        EXPECT(gbc.readMem(0xe043), 0x79);
        // CB 56 034E
        gbc.setState(0x3c50, 0x384a, 0x1d10, 0x39f3, 0xbf77, 0x4b1e, 0x0, 0x1);
        gbc.writeMem(0x3c50, { 0xcb, 0x56 });
        gbc.writeMem(0x4b1e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x384a);
        EXPECT(gbc.pc(), 0x3c52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 034F
        gbc.setState(0x5e23, 0x701a, 0xe380, 0xed29, 0xdd49, 0xb0ea, 0x0, 0x1);
        gbc.writeMem(0x5e23, { 0xcb, 0x56 });
        gbc.writeMem(0xb0ea, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x701a);
        EXPECT(gbc.pc(), 0x5e25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ea), 0xee);
        // CB 56 0350
        gbc.setState(0x6f24, 0xa8b6, 0xce70, 0x2216, 0xc1bf, 0xb9d3, 0x1, 0x1);
        gbc.writeMem(0x6f24, { 0xcb, 0x56 });
        gbc.writeMem(0xb9d3, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa8b6);
        EXPECT(gbc.pc(), 0x6f26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d3), 0x85);
        // CB 56 0351
        gbc.setState(0xa6b3, 0x50de, 0xe520, 0x52fe, 0x3df2, 0xdab2, 0x0, 0x1);
        gbc.writeMem(0xa6b3, { 0xcb, 0x56 });
        gbc.writeMem(0xdab2, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x50de);
        EXPECT(gbc.pc(), 0xa6b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b3), 0xcb);
        EXPECT(gbc.readMem(0xa6b4), 0x56);
        EXPECT(gbc.readMem(0xdab2), 0x34);
        // CB 56 0352
        gbc.setState(0xab3b, 0x2ff3, 0x3350, 0x934d, 0xc062, 0x40c1, 0x0, 0x0);
        gbc.writeMem(0x40c1, { 0x13 });
        gbc.writeMem(0xab3b, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2ff3);
        EXPECT(gbc.pc(), 0xab3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab3b), 0xcb);
        EXPECT(gbc.readMem(0xab3c), 0x56);
        // CB 56 0353
        gbc.setState(0x556f, 0x8a06, 0x9f60, 0x9803, 0xf20f, 0x39e, 0x1, 0x0);
        gbc.writeMem(0x39e, { 0x9 });
        gbc.writeMem(0x556f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8a06);
        EXPECT(gbc.pc(), 0x5571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0355
        gbc.setState(0x45f2, 0x14d0, 0x1eb0, 0xb073, 0x53fa, 0xaca1, 0x0, 0x0);
        gbc.writeMem(0x45f2, { 0xcb, 0x56 });
        gbc.writeMem(0xaca1, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x14d0);
        EXPECT(gbc.pc(), 0x45f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaca1), 0xed);
        // CB 56 0356
        gbc.setState(0x8799, 0x3571, 0xb4a0, 0xeae7, 0x7fe5, 0xb8ab, 0x1, 0x0);
        gbc.writeMem(0x8799, { 0xcb, 0x56 });
        gbc.writeMem(0xb8ab, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3571);
        EXPECT(gbc.pc(), 0x879b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8799), 0xcb);
        EXPECT(gbc.readMem(0x879a), 0x56);
        EXPECT(gbc.readMem(0xb8ab), 0xef);
        // CB 56 0357
        gbc.setState(0x204, 0x7a29, 0xb040, 0xe002, 0x3742, 0xe14e, 0x1, 0x1);
        gbc.writeMem(0x204, { 0xcb, 0x56 });
        gbc.writeMem(0xe14e, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7a29);
        EXPECT(gbc.pc(), 0x206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe14e), 0x3b);
        // CB 56 0358
        gbc.setState(0x24d0, 0x3f46, 0x4580, 0xa244, 0x86cf, 0x450e, 0x0, 0x0);
        gbc.writeMem(0x24d0, { 0xcb, 0x56 });
        gbc.writeMem(0x450e, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3f46);
        EXPECT(gbc.pc(), 0x24d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0359
        gbc.setState(0x37aa, 0x7fef, 0x7710, 0xc82e, 0x69e6, 0x7dc3, 0x1, 0x0);
        gbc.writeMem(0x37aa, { 0xcb, 0x56 });
        gbc.writeMem(0x7dc3, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7fef);
        EXPECT(gbc.pc(), 0x37ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 035A
        gbc.setState(0xb09e, 0xcc1d, 0xa670, 0x39b1, 0x3de2, 0x661a, 0x1, 0x1);
        gbc.writeMem(0x661a, { 0x9f });
        gbc.writeMem(0xb09e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xcc1d);
        EXPECT(gbc.pc(), 0xb0a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb09e), 0xcb);
        EXPECT(gbc.readMem(0xb09f), 0x56);
        // CB 56 035B
        gbc.setState(0x76b5, 0xc315, 0x6a10, 0xb04d, 0x18fe, 0xd202, 0x1, 0x0);
        gbc.writeMem(0x76b5, { 0xcb, 0x56 });
        gbc.writeMem(0xd202, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc315);
        EXPECT(gbc.pc(), 0x76b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd202), 0x92);
        // CB 56 035C
        gbc.setState(0x9c21, 0x43c, 0x7860, 0x4a96, 0x56a9, 0x7256, 0x1, 0x0);
        gbc.writeMem(0x7256, { 0x8a });
        gbc.writeMem(0x9c21, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x43c);
        EXPECT(gbc.pc(), 0x9c23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c21), 0xcb);
        EXPECT(gbc.readMem(0x9c22), 0x56);
        // CB 56 035D
        gbc.setState(0xe877, 0x2105, 0x8380, 0x185b, 0x84ac, 0x4df2, 0x1, 0x1);
        gbc.writeMem(0x4df2, { 0xce });
        gbc.writeMem(0xe877, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2105);
        EXPECT(gbc.pc(), 0xe879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe877), 0xcb);
        EXPECT(gbc.readMem(0xe878), 0x56);
        // CB 56 035E
        gbc.setState(0xbe35, 0xae31, 0x3310, 0x153e, 0x57b7, 0xf530, 0x1, 0x0);
        gbc.writeMem(0xbe35, { 0xcb, 0x56 });
        gbc.writeMem(0xf530, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xae31);
        EXPECT(gbc.pc(), 0xbe37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe35), 0xcb);
        EXPECT(gbc.readMem(0xbe36), 0x56);
        EXPECT(gbc.readMem(0xf530), 0x6d);
        // CB 56 035F
        gbc.setState(0xb3e2, 0xfed6, 0xeff0, 0x52a7, 0x2319, 0x3742, 0x0, 0x1);
        gbc.writeMem(0x3742, { 0x23 });
        gbc.writeMem(0xb3e2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfed6);
        EXPECT(gbc.pc(), 0xb3e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e2), 0xcb);
        EXPECT(gbc.readMem(0xb3e3), 0x56);
        // CB 56 0360
        gbc.setState(0x269f, 0x7c21, 0xdb90, 0x3308, 0x7e4c, 0x248b, 0x0, 0x0);
        gbc.writeMem(0x248b, { 0xd7 });
        gbc.writeMem(0x269f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7c21);
        EXPECT(gbc.pc(), 0x26a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0361
        gbc.setState(0x58ea, 0x6ca4, 0x85b0, 0x1519, 0xd6bc, 0x211a, 0x0, 0x0);
        gbc.writeMem(0x211a, { 0x7d });
        gbc.writeMem(0x58ea, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6ca4);
        EXPECT(gbc.pc(), 0x58ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0363
        gbc.setState(0x583c, 0xcf38, 0x8af0, 0x5205, 0xb92e, 0x233c, 0x0, 0x0);
        gbc.writeMem(0x233c, { 0xcd });
        gbc.writeMem(0x583c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xcf38);
        EXPECT(gbc.pc(), 0x583e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0364
        gbc.setState(0xec33, 0x855c, 0x74f0, 0xa989, 0x6b3c, 0xf965, 0x0, 0x0);
        gbc.writeMem(0xec33, { 0xcb, 0x56 });
        gbc.writeMem(0xf965, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x855c);
        EXPECT(gbc.pc(), 0xec35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec33), 0xcb);
        EXPECT(gbc.readMem(0xec34), 0x56);
        EXPECT(gbc.readMem(0xf965), 0x4a);
        // CB 56 0365
        gbc.setState(0xeb6f, 0x873a, 0x49d0, 0xc5e1, 0x78b8, 0x4fef, 0x1, 0x0);
        gbc.writeMem(0x4fef, { 0x2e });
        gbc.writeMem(0xeb6f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x873a);
        EXPECT(gbc.pc(), 0xeb71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb6f), 0xcb);
        EXPECT(gbc.readMem(0xeb70), 0x56);
        // CB 56 0366
        gbc.setState(0x4633, 0xb8c5, 0x6460, 0x468a, 0x3357, 0xcecf, 0x0, 0x0);
        gbc.writeMem(0x4633, { 0xcb, 0x56 });
        gbc.writeMem(0xcecf, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb8c5);
        EXPECT(gbc.pc(), 0x4635);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcecf), 0x32);
        // CB 56 0367
        gbc.setState(0x4aed, 0xa1a, 0xdb20, 0x947, 0x6906, 0xed3e, 0x0, 0x0);
        gbc.writeMem(0x4aed, { 0xcb, 0x56 });
        gbc.writeMem(0xed3e, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa1a);
        EXPECT(gbc.pc(), 0x4aef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed3e), 0xa9);
        // CB 56 0368
        gbc.setState(0x3c92, 0x2438, 0x9ac0, 0x7f6, 0x6ae7, 0x7f6b, 0x1, 0x0);
        gbc.writeMem(0x3c92, { 0xcb, 0x56 });
        gbc.writeMem(0x7f6b, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2438);
        EXPECT(gbc.pc(), 0x3c94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0369
        gbc.setState(0x874e, 0xc08a, 0xab60, 0x1114, 0xf358, 0x461d, 0x1, 0x0);
        gbc.writeMem(0x461d, { 0x1f });
        gbc.writeMem(0x874e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc08a);
        EXPECT(gbc.pc(), 0x8750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x874e), 0xcb);
        EXPECT(gbc.readMem(0x874f), 0x56);
        // CB 56 036A
        gbc.setState(0xce42, 0x38fc, 0xeb60, 0x5a32, 0x3fbf, 0xd03a, 0x1, 0x0);
        gbc.writeMem(0xce42, { 0xcb, 0x56 });
        gbc.writeMem(0xd03a, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x38fc);
        EXPECT(gbc.pc(), 0xce44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce42), 0xcb);
        EXPECT(gbc.readMem(0xce43), 0x56);
        EXPECT(gbc.readMem(0xd03a), 0xc9);
        // CB 56 036C
        gbc.setState(0xae54, 0xed4c, 0xdc30, 0x2cd6, 0x145e, 0x6c3e, 0x1, 0x0);
        gbc.writeMem(0x6c3e, { 0x46 });
        gbc.writeMem(0xae54, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xed4c);
        EXPECT(gbc.pc(), 0xae56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae54), 0xcb);
        EXPECT(gbc.readMem(0xae55), 0x56);
        // CB 56 036E
        gbc.setState(0x3f52, 0x6cd8, 0x5b40, 0xc4c4, 0x5728, 0x84b5, 0x1, 0x0);
        gbc.writeMem(0x3f52, { 0xcb, 0x56 });
        gbc.writeMem(0x84b5, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6cd8);
        EXPECT(gbc.pc(), 0x3f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b5), 0x35);
        // CB 56 036F
        gbc.setState(0xd467, 0xbe2b, 0xaff0, 0x2829, 0xeeeb, 0x1574, 0x1, 0x0);
        gbc.writeMem(0x1574, { 0xb9 });
        gbc.writeMem(0xd467, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbe2b);
        EXPECT(gbc.pc(), 0xd469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd467), 0xcb);
        EXPECT(gbc.readMem(0xd468), 0x56);
        // CB 56 0370
        gbc.setState(0xee7c, 0x8611, 0x3350, 0xd7a6, 0x3b93, 0xd0de, 0x0, 0x1);
        gbc.writeMem(0xd0de, { 0xcf });
        gbc.writeMem(0xee7c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8611);
        EXPECT(gbc.pc(), 0xee7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0de), 0xcf);
        EXPECT(gbc.readMem(0xee7c), 0xcb);
        EXPECT(gbc.readMem(0xee7d), 0x56);
        // CB 56 0371
        gbc.setState(0x9560, 0xb542, 0xaf20, 0xecb, 0xf26a, 0x5260, 0x1, 0x0);
        gbc.writeMem(0x5260, { 0x2c });
        gbc.writeMem(0x9560, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb542);
        EXPECT(gbc.pc(), 0x9562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9560), 0xcb);
        EXPECT(gbc.readMem(0x9561), 0x56);
        // CB 56 0372
        gbc.setState(0x1b64, 0xce8, 0x4740, 0x6ffe, 0x61d5, 0x347d, 0x0, 0x1);
        gbc.writeMem(0x1b64, { 0xcb, 0x56 });
        gbc.writeMem(0x347d, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xce8);
        EXPECT(gbc.pc(), 0x1b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0373
        gbc.setState(0x9e97, 0x49d5, 0xb9b0, 0x2144, 0xeea1, 0x8442, 0x1, 0x1);
        gbc.writeMem(0x8442, { 0x43 });
        gbc.writeMem(0x9e97, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x49d5);
        EXPECT(gbc.pc(), 0x9e99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8442), 0x43);
        EXPECT(gbc.readMem(0x9e97), 0xcb);
        EXPECT(gbc.readMem(0x9e98), 0x56);
        // CB 56 0374
        gbc.setState(0xb84e, 0xebf2, 0xd450, 0xbe3b, 0x82cb, 0x1857, 0x0, 0x1);
        gbc.writeMem(0x1857, { 0x68 });
        gbc.writeMem(0xb84e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xebf2);
        EXPECT(gbc.pc(), 0xb850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb84e), 0xcb);
        EXPECT(gbc.readMem(0xb84f), 0x56);
        // CB 56 0375
        gbc.setState(0x33cb, 0x450c, 0x8ec0, 0x943, 0xbf07, 0x2435, 0x0, 0x0);
        gbc.writeMem(0x2435, { 0xc9 });
        gbc.writeMem(0x33cb, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x450c);
        EXPECT(gbc.pc(), 0x33cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0376
        gbc.setState(0x95ea, 0xb2b7, 0x9e40, 0xbcaf, 0x6a6f, 0xe714, 0x0, 0x0);
        gbc.writeMem(0x95ea, { 0xcb, 0x56 });
        gbc.writeMem(0xe714, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb2b7);
        EXPECT(gbc.pc(), 0x95ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ea), 0xcb);
        EXPECT(gbc.readMem(0x95eb), 0x56);
        EXPECT(gbc.readMem(0xe714), 0xa9);
        // CB 56 0377
        gbc.setState(0x8909, 0xf9d0, 0xc8f0, 0x9173, 0xdcd8, 0xc5ee, 0x0, 0x0);
        gbc.writeMem(0x8909, { 0xcb, 0x56 });
        gbc.writeMem(0xc5ee, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf9d0);
        EXPECT(gbc.pc(), 0x890b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8909), 0xcb);
        EXPECT(gbc.readMem(0x890a), 0x56);
        EXPECT(gbc.readMem(0xc5ee), 0xb8);
        // CB 56 0378
        gbc.setState(0xdc01, 0x1b9f, 0x7280, 0xdab9, 0xb320, 0x84b3, 0x1, 0x1);
        gbc.writeMem(0x84b3, { 0x77 });
        gbc.writeMem(0xdc01, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1b9f);
        EXPECT(gbc.pc(), 0xdc03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b3), 0x77);
        EXPECT(gbc.readMem(0xdc01), 0xcb);
        EXPECT(gbc.readMem(0xdc02), 0x56);
        // CB 56 0379
        gbc.setState(0xc26c, 0x8f19, 0xfe00, 0x365b, 0xa8c3, 0x5f85, 0x0, 0x1);
        gbc.writeMem(0x5f85, { 0xa0 });
        gbc.writeMem(0xc26c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8f19);
        EXPECT(gbc.pc(), 0xc26e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc26c), 0xcb);
        EXPECT(gbc.readMem(0xc26d), 0x56);
        // CB 56 037A
        gbc.setState(0x3eb6, 0x3013, 0xe990, 0x6f78, 0x5fbb, 0x541d, 0x1, 0x0);
        gbc.writeMem(0x3eb6, { 0xcb, 0x56 });
        gbc.writeMem(0x541d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3013);
        EXPECT(gbc.pc(), 0x3eb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 037B
        gbc.setState(0x440f, 0x8457, 0xfe40, 0x20d2, 0xed04, 0x72bc, 0x1, 0x1);
        gbc.writeMem(0x440f, { 0xcb, 0x56 });
        gbc.writeMem(0x72bc, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8457);
        EXPECT(gbc.pc(), 0x4411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 037D
        gbc.setState(0xc6c1, 0x4f5c, 0xc100, 0xfc11, 0xa0c4, 0x68d1, 0x1, 0x0);
        gbc.writeMem(0x68d1, { 0xc7 });
        gbc.writeMem(0xc6c1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4f5c);
        EXPECT(gbc.pc(), 0xc6c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c1), 0xcb);
        EXPECT(gbc.readMem(0xc6c2), 0x56);
        // CB 56 037E
        gbc.setState(0xb413, 0x863, 0xfb40, 0x655d, 0xfbef, 0xbe53, 0x0, 0x0);
        gbc.writeMem(0xb413, { 0xcb, 0x56 });
        gbc.writeMem(0xbe53, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x863);
        EXPECT(gbc.pc(), 0xb415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb413), 0xcb);
        EXPECT(gbc.readMem(0xb414), 0x56);
        EXPECT(gbc.readMem(0xbe53), 0x78);
        // CB 56 037F
        gbc.setState(0x32cd, 0x2430, 0xee80, 0x52b3, 0x3aab, 0xfa7d, 0x1, 0x0);
        gbc.writeMem(0x32cd, { 0xcb, 0x56 });
        gbc.writeMem(0xfa7d, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2430);
        EXPECT(gbc.pc(), 0x32cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa7d), 0x68);
        // CB 56 0380
        gbc.setState(0xb427, 0x86a1, 0x60c0, 0x3034, 0x2f12, 0xd6a6, 0x0, 0x0);
        gbc.writeMem(0xb427, { 0xcb, 0x56 });
        gbc.writeMem(0xd6a6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x86a1);
        EXPECT(gbc.pc(), 0xb429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb427), 0xcb);
        EXPECT(gbc.readMem(0xb428), 0x56);
        EXPECT(gbc.readMem(0xd6a6), 0x29);
        // CB 56 0381
        gbc.setState(0xb3a1, 0x2994, 0x5a00, 0xa105, 0x3c7, 0x3995, 0x0, 0x1);
        gbc.writeMem(0x3995, { 0x6a });
        gbc.writeMem(0xb3a1, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2994);
        EXPECT(gbc.pc(), 0xb3a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a1), 0xcb);
        EXPECT(gbc.readMem(0xb3a2), 0x56);
        // CB 56 0382
        gbc.setState(0x7f16, 0x481c, 0xb0, 0x9402, 0xdae, 0xf02e, 0x0, 0x0);
        gbc.writeMem(0x7f16, { 0xcb, 0x56 });
        gbc.writeMem(0xf02e, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x481c);
        EXPECT(gbc.pc(), 0x7f18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf02e), 0x53);
        // CB 56 0383
        gbc.setState(0xb4cf, 0x44b9, 0xdff0, 0x778a, 0x5122, 0x224f, 0x0, 0x0);
        gbc.writeMem(0x224f, { 0x78 });
        gbc.writeMem(0xb4cf, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x44b9);
        EXPECT(gbc.pc(), 0xb4d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4cf), 0xcb);
        EXPECT(gbc.readMem(0xb4d0), 0x56);
        // CB 56 0384
        gbc.setState(0xc845, 0xdfb1, 0xa6f0, 0x6e01, 0xf22d, 0x4457, 0x1, 0x1);
        gbc.writeMem(0x4457, { 0x1f });
        gbc.writeMem(0xc845, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xdfb1);
        EXPECT(gbc.pc(), 0xc847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc845), 0xcb);
        EXPECT(gbc.readMem(0xc846), 0x56);
        // CB 56 0385
        gbc.setState(0x6c3b, 0xc065, 0x4980, 0xa56e, 0xa8de, 0xa834, 0x1, 0x0);
        gbc.writeMem(0x6c3b, { 0xcb, 0x56 });
        gbc.writeMem(0xa834, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc065);
        EXPECT(gbc.pc(), 0x6c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa834), 0x88);
        // CB 56 0386
        gbc.setState(0xa70, 0xde80, 0xbb70, 0x9686, 0x71dc, 0x430d, 0x0, 0x1);
        gbc.writeMem(0xa70, { 0xcb, 0x56 });
        gbc.writeMem(0x430d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xde80);
        EXPECT(gbc.pc(), 0xa72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0387
        gbc.setState(0x643c, 0xcbcc, 0x5190, 0x42a1, 0xa9a8, 0x583a, 0x1, 0x1);
        gbc.writeMem(0x583a, { 0xec });
        gbc.writeMem(0x643c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xcbcc);
        EXPECT(gbc.pc(), 0x643e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0388
        gbc.setState(0xd82, 0xfdb9, 0x1990, 0x3ca5, 0x7f5f, 0x13a1, 0x1, 0x1);
        gbc.writeMem(0xd82, { 0xcb, 0x56 });
        gbc.writeMem(0x13a1, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xfdb9);
        EXPECT(gbc.pc(), 0xd84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0389
        gbc.setState(0x79ed, 0xce0e, 0xcd0, 0x5579, 0xaa25, 0x277, 0x0, 0x1);
        gbc.writeMem(0x277, { 0x45 });
        gbc.writeMem(0x79ed, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xce0e);
        EXPECT(gbc.pc(), 0x79ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 038B
        gbc.setState(0xd76d, 0x2e0, 0x24b0, 0xae3a, 0xb9d1, 0xd2c7, 0x0, 0x0);
        gbc.writeMem(0xd2c7, { 0x35 });
        gbc.writeMem(0xd76d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2e0);
        EXPECT(gbc.pc(), 0xd76f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2c7), 0x35);
        EXPECT(gbc.readMem(0xd76d), 0xcb);
        EXPECT(gbc.readMem(0xd76e), 0x56);
        // CB 56 038C
        gbc.setState(0x53db, 0x1a34, 0xe1c0, 0xef63, 0xfd89, 0xce08, 0x0, 0x0);
        gbc.writeMem(0x53db, { 0xcb, 0x56 });
        gbc.writeMem(0xce08, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1a34);
        EXPECT(gbc.pc(), 0x53dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce08), 0xde);
        // CB 56 038E
        gbc.setState(0x9923, 0x6748, 0xc5c0, 0x2ac, 0x1194, 0xaaf, 0x1, 0x1);
        gbc.writeMem(0xaaf, { 0x12 });
        gbc.writeMem(0x9923, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6748);
        EXPECT(gbc.pc(), 0x9925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9923), 0xcb);
        EXPECT(gbc.readMem(0x9924), 0x56);
        // CB 56 038F
        gbc.setState(0x1ec7, 0x12d7, 0x9180, 0xd701, 0xeb32, 0x1d8e, 0x1, 0x1);
        gbc.writeMem(0x1d8e, { 0xa1 });
        gbc.writeMem(0x1ec7, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x12d7);
        EXPECT(gbc.pc(), 0x1ec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 0390
        gbc.setState(0x7bd2, 0x45d, 0xb8d0, 0x55, 0xd4ca, 0x9ab6, 0x1, 0x0);
        gbc.writeMem(0x7bd2, { 0xcb, 0x56 });
        gbc.writeMem(0x9ab6, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x45d);
        EXPECT(gbc.pc(), 0x7bd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab6), 0xc1);
        // CB 56 0391
        gbc.setState(0xc1af, 0x55c8, 0x2490, 0xa573, 0x90f0, 0xc16e, 0x0, 0x1);
        gbc.writeMem(0xc16e, { 0x97 });
        gbc.writeMem(0xc1af, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x55c8);
        EXPECT(gbc.pc(), 0xc1b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc16e), 0x97);
        EXPECT(gbc.readMem(0xc1af), 0xcb);
        EXPECT(gbc.readMem(0xc1b0), 0x56);
        // CB 56 0392
        gbc.setState(0x6983, 0x3f08, 0x330, 0x4213, 0x92a2, 0xde9d, 0x1, 0x1);
        gbc.writeMem(0x6983, { 0xcb, 0x56 });
        gbc.writeMem(0xde9d, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3f08);
        EXPECT(gbc.pc(), 0x6985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde9d), 0xc4);
        // CB 56 0393
        gbc.setState(0x7cce, 0x549, 0x4b0, 0x9f23, 0xf297, 0x2067, 0x1, 0x0);
        gbc.writeMem(0x2067, { 0x44 });
        gbc.writeMem(0x7cce, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x549);
        EXPECT(gbc.pc(), 0x7cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 0394
        gbc.setState(0x8996, 0x7120, 0xdf00, 0x6b42, 0x4b1b, 0x5ce7, 0x0, 0x0);
        gbc.writeMem(0x5ce7, { 0xc3 });
        gbc.writeMem(0x8996, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7120);
        EXPECT(gbc.pc(), 0x8998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8996), 0xcb);
        EXPECT(gbc.readMem(0x8997), 0x56);
        // CB 56 0396
        gbc.setState(0xa46f, 0xec5a, 0xf480, 0x14b6, 0x5139, 0x197a, 0x1, 0x0);
        gbc.writeMem(0x197a, { 0xf0 });
        gbc.writeMem(0xa46f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xec5a);
        EXPECT(gbc.pc(), 0xa471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa46f), 0xcb);
        EXPECT(gbc.readMem(0xa470), 0x56);
        // CB 56 0398
        gbc.setState(0xb116, 0x697c, 0x3af0, 0x221c, 0x9184, 0xe503, 0x0, 0x0);
        gbc.writeMem(0xb116, { 0xcb, 0x56 });
        gbc.writeMem(0xe503, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x697c);
        EXPECT(gbc.pc(), 0xb118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb116), 0xcb);
        EXPECT(gbc.readMem(0xb117), 0x56);
        EXPECT(gbc.readMem(0xe503), 0x1e);
        // CB 56 0399
        gbc.setState(0xbe65, 0xf3b, 0x9920, 0x7871, 0x9a6b, 0x2fe9, 0x0, 0x1);
        gbc.writeMem(0x2fe9, { 0x4e });
        gbc.writeMem(0xbe65, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf3b);
        EXPECT(gbc.pc(), 0xbe67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe65), 0xcb);
        EXPECT(gbc.readMem(0xbe66), 0x56);
        // CB 56 039A
        gbc.setState(0xdc8c, 0x8e4, 0xe720, 0x9ff6, 0x2ad, 0x2c30, 0x0, 0x0);
        gbc.writeMem(0x2c30, { 0x49 });
        gbc.writeMem(0xdc8c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8e4);
        EXPECT(gbc.pc(), 0xdc8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc8c), 0xcb);
        EXPECT(gbc.readMem(0xdc8d), 0x56);
        // CB 56 039B
        gbc.setState(0x8802, 0xdfa2, 0x8680, 0x762b, 0x3019, 0x336f, 0x1, 0x1);
        gbc.writeMem(0x336f, { 0x20 });
        gbc.writeMem(0x8802, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdfa2);
        EXPECT(gbc.pc(), 0x8804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8802), 0xcb);
        EXPECT(gbc.readMem(0x8803), 0x56);
        // CB 56 039C
        gbc.setState(0xbe5e, 0x26c3, 0xc430, 0xfe4f, 0xe4ed, 0x36cd, 0x0, 0x1);
        gbc.writeMem(0x36cd, { 0xe6 });
        gbc.writeMem(0xbe5e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x26c3);
        EXPECT(gbc.pc(), 0xbe60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe5e), 0xcb);
        EXPECT(gbc.readMem(0xbe5f), 0x56);
        // CB 56 039D
        gbc.setState(0x7587, 0xd80e, 0x240, 0x3c47, 0xc8f5, 0xeb64, 0x0, 0x1);
        gbc.writeMem(0x7587, { 0xcb, 0x56 });
        gbc.writeMem(0xeb64, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd80e);
        EXPECT(gbc.pc(), 0x7589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb64), 0x2b);
        // CB 56 039E
        gbc.setState(0xcdab, 0xe8b8, 0xd6c0, 0x182f, 0x47cc, 0x944, 0x0, 0x1);
        gbc.writeMem(0x944, { 0x2f });
        gbc.writeMem(0xcdab, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe8b8);
        EXPECT(gbc.pc(), 0xcdad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdab), 0xcb);
        EXPECT(gbc.readMem(0xcdac), 0x56);
        // CB 56 039F
        gbc.setState(0xd0bd, 0xf274, 0xbcb0, 0x79e4, 0x2292, 0x3f2, 0x0, 0x0);
        gbc.writeMem(0x3f2, { 0x77 });
        gbc.writeMem(0xd0bd, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf274);
        EXPECT(gbc.pc(), 0xd0bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0bd), 0xcb);
        EXPECT(gbc.readMem(0xd0be), 0x56);
        // CB 56 03A0
        gbc.setState(0x2ce8, 0xaf82, 0x8450, 0x1d0e, 0x690c, 0xa0da, 0x1, 0x0);
        gbc.writeMem(0x2ce8, { 0xcb, 0x56 });
        gbc.writeMem(0xa0da, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xaf82);
        EXPECT(gbc.pc(), 0x2cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0da), 0xaa);
        // CB 56 03A1
        gbc.setState(0x2b81, 0x2d3a, 0xe230, 0xcb30, 0xd4d8, 0x3e8b, 0x0, 0x0);
        gbc.writeMem(0x2b81, { 0xcb, 0x56 });
        gbc.writeMem(0x3e8b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2d3a);
        EXPECT(gbc.pc(), 0x2b83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 03A2
        gbc.setState(0xe05f, 0xd501, 0x4a90, 0x531f, 0x4739, 0xa1dc, 0x0, 0x1);
        gbc.writeMem(0xa1dc, { 0xb5 });
        gbc.writeMem(0xe05f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd501);
        EXPECT(gbc.pc(), 0xe061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1dc), 0xb5);
        EXPECT(gbc.readMem(0xe05f), 0xcb);
        EXPECT(gbc.readMem(0xe060), 0x56);
        // CB 56 03A3
        gbc.setState(0xc1f3, 0x917a, 0xc4e0, 0x7659, 0xddd2, 0xc23, 0x0, 0x0);
        gbc.writeMem(0xc23, { 0xab });
        gbc.writeMem(0xc1f3, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x917a);
        EXPECT(gbc.pc(), 0xc1f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1f3), 0xcb);
        EXPECT(gbc.readMem(0xc1f4), 0x56);
        // CB 56 03A5
        gbc.setState(0x51ba, 0x1492, 0x4ab0, 0xc31f, 0xbd74, 0x6e66, 0x0, 0x1);
        gbc.writeMem(0x51ba, { 0xcb, 0x56 });
        gbc.writeMem(0x6e66, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1492);
        EXPECT(gbc.pc(), 0x51bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 03A6
        gbc.setState(0x4c4e, 0xcacc, 0xdee0, 0x6e5, 0x2670, 0xa78d, 0x1, 0x1);
        gbc.writeMem(0x4c4e, { 0xcb, 0x56 });
        gbc.writeMem(0xa78d, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xcacc);
        EXPECT(gbc.pc(), 0x4c50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa78d), 0x70);
        // CB 56 03A7
        gbc.setState(0x5a1, 0x9340, 0x50, 0x49f9, 0x79e4, 0x66a, 0x1, 0x1);
        gbc.writeMem(0x5a1, { 0xcb, 0x56 });
        gbc.writeMem(0x66a, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9340);
        EXPECT(gbc.pc(), 0x5a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 03A8
        gbc.setState(0xc07e, 0x8d6a, 0xe4b0, 0xce08, 0x3afe, 0xde2e, 0x1, 0x1);
        gbc.writeMem(0xc07e, { 0xcb, 0x56 });
        gbc.writeMem(0xde2e, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8d6a);
        EXPECT(gbc.pc(), 0xc080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc07e), 0xcb);
        EXPECT(gbc.readMem(0xc07f), 0x56);
        EXPECT(gbc.readMem(0xde2e), 0xf4);
        // CB 56 03A9
        gbc.setState(0x8a87, 0x94c3, 0x7930, 0xc826, 0xe5d3, 0xf0ee, 0x1, 0x1);
        gbc.writeMem(0x8a87, { 0xcb, 0x56 });
        gbc.writeMem(0xf0ee, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x94c3);
        EXPECT(gbc.pc(), 0x8a89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a87), 0xcb);
        EXPECT(gbc.readMem(0x8a88), 0x56);
        EXPECT(gbc.readMem(0xf0ee), 0xde);
        // CB 56 03AA
        gbc.setState(0x3199, 0xac0, 0xdf10, 0x315, 0x9e98, 0xcb5a, 0x0, 0x1);
        gbc.writeMem(0x3199, { 0xcb, 0x56 });
        gbc.writeMem(0xcb5a, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xac0);
        EXPECT(gbc.pc(), 0x319b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb5a), 0x21);
        // CB 56 03AB
        gbc.setState(0xdb42, 0xb875, 0x6f60, 0xeeee, 0xc253, 0x593, 0x1, 0x0);
        gbc.writeMem(0x593, { 0x3d });
        gbc.writeMem(0xdb42, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb875);
        EXPECT(gbc.pc(), 0xdb44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb42), 0xcb);
        EXPECT(gbc.readMem(0xdb43), 0x56);
        // CB 56 03AC
        gbc.setState(0xdc7f, 0xc64d, 0xe0c0, 0x145f, 0xf9b2, 0x6d74, 0x1, 0x1);
        gbc.writeMem(0x6d74, { 0x19 });
        gbc.writeMem(0xdc7f, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc64d);
        EXPECT(gbc.pc(), 0xdc81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc7f), 0xcb);
        EXPECT(gbc.readMem(0xdc80), 0x56);
        // CB 56 03AD
        gbc.setState(0x4e1d, 0xeb2d, 0x9b50, 0x510d, 0x4627, 0x3b49, 0x0, 0x1);
        gbc.writeMem(0x3b49, { 0x72 });
        gbc.writeMem(0x4e1d, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xeb2d);
        EXPECT(gbc.pc(), 0x4e1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 03AE
        gbc.setState(0x317d, 0x8a25, 0xc230, 0x4858, 0x32fb, 0x87c0, 0x1, 0x0);
        gbc.writeMem(0x317d, { 0xcb, 0x56 });
        gbc.writeMem(0x87c0, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8a25);
        EXPECT(gbc.pc(), 0x317f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87c0), 0xd4);
        // CB 56 03AF
        gbc.setState(0x8efa, 0x3647, 0x8fc0, 0xa7b9, 0xff7c, 0x8ab0, 0x0, 0x0);
        gbc.writeMem(0x8ab0, { 0x50 });
        gbc.writeMem(0x8efa, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3647);
        EXPECT(gbc.pc(), 0x8efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab0), 0x50);
        EXPECT(gbc.readMem(0x8efa), 0xcb);
        EXPECT(gbc.readMem(0x8efb), 0x56);
        // CB 56 03B0
        gbc.setState(0xe768, 0x3d79, 0xfb20, 0xfa6b, 0x2ad9, 0xf166, 0x0, 0x0);
        gbc.writeMem(0xe768, { 0xcb, 0x56 });
        gbc.writeMem(0xf166, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3d79);
        EXPECT(gbc.pc(), 0xe76a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe768), 0xcb);
        EXPECT(gbc.readMem(0xe769), 0x56);
        EXPECT(gbc.readMem(0xf166), 0x8b);
        // CB 56 03B1
        gbc.setState(0xbfe6, 0xb811, 0x4b50, 0x725a, 0x55e, 0x3958, 0x0, 0x1);
        gbc.writeMem(0x3958, { 0x1d });
        gbc.writeMem(0xbfe6, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb811);
        EXPECT(gbc.pc(), 0xbfe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe6), 0xcb);
        EXPECT(gbc.readMem(0xbfe7), 0x56);
        // CB 56 03B2
        gbc.setState(0x82a2, 0x417f, 0xb1b0, 0xc87a, 0x62df, 0xb391, 0x0, 0x1);
        gbc.writeMem(0x82a2, { 0xcb, 0x56 });
        gbc.writeMem(0xb391, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x417f);
        EXPECT(gbc.pc(), 0x82a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a2), 0xcb);
        EXPECT(gbc.readMem(0x82a3), 0x56);
        EXPECT(gbc.readMem(0xb391), 0x77);
        // CB 56 03B3
        gbc.setState(0x91ad, 0x93fe, 0xca20, 0x9e70, 0x3b76, 0xc0e1, 0x1, 0x0);
        gbc.writeMem(0x91ad, { 0xcb, 0x56 });
        gbc.writeMem(0xc0e1, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x93fe);
        EXPECT(gbc.pc(), 0x91af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ad), 0xcb);
        EXPECT(gbc.readMem(0x91ae), 0x56);
        EXPECT(gbc.readMem(0xc0e1), 0x6a);
        // CB 56 03B5
        gbc.setState(0xe111, 0x903c, 0x1450, 0x64c2, 0xe41e, 0x29ef, 0x1, 0x0);
        gbc.writeMem(0x29ef, { 0xe4 });
        gbc.writeMem(0xe111, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x903c);
        EXPECT(gbc.pc(), 0xe113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe111), 0xcb);
        EXPECT(gbc.readMem(0xe112), 0x56);
        // CB 56 03B6
        gbc.setState(0x5f2c, 0x3f91, 0xb0a0, 0xe838, 0x79f, 0x2395, 0x1, 0x0);
        gbc.writeMem(0x2395, { 0x6d });
        gbc.writeMem(0x5f2c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3f91);
        EXPECT(gbc.pc(), 0x5f2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 03B8
        gbc.setState(0xbfdb, 0xe9f, 0x4810, 0x71c3, 0x610e, 0x92cf, 0x0, 0x0);
        gbc.writeMem(0x92cf, { 0x8b });
        gbc.writeMem(0xbfdb, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe9f);
        EXPECT(gbc.pc(), 0xbfdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92cf), 0x8b);
        EXPECT(gbc.readMem(0xbfdb), 0xcb);
        EXPECT(gbc.readMem(0xbfdc), 0x56);
        // CB 56 03B9
        gbc.setState(0x2721, 0xf4ef, 0x1280, 0x4b29, 0xd09c, 0x6d06, 0x1, 0x0);
        gbc.writeMem(0x2721, { 0xcb, 0x56 });
        gbc.writeMem(0x6d06, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf4ef);
        EXPECT(gbc.pc(), 0x2723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 03BA
        gbc.setState(0xedb2, 0x9e15, 0xa10, 0x59f9, 0xf713, 0xbab0, 0x1, 0x1);
        gbc.writeMem(0xbab0, { 0x44 });
        gbc.writeMem(0xedb2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9e15);
        EXPECT(gbc.pc(), 0xedb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbab0), 0x44);
        EXPECT(gbc.readMem(0xedb2), 0xcb);
        EXPECT(gbc.readMem(0xedb3), 0x56);
        // CB 56 03BB
        gbc.setState(0xeaec, 0xd47f, 0xd100, 0x6f6, 0x5d55, 0xb2a9, 0x1, 0x0);
        gbc.writeMem(0xb2a9, { 0x9f });
        gbc.writeMem(0xeaec, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd47f);
        EXPECT(gbc.pc(), 0xeaee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a9), 0x9f);
        EXPECT(gbc.readMem(0xeaec), 0xcb);
        EXPECT(gbc.readMem(0xeaed), 0x56);
        // CB 56 03BC
        gbc.setState(0xe69a, 0x7965, 0xd910, 0xe56f, 0xdf8f, 0xbe17, 0x1, 0x1);
        gbc.writeMem(0xbe17, { 0x35 });
        gbc.writeMem(0xe69a, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7965);
        EXPECT(gbc.pc(), 0xe69c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe17), 0x35);
        EXPECT(gbc.readMem(0xe69a), 0xcb);
        EXPECT(gbc.readMem(0xe69b), 0x56);
        // CB 56 03BD
        gbc.setState(0x3aec, 0x4127, 0xf610, 0xdca2, 0x5ecf, 0xaf78, 0x0, 0x0);
        gbc.writeMem(0x3aec, { 0xcb, 0x56 });
        gbc.writeMem(0xaf78, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4127);
        EXPECT(gbc.pc(), 0x3aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf78), 0x63);
        // CB 56 03BE
        gbc.setState(0x9567, 0x2ac4, 0xe260, 0xd9a9, 0x2d4e, 0xcce1, 0x0, 0x0);
        gbc.writeMem(0x9567, { 0xcb, 0x56 });
        gbc.writeMem(0xcce1, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2ac4);
        EXPECT(gbc.pc(), 0x9569);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9567), 0xcb);
        EXPECT(gbc.readMem(0x9568), 0x56);
        EXPECT(gbc.readMem(0xcce1), 0x70);
        // CB 56 03BF
        gbc.setState(0xda10, 0xb8f0, 0x7530, 0x4b82, 0x7c2c, 0xa672, 0x0, 0x1);
        gbc.writeMem(0xa672, { 0xa3 });
        gbc.writeMem(0xda10, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb8f0);
        EXPECT(gbc.pc(), 0xda12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa672), 0xa3);
        EXPECT(gbc.readMem(0xda10), 0xcb);
        EXPECT(gbc.readMem(0xda11), 0x56);
        // CB 56 03C0
        gbc.setState(0x2a4d, 0xea1f, 0x7970, 0xaefd, 0x9a2e, 0x878b, 0x0, 0x1);
        gbc.writeMem(0x2a4d, { 0xcb, 0x56 });
        gbc.writeMem(0x878b, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xea1f);
        EXPECT(gbc.pc(), 0x2a4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x878b), 0x40);
        // CB 56 03C2
        gbc.setState(0x4e21, 0x2864, 0x4d80, 0x5b79, 0xd25d, 0x4884, 0x1, 0x1);
        gbc.writeMem(0x4884, { 0x2d });
        gbc.writeMem(0x4e21, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2864);
        EXPECT(gbc.pc(), 0x4e23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 03C3
        gbc.setState(0xe3c9, 0xda44, 0x2a00, 0x160d, 0x7a6f, 0x35b1, 0x1, 0x1);
        gbc.writeMem(0x35b1, { 0x5d });
        gbc.writeMem(0xe3c9, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xda44);
        EXPECT(gbc.pc(), 0xe3cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3c9), 0xcb);
        EXPECT(gbc.readMem(0xe3ca), 0x56);
        // CB 56 03C4
        gbc.setState(0x80dc, 0x789a, 0xc590, 0x8648, 0x3929, 0xed00, 0x0, 0x1);
        gbc.writeMem(0x80dc, { 0xcb, 0x56 });
        gbc.writeMem(0xed00, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x789a);
        EXPECT(gbc.pc(), 0x80de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80dc), 0xcb);
        EXPECT(gbc.readMem(0x80dd), 0x56);
        EXPECT(gbc.readMem(0xed00), 0x23);
        // CB 56 03C5
        gbc.setState(0xc243, 0xd5d6, 0xf040, 0x92a5, 0x5086, 0x4927, 0x0, 0x1);
        gbc.writeMem(0x4927, { 0x72 });
        gbc.writeMem(0xc243, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd5d6);
        EXPECT(gbc.pc(), 0xc245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc243), 0xcb);
        EXPECT(gbc.readMem(0xc244), 0x56);
        // CB 56 03C6
        gbc.setState(0xe241, 0xa2cc, 0xd450, 0x4c85, 0x82d, 0x4b81, 0x0, 0x1);
        gbc.writeMem(0x4b81, { 0x75 });
        gbc.writeMem(0xe241, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa2cc);
        EXPECT(gbc.pc(), 0xe243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe241), 0xcb);
        EXPECT(gbc.readMem(0xe242), 0x56);
        // CB 56 03C7
        gbc.setState(0x4e1a, 0x2685, 0xbd30, 0xa55e, 0x2349, 0xbf6b, 0x1, 0x1);
        gbc.writeMem(0x4e1a, { 0xcb, 0x56 });
        gbc.writeMem(0xbf6b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2685);
        EXPECT(gbc.pc(), 0x4e1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf6b), 0xab);
        // CB 56 03C8
        gbc.setState(0x67b1, 0x9e84, 0x7520, 0xc655, 0x5983, 0xda66, 0x0, 0x0);
        gbc.writeMem(0x67b1, { 0xcb, 0x56 });
        gbc.writeMem(0xda66, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9e84);
        EXPECT(gbc.pc(), 0x67b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda66), 0x85);
        // CB 56 03C9
        gbc.setState(0x3b39, 0x2337, 0x58a0, 0xc698, 0xf0f1, 0x516c, 0x0, 0x0);
        gbc.writeMem(0x3b39, { 0xcb, 0x56 });
        gbc.writeMem(0x516c, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2337);
        EXPECT(gbc.pc(), 0x3b3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 03CA
        gbc.setState(0xec26, 0x94ae, 0xc730, 0x5578, 0x25df, 0xf647, 0x0, 0x1);
        gbc.writeMem(0xec26, { 0xcb, 0x56 });
        gbc.writeMem(0xf647, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x94ae);
        EXPECT(gbc.pc(), 0xec28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec26), 0xcb);
        EXPECT(gbc.readMem(0xec27), 0x56);
        EXPECT(gbc.readMem(0xf647), 0xb2);
        // CB 56 03CB
        gbc.setState(0x15cf, 0x2eb8, 0xbbb0, 0x2888, 0xc3e5, 0x8ba6, 0x1, 0x0);
        gbc.writeMem(0x15cf, { 0xcb, 0x56 });
        gbc.writeMem(0x8ba6, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2eb8);
        EXPECT(gbc.pc(), 0x15d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba6), 0xf9);
        // CB 56 03CD
        gbc.setState(0x114b, 0x4d65, 0xd600, 0x8ba0, 0x1e29, 0x2b65, 0x1, 0x1);
        gbc.writeMem(0x114b, { 0xcb, 0x56 });
        gbc.writeMem(0x2b65, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4d65);
        EXPECT(gbc.pc(), 0x114d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 03CE
        gbc.setState(0x37b0, 0x61cc, 0x5930, 0xceb9, 0x4f7b, 0xa507, 0x1, 0x0);
        gbc.writeMem(0x37b0, { 0xcb, 0x56 });
        gbc.writeMem(0xa507, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x61cc);
        EXPECT(gbc.pc(), 0x37b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa507), 0xfc);
        // CB 56 03CF
        gbc.setState(0x989, 0x5472, 0xf3d0, 0x5c27, 0x5592, 0xf286, 0x1, 0x0);
        gbc.writeMem(0x989, { 0xcb, 0x56 });
        gbc.writeMem(0xf286, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5472);
        EXPECT(gbc.pc(), 0x98b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf286), 0xd4);
        // CB 56 03D0
        gbc.setState(0x23ba, 0xd172, 0xa7a0, 0xf382, 0x5e74, 0xb4ca, 0x0, 0x0);
        gbc.writeMem(0x23ba, { 0xcb, 0x56 });
        gbc.writeMem(0xb4ca, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd172);
        EXPECT(gbc.pc(), 0x23bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ca), 0x2a);
        // CB 56 03D1
        gbc.setState(0x448a, 0x9708, 0xad70, 0x398c, 0xaf0a, 0xab40, 0x0, 0x0);
        gbc.writeMem(0x448a, { 0xcb, 0x56 });
        gbc.writeMem(0xab40, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9708);
        EXPECT(gbc.pc(), 0x448c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab40), 0x35);
        // CB 56 03D2
        gbc.setState(0x5096, 0x75a6, 0x780, 0xf6e4, 0x8ae0, 0x7fa1, 0x1, 0x0);
        gbc.writeMem(0x5096, { 0xcb, 0x56 });
        gbc.writeMem(0x7fa1, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x75a6);
        EXPECT(gbc.pc(), 0x5098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 03D3
        gbc.setState(0x64a2, 0xf3be, 0x2300, 0x1650, 0x8bcb, 0x64a2, 0x1, 0x0);
        gbc.writeMem(0x64a2, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf3be);
        EXPECT(gbc.pc(), 0x64a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 03D4
        gbc.setState(0x880b, 0x9c0c, 0x51b0, 0x545a, 0x7de3, 0xfb3c, 0x0, 0x1);
        gbc.writeMem(0x880b, { 0xcb, 0x56 });
        gbc.writeMem(0xfb3c, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9c0c);
        EXPECT(gbc.pc(), 0x880d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x880b), 0xcb);
        EXPECT(gbc.readMem(0x880c), 0x56);
        EXPECT(gbc.readMem(0xfb3c), 0x15);
        // CB 56 03D5
        gbc.setState(0x6930, 0x73e2, 0x9d70, 0x5062, 0x3326, 0x5e52, 0x0, 0x1);
        gbc.writeMem(0x5e52, { 0x94 });
        gbc.writeMem(0x6930, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x73e2);
        EXPECT(gbc.pc(), 0x6932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 03D6
        gbc.setState(0x62f4, 0x83a2, 0x2080, 0xf6ef, 0x9b5, 0x377f, 0x1, 0x1);
        gbc.writeMem(0x377f, { 0xa0 });
        gbc.writeMem(0x62f4, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x83a2);
        EXPECT(gbc.pc(), 0x62f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 56 03D7
        gbc.setState(0xb6a9, 0xce7a, 0x6100, 0xcf4c, 0x1a17, 0xe8d5, 0x1, 0x0);
        gbc.writeMem(0xb6a9, { 0xcb, 0x56 });
        gbc.writeMem(0xe8d5, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xce7a);
        EXPECT(gbc.pc(), 0xb6ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a9), 0xcb);
        EXPECT(gbc.readMem(0xb6aa), 0x56);
        EXPECT(gbc.readMem(0xe8d5), 0x44);
        // CB 56 03D8
        gbc.setState(0x7db, 0xe65, 0x64c0, 0xee98, 0xdb36, 0xf121, 0x0, 0x1);
        gbc.writeMem(0x7db, { 0xcb, 0x56 });
        gbc.writeMem(0xf121, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe65);
        EXPECT(gbc.pc(), 0x7dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf121), 0x97);
        // CB 56 03D9
        gbc.setState(0xd87c, 0xd4cb, 0xb100, 0xaf55, 0xcad0, 0x435a, 0x0, 0x1);
        gbc.writeMem(0x435a, { 0x87 });
        gbc.writeMem(0xd87c, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd4cb);
        EXPECT(gbc.pc(), 0xd87e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd87c), 0xcb);
        EXPECT(gbc.readMem(0xd87d), 0x56);
        // CB 56 03DB
        gbc.setState(0x69c8, 0x4bf0, 0x56b0, 0x728a, 0xc73a, 0x4199, 0x0, 0x0);
        gbc.writeMem(0x4199, { 0xe });
        gbc.writeMem(0x69c8, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4bf0);
        EXPECT(gbc.pc(), 0x69ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 56 03DC
        gbc.setState(0x26f5, 0xae8d, 0xbbe0, 0xec54, 0x16e, 0x8922, 0x0, 0x1);
        gbc.writeMem(0x26f5, { 0xcb, 0x56 });
        gbc.writeMem(0x8922, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xae8d);
        EXPECT(gbc.pc(), 0x26f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8922), 0x17);
        // CB 56 03DD
        gbc.setState(0x5a85, 0xc065, 0x1a70, 0x6b7b, 0x9815, 0x90b6, 0x1, 0x1);
        gbc.writeMem(0x5a85, { 0xcb, 0x56 });
        gbc.writeMem(0x90b6, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc065);
        EXPECT(gbc.pc(), 0x5a87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90b6), 0x40);
        // CB 56 03DE
        gbc.setState(0xda00, 0x3173, 0x2580, 0x8260, 0xf9df, 0x4e1a, 0x1, 0x0);
        gbc.writeMem(0x4e1a, { 0xe8 });
        gbc.writeMem(0xda00, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3173);
        EXPECT(gbc.pc(), 0xda02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda00), 0xcb);
        EXPECT(gbc.readMem(0xda01), 0x56);
        // CB 56 03DF
        gbc.setState(0xb282, 0xd7f, 0x6d30, 0x234b, 0x9303, 0xabec, 0x0, 0x1);
        gbc.writeMem(0xabec, { 0x15 });
        gbc.writeMem(0xb282, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd7f);
        EXPECT(gbc.pc(), 0xb284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabec), 0x15);
        EXPECT(gbc.readMem(0xb282), 0xcb);
        EXPECT(gbc.readMem(0xb283), 0x56);
        // CB 56 03E0
        gbc.setState(0xd321, 0xcda4, 0x60f0, 0x7efe, 0x77c8, 0xa9b1, 0x1, 0x1);
        gbc.writeMem(0xa9b1, { 0xaf });
        gbc.writeMem(0xd321, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcda4);
        EXPECT(gbc.pc(), 0xd323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9b1), 0xaf);
        EXPECT(gbc.readMem(0xd321), 0xcb);
        EXPECT(gbc.readMem(0xd322), 0x56);
        // CB 56 03E1
        gbc.setState(0xa95e, 0x6a29, 0x5960, 0x13f7, 0x38af, 0x8452, 0x0, 0x0);
        gbc.writeMem(0x8452, { 0x6d });
        gbc.writeMem(0xa95e, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6a29);
        EXPECT(gbc.pc(), 0xa960);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8452), 0x6d);
        EXPECT(gbc.readMem(0xa95e), 0xcb);
        EXPECT(gbc.readMem(0xa95f), 0x56);
        // CB 56 03E2
        gbc.setState(0x123b, 0xa4f9, 0x8c90, 0x3a21, 0x5ce8, 0xbc43, 0x1, 0x0);
        gbc.writeMem(0x123b, { 0xcb, 0x56 });
        gbc.writeMem(0xbc43, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa4f9);
        EXPECT(gbc.pc(), 0x123d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc43), 0x4e);
        // CB 56 03E3
        gbc.setState(0xef88, 0x49bb, 0xfe20, 0x98ce, 0x5cea, 0xbf8d, 0x1, 0x0);
        gbc.writeMem(0xbf8d, { 0xa7 });
        gbc.writeMem(0xef88, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x49bb);
        EXPECT(gbc.pc(), 0xef8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf8d), 0xa7);
        EXPECT(gbc.readMem(0xef88), 0xcb);
        EXPECT(gbc.readMem(0xef89), 0x56);
        // CB 56 03E4
        gbc.setState(0x510c, 0xfb1f, 0xe640, 0x6c9d, 0x6edb, 0x8e71, 0x1, 0x0);
        gbc.writeMem(0x510c, { 0xcb, 0x56 });
        gbc.writeMem(0x8e71, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfb1f);
        EXPECT(gbc.pc(), 0x510e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e71), 0xcd);
        // CB 56 03E5
        gbc.setState(0xdd32, 0xb466, 0xb5f0, 0xaaa1, 0xc45d, 0xe34c, 0x1, 0x1);
        gbc.writeMem(0xdd32, { 0xcb, 0x56 });
        gbc.writeMem(0xe34c, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb466);
        EXPECT(gbc.pc(), 0xdd34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd32), 0xcb);
        EXPECT(gbc.readMem(0xdd33), 0x56);
        EXPECT(gbc.readMem(0xe34c), 0x3d);
        // CB 56 03E6
        gbc.setState(0xc07f, 0xbdf2, 0x8730, 0x5593, 0x973e, 0xf850, 0x1, 0x0);
        gbc.writeMem(0xc07f, { 0xcb, 0x56 });
        gbc.writeMem(0xf850, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbdf2);
        EXPECT(gbc.pc(), 0xc081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc07f), 0xcb);
        EXPECT(gbc.readMem(0xc080), 0x56);
        EXPECT(gbc.readMem(0xf850), 0x29);
        // CB 56 03E7
        gbc.setState(0x8826, 0x1da6, 0x20f0, 0xeca3, 0xc87f, 0x5890, 0x1, 0x0);
        gbc.writeMem(0x5890, { 0x5f });
        gbc.writeMem(0x8826, { 0xcb, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1da6);
        EXPECT(gbc.pc(), 0x8828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8826), 0xcb);
        EXPECT(gbc.readMem(0x8827), 0x56);
    }
