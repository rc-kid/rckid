#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_be)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_be) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB BE 0000
        gbc.setState(0x8e1b, 0xb6d1, 0x75a0, 0x296e, 0x5934, 0x359d, 0x0, 0x1);
        gbc.writeMem(0x359d, { 0x6c });
        gbc.writeMem(0x8e1b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb6d1);
        EXPECT(gbc.pc(), 0x8e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e1b), 0xcb);
        EXPECT(gbc.readMem(0x8e1c), 0xbe);
        // CB BE 0001
        gbc.setState(0x6f36, 0x1cd1, 0x4b90, 0x4065, 0xf1ce, 0x4f, 0x1, 0x1);
        gbc.writeMem(0x4f, { 0x32 });
        gbc.writeMem(0x6f36, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1cd1);
        EXPECT(gbc.pc(), 0x6f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0003
        gbc.setState(0x438a, 0xec1a, 0xf410, 0x1d25, 0x43ef, 0xa1fe, 0x1, 0x1);
        gbc.writeMem(0x438a, { 0xcb, 0xbe });
        gbc.writeMem(0xa1fe, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xec1a);
        EXPECT(gbc.pc(), 0x438c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1fe), 0x75);
        // CB BE 0004
        gbc.setState(0x61d7, 0x20a, 0x14c0, 0x9ec0, 0xfb23, 0xf919, 0x1, 0x0);
        gbc.writeMem(0x61d7, { 0xcb, 0xbe });
        gbc.writeMem(0xf919, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x20a);
        EXPECT(gbc.pc(), 0x61d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf919), 0x21);
        // CB BE 0006
        gbc.setState(0x9696, 0x8e80, 0x39e0, 0xdfb, 0x4eee, 0xe5da, 0x1, 0x1);
        gbc.writeMem(0x9696, { 0xcb, 0xbe });
        gbc.writeMem(0xe5da, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8e80);
        EXPECT(gbc.pc(), 0x9698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9696), 0xcb);
        EXPECT(gbc.readMem(0x9697), 0xbe);
        EXPECT(gbc.readMem(0xe5da), 0xf);
        // CB BE 0008
        gbc.setState(0xaa4b, 0x2718, 0x5dc0, 0x37e, 0xc6c2, 0xa46d, 0x0, 0x1);
        gbc.writeMem(0xa46d, { 0xd5 });
        gbc.writeMem(0xaa4b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2718);
        EXPECT(gbc.pc(), 0xaa4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa46d), 0x55);
        EXPECT(gbc.readMem(0xaa4b), 0xcb);
        EXPECT(gbc.readMem(0xaa4c), 0xbe);
        // CB BE 0009
        gbc.setState(0x7849, 0xd1b2, 0x5df0, 0xe4d4, 0xad37, 0x9de8, 0x0, 0x1);
        gbc.writeMem(0x7849, { 0xcb, 0xbe });
        gbc.writeMem(0x9de8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd1b2);
        EXPECT(gbc.pc(), 0x784b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de8), 0x10);
        // CB BE 000A
        gbc.setState(0x8d1c, 0x6859, 0xbd50, 0x106c, 0x663e, 0x90b, 0x1, 0x0);
        gbc.writeMem(0x90b, { 0x76 });
        gbc.writeMem(0x8d1c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6859);
        EXPECT(gbc.pc(), 0x8d1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d1c), 0xcb);
        EXPECT(gbc.readMem(0x8d1d), 0xbe);
        // CB BE 000D
        gbc.setState(0x1899, 0x453a, 0x6c40, 0x21d7, 0x58fd, 0xeb72, 0x0, 0x0);
        gbc.writeMem(0x1899, { 0xcb, 0xbe });
        gbc.writeMem(0xeb72, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x453a);
        EXPECT(gbc.pc(), 0x189b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb72), 0x52);
        // CB BE 0011
        gbc.setState(0x3504, 0x3d78, 0x9580, 0x4ebe, 0xcb62, 0x345b, 0x0, 0x1);
        gbc.writeMem(0x345b, { 0x14 });
        gbc.writeMem(0x3504, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3d78);
        EXPECT(gbc.pc(), 0x3506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0012
        gbc.setState(0xed12, 0x7c55, 0xd180, 0x29a3, 0xbe7f, 0xd8ff, 0x1, 0x0);
        gbc.writeMem(0xd8ff, { 0x5 });
        gbc.writeMem(0xed12, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7c55);
        EXPECT(gbc.pc(), 0xed14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ff), 0x5);
        EXPECT(gbc.readMem(0xed12), 0xcb);
        EXPECT(gbc.readMem(0xed13), 0xbe);
        // CB BE 0013
        gbc.setState(0x5b05, 0xd57, 0x1e20, 0xdec5, 0x6369, 0x4ea3, 0x0, 0x1);
        gbc.writeMem(0x4ea3, { 0x60 });
        gbc.writeMem(0x5b05, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd57);
        EXPECT(gbc.pc(), 0x5b07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0014
        gbc.setState(0xe7af, 0x356f, 0x7920, 0x3502, 0xad10, 0x5630, 0x0, 0x1);
        gbc.writeMem(0x5630, { 0x79 });
        gbc.writeMem(0xe7af, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x356f);
        EXPECT(gbc.pc(), 0xe7b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7af), 0xcb);
        EXPECT(gbc.readMem(0xe7b0), 0xbe);
        // CB BE 0015
        gbc.setState(0xb586, 0xa257, 0x75e0, 0x225a, 0xb9ae, 0xba11, 0x1, 0x0);
        gbc.writeMem(0xb586, { 0xcb, 0xbe });
        gbc.writeMem(0xba11, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa257);
        EXPECT(gbc.pc(), 0xb588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb586), 0xcb);
        EXPECT(gbc.readMem(0xb587), 0xbe);
        EXPECT(gbc.readMem(0xba11), 0x2e);
        // CB BE 0016
        gbc.setState(0x7ec1, 0xc27a, 0xc260, 0x9e3d, 0x26e7, 0xc367, 0x1, 0x1);
        gbc.writeMem(0x7ec1, { 0xcb, 0xbe });
        gbc.writeMem(0xc367, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc27a);
        EXPECT(gbc.pc(), 0x7ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc367), 0x5);
        // CB BE 0017
        gbc.setState(0xe0a3, 0x616d, 0x5d0, 0xc5f0, 0xb765, 0xccf6, 0x0, 0x0);
        gbc.writeMem(0xccf6, { 0x36 });
        gbc.writeMem(0xe0a3, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x616d);
        EXPECT(gbc.pc(), 0xe0a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf6), 0x36);
        EXPECT(gbc.readMem(0xe0a3), 0xcb);
        EXPECT(gbc.readMem(0xe0a4), 0xbe);
        // CB BE 001A
        gbc.setState(0xbc34, 0x3899, 0x8830, 0xe109, 0x8838, 0x6e3d, 0x0, 0x0);
        gbc.writeMem(0x6e3d, { 0x5d });
        gbc.writeMem(0xbc34, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3899);
        EXPECT(gbc.pc(), 0xbc36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc34), 0xcb);
        EXPECT(gbc.readMem(0xbc35), 0xbe);
        // CB BE 001B
        gbc.setState(0xe33e, 0xf647, 0xd3f0, 0xd2ea, 0x723f, 0xde7a, 0x0, 0x0);
        gbc.writeMem(0xde7a, { 0xbe });
        gbc.writeMem(0xe33e, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf647);
        EXPECT(gbc.pc(), 0xe340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde7a), 0x3e);
        EXPECT(gbc.readMem(0xe33e), 0xcb);
        EXPECT(gbc.readMem(0xe33f), 0xbe);
        // CB BE 001C
        gbc.setState(0xf5f, 0x3991, 0x6de0, 0xe602, 0xca9a, 0x67cf, 0x0, 0x1);
        gbc.writeMem(0xf5f, { 0xcb, 0xbe });
        gbc.writeMem(0x67cf, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3991);
        EXPECT(gbc.pc(), 0xf61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 001D
        gbc.setState(0xc9cf, 0xc17c, 0xab40, 0xd8c6, 0xaf29, 0x899e, 0x1, 0x1);
        gbc.writeMem(0x899e, { 0x5f });
        gbc.writeMem(0xc9cf, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc17c);
        EXPECT(gbc.pc(), 0xc9d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x899e), 0x5f);
        EXPECT(gbc.readMem(0xc9cf), 0xcb);
        EXPECT(gbc.readMem(0xc9d0), 0xbe);
        // CB BE 001F
        gbc.setState(0xb92c, 0xc3a9, 0x2830, 0x518, 0x97d3, 0xa147, 0x1, 0x0);
        gbc.writeMem(0xa147, { 0xf6 });
        gbc.writeMem(0xb92c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc3a9);
        EXPECT(gbc.pc(), 0xb92e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa147), 0x76);
        EXPECT(gbc.readMem(0xb92c), 0xcb);
        EXPECT(gbc.readMem(0xb92d), 0xbe);
        // CB BE 0020
        gbc.setState(0x222b, 0xf2a5, 0x6500, 0xc16f, 0x7722, 0x95cd, 0x0, 0x0);
        gbc.writeMem(0x222b, { 0xcb, 0xbe });
        gbc.writeMem(0x95cd, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf2a5);
        EXPECT(gbc.pc(), 0x222d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95cd), 0x2a);
        // CB BE 0021
        gbc.setState(0xbd9d, 0x3d87, 0x6930, 0x1460, 0x184b, 0xa700, 0x0, 0x1);
        gbc.writeMem(0xa700, { 0xc4 });
        gbc.writeMem(0xbd9d, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3d87);
        EXPECT(gbc.pc(), 0xbd9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa700), 0x44);
        EXPECT(gbc.readMem(0xbd9d), 0xcb);
        EXPECT(gbc.readMem(0xbd9e), 0xbe);
        // CB BE 0024
        gbc.setState(0x4af3, 0x15f7, 0x4920, 0xc57, 0x6337, 0xa937, 0x1, 0x0);
        gbc.writeMem(0x4af3, { 0xcb, 0xbe });
        gbc.writeMem(0xa937, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x15f7);
        EXPECT(gbc.pc(), 0x4af5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa937), 0x41);
        // CB BE 0025
        gbc.setState(0x4609, 0x6d7e, 0x84a0, 0xa062, 0x4cec, 0xa7d6, 0x1, 0x1);
        gbc.writeMem(0x4609, { 0xcb, 0xbe });
        gbc.writeMem(0xa7d6, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6d7e);
        EXPECT(gbc.pc(), 0x460b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d6), 0x65);
        // CB BE 0026
        gbc.setState(0x725b, 0x24e, 0xe840, 0xf8e2, 0xb9d6, 0xe987, 0x1, 0x1);
        gbc.writeMem(0x725b, { 0xcb, 0xbe });
        gbc.writeMem(0xe987, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x24e);
        EXPECT(gbc.pc(), 0x725d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe987), 0x5);
        // CB BE 0027
        gbc.setState(0x1be, 0x95da, 0x2250, 0x9ad4, 0x5d0f, 0x6d74, 0x1, 0x0);
        gbc.writeMem(0x1be, { 0xcb, 0xbe });
        gbc.writeMem(0x6d74, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x95da);
        EXPECT(gbc.pc(), 0x1c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0028
        gbc.setState(0xa8c1, 0x28b4, 0x7f10, 0x53bd, 0x8e5a, 0x2671, 0x1, 0x0);
        gbc.writeMem(0x2671, { 0x74 });
        gbc.writeMem(0xa8c1, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x28b4);
        EXPECT(gbc.pc(), 0xa8c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c1), 0xcb);
        EXPECT(gbc.readMem(0xa8c2), 0xbe);
        // CB BE 0029
        gbc.setState(0x3e9f, 0x9804, 0x5290, 0x5a47, 0x8c80, 0xe214, 0x0, 0x1);
        gbc.writeMem(0x3e9f, { 0xcb, 0xbe });
        gbc.writeMem(0xe214, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9804);
        EXPECT(gbc.pc(), 0x3ea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe214), 0x50);
        // CB BE 002A
        gbc.setState(0x9eb, 0x1084, 0x4b40, 0xcb8c, 0xbf5e, 0xac15, 0x0, 0x0);
        gbc.writeMem(0x9eb, { 0xcb, 0xbe });
        gbc.writeMem(0xac15, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1084);
        EXPECT(gbc.pc(), 0x9ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac15), 0x68);
        // CB BE 002B
        gbc.setState(0xc9fe, 0xe77, 0xd2b0, 0x2729, 0x53e2, 0xec1d, 0x0, 0x1);
        gbc.writeMem(0xc9fe, { 0xcb, 0xbe });
        gbc.writeMem(0xec1d, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe77);
        EXPECT(gbc.pc(), 0xca00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9fe), 0xcb);
        EXPECT(gbc.readMem(0xc9ff), 0xbe);
        EXPECT(gbc.readMem(0xec1d), 0x35);
        // CB BE 002C
        gbc.setState(0x3c58, 0x8117, 0x2db0, 0xac59, 0x7602, 0x88be, 0x0, 0x1);
        gbc.writeMem(0x3c58, { 0xcb, 0xbe });
        gbc.writeMem(0x88be, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8117);
        EXPECT(gbc.pc(), 0x3c5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88be), 0x57);
        // CB BE 002D
        gbc.setState(0x228c, 0x69d5, 0x690, 0x37bb, 0xce47, 0x466f, 0x0, 0x0);
        gbc.writeMem(0x228c, { 0xcb, 0xbe });
        gbc.writeMem(0x466f, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x69d5);
        EXPECT(gbc.pc(), 0x228e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 002E
        gbc.setState(0xa4e1, 0x42c5, 0xa160, 0x3da2, 0xf7ac, 0xfbf7, 0x0, 0x1);
        gbc.writeMem(0xa4e1, { 0xcb, 0xbe });
        gbc.writeMem(0xfbf7, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x42c5);
        EXPECT(gbc.pc(), 0xa4e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e1), 0xcb);
        EXPECT(gbc.readMem(0xa4e2), 0xbe);
        EXPECT(gbc.readMem(0xfbf7), 0x7d);
        // CB BE 0030
        gbc.setState(0xef29, 0x3315, 0xda80, 0xe688, 0xf48d, 0x559e, 0x0, 0x1);
        gbc.writeMem(0x559e, { 0x43 });
        gbc.writeMem(0xef29, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3315);
        EXPECT(gbc.pc(), 0xef2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef29), 0xcb);
        EXPECT(gbc.readMem(0xef2a), 0xbe);
        // CB BE 0032
        gbc.setState(0x7443, 0x8907, 0x6b40, 0x910e, 0xa874, 0x79b1, 0x0, 0x0);
        gbc.writeMem(0x7443, { 0xcb, 0xbe });
        gbc.writeMem(0x79b1, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8907);
        EXPECT(gbc.pc(), 0x7445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0033
        gbc.setState(0xc11c, 0x6c5c, 0x5510, 0xfd, 0xb370, 0xf45e, 0x1, 0x0);
        gbc.writeMem(0xc11c, { 0xcb, 0xbe });
        gbc.writeMem(0xf45e, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6c5c);
        EXPECT(gbc.pc(), 0xc11e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc11c), 0xcb);
        EXPECT(gbc.readMem(0xc11d), 0xbe);
        EXPECT(gbc.readMem(0xf45e), 0x7);
        // CB BE 0034
        gbc.setState(0x30b3, 0x6e3a, 0xa050, 0x4991, 0x82aa, 0x4cf1, 0x0, 0x0);
        gbc.writeMem(0x30b3, { 0xcb, 0xbe });
        gbc.writeMem(0x4cf1, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6e3a);
        EXPECT(gbc.pc(), 0x30b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0036
        gbc.setState(0x6b47, 0x166d, 0xbcb0, 0x2bfa, 0xe96f, 0xb66, 0x0, 0x1);
        gbc.writeMem(0xb66, { 0x13 });
        gbc.writeMem(0x6b47, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x166d);
        EXPECT(gbc.pc(), 0x6b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0038
        gbc.setState(0x1858, 0x1c4, 0x6690, 0x2282, 0x947f, 0x915c, 0x1, 0x0);
        gbc.writeMem(0x1858, { 0xcb, 0xbe });
        gbc.writeMem(0x915c, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1c4);
        EXPECT(gbc.pc(), 0x185a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x915c), 0x4);
        // CB BE 0039
        gbc.setState(0x7511, 0xaf26, 0x89a0, 0x4ce3, 0x7e1f, 0x9451, 0x1, 0x0);
        gbc.writeMem(0x7511, { 0xcb, 0xbe });
        gbc.writeMem(0x9451, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xaf26);
        EXPECT(gbc.pc(), 0x7513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9451), 0x5e);
        // CB BE 003A
        gbc.setState(0x8ab3, 0x3c9b, 0xf9a0, 0x4e81, 0x11c1, 0x47be, 0x1, 0x0);
        gbc.writeMem(0x47be, { 0x2d });
        gbc.writeMem(0x8ab3, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3c9b);
        EXPECT(gbc.pc(), 0x8ab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab3), 0xcb);
        EXPECT(gbc.readMem(0x8ab4), 0xbe);
        // CB BE 003B
        gbc.setState(0x7316, 0x6632, 0x2c0, 0x658, 0x74cd, 0x40e4, 0x1, 0x0);
        gbc.writeMem(0x40e4, { 0x39 });
        gbc.writeMem(0x7316, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6632);
        EXPECT(gbc.pc(), 0x7318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 003C
        gbc.setState(0xb2cf, 0xdf51, 0x9e70, 0x2373, 0x73ba, 0xfc79, 0x1, 0x1);
        gbc.writeMem(0xb2cf, { 0xcb, 0xbe });
        gbc.writeMem(0xfc79, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdf51);
        EXPECT(gbc.pc(), 0xb2d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2cf), 0xcb);
        EXPECT(gbc.readMem(0xb2d0), 0xbe);
        EXPECT(gbc.readMem(0xfc79), 0x54);
        // CB BE 003D
        gbc.setState(0x13a4, 0x90b4, 0x5510, 0x5a7, 0x7e8, 0xaf80, 0x1, 0x0);
        gbc.writeMem(0x13a4, { 0xcb, 0xbe });
        gbc.writeMem(0xaf80, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x90b4);
        EXPECT(gbc.pc(), 0x13a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf80), 0xd);
        // CB BE 0040
        gbc.setState(0x33ef, 0xe041, 0xc390, 0x9503, 0x8b92, 0xd948, 0x0, 0x0);
        gbc.writeMem(0x33ef, { 0xcb, 0xbe });
        gbc.writeMem(0xd948, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe041);
        EXPECT(gbc.pc(), 0x33f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd948), 0xb);
        // CB BE 0042
        gbc.setState(0x93d2, 0x9f05, 0x66e0, 0xbb27, 0xe13, 0x7cca, 0x0, 0x1);
        gbc.writeMem(0x7cca, { 0x1a });
        gbc.writeMem(0x93d2, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9f05);
        EXPECT(gbc.pc(), 0x93d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d2), 0xcb);
        EXPECT(gbc.readMem(0x93d3), 0xbe);
        // CB BE 0044
        gbc.setState(0x6df4, 0x27a8, 0x50c0, 0x198c, 0xced9, 0x56a6, 0x0, 0x0);
        gbc.writeMem(0x56a6, { 0x41 });
        gbc.writeMem(0x6df4, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x27a8);
        EXPECT(gbc.pc(), 0x6df6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0045
        gbc.setState(0xc758, 0x6f6b, 0x8140, 0xbe9, 0x13de, 0x53db, 0x1, 0x1);
        gbc.writeMem(0x53db, { 0x19 });
        gbc.writeMem(0xc758, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6f6b);
        EXPECT(gbc.pc(), 0xc75a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc758), 0xcb);
        EXPECT(gbc.readMem(0xc759), 0xbe);
        // CB BE 0046
        gbc.setState(0x97ba, 0x48aa, 0xc9a0, 0x877, 0x2d29, 0x9549, 0x1, 0x1);
        gbc.writeMem(0x9549, { 0xe3 });
        gbc.writeMem(0x97ba, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x48aa);
        EXPECT(gbc.pc(), 0x97bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9549), 0x63);
        EXPECT(gbc.readMem(0x97ba), 0xcb);
        EXPECT(gbc.readMem(0x97bb), 0xbe);
        // CB BE 0047
        gbc.setState(0xbdb0, 0x5cf4, 0xbcd0, 0x3ff4, 0x15cd, 0x6fbc, 0x0, 0x1);
        gbc.writeMem(0x6fbc, { 0x68 });
        gbc.writeMem(0xbdb0, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5cf4);
        EXPECT(gbc.pc(), 0xbdb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb0), 0xcb);
        EXPECT(gbc.readMem(0xbdb1), 0xbe);
        // CB BE 0048
        gbc.setState(0x20a4, 0xd8c6, 0x25b0, 0xc630, 0x5ffe, 0x8a5f, 0x1, 0x1);
        gbc.writeMem(0x20a4, { 0xcb, 0xbe });
        gbc.writeMem(0x8a5f, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd8c6);
        EXPECT(gbc.pc(), 0x20a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a5f), 0x32);
        // CB BE 0049
        gbc.setState(0x4bc1, 0x6a94, 0x8c0, 0xcc21, 0xb689, 0xc58d, 0x1, 0x1);
        gbc.writeMem(0x4bc1, { 0xcb, 0xbe });
        gbc.writeMem(0xc58d, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6a94);
        EXPECT(gbc.pc(), 0x4bc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc58d), 0x21);
        // CB BE 004B
        gbc.setState(0xc707, 0x828, 0xea90, 0xbb2a, 0x810, 0x46df, 0x0, 0x1);
        gbc.writeMem(0x46df, { 0x39 });
        gbc.writeMem(0xc707, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x828);
        EXPECT(gbc.pc(), 0xc709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc707), 0xcb);
        EXPECT(gbc.readMem(0xc708), 0xbe);
        // CB BE 004C
        gbc.setState(0xca50, 0x155d, 0xc560, 0xc1ac, 0xf479, 0x9cd9, 0x0, 0x1);
        gbc.writeMem(0x9cd9, { 0x24 });
        gbc.writeMem(0xca50, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x155d);
        EXPECT(gbc.pc(), 0xca52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd9), 0x24);
        EXPECT(gbc.readMem(0xca50), 0xcb);
        EXPECT(gbc.readMem(0xca51), 0xbe);
        // CB BE 004D
        gbc.setState(0x78fe, 0xbd47, 0xd600, 0x4ac5, 0xb1c0, 0xda47, 0x0, 0x0);
        gbc.writeMem(0x78fe, { 0xcb, 0xbe });
        gbc.writeMem(0xda47, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbd47);
        EXPECT(gbc.pc(), 0x7900);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda47), 0x69);
        // CB BE 004E
        gbc.setState(0xe1fd, 0x2854, 0xb6f0, 0x865, 0x3b68, 0xe2f4, 0x1, 0x1);
        gbc.writeMem(0xe1fd, { 0xcb, 0xbe });
        gbc.writeMem(0xe2f4, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2854);
        EXPECT(gbc.pc(), 0xe1ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1fd), 0xcb);
        EXPECT(gbc.readMem(0xe1fe), 0xbe);
        EXPECT(gbc.readMem(0xe2f4), 0x24);
        // CB BE 004F
        gbc.setState(0xa686, 0x6191, 0x1350, 0xb9eb, 0xeba4, 0x5c19, 0x1, 0x1);
        gbc.writeMem(0x5c19, { 0x62 });
        gbc.writeMem(0xa686, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6191);
        EXPECT(gbc.pc(), 0xa688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa686), 0xcb);
        EXPECT(gbc.readMem(0xa687), 0xbe);
        // CB BE 0054
        gbc.setState(0x7462, 0xbaf4, 0xab70, 0xf6c9, 0xca78, 0xc891, 0x0, 0x0);
        gbc.writeMem(0x7462, { 0xcb, 0xbe });
        gbc.writeMem(0xc891, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbaf4);
        EXPECT(gbc.pc(), 0x7464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc891), 0x2c);
        // CB BE 0055
        gbc.setState(0x7493, 0x3224, 0xf400, 0xb8e5, 0x8f4b, 0x869c, 0x0, 0x0);
        gbc.writeMem(0x7493, { 0xcb, 0xbe });
        gbc.writeMem(0x869c, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3224);
        EXPECT(gbc.pc(), 0x7495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x869c), 0x48);
        // CB BE 0056
        gbc.setState(0xaa3a, 0xa992, 0x59a0, 0x6490, 0xdf71, 0xab56, 0x1, 0x0);
        gbc.writeMem(0xaa3a, { 0xcb, 0xbe });
        gbc.writeMem(0xab56, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa992);
        EXPECT(gbc.pc(), 0xaa3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa3a), 0xcb);
        EXPECT(gbc.readMem(0xaa3b), 0xbe);
        EXPECT(gbc.readMem(0xab56), 0x2e);
        // CB BE 0057
        gbc.setState(0x526b, 0xa9ee, 0x1bf0, 0xd506, 0xea99, 0x1b1a, 0x0, 0x1);
        gbc.writeMem(0x1b1a, { 0x6a });
        gbc.writeMem(0x526b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa9ee);
        EXPECT(gbc.pc(), 0x526d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0059
        gbc.setState(0xc615, 0x57c9, 0x7530, 0x7f0, 0x7267, 0x7739, 0x0, 0x0);
        gbc.writeMem(0x7739, { 0x3 });
        gbc.writeMem(0xc615, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x57c9);
        EXPECT(gbc.pc(), 0xc617);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc615), 0xcb);
        EXPECT(gbc.readMem(0xc616), 0xbe);
        // CB BE 005A
        gbc.setState(0x2c4, 0xd042, 0x75e0, 0x6f78, 0xab5, 0xc465, 0x0, 0x0);
        gbc.writeMem(0x2c4, { 0xcb, 0xbe });
        gbc.writeMem(0xc465, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd042);
        EXPECT(gbc.pc(), 0x2c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc465), 0x28);
        // CB BE 005D
        gbc.setState(0x7d5f, 0x4969, 0x8f60, 0x2a2b, 0xc7f9, 0xb53c, 0x0, 0x0);
        gbc.writeMem(0x7d5f, { 0xcb, 0xbe });
        gbc.writeMem(0xb53c, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4969);
        EXPECT(gbc.pc(), 0x7d61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb53c), 0xb);
        // CB BE 005E
        gbc.setState(0xc17c, 0x41ce, 0xe630, 0xc461, 0x974c, 0xe45d, 0x0, 0x1);
        gbc.writeMem(0xc17c, { 0xcb, 0xbe });
        gbc.writeMem(0xe45d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x41ce);
        EXPECT(gbc.pc(), 0xc17e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc17c), 0xcb);
        EXPECT(gbc.readMem(0xc17d), 0xbe);
        EXPECT(gbc.readMem(0xe45d), 0x29);
        // CB BE 005F
        gbc.setState(0xe61a, 0x8121, 0xc060, 0x1547, 0x32a5, 0x9f3e, 0x1, 0x0);
        gbc.writeMem(0x9f3e, { 0x90 });
        gbc.writeMem(0xe61a, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8121);
        EXPECT(gbc.pc(), 0xe61c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f3e), 0x10);
        EXPECT(gbc.readMem(0xe61a), 0xcb);
        EXPECT(gbc.readMem(0xe61b), 0xbe);
        // CB BE 0060
        gbc.setState(0xccae, 0xf017, 0xb300, 0x788d, 0x3a16, 0x6521, 0x0, 0x1);
        gbc.writeMem(0x6521, { 0x7 });
        gbc.writeMem(0xccae, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf017);
        EXPECT(gbc.pc(), 0xccb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccae), 0xcb);
        EXPECT(gbc.readMem(0xccaf), 0xbe);
        // CB BE 0063
        gbc.setState(0x1e6f, 0x7a3a, 0xa140, 0xe81d, 0x950c, 0x393, 0x0, 0x0);
        gbc.writeMem(0x393, { 0x5d });
        gbc.writeMem(0x1e6f, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7a3a);
        EXPECT(gbc.pc(), 0x1e71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0064
        gbc.setState(0xb523, 0x413e, 0x4410, 0xcac7, 0x5131, 0xd54a, 0x0, 0x0);
        gbc.writeMem(0xb523, { 0xcb, 0xbe });
        gbc.writeMem(0xd54a, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x413e);
        EXPECT(gbc.pc(), 0xb525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb523), 0xcb);
        EXPECT(gbc.readMem(0xb524), 0xbe);
        EXPECT(gbc.readMem(0xd54a), 0x76);
        // CB BE 0065
        gbc.setState(0xe0f7, 0x83f8, 0x6720, 0xb702, 0x56e8, 0xf63a, 0x1, 0x0);
        gbc.writeMem(0xe0f7, { 0xcb, 0xbe });
        gbc.writeMem(0xf63a, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x83f8);
        EXPECT(gbc.pc(), 0xe0f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f7), 0xcb);
        EXPECT(gbc.readMem(0xe0f8), 0xbe);
        EXPECT(gbc.readMem(0xf63a), 0x7f);
        // CB BE 0067
        gbc.setState(0x5040, 0x6a39, 0x21f0, 0xd88f, 0xb620, 0x19ee, 0x0, 0x0);
        gbc.writeMem(0x19ee, { 0x0 });
        gbc.writeMem(0x5040, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6a39);
        EXPECT(gbc.pc(), 0x5042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0068
        gbc.setState(0xda69, 0xee22, 0xdaf0, 0x8afe, 0x38be, 0x806e, 0x0, 0x1);
        gbc.writeMem(0x806e, { 0xe0 });
        gbc.writeMem(0xda69, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xee22);
        EXPECT(gbc.pc(), 0xda6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x806e), 0x60);
        EXPECT(gbc.readMem(0xda69), 0xcb);
        EXPECT(gbc.readMem(0xda6a), 0xbe);
        // CB BE 0069
        gbc.setState(0x1617, 0xce34, 0x81b0, 0x63db, 0xe079, 0x29e3, 0x1, 0x1);
        gbc.writeMem(0x1617, { 0xcb, 0xbe });
        gbc.writeMem(0x29e3, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xce34);
        EXPECT(gbc.pc(), 0x1619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 006A
        gbc.setState(0x5493, 0x60f6, 0xb640, 0xa98e, 0x2117, 0xed9d, 0x0, 0x1);
        gbc.writeMem(0x5493, { 0xcb, 0xbe });
        gbc.writeMem(0xed9d, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x60f6);
        EXPECT(gbc.pc(), 0x5495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed9d), 0x49);
        // CB BE 006B
        gbc.setState(0x3271, 0xbb99, 0xf600, 0x182a, 0xe50a, 0x85ea, 0x1, 0x0);
        gbc.writeMem(0x3271, { 0xcb, 0xbe });
        gbc.writeMem(0x85ea, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbb99);
        EXPECT(gbc.pc(), 0x3273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ea), 0x60);
        // CB BE 006C
        gbc.setState(0x5fe1, 0xc6c, 0xb00, 0x9f87, 0xac1a, 0xf1fa, 0x0, 0x1);
        gbc.writeMem(0x5fe1, { 0xcb, 0xbe });
        gbc.writeMem(0xf1fa, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc6c);
        EXPECT(gbc.pc(), 0x5fe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf1fa), 0x37);
        // CB BE 006E
        gbc.setState(0x4966, 0xdb9b, 0xe260, 0xa045, 0x5f18, 0x178f, 0x0, 0x1);
        gbc.writeMem(0x178f, { 0x68 });
        gbc.writeMem(0x4966, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xdb9b);
        EXPECT(gbc.pc(), 0x4968);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 006F
        gbc.setState(0x324f, 0xccc2, 0x4cb0, 0x9093, 0x4cb9, 0x2029, 0x1, 0x0);
        gbc.writeMem(0x2029, { 0x67 });
        gbc.writeMem(0x324f, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xccc2);
        EXPECT(gbc.pc(), 0x3251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0070
        gbc.setState(0xd21a, 0xcbfc, 0x3680, 0xbb19, 0xe55a, 0xdfa5, 0x1, 0x1);
        gbc.writeMem(0xd21a, { 0xcb, 0xbe });
        gbc.writeMem(0xdfa5, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcbfc);
        EXPECT(gbc.pc(), 0xd21c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd21a), 0xcb);
        EXPECT(gbc.readMem(0xd21b), 0xbe);
        EXPECT(gbc.readMem(0xdfa5), 0xf);
        // CB BE 0072
        gbc.setState(0xd80e, 0x78b0, 0x1300, 0x62c4, 0xde3e, 0x8457, 0x1, 0x1);
        gbc.writeMem(0x8457, { 0xf });
        gbc.writeMem(0xd80e, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x78b0);
        EXPECT(gbc.pc(), 0xd810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8457), 0xf);
        EXPECT(gbc.readMem(0xd80e), 0xcb);
        EXPECT(gbc.readMem(0xd80f), 0xbe);
        // CB BE 0074
        gbc.setState(0xe20a, 0x91bf, 0xbff0, 0x92ae, 0x71b, 0xb584, 0x0, 0x1);
        gbc.writeMem(0xb584, { 0x36 });
        gbc.writeMem(0xe20a, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x91bf);
        EXPECT(gbc.pc(), 0xe20c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb584), 0x36);
        EXPECT(gbc.readMem(0xe20a), 0xcb);
        EXPECT(gbc.readMem(0xe20b), 0xbe);
        // CB BE 0075
        gbc.setState(0x62b1, 0x6cf7, 0xe090, 0x945, 0xf177, 0xa35b, 0x1, 0x1);
        gbc.writeMem(0x62b1, { 0xcb, 0xbe });
        gbc.writeMem(0xa35b, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6cf7);
        EXPECT(gbc.pc(), 0x62b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa35b), 0x52);
        // CB BE 0076
        gbc.setState(0x68a, 0x1751, 0x44d0, 0x42de, 0x9ade, 0x9ee2, 0x1, 0x1);
        gbc.writeMem(0x68a, { 0xcb, 0xbe });
        gbc.writeMem(0x9ee2, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1751);
        EXPECT(gbc.pc(), 0x68c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee2), 0x1c);
        // CB BE 0077
        gbc.setState(0xec03, 0x6d71, 0x9ad0, 0x455, 0x440e, 0xeb8, 0x1, 0x0);
        gbc.writeMem(0xeb8, { 0x3a });
        gbc.writeMem(0xec03, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6d71);
        EXPECT(gbc.pc(), 0xec05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec03), 0xcb);
        EXPECT(gbc.readMem(0xec04), 0xbe);
        // CB BE 0078
        gbc.setState(0x6dbd, 0x6dcf, 0xc8f0, 0x46f7, 0x7f1c, 0xcf32, 0x0, 0x0);
        gbc.writeMem(0x6dbd, { 0xcb, 0xbe });
        gbc.writeMem(0xcf32, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6dcf);
        EXPECT(gbc.pc(), 0x6dbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf32), 0x1);
        // CB BE 0079
        gbc.setState(0x84cb, 0x7e2a, 0x640, 0x287c, 0x9101, 0x8f13, 0x0, 0x0);
        gbc.writeMem(0x84cb, { 0xcb, 0xbe });
        gbc.writeMem(0x8f13, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7e2a);
        EXPECT(gbc.pc(), 0x84cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84cb), 0xcb);
        EXPECT(gbc.readMem(0x84cc), 0xbe);
        EXPECT(gbc.readMem(0x8f13), 0x30);
        // CB BE 007A
        gbc.setState(0xb717, 0x129d, 0x32c0, 0xc9a2, 0x7376, 0xe27f, 0x0, 0x0);
        gbc.writeMem(0xb717, { 0xcb, 0xbe });
        gbc.writeMem(0xe27f, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x129d);
        EXPECT(gbc.pc(), 0xb719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb717), 0xcb);
        EXPECT(gbc.readMem(0xb718), 0xbe);
        EXPECT(gbc.readMem(0xe27f), 0x46);
        // CB BE 007B
        gbc.setState(0x2e5a, 0x340f, 0xc310, 0xb245, 0xffe0, 0x6c22, 0x1, 0x0);
        gbc.writeMem(0x2e5a, { 0xcb, 0xbe });
        gbc.writeMem(0x6c22, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x340f);
        EXPECT(gbc.pc(), 0x2e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 007C
        gbc.setState(0xaeb3, 0xe9a9, 0x2400, 0x905b, 0x944e, 0xdd07, 0x1, 0x0);
        gbc.writeMem(0xaeb3, { 0xcb, 0xbe });
        gbc.writeMem(0xdd07, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe9a9);
        EXPECT(gbc.pc(), 0xaeb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb3), 0xcb);
        EXPECT(gbc.readMem(0xaeb4), 0xbe);
        EXPECT(gbc.readMem(0xdd07), 0x67);
        // CB BE 007D
        gbc.setState(0x8e31, 0xd07, 0x7b20, 0xfb0c, 0x4d77, 0xf88e, 0x0, 0x1);
        gbc.writeMem(0x8e31, { 0xcb, 0xbe });
        gbc.writeMem(0xf88e, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd07);
        EXPECT(gbc.pc(), 0x8e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e31), 0xcb);
        EXPECT(gbc.readMem(0x8e32), 0xbe);
        EXPECT(gbc.readMem(0xf88e), 0x1d);
        // CB BE 007F
        gbc.setState(0x9044, 0x60b1, 0x1f90, 0xaafc, 0x9f08, 0x7052, 0x0, 0x1);
        gbc.writeMem(0x7052, { 0x17 });
        gbc.writeMem(0x9044, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x60b1);
        EXPECT(gbc.pc(), 0x9046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9044), 0xcb);
        EXPECT(gbc.readMem(0x9045), 0xbe);
        // CB BE 0081
        gbc.setState(0xa967, 0xdb, 0x56e0, 0x7cf2, 0xc4b1, 0xc8fe, 0x0, 0x0);
        gbc.writeMem(0xa967, { 0xcb, 0xbe });
        gbc.writeMem(0xc8fe, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xdb);
        EXPECT(gbc.pc(), 0xa969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa967), 0xcb);
        EXPECT(gbc.readMem(0xa968), 0xbe);
        EXPECT(gbc.readMem(0xc8fe), 0xa);
        // CB BE 0082
        gbc.setState(0x5f15, 0x7b3e, 0x11d0, 0x286f, 0x753e, 0xd5d5, 0x0, 0x0);
        gbc.writeMem(0x5f15, { 0xcb, 0xbe });
        gbc.writeMem(0xd5d5, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7b3e);
        EXPECT(gbc.pc(), 0x5f17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d5), 0x70);
        // CB BE 0083
        gbc.setState(0x328a, 0x789c, 0x8810, 0x6f23, 0xcaef, 0x23, 0x0, 0x0);
        gbc.writeMem(0x23, { 0x47 });
        gbc.writeMem(0x328a, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x789c);
        EXPECT(gbc.pc(), 0x328c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0085
        gbc.setState(0x9747, 0x4413, 0x310, 0xc97f, 0x4dd6, 0xf733, 0x0, 0x1);
        gbc.writeMem(0x9747, { 0xcb, 0xbe });
        gbc.writeMem(0xf733, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4413);
        EXPECT(gbc.pc(), 0x9749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9747), 0xcb);
        EXPECT(gbc.readMem(0x9748), 0xbe);
        EXPECT(gbc.readMem(0xf733), 0x6);
        // CB BE 0087
        gbc.setState(0xc1df, 0x2e7, 0x780, 0xc6a2, 0x83f2, 0xbdc5, 0x0, 0x0);
        gbc.writeMem(0xbdc5, { 0x59 });
        gbc.writeMem(0xc1df, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2e7);
        EXPECT(gbc.pc(), 0xc1e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc5), 0x59);
        EXPECT(gbc.readMem(0xc1df), 0xcb);
        EXPECT(gbc.readMem(0xc1e0), 0xbe);
        // CB BE 0088
        gbc.setState(0x4142, 0x9f84, 0xcaf0, 0x6f82, 0x2591, 0x966c, 0x0, 0x1);
        gbc.writeMem(0x4142, { 0xcb, 0xbe });
        gbc.writeMem(0x966c, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9f84);
        EXPECT(gbc.pc(), 0x4144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x966c), 0x4a);
        // CB BE 0089
        gbc.setState(0x40c9, 0x3b1b, 0xe520, 0x7046, 0x7605, 0xc854, 0x0, 0x1);
        gbc.writeMem(0x40c9, { 0xcb, 0xbe });
        gbc.writeMem(0xc854, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3b1b);
        EXPECT(gbc.pc(), 0x40cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc854), 0x2d);
        // CB BE 008C
        gbc.setState(0x51a9, 0xc3a7, 0xeac0, 0xed91, 0xb70c, 0x5fb2, 0x1, 0x0);
        gbc.writeMem(0x51a9, { 0xcb, 0xbe });
        gbc.writeMem(0x5fb2, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc3a7);
        EXPECT(gbc.pc(), 0x51ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 008D
        gbc.setState(0x75d2, 0x192a, 0xd1a0, 0x5df8, 0xff21, 0x1dab, 0x1, 0x1);
        gbc.writeMem(0x1dab, { 0x7d });
        gbc.writeMem(0x75d2, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x192a);
        EXPECT(gbc.pc(), 0x75d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 008E
        gbc.setState(0x16c0, 0x840e, 0x16f0, 0x49a3, 0xe07e, 0xae1e, 0x0, 0x1);
        gbc.writeMem(0x16c0, { 0xcb, 0xbe });
        gbc.writeMem(0xae1e, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x840e);
        EXPECT(gbc.pc(), 0x16c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae1e), 0x1f);
        // CB BE 0090
        gbc.setState(0x485f, 0xb0a6, 0x570, 0xc53b, 0xb509, 0x63a6, 0x1, 0x0);
        gbc.writeMem(0x485f, { 0xcb, 0xbe });
        gbc.writeMem(0x63a6, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb0a6);
        EXPECT(gbc.pc(), 0x4861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0092
        gbc.setState(0xce4f, 0x97ec, 0x5140, 0x6335, 0x329, 0xee34, 0x1, 0x0);
        gbc.writeMem(0xce4f, { 0xcb, 0xbe });
        gbc.writeMem(0xee34, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x97ec);
        EXPECT(gbc.pc(), 0xce51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce4f), 0xcb);
        EXPECT(gbc.readMem(0xce50), 0xbe);
        EXPECT(gbc.readMem(0xee34), 0x5c);
        // CB BE 0093
        gbc.setState(0x2e7, 0x91a0, 0x9020, 0xe81f, 0xab48, 0xf2f4, 0x1, 0x1);
        gbc.writeMem(0x2e7, { 0xcb, 0xbe });
        gbc.writeMem(0xf2f4, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x91a0);
        EXPECT(gbc.pc(), 0x2e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf2f4), 0x44);
        // CB BE 0096
        gbc.setState(0x5028, 0x8e2e, 0x6690, 0xe42a, 0x4a, 0x1853, 0x1, 0x0);
        gbc.writeMem(0x1853, { 0xe });
        gbc.writeMem(0x5028, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8e2e);
        EXPECT(gbc.pc(), 0x502a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0097
        gbc.setState(0x1c0b, 0xfa96, 0xd40, 0x43fc, 0xd34b, 0x8c7e, 0x0, 0x0);
        gbc.writeMem(0x1c0b, { 0xcb, 0xbe });
        gbc.writeMem(0x8c7e, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfa96);
        EXPECT(gbc.pc(), 0x1c0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c7e), 0x2f);
        // CB BE 0098
        gbc.setState(0xe285, 0xe953, 0x21a0, 0x3194, 0xd0b, 0x85c9, 0x0, 0x0);
        gbc.writeMem(0x85c9, { 0x57 });
        gbc.writeMem(0xe285, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe953);
        EXPECT(gbc.pc(), 0xe287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c9), 0x57);
        EXPECT(gbc.readMem(0xe285), 0xcb);
        EXPECT(gbc.readMem(0xe286), 0xbe);
        // CB BE 0099
        gbc.setState(0x114d, 0x7a80, 0x8ef0, 0x76b7, 0xe9f4, 0xa1f6, 0x0, 0x0);
        gbc.writeMem(0x114d, { 0xcb, 0xbe });
        gbc.writeMem(0xa1f6, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7a80);
        EXPECT(gbc.pc(), 0x114f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f6), 0x6f);
        // CB BE 009A
        gbc.setState(0x805a, 0x5082, 0x3b40, 0xa565, 0xdc93, 0xcd83, 0x0, 0x1);
        gbc.writeMem(0x805a, { 0xcb, 0xbe });
        gbc.writeMem(0xcd83, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5082);
        EXPECT(gbc.pc(), 0x805c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x805a), 0xcb);
        EXPECT(gbc.readMem(0x805b), 0xbe);
        EXPECT(gbc.readMem(0xcd83), 0x1a);
        // CB BE 009B
        gbc.setState(0x5a94, 0xed2, 0x2120, 0x4ded, 0x8ddf, 0xcc45, 0x1, 0x0);
        gbc.writeMem(0x5a94, { 0xcb, 0xbe });
        gbc.writeMem(0xcc45, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xed2);
        EXPECT(gbc.pc(), 0x5a96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc45), 0x26);
        // CB BE 009C
        gbc.setState(0xc1e5, 0x6526, 0x2090, 0xaf64, 0x5335, 0x2fb4, 0x0, 0x0);
        gbc.writeMem(0x2fb4, { 0x5f });
        gbc.writeMem(0xc1e5, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6526);
        EXPECT(gbc.pc(), 0xc1e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e5), 0xcb);
        EXPECT(gbc.readMem(0xc1e6), 0xbe);
        // CB BE 009F
        gbc.setState(0x9165, 0x14f, 0xa280, 0xd01a, 0xf772, 0x36ce, 0x1, 0x1);
        gbc.writeMem(0x36ce, { 0x33 });
        gbc.writeMem(0x9165, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x14f);
        EXPECT(gbc.pc(), 0x9167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9165), 0xcb);
        EXPECT(gbc.readMem(0x9166), 0xbe);
        // CB BE 00A1
        gbc.setState(0xc96, 0x7c34, 0x7e10, 0xdbe4, 0xab9c, 0x7b41, 0x1, 0x0);
        gbc.writeMem(0xc96, { 0xcb, 0xbe });
        gbc.writeMem(0x7b41, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7c34);
        EXPECT(gbc.pc(), 0xc98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 00A2
        gbc.setState(0x630d, 0x160d, 0x71d0, 0xe330, 0x2f78, 0xbbb1, 0x1, 0x0);
        gbc.writeMem(0x630d, { 0xcb, 0xbe });
        gbc.writeMem(0xbbb1, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x160d);
        EXPECT(gbc.pc(), 0x630f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb1), 0x32);
        // CB BE 00A3
        gbc.setState(0x5a3b, 0xbb39, 0x470, 0xb952, 0x920c, 0x5488, 0x1, 0x0);
        gbc.writeMem(0x5488, { 0x19 });
        gbc.writeMem(0x5a3b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xbb39);
        EXPECT(gbc.pc(), 0x5a3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 00A4
        gbc.setState(0x5b5f, 0x16f3, 0xc310, 0xe422, 0x38ff, 0xc975, 0x0, 0x1);
        gbc.writeMem(0x5b5f, { 0xcb, 0xbe });
        gbc.writeMem(0xc975, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x16f3);
        EXPECT(gbc.pc(), 0x5b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc975), 0x3e);
        // CB BE 00A5
        gbc.setState(0x56ec, 0x2b5d, 0x7850, 0xdb74, 0xe0d, 0x9371, 0x1, 0x1);
        gbc.writeMem(0x56ec, { 0xcb, 0xbe });
        gbc.writeMem(0x9371, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2b5d);
        EXPECT(gbc.pc(), 0x56ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9371), 0x43);
        // CB BE 00A7
        gbc.setState(0x71d3, 0xd7c2, 0x7330, 0x81f3, 0xb757, 0x4557, 0x0, 0x0);
        gbc.writeMem(0x4557, { 0x3 });
        gbc.writeMem(0x71d3, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd7c2);
        EXPECT(gbc.pc(), 0x71d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 00A8
        gbc.setState(0x3195, 0xd7ac, 0xff10, 0x2341, 0x963b, 0x2a54, 0x0, 0x1);
        gbc.writeMem(0x2a54, { 0x35 });
        gbc.writeMem(0x3195, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd7ac);
        EXPECT(gbc.pc(), 0x3197);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 00A9
        gbc.setState(0x1c82, 0x5d03, 0xd1d0, 0xba0, 0x85ab, 0xd3e6, 0x1, 0x1);
        gbc.writeMem(0x1c82, { 0xcb, 0xbe });
        gbc.writeMem(0xd3e6, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5d03);
        EXPECT(gbc.pc(), 0x1c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3e6), 0x50);
        // CB BE 00AA
        gbc.setState(0x627a, 0x864a, 0x1890, 0xe1af, 0x9758, 0xf393, 0x0, 0x0);
        gbc.writeMem(0x627a, { 0xcb, 0xbe });
        gbc.writeMem(0xf393, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x864a);
        EXPECT(gbc.pc(), 0x627c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf393), 0x13);
        // CB BE 00AB
        gbc.setState(0x8ac0, 0x131d, 0x5410, 0x8080, 0x5684, 0xf823, 0x1, 0x1);
        gbc.writeMem(0x8ac0, { 0xcb, 0xbe });
        gbc.writeMem(0xf823, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x131d);
        EXPECT(gbc.pc(), 0x8ac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac0), 0xcb);
        EXPECT(gbc.readMem(0x8ac1), 0xbe);
        EXPECT(gbc.readMem(0xf823), 0x49);
        // CB BE 00AD
        gbc.setState(0x39ef, 0x1fa6, 0x59a0, 0xc648, 0x6bae, 0x29f6, 0x0, 0x1);
        gbc.writeMem(0x29f6, { 0x6c });
        gbc.writeMem(0x39ef, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1fa6);
        EXPECT(gbc.pc(), 0x39f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 00AF
        gbc.setState(0x27be, 0xc177, 0xc9f0, 0xd409, 0x78f9, 0x2361, 0x0, 0x1);
        gbc.writeMem(0x2361, { 0x47 });
        gbc.writeMem(0x27be, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc177);
        EXPECT(gbc.pc(), 0x27c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 00B0
        gbc.setState(0x2701, 0x28fa, 0x1630, 0x8101, 0x259d, 0xec5f, 0x1, 0x0);
        gbc.writeMem(0x2701, { 0xcb, 0xbe });
        gbc.writeMem(0xec5f, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x28fa);
        EXPECT(gbc.pc(), 0x2703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec5f), 0x6a);
        // CB BE 00B1
        gbc.setState(0xaa33, 0xe7a0, 0x960, 0x6abc, 0xfa0a, 0x19eb, 0x0, 0x1);
        gbc.writeMem(0x19eb, { 0x3c });
        gbc.writeMem(0xaa33, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe7a0);
        EXPECT(gbc.pc(), 0xaa35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa33), 0xcb);
        EXPECT(gbc.readMem(0xaa34), 0xbe);
        // CB BE 00B2
        gbc.setState(0x74b3, 0xad6e, 0xfa00, 0xb602, 0xaa1f, 0xa089, 0x0, 0x1);
        gbc.writeMem(0x74b3, { 0xcb, 0xbe });
        gbc.writeMem(0xa089, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xad6e);
        EXPECT(gbc.pc(), 0x74b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa089), 0x4);
        // CB BE 00B3
        gbc.setState(0x8d28, 0x6a4e, 0x7260, 0xb919, 0x1046, 0xe0c8, 0x1, 0x0);
        gbc.writeMem(0x8d28, { 0xcb, 0xbe });
        gbc.writeMem(0xe0c8, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6a4e);
        EXPECT(gbc.pc(), 0x8d2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d28), 0xcb);
        EXPECT(gbc.readMem(0x8d29), 0xbe);
        EXPECT(gbc.readMem(0xe0c8), 0x64);
        // CB BE 00B7
        gbc.setState(0x9c86, 0x2c7e, 0xbc20, 0x85c2, 0x8d8c, 0xd1df, 0x0, 0x0);
        gbc.writeMem(0x9c86, { 0xcb, 0xbe });
        gbc.writeMem(0xd1df, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2c7e);
        EXPECT(gbc.pc(), 0x9c88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c86), 0xcb);
        EXPECT(gbc.readMem(0x9c87), 0xbe);
        EXPECT(gbc.readMem(0xd1df), 0x7b);
        // CB BE 00B8
        gbc.setState(0x8572, 0x3d62, 0x9cf0, 0xbac8, 0xfcf4, 0xf6e6, 0x1, 0x0);
        gbc.writeMem(0x8572, { 0xcb, 0xbe });
        gbc.writeMem(0xf6e6, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3d62);
        EXPECT(gbc.pc(), 0x8574);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8572), 0xcb);
        EXPECT(gbc.readMem(0x8573), 0xbe);
        EXPECT(gbc.readMem(0xf6e6), 0x58);
        // CB BE 00B9
        gbc.setState(0x7058, 0x8b2d, 0xc9a0, 0x8e31, 0xb3aa, 0xa147, 0x0, 0x1);
        gbc.writeMem(0x7058, { 0xcb, 0xbe });
        gbc.writeMem(0xa147, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8b2d);
        EXPECT(gbc.pc(), 0x705a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa147), 0x76);
        // CB BE 00BA
        gbc.setState(0x90c3, 0xdb44, 0xd9d0, 0x210, 0xaf98, 0x92a, 0x0, 0x1);
        gbc.writeMem(0x92a, { 0x1a });
        gbc.writeMem(0x90c3, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xdb44);
        EXPECT(gbc.pc(), 0x90c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c3), 0xcb);
        EXPECT(gbc.readMem(0x90c4), 0xbe);
        // CB BE 00BB
        gbc.setState(0x70c6, 0xdefe, 0xbb50, 0x8f16, 0x7a2e, 0x35, 0x0, 0x0);
        gbc.writeMem(0x35, { 0x1 });
        gbc.writeMem(0x70c6, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xdefe);
        EXPECT(gbc.pc(), 0x70c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 00BC
        gbc.setState(0xac71, 0x76a, 0xa130, 0x8a51, 0xb2b3, 0x2d3e, 0x1, 0x0);
        gbc.writeMem(0x2d3e, { 0x21 });
        gbc.writeMem(0xac71, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x76a);
        EXPECT(gbc.pc(), 0xac73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac71), 0xcb);
        EXPECT(gbc.readMem(0xac72), 0xbe);
        // CB BE 00BE
        gbc.setState(0xa2e3, 0x404f, 0x3060, 0xe8a4, 0x58d4, 0x9012, 0x1, 0x1);
        gbc.writeMem(0x9012, { 0xee });
        gbc.writeMem(0xa2e3, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x404f);
        EXPECT(gbc.pc(), 0xa2e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9012), 0x6e);
        EXPECT(gbc.readMem(0xa2e3), 0xcb);
        EXPECT(gbc.readMem(0xa2e4), 0xbe);
        // CB BE 00BF
        gbc.setState(0xefa4, 0xee99, 0x8b50, 0xd5a6, 0xfa3, 0xb21c, 0x1, 0x0);
        gbc.writeMem(0xb21c, { 0x43 });
        gbc.writeMem(0xefa4, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xee99);
        EXPECT(gbc.pc(), 0xefa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb21c), 0x43);
        EXPECT(gbc.readMem(0xefa4), 0xcb);
        EXPECT(gbc.readMem(0xefa5), 0xbe);
        // CB BE 00C0
        gbc.setState(0x50cc, 0xb88a, 0x5cf0, 0xd2dd, 0x316e, 0x39a0, 0x1, 0x1);
        gbc.writeMem(0x39a0, { 0x2f });
        gbc.writeMem(0x50cc, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb88a);
        EXPECT(gbc.pc(), 0x50ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 00C1
        gbc.setState(0xcd05, 0x6ba3, 0x99f0, 0x598a, 0x25ca, 0x5e7d, 0x0, 0x0);
        gbc.writeMem(0x5e7d, { 0x76 });
        gbc.writeMem(0xcd05, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6ba3);
        EXPECT(gbc.pc(), 0xcd07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd05), 0xcb);
        EXPECT(gbc.readMem(0xcd06), 0xbe);
        // CB BE 00C2
        gbc.setState(0x45db, 0xfa4c, 0x3be0, 0xa17d, 0x5949, 0xe944, 0x1, 0x1);
        gbc.writeMem(0x45db, { 0xcb, 0xbe });
        gbc.writeMem(0xe944, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfa4c);
        EXPECT(gbc.pc(), 0x45dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe944), 0x19);
        // CB BE 00C3
        gbc.setState(0xdc3a, 0x9775, 0x3ef0, 0xde, 0xbba7, 0xbc2, 0x1, 0x0);
        gbc.writeMem(0xbc2, { 0x2a });
        gbc.writeMem(0xdc3a, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9775);
        EXPECT(gbc.pc(), 0xdc3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc3a), 0xcb);
        EXPECT(gbc.readMem(0xdc3b), 0xbe);
        // CB BE 00C5
        gbc.setState(0x4efb, 0x521a, 0xf10, 0xf511, 0xd9d8, 0x4f24, 0x0, 0x1);
        gbc.writeMem(0x4efb, { 0xcb, 0xbe });
        gbc.writeMem(0x4f24, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x521a);
        EXPECT(gbc.pc(), 0x4efd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 00C6
        gbc.setState(0x7938, 0x82f6, 0xdf70, 0x9208, 0x4e70, 0x4a82, 0x1, 0x1);
        gbc.writeMem(0x4a82, { 0x14 });
        gbc.writeMem(0x7938, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x82f6);
        EXPECT(gbc.pc(), 0x793a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 00C7
        gbc.setState(0xe3ec, 0x7504, 0x8b10, 0xb500, 0xcb39, 0x39d7, 0x0, 0x1);
        gbc.writeMem(0x39d7, { 0x4c });
        gbc.writeMem(0xe3ec, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x7504);
        EXPECT(gbc.pc(), 0xe3ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ec), 0xcb);
        EXPECT(gbc.readMem(0xe3ed), 0xbe);
        // CB BE 00CA
        gbc.setState(0xca28, 0xb3a4, 0x2170, 0x330b, 0x76c0, 0xd6f1, 0x1, 0x1);
        gbc.writeMem(0xca28, { 0xcb, 0xbe });
        gbc.writeMem(0xd6f1, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb3a4);
        EXPECT(gbc.pc(), 0xca2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca28), 0xcb);
        EXPECT(gbc.readMem(0xca29), 0xbe);
        EXPECT(gbc.readMem(0xd6f1), 0x9);
        // CB BE 00CB
        gbc.setState(0x8687, 0x96f9, 0xae0, 0xef87, 0x364d, 0xacc6, 0x1, 0x0);
        gbc.writeMem(0x8687, { 0xcb, 0xbe });
        gbc.writeMem(0xacc6, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x96f9);
        EXPECT(gbc.pc(), 0x8689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8687), 0xcb);
        EXPECT(gbc.readMem(0x8688), 0xbe);
        EXPECT(gbc.readMem(0xacc6), 0x1c);
        // CB BE 00CC
        gbc.setState(0x7885, 0xc46b, 0x3960, 0x84ca, 0x9673, 0xdc59, 0x0, 0x0);
        gbc.writeMem(0x7885, { 0xcb, 0xbe });
        gbc.writeMem(0xdc59, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc46b);
        EXPECT(gbc.pc(), 0x7887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc59), 0x46);
        // CB BE 00CE
        gbc.setState(0x4528, 0x1ad7, 0xed20, 0x7443, 0xc248, 0xde84, 0x1, 0x1);
        gbc.writeMem(0x4528, { 0xcb, 0xbe });
        gbc.writeMem(0xde84, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1ad7);
        EXPECT(gbc.pc(), 0x452a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde84), 0x36);
        // CB BE 00CF
        gbc.setState(0xe453, 0xf587, 0x5dc0, 0x5625, 0x24a3, 0xfbc3, 0x1, 0x1);
        gbc.writeMem(0xe453, { 0xcb, 0xbe });
        gbc.writeMem(0xfbc3, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf587);
        EXPECT(gbc.pc(), 0xe455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe453), 0xcb);
        EXPECT(gbc.readMem(0xe454), 0xbe);
        EXPECT(gbc.readMem(0xfbc3), 0x7d);
        // CB BE 00D0
        gbc.setState(0x179, 0xb15a, 0x3f0, 0x6ee0, 0x47ae, 0xe981, 0x1, 0x1);
        gbc.writeMem(0x179, { 0xcb, 0xbe });
        gbc.writeMem(0xe981, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb15a);
        EXPECT(gbc.pc(), 0x17b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe981), 0x4f);
        // CB BE 00D2
        gbc.setState(0x5ed5, 0x1f0f, 0x9d30, 0x9008, 0xdc6c, 0x847d, 0x1, 0x0);
        gbc.writeMem(0x5ed5, { 0xcb, 0xbe });
        gbc.writeMem(0x847d, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1f0f);
        EXPECT(gbc.pc(), 0x5ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x847d), 0x32);
        // CB BE 00D3
        gbc.setState(0x7f30, 0xbf6e, 0x4650, 0x5f63, 0x265b, 0xe1b0, 0x1, 0x0);
        gbc.writeMem(0x7f30, { 0xcb, 0xbe });
        gbc.writeMem(0xe1b0, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xbf6e);
        EXPECT(gbc.pc(), 0x7f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1b0), 0x11);
        // CB BE 00D5
        gbc.setState(0x1612, 0x5e6b, 0x61f0, 0x17eb, 0xb479, 0xdbf, 0x1, 0x1);
        gbc.writeMem(0xdbf, { 0x3b });
        gbc.writeMem(0x1612, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5e6b);
        EXPECT(gbc.pc(), 0x1614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 00D6
        gbc.setState(0x5305, 0x1561, 0xb8a0, 0xdfaf, 0x5ea, 0x24df, 0x0, 0x1);
        gbc.writeMem(0x24df, { 0x38 });
        gbc.writeMem(0x5305, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1561);
        EXPECT(gbc.pc(), 0x5307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 00D7
        gbc.setState(0x83b9, 0xaeac, 0x5cb0, 0xad, 0x81e4, 0xb88c, 0x0, 0x1);
        gbc.writeMem(0x83b9, { 0xcb, 0xbe });
        gbc.writeMem(0xb88c, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xaeac);
        EXPECT(gbc.pc(), 0x83bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83b9), 0xcb);
        EXPECT(gbc.readMem(0x83ba), 0xbe);
        EXPECT(gbc.readMem(0xb88c), 0x74);
        // CB BE 00D8
        gbc.setState(0x52bc, 0xd157, 0xd370, 0xf792, 0x5d02, 0x680e, 0x1, 0x1);
        gbc.writeMem(0x52bc, { 0xcb, 0xbe });
        gbc.writeMem(0x680e, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd157);
        EXPECT(gbc.pc(), 0x52be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 00DC
        gbc.setState(0x44c1, 0xabc5, 0xaff0, 0x5275, 0xf4, 0xbb50, 0x0, 0x1);
        gbc.writeMem(0x44c1, { 0xcb, 0xbe });
        gbc.writeMem(0xbb50, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xabc5);
        EXPECT(gbc.pc(), 0x44c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb50), 0x69);
        // CB BE 00DD
        gbc.setState(0xec6, 0xe5d8, 0x9020, 0x16de, 0x68dc, 0xe225, 0x1, 0x1);
        gbc.writeMem(0xec6, { 0xcb, 0xbe });
        gbc.writeMem(0xe225, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe5d8);
        EXPECT(gbc.pc(), 0xec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe225), 0x1e);
        // CB BE 00DE
        gbc.setState(0x49c3, 0x59c0, 0x7760, 0xfb72, 0xb77e, 0x92e8, 0x1, 0x1);
        gbc.writeMem(0x49c3, { 0xcb, 0xbe });
        gbc.writeMem(0x92e8, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x59c0);
        EXPECT(gbc.pc(), 0x49c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e8), 0x70);
        // CB BE 00DF
        gbc.setState(0x8882, 0xb293, 0x32d0, 0x8975, 0x2032, 0x1e56, 0x0, 0x0);
        gbc.writeMem(0x1e56, { 0x24 });
        gbc.writeMem(0x8882, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb293);
        EXPECT(gbc.pc(), 0x8884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8882), 0xcb);
        EXPECT(gbc.readMem(0x8883), 0xbe);
        // CB BE 00E0
        gbc.setState(0xdde6, 0x6429, 0xc800, 0xdf18, 0x8797, 0xfb2, 0x0, 0x1);
        gbc.writeMem(0xfb2, { 0x52 });
        gbc.writeMem(0xdde6, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6429);
        EXPECT(gbc.pc(), 0xdde8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde6), 0xcb);
        EXPECT(gbc.readMem(0xdde7), 0xbe);
        // CB BE 00E1
        gbc.setState(0x60f3, 0x7fc2, 0xf230, 0x97bb, 0xe9ab, 0x7141, 0x1, 0x1);
        gbc.writeMem(0x60f3, { 0xcb, 0xbe });
        gbc.writeMem(0x7141, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7fc2);
        EXPECT(gbc.pc(), 0x60f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 00E2
        gbc.setState(0x8af3, 0x3ac0, 0xcc60, 0x4f92, 0x63d8, 0x1477, 0x1, 0x0);
        gbc.writeMem(0x1477, { 0x62 });
        gbc.writeMem(0x8af3, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3ac0);
        EXPECT(gbc.pc(), 0x8af5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af3), 0xcb);
        EXPECT(gbc.readMem(0x8af4), 0xbe);
        // CB BE 00E3
        gbc.setState(0x9b04, 0x2083, 0x2c80, 0x619b, 0x75ed, 0x6a15, 0x1, 0x0);
        gbc.writeMem(0x6a15, { 0x6 });
        gbc.writeMem(0x9b04, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2083);
        EXPECT(gbc.pc(), 0x9b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b04), 0xcb);
        EXPECT(gbc.readMem(0x9b05), 0xbe);
        // CB BE 00E4
        gbc.setState(0xba9f, 0xcda6, 0xa5d0, 0x782d, 0x770c, 0xfab, 0x1, 0x0);
        gbc.writeMem(0xfab, { 0x24 });
        gbc.writeMem(0xba9f, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcda6);
        EXPECT(gbc.pc(), 0xbaa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba9f), 0xcb);
        EXPECT(gbc.readMem(0xbaa0), 0xbe);
        // CB BE 00E5
        gbc.setState(0x4230, 0xa3cd, 0x7710, 0xdac4, 0xf1c2, 0xf026, 0x1, 0x1);
        gbc.writeMem(0x4230, { 0xcb, 0xbe });
        gbc.writeMem(0xf026, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa3cd);
        EXPECT(gbc.pc(), 0x4232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf026), 0x6a);
        // CB BE 00E6
        gbc.setState(0xa13a, 0x43a4, 0xe110, 0xe3f3, 0x8602, 0x8c1f, 0x0, 0x0);
        gbc.writeMem(0x8c1f, { 0x30 });
        gbc.writeMem(0xa13a, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x43a4);
        EXPECT(gbc.pc(), 0xa13c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c1f), 0x30);
        EXPECT(gbc.readMem(0xa13a), 0xcb);
        EXPECT(gbc.readMem(0xa13b), 0xbe);
        // CB BE 00E7
        gbc.setState(0x46c4, 0x1f63, 0xafb0, 0xa266, 0xe096, 0xdc9d, 0x1, 0x1);
        gbc.writeMem(0x46c4, { 0xcb, 0xbe });
        gbc.writeMem(0xdc9d, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1f63);
        EXPECT(gbc.pc(), 0x46c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc9d), 0x7d);
        // CB BE 00E8
        gbc.setState(0x5454, 0x9502, 0x9850, 0x845c, 0x10a6, 0xbefc, 0x0, 0x0);
        gbc.writeMem(0x5454, { 0xcb, 0xbe });
        gbc.writeMem(0xbefc, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9502);
        EXPECT(gbc.pc(), 0x5456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbefc), 0x8);
        // CB BE 00E9
        gbc.setState(0x861b, 0xe6d9, 0x8b20, 0x7823, 0xf290, 0x8502, 0x1, 0x0);
        gbc.writeMem(0x8502, { 0xa8 });
        gbc.writeMem(0x861b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe6d9);
        EXPECT(gbc.pc(), 0x861d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8502), 0x28);
        EXPECT(gbc.readMem(0x861b), 0xcb);
        EXPECT(gbc.readMem(0x861c), 0xbe);
        // CB BE 00EA
        gbc.setState(0x66cf, 0xfed7, 0x8ca0, 0xa34c, 0xbb02, 0xaf78, 0x0, 0x0);
        gbc.writeMem(0x66cf, { 0xcb, 0xbe });
        gbc.writeMem(0xaf78, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xfed7);
        EXPECT(gbc.pc(), 0x66d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf78), 0x63);
        // CB BE 00EB
        gbc.setState(0xab2e, 0x8c5f, 0xd3d0, 0xd1bd, 0x1a60, 0xcf95, 0x0, 0x0);
        gbc.writeMem(0xab2e, { 0xcb, 0xbe });
        gbc.writeMem(0xcf95, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8c5f);
        EXPECT(gbc.pc(), 0xab30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab2e), 0xcb);
        EXPECT(gbc.readMem(0xab2f), 0xbe);
        EXPECT(gbc.readMem(0xcf95), 0x76);
        // CB BE 00EC
        gbc.setState(0xbb2a, 0xe4e9, 0x44f0, 0x98d3, 0x5337, 0xdbc, 0x1, 0x0);
        gbc.writeMem(0xdbc, { 0x75 });
        gbc.writeMem(0xbb2a, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe4e9);
        EXPECT(gbc.pc(), 0xbb2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb2a), 0xcb);
        EXPECT(gbc.readMem(0xbb2b), 0xbe);
        // CB BE 00EF
        gbc.setState(0x84e9, 0xf602, 0x4200, 0x27d4, 0x94f6, 0x9fc3, 0x0, 0x1);
        gbc.writeMem(0x84e9, { 0xcb, 0xbe });
        gbc.writeMem(0x9fc3, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf602);
        EXPECT(gbc.pc(), 0x84eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84e9), 0xcb);
        EXPECT(gbc.readMem(0x84ea), 0xbe);
        EXPECT(gbc.readMem(0x9fc3), 0x28);
        // CB BE 00F0
        gbc.setState(0x5006, 0x3dc7, 0x4650, 0xe4e, 0xdb65, 0xea8c, 0x0, 0x0);
        gbc.writeMem(0x5006, { 0xcb, 0xbe });
        gbc.writeMem(0xea8c, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3dc7);
        EXPECT(gbc.pc(), 0x5008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea8c), 0x52);
        // CB BE 00F2
        gbc.setState(0x85ba, 0x431, 0xa7c0, 0x313d, 0x3094, 0x4af1, 0x1, 0x1);
        gbc.writeMem(0x4af1, { 0x51 });
        gbc.writeMem(0x85ba, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x431);
        EXPECT(gbc.pc(), 0x85bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ba), 0xcb);
        EXPECT(gbc.readMem(0x85bb), 0xbe);
        // CB BE 00F3
        gbc.setState(0x5648, 0xe3ec, 0x4340, 0x3f1e, 0xe856, 0xf584, 0x1, 0x1);
        gbc.writeMem(0x5648, { 0xcb, 0xbe });
        gbc.writeMem(0xf584, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe3ec);
        EXPECT(gbc.pc(), 0x564a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf584), 0x62);
        // CB BE 00F4
        gbc.setState(0xad7d, 0xb7e3, 0x9770, 0x7b43, 0xfbf4, 0x8153, 0x1, 0x0);
        gbc.writeMem(0x8153, { 0x2f });
        gbc.writeMem(0xad7d, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb7e3);
        EXPECT(gbc.pc(), 0xad7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8153), 0x2f);
        EXPECT(gbc.readMem(0xad7d), 0xcb);
        EXPECT(gbc.readMem(0xad7e), 0xbe);
        // CB BE 00F5
        gbc.setState(0x33b8, 0x13b7, 0x8aa0, 0x4257, 0x44e7, 0xa4ab, 0x0, 0x0);
        gbc.writeMem(0x33b8, { 0xcb, 0xbe });
        gbc.writeMem(0xa4ab, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x13b7);
        EXPECT(gbc.pc(), 0x33ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ab), 0x2c);
        // CB BE 00F7
        gbc.setState(0x53f2, 0xa609, 0xc190, 0x2c7f, 0x8cb6, 0xfbd, 0x1, 0x0);
        gbc.writeMem(0xfbd, { 0x59 });
        gbc.writeMem(0x53f2, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa609);
        EXPECT(gbc.pc(), 0x53f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 00F8
        gbc.setState(0x1c33, 0x901e, 0x1690, 0x6d71, 0xf39, 0x9618, 0x0, 0x0);
        gbc.writeMem(0x1c33, { 0xcb, 0xbe });
        gbc.writeMem(0x9618, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x901e);
        EXPECT(gbc.pc(), 0x1c35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9618), 0x73);
        // CB BE 00F9
        gbc.setState(0xa91a, 0xa039, 0xa240, 0x76a5, 0xc472, 0x9e0b, 0x1, 0x0);
        gbc.writeMem(0x9e0b, { 0x58 });
        gbc.writeMem(0xa91a, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa039);
        EXPECT(gbc.pc(), 0xa91c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e0b), 0x58);
        EXPECT(gbc.readMem(0xa91a), 0xcb);
        EXPECT(gbc.readMem(0xa91b), 0xbe);
        // CB BE 00FA
        gbc.setState(0xa9e7, 0x9377, 0x17e0, 0x4923, 0x6aff, 0x952b, 0x0, 0x0);
        gbc.writeMem(0x952b, { 0x7f });
        gbc.writeMem(0xa9e7, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9377);
        EXPECT(gbc.pc(), 0xa9e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x952b), 0x7f);
        EXPECT(gbc.readMem(0xa9e7), 0xcb);
        EXPECT(gbc.readMem(0xa9e8), 0xbe);
        // CB BE 00FC
        gbc.setState(0x8ab3, 0x51dc, 0xce30, 0xb585, 0xd6df, 0x9360, 0x1, 0x0);
        gbc.writeMem(0x8ab3, { 0xcb, 0xbe });
        gbc.writeMem(0x9360, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x51dc);
        EXPECT(gbc.pc(), 0x8ab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ab3), 0xcb);
        EXPECT(gbc.readMem(0x8ab4), 0xbe);
        EXPECT(gbc.readMem(0x9360), 0x43);
        // CB BE 00FE
        gbc.setState(0x174a, 0x4ba7, 0x42a0, 0xfde1, 0x25f5, 0x9cd8, 0x1, 0x1);
        gbc.writeMem(0x174a, { 0xcb, 0xbe });
        gbc.writeMem(0x9cd8, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4ba7);
        EXPECT(gbc.pc(), 0x174c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd8), 0x69);
        // CB BE 00FF
        gbc.setState(0x1cf3, 0x2cc1, 0x5bf0, 0x619b, 0xbf0d, 0x7e7d, 0x0, 0x1);
        gbc.writeMem(0x1cf3, { 0xcb, 0xbe });
        gbc.writeMem(0x7e7d, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2cc1);
        EXPECT(gbc.pc(), 0x1cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0101
        gbc.setState(0x2d38, 0xd521, 0x9ad0, 0xbeb4, 0xa3d3, 0x7b9a, 0x0, 0x1);
        gbc.writeMem(0x2d38, { 0xcb, 0xbe });
        gbc.writeMem(0x7b9a, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd521);
        EXPECT(gbc.pc(), 0x2d3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0103
        gbc.setState(0xeb43, 0xaaa1, 0x45a0, 0xa22d, 0x5445, 0x97e2, 0x0, 0x0);
        gbc.writeMem(0x97e2, { 0x88 });
        gbc.writeMem(0xeb43, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xaaa1);
        EXPECT(gbc.pc(), 0xeb45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e2), 0x8);
        EXPECT(gbc.readMem(0xeb43), 0xcb);
        EXPECT(gbc.readMem(0xeb44), 0xbe);
        // CB BE 0105
        gbc.setState(0xc96c, 0x5779, 0x8b80, 0x6500, 0xfba6, 0xb7ac, 0x1, 0x0);
        gbc.writeMem(0xb7ac, { 0x7 });
        gbc.writeMem(0xc96c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5779);
        EXPECT(gbc.pc(), 0xc96e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ac), 0x7);
        EXPECT(gbc.readMem(0xc96c), 0xcb);
        EXPECT(gbc.readMem(0xc96d), 0xbe);
        // CB BE 0106
        gbc.setState(0x145e, 0x676d, 0xc5e0, 0xc573, 0xe2fc, 0x9e1c, 0x1, 0x0);
        gbc.writeMem(0x145e, { 0xcb, 0xbe });
        gbc.writeMem(0x9e1c, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x676d);
        EXPECT(gbc.pc(), 0x1460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e1c), 0x30);
        // CB BE 0107
        gbc.setState(0x57c7, 0xe619, 0x9df0, 0x5bc8, 0x849, 0xe558, 0x0, 0x0);
        gbc.writeMem(0x57c7, { 0xcb, 0xbe });
        gbc.writeMem(0xe558, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe619);
        EXPECT(gbc.pc(), 0x57c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe558), 0x16);
        // CB BE 0108
        gbc.setState(0x6741, 0x2866, 0xffb0, 0x22b, 0x965e, 0xcc52, 0x1, 0x0);
        gbc.writeMem(0x6741, { 0xcb, 0xbe });
        gbc.writeMem(0xcc52, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2866);
        EXPECT(gbc.pc(), 0x6743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc52), 0x43);
        // CB BE 010A
        gbc.setState(0xc5d, 0xd167, 0x2b00, 0xe039, 0x49f4, 0xae96, 0x1, 0x0);
        gbc.writeMem(0xc5d, { 0xcb, 0xbe });
        gbc.writeMem(0xae96, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd167);
        EXPECT(gbc.pc(), 0xc5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae96), 0x17);
        // CB BE 010B
        gbc.setState(0x8ece, 0xd387, 0x7b70, 0x7e38, 0xe8fb, 0xf3e7, 0x0, 0x1);
        gbc.writeMem(0x8ece, { 0xcb, 0xbe });
        gbc.writeMem(0xf3e7, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd387);
        EXPECT(gbc.pc(), 0x8ed0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ece), 0xcb);
        EXPECT(gbc.readMem(0x8ecf), 0xbe);
        EXPECT(gbc.readMem(0xf3e7), 0x3c);
        // CB BE 010D
        gbc.setState(0x8c57, 0xacb0, 0xe800, 0x3a8b, 0xdf8d, 0xf65d, 0x0, 0x1);
        gbc.writeMem(0x8c57, { 0xcb, 0xbe });
        gbc.writeMem(0xf65d, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xacb0);
        EXPECT(gbc.pc(), 0x8c59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c57), 0xcb);
        EXPECT(gbc.readMem(0x8c58), 0xbe);
        EXPECT(gbc.readMem(0xf65d), 0x75);
        // CB BE 010F
        gbc.setState(0x4a2a, 0xc33d, 0x1ca0, 0x73f4, 0x80f0, 0x1103, 0x0, 0x1);
        gbc.writeMem(0x1103, { 0x4c });
        gbc.writeMem(0x4a2a, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc33d);
        EXPECT(gbc.pc(), 0x4a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0110
        gbc.setState(0xcf57, 0x3e94, 0x1a0, 0x7320, 0x2c53, 0x45bf, 0x0, 0x0);
        gbc.writeMem(0x45bf, { 0x18 });
        gbc.writeMem(0xcf57, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3e94);
        EXPECT(gbc.pc(), 0xcf59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf57), 0xcb);
        EXPECT(gbc.readMem(0xcf58), 0xbe);
        // CB BE 0111
        gbc.setState(0xec3d, 0xf655, 0xe500, 0x16b0, 0x5ac2, 0xf490, 0x0, 0x0);
        gbc.writeMem(0xec3d, { 0xcb, 0xbe });
        gbc.writeMem(0xf490, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf655);
        EXPECT(gbc.pc(), 0xec3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec3d), 0xcb);
        EXPECT(gbc.readMem(0xec3e), 0xbe);
        EXPECT(gbc.readMem(0xf490), 0x42);
        // CB BE 0113
        gbc.setState(0xea80, 0x54e0, 0x2b00, 0x56e1, 0xe6bf, 0x8875, 0x0, 0x0);
        gbc.writeMem(0x8875, { 0x7c });
        gbc.writeMem(0xea80, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x54e0);
        EXPECT(gbc.pc(), 0xea82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8875), 0x7c);
        EXPECT(gbc.readMem(0xea80), 0xcb);
        EXPECT(gbc.readMem(0xea81), 0xbe);
        // CB BE 0114
        gbc.setState(0xddbd, 0xacd1, 0xdf0, 0xaa9, 0xce05, 0xbadc, 0x0, 0x1);
        gbc.writeMem(0xbadc, { 0xdb });
        gbc.writeMem(0xddbd, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xacd1);
        EXPECT(gbc.pc(), 0xddbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbadc), 0x5b);
        EXPECT(gbc.readMem(0xddbd), 0xcb);
        EXPECT(gbc.readMem(0xddbe), 0xbe);
        // CB BE 0115
        gbc.setState(0x1178, 0xf46a, 0xced0, 0xad82, 0x75eb, 0xbe52, 0x1, 0x1);
        gbc.writeMem(0x1178, { 0xcb, 0xbe });
        gbc.writeMem(0xbe52, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf46a);
        EXPECT(gbc.pc(), 0x117a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe52), 0x70);
        // CB BE 0116
        gbc.setState(0x8a88, 0x90c8, 0xf3b0, 0xcfd0, 0x8c01, 0x507f, 0x1, 0x1);
        gbc.writeMem(0x507f, { 0x20 });
        gbc.writeMem(0x8a88, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x90c8);
        EXPECT(gbc.pc(), 0x8a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a88), 0xcb);
        EXPECT(gbc.readMem(0x8a89), 0xbe);
        // CB BE 0118
        gbc.setState(0x9b5e, 0xffb3, 0xe460, 0xd368, 0x112b, 0xf6fc, 0x0, 0x0);
        gbc.writeMem(0x9b5e, { 0xcb, 0xbe });
        gbc.writeMem(0xf6fc, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xffb3);
        EXPECT(gbc.pc(), 0x9b60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b5e), 0xcb);
        EXPECT(gbc.readMem(0x9b5f), 0xbe);
        EXPECT(gbc.readMem(0xf6fc), 0x7);
        // CB BE 0119
        gbc.setState(0xce22, 0x472d, 0x1620, 0xb773, 0xbe8e, 0xa69e, 0x1, 0x1);
        gbc.writeMem(0xa69e, { 0x53 });
        gbc.writeMem(0xce22, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x472d);
        EXPECT(gbc.pc(), 0xce24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa69e), 0x53);
        EXPECT(gbc.readMem(0xce22), 0xcb);
        EXPECT(gbc.readMem(0xce23), 0xbe);
        // CB BE 011B
        gbc.setState(0x424e, 0xa512, 0x7970, 0x247d, 0x3ef6, 0x2efd, 0x1, 0x0);
        gbc.writeMem(0x2efd, { 0x1 });
        gbc.writeMem(0x424e, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa512);
        EXPECT(gbc.pc(), 0x4250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 011E
        gbc.setState(0xed48, 0x6cc3, 0x5560, 0x5563, 0x55c9, 0x888e, 0x1, 0x0);
        gbc.writeMem(0x888e, { 0xd7 });
        gbc.writeMem(0xed48, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6cc3);
        EXPECT(gbc.pc(), 0xed4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x888e), 0x57);
        EXPECT(gbc.readMem(0xed48), 0xcb);
        EXPECT(gbc.readMem(0xed49), 0xbe);
        // CB BE 011F
        gbc.setState(0x8897, 0xf3b2, 0x94f0, 0x2a93, 0x7a24, 0xa9f2, 0x1, 0x1);
        gbc.writeMem(0x8897, { 0xcb, 0xbe });
        gbc.writeMem(0xa9f2, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf3b2);
        EXPECT(gbc.pc(), 0x8899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8897), 0xcb);
        EXPECT(gbc.readMem(0x8898), 0xbe);
        EXPECT(gbc.readMem(0xa9f2), 0x12);
        // CB BE 0120
        gbc.setState(0xc67f, 0x8999, 0x4870, 0x29fe, 0x62b, 0x9a68, 0x0, 0x0);
        gbc.writeMem(0x9a68, { 0x7f });
        gbc.writeMem(0xc67f, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8999);
        EXPECT(gbc.pc(), 0xc681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a68), 0x7f);
        EXPECT(gbc.readMem(0xc67f), 0xcb);
        EXPECT(gbc.readMem(0xc680), 0xbe);
        // CB BE 0122
        gbc.setState(0x3d8a, 0x854, 0x6bf0, 0x26be, 0x3c16, 0xdd5f, 0x1, 0x0);
        gbc.writeMem(0x3d8a, { 0xcb, 0xbe });
        gbc.writeMem(0xdd5f, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x854);
        EXPECT(gbc.pc(), 0x3d8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd5f), 0x3d);
        // CB BE 0123
        gbc.setState(0x5d4, 0xac05, 0x4040, 0x3f6, 0xa315, 0xe618, 0x0, 0x0);
        gbc.writeMem(0x5d4, { 0xcb, 0xbe });
        gbc.writeMem(0xe618, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xac05);
        EXPECT(gbc.pc(), 0x5d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe618), 0x4a);
        // CB BE 0125
        gbc.setState(0xc99, 0x1216, 0xa380, 0x35c8, 0x6be3, 0xbf0, 0x0, 0x1);
        gbc.writeMem(0xbf0, { 0xf });
        gbc.writeMem(0xc99, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1216);
        EXPECT(gbc.pc(), 0xc9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0126
        gbc.setState(0x4411, 0x7634, 0xb250, 0x5e1f, 0x3d38, 0xad92, 0x0, 0x1);
        gbc.writeMem(0x4411, { 0xcb, 0xbe });
        gbc.writeMem(0xad92, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7634);
        EXPECT(gbc.pc(), 0x4413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad92), 0x32);
        // CB BE 0127
        gbc.setState(0x7388, 0x3a9e, 0x9fc0, 0x2ee6, 0x1cc9, 0x82bf, 0x1, 0x0);
        gbc.writeMem(0x7388, { 0xcb, 0xbe });
        gbc.writeMem(0x82bf, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3a9e);
        EXPECT(gbc.pc(), 0x738a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82bf), 0x60);
        // CB BE 0129
        gbc.setState(0x8178, 0xb43, 0x37a0, 0x8daf, 0xb986, 0x99ec, 0x0, 0x1);
        gbc.writeMem(0x8178, { 0xcb, 0xbe });
        gbc.writeMem(0x99ec, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb43);
        EXPECT(gbc.pc(), 0x817a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8178), 0xcb);
        EXPECT(gbc.readMem(0x8179), 0xbe);
        EXPECT(gbc.readMem(0x99ec), 0x8);
        // CB BE 012B
        gbc.setState(0xdd78, 0xe6c8, 0xcab0, 0xd90b, 0xade8, 0x9f2d, 0x1, 0x0);
        gbc.writeMem(0x9f2d, { 0x31 });
        gbc.writeMem(0xdd78, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe6c8);
        EXPECT(gbc.pc(), 0xdd7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f2d), 0x31);
        EXPECT(gbc.readMem(0xdd78), 0xcb);
        EXPECT(gbc.readMem(0xdd79), 0xbe);
        // CB BE 012C
        gbc.setState(0x71b8, 0x257, 0x37a0, 0xf779, 0xd06b, 0xb088, 0x0, 0x0);
        gbc.writeMem(0x71b8, { 0xcb, 0xbe });
        gbc.writeMem(0xb088, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x257);
        EXPECT(gbc.pc(), 0x71ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb088), 0x41);
        // CB BE 012E
        gbc.setState(0x671b, 0x9330, 0x2cc0, 0x6250, 0x9710, 0xf5fb, 0x1, 0x1);
        gbc.writeMem(0x671b, { 0xcb, 0xbe });
        gbc.writeMem(0xf5fb, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9330);
        EXPECT(gbc.pc(), 0x671d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf5fb), 0x13);
        // CB BE 0130
        gbc.setState(0x9392, 0xdba6, 0x3e0, 0xc63, 0x4411, 0xba99, 0x0, 0x1);
        gbc.writeMem(0x9392, { 0xcb, 0xbe });
        gbc.writeMem(0xba99, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xdba6);
        EXPECT(gbc.pc(), 0x9394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9392), 0xcb);
        EXPECT(gbc.readMem(0x9393), 0xbe);
        EXPECT(gbc.readMem(0xba99), 0x37);
        // CB BE 0131
        gbc.setState(0xed9c, 0x6dd, 0xfaf0, 0x1125, 0xc04d, 0xbb80, 0x1, 0x1);
        gbc.writeMem(0xbb80, { 0xd1 });
        gbc.writeMem(0xed9c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6dd);
        EXPECT(gbc.pc(), 0xed9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb80), 0x51);
        EXPECT(gbc.readMem(0xed9c), 0xcb);
        EXPECT(gbc.readMem(0xed9d), 0xbe);
        // CB BE 0134
        gbc.setState(0x6187, 0x36ff, 0xf8f0, 0xdeae, 0xe033, 0x58f2, 0x1, 0x1);
        gbc.writeMem(0x58f2, { 0xd });
        gbc.writeMem(0x6187, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x36ff);
        EXPECT(gbc.pc(), 0x6189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0138
        gbc.setState(0x2990, 0x8b64, 0x16d0, 0xe62b, 0x95bd, 0x379b, 0x0, 0x1);
        gbc.writeMem(0x2990, { 0xcb, 0xbe });
        gbc.writeMem(0x379b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8b64);
        EXPECT(gbc.pc(), 0x2992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0139
        gbc.setState(0xc2a7, 0xb299, 0xded0, 0x16f2, 0x31bd, 0xfbbe, 0x0, 0x0);
        gbc.writeMem(0xc2a7, { 0xcb, 0xbe });
        gbc.writeMem(0xfbbe, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb299);
        EXPECT(gbc.pc(), 0xc2a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2a7), 0xcb);
        EXPECT(gbc.readMem(0xc2a8), 0xbe);
        EXPECT(gbc.readMem(0xfbbe), 0x48);
        // CB BE 013A
        gbc.setState(0x3ed6, 0x4f49, 0x41e0, 0xfb6d, 0x1b98, 0x8be0, 0x1, 0x1);
        gbc.writeMem(0x3ed6, { 0xcb, 0xbe });
        gbc.writeMem(0x8be0, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4f49);
        EXPECT(gbc.pc(), 0x3ed8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be0), 0x2c);
        // CB BE 013B
        gbc.setState(0xa131, 0xac3d, 0xcfb0, 0x57b, 0xce62, 0xb60c, 0x0, 0x1);
        gbc.writeMem(0xa131, { 0xcb, 0xbe });
        gbc.writeMem(0xb60c, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xac3d);
        EXPECT(gbc.pc(), 0xa133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa131), 0xcb);
        EXPECT(gbc.readMem(0xa132), 0xbe);
        EXPECT(gbc.readMem(0xb60c), 0x30);
        // CB BE 013D
        gbc.setState(0x8ea5, 0x2c58, 0x7e70, 0x67f2, 0x6dfe, 0xadbe, 0x1, 0x1);
        gbc.writeMem(0x8ea5, { 0xcb, 0xbe });
        gbc.writeMem(0xadbe, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2c58);
        EXPECT(gbc.pc(), 0x8ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea5), 0xcb);
        EXPECT(gbc.readMem(0x8ea6), 0xbe);
        EXPECT(gbc.readMem(0xadbe), 0x14);
        // CB BE 013E
        gbc.setState(0xc9d6, 0xde3f, 0x3d00, 0x5248, 0xa086, 0xcaeb, 0x1, 0x0);
        gbc.writeMem(0xc9d6, { 0xcb, 0xbe });
        gbc.writeMem(0xcaeb, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xde3f);
        EXPECT(gbc.pc(), 0xc9d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9d6), 0xcb);
        EXPECT(gbc.readMem(0xc9d7), 0xbe);
        EXPECT(gbc.readMem(0xcaeb), 0x46);
        // CB BE 013F
        gbc.setState(0x5844, 0xf37d, 0x6900, 0xde63, 0x8369, 0xe053, 0x1, 0x1);
        gbc.writeMem(0x5844, { 0xcb, 0xbe });
        gbc.writeMem(0xe053, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf37d);
        EXPECT(gbc.pc(), 0x5846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe053), 0x33);
        // CB BE 0141
        gbc.setState(0x6a2a, 0xab6f, 0x1960, 0x335a, 0x4b1, 0xd7dc, 0x1, 0x1);
        gbc.writeMem(0x6a2a, { 0xcb, 0xbe });
        gbc.writeMem(0xd7dc, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xab6f);
        EXPECT(gbc.pc(), 0x6a2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7dc), 0x5a);
        // CB BE 0142
        gbc.setState(0x8989, 0x3a95, 0x6490, 0x4993, 0xa8d2, 0xd4fe, 0x0, 0x1);
        gbc.writeMem(0x8989, { 0xcb, 0xbe });
        gbc.writeMem(0xd4fe, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3a95);
        EXPECT(gbc.pc(), 0x898b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8989), 0xcb);
        EXPECT(gbc.readMem(0x898a), 0xbe);
        EXPECT(gbc.readMem(0xd4fe), 0x46);
        // CB BE 0145
        gbc.setState(0x9e56, 0xd918, 0xdb90, 0x6100, 0x6d7c, 0x41bd, 0x1, 0x0);
        gbc.writeMem(0x41bd, { 0x2c });
        gbc.writeMem(0x9e56, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd918);
        EXPECT(gbc.pc(), 0x9e58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e56), 0xcb);
        EXPECT(gbc.readMem(0x9e57), 0xbe);
        // CB BE 0147
        gbc.setState(0xd7e6, 0x9820, 0x9c90, 0x1582, 0xca6c, 0xbb1f, 0x1, 0x1);
        gbc.writeMem(0xbb1f, { 0xe2 });
        gbc.writeMem(0xd7e6, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9820);
        EXPECT(gbc.pc(), 0xd7e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb1f), 0x62);
        EXPECT(gbc.readMem(0xd7e6), 0xcb);
        EXPECT(gbc.readMem(0xd7e7), 0xbe);
        // CB BE 0149
        gbc.setState(0x3f9a, 0x6fe7, 0xe9c0, 0x265d, 0x6e86, 0x8715, 0x0, 0x0);
        gbc.writeMem(0x3f9a, { 0xcb, 0xbe });
        gbc.writeMem(0x8715, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6fe7);
        EXPECT(gbc.pc(), 0x3f9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8715), 0x60);
        // CB BE 014A
        gbc.setState(0x7eb9, 0x253f, 0x8770, 0xd42a, 0x4f77, 0xc649, 0x1, 0x0);
        gbc.writeMem(0x7eb9, { 0xcb, 0xbe });
        gbc.writeMem(0xc649, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x253f);
        EXPECT(gbc.pc(), 0x7ebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc649), 0x46);
        // CB BE 014D
        gbc.setState(0x2014, 0xf528, 0xbc00, 0x9a7a, 0xf498, 0xcc6, 0x1, 0x1);
        gbc.writeMem(0xcc6, { 0x6c });
        gbc.writeMem(0x2014, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf528);
        EXPECT(gbc.pc(), 0x2016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 014E
        gbc.setState(0x3d20, 0xe5ce, 0x3ed0, 0xa53d, 0x7648, 0xbb4f, 0x1, 0x0);
        gbc.writeMem(0x3d20, { 0xcb, 0xbe });
        gbc.writeMem(0xbb4f, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe5ce);
        EXPECT(gbc.pc(), 0x3d22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb4f), 0x11);
        // CB BE 0150
        gbc.setState(0x2f9d, 0xd9ef, 0x5890, 0x2c62, 0x71a, 0xeb6a, 0x0, 0x1);
        gbc.writeMem(0x2f9d, { 0xcb, 0xbe });
        gbc.writeMem(0xeb6a, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd9ef);
        EXPECT(gbc.pc(), 0x2f9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb6a), 0x48);
        // CB BE 0152
        gbc.setState(0xbe37, 0x327d, 0x8ec0, 0xab17, 0x514c, 0xbf4, 0x1, 0x0);
        gbc.writeMem(0xbf4, { 0x10 });
        gbc.writeMem(0xbe37, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x327d);
        EXPECT(gbc.pc(), 0xbe39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe37), 0xcb);
        EXPECT(gbc.readMem(0xbe38), 0xbe);
        // CB BE 0153
        gbc.setState(0x44ec, 0x639b, 0xa9a0, 0xc366, 0x9c6f, 0x63cd, 0x1, 0x1);
        gbc.writeMem(0x44ec, { 0xcb, 0xbe });
        gbc.writeMem(0x63cd, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x639b);
        EXPECT(gbc.pc(), 0x44ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0154
        gbc.setState(0x3d9e, 0x8255, 0xd190, 0xed2d, 0x416c, 0x3f3f, 0x0, 0x0);
        gbc.writeMem(0x3d9e, { 0xcb, 0xbe });
        gbc.writeMem(0x3f3f, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8255);
        EXPECT(gbc.pc(), 0x3da0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0155
        gbc.setState(0x44ed, 0xf582, 0xd400, 0x2ec6, 0x5c82, 0xbd5c, 0x0, 0x0);
        gbc.writeMem(0x44ed, { 0xcb, 0xbe });
        gbc.writeMem(0xbd5c, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf582);
        EXPECT(gbc.pc(), 0x44ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd5c), 0x2);
        // CB BE 0157
        gbc.setState(0x6ba0, 0x6b7, 0x5980, 0x16ce, 0x22ee, 0x245d, 0x0, 0x1);
        gbc.writeMem(0x245d, { 0x14 });
        gbc.writeMem(0x6ba0, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6b7);
        EXPECT(gbc.pc(), 0x6ba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0159
        gbc.setState(0xd352, 0x6106, 0xce70, 0x1b2d, 0x5212, 0x1753, 0x1, 0x1);
        gbc.writeMem(0x1753, { 0x2d });
        gbc.writeMem(0xd352, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6106);
        EXPECT(gbc.pc(), 0xd354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd352), 0xcb);
        EXPECT(gbc.readMem(0xd353), 0xbe);
        // CB BE 015A
        gbc.setState(0xeb52, 0xc2ed, 0x3db0, 0xfc45, 0xd58a, 0xb327, 0x1, 0x1);
        gbc.writeMem(0xb327, { 0xe3 });
        gbc.writeMem(0xeb52, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xc2ed);
        EXPECT(gbc.pc(), 0xeb54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb327), 0x63);
        EXPECT(gbc.readMem(0xeb52), 0xcb);
        EXPECT(gbc.readMem(0xeb53), 0xbe);
        // CB BE 015C
        gbc.setState(0xd819, 0xd66, 0x68a0, 0x84c, 0x329c, 0xb1ac, 0x0, 0x1);
        gbc.writeMem(0xb1ac, { 0x88 });
        gbc.writeMem(0xd819, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd66);
        EXPECT(gbc.pc(), 0xd81b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ac), 0x8);
        EXPECT(gbc.readMem(0xd819), 0xcb);
        EXPECT(gbc.readMem(0xd81a), 0xbe);
        // CB BE 015E
        gbc.setState(0x1be0, 0x9eef, 0xc1e0, 0x9d63, 0x4ad4, 0x6fb5, 0x0, 0x0);
        gbc.writeMem(0x1be0, { 0xcb, 0xbe });
        gbc.writeMem(0x6fb5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9eef);
        EXPECT(gbc.pc(), 0x1be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 015F
        gbc.setState(0xec11, 0x1425, 0x910, 0x1909, 0xa3d3, 0xc628, 0x1, 0x1);
        gbc.writeMem(0xc628, { 0x3f });
        gbc.writeMem(0xec11, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1425);
        EXPECT(gbc.pc(), 0xec13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc628), 0x3f);
        EXPECT(gbc.readMem(0xec11), 0xcb);
        EXPECT(gbc.readMem(0xec12), 0xbe);
        // CB BE 0160
        gbc.setState(0x15b3, 0x1509, 0x4740, 0x9bb7, 0x1127, 0xf818, 0x0, 0x0);
        gbc.writeMem(0x15b3, { 0xcb, 0xbe });
        gbc.writeMem(0xf818, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1509);
        EXPECT(gbc.pc(), 0x15b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf818), 0x1e);
        // CB BE 0163
        gbc.setState(0x765f, 0xe31a, 0xab20, 0x53bd, 0xa3ba, 0xb498, 0x0, 0x0);
        gbc.writeMem(0x765f, { 0xcb, 0xbe });
        gbc.writeMem(0xb498, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe31a);
        EXPECT(gbc.pc(), 0x7661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb498), 0x76);
        // CB BE 0164
        gbc.setState(0x2c17, 0x5dd2, 0xd650, 0xed01, 0x1bf1, 0x9ea6, 0x1, 0x0);
        gbc.writeMem(0x2c17, { 0xcb, 0xbe });
        gbc.writeMem(0x9ea6, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5dd2);
        EXPECT(gbc.pc(), 0x2c19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea6), 0x6f);
        // CB BE 0165
        gbc.setState(0xab43, 0x86aa, 0xf5d0, 0x1ff, 0x307f, 0xa7a9, 0x0, 0x0);
        gbc.writeMem(0xa7a9, { 0x52 });
        gbc.writeMem(0xab43, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x86aa);
        EXPECT(gbc.pc(), 0xab45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a9), 0x52);
        EXPECT(gbc.readMem(0xab43), 0xcb);
        EXPECT(gbc.readMem(0xab44), 0xbe);
        // CB BE 0166
        gbc.setState(0x7319, 0x5671, 0xba60, 0x2b01, 0x2cad, 0x3f51, 0x1, 0x1);
        gbc.writeMem(0x3f51, { 0x2 });
        gbc.writeMem(0x7319, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5671);
        EXPECT(gbc.pc(), 0x731b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0167
        gbc.setState(0xed2b, 0x4043, 0x25c0, 0x52e3, 0x27b2, 0xddca, 0x1, 0x0);
        gbc.writeMem(0xddca, { 0x23 });
        gbc.writeMem(0xed2b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4043);
        EXPECT(gbc.pc(), 0xed2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddca), 0x23);
        EXPECT(gbc.readMem(0xed2b), 0xcb);
        EXPECT(gbc.readMem(0xed2c), 0xbe);
        // CB BE 0169
        gbc.setState(0xc5c2, 0xd851, 0xa410, 0xb373, 0x2f70, 0x87ac, 0x0, 0x1);
        gbc.writeMem(0x87ac, { 0xb });
        gbc.writeMem(0xc5c2, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd851);
        EXPECT(gbc.pc(), 0xc5c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ac), 0xb);
        EXPECT(gbc.readMem(0xc5c2), 0xcb);
        EXPECT(gbc.readMem(0xc5c3), 0xbe);
        // CB BE 016A
        gbc.setState(0x8d3, 0xfb1f, 0x4a60, 0x6e93, 0xd718, 0xc29b, 0x0, 0x1);
        gbc.writeMem(0x8d3, { 0xcb, 0xbe });
        gbc.writeMem(0xc29b, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xfb1f);
        EXPECT(gbc.pc(), 0x8d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc29b), 0x75);
        // CB BE 016B
        gbc.setState(0xd367, 0x8b23, 0x8710, 0xf1c2, 0x14ec, 0xf707, 0x1, 0x0);
        gbc.writeMem(0xd367, { 0xcb, 0xbe });
        gbc.writeMem(0xf707, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8b23);
        EXPECT(gbc.pc(), 0xd369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd367), 0xcb);
        EXPECT(gbc.readMem(0xd368), 0xbe);
        EXPECT(gbc.readMem(0xf707), 0x45);
        // CB BE 016C
        gbc.setState(0x3584, 0x601d, 0x3840, 0x8910, 0x803f, 0x8c30, 0x0, 0x0);
        gbc.writeMem(0x3584, { 0xcb, 0xbe });
        gbc.writeMem(0x8c30, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x601d);
        EXPECT(gbc.pc(), 0x3586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c30), 0x73);
        // CB BE 016D
        gbc.setState(0x6998, 0xb195, 0x3f50, 0x34cd, 0x78a3, 0x8127, 0x1, 0x1);
        gbc.writeMem(0x6998, { 0xcb, 0xbe });
        gbc.writeMem(0x8127, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb195);
        EXPECT(gbc.pc(), 0x699a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8127), 0x6d);
        // CB BE 016E
        gbc.setState(0x1d5b, 0x9b3d, 0xcc10, 0x10a8, 0x2fa1, 0xd5b6, 0x0, 0x1);
        gbc.writeMem(0x1d5b, { 0xcb, 0xbe });
        gbc.writeMem(0xd5b6, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9b3d);
        EXPECT(gbc.pc(), 0x1d5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b6), 0xf);
        // CB BE 016F
        gbc.setState(0xdd8c, 0x1a04, 0xac50, 0x4c2c, 0xf422, 0xea82, 0x1, 0x0);
        gbc.writeMem(0xdd8c, { 0xcb, 0xbe });
        gbc.writeMem(0xea82, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1a04);
        EXPECT(gbc.pc(), 0xdd8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd8c), 0xcb);
        EXPECT(gbc.readMem(0xdd8d), 0xbe);
        EXPECT(gbc.readMem(0xea82), 0x32);
        // CB BE 0171
        gbc.setState(0x3e48, 0xd4e1, 0x1700, 0xf97e, 0x20e, 0x84f9, 0x0, 0x0);
        gbc.writeMem(0x3e48, { 0xcb, 0xbe });
        gbc.writeMem(0x84f9, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd4e1);
        EXPECT(gbc.pc(), 0x3e4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84f9), 0x39);
        // CB BE 0172
        gbc.setState(0x81f1, 0x6578, 0xf890, 0x134e, 0x9cfe, 0xfa6b, 0x0, 0x0);
        gbc.writeMem(0x81f1, { 0xcb, 0xbe });
        gbc.writeMem(0xfa6b, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6578);
        EXPECT(gbc.pc(), 0x81f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81f1), 0xcb);
        EXPECT(gbc.readMem(0x81f2), 0xbe);
        EXPECT(gbc.readMem(0xfa6b), 0x2e);
        // CB BE 0174
        gbc.setState(0xcc7b, 0xf5ee, 0x5db0, 0xb9cd, 0x6d6a, 0xc227, 0x1, 0x1);
        gbc.writeMem(0xc227, { 0x5e });
        gbc.writeMem(0xcc7b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf5ee);
        EXPECT(gbc.pc(), 0xcc7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc227), 0x5e);
        EXPECT(gbc.readMem(0xcc7b), 0xcb);
        EXPECT(gbc.readMem(0xcc7c), 0xbe);
        // CB BE 0175
        gbc.setState(0x8956, 0x70e5, 0x3ef0, 0x1da2, 0xf9ed, 0x7cd9, 0x0, 0x0);
        gbc.writeMem(0x7cd9, { 0x6e });
        gbc.writeMem(0x8956, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x70e5);
        EXPECT(gbc.pc(), 0x8958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8956), 0xcb);
        EXPECT(gbc.readMem(0x8957), 0xbe);
        // CB BE 0176
        gbc.setState(0x7954, 0x8eda, 0x62c0, 0xb1c7, 0x5621, 0x8fd9, 0x1, 0x0);
        gbc.writeMem(0x7954, { 0xcb, 0xbe });
        gbc.writeMem(0x8fd9, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8eda);
        EXPECT(gbc.pc(), 0x7956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd9), 0xb);
        // CB BE 0177
        gbc.setState(0x50ed, 0x215e, 0x6b90, 0xf315, 0x68d6, 0x34d0, 0x1, 0x1);
        gbc.writeMem(0x34d0, { 0x33 });
        gbc.writeMem(0x50ed, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x215e);
        EXPECT(gbc.pc(), 0x50ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0178
        gbc.setState(0x59cc, 0xf47f, 0x6990, 0x98bd, 0xa0c, 0xb649, 0x0, 0x0);
        gbc.writeMem(0x59cc, { 0xcb, 0xbe });
        gbc.writeMem(0xb649, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf47f);
        EXPECT(gbc.pc(), 0x59ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb649), 0x4d);
        // CB BE 017C
        gbc.setState(0x71df, 0xaee9, 0x92b0, 0x133f, 0x62b3, 0xb892, 0x0, 0x0);
        gbc.writeMem(0x71df, { 0xcb, 0xbe });
        gbc.writeMem(0xb892, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xaee9);
        EXPECT(gbc.pc(), 0x71e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb892), 0x52);
        // CB BE 017D
        gbc.setState(0x1577, 0xc1bc, 0xf210, 0xf3f2, 0xd66d, 0xc7a3, 0x1, 0x0);
        gbc.writeMem(0x1577, { 0xcb, 0xbe });
        gbc.writeMem(0xc7a3, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc1bc);
        EXPECT(gbc.pc(), 0x1579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7a3), 0x66);
        // CB BE 0181
        gbc.setState(0x629b, 0x6500, 0xfc80, 0x1560, 0x6e60, 0xe7fe, 0x0, 0x0);
        gbc.writeMem(0x629b, { 0xcb, 0xbe });
        gbc.writeMem(0xe7fe, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6500);
        EXPECT(gbc.pc(), 0x629d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7fe), 0xd);
        // CB BE 0182
        gbc.setState(0x7ab5, 0xdfe3, 0x180, 0xd258, 0x1b2d, 0xc6e2, 0x0, 0x1);
        gbc.writeMem(0x7ab5, { 0xcb, 0xbe });
        gbc.writeMem(0xc6e2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xdfe3);
        EXPECT(gbc.pc(), 0x7ab7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e2), 0x55);
        // CB BE 0183
        gbc.setState(0x5980, 0xc372, 0x6aa0, 0x88c8, 0xbb49, 0x5c2b, 0x1, 0x1);
        gbc.writeMem(0x5980, { 0xcb, 0xbe });
        gbc.writeMem(0x5c2b, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc372);
        EXPECT(gbc.pc(), 0x5982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0184
        gbc.setState(0x87f7, 0xbb39, 0x9cd0, 0x3064, 0xe670, 0xc7d3, 0x0, 0x1);
        gbc.writeMem(0x87f7, { 0xcb, 0xbe });
        gbc.writeMem(0xc7d3, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xbb39);
        EXPECT(gbc.pc(), 0x87f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87f7), 0xcb);
        EXPECT(gbc.readMem(0x87f8), 0xbe);
        EXPECT(gbc.readMem(0xc7d3), 0xc);
        // CB BE 0185
        gbc.setState(0x3653, 0x429, 0xdc60, 0xa793, 0xf79, 0x92ac, 0x0, 0x0);
        gbc.writeMem(0x3653, { 0xcb, 0xbe });
        gbc.writeMem(0x92ac, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x429);
        EXPECT(gbc.pc(), 0x3655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ac), 0x43);
        // CB BE 0186
        gbc.setState(0x118b, 0x3a5a, 0x2170, 0x1547, 0xcef3, 0x6e6, 0x0, 0x0);
        gbc.writeMem(0x6e6, { 0x2 });
        gbc.writeMem(0x118b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3a5a);
        EXPECT(gbc.pc(), 0x118d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0187
        gbc.setState(0x1f66, 0x60a9, 0x6e50, 0xf3bb, 0xebd9, 0xae8c, 0x1, 0x1);
        gbc.writeMem(0x1f66, { 0xcb, 0xbe });
        gbc.writeMem(0xae8c, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x60a9);
        EXPECT(gbc.pc(), 0x1f68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae8c), 0x3f);
        // CB BE 0188
        gbc.setState(0xdf0c, 0x5bdd, 0xf450, 0x2e48, 0x2122, 0xd442, 0x0, 0x1);
        gbc.writeMem(0xd442, { 0xe2 });
        gbc.writeMem(0xdf0c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5bdd);
        EXPECT(gbc.pc(), 0xdf0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd442), 0x62);
        EXPECT(gbc.readMem(0xdf0c), 0xcb);
        EXPECT(gbc.readMem(0xdf0d), 0xbe);
        // CB BE 018B
        gbc.setState(0x395e, 0x811c, 0x1c40, 0x4e54, 0x5e40, 0x944c, 0x1, 0x1);
        gbc.writeMem(0x395e, { 0xcb, 0xbe });
        gbc.writeMem(0x944c, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x811c);
        EXPECT(gbc.pc(), 0x3960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x944c), 0x3d);
        // CB BE 018C
        gbc.setState(0xa8ca, 0x3445, 0x2150, 0x587d, 0xa7ea, 0x9145, 0x1, 0x1);
        gbc.writeMem(0x9145, { 0xfd });
        gbc.writeMem(0xa8ca, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3445);
        EXPECT(gbc.pc(), 0xa8cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9145), 0x7d);
        EXPECT(gbc.readMem(0xa8ca), 0xcb);
        EXPECT(gbc.readMem(0xa8cb), 0xbe);
        // CB BE 018D
        gbc.setState(0xe8d2, 0xdce9, 0x7a20, 0x8df8, 0xd626, 0xe113, 0x0, 0x1);
        gbc.writeMem(0xe113, { 0x98 });
        gbc.writeMem(0xe8d2, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdce9);
        EXPECT(gbc.pc(), 0xe8d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe113), 0x18);
        EXPECT(gbc.readMem(0xe8d2), 0xcb);
        EXPECT(gbc.readMem(0xe8d3), 0xbe);
        // CB BE 018E
        gbc.setState(0xdad3, 0x7db7, 0xfa00, 0xb755, 0x31eb, 0xdbb0, 0x0, 0x0);
        gbc.writeMem(0xdad3, { 0xcb, 0xbe });
        gbc.writeMem(0xdbb0, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7db7);
        EXPECT(gbc.pc(), 0xdad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad3), 0xcb);
        EXPECT(gbc.readMem(0xdad4), 0xbe);
        EXPECT(gbc.readMem(0xdbb0), 0x41);
        // CB BE 018F
        gbc.setState(0xdb5e, 0x6e3d, 0xe1d0, 0x576b, 0x4749, 0xc06d, 0x0, 0x1);
        gbc.writeMem(0xc06d, { 0x86 });
        gbc.writeMem(0xdb5e, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6e3d);
        EXPECT(gbc.pc(), 0xdb60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc06d), 0x6);
        EXPECT(gbc.readMem(0xdb5e), 0xcb);
        EXPECT(gbc.readMem(0xdb5f), 0xbe);
        // CB BE 0190
        gbc.setState(0x14ba, 0xab14, 0xd4e0, 0x8447, 0x4120, 0x9848, 0x0, 0x1);
        gbc.writeMem(0x14ba, { 0xcb, 0xbe });
        gbc.writeMem(0x9848, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xab14);
        EXPECT(gbc.pc(), 0x14bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9848), 0x50);
        // CB BE 0191
        gbc.setState(0xd2a8, 0x94aa, 0x97b0, 0x93bb, 0x3788, 0xbb73, 0x0, 0x1);
        gbc.writeMem(0xbb73, { 0xda });
        gbc.writeMem(0xd2a8, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x94aa);
        EXPECT(gbc.pc(), 0xd2aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb73), 0x5a);
        EXPECT(gbc.readMem(0xd2a8), 0xcb);
        EXPECT(gbc.readMem(0xd2a9), 0xbe);
        // CB BE 0193
        gbc.setState(0x2df1, 0x42f3, 0xda00, 0x7068, 0x58c2, 0x128c, 0x0, 0x0);
        gbc.writeMem(0x128c, { 0x3c });
        gbc.writeMem(0x2df1, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x42f3);
        EXPECT(gbc.pc(), 0x2df3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0194
        gbc.setState(0x3b22, 0x4fe3, 0x5c00, 0xbe98, 0x9a96, 0x7a19, 0x1, 0x0);
        gbc.writeMem(0x3b22, { 0xcb, 0xbe });
        gbc.writeMem(0x7a19, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4fe3);
        EXPECT(gbc.pc(), 0x3b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0195
        gbc.setState(0x6b5a, 0xb270, 0x9fb0, 0xa5a6, 0x650f, 0x83ed, 0x0, 0x1);
        gbc.writeMem(0x6b5a, { 0xcb, 0xbe });
        gbc.writeMem(0x83ed, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb270);
        EXPECT(gbc.pc(), 0x6b5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ed), 0x18);
        // CB BE 0196
        gbc.setState(0xb43e, 0xb25c, 0x7d10, 0x50ef, 0xb7a0, 0xe50f, 0x0, 0x1);
        gbc.writeMem(0xb43e, { 0xcb, 0xbe });
        gbc.writeMem(0xe50f, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb25c);
        EXPECT(gbc.pc(), 0xb440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb43e), 0xcb);
        EXPECT(gbc.readMem(0xb43f), 0xbe);
        EXPECT(gbc.readMem(0xe50f), 0x3e);
        // CB BE 0197
        gbc.setState(0xada5, 0xa13, 0x3be0, 0x83d6, 0xf305, 0xbe0a, 0x1, 0x0);
        gbc.writeMem(0xada5, { 0xcb, 0xbe });
        gbc.writeMem(0xbe0a, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa13);
        EXPECT(gbc.pc(), 0xada7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada5), 0xcb);
        EXPECT(gbc.readMem(0xada6), 0xbe);
        EXPECT(gbc.readMem(0xbe0a), 0x52);
        // CB BE 0198
        gbc.setState(0x715, 0x12fc, 0x69a0, 0xd28, 0x9954, 0x8d40, 0x1, 0x0);
        gbc.writeMem(0x715, { 0xcb, 0xbe });
        gbc.writeMem(0x8d40, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x12fc);
        EXPECT(gbc.pc(), 0x717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d40), 0x23);
        // CB BE 0199
        gbc.setState(0xbf90, 0xbd94, 0x8f70, 0xfdd3, 0xa768, 0x191d, 0x0, 0x1);
        gbc.writeMem(0x191d, { 0x4b });
        gbc.writeMem(0xbf90, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbd94);
        EXPECT(gbc.pc(), 0xbf92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf90), 0xcb);
        EXPECT(gbc.readMem(0xbf91), 0xbe);
        // CB BE 019A
        gbc.setState(0xcbf0, 0xdf05, 0xdb60, 0xe7d5, 0xe2af, 0x7e43, 0x1, 0x0);
        gbc.writeMem(0x7e43, { 0x10 });
        gbc.writeMem(0xcbf0, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xdf05);
        EXPECT(gbc.pc(), 0xcbf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf0), 0xcb);
        EXPECT(gbc.readMem(0xcbf1), 0xbe);
        // CB BE 019B
        gbc.setState(0x73aa, 0x8d5c, 0xf0b0, 0xb9eb, 0xa323, 0xa783, 0x1, 0x1);
        gbc.writeMem(0x73aa, { 0xcb, 0xbe });
        gbc.writeMem(0xa783, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8d5c);
        EXPECT(gbc.pc(), 0x73ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa783), 0x56);
        // CB BE 019C
        gbc.setState(0xb6ab, 0x12d9, 0xb6d0, 0xc19, 0xab7a, 0xbc32, 0x1, 0x1);
        gbc.writeMem(0xb6ab, { 0xcb, 0xbe });
        gbc.writeMem(0xbc32, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x12d9);
        EXPECT(gbc.pc(), 0xb6ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ab), 0xcb);
        EXPECT(gbc.readMem(0xb6ac), 0xbe);
        EXPECT(gbc.readMem(0xbc32), 0x6c);
        // CB BE 019D
        gbc.setState(0xc21c, 0xc906, 0xc7e0, 0x6529, 0xce27, 0xabe, 0x0, 0x1);
        gbc.writeMem(0xabe, { 0x15 });
        gbc.writeMem(0xc21c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc906);
        EXPECT(gbc.pc(), 0xc21e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc21c), 0xcb);
        EXPECT(gbc.readMem(0xc21d), 0xbe);
        // CB BE 019E
        gbc.setState(0x3830, 0x642, 0xbd00, 0x2cd3, 0xeb5, 0x8638, 0x1, 0x1);
        gbc.writeMem(0x3830, { 0xcb, 0xbe });
        gbc.writeMem(0x8638, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x642);
        EXPECT(gbc.pc(), 0x3832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8638), 0x5c);
        // CB BE 019F
        gbc.setState(0xbe83, 0x230f, 0x2ce0, 0x6f5d, 0x119, 0x7570, 0x1, 0x1);
        gbc.writeMem(0x7570, { 0x4c });
        gbc.writeMem(0xbe83, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x230f);
        EXPECT(gbc.pc(), 0xbe85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe83), 0xcb);
        EXPECT(gbc.readMem(0xbe84), 0xbe);
        // CB BE 01A0
        gbc.setState(0x32c1, 0xc401, 0xc8d0, 0x96c0, 0xc3b1, 0x1371, 0x1, 0x0);
        gbc.writeMem(0x1371, { 0x7f });
        gbc.writeMem(0x32c1, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc401);
        EXPECT(gbc.pc(), 0x32c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 01A2
        gbc.setState(0xbebe, 0x63d0, 0x41b0, 0x7701, 0xda44, 0x9e42, 0x0, 0x0);
        gbc.writeMem(0x9e42, { 0xb });
        gbc.writeMem(0xbebe, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x63d0);
        EXPECT(gbc.pc(), 0xbec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e42), 0xb);
        EXPECT(gbc.readMem(0xbebe), 0xcb);
        EXPECT(gbc.readMem(0xbebf), 0xbe);
        // CB BE 01A3
        gbc.setState(0xd1bc, 0x8cbc, 0x9220, 0xa5bf, 0xf770, 0x3be8, 0x0, 0x1);
        gbc.writeMem(0x3be8, { 0x2b });
        gbc.writeMem(0xd1bc, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8cbc);
        EXPECT(gbc.pc(), 0xd1be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1bc), 0xcb);
        EXPECT(gbc.readMem(0xd1bd), 0xbe);
        // CB BE 01A4
        gbc.setState(0xdf2b, 0x6157, 0xea0, 0x774, 0x38c2, 0x8f3e, 0x1, 0x0);
        gbc.writeMem(0x8f3e, { 0xe8 });
        gbc.writeMem(0xdf2b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6157);
        EXPECT(gbc.pc(), 0xdf2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f3e), 0x68);
        EXPECT(gbc.readMem(0xdf2b), 0xcb);
        EXPECT(gbc.readMem(0xdf2c), 0xbe);
        // CB BE 01A6
        gbc.setState(0x12ab, 0x8fb3, 0xd6a0, 0x625f, 0x503c, 0xe23a, 0x1, 0x1);
        gbc.writeMem(0x12ab, { 0xcb, 0xbe });
        gbc.writeMem(0xe23a, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8fb3);
        EXPECT(gbc.pc(), 0x12ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe23a), 0x3d);
        // CB BE 01A7
        gbc.setState(0x761c, 0xa42f, 0x13f0, 0x5303, 0x83ca, 0xf4b9, 0x0, 0x0);
        gbc.writeMem(0x761c, { 0xcb, 0xbe });
        gbc.writeMem(0xf4b9, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa42f);
        EXPECT(gbc.pc(), 0x761e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf4b9), 0x7d);
        // CB BE 01A8
        gbc.setState(0x3f1c, 0x9c4, 0xed20, 0x85c7, 0x7fb5, 0xcebf, 0x0, 0x1);
        gbc.writeMem(0x3f1c, { 0xcb, 0xbe });
        gbc.writeMem(0xcebf, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9c4);
        EXPECT(gbc.pc(), 0x3f1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcebf), 0x64);
        // CB BE 01A9
        gbc.setState(0x788d, 0xbbd3, 0xdf30, 0xd42a, 0x9ad5, 0xd4f4, 0x0, 0x1);
        gbc.writeMem(0x788d, { 0xcb, 0xbe });
        gbc.writeMem(0xd4f4, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbbd3);
        EXPECT(gbc.pc(), 0x788f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f4), 0x17);
        // CB BE 01AA
        gbc.setState(0x91f1, 0x7bb2, 0x2ea0, 0xdfcb, 0xe8a0, 0xada2, 0x0, 0x1);
        gbc.writeMem(0x91f1, { 0xcb, 0xbe });
        gbc.writeMem(0xada2, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7bb2);
        EXPECT(gbc.pc(), 0x91f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f1), 0xcb);
        EXPECT(gbc.readMem(0x91f2), 0xbe);
        EXPECT(gbc.readMem(0xada2), 0x20);
        // CB BE 01AB
        gbc.setState(0x2852, 0x8544, 0x6190, 0xbf1f, 0xa0a8, 0x2fdd, 0x1, 0x1);
        gbc.writeMem(0x2852, { 0xcb, 0xbe });
        gbc.writeMem(0x2fdd, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8544);
        EXPECT(gbc.pc(), 0x2854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 01AC
        gbc.setState(0xaa2, 0x79de, 0x4040, 0x16a4, 0xc6cf, 0x8934, 0x1, 0x0);
        gbc.writeMem(0xaa2, { 0xcb, 0xbe });
        gbc.writeMem(0x8934, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x79de);
        EXPECT(gbc.pc(), 0xaa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8934), 0x6);
        // CB BE 01AE
        gbc.setState(0x408f, 0x21fe, 0xa7e0, 0x1ffe, 0xd579, 0xaf8a, 0x1, 0x0);
        gbc.writeMem(0x408f, { 0xcb, 0xbe });
        gbc.writeMem(0xaf8a, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x21fe);
        EXPECT(gbc.pc(), 0x4091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf8a), 0x53);
        // CB BE 01AF
        gbc.setState(0xedeb, 0xa1e6, 0x79a0, 0xc0ac, 0xb31d, 0x3d71, 0x1, 0x1);
        gbc.writeMem(0x3d71, { 0x56 });
        gbc.writeMem(0xedeb, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa1e6);
        EXPECT(gbc.pc(), 0xeded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedeb), 0xcb);
        EXPECT(gbc.readMem(0xedec), 0xbe);
        // CB BE 01B0
        gbc.setState(0x3842, 0x45f6, 0x2160, 0x3366, 0x2e7d, 0x8fd6, 0x1, 0x0);
        gbc.writeMem(0x3842, { 0xcb, 0xbe });
        gbc.writeMem(0x8fd6, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x45f6);
        EXPECT(gbc.pc(), 0x3844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd6), 0x70);
        // CB BE 01B1
        gbc.setState(0x9bcc, 0xd88b, 0x87a0, 0x48de, 0x861c, 0xab03, 0x0, 0x1);
        gbc.writeMem(0x9bcc, { 0xcb, 0xbe });
        gbc.writeMem(0xab03, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd88b);
        EXPECT(gbc.pc(), 0x9bce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bcc), 0xcb);
        EXPECT(gbc.readMem(0x9bcd), 0xbe);
        EXPECT(gbc.readMem(0xab03), 0x74);
        // CB BE 01B2
        gbc.setState(0x3fcc, 0x15a5, 0x26e0, 0xc536, 0xd3e9, 0xc6e8, 0x0, 0x1);
        gbc.writeMem(0x3fcc, { 0xcb, 0xbe });
        gbc.writeMem(0xc6e8, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x15a5);
        EXPECT(gbc.pc(), 0x3fce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e8), 0x71);
        // CB BE 01B3
        gbc.setState(0x2694, 0xcb6f, 0x3590, 0x3b18, 0x88dc, 0x227a, 0x1, 0x0);
        gbc.writeMem(0x227a, { 0x5a });
        gbc.writeMem(0x2694, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcb6f);
        EXPECT(gbc.pc(), 0x2696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 01B5
        gbc.setState(0xd820, 0x43a8, 0xffe0, 0x3b55, 0x5a59, 0xff45, 0x1, 0x1);
        gbc.writeMem(0xd820, { 0xcb, 0xbe });
        gbc.writeMem(0xff45, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x43a8);
        EXPECT(gbc.pc(), 0xd822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd820), 0xcb);
        EXPECT(gbc.readMem(0xd821), 0xbe);
        EXPECT(gbc.readMem(0xff45), 0x54);
        // CB BE 01B6
        gbc.setState(0x3cf, 0xe9e2, 0xa350, 0x73b0, 0x5861, 0x415f, 0x1, 0x1);
        gbc.writeMem(0x3cf, { 0xcb, 0xbe });
        gbc.writeMem(0x415f, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe9e2);
        EXPECT(gbc.pc(), 0x3d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 01B7
        gbc.setState(0x104a, 0xe505, 0x3350, 0x5c9c, 0x2ba8, 0xaf8d, 0x0, 0x0);
        gbc.writeMem(0x104a, { 0xcb, 0xbe });
        gbc.writeMem(0xaf8d, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe505);
        EXPECT(gbc.pc(), 0x104c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf8d), 0xb);
        // CB BE 01B8
        gbc.setState(0xd4f, 0x6cca, 0xb880, 0x2c68, 0x8e99, 0x112, 0x1, 0x1);
        gbc.writeMem(0x112, { 0x17 });
        gbc.writeMem(0xd4f, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6cca);
        EXPECT(gbc.pc(), 0xd51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 01B9
        gbc.setState(0x628c, 0x8815, 0x2350, 0x50f6, 0xc713, 0xc6d6, 0x1, 0x1);
        gbc.writeMem(0x628c, { 0xcb, 0xbe });
        gbc.writeMem(0xc6d6, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8815);
        EXPECT(gbc.pc(), 0x628e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d6), 0x62);
        // CB BE 01BA
        gbc.setState(0x4047, 0xbb50, 0x3930, 0x5b52, 0x518e, 0xa79d, 0x0, 0x0);
        gbc.writeMem(0x4047, { 0xcb, 0xbe });
        gbc.writeMem(0xa79d, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xbb50);
        EXPECT(gbc.pc(), 0x4049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa79d), 0x6c);
        // CB BE 01BB
        gbc.setState(0xe6c3, 0xbb17, 0x2a0, 0x2721, 0x1bf6, 0x68e9, 0x1, 0x0);
        gbc.writeMem(0x68e9, { 0xb });
        gbc.writeMem(0xe6c3, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbb17);
        EXPECT(gbc.pc(), 0xe6c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6c3), 0xcb);
        EXPECT(gbc.readMem(0xe6c4), 0xbe);
        // CB BE 01BD
        gbc.setState(0x667f, 0x5211, 0xabd0, 0xb548, 0x57f6, 0xcbdb, 0x0, 0x0);
        gbc.writeMem(0x667f, { 0xcb, 0xbe });
        gbc.writeMem(0xcbdb, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5211);
        EXPECT(gbc.pc(), 0x6681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbdb), 0x1d);
        // CB BE 01BE
        gbc.setState(0x32cb, 0xddf7, 0x2b50, 0x6c9, 0xaaa, 0x8801, 0x1, 0x1);
        gbc.writeMem(0x32cb, { 0xcb, 0xbe });
        gbc.writeMem(0x8801, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xddf7);
        EXPECT(gbc.pc(), 0x32cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8801), 0x3e);
        // CB BE 01BF
        gbc.setState(0xdddc, 0x44b1, 0x42b0, 0xab21, 0xdb0d, 0xd4de, 0x1, 0x1);
        gbc.writeMem(0xd4de, { 0xd1 });
        gbc.writeMem(0xdddc, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x44b1);
        EXPECT(gbc.pc(), 0xddde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4de), 0x51);
        EXPECT(gbc.readMem(0xdddc), 0xcb);
        EXPECT(gbc.readMem(0xdddd), 0xbe);
        // CB BE 01C1
        gbc.setState(0xd2a7, 0x2c52, 0xcca0, 0x735c, 0x4c6b, 0x9233, 0x0, 0x1);
        gbc.writeMem(0x9233, { 0x96 });
        gbc.writeMem(0xd2a7, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2c52);
        EXPECT(gbc.pc(), 0xd2a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9233), 0x16);
        EXPECT(gbc.readMem(0xd2a7), 0xcb);
        EXPECT(gbc.readMem(0xd2a8), 0xbe);
        // CB BE 01C2
        gbc.setState(0xeeae, 0xb056, 0x30c0, 0x328a, 0xb4b, 0x30e0, 0x1, 0x0);
        gbc.writeMem(0x30e0, { 0x70 });
        gbc.writeMem(0xeeae, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb056);
        EXPECT(gbc.pc(), 0xeeb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeae), 0xcb);
        EXPECT(gbc.readMem(0xeeaf), 0xbe);
        // CB BE 01C5
        gbc.setState(0xa378, 0x1508, 0x1320, 0xd508, 0x48be, 0x1a0b, 0x1, 0x1);
        gbc.writeMem(0x1a0b, { 0xb });
        gbc.writeMem(0xa378, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1508);
        EXPECT(gbc.pc(), 0xa37a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa378), 0xcb);
        EXPECT(gbc.readMem(0xa379), 0xbe);
        // CB BE 01C7
        gbc.setState(0x6734, 0xf91, 0xa7b0, 0xc8c, 0x4a3, 0xb5be, 0x1, 0x1);
        gbc.writeMem(0x6734, { 0xcb, 0xbe });
        gbc.writeMem(0xb5be, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf91);
        EXPECT(gbc.pc(), 0x6736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5be), 0xf);
        // CB BE 01C9
        gbc.setState(0x95a8, 0x1c9f, 0xd3f0, 0x870d, 0x1932, 0x505a, 0x0, 0x0);
        gbc.writeMem(0x505a, { 0x15 });
        gbc.writeMem(0x95a8, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1c9f);
        EXPECT(gbc.pc(), 0x95aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95a8), 0xcb);
        EXPECT(gbc.readMem(0x95a9), 0xbe);
        // CB BE 01CA
        gbc.setState(0x2699, 0x18a1, 0x4520, 0xe6c4, 0xedb0, 0xe8dc, 0x1, 0x0);
        gbc.writeMem(0x2699, { 0xcb, 0xbe });
        gbc.writeMem(0xe8dc, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x18a1);
        EXPECT(gbc.pc(), 0x269b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8dc), 0x71);
        // CB BE 01CB
        gbc.setState(0x26eb, 0x6207, 0x3b10, 0xded9, 0xc83d, 0xfb31, 0x0, 0x0);
        gbc.writeMem(0x26eb, { 0xcb, 0xbe });
        gbc.writeMem(0xfb31, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6207);
        EXPECT(gbc.pc(), 0x26ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb31), 0x6b);
        // CB BE 01CC
        gbc.setState(0x3c2b, 0x3d52, 0xdd30, 0xde6c, 0xd421, 0x9599, 0x0, 0x0);
        gbc.writeMem(0x3c2b, { 0xcb, 0xbe });
        gbc.writeMem(0x9599, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3d52);
        EXPECT(gbc.pc(), 0x3c2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9599), 0x1d);
        // CB BE 01CD
        gbc.setState(0x3036, 0xb986, 0x4750, 0xdda1, 0x3a54, 0xaabb, 0x1, 0x0);
        gbc.writeMem(0x3036, { 0xcb, 0xbe });
        gbc.writeMem(0xaabb, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb986);
        EXPECT(gbc.pc(), 0x3038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaabb), 0x57);
        // CB BE 01CE
        gbc.setState(0x4e84, 0x56dc, 0x2d90, 0x53b1, 0x33a9, 0x1824, 0x0, 0x1);
        gbc.writeMem(0x1824, { 0x0 });
        gbc.writeMem(0x4e84, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x56dc);
        EXPECT(gbc.pc(), 0x4e86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 01CF
        gbc.setState(0xe3ae, 0xcd7, 0x26e0, 0x8e27, 0x3601, 0xb562, 0x1, 0x1);
        gbc.writeMem(0xb562, { 0xfa });
        gbc.writeMem(0xe3ae, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcd7);
        EXPECT(gbc.pc(), 0xe3b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb562), 0x7a);
        EXPECT(gbc.readMem(0xe3ae), 0xcb);
        EXPECT(gbc.readMem(0xe3af), 0xbe);
        // CB BE 01D0
        gbc.setState(0x5209, 0xcc80, 0xc4a0, 0x6f1d, 0x1a80, 0x8866, 0x0, 0x1);
        gbc.writeMem(0x5209, { 0xcb, 0xbe });
        gbc.writeMem(0x8866, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcc80);
        EXPECT(gbc.pc(), 0x520b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8866), 0x1d);
        // CB BE 01D1
        gbc.setState(0x7d3b, 0x23da, 0x6580, 0x7809, 0x2f4e, 0x2e30, 0x1, 0x0);
        gbc.writeMem(0x2e30, { 0x4a });
        gbc.writeMem(0x7d3b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x23da);
        EXPECT(gbc.pc(), 0x7d3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 01D3
        gbc.setState(0xcb3, 0x4295, 0x580, 0x480a, 0x58c4, 0xc037, 0x1, 0x0);
        gbc.writeMem(0xcb3, { 0xcb, 0xbe });
        gbc.writeMem(0xc037, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4295);
        EXPECT(gbc.pc(), 0xcb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc037), 0xa);
        // CB BE 01D4
        gbc.setState(0x932, 0x429d, 0x3df0, 0x5c3c, 0xf5e9, 0xf5db, 0x0, 0x0);
        gbc.writeMem(0x932, { 0xcb, 0xbe });
        gbc.writeMem(0xf5db, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x429d);
        EXPECT(gbc.pc(), 0x934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf5db), 0x1f);
        // CB BE 01D5
        gbc.setState(0x8f08, 0x4101, 0x5e00, 0xf344, 0xa6cb, 0xf7ac, 0x0, 0x0);
        gbc.writeMem(0x8f08, { 0xcb, 0xbe });
        gbc.writeMem(0xf7ac, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4101);
        EXPECT(gbc.pc(), 0x8f0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f08), 0xcb);
        EXPECT(gbc.readMem(0x8f09), 0xbe);
        EXPECT(gbc.readMem(0xf7ac), 0x73);
        // CB BE 01D6
        gbc.setState(0x12be, 0x586e, 0xf1d0, 0x6e53, 0x34ce, 0x2d80, 0x1, 0x0);
        gbc.writeMem(0x12be, { 0xcb, 0xbe });
        gbc.writeMem(0x2d80, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x586e);
        EXPECT(gbc.pc(), 0x12c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 01D7
        gbc.setState(0xa2cb, 0xd420, 0xf420, 0xf134, 0xf9e4, 0x9870, 0x0, 0x1);
        gbc.writeMem(0x9870, { 0x1c });
        gbc.writeMem(0xa2cb, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd420);
        EXPECT(gbc.pc(), 0xa2cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9870), 0x1c);
        EXPECT(gbc.readMem(0xa2cb), 0xcb);
        EXPECT(gbc.readMem(0xa2cc), 0xbe);
        // CB BE 01D8
        gbc.setState(0xcd14, 0x3bb2, 0x2550, 0x11e3, 0xaac1, 0x1d00, 0x0, 0x1);
        gbc.writeMem(0x1d00, { 0x76 });
        gbc.writeMem(0xcd14, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3bb2);
        EXPECT(gbc.pc(), 0xcd16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd14), 0xcb);
        EXPECT(gbc.readMem(0xcd15), 0xbe);
        // CB BE 01D9
        gbc.setState(0xb56c, 0x8a88, 0x3f40, 0x9b78, 0x82f, 0x659, 0x1, 0x1);
        gbc.writeMem(0x659, { 0x18 });
        gbc.writeMem(0xb56c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8a88);
        EXPECT(gbc.pc(), 0xb56e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb56c), 0xcb);
        EXPECT(gbc.readMem(0xb56d), 0xbe);
        // CB BE 01DA
        gbc.setState(0x1e0c, 0x3f8b, 0x9bc0, 0xab95, 0xc74e, 0x62f3, 0x0, 0x1);
        gbc.writeMem(0x1e0c, { 0xcb, 0xbe });
        gbc.writeMem(0x62f3, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3f8b);
        EXPECT(gbc.pc(), 0x1e0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 01DB
        gbc.setState(0x9819, 0x2f7d, 0xfcf0, 0xcaea, 0x8b33, 0x5a19, 0x0, 0x0);
        gbc.writeMem(0x5a19, { 0x61 });
        gbc.writeMem(0x9819, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2f7d);
        EXPECT(gbc.pc(), 0x981b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9819), 0xcb);
        EXPECT(gbc.readMem(0x981a), 0xbe);
        // CB BE 01DC
        gbc.setState(0x6ba2, 0x5b09, 0xa6b0, 0xebad, 0x8321, 0x8902, 0x0, 0x1);
        gbc.writeMem(0x6ba2, { 0xcb, 0xbe });
        gbc.writeMem(0x8902, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5b09);
        EXPECT(gbc.pc(), 0x6ba4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8902), 0x7b);
        // CB BE 01DE
        gbc.setState(0xc93f, 0x5f9c, 0x25e0, 0x7192, 0x1039, 0x8c81, 0x1, 0x0);
        gbc.writeMem(0x8c81, { 0x85 });
        gbc.writeMem(0xc93f, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5f9c);
        EXPECT(gbc.pc(), 0xc941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c81), 0x5);
        EXPECT(gbc.readMem(0xc93f), 0xcb);
        EXPECT(gbc.readMem(0xc940), 0xbe);
        // CB BE 01E0
        gbc.setState(0xb29d, 0xd283, 0xe460, 0xe71e, 0xbe4, 0xa94c, 0x0, 0x0);
        gbc.writeMem(0xa94c, { 0x20 });
        gbc.writeMem(0xb29d, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd283);
        EXPECT(gbc.pc(), 0xb29f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa94c), 0x20);
        EXPECT(gbc.readMem(0xb29d), 0xcb);
        EXPECT(gbc.readMem(0xb29e), 0xbe);
        // CB BE 01E1
        gbc.setState(0x51d1, 0x6bf7, 0xe4f0, 0x1340, 0x434b, 0x628d, 0x0, 0x1);
        gbc.writeMem(0x51d1, { 0xcb, 0xbe });
        gbc.writeMem(0x628d, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6bf7);
        EXPECT(gbc.pc(), 0x51d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 01E3
        gbc.setState(0x6a68, 0xb466, 0xf2b0, 0xd3d8, 0x3a7, 0xf487, 0x0, 0x1);
        gbc.writeMem(0x6a68, { 0xcb, 0xbe });
        gbc.writeMem(0xf487, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb466);
        EXPECT(gbc.pc(), 0x6a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf487), 0x6e);
        // CB BE 01E4
        gbc.setState(0x3be7, 0xe58e, 0xc140, 0x8f00, 0x9618, 0xe9ca, 0x1, 0x1);
        gbc.writeMem(0x3be7, { 0xcb, 0xbe });
        gbc.writeMem(0xe9ca, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe58e);
        EXPECT(gbc.pc(), 0x3be9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ca), 0x26);
        // CB BE 01E5
        gbc.setState(0x9da3, 0x7752, 0x1780, 0x99f5, 0xdcbb, 0xf152, 0x1, 0x0);
        gbc.writeMem(0x9da3, { 0xcb, 0xbe });
        gbc.writeMem(0xf152, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7752);
        EXPECT(gbc.pc(), 0x9da5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da3), 0xcb);
        EXPECT(gbc.readMem(0x9da4), 0xbe);
        EXPECT(gbc.readMem(0xf152), 0x45);
        // CB BE 01E6
        gbc.setState(0x633d, 0x3153, 0x1330, 0x4b93, 0xc7f5, 0x494d, 0x0, 0x0);
        gbc.writeMem(0x494d, { 0xd });
        gbc.writeMem(0x633d, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3153);
        EXPECT(gbc.pc(), 0x633f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 01E7
        gbc.setState(0x5258, 0xb40b, 0x3620, 0x2507, 0x43ce, 0x9a0, 0x0, 0x1);
        gbc.writeMem(0x9a0, { 0x7 });
        gbc.writeMem(0x5258, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb40b);
        EXPECT(gbc.pc(), 0x525a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 01E9
        gbc.setState(0x70a6, 0x794a, 0x31c0, 0xdf75, 0x9ed9, 0xbac1, 0x1, 0x0);
        gbc.writeMem(0x70a6, { 0xcb, 0xbe });
        gbc.writeMem(0xbac1, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x794a);
        EXPECT(gbc.pc(), 0x70a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac1), 0x7c);
        // CB BE 01EA
        gbc.setState(0xb23, 0x1888, 0x2370, 0x66e5, 0x47f4, 0x9cae, 0x1, 0x1);
        gbc.writeMem(0xb23, { 0xcb, 0xbe });
        gbc.writeMem(0x9cae, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1888);
        EXPECT(gbc.pc(), 0xb25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cae), 0x46);
        // CB BE 01EB
        gbc.setState(0x7939, 0xcac7, 0x6750, 0x9fe3, 0x1e1e, 0x14b6, 0x0, 0x0);
        gbc.writeMem(0x14b6, { 0x5 });
        gbc.writeMem(0x7939, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcac7);
        EXPECT(gbc.pc(), 0x793b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 01EC
        gbc.setState(0xd7b3, 0x3ba9, 0x3f30, 0x3185, 0xf78a, 0xd62f, 0x1, 0x0);
        gbc.writeMem(0xd62f, { 0x67 });
        gbc.writeMem(0xd7b3, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3ba9);
        EXPECT(gbc.pc(), 0xd7b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd62f), 0x67);
        EXPECT(gbc.readMem(0xd7b3), 0xcb);
        EXPECT(gbc.readMem(0xd7b4), 0xbe);
        // CB BE 01EE
        gbc.setState(0x17df, 0x5d46, 0xa760, 0xb14d, 0x7d62, 0x529d, 0x1, 0x1);
        gbc.writeMem(0x17df, { 0xcb, 0xbe });
        gbc.writeMem(0x529d, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5d46);
        EXPECT(gbc.pc(), 0x17e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 01EF
        gbc.setState(0x46f, 0x1b1f, 0x5ec0, 0xcedf, 0x12d7, 0x963e, 0x1, 0x0);
        gbc.writeMem(0x46f, { 0xcb, 0xbe });
        gbc.writeMem(0x963e, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1b1f);
        EXPECT(gbc.pc(), 0x471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x963e), 0xe);
        // CB BE 01F0
        gbc.setState(0xbe55, 0x5002, 0x3d70, 0x20b0, 0xb1a5, 0x228c, 0x0, 0x0);
        gbc.writeMem(0x228c, { 0x44 });
        gbc.writeMem(0xbe55, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5002);
        EXPECT(gbc.pc(), 0xbe57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe55), 0xcb);
        EXPECT(gbc.readMem(0xbe56), 0xbe);
        // CB BE 01F1
        gbc.setState(0x9f, 0xf8, 0x7980, 0xe58b, 0x7e9d, 0x27ad, 0x0, 0x0);
        gbc.writeMem(0x9f, { 0xcb, 0xbe });
        gbc.writeMem(0x27ad, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf8);
        EXPECT(gbc.pc(), 0xa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 01F5
        gbc.setState(0x59ee, 0x4d91, 0xcc70, 0x51d6, 0xda14, 0x3c9d, 0x0, 0x1);
        gbc.writeMem(0x3c9d, { 0x26 });
        gbc.writeMem(0x59ee, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4d91);
        EXPECT(gbc.pc(), 0x59f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 01F6
        gbc.setState(0x5381, 0x9aec, 0xbd90, 0x94e3, 0xc020, 0x894, 0x0, 0x0);
        gbc.writeMem(0x894, { 0x1f });
        gbc.writeMem(0x5381, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9aec);
        EXPECT(gbc.pc(), 0x5383);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 01F7
        gbc.setState(0x7bf3, 0x13fb, 0x6000, 0x4489, 0x5f5a, 0x45bc, 0x0, 0x1);
        gbc.writeMem(0x45bc, { 0xb });
        gbc.writeMem(0x7bf3, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x13fb);
        EXPECT(gbc.pc(), 0x7bf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 01F9
        gbc.setState(0x1b97, 0xb7d, 0x2ac0, 0x330c, 0x7605, 0x84df, 0x1, 0x1);
        gbc.writeMem(0x1b97, { 0xcb, 0xbe });
        gbc.writeMem(0x84df, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb7d);
        EXPECT(gbc.pc(), 0x1b99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84df), 0x47);
        // CB BE 01FD
        gbc.setState(0x4c04, 0x61d8, 0x27d0, 0xc923, 0xf6a3, 0x1351, 0x1, 0x1);
        gbc.writeMem(0x1351, { 0x57 });
        gbc.writeMem(0x4c04, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x61d8);
        EXPECT(gbc.pc(), 0x4c06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 01FE
        gbc.setState(0xbaf, 0x3642, 0x3e0, 0x32cc, 0x20c9, 0xb42c, 0x0, 0x0);
        gbc.writeMem(0xbaf, { 0xcb, 0xbe });
        gbc.writeMem(0xb42c, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3642);
        EXPECT(gbc.pc(), 0xbb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb42c), 0x12);
        // CB BE 01FF
        gbc.setState(0x1caa, 0x30c2, 0xde10, 0xdced, 0x3872, 0x20a2, 0x0, 0x0);
        gbc.writeMem(0x1caa, { 0xcb, 0xbe });
        gbc.writeMem(0x20a2, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x30c2);
        EXPECT(gbc.pc(), 0x1cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0200
        gbc.setState(0x7e18, 0xba29, 0x4f40, 0xa649, 0x1eaf, 0x82dd, 0x0, 0x1);
        gbc.writeMem(0x7e18, { 0xcb, 0xbe });
        gbc.writeMem(0x82dd, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xba29);
        EXPECT(gbc.pc(), 0x7e1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82dd), 0x69);
        // CB BE 0202
        gbc.setState(0x28b9, 0xa888, 0xb950, 0xdc4a, 0xbd1c, 0xea36, 0x1, 0x0);
        gbc.writeMem(0x28b9, { 0xcb, 0xbe });
        gbc.writeMem(0xea36, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa888);
        EXPECT(gbc.pc(), 0x28bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea36), 0x2d);
        // CB BE 0205
        gbc.setState(0xd0d2, 0x33ef, 0x1e00, 0x108f, 0x4814, 0x1023, 0x0, 0x0);
        gbc.writeMem(0x1023, { 0x41 });
        gbc.writeMem(0xd0d2, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x33ef);
        EXPECT(gbc.pc(), 0xd0d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d2), 0xcb);
        EXPECT(gbc.readMem(0xd0d3), 0xbe);
        // CB BE 0206
        gbc.setState(0xc773, 0xf260, 0x4ea0, 0x597d, 0xa450, 0xf68f, 0x1, 0x0);
        gbc.writeMem(0xc773, { 0xcb, 0xbe });
        gbc.writeMem(0xf68f, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf260);
        EXPECT(gbc.pc(), 0xc775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc773), 0xcb);
        EXPECT(gbc.readMem(0xc774), 0xbe);
        EXPECT(gbc.readMem(0xf68f), 0x8);
        // CB BE 0207
        gbc.setState(0xfbd, 0x4952, 0xcce0, 0x6ab7, 0x4d9e, 0xf50c, 0x0, 0x0);
        gbc.writeMem(0xfbd, { 0xcb, 0xbe });
        gbc.writeMem(0xf50c, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4952);
        EXPECT(gbc.pc(), 0xfbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf50c), 0x57);
        // CB BE 0209
        gbc.setState(0x167c, 0xc631, 0x30c0, 0x1372, 0x5568, 0xbe77, 0x0, 0x0);
        gbc.writeMem(0x167c, { 0xcb, 0xbe });
        gbc.writeMem(0xbe77, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc631);
        EXPECT(gbc.pc(), 0x167e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe77), 0x1);
        // CB BE 020C
        gbc.setState(0x1a01, 0x664, 0x6130, 0x3fa2, 0xf861, 0xfb6c, 0x1, 0x1);
        gbc.writeMem(0x1a01, { 0xcb, 0xbe });
        gbc.writeMem(0xfb6c, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x664);
        EXPECT(gbc.pc(), 0x1a03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb6c), 0x11);
        // CB BE 020F
        gbc.setState(0x709a, 0x82ec, 0x9820, 0x3774, 0x6172, 0x4b8d, 0x0, 0x0);
        gbc.writeMem(0x4b8d, { 0x28 });
        gbc.writeMem(0x709a, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x82ec);
        EXPECT(gbc.pc(), 0x709c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0213
        gbc.setState(0x2b6c, 0xc9f3, 0xb880, 0xd555, 0x4440, 0xcc92, 0x1, 0x0);
        gbc.writeMem(0x2b6c, { 0xcb, 0xbe });
        gbc.writeMem(0xcc92, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc9f3);
        EXPECT(gbc.pc(), 0x2b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc92), 0x4a);
        // CB BE 0215
        gbc.setState(0xe195, 0xf28d, 0x7290, 0xda70, 0x5a46, 0x18bb, 0x1, 0x1);
        gbc.writeMem(0x18bb, { 0x3c });
        gbc.writeMem(0xe195, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf28d);
        EXPECT(gbc.pc(), 0xe197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe195), 0xcb);
        EXPECT(gbc.readMem(0xe196), 0xbe);
        // CB BE 0216
        gbc.setState(0xb852, 0xb492, 0x69f0, 0x4faa, 0x64d7, 0x909d, 0x0, 0x0);
        gbc.writeMem(0x909d, { 0xd7 });
        gbc.writeMem(0xb852, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb492);
        EXPECT(gbc.pc(), 0xb854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x909d), 0x57);
        EXPECT(gbc.readMem(0xb852), 0xcb);
        EXPECT(gbc.readMem(0xb853), 0xbe);
        // CB BE 0217
        gbc.setState(0x8392, 0xae32, 0x4bf0, 0xf0e0, 0x6948, 0x2e92, 0x1, 0x0);
        gbc.writeMem(0x2e92, { 0x32 });
        gbc.writeMem(0x8392, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xae32);
        EXPECT(gbc.pc(), 0x8394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8392), 0xcb);
        EXPECT(gbc.readMem(0x8393), 0xbe);
        // CB BE 0218
        gbc.setState(0xc133, 0xb76a, 0xcd10, 0x4d61, 0xb9ce, 0x587d, 0x0, 0x1);
        gbc.writeMem(0x587d, { 0x45 });
        gbc.writeMem(0xc133, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb76a);
        EXPECT(gbc.pc(), 0xc135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc133), 0xcb);
        EXPECT(gbc.readMem(0xc134), 0xbe);
        // CB BE 021A
        gbc.setState(0xbddf, 0xc28a, 0x7dd0, 0x9670, 0xbcc5, 0xca21, 0x0, 0x1);
        gbc.writeMem(0xbddf, { 0xcb, 0xbe });
        gbc.writeMem(0xca21, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc28a);
        EXPECT(gbc.pc(), 0xbde1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbddf), 0xcb);
        EXPECT(gbc.readMem(0xbde0), 0xbe);
        EXPECT(gbc.readMem(0xca21), 0x4a);
        // CB BE 021B
        gbc.setState(0x3c08, 0xc61, 0xa020, 0xa774, 0xd1e2, 0x738f, 0x1, 0x0);
        gbc.writeMem(0x3c08, { 0xcb, 0xbe });
        gbc.writeMem(0x738f, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc61);
        EXPECT(gbc.pc(), 0x3c0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 021C
        gbc.setState(0x589e, 0x3cf5, 0xc370, 0xd3d4, 0x8dba, 0xf6ba, 0x1, 0x0);
        gbc.writeMem(0x589e, { 0xcb, 0xbe });
        gbc.writeMem(0xf6ba, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3cf5);
        EXPECT(gbc.pc(), 0x58a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf6ba), 0x2f);
        // CB BE 021D
        gbc.setState(0x53be, 0x50a9, 0xc8c0, 0xea7c, 0x898c, 0x5b7f, 0x1, 0x0);
        gbc.writeMem(0x53be, { 0xcb, 0xbe });
        gbc.writeMem(0x5b7f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x50a9);
        EXPECT(gbc.pc(), 0x53c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0220
        gbc.setState(0x5a59, 0xed3e, 0xf4a0, 0x62f4, 0x65b3, 0x4a49, 0x1, 0x1);
        gbc.writeMem(0x4a49, { 0x3d });
        gbc.writeMem(0x5a59, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xed3e);
        EXPECT(gbc.pc(), 0x5a5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0221
        gbc.setState(0xe353, 0x3377, 0xb670, 0x549, 0x7f2f, 0x6f8e, 0x0, 0x0);
        gbc.writeMem(0x6f8e, { 0x13 });
        gbc.writeMem(0xe353, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3377);
        EXPECT(gbc.pc(), 0xe355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe353), 0xcb);
        EXPECT(gbc.readMem(0xe354), 0xbe);
        // CB BE 0222
        gbc.setState(0xc233, 0x6150, 0x5c90, 0xb3ff, 0xa756, 0x415a, 0x1, 0x0);
        gbc.writeMem(0x415a, { 0x7a });
        gbc.writeMem(0xc233, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6150);
        EXPECT(gbc.pc(), 0xc235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc233), 0xcb);
        EXPECT(gbc.readMem(0xc234), 0xbe);
        // CB BE 0223
        gbc.setState(0xd1b3, 0x7eea, 0xcfa0, 0x8181, 0x313c, 0xd500, 0x1, 0x0);
        gbc.writeMem(0xd1b3, { 0xcb, 0xbe });
        gbc.writeMem(0xd500, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7eea);
        EXPECT(gbc.pc(), 0xd1b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1b3), 0xcb);
        EXPECT(gbc.readMem(0xd1b4), 0xbe);
        EXPECT(gbc.readMem(0xd500), 0x5d);
        // CB BE 0224
        gbc.setState(0xa89b, 0xd337, 0x5bb0, 0xafa5, 0x233f, 0xd71f, 0x1, 0x1);
        gbc.writeMem(0xa89b, { 0xcb, 0xbe });
        gbc.writeMem(0xd71f, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd337);
        EXPECT(gbc.pc(), 0xa89d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa89b), 0xcb);
        EXPECT(gbc.readMem(0xa89c), 0xbe);
        EXPECT(gbc.readMem(0xd71f), 0x7);
        // CB BE 0225
        gbc.setState(0x3377, 0xee1, 0xb580, 0x6534, 0xa16d, 0x3817, 0x1, 0x0);
        gbc.writeMem(0x3377, { 0xcb, 0xbe });
        gbc.writeMem(0x3817, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xee1);
        EXPECT(gbc.pc(), 0x3379);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0226
        gbc.setState(0xd273, 0x2e4c, 0x8830, 0x4c3b, 0x5be2, 0xcb90, 0x0, 0x0);
        gbc.writeMem(0xcb90, { 0x29 });
        gbc.writeMem(0xd273, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2e4c);
        EXPECT(gbc.pc(), 0xd275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb90), 0x29);
        EXPECT(gbc.readMem(0xd273), 0xcb);
        EXPECT(gbc.readMem(0xd274), 0xbe);
        // CB BE 0229
        gbc.setState(0x9228, 0xc795, 0xe2b0, 0xc8a, 0x5bb4, 0x56c0, 0x1, 0x1);
        gbc.writeMem(0x56c0, { 0x24 });
        gbc.writeMem(0x9228, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc795);
        EXPECT(gbc.pc(), 0x922a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9228), 0xcb);
        EXPECT(gbc.readMem(0x9229), 0xbe);
        // CB BE 022A
        gbc.setState(0xede6, 0xa815, 0x8800, 0xe284, 0xae9c, 0xc79c, 0x0, 0x0);
        gbc.writeMem(0xc79c, { 0x62 });
        gbc.writeMem(0xede6, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa815);
        EXPECT(gbc.pc(), 0xede8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc79c), 0x62);
        EXPECT(gbc.readMem(0xede6), 0xcb);
        EXPECT(gbc.readMem(0xede7), 0xbe);
        // CB BE 022B
        gbc.setState(0x2b69, 0x952e, 0x8ec0, 0x5706, 0x2ffd, 0x8b73, 0x1, 0x0);
        gbc.writeMem(0x2b69, { 0xcb, 0xbe });
        gbc.writeMem(0x8b73, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x952e);
        EXPECT(gbc.pc(), 0x2b6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b73), 0x53);
        // CB BE 022C
        gbc.setState(0x78d4, 0x93f7, 0xec60, 0x20a3, 0xc906, 0x35b2, 0x0, 0x0);
        gbc.writeMem(0x35b2, { 0x8 });
        gbc.writeMem(0x78d4, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x93f7);
        EXPECT(gbc.pc(), 0x78d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 022D
        gbc.setState(0x8968, 0xcbe2, 0x90c0, 0xdecf, 0x8c65, 0xd7bc, 0x0, 0x0);
        gbc.writeMem(0x8968, { 0xcb, 0xbe });
        gbc.writeMem(0xd7bc, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xcbe2);
        EXPECT(gbc.pc(), 0x896a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8968), 0xcb);
        EXPECT(gbc.readMem(0x8969), 0xbe);
        EXPECT(gbc.readMem(0xd7bc), 0x28);
        // CB BE 022E
        gbc.setState(0x2f8a, 0x7bcb, 0xc6e0, 0x6aed, 0x8d82, 0xd540, 0x0, 0x1);
        gbc.writeMem(0x2f8a, { 0xcb, 0xbe });
        gbc.writeMem(0xd540, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7bcb);
        EXPECT(gbc.pc(), 0x2f8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd540), 0x47);
        // CB BE 022F
        gbc.setState(0xa8f7, 0x7a50, 0x3690, 0x1435, 0xf790, 0xde77, 0x0, 0x0);
        gbc.writeMem(0xa8f7, { 0xcb, 0xbe });
        gbc.writeMem(0xde77, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7a50);
        EXPECT(gbc.pc(), 0xa8f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8f7), 0xcb);
        EXPECT(gbc.readMem(0xa8f8), 0xbe);
        EXPECT(gbc.readMem(0xde77), 0x6c);
        // CB BE 0230
        gbc.setState(0x65d3, 0xe26c, 0x63d0, 0xc694, 0x25cd, 0x9a68, 0x1, 0x1);
        gbc.writeMem(0x65d3, { 0xcb, 0xbe });
        gbc.writeMem(0x9a68, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe26c);
        EXPECT(gbc.pc(), 0x65d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a68), 0x7f);
        // CB BE 0231
        gbc.setState(0x8b3c, 0x59ed, 0x53e0, 0x78d3, 0xc274, 0x799d, 0x1, 0x1);
        gbc.writeMem(0x799d, { 0x15 });
        gbc.writeMem(0x8b3c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x59ed);
        EXPECT(gbc.pc(), 0x8b3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b3c), 0xcb);
        EXPECT(gbc.readMem(0x8b3d), 0xbe);
        // CB BE 0232
        gbc.setState(0xe3c1, 0x6da1, 0x16f0, 0x7539, 0xb5bc, 0xc3a4, 0x1, 0x0);
        gbc.writeMem(0xc3a4, { 0x2a });
        gbc.writeMem(0xe3c1, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6da1);
        EXPECT(gbc.pc(), 0xe3c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3a4), 0x2a);
        EXPECT(gbc.readMem(0xe3c1), 0xcb);
        EXPECT(gbc.readMem(0xe3c2), 0xbe);
        // CB BE 0233
        gbc.setState(0x37d8, 0x1eec, 0xdf10, 0x2299, 0xb782, 0x64e1, 0x1, 0x0);
        gbc.writeMem(0x37d8, { 0xcb, 0xbe });
        gbc.writeMem(0x64e1, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1eec);
        EXPECT(gbc.pc(), 0x37da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0234
        gbc.setState(0xe0c1, 0x8c18, 0xda00, 0xf5f3, 0xf97b, 0xb2ea, 0x1, 0x1);
        gbc.writeMem(0xb2ea, { 0x6f });
        gbc.writeMem(0xe0c1, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8c18);
        EXPECT(gbc.pc(), 0xe0c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ea), 0x6f);
        EXPECT(gbc.readMem(0xe0c1), 0xcb);
        EXPECT(gbc.readMem(0xe0c2), 0xbe);
        // CB BE 0235
        gbc.setState(0xadd5, 0x3e75, 0x390, 0x7694, 0x2043, 0xeb14, 0x1, 0x1);
        gbc.writeMem(0xadd5, { 0xcb, 0xbe });
        gbc.writeMem(0xeb14, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3e75);
        EXPECT(gbc.pc(), 0xadd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadd5), 0xcb);
        EXPECT(gbc.readMem(0xadd6), 0xbe);
        EXPECT(gbc.readMem(0xeb14), 0xc);
        // CB BE 0237
        gbc.setState(0x6b84, 0x71da, 0xcc10, 0x49b1, 0xf442, 0xa953, 0x0, 0x1);
        gbc.writeMem(0x6b84, { 0xcb, 0xbe });
        gbc.writeMem(0xa953, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x71da);
        EXPECT(gbc.pc(), 0x6b86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa953), 0x69);
        // CB BE 0238
        gbc.setState(0x5024, 0x49b9, 0x9810, 0xd9f3, 0xff3c, 0x2394, 0x1, 0x0);
        gbc.writeMem(0x2394, { 0x3 });
        gbc.writeMem(0x5024, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x49b9);
        EXPECT(gbc.pc(), 0x5026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 023A
        gbc.setState(0xdf19, 0xd71e, 0x6630, 0xe064, 0xb501, 0xc86e, 0x1, 0x1);
        gbc.writeMem(0xc86e, { 0x0 });
        gbc.writeMem(0xdf19, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd71e);
        EXPECT(gbc.pc(), 0xdf1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc86e), 0x0);
        EXPECT(gbc.readMem(0xdf19), 0xcb);
        EXPECT(gbc.readMem(0xdf1a), 0xbe);
        // CB BE 023B
        gbc.setState(0x3411, 0x6f7, 0x1c90, 0x2fd5, 0x2a29, 0x8f0d, 0x1, 0x1);
        gbc.writeMem(0x3411, { 0xcb, 0xbe });
        gbc.writeMem(0x8f0d, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6f7);
        EXPECT(gbc.pc(), 0x3413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f0d), 0x69);
        // CB BE 023C
        gbc.setState(0x2fe4, 0xb757, 0x9580, 0xd8fc, 0x8881, 0xf5f, 0x0, 0x1);
        gbc.writeMem(0xf5f, { 0x7c });
        gbc.writeMem(0x2fe4, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb757);
        EXPECT(gbc.pc(), 0x2fe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 023D
        gbc.setState(0x6bc7, 0xee32, 0xf840, 0xe24c, 0xb639, 0xa9a3, 0x1, 0x1);
        gbc.writeMem(0x6bc7, { 0xcb, 0xbe });
        gbc.writeMem(0xa9a3, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xee32);
        EXPECT(gbc.pc(), 0x6bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9a3), 0x5c);
        // CB BE 0241
        gbc.setState(0x80a, 0x2267, 0x62f0, 0xdd5, 0xc77, 0x39fb, 0x0, 0x1);
        gbc.writeMem(0x80a, { 0xcb, 0xbe });
        gbc.writeMem(0x39fb, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2267);
        EXPECT(gbc.pc(), 0x80c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0243
        gbc.setState(0x3ecc, 0x30d1, 0xe150, 0x84ba, 0xb0e5, 0x86aa, 0x1, 0x1);
        gbc.writeMem(0x3ecc, { 0xcb, 0xbe });
        gbc.writeMem(0x86aa, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x30d1);
        EXPECT(gbc.pc(), 0x3ece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86aa), 0x11);
        // CB BE 0244
        gbc.setState(0xc308, 0xcc9a, 0x9d50, 0x8420, 0x45b5, 0x9a01, 0x1, 0x1);
        gbc.writeMem(0x9a01, { 0xf7 });
        gbc.writeMem(0xc308, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xcc9a);
        EXPECT(gbc.pc(), 0xc30a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a01), 0x77);
        EXPECT(gbc.readMem(0xc308), 0xcb);
        EXPECT(gbc.readMem(0xc309), 0xbe);
        // CB BE 0245
        gbc.setState(0xb4c5, 0xaec6, 0x5e90, 0x3ebf, 0xbab8, 0xe551, 0x1, 0x1);
        gbc.writeMem(0xb4c5, { 0xcb, 0xbe });
        gbc.writeMem(0xe551, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xaec6);
        EXPECT(gbc.pc(), 0xb4c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c5), 0xcb);
        EXPECT(gbc.readMem(0xb4c6), 0xbe);
        EXPECT(gbc.readMem(0xe551), 0x42);
        // CB BE 0246
        gbc.setState(0x84fb, 0xd3d5, 0x92f0, 0xd824, 0x5dfe, 0xd82a, 0x0, 0x0);
        gbc.writeMem(0x84fb, { 0xcb, 0xbe });
        gbc.writeMem(0xd82a, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd3d5);
        EXPECT(gbc.pc(), 0x84fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84fb), 0xcb);
        EXPECT(gbc.readMem(0x84fc), 0xbe);
        EXPECT(gbc.readMem(0xd82a), 0x1a);
        // CB BE 0248
        gbc.setState(0x43c2, 0xc7d6, 0x5230, 0xaa69, 0x89fc, 0x94a7, 0x0, 0x1);
        gbc.writeMem(0x43c2, { 0xcb, 0xbe });
        gbc.writeMem(0x94a7, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc7d6);
        EXPECT(gbc.pc(), 0x43c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94a7), 0x74);
        // CB BE 0249
        gbc.setState(0x57b2, 0x751b, 0x6bc0, 0x8733, 0x9e56, 0xc239, 0x0, 0x1);
        gbc.writeMem(0x57b2, { 0xcb, 0xbe });
        gbc.writeMem(0xc239, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x751b);
        EXPECT(gbc.pc(), 0x57b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc239), 0x7f);
        // CB BE 024A
        gbc.setState(0x4385, 0xe8f2, 0x770, 0xcf59, 0xc5ff, 0x8562, 0x1, 0x1);
        gbc.writeMem(0x4385, { 0xcb, 0xbe });
        gbc.writeMem(0x8562, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe8f2);
        EXPECT(gbc.pc(), 0x4387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8562), 0x69);
        // CB BE 024B
        gbc.setState(0x9d19, 0x7642, 0xf250, 0xc786, 0x2157, 0x4e41, 0x1, 0x1);
        gbc.writeMem(0x4e41, { 0x2e });
        gbc.writeMem(0x9d19, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7642);
        EXPECT(gbc.pc(), 0x9d1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d19), 0xcb);
        EXPECT(gbc.readMem(0x9d1a), 0xbe);
        // CB BE 024C
        gbc.setState(0x3dd7, 0xae88, 0xce40, 0xf72f, 0x6037, 0xbdf8, 0x1, 0x0);
        gbc.writeMem(0x3dd7, { 0xcb, 0xbe });
        gbc.writeMem(0xbdf8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xae88);
        EXPECT(gbc.pc(), 0x3dd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdf8), 0x29);
        // CB BE 024D
        gbc.setState(0x6828, 0x9bee, 0x2280, 0xc765, 0x942e, 0xe29f, 0x1, 0x0);
        gbc.writeMem(0x6828, { 0xcb, 0xbe });
        gbc.writeMem(0xe29f, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9bee);
        EXPECT(gbc.pc(), 0x682a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe29f), 0x2c);
        // CB BE 0251
        gbc.setState(0x938e, 0xb651, 0x5f0, 0xc472, 0xfc54, 0xca35, 0x0, 0x0);
        gbc.writeMem(0x938e, { 0xcb, 0xbe });
        gbc.writeMem(0xca35, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb651);
        EXPECT(gbc.pc(), 0x9390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x938e), 0xcb);
        EXPECT(gbc.readMem(0x938f), 0xbe);
        EXPECT(gbc.readMem(0xca35), 0x7f);
        // CB BE 0252
        gbc.setState(0x5a28, 0xaaae, 0x16b0, 0x9054, 0xc1e8, 0xcfc0, 0x0, 0x1);
        gbc.writeMem(0x5a28, { 0xcb, 0xbe });
        gbc.writeMem(0xcfc0, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xaaae);
        EXPECT(gbc.pc(), 0x5a2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfc0), 0x3e);
        // CB BE 0253
        gbc.setState(0x244d, 0x1b0c, 0xce50, 0x76ff, 0x493c, 0xf3, 0x1, 0x0);
        gbc.writeMem(0xf3, { 0x6c });
        gbc.writeMem(0x244d, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1b0c);
        EXPECT(gbc.pc(), 0x244f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0254
        gbc.setState(0xbc42, 0xfcba, 0xf360, 0xc065, 0x965a, 0x7bb1, 0x1, 0x1);
        gbc.writeMem(0x7bb1, { 0x79 });
        gbc.writeMem(0xbc42, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xfcba);
        EXPECT(gbc.pc(), 0xbc44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc42), 0xcb);
        EXPECT(gbc.readMem(0xbc43), 0xbe);
        // CB BE 0256
        gbc.setState(0x7fab, 0xf569, 0x29e0, 0x6dde, 0x1bb4, 0x93c5, 0x0, 0x1);
        gbc.writeMem(0x7fab, { 0xcb, 0xbe });
        gbc.writeMem(0x93c5, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf569);
        EXPECT(gbc.pc(), 0x7fad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c5), 0x1b);
        // CB BE 0257
        gbc.setState(0xcd0c, 0x2a08, 0xecd0, 0xc70d, 0x84e7, 0x66d1, 0x0, 0x1);
        gbc.writeMem(0x66d1, { 0x12 });
        gbc.writeMem(0xcd0c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2a08);
        EXPECT(gbc.pc(), 0xcd0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd0c), 0xcb);
        EXPECT(gbc.readMem(0xcd0d), 0xbe);
        // CB BE 0258
        gbc.setState(0xee24, 0x140, 0x37f0, 0xf1f6, 0x64fd, 0x3c06, 0x0, 0x0);
        gbc.writeMem(0x3c06, { 0x6c });
        gbc.writeMem(0xee24, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x140);
        EXPECT(gbc.pc(), 0xee26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee24), 0xcb);
        EXPECT(gbc.readMem(0xee25), 0xbe);
        // CB BE 0259
        gbc.setState(0x360e, 0xf68e, 0x7640, 0xe37d, 0x23bf, 0x8967, 0x1, 0x0);
        gbc.writeMem(0x360e, { 0xcb, 0xbe });
        gbc.writeMem(0x8967, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf68e);
        EXPECT(gbc.pc(), 0x3610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8967), 0x13);
        // CB BE 025A
        gbc.setState(0x47, 0x8e18, 0xb230, 0x4b4a, 0x776b, 0xc397, 0x1, 0x0);
        gbc.writeMem(0x47, { 0xcb, 0xbe });
        gbc.writeMem(0xc397, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8e18);
        EXPECT(gbc.pc(), 0x49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc397), 0x6f);
        // CB BE 025B
        gbc.setState(0x4b8c, 0xc5aa, 0xd010, 0x188f, 0x1cc7, 0xc911, 0x0, 0x1);
        gbc.writeMem(0x4b8c, { 0xcb, 0xbe });
        gbc.writeMem(0xc911, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc5aa);
        EXPECT(gbc.pc(), 0x4b8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc911), 0x1);
        // CB BE 025C
        gbc.setState(0xdc50, 0xd51d, 0x73c0, 0x3d9c, 0x7223, 0x9966, 0x0, 0x0);
        gbc.writeMem(0x9966, { 0x27 });
        gbc.writeMem(0xdc50, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd51d);
        EXPECT(gbc.pc(), 0xdc52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9966), 0x27);
        EXPECT(gbc.readMem(0xdc50), 0xcb);
        EXPECT(gbc.readMem(0xdc51), 0xbe);
        // CB BE 025E
        gbc.setState(0xe354, 0x3a8b, 0xa790, 0xd265, 0x619e, 0x7559, 0x0, 0x1);
        gbc.writeMem(0x7559, { 0x51 });
        gbc.writeMem(0xe354, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3a8b);
        EXPECT(gbc.pc(), 0xe356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe354), 0xcb);
        EXPECT(gbc.readMem(0xe355), 0xbe);
        // CB BE 025F
        gbc.setState(0xcf5a, 0x54f1, 0xf2c0, 0x2625, 0x17bc, 0x9970, 0x1, 0x1);
        gbc.writeMem(0x9970, { 0xb4 });
        gbc.writeMem(0xcf5a, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x54f1);
        EXPECT(gbc.pc(), 0xcf5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9970), 0x34);
        EXPECT(gbc.readMem(0xcf5a), 0xcb);
        EXPECT(gbc.readMem(0xcf5b), 0xbe);
        // CB BE 0261
        gbc.setState(0xd73, 0x1a03, 0x5d80, 0x4f2d, 0xf615, 0x9482, 0x0, 0x0);
        gbc.writeMem(0xd73, { 0xcb, 0xbe });
        gbc.writeMem(0x9482, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1a03);
        EXPECT(gbc.pc(), 0xd75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9482), 0x8);
        // CB BE 0262
        gbc.setState(0xaf7b, 0x748a, 0xdf80, 0x455a, 0xdbed, 0x9079, 0x0, 0x1);
        gbc.writeMem(0x9079, { 0x7f });
        gbc.writeMem(0xaf7b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x748a);
        EXPECT(gbc.pc(), 0xaf7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9079), 0x7f);
        EXPECT(gbc.readMem(0xaf7b), 0xcb);
        EXPECT(gbc.readMem(0xaf7c), 0xbe);
        // CB BE 0265
        gbc.setState(0x3b8, 0xf14, 0xea40, 0xa8d8, 0xad65, 0xfab8, 0x0, 0x0);
        gbc.writeMem(0x3b8, { 0xcb, 0xbe });
        gbc.writeMem(0xfab8, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf14);
        EXPECT(gbc.pc(), 0x3ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfab8), 0x37);
        // CB BE 0267
        gbc.setState(0x9a12, 0x7458, 0x5500, 0x4566, 0x908a, 0xa8a9, 0x1, 0x1);
        gbc.writeMem(0x9a12, { 0xcb, 0xbe });
        gbc.writeMem(0xa8a9, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7458);
        EXPECT(gbc.pc(), 0x9a14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a12), 0xcb);
        EXPECT(gbc.readMem(0x9a13), 0xbe);
        EXPECT(gbc.readMem(0xa8a9), 0x2f);
        // CB BE 0268
        gbc.setState(0xb04, 0xed22, 0x2dd0, 0xd086, 0xacf5, 0x31e3, 0x1, 0x1);
        gbc.writeMem(0xb04, { 0xcb, 0xbe });
        gbc.writeMem(0x31e3, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xed22);
        EXPECT(gbc.pc(), 0xb06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0269
        gbc.setState(0x3acd, 0x6df7, 0xe0e0, 0xbac4, 0x7c0c, 0x6a9a, 0x1, 0x1);
        gbc.writeMem(0x3acd, { 0xcb, 0xbe });
        gbc.writeMem(0x6a9a, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6df7);
        EXPECT(gbc.pc(), 0x3acf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 026A
        gbc.setState(0x14b6, 0x6251, 0xe3d0, 0xac9b, 0xf45f, 0x802e, 0x1, 0x1);
        gbc.writeMem(0x14b6, { 0xcb, 0xbe });
        gbc.writeMem(0x802e, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6251);
        EXPECT(gbc.pc(), 0x14b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x802e), 0x4c);
        // CB BE 026B
        gbc.setState(0xd93f, 0x146c, 0x6080, 0xb962, 0x223d, 0xfd12, 0x1, 0x1);
        gbc.writeMem(0xd93f, { 0xcb, 0xbe });
        gbc.writeMem(0xfd12, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x146c);
        EXPECT(gbc.pc(), 0xd941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd93f), 0xcb);
        EXPECT(gbc.readMem(0xd940), 0xbe);
        EXPECT(gbc.readMem(0xfd12), 0x44);
        // CB BE 026C
        gbc.setState(0x256b, 0x42f2, 0xb500, 0x3045, 0x58a0, 0x6822, 0x1, 0x0);
        gbc.writeMem(0x256b, { 0xcb, 0xbe });
        gbc.writeMem(0x6822, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x42f2);
        EXPECT(gbc.pc(), 0x256d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 026E
        gbc.setState(0x1dbd, 0x651a, 0x7560, 0xa5c4, 0xee36, 0xc879, 0x1, 0x0);
        gbc.writeMem(0x1dbd, { 0xcb, 0xbe });
        gbc.writeMem(0xc879, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x651a);
        EXPECT(gbc.pc(), 0x1dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc879), 0x27);
        // CB BE 026F
        gbc.setState(0x7f03, 0x7bae, 0xa400, 0xbeb6, 0xb6f, 0x10b9, 0x0, 0x0);
        gbc.writeMem(0x10b9, { 0x72 });
        gbc.writeMem(0x7f03, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7bae);
        EXPECT(gbc.pc(), 0x7f05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0270
        gbc.setState(0x93f4, 0x3eee, 0xea30, 0x5e10, 0x248a, 0xb729, 0x0, 0x1);
        gbc.writeMem(0x93f4, { 0xcb, 0xbe });
        gbc.writeMem(0xb729, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3eee);
        EXPECT(gbc.pc(), 0x93f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f4), 0xcb);
        EXPECT(gbc.readMem(0x93f5), 0xbe);
        EXPECT(gbc.readMem(0xb729), 0x2e);
        // CB BE 0271
        gbc.setState(0xc831, 0xe38c, 0xaa90, 0xf0a4, 0xff94, 0x18b9, 0x1, 0x0);
        gbc.writeMem(0x18b9, { 0x4a });
        gbc.writeMem(0xc831, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe38c);
        EXPECT(gbc.pc(), 0xc833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc831), 0xcb);
        EXPECT(gbc.readMem(0xc832), 0xbe);
        // CB BE 0272
        gbc.setState(0xeb23, 0xbdf2, 0x2890, 0xe268, 0x9849, 0xfbbc, 0x1, 0x1);
        gbc.writeMem(0xeb23, { 0xcb, 0xbe });
        gbc.writeMem(0xfbbc, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbdf2);
        EXPECT(gbc.pc(), 0xeb25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb23), 0xcb);
        EXPECT(gbc.readMem(0xeb24), 0xbe);
        EXPECT(gbc.readMem(0xfbbc), 0x70);
        // CB BE 0274
        gbc.setState(0xdd2b, 0xd685, 0xf3d0, 0x9bb9, 0x4b25, 0xd02e, 0x1, 0x0);
        gbc.writeMem(0xd02e, { 0xbe });
        gbc.writeMem(0xdd2b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd685);
        EXPECT(gbc.pc(), 0xdd2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd02e), 0x3e);
        EXPECT(gbc.readMem(0xdd2b), 0xcb);
        EXPECT(gbc.readMem(0xdd2c), 0xbe);
        // CB BE 0276
        gbc.setState(0x71b5, 0xc9a, 0x2c10, 0xc85f, 0x2d84, 0x822, 0x0, 0x0);
        gbc.writeMem(0x822, { 0x45 });
        gbc.writeMem(0x71b5, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc9a);
        EXPECT(gbc.pc(), 0x71b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0277
        gbc.setState(0x7a99, 0xab85, 0x9200, 0xcefe, 0x59f4, 0xd828, 0x0, 0x0);
        gbc.writeMem(0x7a99, { 0xcb, 0xbe });
        gbc.writeMem(0xd828, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xab85);
        EXPECT(gbc.pc(), 0x7a9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd828), 0x57);
        // CB BE 0278
        gbc.setState(0x159c, 0x9559, 0x1a30, 0x4d42, 0x60fb, 0xee19, 0x0, 0x1);
        gbc.writeMem(0x159c, { 0xcb, 0xbe });
        gbc.writeMem(0xee19, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9559);
        EXPECT(gbc.pc(), 0x159e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee19), 0x2c);
        // CB BE 027C
        gbc.setState(0x8129, 0x1f0b, 0xc520, 0x2969, 0xc135, 0x72b7, 0x0, 0x1);
        gbc.writeMem(0x72b7, { 0x17 });
        gbc.writeMem(0x8129, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1f0b);
        EXPECT(gbc.pc(), 0x812b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8129), 0xcb);
        EXPECT(gbc.readMem(0x812a), 0xbe);
        // CB BE 027E
        gbc.setState(0xc8b3, 0x7ff3, 0xd060, 0xb7aa, 0x6c0b, 0x32c8, 0x1, 0x1);
        gbc.writeMem(0x32c8, { 0x4a });
        gbc.writeMem(0xc8b3, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7ff3);
        EXPECT(gbc.pc(), 0xc8b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b3), 0xcb);
        EXPECT(gbc.readMem(0xc8b4), 0xbe);
        // CB BE 027F
        gbc.setState(0x48ee, 0x1456, 0x9c90, 0x357, 0xf5b4, 0xd62b, 0x1, 0x0);
        gbc.writeMem(0x48ee, { 0xcb, 0xbe });
        gbc.writeMem(0xd62b, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1456);
        EXPECT(gbc.pc(), 0x48f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd62b), 0x7a);
        // CB BE 0280
        gbc.setState(0x55f5, 0xe783, 0x1560, 0x6f54, 0xb24a, 0x2741, 0x1, 0x1);
        gbc.writeMem(0x2741, { 0x27 });
        gbc.writeMem(0x55f5, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe783);
        EXPECT(gbc.pc(), 0x55f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0281
        gbc.setState(0xae19, 0x5cec, 0x2d40, 0x44c9, 0xe28d, 0xb7a8, 0x1, 0x0);
        gbc.writeMem(0xae19, { 0xcb, 0xbe });
        gbc.writeMem(0xb7a8, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5cec);
        EXPECT(gbc.pc(), 0xae1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae19), 0xcb);
        EXPECT(gbc.readMem(0xae1a), 0xbe);
        EXPECT(gbc.readMem(0xb7a8), 0x6e);
        // CB BE 0282
        gbc.setState(0x4a50, 0x43ab, 0xd310, 0x381f, 0x2fd4, 0x2c56, 0x0, 0x0);
        gbc.writeMem(0x2c56, { 0x45 });
        gbc.writeMem(0x4a50, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x43ab);
        EXPECT(gbc.pc(), 0x4a52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0283
        gbc.setState(0xdfe9, 0x871b, 0x330, 0xf964, 0x4063, 0xe408, 0x1, 0x1);
        gbc.writeMem(0xdfe9, { 0xcb, 0xbe });
        gbc.writeMem(0xe408, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x871b);
        EXPECT(gbc.pc(), 0xdfeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfe9), 0xcb);
        EXPECT(gbc.readMem(0xdfea), 0xbe);
        EXPECT(gbc.readMem(0xe408), 0x2c);
        // CB BE 0284
        gbc.setState(0x7a38, 0xd52d, 0x8520, 0xb6de, 0x1f43, 0x3128, 0x1, 0x1);
        gbc.writeMem(0x3128, { 0x53 });
        gbc.writeMem(0x7a38, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd52d);
        EXPECT(gbc.pc(), 0x7a3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0285
        gbc.setState(0xa9d0, 0xbe24, 0x16f0, 0x524b, 0x1391, 0xe5d1, 0x0, 0x0);
        gbc.writeMem(0xa9d0, { 0xcb, 0xbe });
        gbc.writeMem(0xe5d1, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbe24);
        EXPECT(gbc.pc(), 0xa9d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9d0), 0xcb);
        EXPECT(gbc.readMem(0xa9d1), 0xbe);
        EXPECT(gbc.readMem(0xe5d1), 0x77);
        // CB BE 0286
        gbc.setState(0x6ddc, 0x1045, 0xc570, 0x792c, 0x744c, 0x235a, 0x1, 0x1);
        gbc.writeMem(0x235a, { 0x46 });
        gbc.writeMem(0x6ddc, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1045);
        EXPECT(gbc.pc(), 0x6dde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0287
        gbc.setState(0x756c, 0x5a9b, 0x2b60, 0xfa63, 0x5502, 0x9ee6, 0x1, 0x0);
        gbc.writeMem(0x756c, { 0xcb, 0xbe });
        gbc.writeMem(0x9ee6, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5a9b);
        EXPECT(gbc.pc(), 0x756e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee6), 0x74);
        // CB BE 0288
        gbc.setState(0x2247, 0x118a, 0x5c70, 0x76b0, 0x4bc3, 0x9b28, 0x1, 0x1);
        gbc.writeMem(0x2247, { 0xcb, 0xbe });
        gbc.writeMem(0x9b28, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x118a);
        EXPECT(gbc.pc(), 0x2249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b28), 0x6c);
        // CB BE 0289
        gbc.setState(0x988, 0x893d, 0x9900, 0x394a, 0x78d7, 0xa238, 0x1, 0x0);
        gbc.writeMem(0x988, { 0xcb, 0xbe });
        gbc.writeMem(0xa238, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x893d);
        EXPECT(gbc.pc(), 0x98a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa238), 0x35);
        // CB BE 028A
        gbc.setState(0xc4f3, 0xdb29, 0xcbb0, 0xcd0d, 0x9dcf, 0xd695, 0x1, 0x1);
        gbc.writeMem(0xc4f3, { 0xcb, 0xbe });
        gbc.writeMem(0xd695, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xdb29);
        EXPECT(gbc.pc(), 0xc4f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4f3), 0xcb);
        EXPECT(gbc.readMem(0xc4f4), 0xbe);
        EXPECT(gbc.readMem(0xd695), 0x5b);
        // CB BE 028B
        gbc.setState(0xdef9, 0xcef, 0x9c0, 0xa9e7, 0xce35, 0x540a, 0x0, 0x1);
        gbc.writeMem(0x540a, { 0x6c });
        gbc.writeMem(0xdef9, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xcef);
        EXPECT(gbc.pc(), 0xdefb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdef9), 0xcb);
        EXPECT(gbc.readMem(0xdefa), 0xbe);
        // CB BE 028D
        gbc.setState(0x8a6, 0xbb4b, 0xf820, 0xe5cf, 0xa69e, 0x79ba, 0x0, 0x1);
        gbc.writeMem(0x8a6, { 0xcb, 0xbe });
        gbc.writeMem(0x79ba, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xbb4b);
        EXPECT(gbc.pc(), 0x8a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 028E
        gbc.setState(0x7116, 0x861f, 0x1f50, 0x1f5a, 0xfe4d, 0x1431, 0x0, 0x1);
        gbc.writeMem(0x1431, { 0x39 });
        gbc.writeMem(0x7116, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x861f);
        EXPECT(gbc.pc(), 0x7118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 028F
        gbc.setState(0x743b, 0x7238, 0x6e40, 0x1961, 0x420f, 0xdf8c, 0x0, 0x0);
        gbc.writeMem(0x743b, { 0xcb, 0xbe });
        gbc.writeMem(0xdf8c, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7238);
        EXPECT(gbc.pc(), 0x743d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf8c), 0x19);
        // CB BE 0290
        gbc.setState(0xb438, 0xf4c8, 0xef40, 0x2236, 0x8110, 0x395a, 0x1, 0x0);
        gbc.writeMem(0x395a, { 0x2e });
        gbc.writeMem(0xb438, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf4c8);
        EXPECT(gbc.pc(), 0xb43a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb438), 0xcb);
        EXPECT(gbc.readMem(0xb439), 0xbe);
        // CB BE 0292
        gbc.setState(0xe150, 0x9b48, 0xfad0, 0x8a24, 0x4736, 0xe3dc, 0x1, 0x1);
        gbc.writeMem(0xe150, { 0xcb, 0xbe });
        gbc.writeMem(0xe3dc, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9b48);
        EXPECT(gbc.pc(), 0xe152);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe150), 0xcb);
        EXPECT(gbc.readMem(0xe151), 0xbe);
        EXPECT(gbc.readMem(0xe3dc), 0x6b);
        // CB BE 0294
        gbc.setState(0x48a2, 0x682a, 0x6830, 0x4d95, 0xac3b, 0xca20, 0x1, 0x1);
        gbc.writeMem(0x48a2, { 0xcb, 0xbe });
        gbc.writeMem(0xca20, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x682a);
        EXPECT(gbc.pc(), 0x48a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca20), 0x65);
        // CB BE 0295
        gbc.setState(0x4652, 0xdb5d, 0xd8b0, 0xbdad, 0xca9c, 0x7fff, 0x1, 0x0);
        gbc.writeMem(0x4652, { 0xcb, 0xbe });
        gbc.writeMem(0x7fff, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdb5d);
        EXPECT(gbc.pc(), 0x4654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0296
        gbc.setState(0x59a4, 0x61b4, 0xd1e0, 0x38be, 0x6c20, 0x2666, 0x1, 0x1);
        gbc.writeMem(0x2666, { 0x4b });
        gbc.writeMem(0x59a4, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x61b4);
        EXPECT(gbc.pc(), 0x59a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0297
        gbc.setState(0x8ba5, 0x5a76, 0xdac0, 0xf1ab, 0x30b2, 0x72f5, 0x0, 0x1);
        gbc.writeMem(0x72f5, { 0x5b });
        gbc.writeMem(0x8ba5, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5a76);
        EXPECT(gbc.pc(), 0x8ba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba5), 0xcb);
        EXPECT(gbc.readMem(0x8ba6), 0xbe);
        // CB BE 0298
        gbc.setState(0xaa6d, 0x739d, 0xe460, 0x3f7e, 0x4a13, 0x3606, 0x0, 0x1);
        gbc.writeMem(0x3606, { 0x6a });
        gbc.writeMem(0xaa6d, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x739d);
        EXPECT(gbc.pc(), 0xaa6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa6d), 0xcb);
        EXPECT(gbc.readMem(0xaa6e), 0xbe);
        // CB BE 0299
        gbc.setState(0x2199, 0x7c21, 0xcf60, 0xe951, 0xc8b5, 0x206a, 0x1, 0x0);
        gbc.writeMem(0x206a, { 0x43 });
        gbc.writeMem(0x2199, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7c21);
        EXPECT(gbc.pc(), 0x219b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 029D
        gbc.setState(0xdab8, 0x1fcb, 0xbf60, 0xf23f, 0x3e14, 0x630a, 0x0, 0x0);
        gbc.writeMem(0x630a, { 0x19 });
        gbc.writeMem(0xdab8, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1fcb);
        EXPECT(gbc.pc(), 0xdaba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdab8), 0xcb);
        EXPECT(gbc.readMem(0xdab9), 0xbe);
        // CB BE 029E
        gbc.setState(0xcc6d, 0x98b2, 0xed60, 0xe675, 0xb4c8, 0x94d0, 0x1, 0x1);
        gbc.writeMem(0x94d0, { 0xce });
        gbc.writeMem(0xcc6d, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x98b2);
        EXPECT(gbc.pc(), 0xcc6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d0), 0x4e);
        EXPECT(gbc.readMem(0xcc6d), 0xcb);
        EXPECT(gbc.readMem(0xcc6e), 0xbe);
        // CB BE 029F
        gbc.setState(0x6774, 0xdcfa, 0x3e0, 0x3bd5, 0x4425, 0x97be, 0x1, 0x1);
        gbc.writeMem(0x6774, { 0xcb, 0xbe });
        gbc.writeMem(0x97be, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xdcfa);
        EXPECT(gbc.pc(), 0x6776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97be), 0x52);
        // CB BE 02A0
        gbc.setState(0x720d, 0xafb3, 0x7000, 0xc543, 0x1ce8, 0x47bc, 0x0, 0x1);
        gbc.writeMem(0x47bc, { 0x38 });
        gbc.writeMem(0x720d, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xafb3);
        EXPECT(gbc.pc(), 0x720f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 02A1
        gbc.setState(0xa2da, 0x8c96, 0x96d0, 0xbd5a, 0xdb48, 0x5661, 0x1, 0x0);
        gbc.writeMem(0x5661, { 0x7f });
        gbc.writeMem(0xa2da, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8c96);
        EXPECT(gbc.pc(), 0xa2dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2da), 0xcb);
        EXPECT(gbc.readMem(0xa2db), 0xbe);
        // CB BE 02A2
        gbc.setState(0xb41b, 0xbf20, 0xa800, 0x678, 0x2539, 0xc89f, 0x0, 0x0);
        gbc.writeMem(0xb41b, { 0xcb, 0xbe });
        gbc.writeMem(0xc89f, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbf20);
        EXPECT(gbc.pc(), 0xb41d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb41b), 0xcb);
        EXPECT(gbc.readMem(0xb41c), 0xbe);
        EXPECT(gbc.readMem(0xc89f), 0x75);
        // CB BE 02A3
        gbc.setState(0x40f7, 0xd75c, 0x1ba0, 0x513c, 0x562c, 0xe5af, 0x0, 0x1);
        gbc.writeMem(0x40f7, { 0xcb, 0xbe });
        gbc.writeMem(0xe5af, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd75c);
        EXPECT(gbc.pc(), 0x40f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5af), 0x7c);
        // CB BE 02A5
        gbc.setState(0x27a4, 0x4c8a, 0x7800, 0xf55c, 0xaf02, 0x3d2, 0x0, 0x0);
        gbc.writeMem(0x3d2, { 0x4a });
        gbc.writeMem(0x27a4, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4c8a);
        EXPECT(gbc.pc(), 0x27a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 02A7
        gbc.setState(0x4a39, 0xbb, 0xd5e0, 0xface, 0xd911, 0x6925, 0x0, 0x0);
        gbc.writeMem(0x4a39, { 0xcb, 0xbe });
        gbc.writeMem(0x6925, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xbb);
        EXPECT(gbc.pc(), 0x4a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 02A9
        gbc.setState(0x5501, 0xa32b, 0xd9e0, 0x17a5, 0xcdbe, 0xe9a8, 0x0, 0x0);
        gbc.writeMem(0x5501, { 0xcb, 0xbe });
        gbc.writeMem(0xe9a8, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa32b);
        EXPECT(gbc.pc(), 0x5503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9a8), 0x21);
        // CB BE 02AA
        gbc.setState(0xd377, 0xc2fd, 0x8430, 0xdf76, 0xf636, 0x90fa, 0x0, 0x1);
        gbc.writeMem(0x90fa, { 0xdb });
        gbc.writeMem(0xd377, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc2fd);
        EXPECT(gbc.pc(), 0xd379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90fa), 0x5b);
        EXPECT(gbc.readMem(0xd377), 0xcb);
        EXPECT(gbc.readMem(0xd378), 0xbe);
        // CB BE 02AB
        gbc.setState(0x9cd2, 0xdc03, 0x7760, 0xd1e, 0x736d, 0xe41b, 0x1, 0x1);
        gbc.writeMem(0x9cd2, { 0xcb, 0xbe });
        gbc.writeMem(0xe41b, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xdc03);
        EXPECT(gbc.pc(), 0x9cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd2), 0xcb);
        EXPECT(gbc.readMem(0x9cd3), 0xbe);
        EXPECT(gbc.readMem(0xe41b), 0x57);
        // CB BE 02AC
        gbc.setState(0xd57f, 0x1fad, 0x5c0, 0xc41d, 0x1d7c, 0x154c, 0x1, 0x0);
        gbc.writeMem(0x154c, { 0x23 });
        gbc.writeMem(0xd57f, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1fad);
        EXPECT(gbc.pc(), 0xd581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd57f), 0xcb);
        EXPECT(gbc.readMem(0xd580), 0xbe);
        // CB BE 02AD
        gbc.setState(0xef05, 0xc47a, 0x4ac0, 0xa3e5, 0xa8a2, 0xdee3, 0x0, 0x0);
        gbc.writeMem(0xdee3, { 0x98 });
        gbc.writeMem(0xef05, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc47a);
        EXPECT(gbc.pc(), 0xef07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee3), 0x18);
        EXPECT(gbc.readMem(0xef05), 0xcb);
        EXPECT(gbc.readMem(0xef06), 0xbe);
        // CB BE 02AE
        gbc.setState(0x68d2, 0xfe95, 0x78a0, 0x58ac, 0xbc88, 0xfade, 0x0, 0x1);
        gbc.writeMem(0x68d2, { 0xcb, 0xbe });
        gbc.writeMem(0xfade, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfe95);
        EXPECT(gbc.pc(), 0x68d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfade), 0x39);
        // CB BE 02AF
        gbc.setState(0xcbdd, 0x86a, 0xaf50, 0xdea1, 0xa76f, 0x1b17, 0x1, 0x0);
        gbc.writeMem(0x1b17, { 0x66 });
        gbc.writeMem(0xcbdd, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x86a);
        EXPECT(gbc.pc(), 0xcbdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbdd), 0xcb);
        EXPECT(gbc.readMem(0xcbde), 0xbe);
        // CB BE 02B2
        gbc.setState(0xca87, 0x12dc, 0xa8b0, 0xe22, 0xdf6c, 0xffdf, 0x1, 0x1);
        gbc.writeMem(0xca87, { 0xcb, 0xbe });
        gbc.writeMem(0xffdf, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x12dc);
        EXPECT(gbc.pc(), 0xca89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca87), 0xcb);
        EXPECT(gbc.readMem(0xca88), 0xbe);
        EXPECT(gbc.readMem(0xffdf), 0xd);
        // CB BE 02B3
        gbc.setState(0x58fd, 0xb48b, 0x2e40, 0x86ba, 0x6c04, 0xd2bf, 0x1, 0x1);
        gbc.writeMem(0x58fd, { 0xcb, 0xbe });
        gbc.writeMem(0xd2bf, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb48b);
        EXPECT(gbc.pc(), 0x58ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2bf), 0x63);
        // CB BE 02B4
        gbc.setState(0x56ea, 0x4af5, 0x90e0, 0xc36d, 0xdeaf, 0xd290, 0x0, 0x0);
        gbc.writeMem(0x56ea, { 0xcb, 0xbe });
        gbc.writeMem(0xd290, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4af5);
        EXPECT(gbc.pc(), 0x56ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd290), 0x36);
        // CB BE 02B5
        gbc.setState(0x2b45, 0xdf1f, 0xd90, 0xc445, 0x44df, 0x5fb0, 0x1, 0x1);
        gbc.writeMem(0x2b45, { 0xcb, 0xbe });
        gbc.writeMem(0x5fb0, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xdf1f);
        EXPECT(gbc.pc(), 0x2b47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 02BB
        gbc.setState(0x6c90, 0x556b, 0x390, 0xdd5b, 0x424c, 0xb22a, 0x1, 0x0);
        gbc.writeMem(0x6c90, { 0xcb, 0xbe });
        gbc.writeMem(0xb22a, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x556b);
        EXPECT(gbc.pc(), 0x6c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb22a), 0x50);
        // CB BE 02BC
        gbc.setState(0x6ad, 0xd032, 0x2360, 0x7c7c, 0xdd5c, 0xfd7b, 0x0, 0x0);
        gbc.writeMem(0x6ad, { 0xcb, 0xbe });
        gbc.writeMem(0xfd7b, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd032);
        EXPECT(gbc.pc(), 0x6af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfd7b), 0xd);
        // CB BE 02BD
        gbc.setState(0x64e7, 0xa60a, 0x9120, 0xa86e, 0xfd43, 0x954c, 0x1, 0x1);
        gbc.writeMem(0x64e7, { 0xcb, 0xbe });
        gbc.writeMem(0x954c, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa60a);
        EXPECT(gbc.pc(), 0x64e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x954c), 0x64);
        // CB BE 02BE
        gbc.setState(0x64ee, 0xeb67, 0x88d0, 0xbf2, 0x3d0d, 0x5ff9, 0x0, 0x0);
        gbc.writeMem(0x5ff9, { 0x4b });
        gbc.writeMem(0x64ee, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xeb67);
        EXPECT(gbc.pc(), 0x64f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 02BF
        gbc.setState(0x5b8d, 0x9fe, 0x4f00, 0xfc6b, 0x1581, 0xbb92, 0x1, 0x0);
        gbc.writeMem(0x5b8d, { 0xcb, 0xbe });
        gbc.writeMem(0xbb92, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9fe);
        EXPECT(gbc.pc(), 0x5b8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb92), 0x3f);
        // CB BE 02C0
        gbc.setState(0xc11f, 0x2d43, 0x7fb0, 0xdc95, 0x5620, 0x9c0d, 0x1, 0x0);
        gbc.writeMem(0x9c0d, { 0xc9 });
        gbc.writeMem(0xc11f, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2d43);
        EXPECT(gbc.pc(), 0xc121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c0d), 0x49);
        EXPECT(gbc.readMem(0xc11f), 0xcb);
        EXPECT(gbc.readMem(0xc120), 0xbe);
        // CB BE 02C1
        gbc.setState(0x44b8, 0xe5af, 0x4950, 0x15a3, 0xcbc6, 0xff27, 0x1, 0x0);
        gbc.writeMem(0x44b8, { 0xcb, 0xbe });
        gbc.writeMem(0xff27, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe5af);
        EXPECT(gbc.pc(), 0x44ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff27), 0x3c);
        // CB BE 02C2
        gbc.setState(0x5a87, 0x9c94, 0xb240, 0xe076, 0xdb65, 0xaa8d, 0x1, 0x0);
        gbc.writeMem(0x5a87, { 0xcb, 0xbe });
        gbc.writeMem(0xaa8d, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9c94);
        EXPECT(gbc.pc(), 0x5a89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa8d), 0x75);
        // CB BE 02C3
        gbc.setState(0xbf6, 0x5c4f, 0xd290, 0xe65c, 0x1643, 0xa293, 0x0, 0x1);
        gbc.writeMem(0xbf6, { 0xcb, 0xbe });
        gbc.writeMem(0xa293, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5c4f);
        EXPECT(gbc.pc(), 0xbf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa293), 0x5d);
        // CB BE 02C5
        gbc.setState(0x8724, 0x643, 0xca90, 0x9daf, 0x2d94, 0xbe45, 0x1, 0x1);
        gbc.writeMem(0x8724, { 0xcb, 0xbe });
        gbc.writeMem(0xbe45, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x643);
        EXPECT(gbc.pc(), 0x8726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8724), 0xcb);
        EXPECT(gbc.readMem(0x8725), 0xbe);
        EXPECT(gbc.readMem(0xbe45), 0x79);
        // CB BE 02C6
        gbc.setState(0x354a, 0x906f, 0x2860, 0xca0c, 0xee0c, 0x8f0c, 0x0, 0x0);
        gbc.writeMem(0x354a, { 0xcb, 0xbe });
        gbc.writeMem(0x8f0c, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x906f);
        EXPECT(gbc.pc(), 0x354c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f0c), 0x7d);
        // CB BE 02C7
        gbc.setState(0xafb6, 0x85d3, 0xb7a0, 0xe718, 0xdce5, 0xd150, 0x0, 0x1);
        gbc.writeMem(0xafb6, { 0xcb, 0xbe });
        gbc.writeMem(0xd150, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x85d3);
        EXPECT(gbc.pc(), 0xafb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafb6), 0xcb);
        EXPECT(gbc.readMem(0xafb7), 0xbe);
        EXPECT(gbc.readMem(0xd150), 0x6e);
        // CB BE 02C9
        gbc.setState(0x570e, 0xa4bd, 0x200, 0x4411, 0x5cb4, 0xb6c2, 0x0, 0x1);
        gbc.writeMem(0x570e, { 0xcb, 0xbe });
        gbc.writeMem(0xb6c2, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa4bd);
        EXPECT(gbc.pc(), 0x5710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6c2), 0x5e);
        // CB BE 02CA
        gbc.setState(0x960b, 0xf5f4, 0xda60, 0xd7, 0x6a39, 0x95fb, 0x0, 0x0);
        gbc.writeMem(0x95fb, { 0xf });
        gbc.writeMem(0x960b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf5f4);
        EXPECT(gbc.pc(), 0x960d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95fb), 0xf);
        EXPECT(gbc.readMem(0x960b), 0xcb);
        EXPECT(gbc.readMem(0x960c), 0xbe);
        // CB BE 02CB
        gbc.setState(0x2e1c, 0x5e01, 0xed10, 0xdc2, 0x8b34, 0xfc11, 0x0, 0x1);
        gbc.writeMem(0x2e1c, { 0xcb, 0xbe });
        gbc.writeMem(0xfc11, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5e01);
        EXPECT(gbc.pc(), 0x2e1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc11), 0x27);
        // CB BE 02CD
        gbc.setState(0xe5b4, 0xec46, 0x8930, 0x7626, 0x1dc9, 0x3430, 0x0, 0x0);
        gbc.writeMem(0x3430, { 0x70 });
        gbc.writeMem(0xe5b4, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xec46);
        EXPECT(gbc.pc(), 0xe5b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5b4), 0xcb);
        EXPECT(gbc.readMem(0xe5b5), 0xbe);
        // CB BE 02CE
        gbc.setState(0x9560, 0x7f9a, 0x3360, 0xc101, 0xdff5, 0x1e80, 0x1, 0x0);
        gbc.writeMem(0x1e80, { 0x12 });
        gbc.writeMem(0x9560, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7f9a);
        EXPECT(gbc.pc(), 0x9562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9560), 0xcb);
        EXPECT(gbc.readMem(0x9561), 0xbe);
        // CB BE 02CF
        gbc.setState(0x600d, 0x5b6a, 0x6b50, 0x62ae, 0x777c, 0xa925, 0x0, 0x1);
        gbc.writeMem(0x600d, { 0xcb, 0xbe });
        gbc.writeMem(0xa925, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5b6a);
        EXPECT(gbc.pc(), 0x600f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa925), 0x5d);
        // CB BE 02D1
        gbc.setState(0x1368, 0x719c, 0xc0d0, 0xeb4f, 0xc2a7, 0x9b1e, 0x0, 0x1);
        gbc.writeMem(0x1368, { 0xcb, 0xbe });
        gbc.writeMem(0x9b1e, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x719c);
        EXPECT(gbc.pc(), 0x136a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1e), 0x6b);
        // CB BE 02D2
        gbc.setState(0xa032, 0x855a, 0x1b0, 0xda7a, 0x5508, 0x8f0b, 0x0, 0x1);
        gbc.writeMem(0x8f0b, { 0xa8 });
        gbc.writeMem(0xa032, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x855a);
        EXPECT(gbc.pc(), 0xa034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f0b), 0x28);
        EXPECT(gbc.readMem(0xa032), 0xcb);
        EXPECT(gbc.readMem(0xa033), 0xbe);
        // CB BE 02D3
        gbc.setState(0x9b3f, 0x719, 0xb3a0, 0xa3c3, 0x12a4, 0x9158, 0x0, 0x0);
        gbc.writeMem(0x9158, { 0xb6 });
        gbc.writeMem(0x9b3f, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x719);
        EXPECT(gbc.pc(), 0x9b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9158), 0x36);
        EXPECT(gbc.readMem(0x9b3f), 0xcb);
        EXPECT(gbc.readMem(0x9b40), 0xbe);
        // CB BE 02D5
        gbc.setState(0xbfcb, 0xd4ee, 0x5420, 0x69c4, 0xfe72, 0xa430, 0x1, 0x0);
        gbc.writeMem(0xa430, { 0x67 });
        gbc.writeMem(0xbfcb, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd4ee);
        EXPECT(gbc.pc(), 0xbfcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa430), 0x67);
        EXPECT(gbc.readMem(0xbfcb), 0xcb);
        EXPECT(gbc.readMem(0xbfcc), 0xbe);
        // CB BE 02D7
        gbc.setState(0xa3bd, 0x4a8a, 0x2c90, 0x60c7, 0xd768, 0x2c1a, 0x1, 0x1);
        gbc.writeMem(0x2c1a, { 0x33 });
        gbc.writeMem(0xa3bd, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4a8a);
        EXPECT(gbc.pc(), 0xa3bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3bd), 0xcb);
        EXPECT(gbc.readMem(0xa3be), 0xbe);
        // CB BE 02DA
        gbc.setState(0xa0e8, 0x5c81, 0xf220, 0xb7b8, 0x4410, 0xf623, 0x0, 0x0);
        gbc.writeMem(0xa0e8, { 0xcb, 0xbe });
        gbc.writeMem(0xf623, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5c81);
        EXPECT(gbc.pc(), 0xa0ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e8), 0xcb);
        EXPECT(gbc.readMem(0xa0e9), 0xbe);
        EXPECT(gbc.readMem(0xf623), 0x57);
        // CB BE 02DD
        gbc.setState(0x71dd, 0xf696, 0x2d70, 0xbd0b, 0xa54f, 0xb301, 0x0, 0x0);
        gbc.writeMem(0x71dd, { 0xcb, 0xbe });
        gbc.writeMem(0xb301, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf696);
        EXPECT(gbc.pc(), 0x71df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb301), 0x2a);
        // CB BE 02DF
        gbc.setState(0xb402, 0x7b48, 0x470, 0xbdd5, 0xc1c, 0xca3b, 0x0, 0x1);
        gbc.writeMem(0xb402, { 0xcb, 0xbe });
        gbc.writeMem(0xca3b, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7b48);
        EXPECT(gbc.pc(), 0xb404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb402), 0xcb);
        EXPECT(gbc.readMem(0xb403), 0xbe);
        EXPECT(gbc.readMem(0xca3b), 0x22);
        // CB BE 02E0
        gbc.setState(0xd85e, 0x7749, 0xd460, 0xd758, 0x4601, 0xc453, 0x1, 0x0);
        gbc.writeMem(0xc453, { 0x38 });
        gbc.writeMem(0xd85e, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7749);
        EXPECT(gbc.pc(), 0xd860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc453), 0x38);
        EXPECT(gbc.readMem(0xd85e), 0xcb);
        EXPECT(gbc.readMem(0xd85f), 0xbe);
        // CB BE 02E1
        gbc.setState(0x82a8, 0x33b, 0x4aa0, 0x7d99, 0x3ad5, 0xaddf, 0x0, 0x0);
        gbc.writeMem(0x82a8, { 0xcb, 0xbe });
        gbc.writeMem(0xaddf, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x33b);
        EXPECT(gbc.pc(), 0x82aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82a8), 0xcb);
        EXPECT(gbc.readMem(0x82a9), 0xbe);
        EXPECT(gbc.readMem(0xaddf), 0x66);
        // CB BE 02E2
        gbc.setState(0x4cdd, 0x7680, 0xc0, 0x513e, 0x3848, 0x84c5, 0x1, 0x0);
        gbc.writeMem(0x4cdd, { 0xcb, 0xbe });
        gbc.writeMem(0x84c5, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7680);
        EXPECT(gbc.pc(), 0x4cdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c5), 0x3b);
        // CB BE 02E4
        gbc.setState(0x45c4, 0xcfe7, 0xb950, 0x3d66, 0x279c, 0xe7b, 0x1, 0x1);
        gbc.writeMem(0xe7b, { 0x6b });
        gbc.writeMem(0x45c4, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xcfe7);
        EXPECT(gbc.pc(), 0x45c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 02E5
        gbc.setState(0x1e4e, 0x6a2b, 0x3d50, 0x7788, 0xae7c, 0x6df2, 0x0, 0x1);
        gbc.writeMem(0x1e4e, { 0xcb, 0xbe });
        gbc.writeMem(0x6df2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6a2b);
        EXPECT(gbc.pc(), 0x1e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 02E6
        gbc.setState(0x39f1, 0xe31b, 0xf600, 0xa21b, 0x9f34, 0x5716, 0x1, 0x0);
        gbc.writeMem(0x39f1, { 0xcb, 0xbe });
        gbc.writeMem(0x5716, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe31b);
        EXPECT(gbc.pc(), 0x39f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 02E7
        gbc.setState(0x2d3f, 0xe02f, 0xb470, 0x5e57, 0x41b2, 0xde07, 0x1, 0x1);
        gbc.writeMem(0x2d3f, { 0xcb, 0xbe });
        gbc.writeMem(0xde07, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe02f);
        EXPECT(gbc.pc(), 0x2d41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde07), 0x6c);
        // CB BE 02E8
        gbc.setState(0x60fa, 0x3f39, 0xf880, 0xd300, 0x7bb1, 0x1d34, 0x0, 0x1);
        gbc.writeMem(0x1d34, { 0xd });
        gbc.writeMem(0x60fa, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3f39);
        EXPECT(gbc.pc(), 0x60fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 02E9
        gbc.setState(0x1047, 0x3869, 0xa550, 0x260a, 0x328d, 0x1da8, 0x0, 0x0);
        gbc.writeMem(0x1047, { 0xcb, 0xbe });
        gbc.writeMem(0x1da8, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3869);
        EXPECT(gbc.pc(), 0x1049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 02EA
        gbc.setState(0x2517, 0xdf94, 0xad00, 0xe594, 0xf6ba, 0xd1bd, 0x1, 0x1);
        gbc.writeMem(0x2517, { 0xcb, 0xbe });
        gbc.writeMem(0xd1bd, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdf94);
        EXPECT(gbc.pc(), 0x2519);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1bd), 0x74);
        // CB BE 02EB
        gbc.setState(0x89d5, 0xd9c4, 0x6c90, 0x7339, 0x6596, 0xbaa0, 0x0, 0x0);
        gbc.writeMem(0x89d5, { 0xcb, 0xbe });
        gbc.writeMem(0xbaa0, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd9c4);
        EXPECT(gbc.pc(), 0x89d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89d5), 0xcb);
        EXPECT(gbc.readMem(0x89d6), 0xbe);
        EXPECT(gbc.readMem(0xbaa0), 0x3f);
        // CB BE 02EC
        gbc.setState(0x9a9b, 0x940c, 0xae80, 0xb983, 0x7b4c, 0xf08f, 0x1, 0x1);
        gbc.writeMem(0x9a9b, { 0xcb, 0xbe });
        gbc.writeMem(0xf08f, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x940c);
        EXPECT(gbc.pc(), 0x9a9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a9b), 0xcb);
        EXPECT(gbc.readMem(0x9a9c), 0xbe);
        EXPECT(gbc.readMem(0xf08f), 0x36);
        // CB BE 02ED
        gbc.setState(0x9f4d, 0xddf9, 0xe450, 0x5866, 0x3783, 0x150, 0x0, 0x0);
        gbc.writeMem(0x150, { 0x3a });
        gbc.writeMem(0x9f4d, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xddf9);
        EXPECT(gbc.pc(), 0x9f4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f4d), 0xcb);
        EXPECT(gbc.readMem(0x9f4e), 0xbe);
        // CB BE 02EF
        gbc.setState(0x11b8, 0x99ea, 0x4c0, 0x896a, 0xbe55, 0xfd62, 0x1, 0x0);
        gbc.writeMem(0x11b8, { 0xcb, 0xbe });
        gbc.writeMem(0xfd62, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x99ea);
        EXPECT(gbc.pc(), 0x11ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfd62), 0x34);
        // CB BE 02F1
        gbc.setState(0x1450, 0xdad5, 0xbf50, 0x6dde, 0x41f3, 0xb6e3, 0x1, 0x0);
        gbc.writeMem(0x1450, { 0xcb, 0xbe });
        gbc.writeMem(0xb6e3, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xdad5);
        EXPECT(gbc.pc(), 0x1452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6e3), 0x2a);
        // CB BE 02F2
        gbc.setState(0x504d, 0xc3d4, 0x1cf0, 0xb101, 0x6719, 0x6c30, 0x0, 0x1);
        gbc.writeMem(0x504d, { 0xcb, 0xbe });
        gbc.writeMem(0x6c30, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc3d4);
        EXPECT(gbc.pc(), 0x504f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 02F3
        gbc.setState(0x8eba, 0xa31e, 0x70d0, 0x2841, 0x7b69, 0x91dd, 0x0, 0x0);
        gbc.writeMem(0x8eba, { 0xcb, 0xbe });
        gbc.writeMem(0x91dd, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa31e);
        EXPECT(gbc.pc(), 0x8ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eba), 0xcb);
        EXPECT(gbc.readMem(0x8ebb), 0xbe);
        EXPECT(gbc.readMem(0x91dd), 0x54);
        // CB BE 02F5
        gbc.setState(0xc8a8, 0xa352, 0xaca0, 0x7331, 0xc491, 0xc840, 0x1, 0x1);
        gbc.writeMem(0xc840, { 0x6 });
        gbc.writeMem(0xc8a8, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa352);
        EXPECT(gbc.pc(), 0xc8aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc840), 0x6);
        EXPECT(gbc.readMem(0xc8a8), 0xcb);
        EXPECT(gbc.readMem(0xc8a9), 0xbe);
        // CB BE 02F6
        gbc.setState(0xa9bb, 0xaba, 0x39b0, 0x206c, 0xc4a3, 0xb29a, 0x1, 0x1);
        gbc.writeMem(0xa9bb, { 0xcb, 0xbe });
        gbc.writeMem(0xb29a, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xaba);
        EXPECT(gbc.pc(), 0xa9bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9bb), 0xcb);
        EXPECT(gbc.readMem(0xa9bc), 0xbe);
        EXPECT(gbc.readMem(0xb29a), 0x63);
        // CB BE 02F8
        gbc.setState(0xaeec, 0xc551, 0x250, 0xc698, 0xaa51, 0xafa6, 0x0, 0x0);
        gbc.writeMem(0xaeec, { 0xcb, 0xbe });
        gbc.writeMem(0xafa6, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc551);
        EXPECT(gbc.pc(), 0xaeee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeec), 0xcb);
        EXPECT(gbc.readMem(0xaeed), 0xbe);
        EXPECT(gbc.readMem(0xafa6), 0x1c);
        // CB BE 02FB
        gbc.setState(0x8d63, 0xb467, 0x8520, 0x1fee, 0xee96, 0x73ad, 0x1, 0x1);
        gbc.writeMem(0x73ad, { 0x7c });
        gbc.writeMem(0x8d63, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb467);
        EXPECT(gbc.pc(), 0x8d65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d63), 0xcb);
        EXPECT(gbc.readMem(0x8d64), 0xbe);
        // CB BE 02FC
        gbc.setState(0x32fe, 0xc5a1, 0x3ef0, 0x3526, 0xdf0d, 0x5ba, 0x0, 0x0);
        gbc.writeMem(0x5ba, { 0x2c });
        gbc.writeMem(0x32fe, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc5a1);
        EXPECT(gbc.pc(), 0x3300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 02FE
        gbc.setState(0x8505, 0x97ba, 0x4d60, 0x2641, 0xccb, 0x7ce0, 0x0, 0x1);
        gbc.writeMem(0x7ce0, { 0x1 });
        gbc.writeMem(0x8505, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x97ba);
        EXPECT(gbc.pc(), 0x8507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8505), 0xcb);
        EXPECT(gbc.readMem(0x8506), 0xbe);
        // CB BE 02FF
        gbc.setState(0x94f5, 0x9373, 0x1b20, 0x1e7f, 0x781b, 0x7e2c, 0x0, 0x0);
        gbc.writeMem(0x7e2c, { 0x3e });
        gbc.writeMem(0x94f5, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9373);
        EXPECT(gbc.pc(), 0x94f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f5), 0xcb);
        EXPECT(gbc.readMem(0x94f6), 0xbe);
        // CB BE 0301
        gbc.setState(0xde0, 0x3efe, 0x6970, 0x60b3, 0x8b33, 0x8439, 0x0, 0x1);
        gbc.writeMem(0xde0, { 0xcb, 0xbe });
        gbc.writeMem(0x8439, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3efe);
        EXPECT(gbc.pc(), 0xde2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8439), 0x42);
        // CB BE 0302
        gbc.setState(0x6659, 0xfdfd, 0x8410, 0x73e2, 0x6295, 0xd49d, 0x1, 0x0);
        gbc.writeMem(0x6659, { 0xcb, 0xbe });
        gbc.writeMem(0xd49d, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xfdfd);
        EXPECT(gbc.pc(), 0x665b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd49d), 0x6e);
        // CB BE 0303
        gbc.setState(0xec1f, 0x6674, 0x8c00, 0xf53e, 0x5c12, 0x9948, 0x1, 0x1);
        gbc.writeMem(0x9948, { 0x5d });
        gbc.writeMem(0xec1f, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6674);
        EXPECT(gbc.pc(), 0xec21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9948), 0x5d);
        EXPECT(gbc.readMem(0xec1f), 0xcb);
        EXPECT(gbc.readMem(0xec20), 0xbe);
        // CB BE 0304
        gbc.setState(0x4b7, 0xbaea, 0x1bc0, 0xbc79, 0x19cd, 0x4f74, 0x1, 0x1);
        gbc.writeMem(0x4b7, { 0xcb, 0xbe });
        gbc.writeMem(0x4f74, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbaea);
        EXPECT(gbc.pc(), 0x4b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0305
        gbc.setState(0x914d, 0xb167, 0xda70, 0x98d, 0xe55e, 0xc9aa, 0x0, 0x1);
        gbc.writeMem(0x914d, { 0xcb, 0xbe });
        gbc.writeMem(0xc9aa, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb167);
        EXPECT(gbc.pc(), 0x914f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x914d), 0xcb);
        EXPECT(gbc.readMem(0x914e), 0xbe);
        EXPECT(gbc.readMem(0xc9aa), 0x4f);
        // CB BE 0306
        gbc.setState(0xd5ad, 0xa1ec, 0x20d0, 0x8e4f, 0xf5c5, 0xd781, 0x1, 0x0);
        gbc.writeMem(0xd5ad, { 0xcb, 0xbe });
        gbc.writeMem(0xd781, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa1ec);
        EXPECT(gbc.pc(), 0xd5af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ad), 0xcb);
        EXPECT(gbc.readMem(0xd5ae), 0xbe);
        EXPECT(gbc.readMem(0xd781), 0x69);
        // CB BE 0308
        gbc.setState(0xad5c, 0xe19, 0xa5c0, 0x7a6f, 0x2513, 0x7996, 0x0, 0x1);
        gbc.writeMem(0x7996, { 0x6d });
        gbc.writeMem(0xad5c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe19);
        EXPECT(gbc.pc(), 0xad5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad5c), 0xcb);
        EXPECT(gbc.readMem(0xad5d), 0xbe);
        // CB BE 0309
        gbc.setState(0x3935, 0x93e7, 0x38f0, 0xe440, 0x850a, 0xa0f4, 0x0, 0x1);
        gbc.writeMem(0x3935, { 0xcb, 0xbe });
        gbc.writeMem(0xa0f4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x93e7);
        EXPECT(gbc.pc(), 0x3937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f4), 0x4a);
        // CB BE 030A
        gbc.setState(0x1ba7, 0xf20a, 0xc990, 0x3f0a, 0x705e, 0x34be, 0x0, 0x1);
        gbc.writeMem(0x1ba7, { 0xcb, 0xbe });
        gbc.writeMem(0x34be, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf20a);
        EXPECT(gbc.pc(), 0x1ba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 030B
        gbc.setState(0x3730, 0x1fcf, 0xc10, 0x6576, 0xd947, 0x56d6, 0x1, 0x1);
        gbc.writeMem(0x3730, { 0xcb, 0xbe });
        gbc.writeMem(0x56d6, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1fcf);
        EXPECT(gbc.pc(), 0x3732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 030C
        gbc.setState(0xe204, 0x6393, 0x4a00, 0x8d0f, 0x6cdf, 0x3904, 0x1, 0x1);
        gbc.writeMem(0x3904, { 0x18 });
        gbc.writeMem(0xe204, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6393);
        EXPECT(gbc.pc(), 0xe206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe204), 0xcb);
        EXPECT(gbc.readMem(0xe205), 0xbe);
        // CB BE 030D
        gbc.setState(0xd18b, 0xaecc, 0xd160, 0xf276, 0xcf59, 0x1a7f, 0x0, 0x1);
        gbc.writeMem(0x1a7f, { 0x63 });
        gbc.writeMem(0xd18b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xaecc);
        EXPECT(gbc.pc(), 0xd18d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd18b), 0xcb);
        EXPECT(gbc.readMem(0xd18c), 0xbe);
        // CB BE 030E
        gbc.setState(0x41c6, 0x510e, 0x97f0, 0x7074, 0x1601, 0xad17, 0x1, 0x1);
        gbc.writeMem(0x41c6, { 0xcb, 0xbe });
        gbc.writeMem(0xad17, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x510e);
        EXPECT(gbc.pc(), 0x41c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad17), 0x34);
        // CB BE 0310
        gbc.setState(0x2094, 0x4438, 0x1340, 0xc7f4, 0x475f, 0x32c1, 0x0, 0x1);
        gbc.writeMem(0x2094, { 0xcb, 0xbe });
        gbc.writeMem(0x32c1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4438);
        EXPECT(gbc.pc(), 0x2096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0311
        gbc.setState(0xa916, 0x24fb, 0x83f0, 0xd4fb, 0x1316, 0x667f, 0x0, 0x1);
        gbc.writeMem(0x667f, { 0x8 });
        gbc.writeMem(0xa916, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x24fb);
        EXPECT(gbc.pc(), 0xa918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa916), 0xcb);
        EXPECT(gbc.readMem(0xa917), 0xbe);
        // CB BE 0312
        gbc.setState(0xa284, 0x818b, 0xc0, 0x834a, 0xcffd, 0x8844, 0x0, 0x0);
        gbc.writeMem(0x8844, { 0x7e });
        gbc.writeMem(0xa284, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x818b);
        EXPECT(gbc.pc(), 0xa286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8844), 0x7e);
        EXPECT(gbc.readMem(0xa284), 0xcb);
        EXPECT(gbc.readMem(0xa285), 0xbe);
        // CB BE 0314
        gbc.setState(0x26e, 0x810b, 0xe7e0, 0x6ea, 0x7849, 0x8ee8, 0x0, 0x1);
        gbc.writeMem(0x26e, { 0xcb, 0xbe });
        gbc.writeMem(0x8ee8, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x810b);
        EXPECT(gbc.pc(), 0x270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee8), 0x26);
        // CB BE 0315
        gbc.setState(0xc3eb, 0x172f, 0x1660, 0x2e05, 0xae50, 0xbcb7, 0x1, 0x1);
        gbc.writeMem(0xbcb7, { 0x6a });
        gbc.writeMem(0xc3eb, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x172f);
        EXPECT(gbc.pc(), 0xc3ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcb7), 0x6a);
        EXPECT(gbc.readMem(0xc3eb), 0xcb);
        EXPECT(gbc.readMem(0xc3ec), 0xbe);
        // CB BE 0318
        gbc.setState(0xdc2c, 0x892a, 0x2ee0, 0xe29e, 0x2869, 0x73ce, 0x1, 0x1);
        gbc.writeMem(0x73ce, { 0x9 });
        gbc.writeMem(0xdc2c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x892a);
        EXPECT(gbc.pc(), 0xdc2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc2c), 0xcb);
        EXPECT(gbc.readMem(0xdc2d), 0xbe);
        // CB BE 0319
        gbc.setState(0xde35, 0x260d, 0x79c0, 0x9d01, 0x9042, 0xa82e, 0x1, 0x1);
        gbc.writeMem(0xa82e, { 0x17 });
        gbc.writeMem(0xde35, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x260d);
        EXPECT(gbc.pc(), 0xde37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82e), 0x17);
        EXPECT(gbc.readMem(0xde35), 0xcb);
        EXPECT(gbc.readMem(0xde36), 0xbe);
        // CB BE 031D
        gbc.setState(0x89d4, 0x1ef4, 0x2ae0, 0x6ccc, 0x8a4f, 0x7f67, 0x0, 0x0);
        gbc.writeMem(0x7f67, { 0x51 });
        gbc.writeMem(0x89d4, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x1ef4);
        EXPECT(gbc.pc(), 0x89d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d4), 0xcb);
        EXPECT(gbc.readMem(0x89d5), 0xbe);
        // CB BE 031E
        gbc.setState(0xdc3f, 0xc4c9, 0xf460, 0xd74f, 0xd498, 0x7389, 0x0, 0x1);
        gbc.writeMem(0x7389, { 0x4d });
        gbc.writeMem(0xdc3f, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc4c9);
        EXPECT(gbc.pc(), 0xdc41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc3f), 0xcb);
        EXPECT(gbc.readMem(0xdc40), 0xbe);
        // CB BE 031F
        gbc.setState(0x44c, 0xaade, 0xc950, 0x9e79, 0xfbe9, 0x4d4d, 0x0, 0x0);
        gbc.writeMem(0x44c, { 0xcb, 0xbe });
        gbc.writeMem(0x4d4d, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xaade);
        EXPECT(gbc.pc(), 0x44e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0320
        gbc.setState(0x2fa6, 0xdba6, 0x23e0, 0x3bf2, 0x5a53, 0x8666, 0x0, 0x0);
        gbc.writeMem(0x2fa6, { 0xcb, 0xbe });
        gbc.writeMem(0x8666, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdba6);
        EXPECT(gbc.pc(), 0x2fa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8666), 0x1f);
        // CB BE 0321
        gbc.setState(0x7026, 0xbd0b, 0xf490, 0xc720, 0x6f62, 0xd7f3, 0x1, 0x1);
        gbc.writeMem(0x7026, { 0xcb, 0xbe });
        gbc.writeMem(0xd7f3, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbd0b);
        EXPECT(gbc.pc(), 0x7028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f3), 0x26);
        // CB BE 0322
        gbc.setState(0x14e2, 0xccb, 0x64b0, 0x9d1c, 0x281f, 0x9915, 0x0, 0x0);
        gbc.writeMem(0x14e2, { 0xcb, 0xbe });
        gbc.writeMem(0x9915, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xccb);
        EXPECT(gbc.pc(), 0x14e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9915), 0x62);
        // CB BE 0323
        gbc.setState(0x5c45, 0x3d0c, 0xaa30, 0xbf2a, 0x8309, 0xb86e, 0x1, 0x0);
        gbc.writeMem(0x5c45, { 0xcb, 0xbe });
        gbc.writeMem(0xb86e, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3d0c);
        EXPECT(gbc.pc(), 0x5c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb86e), 0x15);
        // CB BE 0324
        gbc.setState(0xc235, 0x4a75, 0xa920, 0xe9eb, 0x5ee4, 0x153f, 0x1, 0x0);
        gbc.writeMem(0x153f, { 0x0 });
        gbc.writeMem(0xc235, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4a75);
        EXPECT(gbc.pc(), 0xc237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc235), 0xcb);
        EXPECT(gbc.readMem(0xc236), 0xbe);
        // CB BE 0325
        gbc.setState(0xced4, 0xd78c, 0x44e0, 0x6254, 0xab0e, 0x3d63, 0x0, 0x1);
        gbc.writeMem(0x3d63, { 0x61 });
        gbc.writeMem(0xced4, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd78c);
        EXPECT(gbc.pc(), 0xced6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced4), 0xcb);
        EXPECT(gbc.readMem(0xced5), 0xbe);
        // CB BE 0326
        gbc.setState(0x57, 0xb5e8, 0xeca0, 0x6492, 0x6afd, 0xdad, 0x1, 0x0);
        gbc.writeMem(0x57, { 0xcb, 0xbe });
        gbc.writeMem(0xdad, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb5e8);
        EXPECT(gbc.pc(), 0x59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0327
        gbc.setState(0x86d7, 0x3b0, 0xd450, 0x3234, 0x791d, 0xbedb, 0x1, 0x1);
        gbc.writeMem(0x86d7, { 0xcb, 0xbe });
        gbc.writeMem(0xbedb, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3b0);
        EXPECT(gbc.pc(), 0x86d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d7), 0xcb);
        EXPECT(gbc.readMem(0x86d8), 0xbe);
        EXPECT(gbc.readMem(0xbedb), 0x67);
        // CB BE 0328
        gbc.setState(0xb463, 0xc644, 0xee0, 0x686d, 0x2efe, 0xd0e0, 0x0, 0x1);
        gbc.writeMem(0xb463, { 0xcb, 0xbe });
        gbc.writeMem(0xd0e0, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc644);
        EXPECT(gbc.pc(), 0xb465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb463), 0xcb);
        EXPECT(gbc.readMem(0xb464), 0xbe);
        EXPECT(gbc.readMem(0xd0e0), 0x1f);
        // CB BE 0329
        gbc.setState(0xe840, 0x86bc, 0x7fa0, 0xe409, 0xe52e, 0xf8f8, 0x1, 0x1);
        gbc.writeMem(0xe840, { 0xcb, 0xbe });
        gbc.writeMem(0xf8f8, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x86bc);
        EXPECT(gbc.pc(), 0xe842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe840), 0xcb);
        EXPECT(gbc.readMem(0xe841), 0xbe);
        EXPECT(gbc.readMem(0xf8f8), 0x6d);
        // CB BE 032A
        gbc.setState(0xeb04, 0xd8e9, 0xbb40, 0x7efb, 0x46d2, 0x336e, 0x0, 0x1);
        gbc.writeMem(0x336e, { 0x68 });
        gbc.writeMem(0xeb04, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd8e9);
        EXPECT(gbc.pc(), 0xeb06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb04), 0xcb);
        EXPECT(gbc.readMem(0xeb05), 0xbe);
        // CB BE 032B
        gbc.setState(0x7bfc, 0xe63f, 0xdaf0, 0xa605, 0xe889, 0xa31c, 0x1, 0x1);
        gbc.writeMem(0x7bfc, { 0xcb, 0xbe });
        gbc.writeMem(0xa31c, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe63f);
        EXPECT(gbc.pc(), 0x7bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa31c), 0x69);
        // CB BE 032C
        gbc.setState(0xdaab, 0x508c, 0xc4f0, 0x429f, 0x5a73, 0xe98a, 0x0, 0x0);
        gbc.writeMem(0xdaab, { 0xcb, 0xbe });
        gbc.writeMem(0xe98a, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x508c);
        EXPECT(gbc.pc(), 0xdaad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaab), 0xcb);
        EXPECT(gbc.readMem(0xdaac), 0xbe);
        EXPECT(gbc.readMem(0xe98a), 0x41);
        // CB BE 032D
        gbc.setState(0xafa7, 0xb78f, 0xb550, 0xdcf7, 0x1f3a, 0xd7e7, 0x0, 0x1);
        gbc.writeMem(0xafa7, { 0xcb, 0xbe });
        gbc.writeMem(0xd7e7, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb78f);
        EXPECT(gbc.pc(), 0xafa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa7), 0xcb);
        EXPECT(gbc.readMem(0xafa8), 0xbe);
        EXPECT(gbc.readMem(0xd7e7), 0x69);
        // CB BE 032E
        gbc.setState(0x8dbb, 0xf10d, 0x6fe0, 0xb2a7, 0xe613, 0x63c3, 0x1, 0x0);
        gbc.writeMem(0x63c3, { 0x51 });
        gbc.writeMem(0x8dbb, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf10d);
        EXPECT(gbc.pc(), 0x8dbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dbb), 0xcb);
        EXPECT(gbc.readMem(0x8dbc), 0xbe);
        // CB BE 0331
        gbc.setState(0x4ddc, 0x24e9, 0xa70, 0x5021, 0x5c4b, 0x980d, 0x0, 0x1);
        gbc.writeMem(0x4ddc, { 0xcb, 0xbe });
        gbc.writeMem(0x980d, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x24e9);
        EXPECT(gbc.pc(), 0x4dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x980d), 0x24);
        // CB BE 0332
        gbc.setState(0x1c00, 0x43a1, 0x16a0, 0xf946, 0x12c4, 0xcb59, 0x1, 0x1);
        gbc.writeMem(0x1c00, { 0xcb, 0xbe });
        gbc.writeMem(0xcb59, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x43a1);
        EXPECT(gbc.pc(), 0x1c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb59), 0xc);
        // CB BE 0333
        gbc.setState(0x9ff0, 0x3262, 0xa70, 0x226e, 0x27ea, 0x4d63, 0x0, 0x1);
        gbc.writeMem(0x4d63, { 0x1f });
        gbc.writeMem(0x9ff0, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3262);
        EXPECT(gbc.pc(), 0x9ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff0), 0xcb);
        EXPECT(gbc.readMem(0x9ff1), 0xbe);
        // CB BE 0334
        gbc.setState(0x6392, 0x74df, 0xcfa0, 0x66cf, 0x3278, 0x413d, 0x0, 0x1);
        gbc.writeMem(0x413d, { 0x60 });
        gbc.writeMem(0x6392, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x74df);
        EXPECT(gbc.pc(), 0x6394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0335
        gbc.setState(0x944d, 0x543a, 0xf430, 0x832b, 0x5997, 0x91e3, 0x0, 0x1);
        gbc.writeMem(0x91e3, { 0x35 });
        gbc.writeMem(0x944d, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x543a);
        EXPECT(gbc.pc(), 0x944f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e3), 0x35);
        EXPECT(gbc.readMem(0x944d), 0xcb);
        EXPECT(gbc.readMem(0x944e), 0xbe);
        // CB BE 0338
        gbc.setState(0x371, 0x368f, 0x4c00, 0xae1e, 0x55ff, 0x5b96, 0x0, 0x1);
        gbc.writeMem(0x371, { 0xcb, 0xbe });
        gbc.writeMem(0x5b96, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x368f);
        EXPECT(gbc.pc(), 0x373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0339
        gbc.setState(0x3e62, 0xa84b, 0x8480, 0xa05a, 0x765b, 0x838a, 0x1, 0x1);
        gbc.writeMem(0x3e62, { 0xcb, 0xbe });
        gbc.writeMem(0x838a, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa84b);
        EXPECT(gbc.pc(), 0x3e64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x838a), 0x23);
        // CB BE 033B
        gbc.setState(0x4a22, 0xb010, 0xce0, 0xb5d4, 0x181, 0x2532, 0x0, 0x0);
        gbc.writeMem(0x2532, { 0x51 });
        gbc.writeMem(0x4a22, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb010);
        EXPECT(gbc.pc(), 0x4a24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 033D
        gbc.setState(0xd057, 0x5b54, 0x8ff0, 0xf068, 0x812c, 0x6e35, 0x1, 0x0);
        gbc.writeMem(0x6e35, { 0x7a });
        gbc.writeMem(0xd057, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5b54);
        EXPECT(gbc.pc(), 0xd059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd057), 0xcb);
        EXPECT(gbc.readMem(0xd058), 0xbe);
        // CB BE 033F
        gbc.setState(0x4155, 0x7c4e, 0x4d00, 0xb61d, 0x92a7, 0x8b26, 0x0, 0x0);
        gbc.writeMem(0x4155, { 0xcb, 0xbe });
        gbc.writeMem(0x8b26, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7c4e);
        EXPECT(gbc.pc(), 0x4157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b26), 0x6c);
        // CB BE 0340
        gbc.setState(0xa3b6, 0x9bb4, 0x77f0, 0x5a30, 0xfdf0, 0xd574, 0x0, 0x1);
        gbc.writeMem(0xa3b6, { 0xcb, 0xbe });
        gbc.writeMem(0xd574, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9bb4);
        EXPECT(gbc.pc(), 0xa3b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3b6), 0xcb);
        EXPECT(gbc.readMem(0xa3b7), 0xbe);
        EXPECT(gbc.readMem(0xd574), 0x64);
        // CB BE 0343
        gbc.setState(0x41f2, 0xcfa, 0x16a0, 0x5449, 0xba79, 0xf3ad, 0x1, 0x1);
        gbc.writeMem(0x41f2, { 0xcb, 0xbe });
        gbc.writeMem(0xf3ad, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xcfa);
        EXPECT(gbc.pc(), 0x41f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf3ad), 0x4a);
        // CB BE 0344
        gbc.setState(0x65fe, 0x93c, 0xb50, 0x494c, 0xc8d0, 0x7381, 0x1, 0x1);
        gbc.writeMem(0x65fe, { 0xcb, 0xbe });
        gbc.writeMem(0x7381, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x93c);
        EXPECT(gbc.pc(), 0x6600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0346
        gbc.setState(0x1a08, 0x236d, 0x4770, 0x9fd7, 0xb0aa, 0x2dca, 0x0, 0x1);
        gbc.writeMem(0x1a08, { 0xcb, 0xbe });
        gbc.writeMem(0x2dca, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x236d);
        EXPECT(gbc.pc(), 0x1a0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0347
        gbc.setState(0x5c47, 0x4a15, 0x8860, 0x5d64, 0x62b7, 0xc016, 0x0, 0x1);
        gbc.writeMem(0x5c47, { 0xcb, 0xbe });
        gbc.writeMem(0xc016, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4a15);
        EXPECT(gbc.pc(), 0x5c49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc016), 0x9);
        // CB BE 0348
        gbc.setState(0x972d, 0x1ab6, 0x50c0, 0xdd36, 0xb586, 0x2acb, 0x0, 0x1);
        gbc.writeMem(0x2acb, { 0x2e });
        gbc.writeMem(0x972d, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1ab6);
        EXPECT(gbc.pc(), 0x972f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x972d), 0xcb);
        EXPECT(gbc.readMem(0x972e), 0xbe);
        // CB BE 034A
        gbc.setState(0x1504, 0x26b8, 0xe3f0, 0x14f8, 0x3db1, 0xdfda, 0x0, 0x0);
        gbc.writeMem(0x1504, { 0xcb, 0xbe });
        gbc.writeMem(0xdfda, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x26b8);
        EXPECT(gbc.pc(), 0x1506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfda), 0x3b);
        // CB BE 034B
        gbc.setState(0xef4c, 0x69cd, 0x9c00, 0xfeee, 0x95f6, 0xf6b0, 0x1, 0x0);
        gbc.writeMem(0xef4c, { 0xcb, 0xbe });
        gbc.writeMem(0xf6b0, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x69cd);
        EXPECT(gbc.pc(), 0xef4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef4c), 0xcb);
        EXPECT(gbc.readMem(0xef4d), 0xbe);
        EXPECT(gbc.readMem(0xf6b0), 0x1c);
        // CB BE 034C
        gbc.setState(0x491, 0xf104, 0xa100, 0xbf37, 0xe9fc, 0xec4b, 0x0, 0x0);
        gbc.writeMem(0x491, { 0xcb, 0xbe });
        gbc.writeMem(0xec4b, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf104);
        EXPECT(gbc.pc(), 0x493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec4b), 0x70);
        // CB BE 034D
        gbc.setState(0x459, 0xcbe5, 0xd030, 0x61da, 0xf7f4, 0x81a3, 0x1, 0x1);
        gbc.writeMem(0x459, { 0xcb, 0xbe });
        gbc.writeMem(0x81a3, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xcbe5);
        EXPECT(gbc.pc(), 0x45b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81a3), 0x27);
        // CB BE 034F
        gbc.setState(0xa8b1, 0xedda, 0x8730, 0xfaf, 0x3aa1, 0x7a74, 0x0, 0x1);
        gbc.writeMem(0x7a74, { 0x4d });
        gbc.writeMem(0xa8b1, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xedda);
        EXPECT(gbc.pc(), 0xa8b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8b1), 0xcb);
        EXPECT(gbc.readMem(0xa8b2), 0xbe);
        // CB BE 0350
        gbc.setState(0xa59f, 0x3a72, 0x2610, 0x9249, 0x9d7e, 0x82bc, 0x1, 0x0);
        gbc.writeMem(0x82bc, { 0xd9 });
        gbc.writeMem(0xa59f, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3a72);
        EXPECT(gbc.pc(), 0xa5a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82bc), 0x59);
        EXPECT(gbc.readMem(0xa59f), 0xcb);
        EXPECT(gbc.readMem(0xa5a0), 0xbe);
        // CB BE 0351
        gbc.setState(0x5f85, 0x9168, 0x4ec0, 0xc271, 0xee0, 0xb3d4, 0x0, 0x0);
        gbc.writeMem(0x5f85, { 0xcb, 0xbe });
        gbc.writeMem(0xb3d4, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9168);
        EXPECT(gbc.pc(), 0x5f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d4), 0x28);
        // CB BE 0352
        gbc.setState(0x324b, 0x647b, 0x7690, 0x8c84, 0x48c5, 0xa83d, 0x0, 0x0);
        gbc.writeMem(0x324b, { 0xcb, 0xbe });
        gbc.writeMem(0xa83d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x647b);
        EXPECT(gbc.pc(), 0x324d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa83d), 0x59);
        // CB BE 0353
        gbc.setState(0xc2c9, 0xb273, 0x8000, 0xc406, 0x1bdf, 0xf31a, 0x1, 0x1);
        gbc.writeMem(0xc2c9, { 0xcb, 0xbe });
        gbc.writeMem(0xf31a, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb273);
        EXPECT(gbc.pc(), 0xc2cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c9), 0xcb);
        EXPECT(gbc.readMem(0xc2ca), 0xbe);
        EXPECT(gbc.readMem(0xf31a), 0x4d);
        // CB BE 0354
        gbc.setState(0xa15d, 0xa0cd, 0x3660, 0x7eff, 0xd27a, 0x7024, 0x1, 0x1);
        gbc.writeMem(0x7024, { 0x61 });
        gbc.writeMem(0xa15d, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa0cd);
        EXPECT(gbc.pc(), 0xa15f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa15d), 0xcb);
        EXPECT(gbc.readMem(0xa15e), 0xbe);
        // CB BE 0355
        gbc.setState(0x5e18, 0xe1fb, 0x63a0, 0x3f32, 0xe6dc, 0xcbca, 0x0, 0x1);
        gbc.writeMem(0x5e18, { 0xcb, 0xbe });
        gbc.writeMem(0xcbca, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe1fb);
        EXPECT(gbc.pc(), 0x5e1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbca), 0x65);
        // CB BE 0357
        gbc.setState(0x4d6a, 0xc603, 0x3f40, 0xd01a, 0xa503, 0xb871, 0x1, 0x1);
        gbc.writeMem(0x4d6a, { 0xcb, 0xbe });
        gbc.writeMem(0xb871, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc603);
        EXPECT(gbc.pc(), 0x4d6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb871), 0x2a);
        // CB BE 0359
        gbc.setState(0x6621, 0x9403, 0x9050, 0xa334, 0xc4f7, 0xc5c6, 0x0, 0x0);
        gbc.writeMem(0x6621, { 0xcb, 0xbe });
        gbc.writeMem(0xc5c6, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9403);
        EXPECT(gbc.pc(), 0x6623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c6), 0x40);
        // CB BE 035A
        gbc.setState(0xca7d, 0x1226, 0x16a0, 0xc8d5, 0x65d2, 0xe473, 0x1, 0x1);
        gbc.writeMem(0xca7d, { 0xcb, 0xbe });
        gbc.writeMem(0xe473, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1226);
        EXPECT(gbc.pc(), 0xca7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca7d), 0xcb);
        EXPECT(gbc.readMem(0xca7e), 0xbe);
        EXPECT(gbc.readMem(0xe473), 0x2a);
        // CB BE 035B
        gbc.setState(0xe474, 0xe170, 0x9910, 0xad63, 0xfef1, 0xb83f, 0x0, 0x1);
        gbc.writeMem(0xb83f, { 0x91 });
        gbc.writeMem(0xe474, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe170);
        EXPECT(gbc.pc(), 0xe476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb83f), 0x11);
        EXPECT(gbc.readMem(0xe474), 0xcb);
        EXPECT(gbc.readMem(0xe475), 0xbe);
        // CB BE 035C
        gbc.setState(0xd35, 0xb132, 0x66e0, 0xab24, 0x4e8e, 0x925e, 0x0, 0x1);
        gbc.writeMem(0xd35, { 0xcb, 0xbe });
        gbc.writeMem(0x925e, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb132);
        EXPECT(gbc.pc(), 0xd37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x925e), 0x45);
        // CB BE 035D
        gbc.setState(0xef38, 0xaf0c, 0xde60, 0x6d08, 0x2a01, 0x8e0c, 0x0, 0x1);
        gbc.writeMem(0x8e0c, { 0xfc });
        gbc.writeMem(0xef38, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xaf0c);
        EXPECT(gbc.pc(), 0xef3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e0c), 0x7c);
        EXPECT(gbc.readMem(0xef38), 0xcb);
        EXPECT(gbc.readMem(0xef39), 0xbe);
        // CB BE 035E
        gbc.setState(0xd49e, 0xe68a, 0x4b60, 0xbfcd, 0xaa0, 0xf8c2, 0x0, 0x0);
        gbc.writeMem(0xd49e, { 0xcb, 0xbe });
        gbc.writeMem(0xf8c2, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe68a);
        EXPECT(gbc.pc(), 0xd4a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd49e), 0xcb);
        EXPECT(gbc.readMem(0xd49f), 0xbe);
        EXPECT(gbc.readMem(0xf8c2), 0x3d);
        // CB BE 035F
        gbc.setState(0x32e6, 0xed31, 0x9360, 0x67d5, 0x2b2b, 0x6e56, 0x1, 0x1);
        gbc.writeMem(0x32e6, { 0xcb, 0xbe });
        gbc.writeMem(0x6e56, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xed31);
        EXPECT(gbc.pc(), 0x32e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0361
        gbc.setState(0xed0c, 0xe20c, 0xda60, 0x5193, 0xe316, 0x18db, 0x1, 0x0);
        gbc.writeMem(0x18db, { 0x6d });
        gbc.writeMem(0xed0c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe20c);
        EXPECT(gbc.pc(), 0xed0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed0c), 0xcb);
        EXPECT(gbc.readMem(0xed0d), 0xbe);
        // CB BE 0362
        gbc.setState(0x607, 0xbd7a, 0x69d0, 0x864d, 0x5c81, 0xbdd2, 0x1, 0x0);
        gbc.writeMem(0x607, { 0xcb, 0xbe });
        gbc.writeMem(0xbdd2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xbd7a);
        EXPECT(gbc.pc(), 0x609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdd2), 0x45);
        // CB BE 0365
        gbc.setState(0xba7e, 0x35a7, 0xf8d0, 0xd1e3, 0x9528, 0xc9d9, 0x1, 0x0);
        gbc.writeMem(0xba7e, { 0xcb, 0xbe });
        gbc.writeMem(0xc9d9, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x35a7);
        EXPECT(gbc.pc(), 0xba80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba7e), 0xcb);
        EXPECT(gbc.readMem(0xba7f), 0xbe);
        EXPECT(gbc.readMem(0xc9d9), 0x5b);
        // CB BE 0367
        gbc.setState(0xd49a, 0xe9b4, 0xfcc0, 0x6492, 0x9ebc, 0xe02a, 0x0, 0x0);
        gbc.writeMem(0xd49a, { 0xcb, 0xbe });
        gbc.writeMem(0xe02a, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe9b4);
        EXPECT(gbc.pc(), 0xd49c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd49a), 0xcb);
        EXPECT(gbc.readMem(0xd49b), 0xbe);
        EXPECT(gbc.readMem(0xe02a), 0x7b);
        // CB BE 0368
        gbc.setState(0xd19b, 0x3e8f, 0x3940, 0xb3f3, 0xe185, 0x2d70, 0x1, 0x1);
        gbc.writeMem(0x2d70, { 0x5d });
        gbc.writeMem(0xd19b, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3e8f);
        EXPECT(gbc.pc(), 0xd19d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd19b), 0xcb);
        EXPECT(gbc.readMem(0xd19c), 0xbe);
        // CB BE 0369
        gbc.setState(0x8c2c, 0x53bd, 0x9a20, 0xda9f, 0x5f89, 0xc74e, 0x1, 0x0);
        gbc.writeMem(0x8c2c, { 0xcb, 0xbe });
        gbc.writeMem(0xc74e, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x53bd);
        EXPECT(gbc.pc(), 0x8c2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c2c), 0xcb);
        EXPECT(gbc.readMem(0x8c2d), 0xbe);
        EXPECT(gbc.readMem(0xc74e), 0x7a);
        // CB BE 036A
        gbc.setState(0x461, 0xb0a, 0x7700, 0xb0e2, 0xb8f9, 0xbf37, 0x0, 0x1);
        gbc.writeMem(0x461, { 0xcb, 0xbe });
        gbc.writeMem(0xbf37, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb0a);
        EXPECT(gbc.pc(), 0x463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf37), 0x4a);
        // CB BE 036B
        gbc.setState(0x66c, 0xdef9, 0xbbf0, 0xb3da, 0xfe5a, 0x69df, 0x1, 0x0);
        gbc.writeMem(0x66c, { 0xcb, 0xbe });
        gbc.writeMem(0x69df, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xdef9);
        EXPECT(gbc.pc(), 0x66e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 036E
        gbc.setState(0x6cf9, 0x4491, 0xb060, 0xbf96, 0xa3cf, 0x3df, 0x1, 0x0);
        gbc.writeMem(0x3df, { 0x59 });
        gbc.writeMem(0x6cf9, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4491);
        EXPECT(gbc.pc(), 0x6cfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 0371
        gbc.setState(0xb27, 0xd8e8, 0x2300, 0x4cb1, 0xd6e7, 0x9967, 0x0, 0x0);
        gbc.writeMem(0xb27, { 0xcb, 0xbe });
        gbc.writeMem(0x9967, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd8e8);
        EXPECT(gbc.pc(), 0xb29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9967), 0x5b);
        // CB BE 0372
        gbc.setState(0xbbf0, 0x4d6d, 0x2a00, 0xb398, 0xbd8c, 0xc10a, 0x1, 0x0);
        gbc.writeMem(0xbbf0, { 0xcb, 0xbe });
        gbc.writeMem(0xc10a, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4d6d);
        EXPECT(gbc.pc(), 0xbbf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf0), 0xcb);
        EXPECT(gbc.readMem(0xbbf1), 0xbe);
        EXPECT(gbc.readMem(0xc10a), 0x4d);
        // CB BE 0373
        gbc.setState(0x6a0c, 0xd4dc, 0x2cd0, 0x1a1b, 0x941, 0x3374, 0x1, 0x1);
        gbc.writeMem(0x3374, { 0x53 });
        gbc.writeMem(0x6a0c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd4dc);
        EXPECT(gbc.pc(), 0x6a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0377
        gbc.setState(0xa392, 0x78b6, 0x8f10, 0x9c54, 0x8f0e, 0xdd3b, 0x0, 0x0);
        gbc.writeMem(0xa392, { 0xcb, 0xbe });
        gbc.writeMem(0xdd3b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x78b6);
        EXPECT(gbc.pc(), 0xa394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa392), 0xcb);
        EXPECT(gbc.readMem(0xa393), 0xbe);
        EXPECT(gbc.readMem(0xdd3b), 0x23);
        // CB BE 0378
        gbc.setState(0xdc6f, 0x741e, 0x4820, 0x14, 0x32cb, 0xde67, 0x1, 0x0);
        gbc.writeMem(0xdc6f, { 0xcb, 0xbe });
        gbc.writeMem(0xde67, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x741e);
        EXPECT(gbc.pc(), 0xdc71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc6f), 0xcb);
        EXPECT(gbc.readMem(0xdc70), 0xbe);
        EXPECT(gbc.readMem(0xde67), 0x2);
        // CB BE 037A
        gbc.setState(0x56eb, 0x9bd6, 0x22a0, 0x511a, 0xae8e, 0xa4e2, 0x0, 0x1);
        gbc.writeMem(0x56eb, { 0xcb, 0xbe });
        gbc.writeMem(0xa4e2, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9bd6);
        EXPECT(gbc.pc(), 0x56ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e2), 0x2f);
        // CB BE 037C
        gbc.setState(0xc618, 0x1f, 0x6b30, 0x8678, 0xfa2b, 0x2989, 0x0, 0x1);
        gbc.writeMem(0x2989, { 0x26 });
        gbc.writeMem(0xc618, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1f);
        EXPECT(gbc.pc(), 0xc61a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc618), 0xcb);
        EXPECT(gbc.readMem(0xc619), 0xbe);
        // CB BE 037D
        gbc.setState(0x3f8, 0x5a08, 0xf4f0, 0x61d, 0xec54, 0xe6aa, 0x0, 0x0);
        gbc.writeMem(0x3f8, { 0xcb, 0xbe });
        gbc.writeMem(0xe6aa, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5a08);
        EXPECT(gbc.pc(), 0x3fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6aa), 0x17);
        // CB BE 037E
        gbc.setState(0x20ae, 0xf0e7, 0xbb50, 0x7fe5, 0x93f5, 0xde14, 0x1, 0x0);
        gbc.writeMem(0x20ae, { 0xcb, 0xbe });
        gbc.writeMem(0xde14, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf0e7);
        EXPECT(gbc.pc(), 0x20b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde14), 0x10);
        // CB BE 037F
        gbc.setState(0x29a3, 0xc52d, 0x32b0, 0x686a, 0x9b18, 0x14c5, 0x0, 0x0);
        gbc.writeMem(0x14c5, { 0x59 });
        gbc.writeMem(0x29a3, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc52d);
        EXPECT(gbc.pc(), 0x29a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0380
        gbc.setState(0xdbf7, 0xda6b, 0x9e90, 0x2aa4, 0x53b1, 0xc457, 0x1, 0x1);
        gbc.writeMem(0xc457, { 0x10 });
        gbc.writeMem(0xdbf7, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xda6b);
        EXPECT(gbc.pc(), 0xdbf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc457), 0x10);
        EXPECT(gbc.readMem(0xdbf7), 0xcb);
        EXPECT(gbc.readMem(0xdbf8), 0xbe);
        // CB BE 0383
        gbc.setState(0x6b8f, 0xbcce, 0xf090, 0x2619, 0x48c8, 0xb5e2, 0x0, 0x1);
        gbc.writeMem(0x6b8f, { 0xcb, 0xbe });
        gbc.writeMem(0xb5e2, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xbcce);
        EXPECT(gbc.pc(), 0x6b91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5e2), 0x2c);
        // CB BE 0384
        gbc.setState(0x8ce2, 0xd7f5, 0x61d0, 0x28c9, 0x45bd, 0x5f7a, 0x1, 0x0);
        gbc.writeMem(0x5f7a, { 0x39 });
        gbc.writeMem(0x8ce2, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd7f5);
        EXPECT(gbc.pc(), 0x8ce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce2), 0xcb);
        EXPECT(gbc.readMem(0x8ce3), 0xbe);
        // CB BE 0385
        gbc.setState(0x136c, 0x904b, 0x8bf0, 0x5fa4, 0xa120, 0x6316, 0x0, 0x1);
        gbc.writeMem(0x136c, { 0xcb, 0xbe });
        gbc.writeMem(0x6316, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x904b);
        EXPECT(gbc.pc(), 0x136e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 0386
        gbc.setState(0x2c34, 0x6b55, 0x95c0, 0x9ee8, 0x33ea, 0x9a79, 0x0, 0x1);
        gbc.writeMem(0x2c34, { 0xcb, 0xbe });
        gbc.writeMem(0x9a79, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6b55);
        EXPECT(gbc.pc(), 0x2c36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a79), 0x5);
        // CB BE 0388
        gbc.setState(0xbd9f, 0xece9, 0x97d0, 0xb1e5, 0x3ac3, 0xb5bb, 0x0, 0x0);
        gbc.writeMem(0xb5bb, { 0x2e });
        gbc.writeMem(0xbd9f, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xece9);
        EXPECT(gbc.pc(), 0xbda1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5bb), 0x2e);
        EXPECT(gbc.readMem(0xbd9f), 0xcb);
        EXPECT(gbc.readMem(0xbda0), 0xbe);
        // CB BE 0389
        gbc.setState(0xd5ec, 0xe51d, 0xc9d0, 0x9963, 0xdc28, 0x8157, 0x0, 0x0);
        gbc.writeMem(0x8157, { 0xf4 });
        gbc.writeMem(0xd5ec, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe51d);
        EXPECT(gbc.pc(), 0xd5ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8157), 0x74);
        EXPECT(gbc.readMem(0xd5ec), 0xcb);
        EXPECT(gbc.readMem(0xd5ed), 0xbe);
        // CB BE 038A
        gbc.setState(0xb217, 0x8613, 0x51f0, 0x322c, 0xd4bc, 0xf1c6, 0x1, 0x1);
        gbc.writeMem(0xb217, { 0xcb, 0xbe });
        gbc.writeMem(0xf1c6, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8613);
        EXPECT(gbc.pc(), 0xb219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb217), 0xcb);
        EXPECT(gbc.readMem(0xb218), 0xbe);
        EXPECT(gbc.readMem(0xf1c6), 0x6);
        // CB BE 038B
        gbc.setState(0x44bb, 0x5582, 0x5d80, 0xf45, 0x560a, 0x798b, 0x0, 0x1);
        gbc.writeMem(0x44bb, { 0xcb, 0xbe });
        gbc.writeMem(0x798b, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5582);
        EXPECT(gbc.pc(), 0x44bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 038C
        gbc.setState(0x9ead, 0x8d89, 0xa990, 0xe0cf, 0x90d5, 0x24de, 0x1, 0x0);
        gbc.writeMem(0x24de, { 0x7d });
        gbc.writeMem(0x9ead, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8d89);
        EXPECT(gbc.pc(), 0x9eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ead), 0xcb);
        EXPECT(gbc.readMem(0x9eae), 0xbe);
        // CB BE 038D
        gbc.setState(0x93c3, 0xdca5, 0x9910, 0x5494, 0xee7, 0xe9b2, 0x0, 0x0);
        gbc.writeMem(0x93c3, { 0xcb, 0xbe });
        gbc.writeMem(0xe9b2, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xdca5);
        EXPECT(gbc.pc(), 0x93c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c3), 0xcb);
        EXPECT(gbc.readMem(0x93c4), 0xbe);
        EXPECT(gbc.readMem(0xe9b2), 0x29);
        // CB BE 038E
        gbc.setState(0x22a0, 0x5898, 0x1840, 0xdb4, 0xd8dd, 0x9b48, 0x1, 0x1);
        gbc.writeMem(0x22a0, { 0xcb, 0xbe });
        gbc.writeMem(0x9b48, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5898);
        EXPECT(gbc.pc(), 0x22a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b48), 0x76);
        // CB BE 038F
        gbc.setState(0x63e6, 0xd484, 0x38e0, 0x1b18, 0x92a1, 0x922b, 0x1, 0x1);
        gbc.writeMem(0x63e6, { 0xcb, 0xbe });
        gbc.writeMem(0x922b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd484);
        EXPECT(gbc.pc(), 0x63e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x922b), 0x2b);
        // CB BE 0390
        gbc.setState(0xbacb, 0xe3fd, 0x5050, 0x1028, 0x3e6d, 0xc8d2, 0x0, 0x0);
        gbc.writeMem(0xbacb, { 0xcb, 0xbe });
        gbc.writeMem(0xc8d2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe3fd);
        EXPECT(gbc.pc(), 0xbacd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbacb), 0xcb);
        EXPECT(gbc.readMem(0xbacc), 0xbe);
        EXPECT(gbc.readMem(0xc8d2), 0x2b);
        // CB BE 0392
        gbc.setState(0x5cf4, 0x93e9, 0x6de0, 0x8672, 0x6f74, 0xdb43, 0x0, 0x0);
        gbc.writeMem(0x5cf4, { 0xcb, 0xbe });
        gbc.writeMem(0xdb43, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x93e9);
        EXPECT(gbc.pc(), 0x5cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb43), 0x63);
        // CB BE 0393
        gbc.setState(0x9b6d, 0x71d5, 0xbe90, 0x5920, 0x6fd4, 0xd77b, 0x0, 0x1);
        gbc.writeMem(0x9b6d, { 0xcb, 0xbe });
        gbc.writeMem(0xd77b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x71d5);
        EXPECT(gbc.pc(), 0x9b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6d), 0xcb);
        EXPECT(gbc.readMem(0x9b6e), 0xbe);
        EXPECT(gbc.readMem(0xd77b), 0x0);
        // CB BE 0394
        gbc.setState(0xad27, 0x5531, 0xf390, 0x8f15, 0x364a, 0x1b6e, 0x1, 0x0);
        gbc.writeMem(0x1b6e, { 0x78 });
        gbc.writeMem(0xad27, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5531);
        EXPECT(gbc.pc(), 0xad29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad27), 0xcb);
        EXPECT(gbc.readMem(0xad28), 0xbe);
        // CB BE 0396
        gbc.setState(0xc535, 0xdef1, 0x4d00, 0xa6b0, 0xdb18, 0xdd9, 0x1, 0x1);
        gbc.writeMem(0xdd9, { 0x48 });
        gbc.writeMem(0xc535, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xdef1);
        EXPECT(gbc.pc(), 0xc537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc535), 0xcb);
        EXPECT(gbc.readMem(0xc536), 0xbe);
        // CB BE 0397
        gbc.setState(0xb563, 0x660a, 0xad10, 0xa7bb, 0x154f, 0xe289, 0x1, 0x0);
        gbc.writeMem(0xb563, { 0xcb, 0xbe });
        gbc.writeMem(0xe289, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x660a);
        EXPECT(gbc.pc(), 0xb565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb563), 0xcb);
        EXPECT(gbc.readMem(0xb564), 0xbe);
        EXPECT(gbc.readMem(0xe289), 0x78);
        // CB BE 039A
        gbc.setState(0x7ab8, 0x50f2, 0x8990, 0x5b05, 0x5dc6, 0xafa1, 0x0, 0x1);
        gbc.writeMem(0x7ab8, { 0xcb, 0xbe });
        gbc.writeMem(0xafa1, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x50f2);
        EXPECT(gbc.pc(), 0x7aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa1), 0x4f);
        // CB BE 039C
        gbc.setState(0x2530, 0x2532, 0x5e00, 0x5a8c, 0x6723, 0xb8be, 0x0, 0x0);
        gbc.writeMem(0x2530, { 0xcb, 0xbe });
        gbc.writeMem(0xb8be, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2532);
        EXPECT(gbc.pc(), 0x2532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8be), 0xc);
        // CB BE 039D
        gbc.setState(0xbd22, 0x866e, 0x9960, 0xee80, 0x738, 0x5689, 0x0, 0x0);
        gbc.writeMem(0x5689, { 0x23 });
        gbc.writeMem(0xbd22, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x866e);
        EXPECT(gbc.pc(), 0xbd24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd22), 0xcb);
        EXPECT(gbc.readMem(0xbd23), 0xbe);
        // CB BE 039E
        gbc.setState(0xd1a, 0x75c1, 0x6e30, 0x4bdd, 0xa24c, 0x31a1, 0x0, 0x0);
        gbc.writeMem(0xd1a, { 0xcb, 0xbe });
        gbc.writeMem(0x31a1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x75c1);
        EXPECT(gbc.pc(), 0xd1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 03A0
        gbc.setState(0x8efa, 0xaa7b, 0x6230, 0x81bb, 0xd05e, 0x98dd, 0x1, 0x1);
        gbc.writeMem(0x8efa, { 0xcb, 0xbe });
        gbc.writeMem(0x98dd, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xaa7b);
        EXPECT(gbc.pc(), 0x8efc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8efa), 0xcb);
        EXPECT(gbc.readMem(0x8efb), 0xbe);
        EXPECT(gbc.readMem(0x98dd), 0x12);
        // CB BE 03A1
        gbc.setState(0x4220, 0x6ead, 0x8e90, 0xa8f6, 0x2c66, 0xa725, 0x1, 0x0);
        gbc.writeMem(0x4220, { 0xcb, 0xbe });
        gbc.writeMem(0xa725, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6ead);
        EXPECT(gbc.pc(), 0x4222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa725), 0xc);
        // CB BE 03A3
        gbc.setState(0x6869, 0x8e2e, 0x7a00, 0xd4d9, 0x3bb1, 0xa45d, 0x0, 0x0);
        gbc.writeMem(0x6869, { 0xcb, 0xbe });
        gbc.writeMem(0xa45d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8e2e);
        EXPECT(gbc.pc(), 0x686b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa45d), 0x58);
        // CB BE 03A4
        gbc.setState(0x1d32, 0x170e, 0xf1e0, 0x60a4, 0x6417, 0x8781, 0x0, 0x1);
        gbc.writeMem(0x1d32, { 0xcb, 0xbe });
        gbc.writeMem(0x8781, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x170e);
        EXPECT(gbc.pc(), 0x1d34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8781), 0x6d);
        // CB BE 03A6
        gbc.setState(0x4e9c, 0xfc61, 0x2ba0, 0xf299, 0x6a15, 0xcc58, 0x0, 0x0);
        gbc.writeMem(0x4e9c, { 0xcb, 0xbe });
        gbc.writeMem(0xcc58, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfc61);
        EXPECT(gbc.pc(), 0x4e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc58), 0x2c);
        // CB BE 03A7
        gbc.setState(0x3768, 0xdccb, 0xced0, 0x3bf2, 0x274e, 0xba15, 0x0, 0x0);
        gbc.writeMem(0x3768, { 0xcb, 0xbe });
        gbc.writeMem(0xba15, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xdccb);
        EXPECT(gbc.pc(), 0x376a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba15), 0x58);
        // CB BE 03A9
        gbc.setState(0xdd40, 0x8189, 0xdb70, 0x7caf, 0x70b3, 0xc5e6, 0x1, 0x0);
        gbc.writeMem(0xc5e6, { 0x66 });
        gbc.writeMem(0xdd40, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8189);
        EXPECT(gbc.pc(), 0xdd42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5e6), 0x66);
        EXPECT(gbc.readMem(0xdd40), 0xcb);
        EXPECT(gbc.readMem(0xdd41), 0xbe);
        // CB BE 03AA
        gbc.setState(0x9f1f, 0x8f8e, 0x4ad0, 0x3a8b, 0xca01, 0xd57e, 0x0, 0x1);
        gbc.writeMem(0x9f1f, { 0xcb, 0xbe });
        gbc.writeMem(0xd57e, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8f8e);
        EXPECT(gbc.pc(), 0x9f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f1f), 0xcb);
        EXPECT(gbc.readMem(0x9f20), 0xbe);
        EXPECT(gbc.readMem(0xd57e), 0x12);
        // CB BE 03AB
        gbc.setState(0x4ca5, 0xab8c, 0x6460, 0xad5f, 0x96fe, 0x9537, 0x0, 0x1);
        gbc.writeMem(0x4ca5, { 0xcb, 0xbe });
        gbc.writeMem(0x9537, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xab8c);
        EXPECT(gbc.pc(), 0x4ca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9537), 0x64);
        // CB BE 03AD
        gbc.setState(0x299, 0x241f, 0x61e0, 0xf1c5, 0xda9f, 0xcd57, 0x1, 0x0);
        gbc.writeMem(0x299, { 0xcb, 0xbe });
        gbc.writeMem(0xcd57, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x241f);
        EXPECT(gbc.pc(), 0x29b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd57), 0x33);
        // CB BE 03AE
        gbc.setState(0x84d8, 0x8b2d, 0x7b0, 0xf8fb, 0xbc19, 0x9fe0, 0x0, 0x1);
        gbc.writeMem(0x84d8, { 0xcb, 0xbe });
        gbc.writeMem(0x9fe0, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8b2d);
        EXPECT(gbc.pc(), 0x84da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84d8), 0xcb);
        EXPECT(gbc.readMem(0x84d9), 0xbe);
        EXPECT(gbc.readMem(0x9fe0), 0xd);
        // CB BE 03AF
        gbc.setState(0xbbec, 0x6fd9, 0x6f70, 0x7f27, 0x468b, 0xcf43, 0x0, 0x1);
        gbc.writeMem(0xbbec, { 0xcb, 0xbe });
        gbc.writeMem(0xcf43, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6fd9);
        EXPECT(gbc.pc(), 0xbbee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbec), 0xcb);
        EXPECT(gbc.readMem(0xbbed), 0xbe);
        EXPECT(gbc.readMem(0xcf43), 0x28);
        // CB BE 03B0
        gbc.setState(0x9b25, 0xc0e9, 0x8ea0, 0x60c9, 0x956a, 0x9c84, 0x1, 0x0);
        gbc.writeMem(0x9b25, { 0xcb, 0xbe });
        gbc.writeMem(0x9c84, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc0e9);
        EXPECT(gbc.pc(), 0x9b27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b25), 0xcb);
        EXPECT(gbc.readMem(0x9b26), 0xbe);
        EXPECT(gbc.readMem(0x9c84), 0x16);
        // CB BE 03B1
        gbc.setState(0xba05, 0xcbdf, 0xc1b0, 0xb063, 0xf3c5, 0x501, 0x0, 0x0);
        gbc.writeMem(0x501, { 0x61 });
        gbc.writeMem(0xba05, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xcbdf);
        EXPECT(gbc.pc(), 0xba07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba05), 0xcb);
        EXPECT(gbc.readMem(0xba06), 0xbe);
        // CB BE 03B4
        gbc.setState(0x7b65, 0xbc37, 0xbf0, 0x3a30, 0x7ac9, 0x5996, 0x0, 0x1);
        gbc.writeMem(0x5996, { 0x77 });
        gbc.writeMem(0x7b65, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbc37);
        EXPECT(gbc.pc(), 0x7b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BE 03B5
        gbc.setState(0x151f, 0x4aba, 0x7f40, 0xf4a3, 0x6ed6, 0x29b5, 0x0, 0x1);
        gbc.writeMem(0x151f, { 0xcb, 0xbe });
        gbc.writeMem(0x29b5, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4aba);
        EXPECT(gbc.pc(), 0x1521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 03B7
        gbc.setState(0xeaec, 0x9f53, 0xd620, 0xd2bf, 0x8c0f, 0x519b, 0x1, 0x1);
        gbc.writeMem(0x519b, { 0x33 });
        gbc.writeMem(0xeaec, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9f53);
        EXPECT(gbc.pc(), 0xeaee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaec), 0xcb);
        EXPECT(gbc.readMem(0xeaed), 0xbe);
        // CB BE 03B8
        gbc.setState(0xe298, 0x177b, 0x2b10, 0x79b8, 0x967b, 0x9352, 0x1, 0x0);
        gbc.writeMem(0x9352, { 0xec });
        gbc.writeMem(0xe298, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x177b);
        EXPECT(gbc.pc(), 0xe29a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9352), 0x6c);
        EXPECT(gbc.readMem(0xe298), 0xcb);
        EXPECT(gbc.readMem(0xe299), 0xbe);
        // CB BE 03B9
        gbc.setState(0x932f, 0x7f28, 0x3e50, 0x3ab9, 0xf594, 0x9d86, 0x0, 0x1);
        gbc.writeMem(0x932f, { 0xcb, 0xbe });
        gbc.writeMem(0x9d86, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7f28);
        EXPECT(gbc.pc(), 0x9331);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x932f), 0xcb);
        EXPECT(gbc.readMem(0x9330), 0xbe);
        EXPECT(gbc.readMem(0x9d86), 0x4a);
        // CB BE 03BB
        gbc.setState(0x8811, 0x3c38, 0x6490, 0xf267, 0xc1dd, 0x4d59, 0x1, 0x1);
        gbc.writeMem(0x4d59, { 0x30 });
        gbc.writeMem(0x8811, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3c38);
        EXPECT(gbc.pc(), 0x8813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8811), 0xcb);
        EXPECT(gbc.readMem(0x8812), 0xbe);
        // CB BE 03BC
        gbc.setState(0x6db, 0xd073, 0x6100, 0x9027, 0xb012, 0xba5b, 0x1, 0x1);
        gbc.writeMem(0x6db, { 0xcb, 0xbe });
        gbc.writeMem(0xba5b, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd073);
        EXPECT(gbc.pc(), 0x6dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba5b), 0x2f);
        // CB BE 03BD
        gbc.setState(0xa789, 0x212, 0xe460, 0x9a33, 0xa640, 0x6dd9, 0x0, 0x1);
        gbc.writeMem(0x6dd9, { 0x5 });
        gbc.writeMem(0xa789, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x212);
        EXPECT(gbc.pc(), 0xa78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa789), 0xcb);
        EXPECT(gbc.readMem(0xa78a), 0xbe);
        // CB BE 03BE
        gbc.setState(0x2203, 0xd69d, 0x5260, 0x605e, 0xde59, 0x17e6, 0x0, 0x0);
        gbc.writeMem(0x17e6, { 0x7b });
        gbc.writeMem(0x2203, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd69d);
        EXPECT(gbc.pc(), 0x2205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BE 03BF
        gbc.setState(0x4973, 0xa686, 0x44c0, 0xe4d4, 0xfe3a, 0xa7ed, 0x0, 0x1);
        gbc.writeMem(0x4973, { 0xcb, 0xbe });
        gbc.writeMem(0xa7ed, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa686);
        EXPECT(gbc.pc(), 0x4975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ed), 0x77);
        // CB BE 03C0
        gbc.setState(0x538f, 0x6dea, 0x4040, 0x3d3a, 0xa583, 0x9d6b, 0x1, 0x0);
        gbc.writeMem(0x538f, { 0xcb, 0xbe });
        gbc.writeMem(0x9d6b, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6dea);
        EXPECT(gbc.pc(), 0x5391);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d6b), 0x1d);
        // CB BE 03C1
        gbc.setState(0xee0e, 0x42a2, 0x5c20, 0x9119, 0x5b00, 0xc7c0, 0x0, 0x1);
        gbc.writeMem(0xc7c0, { 0x8e });
        gbc.writeMem(0xee0e, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x42a2);
        EXPECT(gbc.pc(), 0xee10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c0), 0xe);
        EXPECT(gbc.readMem(0xee0e), 0xcb);
        EXPECT(gbc.readMem(0xee0f), 0xbe);
        // CB BE 03C2
        gbc.setState(0xe2c5, 0xfbe8, 0xc0c0, 0xaeb2, 0xaf4f, 0x4689, 0x1, 0x0);
        gbc.writeMem(0x4689, { 0x44 });
        gbc.writeMem(0xe2c5, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfbe8);
        EXPECT(gbc.pc(), 0xe2c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c5), 0xcb);
        EXPECT(gbc.readMem(0xe2c6), 0xbe);
        // CB BE 03C3
        gbc.setState(0xadb0, 0x3201, 0x20a0, 0x2aeb, 0x64d2, 0x88f8, 0x1, 0x1);
        gbc.writeMem(0x88f8, { 0x90 });
        gbc.writeMem(0xadb0, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3201);
        EXPECT(gbc.pc(), 0xadb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f8), 0x10);
        EXPECT(gbc.readMem(0xadb0), 0xcb);
        EXPECT(gbc.readMem(0xadb1), 0xbe);
        // CB BE 03C4
        gbc.setState(0x3ad0, 0x333, 0xf70, 0x9746, 0x597d, 0xa6f8, 0x0, 0x0);
        gbc.writeMem(0x3ad0, { 0xcb, 0xbe });
        gbc.writeMem(0xa6f8, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x333);
        EXPECT(gbc.pc(), 0x3ad2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6f8), 0x1f);
        // CB BE 03C7
        gbc.setState(0xa156, 0x223b, 0x6270, 0x2819, 0xd9fc, 0xbafc, 0x1, 0x0);
        gbc.writeMem(0xa156, { 0xcb, 0xbe });
        gbc.writeMem(0xbafc, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x223b);
        EXPECT(gbc.pc(), 0xa158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa156), 0xcb);
        EXPECT(gbc.readMem(0xa157), 0xbe);
        EXPECT(gbc.readMem(0xbafc), 0x65);
        // CB BE 03C8
        gbc.setState(0xc7f, 0x33b0, 0x4630, 0x8c6, 0x8e6a, 0xf143, 0x0, 0x0);
        gbc.writeMem(0xc7f, { 0xcb, 0xbe });
        gbc.writeMem(0xf143, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x33b0);
        EXPECT(gbc.pc(), 0xc81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf143), 0x19);
        // CB BE 03C9
        gbc.setState(0x638d, 0x78f6, 0x9060, 0x79c4, 0x73be, 0xbcb5, 0x1, 0x0);
        gbc.writeMem(0x638d, { 0xcb, 0xbe });
        gbc.writeMem(0xbcb5, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x78f6);
        EXPECT(gbc.pc(), 0x638f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcb5), 0x1);
        // CB BE 03CA
        gbc.setState(0xd855, 0x44cc, 0x2980, 0x707d, 0x971c, 0xe181, 0x0, 0x1);
        gbc.writeMem(0xd855, { 0xcb, 0xbe });
        gbc.writeMem(0xe181, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x44cc);
        EXPECT(gbc.pc(), 0xd857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd855), 0xcb);
        EXPECT(gbc.readMem(0xd856), 0xbe);
        EXPECT(gbc.readMem(0xe181), 0x5b);
        // CB BE 03CB
        gbc.setState(0xd1f2, 0xee4f, 0xbdd0, 0x7fd, 0x52cf, 0x6788, 0x1, 0x1);
        gbc.writeMem(0x6788, { 0x11 });
        gbc.writeMem(0xd1f2, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xee4f);
        EXPECT(gbc.pc(), 0xd1f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1f2), 0xcb);
        EXPECT(gbc.readMem(0xd1f3), 0xbe);
        // CB BE 03CC
        gbc.setState(0x96b1, 0xefc0, 0x8910, 0x83ec, 0x9945, 0x9e91, 0x0, 0x0);
        gbc.writeMem(0x96b1, { 0xcb, 0xbe });
        gbc.writeMem(0x9e91, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xefc0);
        EXPECT(gbc.pc(), 0x96b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96b1), 0xcb);
        EXPECT(gbc.readMem(0x96b2), 0xbe);
        EXPECT(gbc.readMem(0x9e91), 0x31);
        // CB BE 03CF
        gbc.setState(0xbde9, 0x823f, 0xa990, 0x9fc6, 0x65f1, 0x86f4, 0x0, 0x1);
        gbc.writeMem(0x86f4, { 0x34 });
        gbc.writeMem(0xbde9, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x823f);
        EXPECT(gbc.pc(), 0xbdeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f4), 0x34);
        EXPECT(gbc.readMem(0xbde9), 0xcb);
        EXPECT(gbc.readMem(0xbdea), 0xbe);
        // CB BE 03D0
        gbc.setState(0x1c80, 0x46a8, 0x5510, 0x5f53, 0x9169, 0x5d08, 0x0, 0x1);
        gbc.writeMem(0x1c80, { 0xcb, 0xbe });
        gbc.writeMem(0x5d08, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x46a8);
        EXPECT(gbc.pc(), 0x1c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BE 03D1
        gbc.setState(0x535d, 0x1f14, 0x490, 0x2a1c, 0x1de0, 0x9b33, 0x0, 0x1);
        gbc.writeMem(0x535d, { 0xcb, 0xbe });
        gbc.writeMem(0x9b33, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1f14);
        EXPECT(gbc.pc(), 0x535f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b33), 0x9);
        // CB BE 03D2
        gbc.setState(0xa813, 0x8717, 0x6d40, 0xe9bf, 0x7bdb, 0x91ec, 0x0, 0x1);
        gbc.writeMem(0x91ec, { 0x77 });
        gbc.writeMem(0xa813, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8717);
        EXPECT(gbc.pc(), 0xa815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ec), 0x77);
        EXPECT(gbc.readMem(0xa813), 0xcb);
        EXPECT(gbc.readMem(0xa814), 0xbe);
        // CB BE 03D3
        gbc.setState(0x7832, 0x5329, 0x43f0, 0xe4b0, 0xc1af, 0x8409, 0x1, 0x1);
        gbc.writeMem(0x7832, { 0xcb, 0xbe });
        gbc.writeMem(0x8409, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5329);
        EXPECT(gbc.pc(), 0x7834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8409), 0x64);
        // CB BE 03D4
        gbc.setState(0x84ca, 0xa021, 0x72b0, 0xa93c, 0x1632, 0xdc0d, 0x0, 0x1);
        gbc.writeMem(0x84ca, { 0xcb, 0xbe });
        gbc.writeMem(0xdc0d, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa021);
        EXPECT(gbc.pc(), 0x84cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ca), 0xcb);
        EXPECT(gbc.readMem(0x84cb), 0xbe);
        EXPECT(gbc.readMem(0xdc0d), 0x3b);
        // CB BE 03D5
        gbc.setState(0xe61c, 0xdea9, 0xa1e0, 0x4141, 0xb401, 0x2e51, 0x0, 0x0);
        gbc.writeMem(0x2e51, { 0x3e });
        gbc.writeMem(0xe61c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xdea9);
        EXPECT(gbc.pc(), 0xe61e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe61c), 0xcb);
        EXPECT(gbc.readMem(0xe61d), 0xbe);
        // CB BE 03D6
        gbc.setState(0x97f0, 0x8804, 0xff00, 0x7df9, 0xf90e, 0x2969, 0x0, 0x1);
        gbc.writeMem(0x2969, { 0x37 });
        gbc.writeMem(0x97f0, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8804);
        EXPECT(gbc.pc(), 0x97f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97f0), 0xcb);
        EXPECT(gbc.readMem(0x97f1), 0xbe);
        // CB BE 03D7
        gbc.setState(0x7a47, 0x9b53, 0x9880, 0xa231, 0x8283, 0xe5e1, 0x0, 0x1);
        gbc.writeMem(0x7a47, { 0xcb, 0xbe });
        gbc.writeMem(0xe5e1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9b53);
        EXPECT(gbc.pc(), 0x7a49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e1), 0x29);
        // CB BE 03D8
        gbc.setState(0x4d9, 0x7217, 0xdd0, 0xe38d, 0xbbcc, 0xd176, 0x0, 0x0);
        gbc.writeMem(0x4d9, { 0xcb, 0xbe });
        gbc.writeMem(0xd176, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7217);
        EXPECT(gbc.pc(), 0x4db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd176), 0x58);
        // CB BE 03DA
        gbc.setState(0x7380, 0xa0c5, 0xeb80, 0xd9dc, 0xbdbf, 0xe52d, 0x1, 0x0);
        gbc.writeMem(0x7380, { 0xcb, 0xbe });
        gbc.writeMem(0xe52d, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa0c5);
        EXPECT(gbc.pc(), 0x7382);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe52d), 0x63);
        // CB BE 03DB
        gbc.setState(0x21a1, 0x7e34, 0x74b0, 0x1544, 0x7b65, 0xaa12, 0x1, 0x0);
        gbc.writeMem(0x21a1, { 0xcb, 0xbe });
        gbc.writeMem(0xaa12, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7e34);
        EXPECT(gbc.pc(), 0x21a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa12), 0x22);
        // CB BE 03DC
        gbc.setState(0x99c8, 0x5c1, 0xb5e0, 0x268, 0xc9a9, 0xda00, 0x0, 0x1);
        gbc.writeMem(0x99c8, { 0xcb, 0xbe });
        gbc.writeMem(0xda00, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5c1);
        EXPECT(gbc.pc(), 0x99ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c8), 0xcb);
        EXPECT(gbc.readMem(0x99c9), 0xbe);
        EXPECT(gbc.readMem(0xda00), 0x26);
        // CB BE 03DE
        gbc.setState(0x646f, 0x86fc, 0x4360, 0x19fb, 0xbb7e, 0xa1f7, 0x0, 0x1);
        gbc.writeMem(0x646f, { 0xcb, 0xbe });
        gbc.writeMem(0xa1f7, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x86fc);
        EXPECT(gbc.pc(), 0x6471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1f7), 0x1d);
        // CB BE 03DF
        gbc.setState(0x22c4, 0xc876, 0xf0a0, 0xe19f, 0x3280, 0x9c14, 0x1, 0x0);
        gbc.writeMem(0x22c4, { 0xcb, 0xbe });
        gbc.writeMem(0x9c14, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc876);
        EXPECT(gbc.pc(), 0x22c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c14), 0x5b);
        // CB BE 03E0
        gbc.setState(0xcd6c, 0x6361, 0x5b0, 0x5ea1, 0x5dab, 0x3d2e, 0x1, 0x1);
        gbc.writeMem(0x3d2e, { 0x68 });
        gbc.writeMem(0xcd6c, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6361);
        EXPECT(gbc.pc(), 0xcd6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd6c), 0xcb);
        EXPECT(gbc.readMem(0xcd6d), 0xbe);
        // CB BE 03E1
        gbc.setState(0x3842, 0x30e9, 0x7ab0, 0x1bfb, 0x9212, 0xa666, 0x1, 0x0);
        gbc.writeMem(0x3842, { 0xcb, 0xbe });
        gbc.writeMem(0xa666, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x30e9);
        EXPECT(gbc.pc(), 0x3844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa666), 0x25);
        // CB BE 03E4
        gbc.setState(0xa7df, 0xf7bb, 0x5f60, 0x8ec1, 0x58d7, 0x8df8, 0x1, 0x1);
        gbc.writeMem(0x8df8, { 0x25 });
        gbc.writeMem(0xa7df, { 0xcb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf7bb);
        EXPECT(gbc.pc(), 0xa7e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df8), 0x25);
        EXPECT(gbc.readMem(0xa7df), 0xcb);
        EXPECT(gbc.readMem(0xa7e0), 0xbe);
        // CB BE 03E5
        gbc.setState(0x2480, 0x4e49, 0x7a40, 0x69d8, 0x8605, 0x3c2a, 0x0, 0x0);
        gbc.writeMem(0x2480, { 0xcb, 0xbe });
        gbc.writeMem(0x3c2a, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4e49);
        EXPECT(gbc.pc(), 0x2482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BE 03E6
        gbc.setState(0x3f9, 0x437f, 0xba30, 0xea26, 0xaac, 0xd2ac, 0x0, 0x1);
        gbc.writeMem(0x3f9, { 0xcb, 0xbe });
        gbc.writeMem(0xd2ac, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x437f);
        EXPECT(gbc.pc(), 0x3fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ac), 0x30);
    }
}
#endif
