    TEST(gbcemu, opcode_cb_0b) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 0B 0000
        gbc.setState(0xe0ee, 0x1d0b, 0x9770, 0xef89, 0x2aa4, 0x9033, 0x0, 0x0);
        gbc.writeMem(0xe0ee, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1d0b, gbc.sp());
        EXPECT(0xe0f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ee));
        EXPECT(0xb, gbc.readMem(0xe0ef));
        // CB 0B 0001
        gbc.setState(0x6505, 0xa40b, 0x8e30, 0x6ddf, 0x7a3, 0x70be, 0x1, 0x0);
        gbc.writeMem(0x6505, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa40b, gbc.sp());
        EXPECT(0x6507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0002
        gbc.setState(0x5e19, 0x4c00, 0xff80, 0xbc80, 0x6aba, 0x4843, 0x1, 0x0);
        gbc.writeMem(0x5e19, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4c00, gbc.sp());
        EXPECT(0x5e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0003
        gbc.setState(0xb8f9, 0x274c, 0xa280, 0x367d, 0x9e11, 0x882d, 0x1, 0x0);
        gbc.writeMem(0xb8f9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x274c, gbc.sp());
        EXPECT(0xb8fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f9));
        EXPECT(0xb, gbc.readMem(0xb8fa));
        // CB 0B 0004
        gbc.setState(0xdbc, 0xdd70, 0xf7f0, 0x8546, 0x26ee, 0x612, 0x1, 0x1);
        gbc.writeMem(0xdbc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdd70, gbc.sp());
        EXPECT(0xdbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0005
        gbc.setState(0x81fc, 0xa53a, 0xca40, 0x75bd, 0x8f5c, 0xad08, 0x0, 0x1);
        gbc.writeMem(0x81fc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa53a, gbc.sp());
        EXPECT(0x81fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81fc));
        EXPECT(0xb, gbc.readMem(0x81fd));
        // CB 0B 0006
        gbc.setState(0x2228, 0xc2bf, 0x4a70, 0xef8a, 0xc8ae, 0x369e, 0x0, 0x1);
        gbc.writeMem(0x2228, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc2bf, gbc.sp());
        EXPECT(0x222a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0007
        gbc.setState(0xb980, 0x26c, 0xc460, 0x275e, 0xdba2, 0x64f1, 0x0, 0x0);
        gbc.writeMem(0xb980, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x26c, gbc.sp());
        EXPECT(0xb982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb980));
        EXPECT(0xb, gbc.readMem(0xb981));
        // CB 0B 0008
        gbc.setState(0x5e00, 0xab0c, 0x6e0, 0xf7c1, 0x6ddc, 0xa367, 0x1, 0x1);
        gbc.writeMem(0x5e00, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xab0c, gbc.sp());
        EXPECT(0x5e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 000A
        gbc.setState(0x5df2, 0xb373, 0xb750, 0xc7c6, 0x33ea, 0xf063, 0x1, 0x1);
        gbc.writeMem(0x5df2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb373, gbc.sp());
        EXPECT(0x5df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 000B
        gbc.setState(0xe85, 0x4895, 0x6490, 0x6783, 0x44c2, 0x7d46, 0x1, 0x1);
        gbc.writeMem(0xe85, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4895, gbc.sp());
        EXPECT(0xe87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 000D
        gbc.setState(0xbf0e, 0x5bae, 0x1060, 0x7b16, 0x8a7f, 0xbfb1, 0x1, 0x0);
        gbc.writeMem(0xbf0e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5bae, gbc.sp());
        EXPECT(0xbf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0e));
        EXPECT(0xb, gbc.readMem(0xbf0f));
        // CB 0B 000E
        gbc.setState(0xc99e, 0x98d1, 0x8da0, 0xb36d, 0x900e, 0xb3a0, 0x1, 0x1);
        gbc.writeMem(0xc99e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x98d1, gbc.sp());
        EXPECT(0xc9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99e));
        EXPECT(0xb, gbc.readMem(0xc99f));
        // CB 0B 000F
        gbc.setState(0x4469, 0x2616, 0xbfc0, 0x520b, 0x1ae0, 0xa508, 0x1, 0x1);
        gbc.writeMem(0x4469, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2616, gbc.sp());
        EXPECT(0x446b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0010
        gbc.setState(0xcb6c, 0x5de8, 0x6a50, 0x63b2, 0x9ea2, 0x8ccd, 0x0, 0x0);
        gbc.writeMem(0xcb6c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5de8, gbc.sp());
        EXPECT(0xcb6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6c));
        EXPECT(0xb, gbc.readMem(0xcb6d));
        // CB 0B 0011
        gbc.setState(0x5f0e, 0x2b73, 0x1e00, 0x66f9, 0xb534, 0xa9c1, 0x0, 0x1);
        gbc.writeMem(0x5f0e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2b73, gbc.sp());
        EXPECT(0x5f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0012
        gbc.setState(0x7b06, 0x8487, 0xf070, 0x8a2d, 0xc83e, 0x799f, 0x0, 0x1);
        gbc.writeMem(0x7b06, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8487, gbc.sp());
        EXPECT(0x7b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0013
        gbc.setState(0x402c, 0x5bc5, 0xa360, 0x29af, 0xb052, 0x7b9d, 0x0, 0x1);
        gbc.writeMem(0x402c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5bc5, gbc.sp());
        EXPECT(0x402e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0015
        gbc.setState(0xbd8a, 0x40ad, 0x9340, 0xe3c3, 0xc775, 0x6591, 0x1, 0x0);
        gbc.writeMem(0xbd8a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x40ad, gbc.sp());
        EXPECT(0xbd8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd8a));
        EXPECT(0xb, gbc.readMem(0xbd8b));
        // CB 0B 0016
        gbc.setState(0x384f, 0xe46, 0xc760, 0x5527, 0xaf97, 0x9123, 0x0, 0x0);
        gbc.writeMem(0x384f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe46, gbc.sp());
        EXPECT(0x3851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0017
        gbc.setState(0x3bc5, 0xe51e, 0x14b0, 0x55b0, 0x14b2, 0x317d, 0x0, 0x0);
        gbc.writeMem(0x3bc5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe51e, gbc.sp());
        EXPECT(0x3bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0018
        gbc.setState(0x87d2, 0x50ae, 0xec80, 0xb11f, 0x95c3, 0x3eb8, 0x0, 0x0);
        gbc.writeMem(0x87d2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x50ae, gbc.sp());
        EXPECT(0x87d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d2));
        EXPECT(0xb, gbc.readMem(0x87d3));
        // CB 0B 0019
        gbc.setState(0xa533, 0x9792, 0xd0e0, 0x9fb8, 0xf4fd, 0x5f0b, 0x0, 0x1);
        gbc.writeMem(0xa533, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9792, gbc.sp());
        EXPECT(0xa535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa533));
        EXPECT(0xb, gbc.readMem(0xa534));
        // CB 0B 001A
        gbc.setState(0xa3a6, 0xac07, 0x99b0, 0x618d, 0x555b, 0x7fc2, 0x1, 0x1);
        gbc.writeMem(0xa3a6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xac07, gbc.sp());
        EXPECT(0xa3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a6));
        EXPECT(0xb, gbc.readMem(0xa3a7));
        // CB 0B 001B
        gbc.setState(0x48be, 0xf869, 0x6030, 0xee71, 0x6657, 0xaa75, 0x0, 0x0);
        gbc.writeMem(0x48be, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf869, gbc.sp());
        EXPECT(0x48c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 001C
        gbc.setState(0x35bc, 0xd69a, 0x2200, 0x865b, 0xbd53, 0x1384, 0x1, 0x0);
        gbc.writeMem(0x35bc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd69a, gbc.sp());
        EXPECT(0x35be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 001D
        gbc.setState(0xc5db, 0xc828, 0xe870, 0xb295, 0xedd8, 0x2524, 0x0, 0x0);
        gbc.writeMem(0xc5db, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc828, gbc.sp());
        EXPECT(0xc5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5db));
        EXPECT(0xb, gbc.readMem(0xc5dc));
        // CB 0B 001E
        gbc.setState(0xd8d, 0xe9db, 0xe10, 0x2fb, 0x3024, 0x1551, 0x1, 0x1);
        gbc.writeMem(0xd8d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe9db, gbc.sp());
        EXPECT(0xd8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 001F
        gbc.setState(0x9213, 0xd623, 0x4a80, 0xe4d9, 0x56f5, 0xe274, 0x0, 0x0);
        gbc.writeMem(0x9213, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd623, gbc.sp());
        EXPECT(0x9215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9213));
        EXPECT(0xb, gbc.readMem(0x9214));
        // CB 0B 0020
        gbc.setState(0xda69, 0x5e24, 0x1040, 0x92bf, 0xd4da, 0x2a88, 0x0, 0x1);
        gbc.writeMem(0xda69, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5e24, gbc.sp());
        EXPECT(0xda6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda69));
        EXPECT(0xb, gbc.readMem(0xda6a));
        // CB 0B 0021
        gbc.setState(0xab68, 0x5e50, 0x61c0, 0xbfb4, 0x1696, 0xbd81, 0x0, 0x0);
        gbc.writeMem(0xab68, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5e50, gbc.sp());
        EXPECT(0xab6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab68));
        EXPECT(0xb, gbc.readMem(0xab69));
        // CB 0B 0022
        gbc.setState(0x5fca, 0x44c7, 0xdda0, 0x8c04, 0x2872, 0xb731, 0x1, 0x0);
        gbc.writeMem(0x5fca, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x44c7, gbc.sp());
        EXPECT(0x5fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0023
        gbc.setState(0x6402, 0xde97, 0xc390, 0x38be, 0x852f, 0x91b7, 0x0, 0x0);
        gbc.writeMem(0x6402, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xde97, gbc.sp());
        EXPECT(0x6404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0024
        gbc.setState(0xb6ec, 0x735b, 0x7850, 0x3f7a, 0x2112, 0x21ca, 0x0, 0x0);
        gbc.writeMem(0xb6ec, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x735b, gbc.sp());
        EXPECT(0xb6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ec));
        EXPECT(0xb, gbc.readMem(0xb6ed));
        // CB 0B 0025
        gbc.setState(0xa70d, 0x50bf, 0xf530, 0x22, 0xa44a, 0xa673, 0x1, 0x1);
        gbc.writeMem(0xa70d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x50bf, gbc.sp());
        EXPECT(0xa70f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70d));
        EXPECT(0xb, gbc.readMem(0xa70e));
        // CB 0B 0026
        gbc.setState(0xda13, 0xd899, 0x2ee0, 0x53e6, 0xa379, 0xf76c, 0x0, 0x1);
        gbc.writeMem(0xda13, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd899, gbc.sp());
        EXPECT(0xda15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda13));
        EXPECT(0xb, gbc.readMem(0xda14));
        // CB 0B 0027
        gbc.setState(0x9c6d, 0x7df, 0x41c0, 0xffc3, 0x4062, 0xbe3c, 0x1, 0x0);
        gbc.writeMem(0x9c6d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7df, gbc.sp());
        EXPECT(0x9c6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6d));
        EXPECT(0xb, gbc.readMem(0x9c6e));
        // CB 0B 0029
        gbc.setState(0xdfbd, 0xb99a, 0x53b0, 0x8b6e, 0x1864, 0x46f2, 0x1, 0x0);
        gbc.writeMem(0xdfbd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb99a, gbc.sp());
        EXPECT(0xdfbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfbd));
        EXPECT(0xb, gbc.readMem(0xdfbe));
        // CB 0B 002A
        gbc.setState(0x7b12, 0x33fb, 0x8dd0, 0x8a89, 0x546a, 0x8659, 0x1, 0x1);
        gbc.writeMem(0x7b12, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x33fb, gbc.sp());
        EXPECT(0x7b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 002B
        gbc.setState(0x498c, 0x783f, 0xf250, 0xbe5e, 0xf7fb, 0x1c4f, 0x0, 0x0);
        gbc.writeMem(0x498c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x783f, gbc.sp());
        EXPECT(0x498e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 002C
        gbc.setState(0x1726, 0xc87, 0x8340, 0x2c51, 0x2dc3, 0x2298, 0x0, 0x0);
        gbc.writeMem(0x1726, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc87, gbc.sp());
        EXPECT(0x1728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 002D
        gbc.setState(0x301a, 0x73a9, 0xdc10, 0x81df, 0xdd41, 0xa256, 0x0, 0x0);
        gbc.writeMem(0x301a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x73a9, gbc.sp());
        EXPECT(0x301c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 002E
        gbc.setState(0x81ab, 0x6d06, 0x1a10, 0x12f0, 0x2522, 0x7876, 0x0, 0x0);
        gbc.writeMem(0x81ab, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6d06, gbc.sp());
        EXPECT(0x81ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ab));
        EXPECT(0xb, gbc.readMem(0x81ac));
        // CB 0B 002F
        gbc.setState(0xce6b, 0x6945, 0xca20, 0xd949, 0x5f36, 0xa74b, 0x1, 0x1);
        gbc.writeMem(0xce6b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6945, gbc.sp());
        EXPECT(0xce6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce6b));
        EXPECT(0xb, gbc.readMem(0xce6c));
        // CB 0B 0030
        gbc.setState(0x38b, 0xbfd5, 0xf250, 0xbb08, 0xbe77, 0x4f81, 0x1, 0x1);
        gbc.writeMem(0x38b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbfd5, gbc.sp());
        EXPECT(0x38d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0031
        gbc.setState(0x92da, 0xbcd4, 0xadf0, 0xda0c, 0x1c7, 0x5cfc, 0x1, 0x0);
        gbc.writeMem(0x92da, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbcd4, gbc.sp());
        EXPECT(0x92dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92da));
        EXPECT(0xb, gbc.readMem(0x92db));
        // CB 0B 0033
        gbc.setState(0x6eed, 0xa28e, 0x3930, 0xb453, 0xa5f0, 0x6a48, 0x1, 0x1);
        gbc.writeMem(0x6eed, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa28e, gbc.sp());
        EXPECT(0x6eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0034
        gbc.setState(0x5e7, 0xab, 0xcc50, 0x2776, 0x9ea4, 0x7639, 0x1, 0x0);
        gbc.writeMem(0x5e7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xab, gbc.sp());
        EXPECT(0x5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0035
        gbc.setState(0x9e7f, 0xe83, 0x65f0, 0x3673, 0x1836, 0x1228, 0x1, 0x1);
        gbc.writeMem(0x9e7f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe83, gbc.sp());
        EXPECT(0x9e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7f));
        EXPECT(0xb, gbc.readMem(0x9e80));
        // CB 0B 0036
        gbc.setState(0xbddd, 0xc46c, 0x60f0, 0x7aa8, 0x423e, 0x7a45, 0x1, 0x0);
        gbc.writeMem(0xbddd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc46c, gbc.sp());
        EXPECT(0xbddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbddd));
        EXPECT(0xb, gbc.readMem(0xbdde));
        // CB 0B 0037
        gbc.setState(0xc8a6, 0xf97f, 0xdbe0, 0x53b4, 0xca52, 0xb20e, 0x1, 0x0);
        gbc.writeMem(0xc8a6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf97f, gbc.sp());
        EXPECT(0xc8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a6));
        EXPECT(0xb, gbc.readMem(0xc8a7));
        // CB 0B 0038
        gbc.setState(0x5a0b, 0x27ec, 0x8980, 0x2b0c, 0xdbf6, 0xb3e9, 0x0, 0x0);
        gbc.writeMem(0x5a0b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x27ec, gbc.sp());
        EXPECT(0x5a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0039
        gbc.setState(0x28dc, 0x50ba, 0xf320, 0xd28d, 0x435b, 0x2638, 0x0, 0x0);
        gbc.writeMem(0x28dc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x50ba, gbc.sp());
        EXPECT(0x28de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 003A
        gbc.setState(0x3ce1, 0x90db, 0xba80, 0x74cb, 0x6f0, 0x2650, 0x1, 0x1);
        gbc.writeMem(0x3ce1, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x90db, gbc.sp());
        EXPECT(0x3ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 003B
        gbc.setState(0xa065, 0xbf27, 0x1f30, 0x7c1c, 0xa9ee, 0xf1a4, 0x0, 0x0);
        gbc.writeMem(0xa065, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbf27, gbc.sp());
        EXPECT(0xa067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa065));
        EXPECT(0xb, gbc.readMem(0xa066));
        // CB 0B 003C
        gbc.setState(0x74d4, 0x6ae9, 0xffe0, 0xdc1a, 0xbf59, 0x8a25, 0x1, 0x1);
        gbc.writeMem(0x74d4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6ae9, gbc.sp());
        EXPECT(0x74d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 003D
        gbc.setState(0xb805, 0x86fe, 0x7c60, 0x73f5, 0xdc41, 0x448, 0x0, 0x0);
        gbc.writeMem(0xb805, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x86fe, gbc.sp());
        EXPECT(0xb807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb805));
        EXPECT(0xb, gbc.readMem(0xb806));
        // CB 0B 003E
        gbc.setState(0xd1e0, 0xae96, 0xf340, 0x950c, 0x8847, 0xc1cd, 0x1, 0x0);
        gbc.writeMem(0xd1e0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xae96, gbc.sp());
        EXPECT(0xd1e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e0));
        EXPECT(0xb, gbc.readMem(0xd1e1));
        // CB 0B 003F
        gbc.setState(0x7504, 0x95a1, 0xdd10, 0xe6d8, 0x5e6c, 0x2573, 0x0, 0x1);
        gbc.writeMem(0x7504, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x95a1, gbc.sp());
        EXPECT(0x7506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0040
        gbc.setState(0x717, 0xdcc2, 0x2300, 0x6c5a, 0x5214, 0x92d6, 0x0, 0x0);
        gbc.writeMem(0x717, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdcc2, gbc.sp());
        EXPECT(0x719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0041
        gbc.setState(0x93a5, 0x34f2, 0x2160, 0x55fe, 0xe98a, 0x6c6, 0x0, 0x0);
        gbc.writeMem(0x93a5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x34f2, gbc.sp());
        EXPECT(0x93a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a5));
        EXPECT(0xb, gbc.readMem(0x93a6));
        // CB 0B 0042
        gbc.setState(0xec8c, 0xc607, 0x49e0, 0x1a5b, 0x28a6, 0x80c6, 0x1, 0x0);
        gbc.writeMem(0xec8c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc607, gbc.sp());
        EXPECT(0xec8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec8c));
        EXPECT(0xb, gbc.readMem(0xec8d));
        // CB 0B 0043
        gbc.setState(0x3bb0, 0x3a82, 0x30c0, 0xff21, 0xf26c, 0xf5e0, 0x0, 0x0);
        gbc.writeMem(0x3bb0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3a82, gbc.sp());
        EXPECT(0x3bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0044
        gbc.setState(0xcdeb, 0xf9dd, 0xae60, 0x24d8, 0xe331, 0x3d82, 0x1, 0x0);
        gbc.writeMem(0xcdeb, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf9dd, gbc.sp());
        EXPECT(0xcded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdeb));
        EXPECT(0xb, gbc.readMem(0xcdec));
        // CB 0B 0045
        gbc.setState(0xc2da, 0x7ca7, 0x7e20, 0x57b, 0x1ce, 0x24f3, 0x1, 0x0);
        gbc.writeMem(0xc2da, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7ca7, gbc.sp());
        EXPECT(0xc2dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2da));
        EXPECT(0xb, gbc.readMem(0xc2db));
        // CB 0B 0046
        gbc.setState(0x18e7, 0xd3ee, 0x6490, 0x567f, 0x158b, 0xd625, 0x0, 0x0);
        gbc.writeMem(0x18e7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd3ee, gbc.sp());
        EXPECT(0x18e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0047
        gbc.setState(0x36df, 0x1578, 0x6af0, 0xc782, 0x2a17, 0x3cee, 0x1, 0x1);
        gbc.writeMem(0x36df, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1578, gbc.sp());
        EXPECT(0x36e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0048
        gbc.setState(0x9904, 0xb43b, 0x2280, 0xdf18, 0x9282, 0x3f38, 0x1, 0x1);
        gbc.writeMem(0x9904, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb43b, gbc.sp());
        EXPECT(0x9906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9904));
        EXPECT(0xb, gbc.readMem(0x9905));
        // CB 0B 0049
        gbc.setState(0x5431, 0xca69, 0x7910, 0xcc, 0x3a86, 0x3038, 0x0, 0x1);
        gbc.writeMem(0x5431, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xca69, gbc.sp());
        EXPECT(0x5433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 004A
        gbc.setState(0x5c36, 0x13e8, 0xac00, 0x9904, 0xd198, 0x22df, 0x0, 0x1);
        gbc.writeMem(0x5c36, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x13e8, gbc.sp());
        EXPECT(0x5c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 004B
        gbc.setState(0x742f, 0xd519, 0x8bd0, 0x464a, 0x4c50, 0x1a9e, 0x1, 0x1);
        gbc.writeMem(0x742f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd519, gbc.sp());
        EXPECT(0x7431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 004C
        gbc.setState(0x635b, 0x556, 0x1640, 0x2b34, 0x8974, 0x60be, 0x0, 0x0);
        gbc.writeMem(0x635b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x556, gbc.sp());
        EXPECT(0x635d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 004D
        gbc.setState(0x8d94, 0x8b89, 0x3d90, 0x61a5, 0xf6f, 0xce15, 0x0, 0x1);
        gbc.writeMem(0x8d94, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8b89, gbc.sp());
        EXPECT(0x8d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d94));
        EXPECT(0xb, gbc.readMem(0x8d95));
        // CB 0B 004E
        gbc.setState(0x61bc, 0xd3e0, 0x1c20, 0xbc0b, 0x41cc, 0xed31, 0x1, 0x0);
        gbc.writeMem(0x61bc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd3e0, gbc.sp());
        EXPECT(0x61be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 004F
        gbc.setState(0xedd4, 0xba4a, 0xb690, 0x66a6, 0x4880, 0x62d1, 0x0, 0x0);
        gbc.writeMem(0xedd4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xba4a, gbc.sp());
        EXPECT(0xedd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd4));
        EXPECT(0xb, gbc.readMem(0xedd5));
        // CB 0B 0050
        gbc.setState(0x7fa7, 0xbf06, 0x9680, 0x5989, 0xa3aa, 0xd9fd, 0x0, 0x0);
        gbc.writeMem(0x7fa7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbf06, gbc.sp());
        EXPECT(0x7fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0051
        gbc.setState(0xa9da, 0xa22, 0x5780, 0x36f5, 0xf07c, 0x45d0, 0x1, 0x0);
        gbc.writeMem(0xa9da, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa22, gbc.sp());
        EXPECT(0xa9dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9da));
        EXPECT(0xb, gbc.readMem(0xa9db));
        // CB 0B 0052
        gbc.setState(0x987b, 0x80f, 0xad0, 0xe708, 0xbd8d, 0x5221, 0x0, 0x1);
        gbc.writeMem(0x987b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x80f, gbc.sp());
        EXPECT(0x987d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x987b));
        EXPECT(0xb, gbc.readMem(0x987c));
        // CB 0B 0053
        gbc.setState(0x536, 0x59c, 0xf470, 0x93c4, 0xbc48, 0x599, 0x1, 0x1);
        gbc.writeMem(0x536, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x59c, gbc.sp());
        EXPECT(0x538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0054
        gbc.setState(0x7f12, 0x7a67, 0x5f60, 0x2f07, 0x79c3, 0x2aa3, 0x0, 0x1);
        gbc.writeMem(0x7f12, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7a67, gbc.sp());
        EXPECT(0x7f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0055
        gbc.setState(0x8ce1, 0x8918, 0xa1a0, 0x6b5a, 0x58e6, 0xdca0, 0x0, 0x1);
        gbc.writeMem(0x8ce1, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8918, gbc.sp());
        EXPECT(0x8ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce1));
        EXPECT(0xb, gbc.readMem(0x8ce2));
        // CB 0B 0056
        gbc.setState(0xe95b, 0xfa7f, 0xf30, 0xa7b2, 0x4d74, 0x8c48, 0x1, 0x1);
        gbc.writeMem(0xe95b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfa7f, gbc.sp());
        EXPECT(0xe95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95b));
        EXPECT(0xb, gbc.readMem(0xe95c));
        // CB 0B 0057
        gbc.setState(0xef8d, 0x29ee, 0x8f30, 0x5677, 0x31d6, 0x8ff, 0x0, 0x1);
        gbc.writeMem(0xef8d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x29ee, gbc.sp());
        EXPECT(0xef8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef8d));
        EXPECT(0xb, gbc.readMem(0xef8e));
        // CB 0B 0058
        gbc.setState(0x1ab1, 0xc15, 0xbb80, 0xbdfb, 0xf337, 0x2eb8, 0x0, 0x1);
        gbc.writeMem(0x1ab1, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc15, gbc.sp());
        EXPECT(0x1ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0059
        gbc.setState(0x2c5f, 0x4edb, 0x1c10, 0xf63, 0xa26c, 0xf966, 0x1, 0x1);
        gbc.writeMem(0x2c5f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4edb, gbc.sp());
        EXPECT(0x2c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 005A
        gbc.setState(0xc9c2, 0x882d, 0x260, 0x298c, 0x62cb, 0x41cc, 0x1, 0x0);
        gbc.writeMem(0xc9c2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x882d, gbc.sp());
        EXPECT(0xc9c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c2));
        EXPECT(0xb, gbc.readMem(0xc9c3));
        // CB 0B 005B
        gbc.setState(0x6cf7, 0xfedc, 0x1af0, 0x6655, 0x6241, 0xebb9, 0x1, 0x1);
        gbc.writeMem(0x6cf7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfedc, gbc.sp());
        EXPECT(0x6cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 005C
        gbc.setState(0xe5b, 0x6139, 0x36f0, 0xae93, 0x82b3, 0x151, 0x1, 0x0);
        gbc.writeMem(0xe5b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6139, gbc.sp());
        EXPECT(0xe5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 005D
        gbc.setState(0x5747, 0x6747, 0x1ce0, 0xd6c9, 0x46c8, 0x9d7a, 0x1, 0x1);
        gbc.writeMem(0x5747, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6747, gbc.sp());
        EXPECT(0x5749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 005E
        gbc.setState(0x722a, 0x23f8, 0x4740, 0x18b9, 0x8956, 0xb539, 0x0, 0x0);
        gbc.writeMem(0x722a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x23f8, gbc.sp());
        EXPECT(0x722c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 005F
        gbc.setState(0xeed0, 0x66fc, 0x4640, 0x5033, 0xba28, 0xe2e6, 0x0, 0x0);
        gbc.writeMem(0xeed0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x66fc, gbc.sp());
        EXPECT(0xeed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed0));
        EXPECT(0xb, gbc.readMem(0xeed1));
        // CB 0B 0060
        gbc.setState(0x5e19, 0xbc11, 0x17d0, 0x1fcd, 0xcce7, 0x3a49, 0x0, 0x1);
        gbc.writeMem(0x5e19, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbc11, gbc.sp());
        EXPECT(0x5e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0061
        gbc.setState(0xa0a8, 0xb30c, 0xaff0, 0xd9b8, 0x8b26, 0xcac2, 0x1, 0x0);
        gbc.writeMem(0xa0a8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb30c, gbc.sp());
        EXPECT(0xa0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a8));
        EXPECT(0xb, gbc.readMem(0xa0a9));
        // CB 0B 0062
        gbc.setState(0x89bc, 0x41b5, 0xaaa0, 0xe2d4, 0x29c9, 0x8a51, 0x1, 0x1);
        gbc.writeMem(0x89bc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x41b5, gbc.sp());
        EXPECT(0x89be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89bc));
        EXPECT(0xb, gbc.readMem(0x89bd));
        // CB 0B 0063
        gbc.setState(0x93ad, 0x277e, 0xd090, 0xe828, 0x6550, 0xaba1, 0x1, 0x1);
        gbc.writeMem(0x93ad, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x277e, gbc.sp());
        EXPECT(0x93af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ad));
        EXPECT(0xb, gbc.readMem(0x93ae));
        // CB 0B 0064
        gbc.setState(0x3439, 0x3ff1, 0x4fd0, 0x5875, 0x74c5, 0x6f7f, 0x1, 0x1);
        gbc.writeMem(0x3439, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3ff1, gbc.sp());
        EXPECT(0x343b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0065
        gbc.setState(0x4f5d, 0xa4d5, 0x14a0, 0xf577, 0x97f4, 0x8327, 0x0, 0x1);
        gbc.writeMem(0x4f5d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa4d5, gbc.sp());
        EXPECT(0x4f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0066
        gbc.setState(0x3c9, 0x5042, 0xb3a0, 0x5b1f, 0x879f, 0xa89e, 0x1, 0x0);
        gbc.writeMem(0x3c9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5042, gbc.sp());
        EXPECT(0x3cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0067
        gbc.setState(0xe221, 0x4966, 0x8430, 0xb2c5, 0xcfbf, 0xef7c, 0x0, 0x1);
        gbc.writeMem(0xe221, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4966, gbc.sp());
        EXPECT(0xe223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe221));
        EXPECT(0xb, gbc.readMem(0xe222));
        // CB 0B 0068
        gbc.setState(0x6d94, 0x69f, 0x3df0, 0x23f, 0x7eb0, 0xe12a, 0x1, 0x1);
        gbc.writeMem(0x6d94, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x69f, gbc.sp());
        EXPECT(0x6d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0069
        gbc.setState(0x5bdf, 0x6a0, 0xa090, 0xe249, 0x7012, 0xf37e, 0x0, 0x0);
        gbc.writeMem(0x5bdf, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6a0, gbc.sp());
        EXPECT(0x5be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 006A
        gbc.setState(0xbe38, 0x160c, 0x2830, 0xf612, 0xc1bf, 0x7ec7, 0x0, 0x0);
        gbc.writeMem(0xbe38, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x160c, gbc.sp());
        EXPECT(0xbe3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe38));
        EXPECT(0xb, gbc.readMem(0xbe39));
        // CB 0B 006B
        gbc.setState(0x804e, 0xf14f, 0xdde0, 0x3b7f, 0xe452, 0xae68, 0x0, 0x0);
        gbc.writeMem(0x804e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf14f, gbc.sp());
        EXPECT(0x8050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x804e));
        EXPECT(0xb, gbc.readMem(0x804f));
        // CB 0B 006C
        gbc.setState(0x580e, 0x8bf3, 0x46e0, 0x436f, 0x53d0, 0xb3f4, 0x1, 0x1);
        gbc.writeMem(0x580e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8bf3, gbc.sp());
        EXPECT(0x5810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 006D
        gbc.setState(0xc927, 0xacfc, 0xcc70, 0xb4ac, 0xad5b, 0x8c01, 0x0, 0x0);
        gbc.writeMem(0xc927, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xacfc, gbc.sp());
        EXPECT(0xc929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc927));
        EXPECT(0xb, gbc.readMem(0xc928));
        // CB 0B 006F
        gbc.setState(0xc8c2, 0x7c76, 0x5a80, 0xf885, 0xb4b0, 0x2591, 0x0, 0x1);
        gbc.writeMem(0xc8c2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7c76, gbc.sp());
        EXPECT(0xc8c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c2));
        EXPECT(0xb, gbc.readMem(0xc8c3));
        // CB 0B 0070
        gbc.setState(0x1c4b, 0xd5c2, 0xe430, 0x6bef, 0x4d0f, 0x71f2, 0x0, 0x1);
        gbc.writeMem(0x1c4b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd5c2, gbc.sp());
        EXPECT(0x1c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0071
        gbc.setState(0x1dc6, 0x3c0, 0x6a70, 0xd16c, 0x5cdd, 0x173, 0x0, 0x0);
        gbc.writeMem(0x1dc6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3c0, gbc.sp());
        EXPECT(0x1dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0072
        gbc.setState(0x822d, 0x39a7, 0x5e50, 0xe710, 0xd663, 0x9294, 0x0, 0x0);
        gbc.writeMem(0x822d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x39a7, gbc.sp());
        EXPECT(0x822f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822d));
        EXPECT(0xb, gbc.readMem(0x822e));
        // CB 0B 0073
        gbc.setState(0xcacf, 0x7607, 0x2010, 0xc47c, 0x9cab, 0x64fa, 0x0, 0x1);
        gbc.writeMem(0xcacf, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7607, gbc.sp());
        EXPECT(0xcad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcacf));
        EXPECT(0xb, gbc.readMem(0xcad0));
        // CB 0B 0074
        gbc.setState(0x33aa, 0x8a26, 0x4dc0, 0xb1b, 0xa4e2, 0x498e, 0x0, 0x1);
        gbc.writeMem(0x33aa, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8a26, gbc.sp());
        EXPECT(0x33ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0075
        gbc.setState(0xa316, 0xa2a, 0x48c0, 0x8c29, 0x8982, 0x29ad, 0x1, 0x0);
        gbc.writeMem(0xa316, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa2a, gbc.sp());
        EXPECT(0xa318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa316));
        EXPECT(0xb, gbc.readMem(0xa317));
        // CB 0B 0076
        gbc.setState(0xba7e, 0x3b1a, 0x21f0, 0x2472, 0x8399, 0x3f50, 0x0, 0x0);
        gbc.writeMem(0xba7e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3b1a, gbc.sp());
        EXPECT(0xba80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba7e));
        EXPECT(0xb, gbc.readMem(0xba7f));
        // CB 0B 0077
        gbc.setState(0x381, 0xddba, 0x4230, 0x5a9a, 0x4595, 0x8c75, 0x1, 0x0);
        gbc.writeMem(0x381, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xddba, gbc.sp());
        EXPECT(0x383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0078
        gbc.setState(0x4809, 0xcbec, 0x6540, 0x363, 0x4a4, 0xfe93, 0x0, 0x1);
        gbc.writeMem(0x4809, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcbec, gbc.sp());
        EXPECT(0x480b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 007A
        gbc.setState(0x865e, 0x228d, 0x1bd0, 0x5c8a, 0x460d, 0x1c16, 0x1, 0x1);
        gbc.writeMem(0x865e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x228d, gbc.sp());
        EXPECT(0x8660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865e));
        EXPECT(0xb, gbc.readMem(0x865f));
        // CB 0B 007B
        gbc.setState(0x32da, 0x190a, 0x11c0, 0xe40, 0x9810, 0x8765, 0x1, 0x0);
        gbc.writeMem(0x32da, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x190a, gbc.sp());
        EXPECT(0x32dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 007C
        gbc.setState(0xebf0, 0xf18a, 0xd7a0, 0xf68e, 0xc0b7, 0x48ac, 0x0, 0x0);
        gbc.writeMem(0xebf0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf18a, gbc.sp());
        EXPECT(0xebf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf0));
        EXPECT(0xb, gbc.readMem(0xebf1));
        // CB 0B 007D
        gbc.setState(0x71df, 0xbe79, 0xcfc0, 0xe715, 0x4f0d, 0x4db, 0x0, 0x0);
        gbc.writeMem(0x71df, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbe79, gbc.sp());
        EXPECT(0x71e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 007E
        gbc.setState(0x598f, 0x62f7, 0xc6a0, 0xa403, 0x85db, 0x98fd, 0x0, 0x0);
        gbc.writeMem(0x598f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x62f7, gbc.sp());
        EXPECT(0x5991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 007F
        gbc.setState(0x5985, 0x7ea2, 0x7920, 0xd271, 0xb7ce, 0x2cec, 0x0, 0x1);
        gbc.writeMem(0x5985, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7ea2, gbc.sp());
        EXPECT(0x5987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0080
        gbc.setState(0x3fca, 0x58be, 0x3af0, 0x7d5f, 0xb3e9, 0xf998, 0x0, 0x1);
        gbc.writeMem(0x3fca, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x58be, gbc.sp());
        EXPECT(0x3fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0081
        gbc.setState(0xa9c7, 0x73c9, 0x9170, 0x9823, 0xba33, 0x1e56, 0x1, 0x0);
        gbc.writeMem(0xa9c7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x73c9, gbc.sp());
        EXPECT(0xa9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c7));
        EXPECT(0xb, gbc.readMem(0xa9c8));
        // CB 0B 0082
        gbc.setState(0x26aa, 0x8cd3, 0x6ba0, 0xfc55, 0x9811, 0x5156, 0x1, 0x0);
        gbc.writeMem(0x26aa, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8cd3, gbc.sp());
        EXPECT(0x26ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0083
        gbc.setState(0xc4b9, 0xb778, 0x1430, 0x519, 0x25f7, 0x65e7, 0x0, 0x1);
        gbc.writeMem(0xc4b9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb778, gbc.sp());
        EXPECT(0xc4bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b9));
        EXPECT(0xb, gbc.readMem(0xc4ba));
        // CB 0B 0085
        gbc.setState(0xe1da, 0xf497, 0x4630, 0x21cb, 0xf45c, 0x9f98, 0x1, 0x1);
        gbc.writeMem(0xe1da, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf497, gbc.sp());
        EXPECT(0xe1dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1da));
        EXPECT(0xb, gbc.readMem(0xe1db));
        // CB 0B 0086
        gbc.setState(0xbaaf, 0x5f61, 0x32d0, 0x6e4a, 0x8d83, 0xb09a, 0x0, 0x0);
        gbc.writeMem(0xbaaf, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5f61, gbc.sp());
        EXPECT(0xbab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaaf));
        EXPECT(0xb, gbc.readMem(0xbab0));
        // CB 0B 0087
        gbc.setState(0x7028, 0x21fd, 0xc5b0, 0x7f44, 0x3958, 0xe73, 0x1, 0x0);
        gbc.writeMem(0x7028, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x21fd, gbc.sp());
        EXPECT(0x702a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0088
        gbc.setState(0xc8a6, 0x3771, 0x2890, 0x4e50, 0x724a, 0x6715, 0x1, 0x0);
        gbc.writeMem(0xc8a6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3771, gbc.sp());
        EXPECT(0xc8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a6));
        EXPECT(0xb, gbc.readMem(0xc8a7));
        // CB 0B 0089
        gbc.setState(0x8c47, 0xcfb3, 0x5950, 0x7ba8, 0x3f35, 0xcfa, 0x1, 0x1);
        gbc.writeMem(0x8c47, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xcfb3, gbc.sp());
        EXPECT(0x8c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c47));
        EXPECT(0xb, gbc.readMem(0x8c48));
        // CB 0B 008A
        gbc.setState(0x6d3e, 0x80fc, 0xde40, 0x88ee, 0x3c90, 0x75c7, 0x1, 0x1);
        gbc.writeMem(0x6d3e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x80fc, gbc.sp());
        EXPECT(0x6d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 008B
        gbc.setState(0x3e55, 0x355, 0xcf10, 0xd769, 0x2dc8, 0xf2de, 0x0, 0x0);
        gbc.writeMem(0x3e55, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x355, gbc.sp());
        EXPECT(0x3e57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 008C
        gbc.setState(0x9ff5, 0x469e, 0xd930, 0xb86e, 0x6f3f, 0x9759, 0x0, 0x0);
        gbc.writeMem(0x9ff5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x469e, gbc.sp());
        EXPECT(0x9ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff5));
        EXPECT(0xb, gbc.readMem(0x9ff6));
        // CB 0B 008D
        gbc.setState(0x8caa, 0x250e, 0x240, 0x5e7e, 0x4e47, 0xf8f6, 0x1, 0x1);
        gbc.writeMem(0x8caa, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x250e, gbc.sp());
        EXPECT(0x8cac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8caa));
        EXPECT(0xb, gbc.readMem(0x8cab));
        // CB 0B 008E
        gbc.setState(0x3b39, 0x38e0, 0xa5a0, 0x9f97, 0x75cb, 0x74fd, 0x0, 0x0);
        gbc.writeMem(0x3b39, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x38e0, gbc.sp());
        EXPECT(0x3b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0090
        gbc.setState(0x240f, 0x5d0, 0x9b20, 0x1bd7, 0xbf1d, 0xbd28, 0x1, 0x1);
        gbc.writeMem(0x240f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5d0, gbc.sp());
        EXPECT(0x2411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0092
        gbc.setState(0x1169, 0xcc96, 0x3e20, 0xe9e6, 0xc5, 0xd7d, 0x1, 0x1);
        gbc.writeMem(0x1169, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcc96, gbc.sp());
        EXPECT(0x116b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0093
        gbc.setState(0x19, 0x3f01, 0x9c20, 0x9ef1, 0x8629, 0x2ed7, 0x0, 0x1);
        gbc.writeMem(0x19, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3f01, gbc.sp());
        EXPECT(0x1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0094
        gbc.setState(0x989b, 0x48d8, 0x4a40, 0xd28b, 0x1cc6, 0x3a5, 0x1, 0x1);
        gbc.writeMem(0x989b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x48d8, gbc.sp());
        EXPECT(0x989d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989b));
        EXPECT(0xb, gbc.readMem(0x989c));
        // CB 0B 0095
        gbc.setState(0xe05a, 0x26dd, 0xefb0, 0x5ae7, 0xacc3, 0xe04, 0x1, 0x0);
        gbc.writeMem(0xe05a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x26dd, gbc.sp());
        EXPECT(0xe05c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe05a));
        EXPECT(0xb, gbc.readMem(0xe05b));
        // CB 0B 0096
        gbc.setState(0xcb8b, 0xec8d, 0x71f0, 0x79b6, 0x886, 0x446, 0x0, 0x1);
        gbc.writeMem(0xcb8b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xec8d, gbc.sp());
        EXPECT(0xcb8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8b));
        EXPECT(0xb, gbc.readMem(0xcb8c));
        // CB 0B 0097
        gbc.setState(0x4df2, 0x48bf, 0xfbd0, 0x10b7, 0x251d, 0x1b3f, 0x1, 0x1);
        gbc.writeMem(0x4df2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x48bf, gbc.sp());
        EXPECT(0x4df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0098
        gbc.setState(0x1fea, 0xe9a1, 0xaf90, 0x26b8, 0xa0b5, 0xe1d9, 0x1, 0x0);
        gbc.writeMem(0x1fea, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe9a1, gbc.sp());
        EXPECT(0x1fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0099
        gbc.setState(0x39c7, 0x3b65, 0x3030, 0x9545, 0xe66e, 0xb2bb, 0x1, 0x1);
        gbc.writeMem(0x39c7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3b65, gbc.sp());
        EXPECT(0x39c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 009A
        gbc.setState(0x8ac7, 0x2f55, 0x2fe0, 0xb452, 0x5a11, 0x69d1, 0x1, 0x1);
        gbc.writeMem(0x8ac7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2f55, gbc.sp());
        EXPECT(0x8ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac7));
        EXPECT(0xb, gbc.readMem(0x8ac8));
        // CB 0B 009B
        gbc.setState(0xe9ff, 0x4e06, 0x17f0, 0x1445, 0x67dc, 0xd35a, 0x1, 0x1);
        gbc.writeMem(0xe9ff, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4e06, gbc.sp());
        EXPECT(0xea01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ff));
        EXPECT(0xb, gbc.readMem(0xea00));
        // CB 0B 009C
        gbc.setState(0x329d, 0xd876, 0x3780, 0x57f, 0xc20d, 0xc378, 0x0, 0x1);
        gbc.writeMem(0x329d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd876, gbc.sp());
        EXPECT(0x329f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 009D
        gbc.setState(0x9c78, 0xf7d5, 0x2090, 0xe991, 0x86d4, 0x1991, 0x1, 0x1);
        gbc.writeMem(0x9c78, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf7d5, gbc.sp());
        EXPECT(0x9c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c78));
        EXPECT(0xb, gbc.readMem(0x9c79));
        // CB 0B 009E
        gbc.setState(0x314e, 0xe2c1, 0x28f0, 0x56bb, 0xb3bd, 0xb20d, 0x0, 0x1);
        gbc.writeMem(0x314e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe2c1, gbc.sp());
        EXPECT(0x3150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 009F
        gbc.setState(0xe0fa, 0x560f, 0x8f20, 0xd8ee, 0x1158, 0x6ddc, 0x1, 0x1);
        gbc.writeMem(0xe0fa, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x560f, gbc.sp());
        EXPECT(0xe0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0fa));
        EXPECT(0xb, gbc.readMem(0xe0fb));
        // CB 0B 00A0
        gbc.setState(0x26b5, 0xdfaf, 0xbf80, 0x9c2e, 0x8527, 0x625f, 0x0, 0x1);
        gbc.writeMem(0x26b5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdfaf, gbc.sp());
        EXPECT(0x26b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00A1
        gbc.setState(0xa3e2, 0xda3d, 0x590, 0x5760, 0xb069, 0x6ae7, 0x1, 0x1);
        gbc.writeMem(0xa3e2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xda3d, gbc.sp());
        EXPECT(0xa3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e2));
        EXPECT(0xb, gbc.readMem(0xa3e3));
        // CB 0B 00A2
        gbc.setState(0xe012, 0x2af, 0x95f0, 0x5a6f, 0x4668, 0x11c, 0x0, 0x1);
        gbc.writeMem(0xe012, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2af, gbc.sp());
        EXPECT(0xe014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe012));
        EXPECT(0xb, gbc.readMem(0xe013));
        // CB 0B 00A3
        gbc.setState(0x21e7, 0xdefe, 0xc9a0, 0x587d, 0xd588, 0xcad2, 0x0, 0x0);
        gbc.writeMem(0x21e7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdefe, gbc.sp());
        EXPECT(0x21e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00A4
        gbc.setState(0xdf89, 0x6c17, 0x8250, 0x8fee, 0x131a, 0x88a9, 0x1, 0x1);
        gbc.writeMem(0xdf89, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6c17, gbc.sp());
        EXPECT(0xdf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf89));
        EXPECT(0xb, gbc.readMem(0xdf8a));
        // CB 0B 00A5
        gbc.setState(0xdc29, 0x7f17, 0x7290, 0xd734, 0xfbeb, 0xa9a0, 0x1, 0x1);
        gbc.writeMem(0xdc29, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7f17, gbc.sp());
        EXPECT(0xdc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc29));
        EXPECT(0xb, gbc.readMem(0xdc2a));
        // CB 0B 00A6
        gbc.setState(0x6642, 0xe1ab, 0x1940, 0x311e, 0x81bc, 0x8ae4, 0x0, 0x0);
        gbc.writeMem(0x6642, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe1ab, gbc.sp());
        EXPECT(0x6644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00A8
        gbc.setState(0x5fa4, 0x7647, 0x9e20, 0x7c1e, 0x3a75, 0xefc3, 0x1, 0x0);
        gbc.writeMem(0x5fa4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7647, gbc.sp());
        EXPECT(0x5fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00A9
        gbc.setState(0xbd72, 0x8263, 0x7cc0, 0x5d04, 0x53a5, 0xc10d, 0x0, 0x0);
        gbc.writeMem(0xbd72, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8263, gbc.sp());
        EXPECT(0xbd74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd72));
        EXPECT(0xb, gbc.readMem(0xbd73));
        // CB 0B 00AA
        gbc.setState(0xcda, 0x705b, 0xc7d0, 0x990c, 0x4e83, 0xa693, 0x1, 0x0);
        gbc.writeMem(0xcda, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x705b, gbc.sp());
        EXPECT(0xcdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00AB
        gbc.setState(0x79e, 0xee7f, 0xba70, 0xa46c, 0x5c63, 0x749f, 0x1, 0x1);
        gbc.writeMem(0x79e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xee7f, gbc.sp());
        EXPECT(0x7a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00AC
        gbc.setState(0xd5f8, 0xd4ee, 0x9640, 0x1c6a, 0x799b, 0x8430, 0x1, 0x0);
        gbc.writeMem(0xd5f8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd4ee, gbc.sp());
        EXPECT(0xd5fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5f8));
        EXPECT(0xb, gbc.readMem(0xd5f9));
        // CB 0B 00AD
        gbc.setState(0xa438, 0x6973, 0xb800, 0x90f0, 0x61f7, 0x23e, 0x1, 0x0);
        gbc.writeMem(0xa438, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6973, gbc.sp());
        EXPECT(0xa43a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa438));
        EXPECT(0xb, gbc.readMem(0xa439));
        // CB 0B 00AE
        gbc.setState(0xb006, 0x363e, 0x8990, 0xc2b, 0x9955, 0xf89b, 0x0, 0x1);
        gbc.writeMem(0xb006, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x363e, gbc.sp());
        EXPECT(0xb008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb006));
        EXPECT(0xb, gbc.readMem(0xb007));
        // CB 0B 00AF
        gbc.setState(0xeb49, 0xe680, 0x9550, 0x9bc4, 0xe61f, 0x9f85, 0x0, 0x0);
        gbc.writeMem(0xeb49, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe680, gbc.sp());
        EXPECT(0xeb4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb49));
        EXPECT(0xb, gbc.readMem(0xeb4a));
        // CB 0B 00B0
        gbc.setState(0xbc53, 0x6ceb, 0x7260, 0xd5e3, 0xefeb, 0x58d8, 0x1, 0x0);
        gbc.writeMem(0xbc53, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6ceb, gbc.sp());
        EXPECT(0xbc55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc53));
        EXPECT(0xb, gbc.readMem(0xbc54));
        // CB 0B 00B2
        gbc.setState(0x6db7, 0x51e, 0xb110, 0xc8ad, 0x6dd9, 0xc6e2, 0x0, 0x1);
        gbc.writeMem(0x6db7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x51e, gbc.sp());
        EXPECT(0x6db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00B3
        gbc.setState(0xc4c3, 0xcead, 0xee90, 0x1ead, 0xcef3, 0x53a0, 0x0, 0x1);
        gbc.writeMem(0xc4c3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcead, gbc.sp());
        EXPECT(0xc4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c3));
        EXPECT(0xb, gbc.readMem(0xc4c4));
        // CB 0B 00B4
        gbc.setState(0x6cd9, 0x9164, 0xf000, 0xe2ee, 0x2e81, 0x787e, 0x1, 0x1);
        gbc.writeMem(0x6cd9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9164, gbc.sp());
        EXPECT(0x6cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00B5
        gbc.setState(0xde21, 0x6089, 0xe910, 0x776f, 0xdba, 0xfdb, 0x0, 0x0);
        gbc.writeMem(0xde21, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6089, gbc.sp());
        EXPECT(0xde23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde21));
        EXPECT(0xb, gbc.readMem(0xde22));
        // CB 0B 00B6
        gbc.setState(0xaab6, 0x21f0, 0x26b0, 0xa211, 0x1089, 0x8844, 0x1, 0x0);
        gbc.writeMem(0xaab6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x21f0, gbc.sp());
        EXPECT(0xaab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab6));
        EXPECT(0xb, gbc.readMem(0xaab7));
        // CB 0B 00B7
        gbc.setState(0xac21, 0x6f47, 0x6700, 0x792d, 0xec63, 0x74a2, 0x0, 0x1);
        gbc.writeMem(0xac21, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6f47, gbc.sp());
        EXPECT(0xac23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac21));
        EXPECT(0xb, gbc.readMem(0xac22));
        // CB 0B 00B8
        gbc.setState(0x18c5, 0x3597, 0xf800, 0x8655, 0xd9a2, 0x9309, 0x0, 0x0);
        gbc.writeMem(0x18c5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3597, gbc.sp());
        EXPECT(0x18c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00B9
        gbc.setState(0x5c00, 0x4a29, 0xb840, 0xbc62, 0xe38a, 0x82e, 0x1, 0x1);
        gbc.writeMem(0x5c00, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4a29, gbc.sp());
        EXPECT(0x5c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00BA
        gbc.setState(0xc06e, 0x5416, 0xb450, 0x177f, 0xdfe, 0x4342, 0x0, 0x0);
        gbc.writeMem(0xc06e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5416, gbc.sp());
        EXPECT(0xc070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc06e));
        EXPECT(0xb, gbc.readMem(0xc06f));
        // CB 0B 00BB
        gbc.setState(0xdc04, 0x1184, 0x17c0, 0x843b, 0x7cdf, 0xef21, 0x1, 0x0);
        gbc.writeMem(0xdc04, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1184, gbc.sp());
        EXPECT(0xdc06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc04));
        EXPECT(0xb, gbc.readMem(0xdc05));
        // CB 0B 00BC
        gbc.setState(0x76d9, 0x2df1, 0x42c0, 0x17ea, 0x3617, 0xb3fd, 0x0, 0x0);
        gbc.writeMem(0x76d9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2df1, gbc.sp());
        EXPECT(0x76db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00BD
        gbc.setState(0x15f0, 0xb4d1, 0x500, 0x6a32, 0x5b4b, 0xfc9a, 0x1, 0x1);
        gbc.writeMem(0x15f0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb4d1, gbc.sp());
        EXPECT(0x15f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00BF
        gbc.setState(0x9e65, 0x65f1, 0x65d0, 0x78e1, 0xdce1, 0xadee, 0x0, 0x1);
        gbc.writeMem(0x9e65, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x65f1, gbc.sp());
        EXPECT(0x9e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e65));
        EXPECT(0xb, gbc.readMem(0x9e66));
        // CB 0B 00C0
        gbc.setState(0x8bb9, 0x82e1, 0xe450, 0xbe7a, 0x58b3, 0x8f3f, 0x1, 0x0);
        gbc.writeMem(0x8bb9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x82e1, gbc.sp());
        EXPECT(0x8bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb9));
        EXPECT(0xb, gbc.readMem(0x8bba));
        // CB 0B 00C1
        gbc.setState(0x5d3c, 0xf6fa, 0x4a40, 0xb606, 0xcab9, 0x241a, 0x1, 0x1);
        gbc.writeMem(0x5d3c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf6fa, gbc.sp());
        EXPECT(0x5d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00C2
        gbc.setState(0xae44, 0x64a9, 0x1000, 0x6beb, 0x5726, 0x11a4, 0x1, 0x1);
        gbc.writeMem(0xae44, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x64a9, gbc.sp());
        EXPECT(0xae46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae44));
        EXPECT(0xb, gbc.readMem(0xae45));
        // CB 0B 00C3
        gbc.setState(0x809e, 0x9ec9, 0x30a0, 0xf09b, 0x36bc, 0xb4cb, 0x1, 0x0);
        gbc.writeMem(0x809e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9ec9, gbc.sp());
        EXPECT(0x80a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809e));
        EXPECT(0xb, gbc.readMem(0x809f));
        // CB 0B 00C4
        gbc.setState(0x539e, 0xb803, 0x3dd0, 0x17fc, 0xabb, 0x4519, 0x0, 0x0);
        gbc.writeMem(0x539e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb803, gbc.sp());
        EXPECT(0x53a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00C5
        gbc.setState(0xdc61, 0xa04, 0xaff0, 0xf6aa, 0x8883, 0x758e, 0x0, 0x1);
        gbc.writeMem(0xdc61, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa04, gbc.sp());
        EXPECT(0xdc63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc61));
        EXPECT(0xb, gbc.readMem(0xdc62));
        // CB 0B 00C6
        gbc.setState(0xef2b, 0xeaeb, 0xfd60, 0x95c2, 0x478b, 0x5afe, 0x0, 0x1);
        gbc.writeMem(0xef2b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xeaeb, gbc.sp());
        EXPECT(0xef2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2b));
        EXPECT(0xb, gbc.readMem(0xef2c));
        // CB 0B 00C7
        gbc.setState(0xb186, 0x6cfb, 0x5080, 0x106c, 0x76f0, 0xffd, 0x0, 0x0);
        gbc.writeMem(0xb186, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6cfb, gbc.sp());
        EXPECT(0xb188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb186));
        EXPECT(0xb, gbc.readMem(0xb187));
        // CB 0B 00C8
        gbc.setState(0xc4c7, 0xc12c, 0x1120, 0x5403, 0x27c4, 0xcc9f, 0x1, 0x0);
        gbc.writeMem(0xc4c7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc12c, gbc.sp());
        EXPECT(0xc4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c7));
        EXPECT(0xb, gbc.readMem(0xc4c8));
        // CB 0B 00C9
        gbc.setState(0xa08b, 0x4d03, 0x5ce0, 0x6dfc, 0xb0e9, 0x1782, 0x0, 0x1);
        gbc.writeMem(0xa08b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4d03, gbc.sp());
        EXPECT(0xa08d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa08b));
        EXPECT(0xb, gbc.readMem(0xa08c));
        // CB 0B 00CA
        gbc.setState(0x5874, 0x3ec9, 0x86a0, 0xa5a3, 0x7dd8, 0x37ed, 0x1, 0x1);
        gbc.writeMem(0x5874, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3ec9, gbc.sp());
        EXPECT(0x5876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00CB
        gbc.setState(0xca74, 0x8c22, 0x1e0, 0x388c, 0x3f13, 0x95be, 0x0, 0x1);
        gbc.writeMem(0xca74, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8c22, gbc.sp());
        EXPECT(0xca76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca74));
        EXPECT(0xb, gbc.readMem(0xca75));
        // CB 0B 00CD
        gbc.setState(0x7b7a, 0xeeb9, 0x9990, 0x6b3d, 0x9f05, 0x3f3b, 0x0, 0x0);
        gbc.writeMem(0x7b7a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xeeb9, gbc.sp());
        EXPECT(0x7b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00CE
        gbc.setState(0xa79, 0x355c, 0x8e10, 0x9fb6, 0xda6a, 0x1bbe, 0x1, 0x0);
        gbc.writeMem(0xa79, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x355c, gbc.sp());
        EXPECT(0xa7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00CF
        gbc.setState(0x4905, 0xb746, 0xb80, 0xa90, 0xea49, 0x92fe, 0x1, 0x1);
        gbc.writeMem(0x4905, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb746, gbc.sp());
        EXPECT(0x4907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00D0
        gbc.setState(0x3c7e, 0xb1db, 0x5590, 0x1608, 0x30a6, 0xce7b, 0x1, 0x1);
        gbc.writeMem(0x3c7e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb1db, gbc.sp());
        EXPECT(0x3c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00D1
        gbc.setState(0xeadc, 0x6af2, 0x2ea0, 0x16f, 0x710f, 0xdb30, 0x1, 0x0);
        gbc.writeMem(0xeadc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6af2, gbc.sp());
        EXPECT(0xeade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeadc));
        EXPECT(0xb, gbc.readMem(0xeadd));
        // CB 0B 00D2
        gbc.setState(0xd0bf, 0x52b, 0x38a0, 0xf82c, 0x8b8f, 0x5e36, 0x0, 0x0);
        gbc.writeMem(0xd0bf, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x52b, gbc.sp());
        EXPECT(0xd0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0bf));
        EXPECT(0xb, gbc.readMem(0xd0c0));
        // CB 0B 00D3
        gbc.setState(0x93d9, 0x2af7, 0x77e0, 0xb90d, 0x1341, 0x6d17, 0x0, 0x0);
        gbc.writeMem(0x93d9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2af7, gbc.sp());
        EXPECT(0x93db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d9));
        EXPECT(0xb, gbc.readMem(0x93da));
        // CB 0B 00D4
        gbc.setState(0xba09, 0x6a80, 0x640, 0xee, 0x379f, 0x8463, 0x1, 0x1);
        gbc.writeMem(0xba09, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6a80, gbc.sp());
        EXPECT(0xba0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba09));
        EXPECT(0xb, gbc.readMem(0xba0a));
        // CB 0B 00D5
        gbc.setState(0xe248, 0x1edd, 0x67e0, 0x38e2, 0xdfdd, 0x2843, 0x0, 0x1);
        gbc.writeMem(0xe248, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1edd, gbc.sp());
        EXPECT(0xe24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe248));
        EXPECT(0xb, gbc.readMem(0xe249));
        // CB 0B 00D6
        gbc.setState(0x93a1, 0x442c, 0x9050, 0xeea6, 0x6571, 0x1600, 0x1, 0x0);
        gbc.writeMem(0x93a1, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x442c, gbc.sp());
        EXPECT(0x93a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a1));
        EXPECT(0xb, gbc.readMem(0x93a2));
        // CB 0B 00D7
        gbc.setState(0x4089, 0xb930, 0xe00, 0x3d51, 0x3d7a, 0x40b2, 0x0, 0x1);
        gbc.writeMem(0x4089, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb930, gbc.sp());
        EXPECT(0x408b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00D8
        gbc.setState(0x2a2e, 0x133, 0x18c0, 0x2abe, 0xfa14, 0x1809, 0x0, 0x0);
        gbc.writeMem(0x2a2e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x133, gbc.sp());
        EXPECT(0x2a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00D9
        gbc.setState(0x591c, 0x448c, 0x2f80, 0xaf16, 0x5a30, 0x5b95, 0x0, 0x1);
        gbc.writeMem(0x591c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x448c, gbc.sp());
        EXPECT(0x591e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00DA
        gbc.setState(0xc0ab, 0x820b, 0x9130, 0x3328, 0x6367, 0x3781, 0x0, 0x0);
        gbc.writeMem(0xc0ab, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x820b, gbc.sp());
        EXPECT(0xc0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ab));
        EXPECT(0xb, gbc.readMem(0xc0ac));
        // CB 0B 00DB
        gbc.setState(0x133a, 0x667, 0xb050, 0xe8ff, 0xe6e8, 0xde73, 0x1, 0x0);
        gbc.writeMem(0x133a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x667, gbc.sp());
        EXPECT(0x133c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00DC
        gbc.setState(0xb3c8, 0x9e2, 0x5b0, 0xa3c5, 0xa352, 0x2322, 0x0, 0x1);
        gbc.writeMem(0xb3c8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9e2, gbc.sp());
        EXPECT(0xb3ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c8));
        EXPECT(0xb, gbc.readMem(0xb3c9));
        // CB 0B 00DD
        gbc.setState(0x6104, 0xbab4, 0x7520, 0xaf2b, 0x930d, 0x86c0, 0x0, 0x0);
        gbc.writeMem(0x6104, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbab4, gbc.sp());
        EXPECT(0x6106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00DE
        gbc.setState(0x4eb6, 0x25b, 0x4b0, 0x9f3f, 0x2cd0, 0x3569, 0x1, 0x1);
        gbc.writeMem(0x4eb6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x25b, gbc.sp());
        EXPECT(0x4eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00DF
        gbc.setState(0xaf67, 0xf8de, 0x8f0, 0x35dc, 0x7068, 0x820c, 0x0, 0x1);
        gbc.writeMem(0xaf67, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf8de, gbc.sp());
        EXPECT(0xaf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf67));
        EXPECT(0xb, gbc.readMem(0xaf68));
        // CB 0B 00E0
        gbc.setState(0x17b4, 0x13c0, 0x2660, 0xba17, 0x699e, 0x8a9d, 0x1, 0x1);
        gbc.writeMem(0x17b4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x13c0, gbc.sp());
        EXPECT(0x17b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00E1
        gbc.setState(0x8ec9, 0x77f, 0x8110, 0x9839, 0x784f, 0xda8a, 0x1, 0x1);
        gbc.writeMem(0x8ec9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x77f, gbc.sp());
        EXPECT(0x8ecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec9));
        EXPECT(0xb, gbc.readMem(0x8eca));
        // CB 0B 00E2
        gbc.setState(0x3b65, 0x2b7, 0x4680, 0x4c62, 0x4aad, 0x496a, 0x0, 0x0);
        gbc.writeMem(0x3b65, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2b7, gbc.sp());
        EXPECT(0x3b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00E3
        gbc.setState(0x4049, 0x7fe6, 0xe9e0, 0xbea1, 0xd841, 0x4d9c, 0x0, 0x1);
        gbc.writeMem(0x4049, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7fe6, gbc.sp());
        EXPECT(0x404b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00E4
        gbc.setState(0xaea3, 0x66ff, 0x4330, 0xc1be, 0x2541, 0xa3ae, 0x0, 0x0);
        gbc.writeMem(0xaea3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x66ff, gbc.sp());
        EXPECT(0xaea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea3));
        EXPECT(0xb, gbc.readMem(0xaea4));
        // CB 0B 00E5
        gbc.setState(0xafcc, 0xb72c, 0xddb0, 0x2b0a, 0x7bac, 0x4dde, 0x0, 0x1);
        gbc.writeMem(0xafcc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb72c, gbc.sp());
        EXPECT(0xafce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafcc));
        EXPECT(0xb, gbc.readMem(0xafcd));
        // CB 0B 00E6
        gbc.setState(0xa5bd, 0x458c, 0xee40, 0x3687, 0x6003, 0xe2f2, 0x0, 0x1);
        gbc.writeMem(0xa5bd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x458c, gbc.sp());
        EXPECT(0xa5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5bd));
        EXPECT(0xb, gbc.readMem(0xa5be));
        // CB 0B 00E7
        gbc.setState(0x7813, 0x3550, 0x1b00, 0xec99, 0xdfd4, 0x9b2b, 0x0, 0x0);
        gbc.writeMem(0x7813, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3550, gbc.sp());
        EXPECT(0x7815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00E8
        gbc.setState(0x167, 0xebea, 0x6ef0, 0x2756, 0x4efa, 0x4951, 0x1, 0x1);
        gbc.writeMem(0x167, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xebea, gbc.sp());
        EXPECT(0x169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00E9
        gbc.setState(0xdf96, 0x2723, 0x8390, 0xfcab, 0x75d1, 0x6886, 0x1, 0x1);
        gbc.writeMem(0xdf96, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2723, gbc.sp());
        EXPECT(0xdf98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf96));
        EXPECT(0xb, gbc.readMem(0xdf97));
        // CB 0B 00EA
        gbc.setState(0xa67, 0x3701, 0x5c70, 0x6c2c, 0x159e, 0x1979, 0x0, 0x1);
        gbc.writeMem(0xa67, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3701, gbc.sp());
        EXPECT(0xa69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00EB
        gbc.setState(0x9825, 0xe77c, 0xab70, 0x8d1, 0x1227, 0xc0b3, 0x0, 0x1);
        gbc.writeMem(0x9825, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe77c, gbc.sp());
        EXPECT(0x9827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9825));
        EXPECT(0xb, gbc.readMem(0x9826));
        // CB 0B 00EC
        gbc.setState(0x6fd8, 0xc8b7, 0xdd70, 0x4630, 0xce9, 0x363a, 0x0, 0x0);
        gbc.writeMem(0x6fd8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc8b7, gbc.sp());
        EXPECT(0x6fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00ED
        gbc.setState(0x2a79, 0x12, 0x4d80, 0xe5e3, 0x9263, 0xf79c, 0x0, 0x0);
        gbc.writeMem(0x2a79, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x12, gbc.sp());
        EXPECT(0x2a7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00EE
        gbc.setState(0xcaa5, 0xf1c1, 0x7a30, 0x2eef, 0xa76e, 0xbf41, 0x1, 0x1);
        gbc.writeMem(0xcaa5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf1c1, gbc.sp());
        EXPECT(0xcaa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa5));
        EXPECT(0xb, gbc.readMem(0xcaa6));
        // CB 0B 00EF
        gbc.setState(0xe291, 0x8244, 0xed00, 0x889d, 0xc988, 0xd4a4, 0x0, 0x0);
        gbc.writeMem(0xe291, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8244, gbc.sp());
        EXPECT(0xe293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe291));
        EXPECT(0xb, gbc.readMem(0xe292));
        // CB 0B 00F0
        gbc.setState(0x5db6, 0xca05, 0xb8e0, 0x4e67, 0x3b12, 0xde7, 0x1, 0x1);
        gbc.writeMem(0x5db6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xca05, gbc.sp());
        EXPECT(0x5db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00F1
        gbc.setState(0x7132, 0xd4c6, 0x6740, 0xc501, 0x48c6, 0x2330, 0x1, 0x0);
        gbc.writeMem(0x7132, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd4c6, gbc.sp());
        EXPECT(0x7134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00F3
        gbc.setState(0xc026, 0x4318, 0xc4c0, 0xe3a7, 0xb3b7, 0x78c0, 0x1, 0x0);
        gbc.writeMem(0xc026, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4318, gbc.sp());
        EXPECT(0xc028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc026));
        EXPECT(0xb, gbc.readMem(0xc027));
        // CB 0B 00F4
        gbc.setState(0x1b7b, 0x9c58, 0x49c0, 0x3ee3, 0x3528, 0x11b2, 0x0, 0x0);
        gbc.writeMem(0x1b7b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9c58, gbc.sp());
        EXPECT(0x1b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00F5
        gbc.setState(0x45b9, 0x8985, 0x4a50, 0xac15, 0xd180, 0x7925, 0x0, 0x0);
        gbc.writeMem(0x45b9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8985, gbc.sp());
        EXPECT(0x45bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00F6
        gbc.setState(0x55b9, 0x71d1, 0x2a0, 0x423a, 0x7ab0, 0x18d5, 0x1, 0x1);
        gbc.writeMem(0x55b9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x71d1, gbc.sp());
        EXPECT(0x55bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00F7
        gbc.setState(0x9816, 0x1628, 0x2b70, 0xed66, 0x650d, 0xf7ea, 0x1, 0x1);
        gbc.writeMem(0x9816, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1628, gbc.sp());
        EXPECT(0x9818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9816));
        EXPECT(0xb, gbc.readMem(0x9817));
        // CB 0B 00F8
        gbc.setState(0xa91d, 0x22ff, 0x8290, 0x8882, 0x7d72, 0xc13d, 0x1, 0x0);
        gbc.writeMem(0xa91d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x22ff, gbc.sp());
        EXPECT(0xa91f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa91d));
        EXPECT(0xb, gbc.readMem(0xa91e));
        // CB 0B 00F9
        gbc.setState(0x98b4, 0xc061, 0x5250, 0xf0e6, 0x8290, 0xdacd, 0x0, 0x1);
        gbc.writeMem(0x98b4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc061, gbc.sp());
        EXPECT(0x98b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b4));
        EXPECT(0xb, gbc.readMem(0x98b5));
        // CB 0B 00FA
        gbc.setState(0xa45, 0x8c82, 0xd0c0, 0xe028, 0x1c03, 0x87c6, 0x1, 0x0);
        gbc.writeMem(0xa45, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8c82, gbc.sp());
        EXPECT(0xa47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00FB
        gbc.setState(0x2540, 0xec36, 0xd690, 0x526b, 0xdadc, 0x68a7, 0x0, 0x0);
        gbc.writeMem(0x2540, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xec36, gbc.sp());
        EXPECT(0x2542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00FC
        gbc.setState(0x7b52, 0x25e4, 0xde70, 0xf7ba, 0xc201, 0xcfcf, 0x0, 0x1);
        gbc.writeMem(0x7b52, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x25e4, gbc.sp());
        EXPECT(0x7b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 00FD
        gbc.setState(0xcd65, 0x7ab, 0x270, 0x614a, 0xf1eb, 0x57d2, 0x1, 0x1);
        gbc.writeMem(0xcd65, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7ab, gbc.sp());
        EXPECT(0xcd67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd65));
        EXPECT(0xb, gbc.readMem(0xcd66));
        // CB 0B 00FE
        gbc.setState(0x6651, 0x94aa, 0x91f0, 0xc665, 0xf9bc, 0x1dc2, 0x0, 0x0);
        gbc.writeMem(0x6651, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x94aa, gbc.sp());
        EXPECT(0x6653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 00FF
        gbc.setState(0x566, 0xe6e1, 0xa20, 0xc499, 0x23fd, 0xec7a, 0x0, 0x1);
        gbc.writeMem(0x566, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe6e1, gbc.sp());
        EXPECT(0x568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0100
        gbc.setState(0x1124, 0xb5cb, 0x2ce0, 0x52f4, 0xfd4e, 0x7f25, 0x0, 0x1);
        gbc.writeMem(0x1124, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb5cb, gbc.sp());
        EXPECT(0x1126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0101
        gbc.setState(0xbf1, 0x82ac, 0xe50, 0x7023, 0xe55b, 0xb45f, 0x0, 0x1);
        gbc.writeMem(0xbf1, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x82ac, gbc.sp());
        EXPECT(0xbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0102
        gbc.setState(0x7ffb, 0x5c07, 0x9ab0, 0x53eb, 0x42c6, 0x69aa, 0x1, 0x0);
        gbc.writeMem(0x7ffb, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5c07, gbc.sp());
        EXPECT(0x7ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0103
        gbc.setState(0x52ed, 0xcfbc, 0xb0a0, 0x9db5, 0x2ca3, 0xc301, 0x1, 0x0);
        gbc.writeMem(0x52ed, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcfbc, gbc.sp());
        EXPECT(0x52ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0104
        gbc.setState(0xc855, 0x80f7, 0xa990, 0x63b7, 0x9edb, 0xba65, 0x0, 0x1);
        gbc.writeMem(0xc855, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x80f7, gbc.sp());
        EXPECT(0xc857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc855));
        EXPECT(0xb, gbc.readMem(0xc856));
        // CB 0B 0105
        gbc.setState(0x4a83, 0x888b, 0xa9d0, 0xed2d, 0xb392, 0x4810, 0x0, 0x1);
        gbc.writeMem(0x4a83, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x888b, gbc.sp());
        EXPECT(0x4a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0106
        gbc.setState(0x42d0, 0x1aa7, 0x8f00, 0x53aa, 0x890b, 0x5fef, 0x1, 0x0);
        gbc.writeMem(0x42d0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1aa7, gbc.sp());
        EXPECT(0x42d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0107
        gbc.setState(0x445f, 0x3659, 0x5520, 0x292a, 0xdc38, 0x56f9, 0x1, 0x0);
        gbc.writeMem(0x445f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3659, gbc.sp());
        EXPECT(0x4461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0108
        gbc.setState(0x8512, 0x6724, 0x9b90, 0x74ac, 0x3d2f, 0xad93, 0x0, 0x1);
        gbc.writeMem(0x8512, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6724, gbc.sp());
        EXPECT(0x8514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8512));
        EXPECT(0xb, gbc.readMem(0x8513));
        // CB 0B 0109
        gbc.setState(0xdd1b, 0x34f4, 0x3190, 0xc826, 0x7a84, 0x42e9, 0x0, 0x0);
        gbc.writeMem(0xdd1b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x34f4, gbc.sp());
        EXPECT(0xdd1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1b));
        EXPECT(0xb, gbc.readMem(0xdd1c));
        // CB 0B 010A
        gbc.setState(0x9319, 0x1316, 0xbf0, 0x99d4, 0x5417, 0x5a17, 0x0, 0x1);
        gbc.writeMem(0x9319, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1316, gbc.sp());
        EXPECT(0x931b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9319));
        EXPECT(0xb, gbc.readMem(0x931a));
        // CB 0B 010B
        gbc.setState(0x38f4, 0x887c, 0x69b0, 0x19ea, 0x141e, 0x19a, 0x0, 0x0);
        gbc.writeMem(0x38f4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x887c, gbc.sp());
        EXPECT(0x38f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 010C
        gbc.setState(0xc9ac, 0xdf06, 0xb230, 0xbf01, 0xa3, 0x2695, 0x0, 0x1);
        gbc.writeMem(0xc9ac, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdf06, gbc.sp());
        EXPECT(0xc9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ac));
        EXPECT(0xb, gbc.readMem(0xc9ad));
        // CB 0B 010F
        gbc.setState(0x256d, 0x476a, 0x3ca0, 0x82a6, 0x4fa2, 0xf002, 0x1, 0x0);
        gbc.writeMem(0x256d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x476a, gbc.sp());
        EXPECT(0x256f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0110
        gbc.setState(0x5a56, 0x7dc0, 0x9fd0, 0x9128, 0x9d96, 0xd0a2, 0x0, 0x0);
        gbc.writeMem(0x5a56, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7dc0, gbc.sp());
        EXPECT(0x5a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0111
        gbc.setState(0x4be, 0x5ca1, 0x8130, 0x42d3, 0x2405, 0x44aa, 0x0, 0x0);
        gbc.writeMem(0x4be, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5ca1, gbc.sp());
        EXPECT(0x4c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0112
        gbc.setState(0x7c1d, 0xd7ac, 0x4fe0, 0x4403, 0x762a, 0x6e0f, 0x0, 0x0);
        gbc.writeMem(0x7c1d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd7ac, gbc.sp());
        EXPECT(0x7c1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0113
        gbc.setState(0x747c, 0x5b09, 0x7fc0, 0xb754, 0xda9c, 0xbc07, 0x1, 0x1);
        gbc.writeMem(0x747c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5b09, gbc.sp());
        EXPECT(0x747e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0114
        gbc.setState(0xd91d, 0x54a2, 0x3920, 0xd0f4, 0xf243, 0x126f, 0x0, 0x1);
        gbc.writeMem(0xd91d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x54a2, gbc.sp());
        EXPECT(0xd91f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91d));
        EXPECT(0xb, gbc.readMem(0xd91e));
        // CB 0B 0115
        gbc.setState(0x8fe5, 0x66d0, 0x9a90, 0x555e, 0x9eda, 0xafd4, 0x1, 0x0);
        gbc.writeMem(0x8fe5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x66d0, gbc.sp());
        EXPECT(0x8fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe5));
        EXPECT(0xb, gbc.readMem(0x8fe6));
        // CB 0B 0116
        gbc.setState(0x22db, 0x2c88, 0x8860, 0xb01a, 0x3caa, 0xf2cb, 0x1, 0x1);
        gbc.writeMem(0x22db, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2c88, gbc.sp());
        EXPECT(0x22dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0117
        gbc.setState(0x6c07, 0xc192, 0x2960, 0x662a, 0xaf63, 0x17e9, 0x0, 0x0);
        gbc.writeMem(0x6c07, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc192, gbc.sp());
        EXPECT(0x6c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0118
        gbc.setState(0xa37a, 0x39f, 0x2b10, 0xc6e3, 0xba0e, 0x4d37, 0x1, 0x0);
        gbc.writeMem(0xa37a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x39f, gbc.sp());
        EXPECT(0xa37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37a));
        EXPECT(0xb, gbc.readMem(0xa37b));
        // CB 0B 011A
        gbc.setState(0xbf8d, 0x2182, 0x8480, 0xc53e, 0x30d2, 0x8669, 0x1, 0x1);
        gbc.writeMem(0xbf8d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2182, gbc.sp());
        EXPECT(0xbf8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8d));
        EXPECT(0xb, gbc.readMem(0xbf8e));
        // CB 0B 011B
        gbc.setState(0x536d, 0xb470, 0x6cb0, 0x88f2, 0xe048, 0xf79, 0x1, 0x0);
        gbc.writeMem(0x536d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb470, gbc.sp());
        EXPECT(0x536f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 011C
        gbc.setState(0x838d, 0x1162, 0x4880, 0x3016, 0xbac3, 0xa35a, 0x1, 0x0);
        gbc.writeMem(0x838d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1162, gbc.sp());
        EXPECT(0x838f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x838d));
        EXPECT(0xb, gbc.readMem(0x838e));
        // CB 0B 011D
        gbc.setState(0xb7c9, 0x5b9d, 0x85d0, 0x2a1d, 0x19b, 0xd5aa, 0x0, 0x1);
        gbc.writeMem(0xb7c9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5b9d, gbc.sp());
        EXPECT(0xb7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c9));
        EXPECT(0xb, gbc.readMem(0xb7ca));
        // CB 0B 011E
        gbc.setState(0x7445, 0x8121, 0xc800, 0x84fd, 0x32cf, 0xb924, 0x1, 0x0);
        gbc.writeMem(0x7445, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8121, gbc.sp());
        EXPECT(0x7447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 011F
        gbc.setState(0x2c5e, 0x610, 0xff10, 0x568d, 0xd71, 0xce4a, 0x0, 0x1);
        gbc.writeMem(0x2c5e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x610, gbc.sp());
        EXPECT(0x2c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0120
        gbc.setState(0x4d85, 0x9a3, 0xb5d0, 0xdba1, 0x51ec, 0xd16, 0x0, 0x1);
        gbc.writeMem(0x4d85, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9a3, gbc.sp());
        EXPECT(0x4d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0121
        gbc.setState(0x3186, 0xecc0, 0xa860, 0x6b38, 0x9a70, 0xe6e, 0x0, 0x1);
        gbc.writeMem(0x3186, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xecc0, gbc.sp());
        EXPECT(0x3188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0122
        gbc.setState(0x2cad, 0x5899, 0x1420, 0x84e3, 0xb25d, 0x243f, 0x0, 0x1);
        gbc.writeMem(0x2cad, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5899, gbc.sp());
        EXPECT(0x2caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0123
        gbc.setState(0x9720, 0x82b8, 0xac40, 0xf9f8, 0x3078, 0x8ad8, 0x1, 0x0);
        gbc.writeMem(0x9720, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x82b8, gbc.sp());
        EXPECT(0x9722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9720));
        EXPECT(0xb, gbc.readMem(0x9721));
        // CB 0B 0124
        gbc.setState(0x3449, 0xb911, 0x3320, 0x1015, 0xa807, 0x4e00, 0x0, 0x0);
        gbc.writeMem(0x3449, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb911, gbc.sp());
        EXPECT(0x344b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0125
        gbc.setState(0x364d, 0x6803, 0xa40, 0xd5b6, 0xe41b, 0xfe5d, 0x0, 0x1);
        gbc.writeMem(0x364d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6803, gbc.sp());
        EXPECT(0x364f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0127
        gbc.setState(0x8f03, 0x883c, 0x190, 0xb470, 0xcd2a, 0x81ed, 0x0, 0x1);
        gbc.writeMem(0x8f03, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x883c, gbc.sp());
        EXPECT(0x8f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f03));
        EXPECT(0xb, gbc.readMem(0x8f04));
        // CB 0B 0128
        gbc.setState(0x2dd9, 0xa674, 0x59c0, 0x4018, 0xa789, 0x8622, 0x0, 0x1);
        gbc.writeMem(0x2dd9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa674, gbc.sp());
        EXPECT(0x2ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0129
        gbc.setState(0x77eb, 0x4cd9, 0x3a00, 0x825d, 0x8c48, 0x1352, 0x1, 0x1);
        gbc.writeMem(0x77eb, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4cd9, gbc.sp());
        EXPECT(0x77ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 012A
        gbc.setState(0x2a24, 0x13ea, 0x6e40, 0xd048, 0xb393, 0xfef9, 0x1, 0x0);
        gbc.writeMem(0x2a24, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x13ea, gbc.sp());
        EXPECT(0x2a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 012B
        gbc.setState(0x420a, 0x5921, 0xde50, 0x9ade, 0x862c, 0xbd48, 0x0, 0x0);
        gbc.writeMem(0x420a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5921, gbc.sp());
        EXPECT(0x420c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 012C
        gbc.setState(0x7191, 0x5741, 0x5cd0, 0xf17f, 0x1803, 0xd772, 0x0, 0x0);
        gbc.writeMem(0x7191, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5741, gbc.sp());
        EXPECT(0x7193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 012D
        gbc.setState(0xccb9, 0xe668, 0x7560, 0xb37e, 0x22e0, 0x47ac, 0x0, 0x0);
        gbc.writeMem(0xccb9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe668, gbc.sp());
        EXPECT(0xccbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb9));
        EXPECT(0xb, gbc.readMem(0xccba));
        // CB 0B 012E
        gbc.setState(0x496f, 0x1153, 0x6c80, 0xa681, 0xbed2, 0x291b, 0x1, 0x1);
        gbc.writeMem(0x496f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1153, gbc.sp());
        EXPECT(0x4971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 012F
        gbc.setState(0xef4a, 0xefd3, 0xa5a0, 0xbd9e, 0xb5dc, 0xed40, 0x0, 0x1);
        gbc.writeMem(0xef4a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xefd3, gbc.sp());
        EXPECT(0xef4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4a));
        EXPECT(0xb, gbc.readMem(0xef4b));
        // CB 0B 0130
        gbc.setState(0xd9a4, 0x2459, 0x3510, 0xc1cc, 0x86d9, 0xbeff, 0x0, 0x0);
        gbc.writeMem(0xd9a4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2459, gbc.sp());
        EXPECT(0xd9a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a4));
        EXPECT(0xb, gbc.readMem(0xd9a5));
        // CB 0B 0131
        gbc.setState(0x6e38, 0x5f6e, 0x88d0, 0x5dbf, 0x8715, 0xe17f, 0x1, 0x1);
        gbc.writeMem(0x6e38, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5f6e, gbc.sp());
        EXPECT(0x6e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0132
        gbc.setState(0x5c4, 0x1e76, 0x3340, 0xcd18, 0x4a4, 0x2c2e, 0x0, 0x1);
        gbc.writeMem(0x5c4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1e76, gbc.sp());
        EXPECT(0x5c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0133
        gbc.setState(0x9074, 0x1ad8, 0x5fe0, 0x1245, 0xc037, 0xfcd2, 0x1, 0x0);
        gbc.writeMem(0x9074, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1ad8, gbc.sp());
        EXPECT(0x9076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9074));
        EXPECT(0xb, gbc.readMem(0x9075));
        // CB 0B 0134
        gbc.setState(0x1f3e, 0xda21, 0x1d70, 0x8ace, 0xbfa7, 0x9d6, 0x0, 0x0);
        gbc.writeMem(0x1f3e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xda21, gbc.sp());
        EXPECT(0x1f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0135
        gbc.setState(0x9252, 0x4473, 0xe6c0, 0x4119, 0xad34, 0x7f8f, 0x1, 0x0);
        gbc.writeMem(0x9252, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4473, gbc.sp());
        EXPECT(0x9254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9252));
        EXPECT(0xb, gbc.readMem(0x9253));
        // CB 0B 0136
        gbc.setState(0x23f1, 0x9362, 0x3d10, 0x8682, 0x68aa, 0x6139, 0x1, 0x0);
        gbc.writeMem(0x23f1, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9362, gbc.sp());
        EXPECT(0x23f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0137
        gbc.setState(0x6a47, 0xc2d8, 0xe040, 0x2aa0, 0x29ce, 0x6bc6, 0x0, 0x0);
        gbc.writeMem(0x6a47, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc2d8, gbc.sp());
        EXPECT(0x6a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0138
        gbc.setState(0xb179, 0x7586, 0x3f60, 0x8c24, 0xf800, 0xeec1, 0x0, 0x0);
        gbc.writeMem(0xb179, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7586, gbc.sp());
        EXPECT(0xb17b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb179));
        EXPECT(0xb, gbc.readMem(0xb17a));
        // CB 0B 0139
        gbc.setState(0x5fd8, 0x4be8, 0xc8c0, 0x9833, 0xe5b0, 0xdc76, 0x0, 0x1);
        gbc.writeMem(0x5fd8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4be8, gbc.sp());
        EXPECT(0x5fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 013A
        gbc.setState(0x967e, 0xe447, 0xbc60, 0x6dee, 0xf320, 0x588f, 0x0, 0x1);
        gbc.writeMem(0x967e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe447, gbc.sp());
        EXPECT(0x9680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x967e));
        EXPECT(0xb, gbc.readMem(0x967f));
        // CB 0B 013B
        gbc.setState(0x8b3f, 0x1579, 0x1730, 0xd772, 0x7ce9, 0xd2e0, 0x1, 0x0);
        gbc.writeMem(0x8b3f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1579, gbc.sp());
        EXPECT(0x8b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3f));
        EXPECT(0xb, gbc.readMem(0x8b40));
        // CB 0B 013C
        gbc.setState(0x989f, 0xadf6, 0x3b40, 0x5677, 0x9193, 0x5342, 0x1, 0x1);
        gbc.writeMem(0x989f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xadf6, gbc.sp());
        EXPECT(0x98a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989f));
        EXPECT(0xb, gbc.readMem(0x98a0));
        // CB 0B 013D
        gbc.setState(0xa427, 0x5b3a, 0xdb50, 0x2b56, 0x5dad, 0xf160, 0x1, 0x1);
        gbc.writeMem(0xa427, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5b3a, gbc.sp());
        EXPECT(0xa429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa427));
        EXPECT(0xb, gbc.readMem(0xa428));
        // CB 0B 013E
        gbc.setState(0xa010, 0x2cc1, 0x6c00, 0x249c, 0x87f4, 0x5e38, 0x0, 0x0);
        gbc.writeMem(0xa010, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2cc1, gbc.sp());
        EXPECT(0xa012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa010));
        EXPECT(0xb, gbc.readMem(0xa011));
        // CB 0B 013F
        gbc.setState(0x3281, 0x372f, 0x45e0, 0xbe7a, 0x39ab, 0x65e2, 0x1, 0x0);
        gbc.writeMem(0x3281, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x372f, gbc.sp());
        EXPECT(0x3283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0140
        gbc.setState(0x4fef, 0xd114, 0xad70, 0x4721, 0x51bf, 0x4aa9, 0x1, 0x1);
        gbc.writeMem(0x4fef, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd114, gbc.sp());
        EXPECT(0x4ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0141
        gbc.setState(0xeb45, 0x2532, 0x4fe0, 0xf19b, 0x2d7b, 0xb7f, 0x0, 0x0);
        gbc.writeMem(0xeb45, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2532, gbc.sp());
        EXPECT(0xeb47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb45));
        EXPECT(0xb, gbc.readMem(0xeb46));
        // CB 0B 0142
        gbc.setState(0x7c31, 0x39d4, 0x2340, 0xab5a, 0xe38b, 0x32ed, 0x0, 0x0);
        gbc.writeMem(0x7c31, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x39d4, gbc.sp());
        EXPECT(0x7c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0144
        gbc.setState(0x4360, 0xb0d2, 0x36b0, 0xc398, 0x9573, 0xbdc2, 0x0, 0x0);
        gbc.writeMem(0x4360, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb0d2, gbc.sp());
        EXPECT(0x4362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0145
        gbc.setState(0x7b52, 0x4c5, 0x2b0, 0xf66b, 0x47b, 0x8a55, 0x0, 0x1);
        gbc.writeMem(0x7b52, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4c5, gbc.sp());
        EXPECT(0x7b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0146
        gbc.setState(0x9dca, 0x971f, 0x8850, 0x88f1, 0x122a, 0xa2d1, 0x0, 0x0);
        gbc.writeMem(0x9dca, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x971f, gbc.sp());
        EXPECT(0x9dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dca));
        EXPECT(0xb, gbc.readMem(0x9dcb));
        // CB 0B 0147
        gbc.setState(0x8a5c, 0xbea8, 0xfa0, 0x6ad7, 0xdf92, 0xee3, 0x1, 0x0);
        gbc.writeMem(0x8a5c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbea8, gbc.sp());
        EXPECT(0x8a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a5c));
        EXPECT(0xb, gbc.readMem(0x8a5d));
        // CB 0B 0148
        gbc.setState(0x8de6, 0xcfca, 0x9a70, 0x6d77, 0xe51d, 0x6092, 0x0, 0x0);
        gbc.writeMem(0x8de6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcfca, gbc.sp());
        EXPECT(0x8de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de6));
        EXPECT(0xb, gbc.readMem(0x8de7));
        // CB 0B 0149
        gbc.setState(0xa739, 0x5a0e, 0x90c0, 0x7683, 0xe43d, 0xfa99, 0x0, 0x1);
        gbc.writeMem(0xa739, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5a0e, gbc.sp());
        EXPECT(0xa73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa739));
        EXPECT(0xb, gbc.readMem(0xa73a));
        // CB 0B 014A
        gbc.setState(0x3531, 0xb77c, 0x7bc0, 0xd225, 0xafc5, 0x32c0, 0x1, 0x1);
        gbc.writeMem(0x3531, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb77c, gbc.sp());
        EXPECT(0x3533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 014B
        gbc.setState(0x9a3d, 0x8bba, 0xf540, 0x2333, 0x9c69, 0x2014, 0x0, 0x0);
        gbc.writeMem(0x9a3d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8bba, gbc.sp());
        EXPECT(0x9a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3d));
        EXPECT(0xb, gbc.readMem(0x9a3e));
        // CB 0B 014C
        gbc.setState(0x57d6, 0xc755, 0x84c0, 0xae1, 0xe099, 0x16f4, 0x1, 0x0);
        gbc.writeMem(0x57d6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc755, gbc.sp());
        EXPECT(0x57d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 014D
        gbc.setState(0x2893, 0x71c8, 0x6db0, 0xad05, 0xb8da, 0x4d08, 0x1, 0x0);
        gbc.writeMem(0x2893, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x71c8, gbc.sp());
        EXPECT(0x2895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 014E
        gbc.setState(0xd82d, 0xb4f, 0x31c0, 0xf886, 0x9f45, 0x8e5e, 0x1, 0x1);
        gbc.writeMem(0xd82d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb4f, gbc.sp());
        EXPECT(0xd82f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd82d));
        EXPECT(0xb, gbc.readMem(0xd82e));
        // CB 0B 014F
        gbc.setState(0x8103, 0xf488, 0xdd00, 0xc299, 0xa30b, 0xf884, 0x0, 0x0);
        gbc.writeMem(0x8103, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf488, gbc.sp());
        EXPECT(0x8105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8103));
        EXPECT(0xb, gbc.readMem(0x8104));
        // CB 0B 0150
        gbc.setState(0xc941, 0x100, 0x8400, 0x433b, 0x299b, 0x933b, 0x1, 0x0);
        gbc.writeMem(0xc941, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x100, gbc.sp());
        EXPECT(0xc943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc941));
        EXPECT(0xb, gbc.readMem(0xc942));
        // CB 0B 0151
        gbc.setState(0xa316, 0xc4f6, 0x4970, 0xb245, 0xc565, 0xc40d, 0x1, 0x1);
        gbc.writeMem(0xa316, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc4f6, gbc.sp());
        EXPECT(0xa318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa316));
        EXPECT(0xb, gbc.readMem(0xa317));
        // CB 0B 0153
        gbc.setState(0x7f59, 0x169b, 0x9290, 0xfb03, 0x60da, 0x4647, 0x0, 0x1);
        gbc.writeMem(0x7f59, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x169b, gbc.sp());
        EXPECT(0x7f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0154
        gbc.setState(0xe475, 0x6f6a, 0x1d40, 0xaeb6, 0x78e9, 0x60d5, 0x0, 0x0);
        gbc.writeMem(0xe475, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6f6a, gbc.sp());
        EXPECT(0xe477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe475));
        EXPECT(0xb, gbc.readMem(0xe476));
        // CB 0B 0155
        gbc.setState(0x1ec2, 0x8d77, 0xba0, 0x6955, 0xfead, 0x89fc, 0x0, 0x0);
        gbc.writeMem(0x1ec2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8d77, gbc.sp());
        EXPECT(0x1ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0156
        gbc.setState(0xa028, 0x7b49, 0x2740, 0x1c08, 0x7f77, 0x41b0, 0x0, 0x0);
        gbc.writeMem(0xa028, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7b49, gbc.sp());
        EXPECT(0xa02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa028));
        EXPECT(0xb, gbc.readMem(0xa029));
        // CB 0B 0157
        gbc.setState(0x1269, 0x7883, 0x2de0, 0xc3db, 0x7017, 0x97b0, 0x0, 0x0);
        gbc.writeMem(0x1269, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7883, gbc.sp());
        EXPECT(0x126b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0158
        gbc.setState(0xbf1b, 0x5dce, 0x31a0, 0x454, 0x36a9, 0x2e42, 0x1, 0x1);
        gbc.writeMem(0xbf1b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5dce, gbc.sp());
        EXPECT(0xbf1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf1b));
        EXPECT(0xb, gbc.readMem(0xbf1c));
        // CB 0B 0159
        gbc.setState(0x11b4, 0x93ab, 0x84e0, 0x8cda, 0xb9ef, 0x8494, 0x0, 0x0);
        gbc.writeMem(0x11b4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x93ab, gbc.sp());
        EXPECT(0x11b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 015A
        gbc.setState(0x251b, 0xa987, 0xd410, 0x89b4, 0xc40c, 0x36e8, 0x1, 0x1);
        gbc.writeMem(0x251b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa987, gbc.sp());
        EXPECT(0x251d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 015B
        gbc.setState(0x8aa5, 0x5690, 0x35e0, 0x62a3, 0x5af5, 0x168c, 0x0, 0x1);
        gbc.writeMem(0x8aa5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5690, gbc.sp());
        EXPECT(0x8aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa5));
        EXPECT(0xb, gbc.readMem(0x8aa6));
        // CB 0B 015C
        gbc.setState(0xa743, 0x31e5, 0x7cc0, 0xe581, 0xee92, 0x33e4, 0x0, 0x1);
        gbc.writeMem(0xa743, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x31e5, gbc.sp());
        EXPECT(0xa745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa743));
        EXPECT(0xb, gbc.readMem(0xa744));
        // CB 0B 015D
        gbc.setState(0xb06a, 0x4a57, 0xc0c0, 0x386a, 0x455f, 0x9fb6, 0x0, 0x0);
        gbc.writeMem(0xb06a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4a57, gbc.sp());
        EXPECT(0xb06c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06a));
        EXPECT(0xb, gbc.readMem(0xb06b));
        // CB 0B 015E
        gbc.setState(0x5bcc, 0xb999, 0xcaf0, 0x9e4c, 0xa803, 0x4149, 0x1, 0x0);
        gbc.writeMem(0x5bcc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb999, gbc.sp());
        EXPECT(0x5bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 015F
        gbc.setState(0x3c69, 0xa877, 0xaca0, 0xfe10, 0xcae6, 0x379e, 0x0, 0x0);
        gbc.writeMem(0x3c69, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa877, gbc.sp());
        EXPECT(0x3c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0160
        gbc.setState(0xb0fc, 0x7d5d, 0x6bd0, 0x855, 0x2779, 0x75cb, 0x0, 0x1);
        gbc.writeMem(0xb0fc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7d5d, gbc.sp());
        EXPECT(0xb0fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fc));
        EXPECT(0xb, gbc.readMem(0xb0fd));
        // CB 0B 0161
        gbc.setState(0x3d27, 0xf83a, 0xc5e0, 0x6f28, 0x94a8, 0x93d8, 0x1, 0x0);
        gbc.writeMem(0x3d27, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf83a, gbc.sp());
        EXPECT(0x3d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0162
        gbc.setState(0x7e43, 0x5d2a, 0xa5d0, 0x2f49, 0x1a35, 0x5fe0, 0x0, 0x1);
        gbc.writeMem(0x7e43, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5d2a, gbc.sp());
        EXPECT(0x7e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0163
        gbc.setState(0x5edf, 0x2e9a, 0xdbb0, 0x2e7b, 0xf4cc, 0x5262, 0x0, 0x0);
        gbc.writeMem(0x5edf, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2e9a, gbc.sp());
        EXPECT(0x5ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0164
        gbc.setState(0x289b, 0x7a1c, 0x3bb0, 0x3713, 0x157a, 0x67ab, 0x1, 0x1);
        gbc.writeMem(0x289b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7a1c, gbc.sp());
        EXPECT(0x289d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0165
        gbc.setState(0xcb24, 0x9596, 0xfc80, 0x6add, 0xcbb9, 0x9d37, 0x0, 0x0);
        gbc.writeMem(0xcb24, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9596, gbc.sp());
        EXPECT(0xcb26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb24));
        EXPECT(0xb, gbc.readMem(0xcb25));
        // CB 0B 0166
        gbc.setState(0x4884, 0x8541, 0xf820, 0x7602, 0xa89e, 0x16c3, 0x0, 0x1);
        gbc.writeMem(0x4884, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8541, gbc.sp());
        EXPECT(0x4886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0167
        gbc.setState(0xadc4, 0xee81, 0x3970, 0x75c9, 0xc5f1, 0x8ab5, 0x0, 0x1);
        gbc.writeMem(0xadc4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xee81, gbc.sp());
        EXPECT(0xadc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc4));
        EXPECT(0xb, gbc.readMem(0xadc5));
        // CB 0B 0168
        gbc.setState(0xc197, 0x3762, 0x3090, 0x6a2e, 0x1129, 0xcfd8, 0x0, 0x1);
        gbc.writeMem(0xc197, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3762, gbc.sp());
        EXPECT(0xc199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc197));
        EXPECT(0xb, gbc.readMem(0xc198));
        // CB 0B 0169
        gbc.setState(0xe1d2, 0x97b5, 0xccb0, 0xc7de, 0xab5f, 0x4183, 0x1, 0x1);
        gbc.writeMem(0xe1d2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x97b5, gbc.sp());
        EXPECT(0xe1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d2));
        EXPECT(0xb, gbc.readMem(0xe1d3));
        // CB 0B 016A
        gbc.setState(0x8ee9, 0xd236, 0xf900, 0x3b17, 0x8803, 0x6246, 0x0, 0x1);
        gbc.writeMem(0x8ee9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd236, gbc.sp());
        EXPECT(0x8eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee9));
        EXPECT(0xb, gbc.readMem(0x8eea));
        // CB 0B 016B
        gbc.setState(0xd654, 0x4cb4, 0x2420, 0x14aa, 0xa451, 0x67fd, 0x1, 0x1);
        gbc.writeMem(0xd654, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4cb4, gbc.sp());
        EXPECT(0xd656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd654));
        EXPECT(0xb, gbc.readMem(0xd655));
        // CB 0B 016E
        gbc.setState(0x4d65, 0x5806, 0x7a0, 0xfc83, 0x57d6, 0xffba, 0x0, 0x0);
        gbc.writeMem(0x4d65, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5806, gbc.sp());
        EXPECT(0x4d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0170
        gbc.setState(0x1154, 0xc11f, 0x4b30, 0x94e9, 0xbcd, 0xeb7c, 0x1, 0x1);
        gbc.writeMem(0x1154, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc11f, gbc.sp());
        EXPECT(0x1156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0171
        gbc.setState(0xbe22, 0x959a, 0xc860, 0x9b4, 0xe03c, 0x98bd, 0x1, 0x1);
        gbc.writeMem(0xbe22, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x959a, gbc.sp());
        EXPECT(0xbe24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe22));
        EXPECT(0xb, gbc.readMem(0xbe23));
        // CB 0B 0172
        gbc.setState(0xad, 0x650c, 0x5370, 0xf40a, 0xe00d, 0xd5ce, 0x1, 0x0);
        gbc.writeMem(0xad, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x650c, gbc.sp());
        EXPECT(0xaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0173
        gbc.setState(0xdf25, 0x3140, 0x4010, 0x660b, 0x13fa, 0x5dc2, 0x1, 0x0);
        gbc.writeMem(0xdf25, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3140, gbc.sp());
        EXPECT(0xdf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf25));
        EXPECT(0xb, gbc.readMem(0xdf26));
        // CB 0B 0174
        gbc.setState(0x3a04, 0xf80e, 0x8510, 0x3801, 0xe1b5, 0x262e, 0x0, 0x0);
        gbc.writeMem(0x3a04, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf80e, gbc.sp());
        EXPECT(0x3a06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0175
        gbc.setState(0x11ec, 0xa9c7, 0x5970, 0x567a, 0xbc09, 0x6b, 0x0, 0x0);
        gbc.writeMem(0x11ec, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa9c7, gbc.sp());
        EXPECT(0x11ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0176
        gbc.setState(0xac82, 0x21c4, 0x9080, 0xacd0, 0x548c, 0x7826, 0x0, 0x1);
        gbc.writeMem(0xac82, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x21c4, gbc.sp());
        EXPECT(0xac84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac82));
        EXPECT(0xb, gbc.readMem(0xac83));
        // CB 0B 0177
        gbc.setState(0x648c, 0x17ce, 0x6730, 0x537b, 0x35d5, 0xc66c, 0x0, 0x1);
        gbc.writeMem(0x648c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x17ce, gbc.sp());
        EXPECT(0x648e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0178
        gbc.setState(0x7026, 0x9743, 0x5730, 0x599a, 0x4717, 0xf4be, 0x0, 0x0);
        gbc.writeMem(0x7026, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9743, gbc.sp());
        EXPECT(0x7028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0179
        gbc.setState(0x8b09, 0xd525, 0xf850, 0x3534, 0xfccc, 0xf751, 0x0, 0x0);
        gbc.writeMem(0x8b09, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd525, gbc.sp());
        EXPECT(0x8b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b09));
        EXPECT(0xb, gbc.readMem(0x8b0a));
        // CB 0B 017A
        gbc.setState(0xc376, 0x7f21, 0xf890, 0xf4e6, 0x8e3c, 0x2aed, 0x0, 0x0);
        gbc.writeMem(0xc376, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7f21, gbc.sp());
        EXPECT(0xc378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc376));
        EXPECT(0xb, gbc.readMem(0xc377));
        // CB 0B 017B
        gbc.setState(0x1f77, 0x2541, 0x8dd0, 0x6063, 0x3aec, 0xe0b, 0x0, 0x0);
        gbc.writeMem(0x1f77, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2541, gbc.sp());
        EXPECT(0x1f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 017C
        gbc.setState(0x82a5, 0xcd35, 0x8580, 0xccff, 0xe458, 0x6f47, 0x1, 0x1);
        gbc.writeMem(0x82a5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcd35, gbc.sp());
        EXPECT(0x82a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a5));
        EXPECT(0xb, gbc.readMem(0x82a6));
        // CB 0B 017D
        gbc.setState(0xbb84, 0xa3bf, 0x88e0, 0x1f1a, 0xb56e, 0x24da, 0x1, 0x0);
        gbc.writeMem(0xbb84, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa3bf, gbc.sp());
        EXPECT(0xbb86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb84));
        EXPECT(0xb, gbc.readMem(0xbb85));
        // CB 0B 017E
        gbc.setState(0x87b, 0xb127, 0x19a0, 0xaf59, 0xd996, 0x4e08, 0x0, 0x1);
        gbc.writeMem(0x87b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb127, gbc.sp());
        EXPECT(0x87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 017F
        gbc.setState(0x9497, 0x7124, 0x8c90, 0x8744, 0x56b1, 0xce82, 0x1, 0x0);
        gbc.writeMem(0x9497, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7124, gbc.sp());
        EXPECT(0x9499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9497));
        EXPECT(0xb, gbc.readMem(0x9498));
        // CB 0B 0180
        gbc.setState(0xbcb6, 0x2f0a, 0x9b00, 0x1ca3, 0xccf7, 0x5e83, 0x0, 0x0);
        gbc.writeMem(0xbcb6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2f0a, gbc.sp());
        EXPECT(0xbcb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb6));
        EXPECT(0xb, gbc.readMem(0xbcb7));
        // CB 0B 0181
        gbc.setState(0x7837, 0x7b11, 0x4aa0, 0x88d5, 0x4801, 0x1c3c, 0x1, 0x0);
        gbc.writeMem(0x7837, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7b11, gbc.sp());
        EXPECT(0x7839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0182
        gbc.setState(0xbdf, 0x419e, 0xaf00, 0x1108, 0xc21b, 0xbf31, 0x1, 0x1);
        gbc.writeMem(0xbdf, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x419e, gbc.sp());
        EXPECT(0xbe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0183
        gbc.setState(0xb3b0, 0x8710, 0x2280, 0x22e6, 0x7b2e, 0xa878, 0x1, 0x0);
        gbc.writeMem(0xb3b0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8710, gbc.sp());
        EXPECT(0xb3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b0));
        EXPECT(0xb, gbc.readMem(0xb3b1));
        // CB 0B 0184
        gbc.setState(0x6372, 0x7d62, 0x9b90, 0x1f2f, 0x5d3e, 0x7458, 0x1, 0x1);
        gbc.writeMem(0x6372, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7d62, gbc.sp());
        EXPECT(0x6374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0185
        gbc.setState(0x6404, 0x7a0b, 0x9840, 0x2f, 0x60e0, 0x882e, 0x1, 0x0);
        gbc.writeMem(0x6404, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7a0b, gbc.sp());
        EXPECT(0x6406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0186
        gbc.setState(0x66a, 0x3ef0, 0xa6d0, 0xcd14, 0x19c6, 0x6dbf, 0x1, 0x0);
        gbc.writeMem(0x66a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3ef0, gbc.sp());
        EXPECT(0x66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0187
        gbc.setState(0x3875, 0x9ec0, 0xc170, 0x30ac, 0x967f, 0x7f7, 0x0, 0x1);
        gbc.writeMem(0x3875, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9ec0, gbc.sp());
        EXPECT(0x3877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0188
        gbc.setState(0x55cd, 0xe722, 0xc1c0, 0xd649, 0x6d7e, 0x110a, 0x1, 0x1);
        gbc.writeMem(0x55cd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe722, gbc.sp());
        EXPECT(0x55cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0189
        gbc.setState(0x3a9c, 0x5807, 0x7490, 0x16e3, 0xe973, 0x596, 0x1, 0x1);
        gbc.writeMem(0x3a9c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5807, gbc.sp());
        EXPECT(0x3a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 018A
        gbc.setState(0xea42, 0xf60a, 0x70, 0x42b4, 0x1f6c, 0x7f33, 0x1, 0x0);
        gbc.writeMem(0xea42, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf60a, gbc.sp());
        EXPECT(0xea44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea42));
        EXPECT(0xb, gbc.readMem(0xea43));
        // CB 0B 018B
        gbc.setState(0x624e, 0x385f, 0xad50, 0x7423, 0x17dc, 0x1bce, 0x1, 0x1);
        gbc.writeMem(0x624e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x385f, gbc.sp());
        EXPECT(0x6250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 018C
        gbc.setState(0x6263, 0x861d, 0x1230, 0x601d, 0xe022, 0x1bc0, 0x0, 0x0);
        gbc.writeMem(0x6263, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x861d, gbc.sp());
        EXPECT(0x6265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 018D
        gbc.setState(0x5ab, 0xa5bc, 0xa710, 0x72b6, 0xaccc, 0x441d, 0x1, 0x0);
        gbc.writeMem(0x5ab, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa5bc, gbc.sp());
        EXPECT(0x5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 018F
        gbc.setState(0x33bd, 0xd2f2, 0x7560, 0x23f6, 0x673, 0xa391, 0x1, 0x1);
        gbc.writeMem(0x33bd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd2f2, gbc.sp());
        EXPECT(0x33bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0190
        gbc.setState(0x228c, 0x2b8, 0x7960, 0xb986, 0x670, 0x428e, 0x0, 0x1);
        gbc.writeMem(0x228c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2b8, gbc.sp());
        EXPECT(0x228e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0192
        gbc.setState(0x6aa4, 0x7edf, 0xda60, 0x8ace, 0x8ec6, 0x9a9e, 0x0, 0x0);
        gbc.writeMem(0x6aa4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7edf, gbc.sp());
        EXPECT(0x6aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0193
        gbc.setState(0x4f22, 0x204a, 0x4010, 0x701a, 0x74ac, 0x246c, 0x0, 0x1);
        gbc.writeMem(0x4f22, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x204a, gbc.sp());
        EXPECT(0x4f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0194
        gbc.setState(0xaf1c, 0x9882, 0x1a90, 0x9061, 0xad02, 0xc3c2, 0x1, 0x0);
        gbc.writeMem(0xaf1c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9882, gbc.sp());
        EXPECT(0xaf1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf1c));
        EXPECT(0xb, gbc.readMem(0xaf1d));
        // CB 0B 0195
        gbc.setState(0x5695, 0x40b2, 0x7980, 0x7bf4, 0x966f, 0xb9f9, 0x1, 0x0);
        gbc.writeMem(0x5695, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x40b2, gbc.sp());
        EXPECT(0x5697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0196
        gbc.setState(0x9164, 0xb835, 0xa3c0, 0x3e9f, 0x73e3, 0x2e96, 0x1, 0x1);
        gbc.writeMem(0x9164, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb835, gbc.sp());
        EXPECT(0x9166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9164));
        EXPECT(0xb, gbc.readMem(0x9165));
        // CB 0B 0197
        gbc.setState(0x52ad, 0x55eb, 0x45f0, 0xcc3b, 0x923, 0x8215, 0x0, 0x1);
        gbc.writeMem(0x52ad, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x55eb, gbc.sp());
        EXPECT(0x52af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0198
        gbc.setState(0x8bc, 0xde67, 0xd8a0, 0xe427, 0x46f8, 0x102e, 0x0, 0x0);
        gbc.writeMem(0x8bc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xde67, gbc.sp());
        EXPECT(0x8be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0199
        gbc.setState(0xad2e, 0x62b0, 0x9f30, 0x40a7, 0x8c4b, 0xd0e3, 0x1, 0x0);
        gbc.writeMem(0xad2e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x62b0, gbc.sp());
        EXPECT(0xad30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2e));
        EXPECT(0xb, gbc.readMem(0xad2f));
        // CB 0B 019A
        gbc.setState(0xbffc, 0x61a5, 0x1230, 0xf2c9, 0x25cf, 0xb920, 0x1, 0x0);
        gbc.writeMem(0xbffc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x61a5, gbc.sp());
        EXPECT(0xbffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbffc));
        EXPECT(0xb, gbc.readMem(0xbffd));
        // CB 0B 019B
        gbc.setState(0x1dcd, 0x313b, 0x3720, 0x6825, 0x23f9, 0x60b, 0x0, 0x1);
        gbc.writeMem(0x1dcd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x313b, gbc.sp());
        EXPECT(0x1dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 019D
        gbc.setState(0xcdfc, 0xa24c, 0x6830, 0x3c58, 0xa19e, 0x3dbc, 0x1, 0x0);
        gbc.writeMem(0xcdfc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa24c, gbc.sp());
        EXPECT(0xcdfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdfc));
        EXPECT(0xb, gbc.readMem(0xcdfd));
        // CB 0B 019E
        gbc.setState(0x2c29, 0xb512, 0xcd90, 0x5a8a, 0x7a1e, 0x36c0, 0x1, 0x1);
        gbc.writeMem(0x2c29, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb512, gbc.sp());
        EXPECT(0x2c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 019F
        gbc.setState(0x84b8, 0x8bcd, 0xfda0, 0x464c, 0x7058, 0x9ad7, 0x0, 0x1);
        gbc.writeMem(0x84b8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8bcd, gbc.sp());
        EXPECT(0x84ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b8));
        EXPECT(0xb, gbc.readMem(0x84b9));
        // CB 0B 01A0
        gbc.setState(0xe9c6, 0x523, 0x9690, 0xbfdc, 0x9b1e, 0x79a0, 0x1, 0x0);
        gbc.writeMem(0xe9c6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x523, gbc.sp());
        EXPECT(0xe9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c6));
        EXPECT(0xb, gbc.readMem(0xe9c7));
        // CB 0B 01A1
        gbc.setState(0x4da9, 0xca46, 0xc50, 0x2a69, 0xb195, 0x8fc0, 0x0, 0x0);
        gbc.writeMem(0x4da9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xca46, gbc.sp());
        EXPECT(0x4dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01A2
        gbc.setState(0x2507, 0xf68e, 0x3570, 0x9cf5, 0x17da, 0xb957, 0x1, 0x0);
        gbc.writeMem(0x2507, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf68e, gbc.sp());
        EXPECT(0x2509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01A3
        gbc.setState(0x228b, 0x86c9, 0x94f0, 0xed6, 0xbbc2, 0xc263, 0x0, 0x1);
        gbc.writeMem(0x228b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x86c9, gbc.sp());
        EXPECT(0x228d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01A4
        gbc.setState(0x435a, 0x408, 0x8b60, 0x584e, 0x1155, 0xb5ce, 0x1, 0x1);
        gbc.writeMem(0x435a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x408, gbc.sp());
        EXPECT(0x435c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01A6
        gbc.setState(0xcb9c, 0xdacc, 0xbb20, 0x2d68, 0xa76b, 0x4283, 0x0, 0x0);
        gbc.writeMem(0xcb9c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdacc, gbc.sp());
        EXPECT(0xcb9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9c));
        EXPECT(0xb, gbc.readMem(0xcb9d));
        // CB 0B 01A7
        gbc.setState(0xb2be, 0xd508, 0xad50, 0xa85e, 0xeb82, 0x58bc, 0x1, 0x1);
        gbc.writeMem(0xb2be, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd508, gbc.sp());
        EXPECT(0xb2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2be));
        EXPECT(0xb, gbc.readMem(0xb2bf));
        // CB 0B 01A8
        gbc.setState(0xe066, 0x8d, 0xb570, 0xad78, 0xdd5e, 0x2d16, 0x1, 0x1);
        gbc.writeMem(0xe066, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8d, gbc.sp());
        EXPECT(0xe068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe066));
        EXPECT(0xb, gbc.readMem(0xe067));
        // CB 0B 01A9
        gbc.setState(0x4280, 0xefce, 0x71f0, 0x8e1e, 0x49bd, 0xd0e4, 0x0, 0x0);
        gbc.writeMem(0x4280, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xefce, gbc.sp());
        EXPECT(0x4282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01AA
        gbc.setState(0xafd2, 0x653a, 0x6840, 0x99ce, 0x7606, 0xb530, 0x1, 0x1);
        gbc.writeMem(0xafd2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x653a, gbc.sp());
        EXPECT(0xafd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd2));
        EXPECT(0xb, gbc.readMem(0xafd3));
        // CB 0B 01AB
        gbc.setState(0x3ba7, 0xc2a8, 0x960, 0xdec7, 0x7c4d, 0xb97e, 0x0, 0x0);
        gbc.writeMem(0x3ba7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc2a8, gbc.sp());
        EXPECT(0x3ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01AC
        gbc.setState(0xd175, 0x8756, 0x7b10, 0xe0c, 0x744a, 0x88fb, 0x0, 0x1);
        gbc.writeMem(0xd175, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8756, gbc.sp());
        EXPECT(0xd177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd175));
        EXPECT(0xb, gbc.readMem(0xd176));
        // CB 0B 01AD
        gbc.setState(0x669d, 0x2551, 0x8e70, 0x456b, 0x1210, 0xb745, 0x1, 0x0);
        gbc.writeMem(0x669d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2551, gbc.sp());
        EXPECT(0x669f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01AE
        gbc.setState(0xeac2, 0xae81, 0x1330, 0xa8f8, 0x1b46, 0xc8ec, 0x0, 0x1);
        gbc.writeMem(0xeac2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xae81, gbc.sp());
        EXPECT(0xeac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac2));
        EXPECT(0xb, gbc.readMem(0xeac3));
        // CB 0B 01AF
        gbc.setState(0xb2ac, 0x95b0, 0x3af0, 0x350f, 0x3fb, 0xf60b, 0x0, 0x0);
        gbc.writeMem(0xb2ac, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x95b0, gbc.sp());
        EXPECT(0xb2ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ac));
        EXPECT(0xb, gbc.readMem(0xb2ad));
        // CB 0B 01B0
        gbc.setState(0x7cd, 0xb88a, 0xcd30, 0x60d8, 0x7e1b, 0x98c9, 0x0, 0x1);
        gbc.writeMem(0x7cd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb88a, gbc.sp());
        EXPECT(0x7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01B1
        gbc.setState(0xb251, 0x1963, 0x70f0, 0x1f96, 0xb0ef, 0xa8ba, 0x1, 0x1);
        gbc.writeMem(0xb251, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1963, gbc.sp());
        EXPECT(0xb253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb251));
        EXPECT(0xb, gbc.readMem(0xb252));
        // CB 0B 01B2
        gbc.setState(0x61b5, 0x99db, 0x19f0, 0xa8e2, 0xda8c, 0x5987, 0x0, 0x0);
        gbc.writeMem(0x61b5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x99db, gbc.sp());
        EXPECT(0x61b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01B4
        gbc.setState(0x7dbb, 0xd897, 0xaa90, 0xdab2, 0xcdaa, 0xa05d, 0x1, 0x0);
        gbc.writeMem(0x7dbb, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd897, gbc.sp());
        EXPECT(0x7dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01B5
        gbc.setState(0x96ca, 0xcbfd, 0xde80, 0x9ea2, 0x4942, 0x841d, 0x0, 0x1);
        gbc.writeMem(0x96ca, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcbfd, gbc.sp());
        EXPECT(0x96cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ca));
        EXPECT(0xb, gbc.readMem(0x96cb));
        // CB 0B 01B6
        gbc.setState(0x7ec6, 0x3b0a, 0x8770, 0x68d0, 0x5bee, 0x31a0, 0x0, 0x0);
        gbc.writeMem(0x7ec6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3b0a, gbc.sp());
        EXPECT(0x7ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01B7
        gbc.setState(0x89cc, 0xf764, 0xf360, 0x2291, 0x1057, 0x3c83, 0x0, 0x0);
        gbc.writeMem(0x89cc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf764, gbc.sp());
        EXPECT(0x89ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89cc));
        EXPECT(0xb, gbc.readMem(0x89cd));
        // CB 0B 01B8
        gbc.setState(0xd096, 0xd45d, 0x4900, 0x8b56, 0x8aac, 0xbe72, 0x0, 0x1);
        gbc.writeMem(0xd096, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd45d, gbc.sp());
        EXPECT(0xd098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd096));
        EXPECT(0xb, gbc.readMem(0xd097));
        // CB 0B 01B9
        gbc.setState(0x1389, 0x4b1d, 0xdf70, 0x99ce, 0x4358, 0x149c, 0x1, 0x1);
        gbc.writeMem(0x1389, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4b1d, gbc.sp());
        EXPECT(0x138b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01BA
        gbc.setState(0xb03d, 0xceb9, 0x9950, 0x7134, 0x77a5, 0x5ec4, 0x0, 0x1);
        gbc.writeMem(0xb03d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xceb9, gbc.sp());
        EXPECT(0xb03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb03d));
        EXPECT(0xb, gbc.readMem(0xb03e));
        // CB 0B 01BB
        gbc.setState(0xdcc8, 0x7198, 0x3340, 0x6c8, 0x9377, 0xbe67, 0x1, 0x0);
        gbc.writeMem(0xdcc8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7198, gbc.sp());
        EXPECT(0xdcca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc8));
        EXPECT(0xb, gbc.readMem(0xdcc9));
        // CB 0B 01BC
        gbc.setState(0x68b8, 0xb528, 0x8c40, 0x9739, 0xa899, 0xaacf, 0x1, 0x0);
        gbc.writeMem(0x68b8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb528, gbc.sp());
        EXPECT(0x68ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01BD
        gbc.setState(0x78d3, 0x679b, 0xa540, 0x5aaa, 0x5aa4, 0x9a34, 0x1, 0x1);
        gbc.writeMem(0x78d3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x679b, gbc.sp());
        EXPECT(0x78d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01BE
        gbc.setState(0xe74f, 0x3e23, 0xd3d0, 0x910f, 0x250e, 0xe470, 0x0, 0x0);
        gbc.writeMem(0xe74f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3e23, gbc.sp());
        EXPECT(0xe751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74f));
        EXPECT(0xb, gbc.readMem(0xe750));
        // CB 0B 01BF
        gbc.setState(0xe45c, 0x6aa5, 0x40d0, 0x3d83, 0x43fa, 0x4e82, 0x0, 0x0);
        gbc.writeMem(0xe45c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6aa5, gbc.sp());
        EXPECT(0xe45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe45c));
        EXPECT(0xb, gbc.readMem(0xe45d));
        // CB 0B 01C0
        gbc.setState(0x52a8, 0x7daa, 0x34f0, 0xb8bb, 0xff21, 0x1619, 0x0, 0x0);
        gbc.writeMem(0x52a8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7daa, gbc.sp());
        EXPECT(0x52aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01C1
        gbc.setState(0x4a9a, 0x1303, 0x2670, 0xed2b, 0x2506, 0xbbb, 0x0, 0x1);
        gbc.writeMem(0x4a9a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1303, gbc.sp());
        EXPECT(0x4a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01C2
        gbc.setState(0x2512, 0xe9e3, 0x2120, 0x5fcb, 0xcb41, 0xa974, 0x1, 0x0);
        gbc.writeMem(0x2512, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe9e3, gbc.sp());
        EXPECT(0x2514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01C3
        gbc.setState(0x6ea1, 0x90e4, 0x22b0, 0x24b5, 0xb76c, 0xd5ad, 0x1, 0x1);
        gbc.writeMem(0x6ea1, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x90e4, gbc.sp());
        EXPECT(0x6ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01C4
        gbc.setState(0xb024, 0xd39f, 0x38b0, 0x1bbc, 0x22ab, 0x14f4, 0x0, 0x1);
        gbc.writeMem(0xb024, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd39f, gbc.sp());
        EXPECT(0xb026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb024));
        EXPECT(0xb, gbc.readMem(0xb025));
        // CB 0B 01C6
        gbc.setState(0x2b3a, 0xf6bc, 0xd060, 0xe7d9, 0x804e, 0x769f, 0x0, 0x1);
        gbc.writeMem(0x2b3a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf6bc, gbc.sp());
        EXPECT(0x2b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01C7
        gbc.setState(0xb33b, 0xbc22, 0xe2b0, 0x48b3, 0x5c83, 0x2032, 0x1, 0x0);
        gbc.writeMem(0xb33b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbc22, gbc.sp());
        EXPECT(0xb33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb33b));
        EXPECT(0xb, gbc.readMem(0xb33c));
        // CB 0B 01C8
        gbc.setState(0x5972, 0xfbb5, 0xaeb0, 0xc316, 0xa0bd, 0x9a8c, 0x0, 0x1);
        gbc.writeMem(0x5972, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfbb5, gbc.sp());
        EXPECT(0x5974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01C9
        gbc.setState(0x6de9, 0x211e, 0x1340, 0x1074, 0x267b, 0x30e0, 0x0, 0x1);
        gbc.writeMem(0x6de9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x211e, gbc.sp());
        EXPECT(0x6deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01CA
        gbc.setState(0x64a5, 0x36b6, 0xae00, 0x2793, 0x9d79, 0x8456, 0x0, 0x1);
        gbc.writeMem(0x64a5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x36b6, gbc.sp());
        EXPECT(0x64a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01CB
        gbc.setState(0x780b, 0xbc1c, 0x8060, 0x10e0, 0x2181, 0xc6ea, 0x0, 0x1);
        gbc.writeMem(0x780b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbc1c, gbc.sp());
        EXPECT(0x780d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01CC
        gbc.setState(0x7bc7, 0xe9b0, 0x89a0, 0xf99a, 0x6110, 0xb314, 0x0, 0x1);
        gbc.writeMem(0x7bc7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe9b0, gbc.sp());
        EXPECT(0x7bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01CD
        gbc.setState(0x955e, 0x9e09, 0x1aa0, 0x9296, 0xd6f9, 0x6332, 0x1, 0x1);
        gbc.writeMem(0x955e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9e09, gbc.sp());
        EXPECT(0x9560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x955e));
        EXPECT(0xb, gbc.readMem(0x955f));
        // CB 0B 01CE
        gbc.setState(0x7fd6, 0x8eca, 0xfc80, 0xb745, 0xf703, 0xeca, 0x0, 0x0);
        gbc.writeMem(0x7fd6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8eca, gbc.sp());
        EXPECT(0x7fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01CF
        gbc.setState(0x84be, 0x280d, 0xef10, 0x993c, 0xd282, 0x28b2, 0x0, 0x0);
        gbc.writeMem(0x84be, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x280d, gbc.sp());
        EXPECT(0x84c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84be));
        EXPECT(0xb, gbc.readMem(0x84bf));
        // CB 0B 01D1
        gbc.setState(0xc4a1, 0x5020, 0x6860, 0xaa42, 0x1a9, 0x5068, 0x1, 0x0);
        gbc.writeMem(0xc4a1, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5020, gbc.sp());
        EXPECT(0xc4a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a1));
        EXPECT(0xb, gbc.readMem(0xc4a2));
        // CB 0B 01D2
        gbc.setState(0x7ba4, 0x8d78, 0x2920, 0x484a, 0xcfd3, 0xa96b, 0x1, 0x0);
        gbc.writeMem(0x7ba4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8d78, gbc.sp());
        EXPECT(0x7ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01D3
        gbc.setState(0x4cc9, 0x9eb, 0x9410, 0x7dfe, 0x6eb9, 0xe550, 0x1, 0x0);
        gbc.writeMem(0x4cc9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9eb, gbc.sp());
        EXPECT(0x4ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01D4
        gbc.setState(0x7172, 0xa0af, 0x1b0, 0x419a, 0x821b, 0x8ee8, 0x1, 0x0);
        gbc.writeMem(0x7172, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa0af, gbc.sp());
        EXPECT(0x7174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01D5
        gbc.setState(0x245a, 0x4524, 0xf730, 0xc332, 0xd6a3, 0x69e4, 0x1, 0x0);
        gbc.writeMem(0x245a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4524, gbc.sp());
        EXPECT(0x245c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01D6
        gbc.setState(0x61cb, 0xc03f, 0x5f20, 0x3f7e, 0xe464, 0xf2a4, 0x1, 0x1);
        gbc.writeMem(0x61cb, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc03f, gbc.sp());
        EXPECT(0x61cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01D7
        gbc.setState(0xa90b, 0xfe4d, 0xd40, 0x3f3e, 0xe341, 0xc3da, 0x1, 0x0);
        gbc.writeMem(0xa90b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfe4d, gbc.sp());
        EXPECT(0xa90d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa90b));
        EXPECT(0xb, gbc.readMem(0xa90c));
        // CB 0B 01D8
        gbc.setState(0x282a, 0x20fc, 0xff80, 0x8af9, 0x9825, 0x802b, 0x0, 0x1);
        gbc.writeMem(0x282a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x20fc, gbc.sp());
        EXPECT(0x282c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01D9
        gbc.setState(0xe1db, 0x35a4, 0xc760, 0xc20c, 0x10de, 0x9d0, 0x0, 0x0);
        gbc.writeMem(0xe1db, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x35a4, gbc.sp());
        EXPECT(0xe1dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1db));
        EXPECT(0xb, gbc.readMem(0xe1dc));
        // CB 0B 01DA
        gbc.setState(0xec98, 0xd852, 0x3850, 0x66f0, 0x904a, 0x99da, 0x1, 0x0);
        gbc.writeMem(0xec98, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd852, gbc.sp());
        EXPECT(0xec9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec98));
        EXPECT(0xb, gbc.readMem(0xec99));
        // CB 0B 01DB
        gbc.setState(0x8b94, 0x6d94, 0x9da0, 0xcc8e, 0xd28e, 0xf9a9, 0x0, 0x0);
        gbc.writeMem(0x8b94, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6d94, gbc.sp());
        EXPECT(0x8b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b94));
        EXPECT(0xb, gbc.readMem(0x8b95));
        // CB 0B 01DD
        gbc.setState(0xb2d7, 0xc124, 0x5c00, 0x422e, 0xa251, 0x2aa, 0x0, 0x0);
        gbc.writeMem(0xb2d7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc124, gbc.sp());
        EXPECT(0xb2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d7));
        EXPECT(0xb, gbc.readMem(0xb2d8));
        // CB 0B 01DE
        gbc.setState(0x9758, 0x9ad3, 0x2810, 0xced6, 0x5802, 0xa5c0, 0x1, 0x1);
        gbc.writeMem(0x9758, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9ad3, gbc.sp());
        EXPECT(0x975a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9758));
        EXPECT(0xb, gbc.readMem(0x9759));
        // CB 0B 01DF
        gbc.setState(0x8db3, 0x7acf, 0xc920, 0x7f9c, 0x5513, 0x23a8, 0x1, 0x0);
        gbc.writeMem(0x8db3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7acf, gbc.sp());
        EXPECT(0x8db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db3));
        EXPECT(0xb, gbc.readMem(0x8db4));
        // CB 0B 01E0
        gbc.setState(0xe945, 0xaf60, 0x30f0, 0x3877, 0xadb, 0xaf87, 0x1, 0x1);
        gbc.writeMem(0xe945, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xaf60, gbc.sp());
        EXPECT(0xe947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe945));
        EXPECT(0xb, gbc.readMem(0xe946));
        // CB 0B 01E1
        gbc.setState(0xaa9b, 0x824, 0xbc90, 0xfac6, 0x5f51, 0x6357, 0x0, 0x1);
        gbc.writeMem(0xaa9b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x824, gbc.sp());
        EXPECT(0xaa9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa9b));
        EXPECT(0xb, gbc.readMem(0xaa9c));
        // CB 0B 01E2
        gbc.setState(0xaf25, 0xade4, 0x6a40, 0x8621, 0x658c, 0x8ea7, 0x1, 0x0);
        gbc.writeMem(0xaf25, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xade4, gbc.sp());
        EXPECT(0xaf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf25));
        EXPECT(0xb, gbc.readMem(0xaf26));
        // CB 0B 01E3
        gbc.setState(0x32bd, 0x4432, 0xba80, 0xd851, 0xaf59, 0x92a4, 0x0, 0x0);
        gbc.writeMem(0x32bd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4432, gbc.sp());
        EXPECT(0x32bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01E4
        gbc.setState(0xe5a1, 0x81df, 0x61d0, 0xaebb, 0xea0b, 0xdc13, 0x0, 0x1);
        gbc.writeMem(0xe5a1, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x81df, gbc.sp());
        EXPECT(0xe5a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a1));
        EXPECT(0xb, gbc.readMem(0xe5a2));
        // CB 0B 01E5
        gbc.setState(0xc2a3, 0x30ae, 0xffd0, 0x6e5, 0x68d8, 0x7f29, 0x1, 0x0);
        gbc.writeMem(0xc2a3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x30ae, gbc.sp());
        EXPECT(0xc2a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a3));
        EXPECT(0xb, gbc.readMem(0xc2a4));
        // CB 0B 01E6
        gbc.setState(0xa700, 0x6063, 0xd6a0, 0x3d0f, 0x47ea, 0xbed0, 0x0, 0x0);
        gbc.writeMem(0xa700, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6063, gbc.sp());
        EXPECT(0xa702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa700));
        EXPECT(0xb, gbc.readMem(0xa701));
        // CB 0B 01E7
        gbc.setState(0x6a4b, 0x7260, 0x9bf0, 0xb6af, 0x2edd, 0x57a1, 0x0, 0x0);
        gbc.writeMem(0x6a4b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7260, gbc.sp());
        EXPECT(0x6a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01E8
        gbc.setState(0xa760, 0x60b6, 0x1090, 0xc35d, 0xeeb1, 0xacc9, 0x1, 0x1);
        gbc.writeMem(0xa760, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x60b6, gbc.sp());
        EXPECT(0xa762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa760));
        EXPECT(0xb, gbc.readMem(0xa761));
        // CB 0B 01E9
        gbc.setState(0xaf, 0x9a98, 0x4c90, 0xd7c0, 0xb47d, 0xfb03, 0x1, 0x0);
        gbc.writeMem(0xaf, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9a98, gbc.sp());
        EXPECT(0xb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01EA
        gbc.setState(0x3e40, 0x9817, 0xf4d0, 0x42b5, 0x5b9c, 0xd94c, 0x1, 0x1);
        gbc.writeMem(0x3e40, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9817, gbc.sp());
        EXPECT(0x3e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01EB
        gbc.setState(0xbfd0, 0xdfc, 0x9ce0, 0xbba4, 0xe964, 0xa2d4, 0x1, 0x1);
        gbc.writeMem(0xbfd0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdfc, gbc.sp());
        EXPECT(0xbfd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd0));
        EXPECT(0xb, gbc.readMem(0xbfd1));
        // CB 0B 01EC
        gbc.setState(0x57ac, 0xedeb, 0xb740, 0x3a05, 0xb1cd, 0x5aef, 0x1, 0x1);
        gbc.writeMem(0x57ac, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xedeb, gbc.sp());
        EXPECT(0x57ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01EE
        gbc.setState(0xdb24, 0x68b9, 0x560, 0xd0b3, 0xee82, 0x7585, 0x1, 0x1);
        gbc.writeMem(0xdb24, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x68b9, gbc.sp());
        EXPECT(0xdb26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb24));
        EXPECT(0xb, gbc.readMem(0xdb25));
        // CB 0B 01EF
        gbc.setState(0x5343, 0x999a, 0x2960, 0xb6c7, 0xc65c, 0xfe60, 0x0, 0x1);
        gbc.writeMem(0x5343, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x999a, gbc.sp());
        EXPECT(0x5345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01F1
        gbc.setState(0x1d36, 0xd64f, 0xd340, 0xbb96, 0x6075, 0x4043, 0x1, 0x1);
        gbc.writeMem(0x1d36, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd64f, gbc.sp());
        EXPECT(0x1d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01F2
        gbc.setState(0xaa7a, 0xade6, 0x4ed0, 0xa284, 0xc459, 0xe599, 0x1, 0x0);
        gbc.writeMem(0xaa7a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xade6, gbc.sp());
        EXPECT(0xaa7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa7a));
        EXPECT(0xb, gbc.readMem(0xaa7b));
        // CB 0B 01F3
        gbc.setState(0xcd5, 0xb76, 0x3da0, 0x3d9, 0x858f, 0x8a47, 0x0, 0x1);
        gbc.writeMem(0xcd5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb76, gbc.sp());
        EXPECT(0xcd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01F4
        gbc.setState(0xad50, 0xcec8, 0x5020, 0xbcde, 0xfee6, 0xfc6e, 0x0, 0x1);
        gbc.writeMem(0xad50, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcec8, gbc.sp());
        EXPECT(0xad52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad50));
        EXPECT(0xb, gbc.readMem(0xad51));
        // CB 0B 01F5
        gbc.setState(0xab44, 0x889e, 0x1e70, 0x7fe4, 0xe213, 0x779a, 0x1, 0x0);
        gbc.writeMem(0xab44, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x889e, gbc.sp());
        EXPECT(0xab46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab44));
        EXPECT(0xb, gbc.readMem(0xab45));
        // CB 0B 01F6
        gbc.setState(0x6b4a, 0x821c, 0x8ac0, 0xad76, 0xe005, 0xddab, 0x1, 0x0);
        gbc.writeMem(0x6b4a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x821c, gbc.sp());
        EXPECT(0x6b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01F7
        gbc.setState(0x28af, 0x84ec, 0xcc60, 0x91bc, 0x778e, 0x6aa6, 0x1, 0x0);
        gbc.writeMem(0x28af, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x84ec, gbc.sp());
        EXPECT(0x28b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01F8
        gbc.setState(0x7583, 0x4ea6, 0xe3f0, 0xe677, 0xb61a, 0xf33b, 0x0, 0x0);
        gbc.writeMem(0x7583, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4ea6, gbc.sp());
        EXPECT(0x7585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01F9
        gbc.setState(0xc503, 0xeea2, 0xf760, 0xa10f, 0x1945, 0x237e, 0x1, 0x1);
        gbc.writeMem(0xc503, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xeea2, gbc.sp());
        EXPECT(0xc505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc503));
        EXPECT(0xb, gbc.readMem(0xc504));
        // CB 0B 01FA
        gbc.setState(0x3fe0, 0x8622, 0x6240, 0xe18, 0x91b8, 0x4885, 0x0, 0x1);
        gbc.writeMem(0x3fe0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8622, gbc.sp());
        EXPECT(0x3fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01FC
        gbc.setState(0x3d85, 0xef10, 0xbdb0, 0xacfa, 0xfc84, 0x926e, 0x1, 0x1);
        gbc.writeMem(0x3d85, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xef10, gbc.sp());
        EXPECT(0x3d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 01FD
        gbc.setState(0x84e9, 0x8fbe, 0x7460, 0xb790, 0x1215, 0x2845, 0x0, 0x0);
        gbc.writeMem(0x84e9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8fbe, gbc.sp());
        EXPECT(0x84eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e9));
        EXPECT(0xb, gbc.readMem(0x84ea));
        // CB 0B 01FE
        gbc.setState(0x8fc, 0x11f5, 0x6a00, 0x30bf, 0x92bd, 0x4627, 0x0, 0x0);
        gbc.writeMem(0x8fc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x11f5, gbc.sp());
        EXPECT(0x8fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 01FF
        gbc.setState(0x6b8e, 0x3d4d, 0x51d0, 0xd348, 0x23d2, 0xb022, 0x1, 0x0);
        gbc.writeMem(0x6b8e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3d4d, gbc.sp());
        EXPECT(0x6b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0200
        gbc.setState(0x6f8, 0x8004, 0xda00, 0x854e, 0x74b7, 0xf45e, 0x1, 0x0);
        gbc.writeMem(0x6f8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8004, gbc.sp());
        EXPECT(0x6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0201
        gbc.setState(0xc3a5, 0x2244, 0xa3e0, 0x776f, 0xdb3, 0x587c, 0x0, 0x0);
        gbc.writeMem(0xc3a5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2244, gbc.sp());
        EXPECT(0xc3a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3a5));
        EXPECT(0xb, gbc.readMem(0xc3a6));
        // CB 0B 0202
        gbc.setState(0x553e, 0xa8e1, 0x4a00, 0x2ee5, 0x8ad9, 0xdfb5, 0x0, 0x1);
        gbc.writeMem(0x553e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa8e1, gbc.sp());
        EXPECT(0x5540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0203
        gbc.setState(0x99af, 0xa45d, 0xc180, 0x12a5, 0x567f, 0x4ac2, 0x0, 0x0);
        gbc.writeMem(0x99af, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa45d, gbc.sp());
        EXPECT(0x99b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99af));
        EXPECT(0xb, gbc.readMem(0x99b0));
        // CB 0B 0204
        gbc.setState(0x9c58, 0xa8af, 0xb7d0, 0x52c8, 0x3614, 0x89c6, 0x1, 0x0);
        gbc.writeMem(0x9c58, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa8af, gbc.sp());
        EXPECT(0x9c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c58));
        EXPECT(0xb, gbc.readMem(0x9c59));
        // CB 0B 0205
        gbc.setState(0x34cf, 0x59c7, 0xb070, 0x538e, 0xf31a, 0x39da, 0x1, 0x1);
        gbc.writeMem(0x34cf, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x59c7, gbc.sp());
        EXPECT(0x34d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0206
        gbc.setState(0xd796, 0x7ae1, 0x2600, 0x87a4, 0x6b2a, 0xc054, 0x0, 0x1);
        gbc.writeMem(0xd796, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7ae1, gbc.sp());
        EXPECT(0xd798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd796));
        EXPECT(0xb, gbc.readMem(0xd797));
        // CB 0B 0207
        gbc.setState(0x83e, 0x10d0, 0xe630, 0x2dc3, 0x99ac, 0x7fa2, 0x0, 0x1);
        gbc.writeMem(0x83e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x10d0, gbc.sp());
        EXPECT(0x840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0208
        gbc.setState(0x63ba, 0xe6f1, 0xd940, 0x520e, 0x9350, 0xd95, 0x0, 0x0);
        gbc.writeMem(0x63ba, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe6f1, gbc.sp());
        EXPECT(0x63bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0209
        gbc.setState(0xac66, 0x28af, 0x81c0, 0x56f4, 0x1da2, 0xeac0, 0x0, 0x1);
        gbc.writeMem(0xac66, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x28af, gbc.sp());
        EXPECT(0xac68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac66));
        EXPECT(0xb, gbc.readMem(0xac67));
        // CB 0B 020A
        gbc.setState(0x7ce8, 0x9b06, 0x4450, 0x5730, 0x7f75, 0x6178, 0x1, 0x0);
        gbc.writeMem(0x7ce8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9b06, gbc.sp());
        EXPECT(0x7cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 020B
        gbc.setState(0xdf33, 0xb984, 0x6d00, 0x733a, 0xeadd, 0x2382, 0x1, 0x0);
        gbc.writeMem(0xdf33, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb984, gbc.sp());
        EXPECT(0xdf35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf33));
        EXPECT(0xb, gbc.readMem(0xdf34));
        // CB 0B 020C
        gbc.setState(0xa8de, 0x82f1, 0x3920, 0xf755, 0x5ec5, 0xb871, 0x0, 0x0);
        gbc.writeMem(0xa8de, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x82f1, gbc.sp());
        EXPECT(0xa8e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8de));
        EXPECT(0xb, gbc.readMem(0xa8df));
        // CB 0B 020D
        gbc.setState(0x311c, 0xc954, 0x72d0, 0xdffe, 0xb653, 0xc8dd, 0x1, 0x1);
        gbc.writeMem(0x311c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc954, gbc.sp());
        EXPECT(0x311e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 020E
        gbc.setState(0xabc7, 0xdf34, 0x9380, 0x37c5, 0x8686, 0x425, 0x0, 0x0);
        gbc.writeMem(0xabc7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdf34, gbc.sp());
        EXPECT(0xabc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc7));
        EXPECT(0xb, gbc.readMem(0xabc8));
        // CB 0B 020F
        gbc.setState(0x899e, 0x6489, 0xdef0, 0x7f73, 0x7e9, 0x3c64, 0x1, 0x1);
        gbc.writeMem(0x899e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6489, gbc.sp());
        EXPECT(0x89a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x899e));
        EXPECT(0xb, gbc.readMem(0x899f));
        // CB 0B 0210
        gbc.setState(0x34b5, 0x82f8, 0x2450, 0xcd6, 0x3b87, 0x26a3, 0x0, 0x0);
        gbc.writeMem(0x34b5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x82f8, gbc.sp());
        EXPECT(0x34b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0211
        gbc.setState(0xe723, 0x7cd9, 0xff80, 0x555c, 0x1c3e, 0x12ff, 0x1, 0x0);
        gbc.writeMem(0xe723, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7cd9, gbc.sp());
        EXPECT(0xe725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe723));
        EXPECT(0xb, gbc.readMem(0xe724));
        // CB 0B 0212
        gbc.setState(0x4f2e, 0x4e5, 0x2a90, 0x4c01, 0x61a7, 0xf468, 0x0, 0x1);
        gbc.writeMem(0x4f2e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4e5, gbc.sp());
        EXPECT(0x4f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0213
        gbc.setState(0x9eee, 0x1a, 0xae80, 0x9c2d, 0xf0f0, 0x7495, 0x0, 0x0);
        gbc.writeMem(0x9eee, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1a, gbc.sp());
        EXPECT(0x9ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eee));
        EXPECT(0xb, gbc.readMem(0x9eef));
        // CB 0B 0214
        gbc.setState(0xbe8e, 0xd54f, 0x44d0, 0x345e, 0x1658, 0xcc21, 0x0, 0x0);
        gbc.writeMem(0xbe8e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd54f, gbc.sp());
        EXPECT(0xbe90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8e));
        EXPECT(0xb, gbc.readMem(0xbe8f));
        // CB 0B 0215
        gbc.setState(0x6dca, 0x8eed, 0x2660, 0xfd9, 0xeb8d, 0xec5f, 0x1, 0x1);
        gbc.writeMem(0x6dca, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8eed, gbc.sp());
        EXPECT(0x6dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0216
        gbc.setState(0x7b38, 0xc4e2, 0x6100, 0xd33, 0xf4a0, 0x25d9, 0x1, 0x1);
        gbc.writeMem(0x7b38, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc4e2, gbc.sp());
        EXPECT(0x7b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0217
        gbc.setState(0x4436, 0xf655, 0x42a0, 0xe284, 0xd4a5, 0x78aa, 0x1, 0x1);
        gbc.writeMem(0x4436, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf655, gbc.sp());
        EXPECT(0x4438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0218
        gbc.setState(0x1448, 0x49a, 0xe020, 0x3eaa, 0x288d, 0x1034, 0x0, 0x0);
        gbc.writeMem(0x1448, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x49a, gbc.sp());
        EXPECT(0x144a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0219
        gbc.setState(0xc320, 0x7267, 0x1d70, 0x2f6b, 0x21f8, 0xebf1, 0x1, 0x1);
        gbc.writeMem(0xc320, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7267, gbc.sp());
        EXPECT(0xc322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc320));
        EXPECT(0xb, gbc.readMem(0xc321));
        // CB 0B 021B
        gbc.setState(0x639c, 0xf0f9, 0x2bd0, 0xf376, 0xf208, 0x694c, 0x1, 0x1);
        gbc.writeMem(0x639c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf0f9, gbc.sp());
        EXPECT(0x639e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 021C
        gbc.setState(0x2a2, 0x48c2, 0x900, 0x8934, 0xcbfa, 0xbc35, 0x0, 0x1);
        gbc.writeMem(0x2a2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x48c2, gbc.sp());
        EXPECT(0x2a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 021D
        gbc.setState(0x9153, 0x500e, 0xdda0, 0x181b, 0x6b5f, 0x7803, 0x1, 0x1);
        gbc.writeMem(0x9153, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x500e, gbc.sp());
        EXPECT(0x9155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9153));
        EXPECT(0xb, gbc.readMem(0x9154));
        // CB 0B 021E
        gbc.setState(0xa749, 0x8b7, 0xe400, 0xf4b5, 0x293d, 0x8773, 0x0, 0x1);
        gbc.writeMem(0xa749, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8b7, gbc.sp());
        EXPECT(0xa74b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa749));
        EXPECT(0xb, gbc.readMem(0xa74a));
        // CB 0B 021F
        gbc.setState(0x3dd5, 0x709c, 0x4e80, 0x7cb3, 0xfe44, 0xd189, 0x1, 0x1);
        gbc.writeMem(0x3dd5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x709c, gbc.sp());
        EXPECT(0x3dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0220
        gbc.setState(0x8b74, 0x295c, 0x4950, 0x950e, 0x1bdc, 0xd8d1, 0x1, 0x0);
        gbc.writeMem(0x8b74, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x295c, gbc.sp());
        EXPECT(0x8b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b74));
        EXPECT(0xb, gbc.readMem(0x8b75));
        // CB 0B 0221
        gbc.setState(0x2d06, 0x1b93, 0x6680, 0x60a4, 0x56d, 0xd6a9, 0x0, 0x1);
        gbc.writeMem(0x2d06, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1b93, gbc.sp());
        EXPECT(0x2d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0222
        gbc.setState(0x1c6a, 0x6c24, 0xeb40, 0xc802, 0x5b6, 0x7fd1, 0x0, 0x1);
        gbc.writeMem(0x1c6a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6c24, gbc.sp());
        EXPECT(0x1c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0223
        gbc.setState(0x967e, 0xa98a, 0x770, 0x7069, 0x73ff, 0x4ae7, 0x0, 0x0);
        gbc.writeMem(0x967e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa98a, gbc.sp());
        EXPECT(0x9680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x967e));
        EXPECT(0xb, gbc.readMem(0x967f));
        // CB 0B 0224
        gbc.setState(0xd14, 0x493a, 0x2a90, 0xef49, 0xcce4, 0xafb9, 0x0, 0x1);
        gbc.writeMem(0xd14, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x493a, gbc.sp());
        EXPECT(0xd16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0225
        gbc.setState(0x1530, 0xc8e3, 0xb4c0, 0xe1b4, 0x6094, 0xd219, 0x0, 0x1);
        gbc.writeMem(0x1530, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc8e3, gbc.sp());
        EXPECT(0x1532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0226
        gbc.setState(0x4a12, 0x7c64, 0xc150, 0xd439, 0x2e7a, 0xc14f, 0x0, 0x0);
        gbc.writeMem(0x4a12, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7c64, gbc.sp());
        EXPECT(0x4a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0227
        gbc.setState(0xe015, 0xb112, 0xc050, 0xf1af, 0x41be, 0xbe44, 0x1, 0x1);
        gbc.writeMem(0xe015, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb112, gbc.sp());
        EXPECT(0xe017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe015));
        EXPECT(0xb, gbc.readMem(0xe016));
        // CB 0B 0228
        gbc.setState(0x717f, 0xa661, 0xe030, 0xfa48, 0x6ea4, 0xd531, 0x0, 0x0);
        gbc.writeMem(0x717f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa661, gbc.sp());
        EXPECT(0x7181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0229
        gbc.setState(0x83a2, 0xb19b, 0xc3e0, 0x1e75, 0x606d, 0x88be, 0x0, 0x0);
        gbc.writeMem(0x83a2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb19b, gbc.sp());
        EXPECT(0x83a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a2));
        EXPECT(0xb, gbc.readMem(0x83a3));
        // CB 0B 022A
        gbc.setState(0xd581, 0xaf3, 0x27b0, 0xe17, 0x19a2, 0xe73e, 0x0, 0x1);
        gbc.writeMem(0xd581, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaf3, gbc.sp());
        EXPECT(0xd583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd581));
        EXPECT(0xb, gbc.readMem(0xd582));
        // CB 0B 022B
        gbc.setState(0x78af, 0x1b0b, 0xd080, 0xb371, 0xd66d, 0x2b93, 0x1, 0x1);
        gbc.writeMem(0x78af, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1b0b, gbc.sp());
        EXPECT(0x78b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 022C
        gbc.setState(0x1c74, 0x5e98, 0x9930, 0x15ea, 0x413a, 0x208b, 0x1, 0x0);
        gbc.writeMem(0x1c74, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5e98, gbc.sp());
        EXPECT(0x1c76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 022D
        gbc.setState(0xb186, 0xd1c1, 0x70b0, 0x4a94, 0x6547, 0x857c, 0x1, 0x1);
        gbc.writeMem(0xb186, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd1c1, gbc.sp());
        EXPECT(0xb188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb186));
        EXPECT(0xb, gbc.readMem(0xb187));
        // CB 0B 022E
        gbc.setState(0x7d89, 0x7c21, 0xacf0, 0x3bf6, 0x1df8, 0x7946, 0x1, 0x0);
        gbc.writeMem(0x7d89, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7c21, gbc.sp());
        EXPECT(0x7d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 022F
        gbc.setState(0x5a47, 0x7509, 0x1300, 0x9f42, 0x2aff, 0x5d0, 0x0, 0x0);
        gbc.writeMem(0x5a47, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7509, gbc.sp());
        EXPECT(0x5a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0230
        gbc.setState(0x3ded, 0x74af, 0x2890, 0x69b0, 0x22b2, 0xd18, 0x0, 0x0);
        gbc.writeMem(0x3ded, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x74af, gbc.sp());
        EXPECT(0x3def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0231
        gbc.setState(0xd675, 0x301d, 0xbb10, 0xd5f2, 0x84f, 0x86bb, 0x1, 0x1);
        gbc.writeMem(0xd675, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x301d, gbc.sp());
        EXPECT(0xd677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd675));
        EXPECT(0xb, gbc.readMem(0xd676));
        // CB 0B 0232
        gbc.setState(0xd5e5, 0xbb57, 0x6490, 0x4d96, 0xce6a, 0x6683, 0x1, 0x0);
        gbc.writeMem(0xd5e5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbb57, gbc.sp());
        EXPECT(0xd5e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e5));
        EXPECT(0xb, gbc.readMem(0xd5e6));
        // CB 0B 0233
        gbc.setState(0x419, 0xcc0a, 0x73d0, 0x6d59, 0x81ca, 0x149f, 0x1, 0x1);
        gbc.writeMem(0x419, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcc0a, gbc.sp());
        EXPECT(0x41b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0234
        gbc.setState(0x841b, 0x48ef, 0xb8a0, 0xc549, 0x38b6, 0x748, 0x1, 0x0);
        gbc.writeMem(0x841b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x48ef, gbc.sp());
        EXPECT(0x841d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x841b));
        EXPECT(0xb, gbc.readMem(0x841c));
        // CB 0B 0235
        gbc.setState(0x68aa, 0xd2a, 0x6680, 0xb3bd, 0x3aa8, 0xb986, 0x1, 0x1);
        gbc.writeMem(0x68aa, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd2a, gbc.sp());
        EXPECT(0x68ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0236
        gbc.setState(0x5b4a, 0xff9f, 0x3040, 0xfbbf, 0xd56, 0x4150, 0x0, 0x1);
        gbc.writeMem(0x5b4a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xff9f, gbc.sp());
        EXPECT(0x5b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0237
        gbc.setState(0x8f6b, 0x9aa0, 0x8660, 0x2fa3, 0xdc8b, 0xe53a, 0x0, 0x1);
        gbc.writeMem(0x8f6b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9aa0, gbc.sp());
        EXPECT(0x8f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f6b));
        EXPECT(0xb, gbc.readMem(0x8f6c));
        // CB 0B 0238
        gbc.setState(0x7595, 0x5b9e, 0xfaa0, 0x74be, 0xd7c2, 0x2fc, 0x1, 0x0);
        gbc.writeMem(0x7595, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5b9e, gbc.sp());
        EXPECT(0x7597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0239
        gbc.setState(0x2513, 0xed5c, 0xb1b0, 0xca4b, 0x5dbc, 0x6899, 0x0, 0x0);
        gbc.writeMem(0x2513, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xed5c, gbc.sp());
        EXPECT(0x2515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 023B
        gbc.setState(0xa74d, 0xd430, 0xe6f0, 0xfb43, 0xeef1, 0x5994, 0x1, 0x0);
        gbc.writeMem(0xa74d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd430, gbc.sp());
        EXPECT(0xa74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74d));
        EXPECT(0xb, gbc.readMem(0xa74e));
        // CB 0B 023C
        gbc.setState(0xb477, 0x7aed, 0x23b0, 0x8186, 0xe9ab, 0x37b4, 0x1, 0x1);
        gbc.writeMem(0xb477, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7aed, gbc.sp());
        EXPECT(0xb479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb477));
        EXPECT(0xb, gbc.readMem(0xb478));
        // CB 0B 023D
        gbc.setState(0x985, 0xf8ba, 0xf0b0, 0x6d3d, 0xabdd, 0xf74b, 0x1, 0x1);
        gbc.writeMem(0x985, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf8ba, gbc.sp());
        EXPECT(0x987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 023E
        gbc.setState(0xd95, 0xc597, 0xd130, 0xe822, 0x8208, 0xcac8, 0x0, 0x0);
        gbc.writeMem(0xd95, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc597, gbc.sp());
        EXPECT(0xd97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 023F
        gbc.setState(0xeab0, 0xd320, 0xae60, 0xc0f6, 0x9496, 0x8947, 0x0, 0x0);
        gbc.writeMem(0xeab0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd320, gbc.sp());
        EXPECT(0xeab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab0));
        EXPECT(0xb, gbc.readMem(0xeab1));
        // CB 0B 0240
        gbc.setState(0x7ec0, 0x7128, 0x9330, 0x62bb, 0x53ff, 0x7e72, 0x0, 0x0);
        gbc.writeMem(0x7ec0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7128, gbc.sp());
        EXPECT(0x7ec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0241
        gbc.setState(0x41c5, 0x8110, 0x3260, 0x8301, 0x4afc, 0xd280, 0x0, 0x0);
        gbc.writeMem(0x41c5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8110, gbc.sp());
        EXPECT(0x41c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0242
        gbc.setState(0x5ce4, 0x8dcd, 0xd760, 0x14ca, 0x5a49, 0xd6, 0x0, 0x0);
        gbc.writeMem(0x5ce4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8dcd, gbc.sp());
        EXPECT(0x5ce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0243
        gbc.setState(0xe64c, 0x2970, 0xd990, 0xdf0a, 0xa457, 0x2549, 0x0, 0x1);
        gbc.writeMem(0xe64c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2970, gbc.sp());
        EXPECT(0xe64e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64c));
        EXPECT(0xb, gbc.readMem(0xe64d));
        // CB 0B 0244
        gbc.setState(0x17a4, 0x1f01, 0xa190, 0x4f0e, 0x4233, 0xc3f, 0x0, 0x1);
        gbc.writeMem(0x17a4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1f01, gbc.sp());
        EXPECT(0x17a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0245
        gbc.setState(0xc8c2, 0xda1a, 0x71f0, 0xd1f1, 0xf76b, 0xea3e, 0x0, 0x1);
        gbc.writeMem(0xc8c2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xda1a, gbc.sp());
        EXPECT(0xc8c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c2));
        EXPECT(0xb, gbc.readMem(0xc8c3));
        // CB 0B 0246
        gbc.setState(0x1380, 0xc83f, 0xe5a0, 0x76b4, 0xc04a, 0x42cc, 0x0, 0x1);
        gbc.writeMem(0x1380, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc83f, gbc.sp());
        EXPECT(0x1382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0247
        gbc.setState(0x31f6, 0x276f, 0x28b0, 0xfc8, 0x5a9a, 0x8cf4, 0x0, 0x1);
        gbc.writeMem(0x31f6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x276f, gbc.sp());
        EXPECT(0x31f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0248
        gbc.setState(0x52b2, 0x4f8, 0x6a40, 0x1c6c, 0x4f2d, 0xbeee, 0x1, 0x1);
        gbc.writeMem(0x52b2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4f8, gbc.sp());
        EXPECT(0x52b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0249
        gbc.setState(0x9df, 0xa5a4, 0xdfc0, 0x9c82, 0x8dbc, 0x3578, 0x0, 0x1);
        gbc.writeMem(0x9df, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa5a4, gbc.sp());
        EXPECT(0x9e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 024A
        gbc.setState(0x827, 0x7acc, 0xa910, 0xb60d, 0x1a88, 0xcceb, 0x0, 0x0);
        gbc.writeMem(0x827, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7acc, gbc.sp());
        EXPECT(0x829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 024B
        gbc.setState(0xb1ae, 0xcdea, 0x4a70, 0xaf97, 0x970a, 0x4a6f, 0x0, 0x1);
        gbc.writeMem(0xb1ae, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcdea, gbc.sp());
        EXPECT(0xb1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ae));
        EXPECT(0xb, gbc.readMem(0xb1af));
        // CB 0B 024C
        gbc.setState(0x6f30, 0x6ddb, 0x1d80, 0xec63, 0xdd0f, 0xcba0, 0x0, 0x0);
        gbc.writeMem(0x6f30, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6ddb, gbc.sp());
        EXPECT(0x6f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 024D
        gbc.setState(0x15be, 0x4344, 0x2040, 0xbf6, 0x3c12, 0xd651, 0x0, 0x1);
        gbc.writeMem(0x15be, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4344, gbc.sp());
        EXPECT(0x15c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 024E
        gbc.setState(0x2256, 0x45c7, 0xc950, 0xc45, 0x2fd0, 0xfb2e, 0x1, 0x0);
        gbc.writeMem(0x2256, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x45c7, gbc.sp());
        EXPECT(0x2258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0250
        gbc.setState(0xe044, 0x6ffa, 0x3f00, 0x10af, 0xddf6, 0x9f5b, 0x0, 0x0);
        gbc.writeMem(0xe044, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6ffa, gbc.sp());
        EXPECT(0xe046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe044));
        EXPECT(0xb, gbc.readMem(0xe045));
        // CB 0B 0251
        gbc.setState(0x4ab8, 0xa610, 0x38b0, 0xb365, 0x2ebc, 0xdb96, 0x0, 0x0);
        gbc.writeMem(0x4ab8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa610, gbc.sp());
        EXPECT(0x4aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0252
        gbc.setState(0x591c, 0xfa88, 0x7ff0, 0xf59b, 0x7b13, 0xa3c8, 0x1, 0x0);
        gbc.writeMem(0x591c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfa88, gbc.sp());
        EXPECT(0x591e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0253
        gbc.setState(0x83af, 0x359a, 0xd530, 0xfb8e, 0x23c3, 0xa7e8, 0x1, 0x0);
        gbc.writeMem(0x83af, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x359a, gbc.sp());
        EXPECT(0x83b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83af));
        EXPECT(0xb, gbc.readMem(0x83b0));
        // CB 0B 0254
        gbc.setState(0x2ba0, 0x34d7, 0xbe70, 0xdfdd, 0x7ee5, 0xff6d, 0x1, 0x0);
        gbc.writeMem(0x2ba0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x34d7, gbc.sp());
        EXPECT(0x2ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0255
        gbc.setState(0x22c5, 0x5e64, 0xd360, 0xfa45, 0xddf1, 0x8311, 0x0, 0x0);
        gbc.writeMem(0x22c5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5e64, gbc.sp());
        EXPECT(0x22c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0256
        gbc.setState(0x2f7e, 0xaa92, 0x3340, 0x5fab, 0x854e, 0x62d4, 0x1, 0x0);
        gbc.writeMem(0x2f7e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xaa92, gbc.sp());
        EXPECT(0x2f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0257
        gbc.setState(0x4695, 0xed97, 0x3b40, 0x56c8, 0xe26e, 0xada8, 0x1, 0x0);
        gbc.writeMem(0x4695, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xed97, gbc.sp());
        EXPECT(0x4697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0258
        gbc.setState(0x6c3f, 0xb1b5, 0x4fe0, 0x19ef, 0x3ef1, 0xb29a, 0x1, 0x0);
        gbc.writeMem(0x6c3f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb1b5, gbc.sp());
        EXPECT(0x6c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0259
        gbc.setState(0x6b5b, 0xa85b, 0x260, 0x9da6, 0x3be9, 0x1b55, 0x1, 0x1);
        gbc.writeMem(0x6b5b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa85b, gbc.sp());
        EXPECT(0x6b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 025A
        gbc.setState(0xde75, 0x37ea, 0xbbb0, 0xd620, 0x30a2, 0xf905, 0x1, 0x1);
        gbc.writeMem(0xde75, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x37ea, gbc.sp());
        EXPECT(0xde77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde75));
        EXPECT(0xb, gbc.readMem(0xde76));
        // CB 0B 025B
        gbc.setState(0xd572, 0xb270, 0xc7e0, 0x6e01, 0x9643, 0x7acc, 0x0, 0x0);
        gbc.writeMem(0xd572, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb270, gbc.sp());
        EXPECT(0xd574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd572));
        EXPECT(0xb, gbc.readMem(0xd573));
        // CB 0B 025C
        gbc.setState(0x9eaf, 0xc7a5, 0xd050, 0x43a4, 0x7199, 0x9a43, 0x1, 0x1);
        gbc.writeMem(0x9eaf, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc7a5, gbc.sp());
        EXPECT(0x9eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eaf));
        EXPECT(0xb, gbc.readMem(0x9eb0));
        // CB 0B 025D
        gbc.setState(0x4ce9, 0xc3c9, 0x7360, 0x951e, 0x4422, 0x113e, 0x1, 0x0);
        gbc.writeMem(0x4ce9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc3c9, gbc.sp());
        EXPECT(0x4ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 025E
        gbc.setState(0x7a07, 0x80d, 0x2140, 0x5adf, 0x4a7b, 0x3f49, 0x1, 0x0);
        gbc.writeMem(0x7a07, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x80d, gbc.sp());
        EXPECT(0x7a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 025F
        gbc.setState(0xebec, 0x68e6, 0x5510, 0xe501, 0xa654, 0x4c9a, 0x0, 0x1);
        gbc.writeMem(0xebec, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x68e6, gbc.sp());
        EXPECT(0xebee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebec));
        EXPECT(0xb, gbc.readMem(0xebed));
        // CB 0B 0260
        gbc.setState(0x5692, 0x6fc6, 0xee40, 0x2b47, 0x922c, 0xbfb9, 0x0, 0x0);
        gbc.writeMem(0x5692, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6fc6, gbc.sp());
        EXPECT(0x5694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0261
        gbc.setState(0xda66, 0x575d, 0x72e0, 0x7256, 0x2dfe, 0x74e9, 0x1, 0x0);
        gbc.writeMem(0xda66, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x575d, gbc.sp());
        EXPECT(0xda68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda66));
        EXPECT(0xb, gbc.readMem(0xda67));
        // CB 0B 0262
        gbc.setState(0x9e91, 0xd89e, 0x9d30, 0x220, 0x49a3, 0xbe4, 0x0, 0x1);
        gbc.writeMem(0x9e91, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd89e, gbc.sp());
        EXPECT(0x9e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e91));
        EXPECT(0xb, gbc.readMem(0x9e92));
        // CB 0B 0263
        gbc.setState(0x7ec6, 0x51ed, 0x860, 0x42dc, 0xf57d, 0xd415, 0x0, 0x0);
        gbc.writeMem(0x7ec6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x51ed, gbc.sp());
        EXPECT(0x7ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0264
        gbc.setState(0xac26, 0x1ec3, 0xb000, 0xf510, 0x510f, 0xb123, 0x1, 0x1);
        gbc.writeMem(0xac26, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1ec3, gbc.sp());
        EXPECT(0xac28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac26));
        EXPECT(0xb, gbc.readMem(0xac27));
        // CB 0B 0265
        gbc.setState(0x6e2f, 0x13c6, 0xd2f0, 0xb07a, 0xc9cd, 0xe3, 0x0, 0x0);
        gbc.writeMem(0x6e2f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x13c6, gbc.sp());
        EXPECT(0x6e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0266
        gbc.setState(0xd676, 0x3093, 0x1f40, 0xb574, 0xb2a5, 0x4fa6, 0x1, 0x0);
        gbc.writeMem(0xd676, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3093, gbc.sp());
        EXPECT(0xd678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd676));
        EXPECT(0xb, gbc.readMem(0xd677));
        // CB 0B 0267
        gbc.setState(0x2abf, 0x407e, 0xb810, 0x224c, 0x75fb, 0xa7cb, 0x0, 0x1);
        gbc.writeMem(0x2abf, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x407e, gbc.sp());
        EXPECT(0x2ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0268
        gbc.setState(0x596b, 0xbf4c, 0x3200, 0xcc, 0xade8, 0xb0c5, 0x1, 0x1);
        gbc.writeMem(0x596b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbf4c, gbc.sp());
        EXPECT(0x596d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0269
        gbc.setState(0xedf7, 0xc2fc, 0x7410, 0x4668, 0x2e86, 0xc6a2, 0x1, 0x0);
        gbc.writeMem(0xedf7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc2fc, gbc.sp());
        EXPECT(0xedf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf7));
        EXPECT(0xb, gbc.readMem(0xedf8));
        // CB 0B 026A
        gbc.setState(0xdbe4, 0xd937, 0xc6d0, 0xe06b, 0x6e2d, 0x4460, 0x1, 0x0);
        gbc.writeMem(0xdbe4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd937, gbc.sp());
        EXPECT(0xdbe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe4));
        EXPECT(0xb, gbc.readMem(0xdbe5));
        // CB 0B 026B
        gbc.setState(0x1a0a, 0xe05b, 0x4370, 0x9491, 0xcf83, 0x54e8, 0x0, 0x1);
        gbc.writeMem(0x1a0a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe05b, gbc.sp());
        EXPECT(0x1a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 026C
        gbc.setState(0x9d9d, 0xcaee, 0x5810, 0xb313, 0x118b, 0xeef8, 0x1, 0x0);
        gbc.writeMem(0x9d9d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcaee, gbc.sp());
        EXPECT(0x9d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d9d));
        EXPECT(0xb, gbc.readMem(0x9d9e));
        // CB 0B 026D
        gbc.setState(0x71d, 0x530e, 0xdf00, 0x4528, 0xef80, 0x6347, 0x1, 0x0);
        gbc.writeMem(0x71d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x530e, gbc.sp());
        EXPECT(0x71f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 026E
        gbc.setState(0x65f, 0x5eb6, 0x9670, 0x5366, 0xb5da, 0xe8fd, 0x0, 0x0);
        gbc.writeMem(0x65f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5eb6, gbc.sp());
        EXPECT(0x661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 026F
        gbc.setState(0xccf5, 0x4fac, 0xf680, 0xbf4f, 0xbbab, 0xd261, 0x0, 0x0);
        gbc.writeMem(0xccf5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4fac, gbc.sp());
        EXPECT(0xccf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf5));
        EXPECT(0xb, gbc.readMem(0xccf6));
        // CB 0B 0270
        gbc.setState(0x4783, 0xeeb7, 0xdd30, 0x41b2, 0xc2c3, 0xb24d, 0x1, 0x1);
        gbc.writeMem(0x4783, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xeeb7, gbc.sp());
        EXPECT(0x4785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0271
        gbc.setState(0xaa7c, 0x6ead, 0x3460, 0x3977, 0xce5d, 0x65d3, 0x0, 0x1);
        gbc.writeMem(0xaa7c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6ead, gbc.sp());
        EXPECT(0xaa7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa7c));
        EXPECT(0xb, gbc.readMem(0xaa7d));
        // CB 0B 0272
        gbc.setState(0x305e, 0xc209, 0x1980, 0xec3b, 0xde0e, 0xc75f, 0x0, 0x1);
        gbc.writeMem(0x305e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc209, gbc.sp());
        EXPECT(0x3060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0273
        gbc.setState(0xaa51, 0x7c8e, 0x9510, 0x642e, 0xa25a, 0x9dcc, 0x1, 0x0);
        gbc.writeMem(0xaa51, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7c8e, gbc.sp());
        EXPECT(0xaa53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa51));
        EXPECT(0xb, gbc.readMem(0xaa52));
        // CB 0B 0274
        gbc.setState(0x8bc3, 0x18b7, 0xc700, 0xee89, 0x252e, 0x1e83, 0x0, 0x1);
        gbc.writeMem(0x8bc3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x18b7, gbc.sp());
        EXPECT(0x8bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc3));
        EXPECT(0xb, gbc.readMem(0x8bc4));
        // CB 0B 0275
        gbc.setState(0xa294, 0xae26, 0xdec0, 0xa140, 0x58a6, 0x1a06, 0x0, 0x1);
        gbc.writeMem(0xa294, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xae26, gbc.sp());
        EXPECT(0xa296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa294));
        EXPECT(0xb, gbc.readMem(0xa295));
        // CB 0B 0276
        gbc.setState(0xc2e6, 0x1901, 0x8720, 0x6ae3, 0x8640, 0xfc05, 0x0, 0x1);
        gbc.writeMem(0xc2e6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1901, gbc.sp());
        EXPECT(0xc2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e6));
        EXPECT(0xb, gbc.readMem(0xc2e7));
        // CB 0B 0277
        gbc.setState(0x2cef, 0x7c5b, 0xfd40, 0x62ba, 0x9e60, 0xbd34, 0x0, 0x1);
        gbc.writeMem(0x2cef, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7c5b, gbc.sp());
        EXPECT(0x2cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0278
        gbc.setState(0x2843, 0x3e2e, 0x41f0, 0x3975, 0xd1a7, 0x5c4a, 0x0, 0x1);
        gbc.writeMem(0x2843, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3e2e, gbc.sp());
        EXPECT(0x2845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0279
        gbc.setState(0x4679, 0x6655, 0xcf00, 0x7d63, 0x5d2b, 0x79a2, 0x0, 0x0);
        gbc.writeMem(0x4679, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6655, gbc.sp());
        EXPECT(0x467b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 027A
        gbc.setState(0x5b50, 0xe81f, 0x3a00, 0x56a5, 0x88c8, 0xdeef, 0x1, 0x1);
        gbc.writeMem(0x5b50, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe81f, gbc.sp());
        EXPECT(0x5b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 027B
        gbc.setState(0xbe4d, 0x8c08, 0xfd40, 0x5d2f, 0xcb26, 0xc379, 0x1, 0x0);
        gbc.writeMem(0xbe4d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8c08, gbc.sp());
        EXPECT(0xbe4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4d));
        EXPECT(0xb, gbc.readMem(0xbe4e));
        // CB 0B 027C
        gbc.setState(0x1ba7, 0x513a, 0xe6c0, 0xad6, 0x92a7, 0x580f, 0x0, 0x0);
        gbc.writeMem(0x1ba7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x513a, gbc.sp());
        EXPECT(0x1ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 027D
        gbc.setState(0x73e8, 0x20f, 0xa890, 0xaf67, 0xb499, 0xfafa, 0x0, 0x1);
        gbc.writeMem(0x73e8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x20f, gbc.sp());
        EXPECT(0x73ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 027E
        gbc.setState(0x582d, 0xb7a6, 0xd120, 0xb284, 0xb113, 0x11b3, 0x1, 0x1);
        gbc.writeMem(0x582d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb7a6, gbc.sp());
        EXPECT(0x582f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 027F
        gbc.setState(0xee45, 0xf46e, 0xead0, 0xad81, 0x1b, 0x806, 0x1, 0x1);
        gbc.writeMem(0xee45, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf46e, gbc.sp());
        EXPECT(0xee47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee45));
        EXPECT(0xb, gbc.readMem(0xee46));
        // CB 0B 0280
        gbc.setState(0x5660, 0x22f3, 0x7e60, 0x128e, 0xc170, 0x4884, 0x0, 0x0);
        gbc.writeMem(0x5660, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x22f3, gbc.sp());
        EXPECT(0x5662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0281
        gbc.setState(0x7132, 0xb55, 0x3520, 0xcbd1, 0x6217, 0xb700, 0x0, 0x1);
        gbc.writeMem(0x7132, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb55, gbc.sp());
        EXPECT(0x7134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0282
        gbc.setState(0xa6e6, 0xcafb, 0xce10, 0xf797, 0xe32e, 0xe788, 0x0, 0x1);
        gbc.writeMem(0xa6e6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcafb, gbc.sp());
        EXPECT(0xa6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e6));
        EXPECT(0xb, gbc.readMem(0xa6e7));
        // CB 0B 0283
        gbc.setState(0xeb95, 0xa996, 0x7a10, 0xf27e, 0xe295, 0x69a6, 0x0, 0x1);
        gbc.writeMem(0xeb95, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa996, gbc.sp());
        EXPECT(0xeb97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb95));
        EXPECT(0xb, gbc.readMem(0xeb96));
        // CB 0B 0284
        gbc.setState(0xab66, 0x6455, 0x6f40, 0x7de2, 0xe547, 0x391e, 0x0, 0x0);
        gbc.writeMem(0xab66, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6455, gbc.sp());
        EXPECT(0xab68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab66));
        EXPECT(0xb, gbc.readMem(0xab67));
        // CB 0B 0285
        gbc.setState(0x6d2c, 0x26d7, 0x5ef0, 0x665e, 0x6e0a, 0x69e8, 0x1, 0x0);
        gbc.writeMem(0x6d2c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x26d7, gbc.sp());
        EXPECT(0x6d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0286
        gbc.setState(0xbe55, 0x81fa, 0x61b0, 0x7c65, 0x4009, 0x93e4, 0x1, 0x0);
        gbc.writeMem(0xbe55, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x81fa, gbc.sp());
        EXPECT(0xbe57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe55));
        EXPECT(0xb, gbc.readMem(0xbe56));
        // CB 0B 0287
        gbc.setState(0x6df2, 0xd839, 0xe3a0, 0x40c9, 0x5626, 0x6065, 0x1, 0x0);
        gbc.writeMem(0x6df2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd839, gbc.sp());
        EXPECT(0x6df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0288
        gbc.setState(0x7c49, 0xcb79, 0x8e80, 0x1a54, 0x7701, 0x3efc, 0x1, 0x0);
        gbc.writeMem(0x7c49, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xcb79, gbc.sp());
        EXPECT(0x7c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0289
        gbc.setState(0x34b6, 0x2596, 0xe8d0, 0x8aba, 0x89f9, 0x3907, 0x0, 0x0);
        gbc.writeMem(0x34b6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2596, gbc.sp());
        EXPECT(0x34b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 028A
        gbc.setState(0x298a, 0x1799, 0xf160, 0x603f, 0xf8c6, 0x736f, 0x1, 0x0);
        gbc.writeMem(0x298a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1799, gbc.sp());
        EXPECT(0x298c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 028B
        gbc.setState(0x9196, 0xf009, 0x30a0, 0x1466, 0x316a, 0xff75, 0x0, 0x0);
        gbc.writeMem(0x9196, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf009, gbc.sp());
        EXPECT(0x9198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9196));
        EXPECT(0xb, gbc.readMem(0x9197));
        // CB 0B 028C
        gbc.setState(0x6a14, 0x739, 0x5c40, 0x9946, 0x52a, 0xa06b, 0x1, 0x0);
        gbc.writeMem(0x6a14, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x739, gbc.sp());
        EXPECT(0x6a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 028D
        gbc.setState(0x1a28, 0x3655, 0x4a20, 0x876b, 0xe94d, 0x633b, 0x0, 0x0);
        gbc.writeMem(0x1a28, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3655, gbc.sp());
        EXPECT(0x1a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 028E
        gbc.setState(0x5db8, 0xfe96, 0xc20, 0x6f39, 0xb64e, 0x1aaf, 0x0, 0x1);
        gbc.writeMem(0x5db8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfe96, gbc.sp());
        EXPECT(0x5dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 028F
        gbc.setState(0x3b42, 0xcd8, 0xfb10, 0x2e0e, 0xb969, 0xce31, 0x1, 0x0);
        gbc.writeMem(0x3b42, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcd8, gbc.sp());
        EXPECT(0x3b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0290
        gbc.setState(0x77c2, 0x9ece, 0x13d0, 0x4997, 0xd79f, 0x62b3, 0x0, 0x0);
        gbc.writeMem(0x77c2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9ece, gbc.sp());
        EXPECT(0x77c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0291
        gbc.setState(0xdd02, 0xf287, 0xef10, 0x3deb, 0x740b, 0xeb9, 0x1, 0x1);
        gbc.writeMem(0xdd02, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf287, gbc.sp());
        EXPECT(0xdd04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd02));
        EXPECT(0xb, gbc.readMem(0xdd03));
        // CB 0B 0292
        gbc.setState(0xc694, 0x79c9, 0x2d40, 0x567, 0x9049, 0x80ac, 0x1, 0x1);
        gbc.writeMem(0xc694, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x79c9, gbc.sp());
        EXPECT(0xc696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc694));
        EXPECT(0xb, gbc.readMem(0xc695));
        // CB 0B 0293
        gbc.setState(0x4028, 0xe5a1, 0xa820, 0xfa7d, 0x4aed, 0xce08, 0x0, 0x0);
        gbc.writeMem(0x4028, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe5a1, gbc.sp());
        EXPECT(0x402a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0294
        gbc.setState(0x2ea6, 0x51e7, 0x2330, 0x19f9, 0x8a1, 0x87ce, 0x1, 0x1);
        gbc.writeMem(0x2ea6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x51e7, gbc.sp());
        EXPECT(0x2ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0295
        gbc.setState(0x7634, 0xced1, 0xea70, 0x31d8, 0x186e, 0x9b27, 0x1, 0x0);
        gbc.writeMem(0x7634, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xced1, gbc.sp());
        EXPECT(0x7636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0296
        gbc.setState(0xb201, 0xa81f, 0x8bd0, 0xe86b, 0xc26b, 0xe9bf, 0x0, 0x0);
        gbc.writeMem(0xb201, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa81f, gbc.sp());
        EXPECT(0xb203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb201));
        EXPECT(0xb, gbc.readMem(0xb202));
        // CB 0B 0297
        gbc.setState(0xd502, 0xf09e, 0xade0, 0xbca3, 0x8dd5, 0x73dc, 0x0, 0x1);
        gbc.writeMem(0xd502, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf09e, gbc.sp());
        EXPECT(0xd504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd502));
        EXPECT(0xb, gbc.readMem(0xd503));
        // CB 0B 0298
        gbc.setState(0xdadd, 0x9465, 0xd4b0, 0x4b21, 0x159f, 0xb79, 0x0, 0x0);
        gbc.writeMem(0xdadd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9465, gbc.sp());
        EXPECT(0xdadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdadd));
        EXPECT(0xb, gbc.readMem(0xdade));
        // CB 0B 0299
        gbc.setState(0x174d, 0xa466, 0x9850, 0x6732, 0x5415, 0x87ef, 0x1, 0x1);
        gbc.writeMem(0x174d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa466, gbc.sp());
        EXPECT(0x174f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 029A
        gbc.setState(0x29cc, 0xca9b, 0x940, 0xfd01, 0x7d3d, 0xf216, 0x1, 0x0);
        gbc.writeMem(0x29cc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xca9b, gbc.sp());
        EXPECT(0x29ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 029B
        gbc.setState(0xb6df, 0xa14b, 0x1880, 0xd3b5, 0x265d, 0xc2a0, 0x1, 0x0);
        gbc.writeMem(0xb6df, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa14b, gbc.sp());
        EXPECT(0xb6e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6df));
        EXPECT(0xb, gbc.readMem(0xb6e0));
        // CB 0B 029C
        gbc.setState(0x8dff, 0xe081, 0x4730, 0x3cf1, 0x1838, 0xa4e, 0x0, 0x0);
        gbc.writeMem(0x8dff, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe081, gbc.sp());
        EXPECT(0x8e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dff));
        EXPECT(0xb, gbc.readMem(0x8e00));
        // CB 0B 029D
        gbc.setState(0x6083, 0xf33b, 0x9330, 0xf167, 0x443f, 0x63a1, 0x0, 0x1);
        gbc.writeMem(0x6083, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf33b, gbc.sp());
        EXPECT(0x6085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 029E
        gbc.setState(0x3124, 0xcde7, 0x1920, 0x91, 0x891c, 0xa054, 0x1, 0x0);
        gbc.writeMem(0x3124, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xcde7, gbc.sp());
        EXPECT(0x3126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 029F
        gbc.setState(0xdee1, 0xd441, 0xd350, 0x82ac, 0x83c4, 0x3da2, 0x1, 0x1);
        gbc.writeMem(0xdee1, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd441, gbc.sp());
        EXPECT(0xdee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee1));
        EXPECT(0xb, gbc.readMem(0xdee2));
        // CB 0B 02A0
        gbc.setState(0x66d8, 0x57f7, 0xab60, 0x41cc, 0x8668, 0x710, 0x1, 0x1);
        gbc.writeMem(0x66d8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x57f7, gbc.sp());
        EXPECT(0x66da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02A1
        gbc.setState(0x1708, 0x1084, 0xd1c0, 0xeb23, 0xd43, 0xa59, 0x0, 0x1);
        gbc.writeMem(0x1708, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1084, gbc.sp());
        EXPECT(0x170a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02A2
        gbc.setState(0xbad5, 0xa08f, 0x44b0, 0xd1f5, 0xa1e8, 0xc4bb, 0x0, 0x1);
        gbc.writeMem(0xbad5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa08f, gbc.sp());
        EXPECT(0xbad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad5));
        EXPECT(0xb, gbc.readMem(0xbad6));
        // CB 0B 02A3
        gbc.setState(0x1a7, 0xf419, 0x77d0, 0x999e, 0x5f16, 0x910d, 0x1, 0x1);
        gbc.writeMem(0x1a7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf419, gbc.sp());
        EXPECT(0x1a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02A4
        gbc.setState(0x7a, 0x3d3b, 0x37e0, 0xc4f, 0xb52f, 0x94c9, 0x1, 0x0);
        gbc.writeMem(0x7a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3d3b, gbc.sp());
        EXPECT(0x7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02A5
        gbc.setState(0xbeb2, 0x2582, 0xcce0, 0x8c27, 0xf1f0, 0x9149, 0x0, 0x0);
        gbc.writeMem(0xbeb2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2582, gbc.sp());
        EXPECT(0xbeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb2));
        EXPECT(0xb, gbc.readMem(0xbeb3));
        // CB 0B 02A6
        gbc.setState(0xcc43, 0x5378, 0xa070, 0xcd38, 0x6dd0, 0x2384, 0x0, 0x1);
        gbc.writeMem(0xcc43, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5378, gbc.sp());
        EXPECT(0xcc45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc43));
        EXPECT(0xb, gbc.readMem(0xcc44));
        // CB 0B 02A7
        gbc.setState(0xec24, 0x8a8c, 0x5230, 0xc80, 0xe838, 0xe6a9, 0x1, 0x0);
        gbc.writeMem(0xec24, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8a8c, gbc.sp());
        EXPECT(0xec26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec24));
        EXPECT(0xb, gbc.readMem(0xec25));
        // CB 0B 02A8
        gbc.setState(0xa669, 0x22b3, 0x5dc0, 0xb480, 0xbc2f, 0x67c5, 0x1, 0x1);
        gbc.writeMem(0xa669, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x22b3, gbc.sp());
        EXPECT(0xa66b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa669));
        EXPECT(0xb, gbc.readMem(0xa66a));
        // CB 0B 02A9
        gbc.setState(0x6391, 0x4b75, 0xd1a0, 0x1f05, 0x18ad, 0x6e59, 0x0, 0x1);
        gbc.writeMem(0x6391, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4b75, gbc.sp());
        EXPECT(0x6393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02AA
        gbc.setState(0x5b34, 0x34a0, 0x5ae0, 0xaebd, 0x93ed, 0x5975, 0x1, 0x0);
        gbc.writeMem(0x5b34, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x34a0, gbc.sp());
        EXPECT(0x5b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02AB
        gbc.setState(0x6cb9, 0x9347, 0x8570, 0x9092, 0x6ced, 0xf159, 0x0, 0x0);
        gbc.writeMem(0x6cb9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9347, gbc.sp());
        EXPECT(0x6cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02AC
        gbc.setState(0x9dc9, 0x814, 0xa5d0, 0x785e, 0x87bd, 0x5c6a, 0x0, 0x0);
        gbc.writeMem(0x9dc9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x814, gbc.sp());
        EXPECT(0x9dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc9));
        EXPECT(0xb, gbc.readMem(0x9dca));
        // CB 0B 02AD
        gbc.setState(0xb80b, 0x286a, 0x4df0, 0x255e, 0xa59f, 0x2856, 0x0, 0x0);
        gbc.writeMem(0xb80b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x286a, gbc.sp());
        EXPECT(0xb80d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb80b));
        EXPECT(0xb, gbc.readMem(0xb80c));
        // CB 0B 02AE
        gbc.setState(0xb715, 0x9313, 0x5b40, 0x9090, 0x15e, 0x53d3, 0x1, 0x0);
        gbc.writeMem(0xb715, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9313, gbc.sp());
        EXPECT(0xb717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb715));
        EXPECT(0xb, gbc.readMem(0xb716));
        // CB 0B 02AF
        gbc.setState(0x429, 0x316c, 0xe6c0, 0x2595, 0xf66f, 0xd987, 0x1, 0x0);
        gbc.writeMem(0x429, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x316c, gbc.sp());
        EXPECT(0x42b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02B0
        gbc.setState(0x9d99, 0x921d, 0xc10, 0xb15b, 0x7d03, 0xb83f, 0x1, 0x1);
        gbc.writeMem(0x9d99, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x921d, gbc.sp());
        EXPECT(0x9d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d99));
        EXPECT(0xb, gbc.readMem(0x9d9a));
        // CB 0B 02B1
        gbc.setState(0xa41, 0x92f5, 0xe1f0, 0x6594, 0x75a4, 0xe35f, 0x0, 0x0);
        gbc.writeMem(0xa41, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x92f5, gbc.sp());
        EXPECT(0xa43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02B2
        gbc.setState(0xa278, 0x1adc, 0x9390, 0x26b6, 0x7bf8, 0x5457, 0x1, 0x0);
        gbc.writeMem(0xa278, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1adc, gbc.sp());
        EXPECT(0xa27a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa278));
        EXPECT(0xb, gbc.readMem(0xa279));
        // CB 0B 02B3
        gbc.setState(0xe0e2, 0xde8c, 0xe820, 0x40f1, 0xa626, 0x72e1, 0x0, 0x1);
        gbc.writeMem(0xe0e2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xde8c, gbc.sp());
        EXPECT(0xe0e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e2));
        EXPECT(0xb, gbc.readMem(0xe0e3));
        // CB 0B 02B4
        gbc.setState(0xdb53, 0x70cb, 0x2820, 0x17d3, 0xd123, 0x53, 0x1, 0x1);
        gbc.writeMem(0xdb53, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x70cb, gbc.sp());
        EXPECT(0xdb55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb53));
        EXPECT(0xb, gbc.readMem(0xdb54));
        // CB 0B 02B5
        gbc.setState(0x6c1, 0x4896, 0xf0a0, 0xb83d, 0xd0b3, 0xeb64, 0x0, 0x0);
        gbc.writeMem(0x6c1, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4896, gbc.sp());
        EXPECT(0x6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02B6
        gbc.setState(0x4000, 0xbf2a, 0xe270, 0x20c0, 0x6640, 0xdfeb, 0x0, 0x1);
        gbc.writeMem(0x4000, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbf2a, gbc.sp());
        EXPECT(0x4002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02B7
        gbc.setState(0xa55b, 0x25c9, 0x8400, 0x375f, 0x75b2, 0x278d, 0x0, 0x0);
        gbc.writeMem(0xa55b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x25c9, gbc.sp());
        EXPECT(0xa55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa55b));
        EXPECT(0xb, gbc.readMem(0xa55c));
        // CB 0B 02B8
        gbc.setState(0xc7eb, 0xdb7f, 0x2f30, 0xe1aa, 0x7f8, 0x8f8d, 0x1, 0x0);
        gbc.writeMem(0xc7eb, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdb7f, gbc.sp());
        EXPECT(0xc7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7eb));
        EXPECT(0xb, gbc.readMem(0xc7ec));
        // CB 0B 02B9
        gbc.setState(0xcb71, 0x293, 0xd70, 0x988b, 0x2896, 0x687e, 0x0, 0x1);
        gbc.writeMem(0xcb71, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x293, gbc.sp());
        EXPECT(0xcb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb71));
        EXPECT(0xb, gbc.readMem(0xcb72));
        // CB 0B 02BA
        gbc.setState(0xe84d, 0x95cb, 0x8070, 0x8a1c, 0x860e, 0xe12b, 0x0, 0x0);
        gbc.writeMem(0xe84d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x95cb, gbc.sp());
        EXPECT(0xe84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe84d));
        EXPECT(0xb, gbc.readMem(0xe84e));
        // CB 0B 02BB
        gbc.setState(0x550a, 0x77e2, 0xc680, 0x6a9e, 0x9cca, 0x75d2, 0x1, 0x0);
        gbc.writeMem(0x550a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x77e2, gbc.sp());
        EXPECT(0x550c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02BD
        gbc.setState(0x6379, 0x184a, 0x8840, 0x206f, 0x338e, 0x752e, 0x0, 0x0);
        gbc.writeMem(0x6379, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x184a, gbc.sp());
        EXPECT(0x637b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02BE
        gbc.setState(0x6dd0, 0xcffc, 0xe010, 0xa5bf, 0x39f9, 0x88c6, 0x0, 0x1);
        gbc.writeMem(0x6dd0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcffc, gbc.sp());
        EXPECT(0x6dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02BF
        gbc.setState(0x8ea2, 0x96c7, 0xbe50, 0xebc5, 0xfb56, 0xe310, 0x1, 0x0);
        gbc.writeMem(0x8ea2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x96c7, gbc.sp());
        EXPECT(0x8ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea2));
        EXPECT(0xb, gbc.readMem(0x8ea3));
        // CB 0B 02C1
        gbc.setState(0x5c52, 0xa242, 0x1cf0, 0xa893, 0x7903, 0xc1b8, 0x1, 0x0);
        gbc.writeMem(0x5c52, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa242, gbc.sp());
        EXPECT(0x5c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02C2
        gbc.setState(0x90ca, 0xe56e, 0x9f70, 0x1d02, 0xdb1e, 0x3d50, 0x1, 0x0);
        gbc.writeMem(0x90ca, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe56e, gbc.sp());
        EXPECT(0x90cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ca));
        EXPECT(0xb, gbc.readMem(0x90cb));
        // CB 0B 02C3
        gbc.setState(0xcc71, 0x7116, 0xa410, 0xdd9a, 0x72c9, 0x1b6f, 0x1, 0x1);
        gbc.writeMem(0xcc71, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7116, gbc.sp());
        EXPECT(0xcc73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc71));
        EXPECT(0xb, gbc.readMem(0xcc72));
        // CB 0B 02C4
        gbc.setState(0x5b5b, 0x44be, 0x95d0, 0x1280, 0xc9a2, 0xd8ca, 0x0, 0x0);
        gbc.writeMem(0x5b5b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x44be, gbc.sp());
        EXPECT(0x5b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02C5
        gbc.setState(0xca, 0x7fc2, 0xc9a0, 0xb34, 0x1d99, 0xf750, 0x1, 0x1);
        gbc.writeMem(0xca, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7fc2, gbc.sp());
        EXPECT(0xcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02C6
        gbc.setState(0x4e02, 0xc28c, 0x3f00, 0xedbb, 0x7d55, 0x5b16, 0x1, 0x0);
        gbc.writeMem(0x4e02, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc28c, gbc.sp());
        EXPECT(0x4e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02C7
        gbc.setState(0x94c3, 0xb247, 0xe90, 0x5f66, 0xd1d6, 0xb5ca, 0x0, 0x0);
        gbc.writeMem(0x94c3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb247, gbc.sp());
        EXPECT(0x94c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c3));
        EXPECT(0xb, gbc.readMem(0x94c4));
        // CB 0B 02C8
        gbc.setState(0x7bb2, 0xfa82, 0xaec0, 0xedb7, 0x61d2, 0x9097, 0x0, 0x0);
        gbc.writeMem(0x7bb2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfa82, gbc.sp());
        EXPECT(0x7bb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02C9
        gbc.setState(0x5379, 0xa77b, 0xbe20, 0xd797, 0x9f97, 0xb741, 0x0, 0x1);
        gbc.writeMem(0x5379, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa77b, gbc.sp());
        EXPECT(0x537b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02CA
        gbc.setState(0x6a9e, 0x4f36, 0x9d50, 0xbcdf, 0x4dab, 0x37e9, 0x0, 0x1);
        gbc.writeMem(0x6a9e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4f36, gbc.sp());
        EXPECT(0x6aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02CB
        gbc.setState(0xa327, 0x9039, 0xb2c0, 0x20c4, 0x3503, 0xa1ae, 0x1, 0x1);
        gbc.writeMem(0xa327, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9039, gbc.sp());
        EXPECT(0xa329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa327));
        EXPECT(0xb, gbc.readMem(0xa328));
        // CB 0B 02CC
        gbc.setState(0x8685, 0xe990, 0xd320, 0xb394, 0x4ac7, 0x4ec3, 0x1, 0x1);
        gbc.writeMem(0x8685, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe990, gbc.sp());
        EXPECT(0x8687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8685));
        EXPECT(0xb, gbc.readMem(0x8686));
        // CB 0B 02CD
        gbc.setState(0x51b3, 0x65f, 0x3530, 0xc206, 0xbd2f, 0x79ce, 0x0, 0x1);
        gbc.writeMem(0x51b3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x65f, gbc.sp());
        EXPECT(0x51b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02CE
        gbc.setState(0xd6cb, 0xcbf5, 0xf060, 0x81b9, 0xf57f, 0x99a1, 0x0, 0x1);
        gbc.writeMem(0xd6cb, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcbf5, gbc.sp());
        EXPECT(0xd6cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6cb));
        EXPECT(0xb, gbc.readMem(0xd6cc));
        // CB 0B 02CF
        gbc.setState(0x2a0, 0x2543, 0x4c80, 0x83de, 0xd7f2, 0xe478, 0x1, 0x1);
        gbc.writeMem(0x2a0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2543, gbc.sp());
        EXPECT(0x2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02D0
        gbc.setState(0x819d, 0xe8c2, 0x6a40, 0x71e4, 0xaec3, 0xc00c, 0x1, 0x0);
        gbc.writeMem(0x819d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe8c2, gbc.sp());
        EXPECT(0x819f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x819d));
        EXPECT(0xb, gbc.readMem(0x819e));
        // CB 0B 02D1
        gbc.setState(0x1f87, 0xa11f, 0xd430, 0xa7f, 0x5a2b, 0xa694, 0x1, 0x0);
        gbc.writeMem(0x1f87, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa11f, gbc.sp());
        EXPECT(0x1f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02D2
        gbc.setState(0x2714, 0x15ad, 0x5850, 0x3c0c, 0x7b78, 0xcd49, 0x1, 0x1);
        gbc.writeMem(0x2714, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x15ad, gbc.sp());
        EXPECT(0x2716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02D3
        gbc.setState(0x6865, 0x188d, 0x1220, 0x57ca, 0x7904, 0x37d5, 0x1, 0x1);
        gbc.writeMem(0x6865, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x188d, gbc.sp());
        EXPECT(0x6867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02D4
        gbc.setState(0xa04e, 0xd2ba, 0x33d0, 0x17e9, 0xffab, 0x5afd, 0x0, 0x0);
        gbc.writeMem(0xa04e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd2ba, gbc.sp());
        EXPECT(0xa050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa04e));
        EXPECT(0xb, gbc.readMem(0xa04f));
        // CB 0B 02D5
        gbc.setState(0x289e, 0x86df, 0x2030, 0x5f84, 0x580c, 0x72f7, 0x0, 0x0);
        gbc.writeMem(0x289e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x86df, gbc.sp());
        EXPECT(0x28a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02D6
        gbc.setState(0x47b2, 0xae20, 0x2be0, 0x7697, 0x2e4e, 0x29dd, 0x1, 0x1);
        gbc.writeMem(0x47b2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xae20, gbc.sp());
        EXPECT(0x47b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02D7
        gbc.setState(0x3b18, 0xf12e, 0x32b0, 0x907e, 0xa7c5, 0x5966, 0x1, 0x0);
        gbc.writeMem(0x3b18, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf12e, gbc.sp());
        EXPECT(0x3b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02D8
        gbc.setState(0xad8f, 0xf2af, 0x4520, 0x31bf, 0x7539, 0x5ffd, 0x1, 0x0);
        gbc.writeMem(0xad8f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf2af, gbc.sp());
        EXPECT(0xad91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad8f));
        EXPECT(0xb, gbc.readMem(0xad90));
        // CB 0B 02D9
        gbc.setState(0x1f9c, 0x1739, 0x50a0, 0xb79, 0x82f2, 0xf49d, 0x1, 0x1);
        gbc.writeMem(0x1f9c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1739, gbc.sp());
        EXPECT(0x1f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02DB
        gbc.setState(0x6e6c, 0xa9b8, 0xbe20, 0xec1c, 0x2175, 0x1e14, 0x1, 0x1);
        gbc.writeMem(0x6e6c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa9b8, gbc.sp());
        EXPECT(0x6e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02DC
        gbc.setState(0x8492, 0x5af0, 0x7bd0, 0x213d, 0x5cba, 0xcae7, 0x1, 0x1);
        gbc.writeMem(0x8492, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5af0, gbc.sp());
        EXPECT(0x8494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8492));
        EXPECT(0xb, gbc.readMem(0x8493));
        // CB 0B 02DD
        gbc.setState(0x3055, 0x8b1f, 0xee90, 0x3d5b, 0x7e58, 0x103, 0x1, 0x0);
        gbc.writeMem(0x3055, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8b1f, gbc.sp());
        EXPECT(0x3057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02DE
        gbc.setState(0x5ae7, 0x9f36, 0x6b90, 0xe23f, 0xb2d9, 0xafc2, 0x1, 0x1);
        gbc.writeMem(0x5ae7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9f36, gbc.sp());
        EXPECT(0x5ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02DF
        gbc.setState(0x4151, 0x4723, 0x8540, 0xb20e, 0xaec3, 0xe598, 0x0, 0x1);
        gbc.writeMem(0x4151, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4723, gbc.sp());
        EXPECT(0x4153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02E0
        gbc.setState(0x2a8b, 0x1821, 0x4e60, 0xd4a3, 0x87de, 0x4704, 0x0, 0x0);
        gbc.writeMem(0x2a8b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1821, gbc.sp());
        EXPECT(0x2a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02E1
        gbc.setState(0xd1e4, 0xcab2, 0x4280, 0xb84c, 0xfd93, 0xad89, 0x1, 0x0);
        gbc.writeMem(0xd1e4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcab2, gbc.sp());
        EXPECT(0xd1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e4));
        EXPECT(0xb, gbc.readMem(0xd1e5));
        // CB 0B 02E2
        gbc.setState(0x7f05, 0xe7ff, 0xf1b0, 0x446f, 0x40ae, 0x8d25, 0x1, 0x0);
        gbc.writeMem(0x7f05, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe7ff, gbc.sp());
        EXPECT(0x7f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02E3
        gbc.setState(0x245c, 0x503b, 0xf180, 0x80e8, 0x8d38, 0xc17, 0x1, 0x0);
        gbc.writeMem(0x245c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x503b, gbc.sp());
        EXPECT(0x245e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02E4
        gbc.setState(0x960f, 0xfebb, 0x7010, 0x9f6c, 0xdaa5, 0x8b2c, 0x1, 0x0);
        gbc.writeMem(0x960f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfebb, gbc.sp());
        EXPECT(0x9611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x960f));
        EXPECT(0xb, gbc.readMem(0x9610));
        // CB 0B 02E5
        gbc.setState(0xe866, 0xef7e, 0x4ba0, 0x3db7, 0xa792, 0xb1f2, 0x0, 0x1);
        gbc.writeMem(0xe866, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xef7e, gbc.sp());
        EXPECT(0xe868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe866));
        EXPECT(0xb, gbc.readMem(0xe867));
        // CB 0B 02E6
        gbc.setState(0x9eb4, 0x643b, 0xa590, 0x48bc, 0x3046, 0x384a, 0x0, 0x1);
        gbc.writeMem(0x9eb4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x643b, gbc.sp());
        EXPECT(0x9eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb4));
        EXPECT(0xb, gbc.readMem(0x9eb5));
        // CB 0B 02E7
        gbc.setState(0x57ed, 0x2fa9, 0x10e0, 0x9042, 0xa0d2, 0xa676, 0x0, 0x0);
        gbc.writeMem(0x57ed, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2fa9, gbc.sp());
        EXPECT(0x57ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02E8
        gbc.setState(0x8291, 0x9ece, 0xf750, 0x6fe5, 0x26f9, 0x12e1, 0x0, 0x0);
        gbc.writeMem(0x8291, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9ece, gbc.sp());
        EXPECT(0x8293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8291));
        EXPECT(0xb, gbc.readMem(0x8292));
        // CB 0B 02E9
        gbc.setState(0x9372, 0x9a6, 0x1d80, 0xa7b7, 0x590e, 0x1a4b, 0x0, 0x0);
        gbc.writeMem(0x9372, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9a6, gbc.sp());
        EXPECT(0x9374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9372));
        EXPECT(0xb, gbc.readMem(0x9373));
        // CB 0B 02EA
        gbc.setState(0x8fdd, 0x1d7e, 0x4c10, 0x1c5d, 0x7999, 0xe8ee, 0x0, 0x1);
        gbc.writeMem(0x8fdd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1d7e, gbc.sp());
        EXPECT(0x8fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fdd));
        EXPECT(0xb, gbc.readMem(0x8fde));
        // CB 0B 02EB
        gbc.setState(0x9900, 0x1a28, 0xfd20, 0xf411, 0xc7c4, 0x743d, 0x1, 0x1);
        gbc.writeMem(0x9900, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1a28, gbc.sp());
        EXPECT(0x9902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9900));
        EXPECT(0xb, gbc.readMem(0x9901));
        // CB 0B 02EC
        gbc.setState(0xa8c1, 0xa8aa, 0x8470, 0x5a09, 0x533e, 0x135f, 0x0, 0x0);
        gbc.writeMem(0xa8c1, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa8aa, gbc.sp());
        EXPECT(0xa8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c1));
        EXPECT(0xb, gbc.readMem(0xa8c2));
        // CB 0B 02ED
        gbc.setState(0xda66, 0xef81, 0x5060, 0x7181, 0xecf7, 0x2fc1, 0x0, 0x1);
        gbc.writeMem(0xda66, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xef81, gbc.sp());
        EXPECT(0xda68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda66));
        EXPECT(0xb, gbc.readMem(0xda67));
        // CB 0B 02EE
        gbc.setState(0xe16d, 0xa3de, 0xc800, 0x7edb, 0x4025, 0x494e, 0x0, 0x0);
        gbc.writeMem(0xe16d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa3de, gbc.sp());
        EXPECT(0xe16f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16d));
        EXPECT(0xb, gbc.readMem(0xe16e));
        // CB 0B 02EF
        gbc.setState(0x2436, 0xf193, 0xfd80, 0xedbf, 0xa3f6, 0x2526, 0x0, 0x0);
        gbc.writeMem(0x2436, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf193, gbc.sp());
        EXPECT(0x2438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02F0
        gbc.setState(0x590c, 0xc4e7, 0xdd90, 0x7cc4, 0xf02c, 0xec67, 0x0, 0x0);
        gbc.writeMem(0x590c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc4e7, gbc.sp());
        EXPECT(0x590e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02F1
        gbc.setState(0xe8cd, 0xe215, 0x90f0, 0xb1c6, 0x1840, 0xbe1c, 0x0, 0x0);
        gbc.writeMem(0xe8cd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe215, gbc.sp());
        EXPECT(0xe8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cd));
        EXPECT(0xb, gbc.readMem(0xe8ce));
        // CB 0B 02F2
        gbc.setState(0xcaf0, 0xc21f, 0xc80, 0x829a, 0x7b08, 0xb8af, 0x0, 0x0);
        gbc.writeMem(0xcaf0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc21f, gbc.sp());
        EXPECT(0xcaf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf0));
        EXPECT(0xb, gbc.readMem(0xcaf1));
        // CB 0B 02F3
        gbc.setState(0x2bdc, 0x5487, 0x2390, 0xe444, 0x40b, 0x139, 0x1, 0x0);
        gbc.writeMem(0x2bdc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5487, gbc.sp());
        EXPECT(0x2bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02F4
        gbc.setState(0x2e94, 0x70b6, 0x4bb0, 0xf93a, 0x104, 0xe823, 0x1, 0x0);
        gbc.writeMem(0x2e94, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x70b6, gbc.sp());
        EXPECT(0x2e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02F5
        gbc.setState(0x6255, 0xb4ab, 0x1020, 0x8b98, 0xe4f1, 0x14c0, 0x1, 0x1);
        gbc.writeMem(0x6255, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb4ab, gbc.sp());
        EXPECT(0x6257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02F6
        gbc.setState(0x2af3, 0xcedf, 0x7980, 0xb3a, 0x225c, 0x4e70, 0x0, 0x1);
        gbc.writeMem(0x2af3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcedf, gbc.sp());
        EXPECT(0x2af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02F7
        gbc.setState(0xd66a, 0xc757, 0xf890, 0x19c7, 0x746f, 0x3a62, 0x0, 0x0);
        gbc.writeMem(0xd66a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc757, gbc.sp());
        EXPECT(0xd66c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66a));
        EXPECT(0xb, gbc.readMem(0xd66b));
        // CB 0B 02F8
        gbc.setState(0x26d9, 0xcdb1, 0xff50, 0x35a0, 0xcc53, 0xac5, 0x1, 0x1);
        gbc.writeMem(0x26d9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcdb1, gbc.sp());
        EXPECT(0x26db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 02F9
        gbc.setState(0x5f3, 0xb1e5, 0x8e90, 0xbbdd, 0x3cfa, 0x3faa, 0x0, 0x1);
        gbc.writeMem(0x5f3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb1e5, gbc.sp());
        EXPECT(0x5f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 02FA
        gbc.setState(0x9a50, 0xddc0, 0x2a0, 0x4e8b, 0x3c74, 0x9124, 0x0, 0x1);
        gbc.writeMem(0x9a50, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xddc0, gbc.sp());
        EXPECT(0x9a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a50));
        EXPECT(0xb, gbc.readMem(0x9a51));
        // CB 0B 02FB
        gbc.setState(0x8a99, 0x9eda, 0x96f0, 0xf2f7, 0x4f10, 0xcb6b, 0x0, 0x0);
        gbc.writeMem(0x8a99, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9eda, gbc.sp());
        EXPECT(0x8a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a99));
        EXPECT(0xb, gbc.readMem(0x8a9a));
        // CB 0B 02FC
        gbc.setState(0xc393, 0x451e, 0xaf30, 0xabe4, 0xfa94, 0xc7cd, 0x1, 0x0);
        gbc.writeMem(0xc393, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x451e, gbc.sp());
        EXPECT(0xc395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc393));
        EXPECT(0xb, gbc.readMem(0xc394));
        // CB 0B 02FD
        gbc.setState(0xb10f, 0xf4f1, 0xfa60, 0xcc89, 0x4644, 0xa92c, 0x1, 0x0);
        gbc.writeMem(0xb10f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf4f1, gbc.sp());
        EXPECT(0xb111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10f));
        EXPECT(0xb, gbc.readMem(0xb110));
        // CB 0B 02FE
        gbc.setState(0xd7b9, 0x5f06, 0x5ad0, 0xea70, 0x345a, 0x6f6a, 0x0, 0x0);
        gbc.writeMem(0xd7b9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5f06, gbc.sp());
        EXPECT(0xd7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b9));
        EXPECT(0xb, gbc.readMem(0xd7ba));
        // CB 0B 02FF
        gbc.setState(0xe440, 0x81ff, 0x5520, 0x10ba, 0x638e, 0x3b3d, 0x1, 0x1);
        gbc.writeMem(0xe440, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x81ff, gbc.sp());
        EXPECT(0xe442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe440));
        EXPECT(0xb, gbc.readMem(0xe441));
        // CB 0B 0300
        gbc.setState(0x17a7, 0x9f92, 0xe370, 0xcf59, 0xac0f, 0xf1e0, 0x1, 0x0);
        gbc.writeMem(0x17a7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9f92, gbc.sp());
        EXPECT(0x17a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0301
        gbc.setState(0x42ba, 0xe388, 0xbbf0, 0x40dd, 0x3f2e, 0xf083, 0x1, 0x1);
        gbc.writeMem(0x42ba, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe388, gbc.sp());
        EXPECT(0x42bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0302
        gbc.setState(0x25dd, 0x5e47, 0x6e40, 0x4ca9, 0x43ea, 0x41f, 0x1, 0x1);
        gbc.writeMem(0x25dd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5e47, gbc.sp());
        EXPECT(0x25df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0303
        gbc.setState(0x1153, 0x3e81, 0x9980, 0x5d27, 0x1c57, 0x8b4c, 0x0, 0x0);
        gbc.writeMem(0x1153, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3e81, gbc.sp());
        EXPECT(0x1155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0304
        gbc.setState(0xc81d, 0x2de1, 0x8d20, 0xfce6, 0xcad2, 0xe9c8, 0x0, 0x1);
        gbc.writeMem(0xc81d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2de1, gbc.sp());
        EXPECT(0xc81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc81d));
        EXPECT(0xb, gbc.readMem(0xc81e));
        // CB 0B 0305
        gbc.setState(0xa1db, 0xb3cb, 0x2150, 0x8ac4, 0xfc6e, 0xe04a, 0x1, 0x0);
        gbc.writeMem(0xa1db, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb3cb, gbc.sp());
        EXPECT(0xa1dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1db));
        EXPECT(0xb, gbc.readMem(0xa1dc));
        // CB 0B 0306
        gbc.setState(0x984c, 0xccac, 0xe370, 0xea5c, 0x662e, 0x5a1d, 0x1, 0x0);
        gbc.writeMem(0x984c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xccac, gbc.sp());
        EXPECT(0x984e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984c));
        EXPECT(0xb, gbc.readMem(0x984d));
        // CB 0B 0307
        gbc.setState(0x5d0, 0xa104, 0xc1f0, 0x25bb, 0xcd0c, 0x9125, 0x1, 0x1);
        gbc.writeMem(0x5d0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa104, gbc.sp());
        EXPECT(0x5d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0308
        gbc.setState(0xa8ef, 0xdb53, 0x5230, 0x48de, 0x69f2, 0x1e09, 0x1, 0x1);
        gbc.writeMem(0xa8ef, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdb53, gbc.sp());
        EXPECT(0xa8f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ef));
        EXPECT(0xb, gbc.readMem(0xa8f0));
        // CB 0B 0309
        gbc.setState(0x6082, 0xccbe, 0xb170, 0xff8, 0x95cd, 0x85ff, 0x0, 0x1);
        gbc.writeMem(0x6082, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xccbe, gbc.sp());
        EXPECT(0x6084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 030A
        gbc.setState(0x4d36, 0x23ee, 0x95c0, 0x8c77, 0xac5b, 0xadbf, 0x1, 0x0);
        gbc.writeMem(0x4d36, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x23ee, gbc.sp());
        EXPECT(0x4d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 030B
        gbc.setState(0x6737, 0x6a7e, 0xa0e0, 0x198a, 0xbfc2, 0xc8a8, 0x0, 0x0);
        gbc.writeMem(0x6737, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6a7e, gbc.sp());
        EXPECT(0x6739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 030C
        gbc.setState(0x9d4f, 0xeb3c, 0x80, 0xfbe3, 0xe266, 0x8aa6, 0x1, 0x1);
        gbc.writeMem(0x9d4f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xeb3c, gbc.sp());
        EXPECT(0x9d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d4f));
        EXPECT(0xb, gbc.readMem(0x9d50));
        // CB 0B 030D
        gbc.setState(0xd1d, 0x93c9, 0xe660, 0x2782, 0x2678, 0x3636, 0x0, 0x0);
        gbc.writeMem(0xd1d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x93c9, gbc.sp());
        EXPECT(0xd1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 030E
        gbc.setState(0xc455, 0x43d, 0x6740, 0xe29f, 0x7d46, 0x474a, 0x0, 0x1);
        gbc.writeMem(0xc455, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x43d, gbc.sp());
        EXPECT(0xc457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc455));
        EXPECT(0xb, gbc.readMem(0xc456));
        // CB 0B 030F
        gbc.setState(0x6792, 0x78b5, 0xd410, 0xd61c, 0x6a63, 0x5c78, 0x0, 0x0);
        gbc.writeMem(0x6792, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x78b5, gbc.sp());
        EXPECT(0x6794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0310
        gbc.setState(0x52c, 0x9c68, 0xc4b0, 0x1f7c, 0x12ce, 0x33c1, 0x0, 0x0);
        gbc.writeMem(0x52c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9c68, gbc.sp());
        EXPECT(0x52e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0311
        gbc.setState(0xa0c3, 0x1192, 0x2ec0, 0xade3, 0x9a7b, 0xad15, 0x1, 0x0);
        gbc.writeMem(0xa0c3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1192, gbc.sp());
        EXPECT(0xa0c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c3));
        EXPECT(0xb, gbc.readMem(0xa0c4));
        // CB 0B 0312
        gbc.setState(0x73d8, 0x652a, 0xa810, 0xc386, 0xde82, 0x2e52, 0x0, 0x0);
        gbc.writeMem(0x73d8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x652a, gbc.sp());
        EXPECT(0x73da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0314
        gbc.setState(0xe6bf, 0xd6d6, 0x810, 0xdba2, 0xf310, 0x49c7, 0x1, 0x0);
        gbc.writeMem(0xe6bf, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd6d6, gbc.sp());
        EXPECT(0xe6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6bf));
        EXPECT(0xb, gbc.readMem(0xe6c0));
        // CB 0B 0316
        gbc.setState(0xad38, 0xad0f, 0x20c0, 0x98c6, 0x89da, 0x9ab1, 0x1, 0x1);
        gbc.writeMem(0xad38, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xad0f, gbc.sp());
        EXPECT(0xad3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad38));
        EXPECT(0xb, gbc.readMem(0xad39));
        // CB 0B 0317
        gbc.setState(0x77dc, 0x2b4e, 0x820, 0x3e41, 0xb922, 0xc59, 0x1, 0x0);
        gbc.writeMem(0x77dc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2b4e, gbc.sp());
        EXPECT(0x77de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0319
        gbc.setState(0x1114, 0x26b7, 0x4750, 0xee6e, 0xe797, 0x1679, 0x1, 0x0);
        gbc.writeMem(0x1114, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x26b7, gbc.sp());
        EXPECT(0x1116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 031A
        gbc.setState(0x519d, 0x4a6e, 0xad50, 0x6db9, 0x5adc, 0x6abc, 0x1, 0x1);
        gbc.writeMem(0x519d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4a6e, gbc.sp());
        EXPECT(0x519f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 031B
        gbc.setState(0x368d, 0xbc75, 0xdf60, 0xae63, 0xb437, 0x369c, 0x0, 0x0);
        gbc.writeMem(0x368d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbc75, gbc.sp());
        EXPECT(0x368f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 031C
        gbc.setState(0xca79, 0x257d, 0x7d10, 0x2604, 0x7652, 0x8be2, 0x1, 0x1);
        gbc.writeMem(0xca79, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x257d, gbc.sp());
        EXPECT(0xca7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca79));
        EXPECT(0xb, gbc.readMem(0xca7a));
        // CB 0B 031D
        gbc.setState(0x4fc6, 0xff62, 0xde90, 0x7b2e, 0xe387, 0xe87c, 0x0, 0x0);
        gbc.writeMem(0x4fc6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xff62, gbc.sp());
        EXPECT(0x4fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 031E
        gbc.setState(0x2411, 0xdb8a, 0xd840, 0xa393, 0x919, 0x6028, 0x1, 0x1);
        gbc.writeMem(0x2411, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdb8a, gbc.sp());
        EXPECT(0x2413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 031F
        gbc.setState(0x8696, 0x7651, 0xffa0, 0x7b9d, 0xe299, 0xb5a9, 0x1, 0x1);
        gbc.writeMem(0x8696, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7651, gbc.sp());
        EXPECT(0x8698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8696));
        EXPECT(0xb, gbc.readMem(0x8697));
        // CB 0B 0320
        gbc.setState(0x116b, 0xd812, 0xd2b0, 0x73e7, 0x7bf2, 0xa6c0, 0x1, 0x1);
        gbc.writeMem(0x116b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd812, gbc.sp());
        EXPECT(0x116d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0321
        gbc.setState(0x4aef, 0xe2e, 0x5330, 0x408b, 0x204a, 0x4e53, 0x1, 0x0);
        gbc.writeMem(0x4aef, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe2e, gbc.sp());
        EXPECT(0x4af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0322
        gbc.setState(0xb488, 0xa173, 0x3f80, 0xc833, 0x54a9, 0x3374, 0x1, 0x1);
        gbc.writeMem(0xb488, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa173, gbc.sp());
        EXPECT(0xb48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb488));
        EXPECT(0xb, gbc.readMem(0xb489));
        // CB 0B 0323
        gbc.setState(0xbf92, 0xec54, 0xf6c0, 0x5b30, 0x90c3, 0x955f, 0x0, 0x0);
        gbc.writeMem(0xbf92, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xec54, gbc.sp());
        EXPECT(0xbf94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf92));
        EXPECT(0xb, gbc.readMem(0xbf93));
        // CB 0B 0324
        gbc.setState(0x3a46, 0x3427, 0xd590, 0x624d, 0x57c3, 0x4181, 0x1, 0x1);
        gbc.writeMem(0x3a46, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3427, gbc.sp());
        EXPECT(0x3a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0325
        gbc.setState(0xc4e9, 0xfc73, 0xc030, 0x21d6, 0xe091, 0x5017, 0x1, 0x1);
        gbc.writeMem(0xc4e9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfc73, gbc.sp());
        EXPECT(0xc4eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e9));
        EXPECT(0xb, gbc.readMem(0xc4ea));
        // CB 0B 0327
        gbc.setState(0x494b, 0xe681, 0x5d00, 0x553a, 0x7896, 0x37ae, 0x0, 0x1);
        gbc.writeMem(0x494b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe681, gbc.sp());
        EXPECT(0x494d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0328
        gbc.setState(0xcbf9, 0xdccb, 0xff0, 0xd1af, 0xde54, 0x6f0f, 0x1, 0x0);
        gbc.writeMem(0xcbf9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdccb, gbc.sp());
        EXPECT(0xcbfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf9));
        EXPECT(0xb, gbc.readMem(0xcbfa));
        // CB 0B 0329
        gbc.setState(0x74c6, 0x880c, 0x9ac0, 0xf685, 0x5550, 0x4bb9, 0x0, 0x0);
        gbc.writeMem(0x74c6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x880c, gbc.sp());
        EXPECT(0x74c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 032A
        gbc.setState(0xc450, 0x6e26, 0xa3e0, 0xd515, 0xeffa, 0x4f5f, 0x1, 0x1);
        gbc.writeMem(0xc450, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6e26, gbc.sp());
        EXPECT(0xc452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc450));
        EXPECT(0xb, gbc.readMem(0xc451));
        // CB 0B 032B
        gbc.setState(0x57be, 0xd806, 0x2a0, 0xed76, 0x9e46, 0x779f, 0x1, 0x0);
        gbc.writeMem(0x57be, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd806, gbc.sp());
        EXPECT(0x57c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 032C
        gbc.setState(0x1420, 0xb80f, 0x4f80, 0x9956, 0x5c5a, 0x7e8c, 0x0, 0x0);
        gbc.writeMem(0x1420, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb80f, gbc.sp());
        EXPECT(0x1422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 032D
        gbc.setState(0xe929, 0x2b90, 0x6bf0, 0x1e04, 0xa90b, 0x4458, 0x0, 0x1);
        gbc.writeMem(0xe929, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2b90, gbc.sp());
        EXPECT(0xe92b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe929));
        EXPECT(0xb, gbc.readMem(0xe92a));
        // CB 0B 032E
        gbc.setState(0x9fe1, 0xd1, 0xb890, 0xaa0d, 0xc5fe, 0x9772, 0x0, 0x0);
        gbc.writeMem(0x9fe1, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd1, gbc.sp());
        EXPECT(0x9fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe1));
        EXPECT(0xb, gbc.readMem(0x9fe2));
        // CB 0B 032F
        gbc.setState(0x9800, 0x30a8, 0x1b60, 0xe58b, 0xd6ad, 0xc5aa, 0x1, 0x0);
        gbc.writeMem(0x9800, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x30a8, gbc.sp());
        EXPECT(0x9802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9800));
        EXPECT(0xb, gbc.readMem(0x9801));
        // CB 0B 0330
        gbc.setState(0x29d4, 0xaec0, 0xc7f0, 0x129, 0x78c9, 0x5365, 0x1, 0x1);
        gbc.writeMem(0x29d4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xaec0, gbc.sp());
        EXPECT(0x29d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0331
        gbc.setState(0xd7d2, 0xede0, 0xb3c0, 0x7568, 0xcc84, 0x2a8c, 0x1, 0x1);
        gbc.writeMem(0xd7d2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xede0, gbc.sp());
        EXPECT(0xd7d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d2));
        EXPECT(0xb, gbc.readMem(0xd7d3));
        // CB 0B 0332
        gbc.setState(0x8df5, 0x3b17, 0x2510, 0x7faa, 0x9b3b, 0xec89, 0x1, 0x0);
        gbc.writeMem(0x8df5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3b17, gbc.sp());
        EXPECT(0x8df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df5));
        EXPECT(0xb, gbc.readMem(0x8df6));
        // CB 0B 0335
        gbc.setState(0x96, 0xf7b2, 0x1ac0, 0xcd99, 0xf32f, 0xc42, 0x0, 0x1);
        gbc.writeMem(0x96, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf7b2, gbc.sp());
        EXPECT(0x98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0336
        gbc.setState(0x9fd4, 0x2db9, 0x5fd0, 0x249d, 0x1782, 0xf968, 0x1, 0x1);
        gbc.writeMem(0x9fd4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2db9, gbc.sp());
        EXPECT(0x9fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd4));
        EXPECT(0xb, gbc.readMem(0x9fd5));
        // CB 0B 0337
        gbc.setState(0x11, 0xb116, 0x7130, 0x2d55, 0xb9f1, 0x1823, 0x0, 0x0);
        gbc.writeMem(0x11, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb116, gbc.sp());
        EXPECT(0x13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0338
        gbc.setState(0xdb02, 0x6b0b, 0x3ef0, 0x4df8, 0x7195, 0xbd1a, 0x1, 0x0);
        gbc.writeMem(0xdb02, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6b0b, gbc.sp());
        EXPECT(0xdb04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb02));
        EXPECT(0xb, gbc.readMem(0xdb03));
        // CB 0B 0339
        gbc.setState(0x2bb2, 0x460, 0xa470, 0xae2e, 0x6cbd, 0x9523, 0x0, 0x0);
        gbc.writeMem(0x2bb2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x460, gbc.sp());
        EXPECT(0x2bb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 033A
        gbc.setState(0x507d, 0xbe02, 0x1120, 0xca04, 0xc400, 0x4c9e, 0x1, 0x0);
        gbc.writeMem(0x507d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbe02, gbc.sp());
        EXPECT(0x507f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 033C
        gbc.setState(0x60cb, 0x115c, 0x1e0, 0xe445, 0x990a, 0x57b8, 0x1, 0x1);
        gbc.writeMem(0x60cb, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x115c, gbc.sp());
        EXPECT(0x60cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 033D
        gbc.setState(0x5fdb, 0xd34, 0x6a40, 0x9eda, 0xb979, 0x1fe4, 0x1, 0x1);
        gbc.writeMem(0x5fdb, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd34, gbc.sp());
        EXPECT(0x5fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 033E
        gbc.setState(0x8036, 0x7589, 0xfbe0, 0xe3bf, 0x66d, 0x3139, 0x0, 0x0);
        gbc.writeMem(0x8036, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7589, gbc.sp());
        EXPECT(0x8038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8036));
        EXPECT(0xb, gbc.readMem(0x8037));
        // CB 0B 033F
        gbc.setState(0x41d9, 0x28ac, 0x59a0, 0xb610, 0x4ac3, 0xcede, 0x0, 0x0);
        gbc.writeMem(0x41d9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x28ac, gbc.sp());
        EXPECT(0x41db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0340
        gbc.setState(0x4210, 0x8bd6, 0x41a0, 0xf92d, 0x3a88, 0x4bdf, 0x0, 0x1);
        gbc.writeMem(0x4210, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8bd6, gbc.sp());
        EXPECT(0x4212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0341
        gbc.setState(0xef53, 0x4fc, 0xc900, 0x80a7, 0xff29, 0xd09a, 0x1, 0x0);
        gbc.writeMem(0xef53, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4fc, gbc.sp());
        EXPECT(0xef55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef53));
        EXPECT(0xb, gbc.readMem(0xef54));
        // CB 0B 0342
        gbc.setState(0x5fea, 0xe419, 0x2d60, 0x54b4, 0x544a, 0x303, 0x0, 0x1);
        gbc.writeMem(0x5fea, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe419, gbc.sp());
        EXPECT(0x5fec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0343
        gbc.setState(0xd4ff, 0x4b0c, 0x5e90, 0xa753, 0xe391, 0x3116, 0x1, 0x0);
        gbc.writeMem(0xd4ff, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4b0c, gbc.sp());
        EXPECT(0xd501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ff));
        EXPECT(0xb, gbc.readMem(0xd500));
        // CB 0B 0344
        gbc.setState(0x6edf, 0x1b83, 0x5090, 0x4dea, 0xd2c4, 0x401e, 0x1, 0x0);
        gbc.writeMem(0x6edf, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1b83, gbc.sp());
        EXPECT(0x6ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0345
        gbc.setState(0xd679, 0x3ad8, 0x37d0, 0x69ee, 0x881b, 0x861e, 0x1, 0x0);
        gbc.writeMem(0xd679, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3ad8, gbc.sp());
        EXPECT(0xd67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd679));
        EXPECT(0xb, gbc.readMem(0xd67a));
        // CB 0B 0346
        gbc.setState(0xcc8e, 0xf89d, 0x5eb0, 0xf8fd, 0x9935, 0xed64, 0x1, 0x1);
        gbc.writeMem(0xcc8e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf89d, gbc.sp());
        EXPECT(0xcc90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8e));
        EXPECT(0xb, gbc.readMem(0xcc8f));
        // CB 0B 0347
        gbc.setState(0x1c35, 0x4a1f, 0xaea0, 0x8da9, 0xfdea, 0x7e2b, 0x0, 0x1);
        gbc.writeMem(0x1c35, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4a1f, gbc.sp());
        EXPECT(0x1c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0348
        gbc.setState(0x7e36, 0x1b5e, 0xa660, 0x5811, 0x56a9, 0x89c, 0x1, 0x1);
        gbc.writeMem(0x7e36, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1b5e, gbc.sp());
        EXPECT(0x7e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0349
        gbc.setState(0xb263, 0xd655, 0x94e0, 0x361e, 0x5c5a, 0xff92, 0x0, 0x0);
        gbc.writeMem(0xb263, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd655, gbc.sp());
        EXPECT(0xb265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb263));
        EXPECT(0xb, gbc.readMem(0xb264));
        // CB 0B 034A
        gbc.setState(0xcf90, 0x3e1c, 0xfe70, 0x280, 0xb539, 0x7181, 0x1, 0x0);
        gbc.writeMem(0xcf90, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3e1c, gbc.sp());
        EXPECT(0xcf92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf90));
        EXPECT(0xb, gbc.readMem(0xcf91));
        // CB 0B 034B
        gbc.setState(0x63a4, 0x480e, 0xa850, 0x66a4, 0xed1, 0x9504, 0x1, 0x1);
        gbc.writeMem(0x63a4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x480e, gbc.sp());
        EXPECT(0x63a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 034C
        gbc.setState(0x78b3, 0x6815, 0x90a0, 0xc49, 0xa370, 0x630e, 0x1, 0x1);
        gbc.writeMem(0x78b3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6815, gbc.sp());
        EXPECT(0x78b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 034D
        gbc.setState(0x3930, 0x79c8, 0x6600, 0xdce6, 0xcd99, 0xe960, 0x1, 0x1);
        gbc.writeMem(0x3930, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x79c8, gbc.sp());
        EXPECT(0x3932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 034E
        gbc.setState(0x77c8, 0x79e8, 0xdb00, 0xf194, 0x1784, 0xf3fc, 0x0, 0x0);
        gbc.writeMem(0x77c8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x79e8, gbc.sp());
        EXPECT(0x77ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 034F
        gbc.setState(0xd5c6, 0x58da, 0x7270, 0x494e, 0xa4d3, 0x54a1, 0x0, 0x1);
        gbc.writeMem(0xd5c6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x58da, gbc.sp());
        EXPECT(0xd5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c6));
        EXPECT(0xb, gbc.readMem(0xd5c7));
        // CB 0B 0350
        gbc.setState(0xe34e, 0x6888, 0xd50, 0xfa0d, 0x684, 0xf980, 0x0, 0x0);
        gbc.writeMem(0xe34e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6888, gbc.sp());
        EXPECT(0xe350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe34e));
        EXPECT(0xb, gbc.readMem(0xe34f));
        // CB 0B 0351
        gbc.setState(0xddb7, 0x208e, 0xbf80, 0xe71b, 0x380d, 0x3728, 0x1, 0x0);
        gbc.writeMem(0xddb7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x208e, gbc.sp());
        EXPECT(0xddb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb7));
        EXPECT(0xb, gbc.readMem(0xddb8));
        // CB 0B 0352
        gbc.setState(0x7b42, 0xa689, 0x8560, 0xbefc, 0x8f19, 0xe3ba, 0x0, 0x0);
        gbc.writeMem(0x7b42, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa689, gbc.sp());
        EXPECT(0x7b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0353
        gbc.setState(0xbe91, 0xd248, 0x7e30, 0x52d3, 0x9e8f, 0x4bef, 0x1, 0x1);
        gbc.writeMem(0xbe91, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd248, gbc.sp());
        EXPECT(0xbe93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe91));
        EXPECT(0xb, gbc.readMem(0xbe92));
        // CB 0B 0354
        gbc.setState(0xcd, 0x9c1f, 0xb5a0, 0x6aa1, 0xce41, 0xfcf2, 0x1, 0x0);
        gbc.writeMem(0xcd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9c1f, gbc.sp());
        EXPECT(0xcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0356
        gbc.setState(0xfbd, 0xcc15, 0x67e0, 0x81f5, 0x8714, 0xe1f6, 0x0, 0x0);
        gbc.writeMem(0xfbd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xcc15, gbc.sp());
        EXPECT(0xfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0357
        gbc.setState(0x23dc, 0x7c9c, 0xe70, 0xd33d, 0x901b, 0xa08, 0x0, 0x1);
        gbc.writeMem(0x23dc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7c9c, gbc.sp());
        EXPECT(0x23de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0358
        gbc.setState(0x2d74, 0xff1d, 0x10e0, 0x1f9c, 0x98a5, 0x26d6, 0x1, 0x1);
        gbc.writeMem(0x2d74, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xff1d, gbc.sp());
        EXPECT(0x2d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0359
        gbc.setState(0xd75b, 0x9d0e, 0xeba0, 0x2c84, 0x9cbc, 0x8a88, 0x1, 0x1);
        gbc.writeMem(0xd75b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9d0e, gbc.sp());
        EXPECT(0xd75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75b));
        EXPECT(0xb, gbc.readMem(0xd75c));
        // CB 0B 035A
        gbc.setState(0xe542, 0x7c05, 0x20e0, 0xcc0f, 0xbb5b, 0xa6c8, 0x1, 0x0);
        gbc.writeMem(0xe542, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7c05, gbc.sp());
        EXPECT(0xe544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe542));
        EXPECT(0xb, gbc.readMem(0xe543));
        // CB 0B 035B
        gbc.setState(0x577c, 0x95e1, 0xe400, 0x1079, 0xb7db, 0x6d60, 0x1, 0x1);
        gbc.writeMem(0x577c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x95e1, gbc.sp());
        EXPECT(0x577e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 035C
        gbc.setState(0x5099, 0xe838, 0x2110, 0x8e47, 0x567d, 0x5fa5, 0x0, 0x1);
        gbc.writeMem(0x5099, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe838, gbc.sp());
        EXPECT(0x509b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 035D
        gbc.setState(0xa0c0, 0xa7bc, 0x31c0, 0xc99f, 0x3a99, 0x8085, 0x0, 0x0);
        gbc.writeMem(0xa0c0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa7bc, gbc.sp());
        EXPECT(0xa0c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c0));
        EXPECT(0xb, gbc.readMem(0xa0c1));
        // CB 0B 035E
        gbc.setState(0x2dd0, 0x8068, 0xcc20, 0xc21f, 0xa406, 0x5b42, 0x1, 0x1);
        gbc.writeMem(0x2dd0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8068, gbc.sp());
        EXPECT(0x2dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 035F
        gbc.setState(0xbc29, 0xf78d, 0x6650, 0xbcd6, 0xa818, 0x8c03, 0x1, 0x1);
        gbc.writeMem(0xbc29, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf78d, gbc.sp());
        EXPECT(0xbc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc29));
        EXPECT(0xb, gbc.readMem(0xbc2a));
        // CB 0B 0360
        gbc.setState(0x40f, 0xf6b4, 0x8930, 0xe49a, 0x291b, 0xf09, 0x0, 0x0);
        gbc.writeMem(0x40f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf6b4, gbc.sp());
        EXPECT(0x411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0361
        gbc.setState(0x19b8, 0x6bc3, 0xa30, 0xed5d, 0x6fd2, 0xa8cb, 0x1, 0x0);
        gbc.writeMem(0x19b8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6bc3, gbc.sp());
        EXPECT(0x19ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0362
        gbc.setState(0xb3f8, 0x9d3c, 0xc960, 0x5ca, 0x46c1, 0x7744, 0x0, 0x1);
        gbc.writeMem(0xb3f8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9d3c, gbc.sp());
        EXPECT(0xb3fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f8));
        EXPECT(0xb, gbc.readMem(0xb3f9));
        // CB 0B 0363
        gbc.setState(0x1564, 0xd8e6, 0x60f0, 0x8033, 0x685f, 0x1290, 0x0, 0x1);
        gbc.writeMem(0x1564, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd8e6, gbc.sp());
        EXPECT(0x1566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0364
        gbc.setState(0xe7fe, 0x4566, 0x8af0, 0x4892, 0x10d3, 0xdd13, 0x1, 0x0);
        gbc.writeMem(0xe7fe, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4566, gbc.sp());
        EXPECT(0xe800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7fe));
        EXPECT(0xb, gbc.readMem(0xe7ff));
        // CB 0B 0365
        gbc.setState(0xba20, 0x431d, 0xa9c0, 0x9bc6, 0x9be0, 0x4b26, 0x1, 0x0);
        gbc.writeMem(0xba20, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x431d, gbc.sp());
        EXPECT(0xba22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba20));
        EXPECT(0xb, gbc.readMem(0xba21));
        // CB 0B 0366
        gbc.setState(0xa771, 0x94de, 0xd3f0, 0xb028, 0xf7a5, 0xc716, 0x1, 0x0);
        gbc.writeMem(0xa771, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x94de, gbc.sp());
        EXPECT(0xa773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa771));
        EXPECT(0xb, gbc.readMem(0xa772));
        // CB 0B 0367
        gbc.setState(0x9c4, 0xfac6, 0x4c40, 0x3f8b, 0x5132, 0x5953, 0x0, 0x1);
        gbc.writeMem(0x9c4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfac6, gbc.sp());
        EXPECT(0x9c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0369
        gbc.setState(0x486a, 0xc394, 0xd770, 0xe2b9, 0x3ad2, 0x5565, 0x0, 0x1);
        gbc.writeMem(0x486a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc394, gbc.sp());
        EXPECT(0x486c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 036B
        gbc.setState(0x98c2, 0x1512, 0xff80, 0x682e, 0x3b12, 0x975d, 0x1, 0x0);
        gbc.writeMem(0x98c2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1512, gbc.sp());
        EXPECT(0x98c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c2));
        EXPECT(0xb, gbc.readMem(0x98c3));
        // CB 0B 036C
        gbc.setState(0xbf62, 0xe2, 0x4fc0, 0xd2e1, 0x6a9, 0x6df3, 0x0, 0x1);
        gbc.writeMem(0xbf62, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe2, gbc.sp());
        EXPECT(0xbf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf62));
        EXPECT(0xb, gbc.readMem(0xbf63));
        // CB 0B 036D
        gbc.setState(0xc699, 0xd91f, 0xc5a0, 0x408c, 0x798b, 0x16d3, 0x0, 0x1);
        gbc.writeMem(0xc699, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd91f, gbc.sp());
        EXPECT(0xc69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc699));
        EXPECT(0xb, gbc.readMem(0xc69a));
        // CB 0B 036E
        gbc.setState(0xcd51, 0xb51c, 0x21b0, 0xfbfe, 0xe656, 0xa4f, 0x1, 0x1);
        gbc.writeMem(0xcd51, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb51c, gbc.sp());
        EXPECT(0xcd53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd51));
        EXPECT(0xb, gbc.readMem(0xcd52));
        // CB 0B 036F
        gbc.setState(0x6b06, 0x7682, 0xf680, 0xd2ee, 0x6419, 0xed45, 0x1, 0x0);
        gbc.writeMem(0x6b06, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7682, gbc.sp());
        EXPECT(0x6b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0370
        gbc.setState(0xc01, 0xab57, 0xbd40, 0x2471, 0x513f, 0xc554, 0x0, 0x0);
        gbc.writeMem(0xc01, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xab57, gbc.sp());
        EXPECT(0xc03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0371
        gbc.setState(0x681a, 0x2b6a, 0x3d20, 0xad12, 0xd906, 0x5eaf, 0x1, 0x1);
        gbc.writeMem(0x681a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2b6a, gbc.sp());
        EXPECT(0x681c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0372
        gbc.setState(0xc7b7, 0xad9, 0x9990, 0x6c6f, 0x38cf, 0x7010, 0x1, 0x1);
        gbc.writeMem(0xc7b7, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xad9, gbc.sp());
        EXPECT(0xc7b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b7));
        EXPECT(0xb, gbc.readMem(0xc7b8));
        // CB 0B 0373
        gbc.setState(0xc080, 0xebd3, 0x3360, 0x39f9, 0x8455, 0xf62f, 0x0, 0x1);
        gbc.writeMem(0xc080, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xebd3, gbc.sp());
        EXPECT(0xc082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc080));
        EXPECT(0xb, gbc.readMem(0xc081));
        // CB 0B 0374
        gbc.setState(0x31bb, 0x2ba1, 0x5eb0, 0x293c, 0x3146, 0x61f8, 0x0, 0x0);
        gbc.writeMem(0x31bb, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2ba1, gbc.sp());
        EXPECT(0x31bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0376
        gbc.setState(0x7236, 0x852e, 0xc5f0, 0x15b7, 0x53e, 0x4efd, 0x0, 0x0);
        gbc.writeMem(0x7236, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x852e, gbc.sp());
        EXPECT(0x7238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0377
        gbc.setState(0x2dca, 0x867, 0x3370, 0x4406, 0xcd2e, 0x25fd, 0x1, 0x1);
        gbc.writeMem(0x2dca, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x867, gbc.sp());
        EXPECT(0x2dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0378
        gbc.setState(0xe358, 0xa5e9, 0xc980, 0x2d06, 0x64ef, 0xa826, 0x1, 0x1);
        gbc.writeMem(0xe358, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa5e9, gbc.sp());
        EXPECT(0xe35a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe358));
        EXPECT(0xb, gbc.readMem(0xe359));
        // CB 0B 0379
        gbc.setState(0x6195, 0x53f8, 0x5270, 0xd142, 0x5ddc, 0xfd3b, 0x0, 0x1);
        gbc.writeMem(0x6195, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x53f8, gbc.sp());
        EXPECT(0x6197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 037B
        gbc.setState(0xb983, 0xb158, 0xf6e0, 0xb013, 0xa17f, 0x66d3, 0x1, 0x1);
        gbc.writeMem(0xb983, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb158, gbc.sp());
        EXPECT(0xb985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb983));
        EXPECT(0xb, gbc.readMem(0xb984));
        // CB 0B 037C
        gbc.setState(0x66cf, 0x4c8d, 0x78c0, 0xa4cf, 0x3547, 0x7ee, 0x1, 0x1);
        gbc.writeMem(0x66cf, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4c8d, gbc.sp());
        EXPECT(0x66d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 037D
        gbc.setState(0x16b6, 0xacc1, 0xc510, 0x35ad, 0x1b39, 0x2387, 0x0, 0x1);
        gbc.writeMem(0x16b6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xacc1, gbc.sp());
        EXPECT(0x16b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 037E
        gbc.setState(0xd6f8, 0x823c, 0x8630, 0x7f4e, 0x552c, 0xac8f, 0x0, 0x0);
        gbc.writeMem(0xd6f8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x823c, gbc.sp());
        EXPECT(0xd6fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f8));
        EXPECT(0xb, gbc.readMem(0xd6f9));
        // CB 0B 037F
        gbc.setState(0xdd81, 0x3d9a, 0xb0b0, 0x8a10, 0x8079, 0xbfb5, 0x1, 0x1);
        gbc.writeMem(0xdd81, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3d9a, gbc.sp());
        EXPECT(0xdd83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd81));
        EXPECT(0xb, gbc.readMem(0xdd82));
        // CB 0B 0380
        gbc.setState(0xe0fa, 0x65a1, 0x9f0, 0x360d, 0xf550, 0xea45, 0x0, 0x1);
        gbc.writeMem(0xe0fa, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x65a1, gbc.sp());
        EXPECT(0xe0fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0fa));
        EXPECT(0xb, gbc.readMem(0xe0fb));
        // CB 0B 0381
        gbc.setState(0xdeb3, 0x5e6e, 0x2470, 0xeaa8, 0x78ae, 0x7997, 0x1, 0x1);
        gbc.writeMem(0xdeb3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5e6e, gbc.sp());
        EXPECT(0xdeb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb3));
        EXPECT(0xb, gbc.readMem(0xdeb4));
        // CB 0B 0382
        gbc.setState(0x126a, 0xf261, 0xbb20, 0xc8c9, 0xc8a6, 0xd95a, 0x1, 0x0);
        gbc.writeMem(0x126a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf261, gbc.sp());
        EXPECT(0x126c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0383
        gbc.setState(0x49be, 0x90ec, 0xb190, 0x7996, 0x1d1, 0x25d, 0x1, 0x0);
        gbc.writeMem(0x49be, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x90ec, gbc.sp());
        EXPECT(0x49c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0384
        gbc.setState(0x13c8, 0xbbad, 0xd690, 0xce69, 0x314d, 0xdd0d, 0x1, 0x0);
        gbc.writeMem(0x13c8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbbad, gbc.sp());
        EXPECT(0x13ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0385
        gbc.setState(0x3cc3, 0x30d2, 0xfaa0, 0xa505, 0xe0cd, 0xa23, 0x1, 0x1);
        gbc.writeMem(0x3cc3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x30d2, gbc.sp());
        EXPECT(0x3cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0386
        gbc.setState(0xe0b5, 0x9152, 0xa350, 0x7e50, 0x9c21, 0xbc90, 0x0, 0x1);
        gbc.writeMem(0xe0b5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9152, gbc.sp());
        EXPECT(0xe0b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b5));
        EXPECT(0xb, gbc.readMem(0xe0b6));
        // CB 0B 0387
        gbc.setState(0x37d2, 0xce0f, 0xafc0, 0x95b9, 0x3294, 0x4f08, 0x1, 0x1);
        gbc.writeMem(0x37d2, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xce0f, gbc.sp());
        EXPECT(0x37d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0388
        gbc.setState(0x98d9, 0xdc33, 0x6620, 0x3bfd, 0x9bdd, 0x1f1f, 0x0, 0x0);
        gbc.writeMem(0x98d9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdc33, gbc.sp());
        EXPECT(0x98db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d9));
        EXPECT(0xb, gbc.readMem(0x98da));
        // CB 0B 0389
        gbc.setState(0xc409, 0x2ae0, 0xfe80, 0x3ca9, 0xd567, 0x2a39, 0x1, 0x0);
        gbc.writeMem(0xc409, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2ae0, gbc.sp());
        EXPECT(0xc40b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc409));
        EXPECT(0xb, gbc.readMem(0xc40a));
        // CB 0B 038A
        gbc.setState(0xa66b, 0xae49, 0x7c30, 0x4f5f, 0x2b37, 0xd73, 0x1, 0x0);
        gbc.writeMem(0xa66b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xae49, gbc.sp());
        EXPECT(0xa66d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa66b));
        EXPECT(0xb, gbc.readMem(0xa66c));
        // CB 0B 038B
        gbc.setState(0xd231, 0x3426, 0x85a0, 0x603b, 0xc859, 0xd3a5, 0x1, 0x0);
        gbc.writeMem(0xd231, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3426, gbc.sp());
        EXPECT(0xd233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd231));
        EXPECT(0xb, gbc.readMem(0xd232));
        // CB 0B 038C
        gbc.setState(0xd130, 0x5925, 0xa9e0, 0xb522, 0x7925, 0x9d92, 0x0, 0x0);
        gbc.writeMem(0xd130, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5925, gbc.sp());
        EXPECT(0xd132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd130));
        EXPECT(0xb, gbc.readMem(0xd131));
        // CB 0B 038D
        gbc.setState(0x15c4, 0xb5af, 0xea00, 0xd631, 0xed81, 0xb3de, 0x1, 0x0);
        gbc.writeMem(0x15c4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb5af, gbc.sp());
        EXPECT(0x15c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 038E
        gbc.setState(0x9123, 0xcd0f, 0xb70, 0x94df, 0xdec5, 0xa3af, 0x1, 0x0);
        gbc.writeMem(0x9123, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcd0f, gbc.sp());
        EXPECT(0x9125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9123));
        EXPECT(0xb, gbc.readMem(0x9124));
        // CB 0B 038F
        gbc.setState(0x69f4, 0xe942, 0x5980, 0x65f2, 0x8c18, 0x5e45, 0x0, 0x0);
        gbc.writeMem(0x69f4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe942, gbc.sp());
        EXPECT(0x69f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 0390
        gbc.setState(0x2b59, 0xbc5, 0xcf70, 0xbbf4, 0x4d13, 0x4187, 0x0, 0x1);
        gbc.writeMem(0x2b59, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbc5, gbc.sp());
        EXPECT(0x2b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0391
        gbc.setState(0xe56e, 0xea52, 0x8100, 0xd7fd, 0xa060, 0x4a86, 0x1, 0x0);
        gbc.writeMem(0xe56e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xea52, gbc.sp());
        EXPECT(0xe570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56e));
        EXPECT(0xb, gbc.readMem(0xe56f));
        // CB 0B 0392
        gbc.setState(0x9580, 0xc99, 0xef60, 0x8b39, 0x8ce4, 0x87b2, 0x1, 0x0);
        gbc.writeMem(0x9580, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc99, gbc.sp());
        EXPECT(0x9582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9580));
        EXPECT(0xb, gbc.readMem(0x9581));
        // CB 0B 0395
        gbc.setState(0x1e9, 0xbf04, 0xe9c0, 0x1759, 0x6aed, 0x6533, 0x1, 0x1);
        gbc.writeMem(0x1e9, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbf04, gbc.sp());
        EXPECT(0x1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0396
        gbc.setState(0xe4fe, 0x1d98, 0x1110, 0xf0d2, 0x1ad8, 0x628a, 0x0, 0x0);
        gbc.writeMem(0xe4fe, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1d98, gbc.sp());
        EXPECT(0xe500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4fe));
        EXPECT(0xb, gbc.readMem(0xe4ff));
        // CB 0B 0397
        gbc.setState(0x7be3, 0x41f9, 0x8aa0, 0x8c47, 0x3a93, 0x864a, 0x1, 0x1);
        gbc.writeMem(0x7be3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x41f9, gbc.sp());
        EXPECT(0x7be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 0398
        gbc.setState(0xa6ae, 0xe27, 0x3180, 0x13d, 0x532b, 0x6174, 0x1, 0x0);
        gbc.writeMem(0xa6ae, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe27, gbc.sp());
        EXPECT(0xa6b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ae));
        EXPECT(0xb, gbc.readMem(0xa6af));
        // CB 0B 0399
        gbc.setState(0x6a9e, 0xf45f, 0x7c0, 0xd427, 0xa723, 0xe01e, 0x0, 0x0);
        gbc.writeMem(0x6a9e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf45f, gbc.sp());
        EXPECT(0x6aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 039A
        gbc.setState(0x1d1f, 0xa766, 0xf1c0, 0xb960, 0x8275, 0x132f, 0x0, 0x1);
        gbc.writeMem(0x1d1f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa766, gbc.sp());
        EXPECT(0x1d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 039B
        gbc.setState(0x8ef4, 0xd18b, 0x75c0, 0xb3a2, 0x4aa0, 0xcad1, 0x0, 0x0);
        gbc.writeMem(0x8ef4, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd18b, gbc.sp());
        EXPECT(0x8ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef4));
        EXPECT(0xb, gbc.readMem(0x8ef5));
        // CB 0B 039C
        gbc.setState(0x77a3, 0x163c, 0xe970, 0xafc7, 0x935b, 0x3cd3, 0x0, 0x1);
        gbc.writeMem(0x77a3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x163c, gbc.sp());
        EXPECT(0x77a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 039D
        gbc.setState(0xb580, 0xfd10, 0xf1d0, 0x90a0, 0x87b3, 0xc5f8, 0x1, 0x0);
        gbc.writeMem(0xb580, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfd10, gbc.sp());
        EXPECT(0xb582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb580));
        EXPECT(0xb, gbc.readMem(0xb581));
        // CB 0B 039E
        gbc.setState(0x355e, 0xc799, 0xb480, 0x818e, 0xc486, 0xb256, 0x1, 0x0);
        gbc.writeMem(0x355e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc799, gbc.sp());
        EXPECT(0x3560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 039F
        gbc.setState(0x70a0, 0x869e, 0xe510, 0x1dd3, 0x462b, 0x7512, 0x0, 0x0);
        gbc.writeMem(0x70a0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x869e, gbc.sp());
        EXPECT(0x70a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03A0
        gbc.setState(0x1c6a, 0x7de8, 0x4070, 0x11b3, 0xe31a, 0x3001, 0x1, 0x1);
        gbc.writeMem(0x1c6a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7de8, gbc.sp());
        EXPECT(0x1c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03A1
        gbc.setState(0x73b5, 0xa9a7, 0xe560, 0x90f, 0xa676, 0xce3d, 0x1, 0x1);
        gbc.writeMem(0x73b5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa9a7, gbc.sp());
        EXPECT(0x73b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03A2
        gbc.setState(0x207e, 0xe699, 0x7f60, 0x408f, 0x1e8b, 0x592f, 0x0, 0x1);
        gbc.writeMem(0x207e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe699, gbc.sp());
        EXPECT(0x2080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03A3
        gbc.setState(0x7899, 0x59c8, 0x7200, 0xf206, 0x8949, 0x8e07, 0x0, 0x0);
        gbc.writeMem(0x7899, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x59c8, gbc.sp());
        EXPECT(0x789b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03A4
        gbc.setState(0x45f8, 0x2254, 0x4ea0, 0xdf74, 0xe4fd, 0xda64, 0x0, 0x1);
        gbc.writeMem(0x45f8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2254, gbc.sp());
        EXPECT(0x45fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03A5
        gbc.setState(0x17aa, 0x5f7, 0x9fa0, 0xc62a, 0x39e6, 0x6245, 0x0, 0x1);
        gbc.writeMem(0x17aa, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5f7, gbc.sp());
        EXPECT(0x17ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03A6
        gbc.setState(0xf11, 0xffca, 0xcfb0, 0xe8f4, 0x5f33, 0xcdb3, 0x1, 0x0);
        gbc.writeMem(0xf11, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xffca, gbc.sp());
        EXPECT(0xf13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03A7
        gbc.setState(0x579a, 0x4322, 0x3ef0, 0x5fcb, 0x4a32, 0x28c6, 0x0, 0x1);
        gbc.writeMem(0x579a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4322, gbc.sp());
        EXPECT(0x579c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03A8
        gbc.setState(0x66bd, 0xe450, 0x1d50, 0xed7d, 0x3a8a, 0xd940, 0x1, 0x0);
        gbc.writeMem(0x66bd, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe450, gbc.sp());
        EXPECT(0x66bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03A9
        gbc.setState(0x3d6a, 0x9c5a, 0xb9e0, 0xe9d5, 0x287e, 0x8400, 0x1, 0x0);
        gbc.writeMem(0x3d6a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9c5a, gbc.sp());
        EXPECT(0x3d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03AA
        gbc.setState(0xe3ce, 0x44ff, 0xbdf0, 0x6c58, 0xef95, 0xb5c8, 0x0, 0x1);
        gbc.writeMem(0xe3ce, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x44ff, gbc.sp());
        EXPECT(0xe3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ce));
        EXPECT(0xb, gbc.readMem(0xe3cf));
        // CB 0B 03AB
        gbc.setState(0x261a, 0x1b30, 0x1650, 0x8341, 0x5d6f, 0x92c3, 0x0, 0x0);
        gbc.writeMem(0x261a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1b30, gbc.sp());
        EXPECT(0x261c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03AC
        gbc.setState(0x8084, 0x7187, 0x9c90, 0xe8f3, 0x6a5c, 0x4e19, 0x1, 0x1);
        gbc.writeMem(0x8084, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7187, gbc.sp());
        EXPECT(0x8086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8084));
        EXPECT(0xb, gbc.readMem(0x8085));
        // CB 0B 03AD
        gbc.setState(0xe347, 0x1972, 0x87b0, 0x67cc, 0x34de, 0xb776, 0x1, 0x1);
        gbc.writeMem(0xe347, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1972, gbc.sp());
        EXPECT(0xe349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe347));
        EXPECT(0xb, gbc.readMem(0xe348));
        // CB 0B 03AE
        gbc.setState(0x4156, 0xd6c0, 0xad00, 0xf96e, 0x81da, 0x8159, 0x1, 0x0);
        gbc.writeMem(0x4156, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd6c0, gbc.sp());
        EXPECT(0x4158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03AF
        gbc.setState(0x4a7e, 0xd85, 0x2c60, 0xe82f, 0x917f, 0x1d67, 0x0, 0x0);
        gbc.writeMem(0x4a7e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd85, gbc.sp());
        EXPECT(0x4a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03B1
        gbc.setState(0x7c65, 0x92f5, 0xd610, 0x3951, 0xf7fb, 0x6c31, 0x1, 0x0);
        gbc.writeMem(0x7c65, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x92f5, gbc.sp());
        EXPECT(0x7c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03B2
        gbc.setState(0x8a90, 0xc739, 0x7b40, 0xadd4, 0xf6fd, 0x6962, 0x1, 0x1);
        gbc.writeMem(0x8a90, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc739, gbc.sp());
        EXPECT(0x8a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a90));
        EXPECT(0xb, gbc.readMem(0x8a91));
        // CB 0B 03B3
        gbc.setState(0x649e, 0xd7bc, 0xf00, 0x1990, 0x2198, 0x5a0d, 0x1, 0x0);
        gbc.writeMem(0x649e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd7bc, gbc.sp());
        EXPECT(0x64a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03B4
        gbc.setState(0x9617, 0x4414, 0xd740, 0x4ed7, 0x3f4b, 0xfd22, 0x0, 0x0);
        gbc.writeMem(0x9617, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4414, gbc.sp());
        EXPECT(0x9619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9617));
        EXPECT(0xb, gbc.readMem(0x9618));
        // CB 0B 03B5
        gbc.setState(0x278b, 0x68d2, 0x38a0, 0xb905, 0xf560, 0x6228, 0x1, 0x0);
        gbc.writeMem(0x278b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x68d2, gbc.sp());
        EXPECT(0x278d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03B6
        gbc.setState(0xd67e, 0x5ede, 0xafb0, 0x21b2, 0x3042, 0xa8e0, 0x0, 0x0);
        gbc.writeMem(0xd67e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5ede, gbc.sp());
        EXPECT(0xd680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67e));
        EXPECT(0xb, gbc.readMem(0xd67f));
        // CB 0B 03B7
        gbc.setState(0x4556, 0x2260, 0xea60, 0x1ead, 0x69eb, 0xfc8f, 0x0, 0x1);
        gbc.writeMem(0x4556, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2260, gbc.sp());
        EXPECT(0x4558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03B9
        gbc.setState(0x7a29, 0xa1bc, 0x6ab0, 0x4433, 0x5596, 0x4006, 0x0, 0x1);
        gbc.writeMem(0x7a29, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa1bc, gbc.sp());
        EXPECT(0x7a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03BA
        gbc.setState(0xb998, 0xf0e3, 0x4be0, 0xe1bf, 0x52bd, 0x3aa5, 0x0, 0x0);
        gbc.writeMem(0xb998, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf0e3, gbc.sp());
        EXPECT(0xb99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb998));
        EXPECT(0xb, gbc.readMem(0xb999));
        // CB 0B 03BB
        gbc.setState(0xa64f, 0x5776, 0xc2a0, 0x9249, 0x1512, 0xd846, 0x1, 0x1);
        gbc.writeMem(0xa64f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5776, gbc.sp());
        EXPECT(0xa651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64f));
        EXPECT(0xb, gbc.readMem(0xa650));
        // CB 0B 03BC
        gbc.setState(0xdf33, 0x548a, 0x5ac0, 0x7d55, 0x2c6e, 0x9c24, 0x1, 0x1);
        gbc.writeMem(0xdf33, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x548a, gbc.sp());
        EXPECT(0xdf35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf33));
        EXPECT(0xb, gbc.readMem(0xdf34));
        // CB 0B 03BD
        gbc.setState(0x6ab0, 0x1509, 0x19b0, 0xf0de, 0x2a57, 0xf894, 0x1, 0x0);
        gbc.writeMem(0x6ab0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1509, gbc.sp());
        EXPECT(0x6ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03BE
        gbc.setState(0xb41f, 0xbebe, 0xaf20, 0xf4ca, 0xa9c3, 0xdcbd, 0x0, 0x1);
        gbc.writeMem(0xb41f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbebe, gbc.sp());
        EXPECT(0xb421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb41f));
        EXPECT(0xb, gbc.readMem(0xb420));
        // CB 0B 03BF
        gbc.setState(0x6386, 0xac32, 0xe160, 0xaf2c, 0x3c7, 0x33b1, 0x1, 0x1);
        gbc.writeMem(0x6386, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xac32, gbc.sp());
        EXPECT(0x6388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03C0
        gbc.setState(0x8bc0, 0xefa0, 0xb80, 0xb92d, 0x72e2, 0xe1b, 0x0, 0x0);
        gbc.writeMem(0x8bc0, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xefa0, gbc.sp());
        EXPECT(0x8bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc0));
        EXPECT(0xb, gbc.readMem(0x8bc1));
        // CB 0B 03C2
        gbc.setState(0x74b, 0x3434, 0x4690, 0x53f9, 0x4190, 0x293d, 0x0, 0x1);
        gbc.writeMem(0x74b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3434, gbc.sp());
        EXPECT(0x74d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03C3
        gbc.setState(0x5f17, 0xdf68, 0x90c0, 0x64d5, 0xc87c, 0xd454, 0x0, 0x0);
        gbc.writeMem(0x5f17, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdf68, gbc.sp());
        EXPECT(0x5f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03C4
        gbc.setState(0x8b2b, 0x3918, 0xa690, 0xcb63, 0xc455, 0xdc96, 0x0, 0x1);
        gbc.writeMem(0x8b2b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3918, gbc.sp());
        EXPECT(0x8b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b2b));
        EXPECT(0xb, gbc.readMem(0x8b2c));
        // CB 0B 03C5
        gbc.setState(0xa6e5, 0xa5aa, 0x1230, 0x28b1, 0xd712, 0x6ad0, 0x0, 0x0);
        gbc.writeMem(0xa6e5, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa5aa, gbc.sp());
        EXPECT(0xa6e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e5));
        EXPECT(0xb, gbc.readMem(0xa6e6));
        // CB 0B 03C6
        gbc.setState(0xce3, 0x5187, 0xe920, 0x2413, 0x8a65, 0xf557, 0x1, 0x1);
        gbc.writeMem(0xce3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5187, gbc.sp());
        EXPECT(0xce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03C7
        gbc.setState(0xc078, 0x4377, 0x700, 0x595f, 0xf836, 0x69d8, 0x0, 0x1);
        gbc.writeMem(0xc078, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4377, gbc.sp());
        EXPECT(0xc07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc078));
        EXPECT(0xb, gbc.readMem(0xc079));
        // CB 0B 03CA
        gbc.setState(0x55ac, 0x8185, 0x1f60, 0x5996, 0xe333, 0xa2cb, 0x0, 0x1);
        gbc.writeMem(0x55ac, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8185, gbc.sp());
        EXPECT(0x55ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03CB
        gbc.setState(0x5da6, 0xda89, 0x2df0, 0x9ee0, 0x5c98, 0x7489, 0x0, 0x1);
        gbc.writeMem(0x5da6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xda89, gbc.sp());
        EXPECT(0x5da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03CC
        gbc.setState(0x9324, 0xb53c, 0x3430, 0x45d4, 0xccdb, 0x3b9, 0x1, 0x1);
        gbc.writeMem(0x9324, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb53c, gbc.sp());
        EXPECT(0x9326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9324));
        EXPECT(0xb, gbc.readMem(0x9325));
        // CB 0B 03CD
        gbc.setState(0x9a46, 0xcece, 0xe310, 0x7f33, 0xf99a, 0x3b10, 0x0, 0x0);
        gbc.writeMem(0x9a46, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcece, gbc.sp());
        EXPECT(0x9a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a46));
        EXPECT(0xb, gbc.readMem(0x9a47));
        // CB 0B 03CE
        gbc.setState(0x37be, 0xdd8, 0x8990, 0xa26c, 0x696d, 0xb2c0, 0x0, 0x0);
        gbc.writeMem(0x37be, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdd8, gbc.sp());
        EXPECT(0x37c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03CF
        gbc.setState(0x7f1a, 0x2c21, 0xfde0, 0x6056, 0xc91a, 0xaa63, 0x1, 0x1);
        gbc.writeMem(0x7f1a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2c21, gbc.sp());
        EXPECT(0x7f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03D0
        gbc.setState(0xc766, 0x92f6, 0x6340, 0x26a6, 0x7fb, 0x54a9, 0x1, 0x0);
        gbc.writeMem(0xc766, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x92f6, gbc.sp());
        EXPECT(0xc768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc766));
        EXPECT(0xb, gbc.readMem(0xc767));
        // CB 0B 03D1
        gbc.setState(0xa53a, 0x372c, 0x9f40, 0x9238, 0x6300, 0xc91d, 0x0, 0x1);
        gbc.writeMem(0xa53a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x372c, gbc.sp());
        EXPECT(0xa53c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa53a));
        EXPECT(0xb, gbc.readMem(0xa53b));
        // CB 0B 03D2
        gbc.setState(0xca90, 0xb4cd, 0x6510, 0xcc0c, 0x3a5d, 0xcbab, 0x0, 0x0);
        gbc.writeMem(0xca90, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb4cd, gbc.sp());
        EXPECT(0xca92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca90));
        EXPECT(0xb, gbc.readMem(0xca91));
        // CB 0B 03D3
        gbc.setState(0x285d, 0x388f, 0xd4e0, 0x9221, 0x2c4e, 0x3aec, 0x0, 0x1);
        gbc.writeMem(0x285d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x388f, gbc.sp());
        EXPECT(0x285f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03D4
        gbc.setState(0x1a2e, 0x7ab8, 0x9f80, 0x82a, 0x1515, 0xa04e, 0x0, 0x1);
        gbc.writeMem(0x1a2e, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7ab8, gbc.sp());
        EXPECT(0x1a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03D5
        gbc.setState(0x4f4f, 0x58c4, 0x4990, 0x6661, 0xf73c, 0xcde7, 0x0, 0x1);
        gbc.writeMem(0x4f4f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x58c4, gbc.sp());
        EXPECT(0x4f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03D6
        gbc.setState(0x82cb, 0x1847, 0x7590, 0x308c, 0x41aa, 0xb28c, 0x1, 0x0);
        gbc.writeMem(0x82cb, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1847, gbc.sp());
        EXPECT(0x82cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82cb));
        EXPECT(0xb, gbc.readMem(0x82cc));
        // CB 0B 03D7
        gbc.setState(0x9736, 0x2194, 0x9d00, 0x9a40, 0x7158, 0x6e70, 0x0, 0x0);
        gbc.writeMem(0x9736, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2194, gbc.sp());
        EXPECT(0x9738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9736));
        EXPECT(0xb, gbc.readMem(0x9737));
        // CB 0B 03D8
        gbc.setState(0x9f91, 0xe544, 0xa2c0, 0x8d59, 0x3c5e, 0x74b8, 0x1, 0x0);
        gbc.writeMem(0x9f91, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe544, gbc.sp());
        EXPECT(0x9f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f91));
        EXPECT(0xb, gbc.readMem(0x9f92));
        // CB 0B 03D9
        gbc.setState(0x596a, 0xc020, 0xb0d0, 0x8661, 0x76b, 0x3cfc, 0x0, 0x0);
        gbc.writeMem(0x596a, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc020, gbc.sp());
        EXPECT(0x596c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03DA
        gbc.setState(0xe231, 0x303b, 0xc7b0, 0xb28a, 0x5bf0, 0x718f, 0x0, 0x0);
        gbc.writeMem(0xe231, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x303b, gbc.sp());
        EXPECT(0xe233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe231));
        EXPECT(0xb, gbc.readMem(0xe232));
        // CB 0B 03DB
        gbc.setState(0x8f6, 0x541c, 0xd0a0, 0x439f, 0x2b55, 0x466b, 0x0, 0x0);
        gbc.writeMem(0x8f6, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x541c, gbc.sp());
        EXPECT(0x8f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03DC
        gbc.setState(0x23dc, 0x866b, 0xe410, 0x228c, 0x4967, 0xc207, 0x0, 0x1);
        gbc.writeMem(0x23dc, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x866b, gbc.sp());
        EXPECT(0x23de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03DE
        gbc.setState(0x715c, 0xa24e, 0xfd0, 0x67c6, 0xcc5f, 0xc346, 0x1, 0x1);
        gbc.writeMem(0x715c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa24e, gbc.sp());
        EXPECT(0x715e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03DF
        gbc.setState(0x957f, 0xa838, 0xc5e0, 0x5b89, 0x2995, 0xeb8a, 0x1, 0x1);
        gbc.writeMem(0x957f, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa838, gbc.sp());
        EXPECT(0x9581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957f));
        EXPECT(0xb, gbc.readMem(0x9580));
        // CB 0B 03E0
        gbc.setState(0x9301, 0x1790, 0x3cc0, 0x13ed, 0x7fca, 0xeb36, 0x1, 0x0);
        gbc.writeMem(0x9301, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1790, gbc.sp());
        EXPECT(0x9303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9301));
        EXPECT(0xb, gbc.readMem(0x9302));
        // CB 0B 03E1
        gbc.setState(0xbed8, 0xc1d, 0x1b50, 0x38ed, 0xa35a, 0xe630, 0x0, 0x1);
        gbc.writeMem(0xbed8, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc1d, gbc.sp());
        EXPECT(0xbeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed8));
        EXPECT(0xb, gbc.readMem(0xbed9));
        // CB 0B 03E2
        gbc.setState(0x1330, 0x9ff3, 0x3f60, 0xe71, 0x68cb, 0x210d, 0x1, 0x0);
        gbc.writeMem(0x1330, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9ff3, gbc.sp());
        EXPECT(0x1332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03E3
        gbc.setState(0x632c, 0xd6bf, 0x96a0, 0xb4, 0xd6e8, 0xd810, 0x1, 0x0);
        gbc.writeMem(0x632c, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd6bf, gbc.sp());
        EXPECT(0x632e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03E4
        gbc.setState(0x266b, 0xf650, 0xa180, 0x299d, 0xb602, 0xd561, 0x0, 0x0);
        gbc.writeMem(0x266b, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf650, gbc.sp());
        EXPECT(0x266d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0B 03E5
        gbc.setState(0x7fca, 0x202a, 0x4660, 0x3c6a, 0x638d, 0x55c5, 0x1, 0x0);
        gbc.writeMem(0x7fca, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x202a, gbc.sp());
        EXPECT(0x7fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0B 03E6
        gbc.setState(0x845d, 0x25bf, 0x9db0, 0x8167, 0xfad0, 0x33ef, 0x0, 0x0);
        gbc.writeMem(0x845d, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x25bf, gbc.sp());
        EXPECT(0x845f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845d));
        EXPECT(0xb, gbc.readMem(0x845e));
        // CB 0B 03E7
        gbc.setState(0xb5a3, 0x90ca, 0xd390, 0xac24, 0xa14a, 0x80e7, 0x1, 0x1);
        gbc.writeMem(0xb5a3, { 0xcb, 0xb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x90ca, gbc.sp());
        EXPECT(0xb5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a3));
        EXPECT(0xb, gbc.readMem(0xb5a4));
    }
