    TEST(gbcemu, opcode_58) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 58 0000
        gbc.setState(0xb36b, 0x4b96, 0x97b0, 0xfb05, 0xcc38, 0x5ca1, 0x1, 0x1);
        gbc.writeMem(0xb36b, { 0x58 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4b96, gbc.sp());
        EXPECT(0xb36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb36b));
        // 58 0001
        gbc.setState(0x36da, 0xb73, 0x1830, 0xd3db, 0xe08a, 0x9b5, 0x0, 0x1);
        gbc.writeMem(0x36da, { 0x58 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb73, gbc.sp());
        EXPECT(0x36db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0003
        gbc.setState(0xd362, 0x2433, 0x44f0, 0x153, 0xea05, 0x9d05, 0x0, 0x0);
        gbc.writeMem(0xd362, { 0x58 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2433, gbc.sp());
        EXPECT(0xd363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd362));
        // 58 0004
        gbc.setState(0x1564, 0xbbcc, 0x7800, 0x98e5, 0xe67c, 0x5fe9, 0x0, 0x1);
        gbc.writeMem(0x1564, { 0x58 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbbcc, gbc.sp());
        EXPECT(0x1565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0005
        gbc.setState(0x9345, 0x3cdd, 0x4fa0, 0x358a, 0x1f9f, 0xee5a, 0x1, 0x0);
        gbc.writeMem(0x9345, { 0x58 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3cdd, gbc.sp());
        EXPECT(0x9346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9345));
        // 58 0006
        gbc.setState(0x1315, 0x3b50, 0xb00, 0x6a86, 0x8a1e, 0xcd2a, 0x0, 0x1);
        gbc.writeMem(0x1315, { 0x58 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3b50, gbc.sp());
        EXPECT(0x1316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0007
        gbc.setState(0x9821, 0x5d5b, 0x6f00, 0xa4e4, 0xca58, 0x450d, 0x0, 0x1);
        gbc.writeMem(0x9821, { 0x58 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5d5b, gbc.sp());
        EXPECT(0x9822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9821));
        // 58 0008
        gbc.setState(0xd3ee, 0xe381, 0x9120, 0xa36c, 0x126a, 0x60cd, 0x1, 0x0);
        gbc.writeMem(0xd3ee, { 0x58 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe381, gbc.sp());
        EXPECT(0xd3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd3ee));
        // 58 0009
        gbc.setState(0xebbc, 0x9403, 0x3b10, 0x4474, 0x6d82, 0x561f, 0x1, 0x0);
        gbc.writeMem(0xebbc, { 0x58 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9403, gbc.sp());
        EXPECT(0xebbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xebbc));
        // 58 000A
        gbc.setState(0xdaf4, 0x1383, 0xb180, 0x458, 0x924f, 0x1805, 0x0, 0x1);
        gbc.writeMem(0xdaf4, { 0x58 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1383, gbc.sp());
        EXPECT(0xdaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdaf4));
        // 58 000B
        gbc.setState(0xb8c3, 0xbc57, 0x8820, 0x4e2a, 0xc538, 0xc15d, 0x0, 0x0);
        gbc.writeMem(0xb8c3, { 0x58 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbc57, gbc.sp());
        EXPECT(0xb8c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb8c3));
        // 58 000C
        gbc.setState(0xccfe, 0x1629, 0x87b0, 0x4e47, 0xf3bc, 0xf404, 0x1, 0x1);
        gbc.writeMem(0xccfe, { 0x58 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1629, gbc.sp());
        EXPECT(0xccff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xccfe));
        // 58 000D
        gbc.setState(0x508d, 0xbc51, 0x7340, 0xbacc, 0x640c, 0x3b26, 0x1, 0x0);
        gbc.writeMem(0x508d, { 0x58 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbc51, gbc.sp());
        EXPECT(0x508e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 000E
        gbc.setState(0x7371, 0x2ce5, 0x1600, 0x5ab8, 0x8a57, 0x7d89, 0x1, 0x1);
        gbc.writeMem(0x7371, { 0x58 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2ce5, gbc.sp());
        EXPECT(0x7372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 000F
        gbc.setState(0x6da, 0x286, 0xc6d0, 0xccdb, 0xb2e7, 0xe6da, 0x0, 0x0);
        gbc.writeMem(0x6da, { 0x58 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x286, gbc.sp());
        EXPECT(0x6db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0010
        gbc.setState(0xe490, 0x7ba4, 0xb650, 0xf92b, 0xc14b, 0xddcc, 0x1, 0x1);
        gbc.writeMem(0xe490, { 0x58 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7ba4, gbc.sp());
        EXPECT(0xe491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe490));
        // 58 0011
        gbc.setState(0xd109, 0x27fb, 0x9050, 0x99b8, 0xad75, 0xaaf2, 0x1, 0x0);
        gbc.writeMem(0xd109, { 0x58 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x27fb, gbc.sp());
        EXPECT(0xd10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd109));
        // 58 0012
        gbc.setState(0x8d78, 0xb49f, 0x3480, 0xfadb, 0xc547, 0x3ccd, 0x1, 0x1);
        gbc.writeMem(0x8d78, { 0x58 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb49f, gbc.sp());
        EXPECT(0x8d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8d78));
        // 58 0013
        gbc.setState(0x1d98, 0x3c81, 0x8310, 0xb99e, 0x7b5b, 0x767c, 0x1, 0x1);
        gbc.writeMem(0x1d98, { 0x58 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3c81, gbc.sp());
        EXPECT(0x1d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0014
        gbc.setState(0x3511, 0x79bd, 0x56a0, 0xf0b3, 0xc659, 0x5574, 0x0, 0x0);
        gbc.writeMem(0x3511, { 0x58 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x79bd, gbc.sp());
        EXPECT(0x3512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0015
        gbc.setState(0xcef8, 0x51d7, 0x9a0, 0x77ac, 0x8336, 0x589f, 0x0, 0x1);
        gbc.writeMem(0xcef8, { 0x58 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x51d7, gbc.sp());
        EXPECT(0xcef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xcef8));
        // 58 0016
        gbc.setState(0x911d, 0x49a5, 0x7ba0, 0x27fa, 0xcd0d, 0x7455, 0x1, 0x0);
        gbc.writeMem(0x911d, { 0x58 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x49a5, gbc.sp());
        EXPECT(0x911e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x911d));
        // 58 0017
        gbc.setState(0x638, 0xa43b, 0xaa90, 0x610f, 0x8ed9, 0xb2ed, 0x1, 0x1);
        gbc.writeMem(0x638, { 0x58 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa43b, gbc.sp());
        EXPECT(0x639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0018
        gbc.setState(0xc8b8, 0xf53c, 0x95b0, 0xe8f7, 0xe807, 0xc24c, 0x1, 0x0);
        gbc.writeMem(0xc8b8, { 0x58 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf53c, gbc.sp());
        EXPECT(0xc8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc8b8));
        // 58 0019
        gbc.setState(0x9890, 0xd37f, 0x7330, 0xcf77, 0x2fb8, 0x341a, 0x0, 0x1);
        gbc.writeMem(0x9890, { 0x58 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd37f, gbc.sp());
        EXPECT(0x9891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9890));
        // 58 001A
        gbc.setState(0xb26b, 0x31cb, 0x4c50, 0x93e4, 0x5fcb, 0xdd90, 0x1, 0x0);
        gbc.writeMem(0xb26b, { 0x58 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x31cb, gbc.sp());
        EXPECT(0xb26c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb26b));
        // 58 001B
        gbc.setState(0xd6e0, 0xc98e, 0x75c0, 0x6600, 0x9d3d, 0xfa09, 0x0, 0x0);
        gbc.writeMem(0xd6e0, { 0x58 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc98e, gbc.sp());
        EXPECT(0xd6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd6e0));
        // 58 001C
        gbc.setState(0xdda9, 0x1a45, 0xff60, 0xfb97, 0xdb75, 0x845b, 0x0, 0x1);
        gbc.writeMem(0xdda9, { 0x58 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1a45, gbc.sp());
        EXPECT(0xddaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdda9));
        // 58 001D
        gbc.setState(0x30ed, 0xd237, 0x6c60, 0x3cdc, 0x7d6d, 0xe0ce, 0x1, 0x0);
        gbc.writeMem(0x30ed, { 0x58 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd237, gbc.sp());
        EXPECT(0x30ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 001E
        gbc.setState(0xbc64, 0xae33, 0x4430, 0x3e97, 0x7550, 0xece7, 0x1, 0x1);
        gbc.writeMem(0xbc64, { 0x58 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xae33, gbc.sp());
        EXPECT(0xbc65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbc64));
        // 58 001F
        gbc.setState(0x1f82, 0xcc92, 0xb450, 0x53d4, 0x585e, 0x62da, 0x1, 0x0);
        gbc.writeMem(0x1f82, { 0x58 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcc92, gbc.sp());
        EXPECT(0x1f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0020
        gbc.setState(0xac1b, 0x8b36, 0x71b0, 0x33f2, 0xfbe5, 0x495c, 0x0, 0x1);
        gbc.writeMem(0xac1b, { 0x58 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8b36, gbc.sp());
        EXPECT(0xac1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xac1b));
        // 58 0021
        gbc.setState(0x1aaa, 0x86a9, 0x68c0, 0xb30f, 0x9746, 0xc115, 0x1, 0x1);
        gbc.writeMem(0x1aaa, { 0x58 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x86a9, gbc.sp());
        EXPECT(0x1aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0022
        gbc.setState(0xf9a, 0x6da5, 0x2400, 0xe706, 0x1a4b, 0x39f7, 0x1, 0x1);
        gbc.writeMem(0xf9a, { 0x58 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6da5, gbc.sp());
        EXPECT(0xf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0023
        gbc.setState(0xa30a, 0x1ded, 0x79c0, 0x2552, 0xed3c, 0x6bf3, 0x0, 0x0);
        gbc.writeMem(0xa30a, { 0x58 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1ded, gbc.sp());
        EXPECT(0xa30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa30a));
        // 58 0025
        gbc.setState(0xc00d, 0x5b19, 0x2e00, 0xc04e, 0xbbe0, 0x99c1, 0x1, 0x0);
        gbc.writeMem(0xc00d, { 0x58 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5b19, gbc.sp());
        EXPECT(0xc00e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc00d));
        // 58 0026
        gbc.setState(0x7167, 0xce13, 0xf560, 0xf658, 0xbc8a, 0x2564, 0x0, 0x1);
        gbc.writeMem(0x7167, { 0x58 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xce13, gbc.sp());
        EXPECT(0x7168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0027
        gbc.setState(0x9287, 0x955b, 0xd230, 0xa407, 0x77f0, 0x49a5, 0x1, 0x0);
        gbc.writeMem(0x9287, { 0x58 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x955b, gbc.sp());
        EXPECT(0x9288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9287));
        // 58 0028
        gbc.setState(0x73e5, 0x732a, 0x2fb0, 0xf3c3, 0x9258, 0xe6a0, 0x0, 0x1);
        gbc.writeMem(0x73e5, { 0x58 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x732a, gbc.sp());
        EXPECT(0x73e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0029
        gbc.setState(0xb506, 0x232d, 0x5c80, 0x3075, 0x7490, 0xc3d, 0x0, 0x0);
        gbc.writeMem(0xb506, { 0x58 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x232d, gbc.sp());
        EXPECT(0xb507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb506));
        // 58 002A
        gbc.setState(0x55cb, 0x94f9, 0xcb50, 0xc0f4, 0x96ff, 0x8496, 0x0, 0x1);
        gbc.writeMem(0x55cb, { 0x58 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x94f9, gbc.sp());
        EXPECT(0x55cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 002B
        gbc.setState(0xedc4, 0x809b, 0xefb0, 0xdb5b, 0x6087, 0xb532, 0x0, 0x0);
        gbc.writeMem(0xedc4, { 0x58 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x809b, gbc.sp());
        EXPECT(0xedc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xedc4));
        // 58 002C
        gbc.setState(0x4d6e, 0x8af7, 0x2090, 0xf5c3, 0x7dca, 0x1b08, 0x0, 0x0);
        gbc.writeMem(0x4d6e, { 0x58 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8af7, gbc.sp());
        EXPECT(0x4d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 002D
        gbc.setState(0x577, 0xe09d, 0x7c0, 0xc0d5, 0x23ec, 0x8385, 0x1, 0x1);
        gbc.writeMem(0x577, { 0x58 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe09d, gbc.sp());
        EXPECT(0x578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 002E
        gbc.setState(0x14c, 0x65cf, 0x2a70, 0xc7cb, 0x40eb, 0x3820, 0x1, 0x0);
        gbc.writeMem(0x14c, { 0x58 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x65cf, gbc.sp());
        EXPECT(0x14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 002F
        gbc.setState(0x1a22, 0x62ad, 0x7050, 0xea55, 0xf084, 0x670a, 0x1, 0x1);
        gbc.writeMem(0x1a22, { 0x58 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x62ad, gbc.sp());
        EXPECT(0x1a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0030
        gbc.setState(0xd352, 0x903a, 0x9760, 0x9167, 0x509a, 0xb2c, 0x0, 0x1);
        gbc.writeMem(0xd352, { 0x58 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x903a, gbc.sp());
        EXPECT(0xd353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd352));
        // 58 0031
        gbc.setState(0x8b, 0xd277, 0x4630, 0xa19c, 0x870b, 0x3776, 0x1, 0x1);
        gbc.writeMem(0x8b, { 0x58 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd277, gbc.sp());
        EXPECT(0x8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0032
        gbc.setState(0x5edb, 0xc4ba, 0x7ca0, 0x27c2, 0x296e, 0xc9e7, 0x0, 0x1);
        gbc.writeMem(0x5edb, { 0x58 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc4ba, gbc.sp());
        EXPECT(0x5edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0033
        gbc.setState(0xd052, 0x5448, 0x5b00, 0xdb8a, 0x3bcd, 0xee49, 0x0, 0x0);
        gbc.writeMem(0xd052, { 0x58 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5448, gbc.sp());
        EXPECT(0xd053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd052));
        // 58 0034
        gbc.setState(0xaaef, 0xf283, 0x6520, 0x1299, 0x3c83, 0x7700, 0x0, 0x0);
        gbc.writeMem(0xaaef, { 0x58 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf283, gbc.sp());
        EXPECT(0xaaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xaaef));
        // 58 0035
        gbc.setState(0xa200, 0x6ebe, 0x2f80, 0x555, 0xeb4d, 0x5279, 0x0, 0x1);
        gbc.writeMem(0xa200, { 0x58 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6ebe, gbc.sp());
        EXPECT(0xa201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa200));
        // 58 0037
        gbc.setState(0x3f4b, 0x7d49, 0xac10, 0xa04d, 0xd095, 0x12bb, 0x1, 0x0);
        gbc.writeMem(0x3f4b, { 0x58 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7d49, gbc.sp());
        EXPECT(0x3f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0038
        gbc.setState(0xae1c, 0x82fa, 0x660, 0x82e1, 0xe79f, 0x9ecf, 0x0, 0x1);
        gbc.writeMem(0xae1c, { 0x58 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x82fa, gbc.sp());
        EXPECT(0xae1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xae1c));
        // 58 0039
        gbc.setState(0x8fe2, 0x25b4, 0xbb40, 0x3ab, 0x355e, 0xe9ac, 0x1, 0x0);
        gbc.writeMem(0x8fe2, { 0x58 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x25b4, gbc.sp());
        EXPECT(0x8fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8fe2));
        // 58 003A
        gbc.setState(0x3948, 0xca39, 0x4ed0, 0xd340, 0xb478, 0xa146, 0x0, 0x1);
        gbc.writeMem(0x3948, { 0x58 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xca39, gbc.sp());
        EXPECT(0x3949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 003B
        gbc.setState(0xe498, 0x290a, 0x3dc0, 0x9f76, 0x565a, 0x52e3, 0x1, 0x0);
        gbc.writeMem(0xe498, { 0x58 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x290a, gbc.sp());
        EXPECT(0xe499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe498));
        // 58 003C
        gbc.setState(0xaa98, 0x1da7, 0xeef0, 0x720a, 0x6d12, 0xaecc, 0x1, 0x0);
        gbc.writeMem(0xaa98, { 0x58 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1da7, gbc.sp());
        EXPECT(0xaa99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xaa98));
        // 58 003D
        gbc.setState(0xc828, 0x63c2, 0xe4d0, 0x3db6, 0xf7b7, 0x9264, 0x0, 0x0);
        gbc.writeMem(0xc828, { 0x58 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x63c2, gbc.sp());
        EXPECT(0xc829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc828));
        // 58 003E
        gbc.setState(0x2402, 0xd2a4, 0xc460, 0x21e7, 0x54ac, 0xc2aa, 0x0, 0x0);
        gbc.writeMem(0x2402, { 0x58 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd2a4, gbc.sp());
        EXPECT(0x2403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 003F
        gbc.setState(0x919b, 0x92d5, 0xb870, 0xe37c, 0x8852, 0x6c7b, 0x0, 0x0);
        gbc.writeMem(0x919b, { 0x58 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x92d5, gbc.sp());
        EXPECT(0x919c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x919b));
        // 58 0040
        gbc.setState(0x5528, 0xcff1, 0x1f70, 0x65df, 0x32ff, 0x9956, 0x1, 0x1);
        gbc.writeMem(0x5528, { 0x58 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcff1, gbc.sp());
        EXPECT(0x5529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0041
        gbc.setState(0x10c9, 0x1bda, 0x5e80, 0xd68a, 0x9094, 0x2f88, 0x0, 0x0);
        gbc.writeMem(0x10c9, { 0x58 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1bda, gbc.sp());
        EXPECT(0x10ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0042
        gbc.setState(0xbbf7, 0xb3c2, 0x8bd0, 0x149b, 0x2faa, 0xa33b, 0x0, 0x0);
        gbc.writeMem(0xbbf7, { 0x58 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb3c2, gbc.sp());
        EXPECT(0xbbf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbbf7));
        // 58 0043
        gbc.setState(0x43d7, 0xdd02, 0x1300, 0x1985, 0xd7d1, 0xbc04, 0x1, 0x0);
        gbc.writeMem(0x43d7, { 0x58 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdd02, gbc.sp());
        EXPECT(0x43d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0044
        gbc.setState(0x351e, 0x6117, 0xd1b0, 0x7aa, 0x336c, 0xc7fe, 0x0, 0x1);
        gbc.writeMem(0x351e, { 0x58 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6117, gbc.sp());
        EXPECT(0x351f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0045
        gbc.setState(0x3a78, 0xc724, 0x8330, 0x7830, 0x427b, 0x744, 0x1, 0x0);
        gbc.writeMem(0x3a78, { 0x58 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc724, gbc.sp());
        EXPECT(0x3a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0046
        gbc.setState(0x10, 0x556f, 0x1c30, 0x3ccc, 0x463d, 0xa094, 0x1, 0x0);
        gbc.writeMem(0x10, { 0x58 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x556f, gbc.sp());
        EXPECT(0x11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0047
        gbc.setState(0xabfc, 0x22e9, 0xb10, 0x783f, 0x56ff, 0x9d2b, 0x0, 0x0);
        gbc.writeMem(0xabfc, { 0x58 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x22e9, gbc.sp());
        EXPECT(0xabfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xabfc));
        // 58 0048
        gbc.setState(0x6bac, 0x3955, 0xaf10, 0xbc2c, 0xe5f4, 0x2c9e, 0x1, 0x1);
        gbc.writeMem(0x6bac, { 0x58 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3955, gbc.sp());
        EXPECT(0x6bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0049
        gbc.setState(0xde6c, 0xe86f, 0x7760, 0x1ef7, 0x60ed, 0x2832, 0x1, 0x1);
        gbc.writeMem(0xde6c, { 0x58 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe86f, gbc.sp());
        EXPECT(0xde6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xde6c));
        // 58 004A
        gbc.setState(0xe9f8, 0x1195, 0x4470, 0xe1cb, 0xd5ff, 0x6902, 0x0, 0x0);
        gbc.writeMem(0xe9f8, { 0x58 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1195, gbc.sp());
        EXPECT(0xe9f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe9f8));
        // 58 004B
        gbc.setState(0x7c37, 0xf6f, 0x2e90, 0xaff2, 0x1c17, 0xe3c6, 0x1, 0x1);
        gbc.writeMem(0x7c37, { 0x58 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf6f, gbc.sp());
        EXPECT(0x7c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 004C
        gbc.setState(0x63b9, 0x2d87, 0x120, 0x7adf, 0x5d87, 0x19f9, 0x1, 0x0);
        gbc.writeMem(0x63b9, { 0x58 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2d87, gbc.sp());
        EXPECT(0x63ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 004D
        gbc.setState(0x89a1, 0xb3b6, 0x8c30, 0x28ea, 0xfb21, 0x28b, 0x1, 0x1);
        gbc.writeMem(0x89a1, { 0x58 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb3b6, gbc.sp());
        EXPECT(0x89a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x89a1));
        // 58 004E
        gbc.setState(0x3554, 0xd08c, 0x920, 0xfd7d, 0xfaa2, 0x50e7, 0x0, 0x0);
        gbc.writeMem(0x3554, { 0x58 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd08c, gbc.sp());
        EXPECT(0x3555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 004F
        gbc.setState(0xba78, 0x3c4d, 0x2f00, 0xed44, 0x8c9a, 0xaa0b, 0x0, 0x0);
        gbc.writeMem(0xba78, { 0x58 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3c4d, gbc.sp());
        EXPECT(0xba79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xba78));
        // 58 0050
        gbc.setState(0x96d0, 0xf6b7, 0x2ab0, 0x3897, 0x9a5c, 0xa934, 0x0, 0x1);
        gbc.writeMem(0x96d0, { 0x58 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf6b7, gbc.sp());
        EXPECT(0x96d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x96d0));
        // 58 0051
        gbc.setState(0xde3f, 0xc302, 0xf980, 0x3f9, 0x7bd1, 0xf39f, 0x1, 0x0);
        gbc.writeMem(0xde3f, { 0x58 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc302, gbc.sp());
        EXPECT(0xde40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xde3f));
        // 58 0052
        gbc.setState(0x5f2c, 0xfcae, 0xfb20, 0xffc2, 0x4f49, 0x82b8, 0x0, 0x1);
        gbc.writeMem(0x5f2c, { 0x58 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfcae, gbc.sp());
        EXPECT(0x5f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0053
        gbc.setState(0x57cd, 0x5e98, 0x520, 0x1744, 0x96c7, 0xc55f, 0x0, 0x0);
        gbc.writeMem(0x57cd, { 0x58 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5e98, gbc.sp());
        EXPECT(0x57ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0054
        gbc.setState(0x7db8, 0x76a1, 0x4730, 0x7fd, 0x53ae, 0x26d5, 0x0, 0x1);
        gbc.writeMem(0x7db8, { 0x58 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x76a1, gbc.sp());
        EXPECT(0x7db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0055
        gbc.setState(0xa95d, 0x38e5, 0x9aa0, 0xc4e0, 0x9fd9, 0x5c5d, 0x0, 0x1);
        gbc.writeMem(0xa95d, { 0x58 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x38e5, gbc.sp());
        EXPECT(0xa95e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa95d));
        // 58 0056
        gbc.setState(0xe28c, 0xb0ff, 0x45d0, 0x705d, 0xe80, 0xcdde, 0x0, 0x0);
        gbc.writeMem(0xe28c, { 0x58 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb0ff, gbc.sp());
        EXPECT(0xe28d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe28c));
        // 58 0057
        gbc.setState(0x612c, 0xf85b, 0xde40, 0xe8c1, 0x6c57, 0xf821, 0x1, 0x0);
        gbc.writeMem(0x612c, { 0x58 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf85b, gbc.sp());
        EXPECT(0x612d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0058
        gbc.setState(0x7431, 0x7052, 0x4530, 0xe70c, 0x4666, 0x96dc, 0x0, 0x1);
        gbc.writeMem(0x7431, { 0x58 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7052, gbc.sp());
        EXPECT(0x7432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0059
        gbc.setState(0x38ab, 0xdaca, 0x7d70, 0x1259, 0x1b2d, 0x717c, 0x1, 0x1);
        gbc.writeMem(0x38ab, { 0x58 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdaca, gbc.sp());
        EXPECT(0x38ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 005A
        gbc.setState(0x9a2b, 0xb698, 0x6520, 0xb288, 0x4e4d, 0xd892, 0x0, 0x1);
        gbc.writeMem(0x9a2b, { 0x58 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb698, gbc.sp());
        EXPECT(0x9a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9a2b));
        // 58 005B
        gbc.setState(0x82bd, 0x1621, 0x72e0, 0xf080, 0x1755, 0xa4c3, 0x0, 0x1);
        gbc.writeMem(0x82bd, { 0x58 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1621, gbc.sp());
        EXPECT(0x82be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x82bd));
        // 58 005C
        gbc.setState(0xbd3a, 0xc45, 0xef0, 0x7615, 0x4cc8, 0xea07, 0x0, 0x1);
        gbc.writeMem(0xbd3a, { 0x58 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc45, gbc.sp());
        EXPECT(0xbd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbd3a));
        // 58 005D
        gbc.setState(0xa8cc, 0x7890, 0x7fb0, 0xe930, 0x78f9, 0x8558, 0x0, 0x0);
        gbc.writeMem(0xa8cc, { 0x58 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7890, gbc.sp());
        EXPECT(0xa8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa8cc));
        // 58 005E
        gbc.setState(0xc74b, 0x17df, 0x6090, 0x5159, 0x3c48, 0x6f95, 0x0, 0x1);
        gbc.writeMem(0xc74b, { 0x58 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x17df, gbc.sp());
        EXPECT(0xc74c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc74b));
        // 58 005F
        gbc.setState(0xec37, 0x9e60, 0x2d80, 0x833, 0x69a9, 0xa1ed, 0x1, 0x1);
        gbc.writeMem(0xec37, { 0x58 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9e60, gbc.sp());
        EXPECT(0xec38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xec37));
        // 58 0060
        gbc.setState(0x24da, 0x8d6c, 0x590, 0x505d, 0x456e, 0x106d, 0x1, 0x0);
        gbc.writeMem(0x24da, { 0x58 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8d6c, gbc.sp());
        EXPECT(0x24db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0061
        gbc.setState(0xe278, 0x9568, 0xa7a0, 0x69f4, 0x6984, 0x54b6, 0x1, 0x1);
        gbc.writeMem(0xe278, { 0x58 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9568, gbc.sp());
        EXPECT(0xe279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe278));
        // 58 0062
        gbc.setState(0x4c8, 0xe4a2, 0x67e0, 0x5378, 0x7571, 0x832e, 0x1, 0x1);
        gbc.writeMem(0x4c8, { 0x58 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe4a2, gbc.sp());
        EXPECT(0x4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0063
        gbc.setState(0xa1b9, 0xac5f, 0xffc0, 0x61b2, 0x5a1a, 0x157c, 0x1, 0x1);
        gbc.writeMem(0xa1b9, { 0x58 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xac5f, gbc.sp());
        EXPECT(0xa1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa1b9));
        // 58 0064
        gbc.setState(0xe7bc, 0x8099, 0x3040, 0xe50b, 0xe12, 0xb71f, 0x1, 0x1);
        gbc.writeMem(0xe7bc, { 0x58 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8099, gbc.sp());
        EXPECT(0xe7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe7bc));
        // 58 0065
        gbc.setState(0xbed5, 0x8082, 0x9c20, 0xe077, 0xff99, 0x9016, 0x1, 0x1);
        gbc.writeMem(0xbed5, { 0x58 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8082, gbc.sp());
        EXPECT(0xbed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbed5));
        // 58 0066
        gbc.setState(0x5469, 0xa9ba, 0x99d0, 0xe2f6, 0x3f20, 0x49db, 0x1, 0x1);
        gbc.writeMem(0x5469, { 0x58 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa9ba, gbc.sp());
        EXPECT(0x546a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0067
        gbc.setState(0x39ec, 0xe0da, 0x5b50, 0xc5fc, 0x3c6f, 0x94f9, 0x1, 0x0);
        gbc.writeMem(0x39ec, { 0x58 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe0da, gbc.sp());
        EXPECT(0x39ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0068
        gbc.setState(0x473b, 0x511b, 0x2980, 0xf4e2, 0xbe38, 0x9fc5, 0x1, 0x0);
        gbc.writeMem(0x473b, { 0x58 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x511b, gbc.sp());
        EXPECT(0x473c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0069
        gbc.setState(0x55ce, 0x83f7, 0x2b80, 0x242d, 0x2a72, 0xa69a, 0x0, 0x1);
        gbc.writeMem(0x55ce, { 0x58 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x83f7, gbc.sp());
        EXPECT(0x55cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 006A
        gbc.setState(0xc335, 0xdbdb, 0x1ea0, 0x9b32, 0xfaaf, 0xf342, 0x1, 0x0);
        gbc.writeMem(0xc335, { 0x58 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdbdb, gbc.sp());
        EXPECT(0xc336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc335));
        // 58 006B
        gbc.setState(0xe137, 0xe6d3, 0x8840, 0x7eb2, 0x5c9b, 0x9ece, 0x0, 0x1);
        gbc.writeMem(0xe137, { 0x58 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe6d3, gbc.sp());
        EXPECT(0xe138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe137));
        // 58 006C
        gbc.setState(0x6169, 0xe8f6, 0x1150, 0xd9f1, 0x9784, 0x7a2b, 0x0, 0x0);
        gbc.writeMem(0x6169, { 0x58 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe8f6, gbc.sp());
        EXPECT(0x616a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 006D
        gbc.setState(0x471c, 0xdae7, 0x5e70, 0x4f6e, 0x1f7, 0x1114, 0x0, 0x1);
        gbc.writeMem(0x471c, { 0x58 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdae7, gbc.sp());
        EXPECT(0x471d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 006E
        gbc.setState(0xa1e3, 0x6ed3, 0x16a0, 0xea46, 0x637, 0x5ee3, 0x0, 0x1);
        gbc.writeMem(0xa1e3, { 0x58 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6ed3, gbc.sp());
        EXPECT(0xa1e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa1e3));
        // 58 006F
        gbc.setState(0xa77, 0x3d4c, 0x6d50, 0x595b, 0x4c0f, 0x5181, 0x1, 0x1);
        gbc.writeMem(0xa77, { 0x58 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3d4c, gbc.sp());
        EXPECT(0xa78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0070
        gbc.setState(0x4f26, 0x7fc0, 0x2900, 0x513b, 0x96a6, 0x7978, 0x0, 0x1);
        gbc.writeMem(0x4f26, { 0x58 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7fc0, gbc.sp());
        EXPECT(0x4f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0071
        gbc.setState(0xb46d, 0xde02, 0x5f90, 0xcf46, 0x3c1a, 0x80e0, 0x1, 0x1);
        gbc.writeMem(0xb46d, { 0x58 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xde02, gbc.sp());
        EXPECT(0xb46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb46d));
        // 58 0072
        gbc.setState(0x3428, 0xbda3, 0x5170, 0xb65, 0x7332, 0x8007, 0x0, 0x0);
        gbc.writeMem(0x3428, { 0x58 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbda3, gbc.sp());
        EXPECT(0x3429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0073
        gbc.setState(0x4f8f, 0x6801, 0x70, 0xcc2d, 0x8098, 0xb803, 0x1, 0x0);
        gbc.writeMem(0x4f8f, { 0x58 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6801, gbc.sp());
        EXPECT(0x4f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0074
        gbc.setState(0x3a26, 0xebf4, 0xa390, 0xde92, 0xfb6c, 0xe002, 0x0, 0x0);
        gbc.writeMem(0x3a26, { 0x58 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xebf4, gbc.sp());
        EXPECT(0x3a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0075
        gbc.setState(0xef90, 0xf461, 0x5ba0, 0x277b, 0xbeb4, 0xe789, 0x0, 0x0);
        gbc.writeMem(0xef90, { 0x58 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf461, gbc.sp());
        EXPECT(0xef91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xef90));
        // 58 0076
        gbc.setState(0x4e6e, 0x8723, 0xa780, 0x803, 0xc798, 0xdd91, 0x1, 0x1);
        gbc.writeMem(0x4e6e, { 0x58 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8723, gbc.sp());
        EXPECT(0x4e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0077
        gbc.setState(0x81f8, 0x669c, 0xd270, 0x90c3, 0xb395, 0x9a20, 0x0, 0x0);
        gbc.writeMem(0x81f8, { 0x58 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x669c, gbc.sp());
        EXPECT(0x81f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x81f8));
        // 58 0078
        gbc.setState(0x39f8, 0x71b7, 0x4200, 0xe212, 0xa65d, 0x2d2a, 0x1, 0x1);
        gbc.writeMem(0x39f8, { 0x58 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x71b7, gbc.sp());
        EXPECT(0x39f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0079
        gbc.setState(0x237e, 0xa231, 0xc610, 0x798c, 0x2bf, 0x50b9, 0x0, 0x0);
        gbc.writeMem(0x237e, { 0x58 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa231, gbc.sp());
        EXPECT(0x237f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 007B
        gbc.setState(0x8599, 0x8928, 0x64c0, 0x5040, 0xfc1, 0xf205, 0x1, 0x1);
        gbc.writeMem(0x8599, { 0x58 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8928, gbc.sp());
        EXPECT(0x859a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8599));
        // 58 007C
        gbc.setState(0x74f8, 0x8f04, 0xccb0, 0x80c, 0x7cef, 0x79d2, 0x0, 0x1);
        gbc.writeMem(0x74f8, { 0x58 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8f04, gbc.sp());
        EXPECT(0x74f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 007D
        gbc.setState(0x4cf9, 0x36c9, 0x17b0, 0x627e, 0xe2f4, 0x9b5a, 0x0, 0x0);
        gbc.writeMem(0x4cf9, { 0x58 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x36c9, gbc.sp());
        EXPECT(0x4cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 007E
        gbc.setState(0x4d, 0xaab3, 0x2490, 0x40eb, 0xbe6e, 0x5da3, 0x1, 0x1);
        gbc.writeMem(0x4d, { 0x58 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xaab3, gbc.sp());
        EXPECT(0x4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 007F
        gbc.setState(0xc2c3, 0x5ec, 0x6710, 0x72b4, 0x1d71, 0x1ff2, 0x1, 0x1);
        gbc.writeMem(0xc2c3, { 0x58 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5ec, gbc.sp());
        EXPECT(0xc2c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc2c3));
        // 58 0080
        gbc.setState(0x990e, 0xf237, 0xf880, 0x57b8, 0x19ea, 0x9b9d, 0x0, 0x0);
        gbc.writeMem(0x990e, { 0x58 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf237, gbc.sp());
        EXPECT(0x990f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x990e));
        // 58 0081
        gbc.setState(0x421d, 0xb29, 0x41c0, 0xebb2, 0x87f6, 0x2b87, 0x1, 0x1);
        gbc.writeMem(0x421d, { 0x58 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb29, gbc.sp());
        EXPECT(0x421e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0082
        gbc.setState(0xec42, 0x5758, 0x350, 0x1a5d, 0x6b09, 0x1da8, 0x0, 0x0);
        gbc.writeMem(0xec42, { 0x58 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5758, gbc.sp());
        EXPECT(0xec43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xec42));
        // 58 0083
        gbc.setState(0x44ab, 0x68e3, 0xcec0, 0x3aed, 0x59a5, 0x16d9, 0x1, 0x1);
        gbc.writeMem(0x44ab, { 0x58 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x68e3, gbc.sp());
        EXPECT(0x44ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0084
        gbc.setState(0x478f, 0xebd7, 0xcde0, 0x1327, 0x5b9d, 0xae31, 0x1, 0x0);
        gbc.writeMem(0x478f, { 0x58 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xebd7, gbc.sp());
        EXPECT(0x4790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0085
        gbc.setState(0x1dcb, 0x4d5b, 0x7370, 0x2317, 0x92bd, 0x1819, 0x1, 0x0);
        gbc.writeMem(0x1dcb, { 0x58 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4d5b, gbc.sp());
        EXPECT(0x1dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0086
        gbc.setState(0x182c, 0x4c3c, 0x55a0, 0x5125, 0xf366, 0xe2f3, 0x0, 0x0);
        gbc.writeMem(0x182c, { 0x58 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4c3c, gbc.sp());
        EXPECT(0x182d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0087
        gbc.setState(0xfc5, 0xb697, 0xe620, 0x35fc, 0x7ac8, 0x8af0, 0x1, 0x0);
        gbc.writeMem(0xfc5, { 0x58 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb697, gbc.sp());
        EXPECT(0xfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0088
        gbc.setState(0x281f, 0x9124, 0xbf10, 0x9178, 0x3eba, 0xcda7, 0x1, 0x0);
        gbc.writeMem(0x281f, { 0x58 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9124, gbc.sp());
        EXPECT(0x2820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0089
        gbc.setState(0xe5ce, 0x2cf2, 0xf200, 0x3957, 0x7196, 0x6190, 0x0, 0x0);
        gbc.writeMem(0xe5ce, { 0x58 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2cf2, gbc.sp());
        EXPECT(0xe5cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe5ce));
        // 58 008A
        gbc.setState(0x2a85, 0xb264, 0xffb0, 0x9e26, 0xdeac, 0xdbd9, 0x0, 0x0);
        gbc.writeMem(0x2a85, { 0x58 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb264, gbc.sp());
        EXPECT(0x2a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 008B
        gbc.setState(0x673d, 0x60d4, 0xa440, 0xe142, 0xbdf, 0x56ac, 0x0, 0x1);
        gbc.writeMem(0x673d, { 0x58 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x60d4, gbc.sp());
        EXPECT(0x673e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 008C
        gbc.setState(0x71b0, 0x176b, 0x9d70, 0x1b23, 0x519, 0x1320, 0x0, 0x1);
        gbc.writeMem(0x71b0, { 0x58 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x176b, gbc.sp());
        EXPECT(0x71b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 008E
        gbc.setState(0xd25e, 0x4cbc, 0xf570, 0x7791, 0x53b5, 0x6ab9, 0x0, 0x1);
        gbc.writeMem(0xd25e, { 0x58 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4cbc, gbc.sp());
        EXPECT(0xd25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd25e));
        // 58 008F
        gbc.setState(0x539c, 0x67, 0x79e0, 0x989a, 0x1e71, 0xc468, 0x0, 0x0);
        gbc.writeMem(0x539c, { 0x58 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x67, gbc.sp());
        EXPECT(0x539d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0090
        gbc.setState(0x3304, 0x5e81, 0xa990, 0x50df, 0x2e1f, 0xef7b, 0x0, 0x1);
        gbc.writeMem(0x3304, { 0x58 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5e81, gbc.sp());
        EXPECT(0x3305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0091
        gbc.setState(0x693e, 0xfd76, 0x49b0, 0x15e5, 0xa7af, 0xa5f0, 0x0, 0x0);
        gbc.writeMem(0x693e, { 0x58 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfd76, gbc.sp());
        EXPECT(0x693f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0093
        gbc.setState(0xb679, 0xfa0f, 0xd1f0, 0x7c42, 0x1a10, 0xf6c8, 0x1, 0x1);
        gbc.writeMem(0xb679, { 0x58 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfa0f, gbc.sp());
        EXPECT(0xb67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb679));
        // 58 0094
        gbc.setState(0x16d0, 0x26e3, 0x8130, 0xa6fa, 0x5e72, 0x997c, 0x0, 0x1);
        gbc.writeMem(0x16d0, { 0x58 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x26e3, gbc.sp());
        EXPECT(0x16d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0095
        gbc.setState(0xafcb, 0x3eac, 0x1b90, 0xb689, 0x7fa5, 0xc2bf, 0x1, 0x0);
        gbc.writeMem(0xafcb, { 0x58 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3eac, gbc.sp());
        EXPECT(0xafcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xafcb));
        // 58 0096
        gbc.setState(0x8b6f, 0xacc9, 0xb0d0, 0x356c, 0x8ae7, 0x28f5, 0x1, 0x1);
        gbc.writeMem(0x8b6f, { 0x58 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xacc9, gbc.sp());
        EXPECT(0x8b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8b6f));
        // 58 0097
        gbc.setState(0x7746, 0xad63, 0x62f0, 0xa56, 0xd1d8, 0xb3e9, 0x0, 0x0);
        gbc.writeMem(0x7746, { 0x58 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xad63, gbc.sp());
        EXPECT(0x7747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0098
        gbc.setState(0x40c8, 0xcd82, 0x38b0, 0x67b0, 0xb954, 0xb1a8, 0x0, 0x1);
        gbc.writeMem(0x40c8, { 0x58 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcd82, gbc.sp());
        EXPECT(0x40c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0099
        gbc.setState(0x7709, 0xfeec, 0xc8e0, 0x62cf, 0xee31, 0xc120, 0x0, 0x1);
        gbc.writeMem(0x7709, { 0x58 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfeec, gbc.sp());
        EXPECT(0x770a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 009A
        gbc.setState(0xc444, 0xfcb3, 0xf770, 0xada4, 0x2b69, 0x665c, 0x0, 0x0);
        gbc.writeMem(0xc444, { 0x58 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfcb3, gbc.sp());
        EXPECT(0xc445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc444));
        // 58 009B
        gbc.setState(0xee31, 0x4d65, 0x4980, 0x8da4, 0xec9, 0x251b, 0x0, 0x0);
        gbc.writeMem(0xee31, { 0x58 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4d65, gbc.sp());
        EXPECT(0xee32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xee31));
        // 58 009C
        gbc.setState(0x5176, 0xf89d, 0xb880, 0xf582, 0x65a9, 0xef21, 0x1, 0x1);
        gbc.writeMem(0x5176, { 0x58 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf89d, gbc.sp());
        EXPECT(0x5177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 009D
        gbc.setState(0xef90, 0xe9f6, 0xdbb0, 0x36ba, 0xdccd, 0xc4c3, 0x0, 0x0);
        gbc.writeMem(0xef90, { 0x58 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe9f6, gbc.sp());
        EXPECT(0xef91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xef90));
        // 58 009E
        gbc.setState(0x1c37, 0xd8b7, 0xbdb0, 0x3276, 0x2672, 0x5af2, 0x0, 0x0);
        gbc.writeMem(0x1c37, { 0x58 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd8b7, gbc.sp());
        EXPECT(0x1c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 009F
        gbc.setState(0xaac, 0xc5f, 0xeef0, 0xc0dd, 0x75c9, 0x4917, 0x1, 0x1);
        gbc.writeMem(0xaac, { 0x58 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc5f, gbc.sp());
        EXPECT(0xaad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00A0
        gbc.setState(0x165, 0xa906, 0xaa10, 0xc564, 0x89a0, 0x1315, 0x1, 0x1);
        gbc.writeMem(0x165, { 0x58 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa906, gbc.sp());
        EXPECT(0x166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00A1
        gbc.setState(0x5744, 0xa00c, 0xb710, 0xfe1c, 0xde14, 0x9313, 0x1, 0x1);
        gbc.writeMem(0x5744, { 0x58 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa00c, gbc.sp());
        EXPECT(0x5745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00A2
        gbc.setState(0x9a09, 0xb3e9, 0x6b20, 0x4954, 0xe388, 0x31ea, 0x0, 0x1);
        gbc.writeMem(0x9a09, { 0x58 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb3e9, gbc.sp());
        EXPECT(0x9a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9a09));
        // 58 00A3
        gbc.setState(0x7bbe, 0xf8c0, 0xb1a0, 0xd482, 0xbda8, 0x861e, 0x1, 0x1);
        gbc.writeMem(0x7bbe, { 0x58 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf8c0, gbc.sp());
        EXPECT(0x7bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00A4
        gbc.setState(0x82c, 0xa5dc, 0xc650, 0xda06, 0xe96a, 0xe90c, 0x0, 0x0);
        gbc.writeMem(0x82c, { 0x58 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa5dc, gbc.sp());
        EXPECT(0x82d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00A5
        gbc.setState(0x4f5c, 0xacf8, 0x15a0, 0x2186, 0x7dab, 0xdeff, 0x1, 0x0);
        gbc.writeMem(0x4f5c, { 0x58 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xacf8, gbc.sp());
        EXPECT(0x4f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00A6
        gbc.setState(0x7ac7, 0xd740, 0x3e0, 0xe86a, 0x1de7, 0xe303, 0x1, 0x0);
        gbc.writeMem(0x7ac7, { 0x58 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd740, gbc.sp());
        EXPECT(0x7ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00A7
        gbc.setState(0x4e0, 0x689b, 0x6690, 0x8820, 0x54f, 0x39c7, 0x1, 0x0);
        gbc.writeMem(0x4e0, { 0x58 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x689b, gbc.sp());
        EXPECT(0x4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00A8
        gbc.setState(0x29c4, 0xac46, 0xb010, 0x2404, 0xf5be, 0x72d5, 0x0, 0x1);
        gbc.writeMem(0x29c4, { 0x58 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xac46, gbc.sp());
        EXPECT(0x29c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00A9
        gbc.setState(0x3157, 0xcd2f, 0x89d0, 0xc20c, 0xd628, 0xfc8, 0x1, 0x0);
        gbc.writeMem(0x3157, { 0x58 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcd2f, gbc.sp());
        EXPECT(0x3158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00AA
        gbc.setState(0x68e6, 0x6c1c, 0xb5c0, 0xf704, 0x8b67, 0x938f, 0x0, 0x0);
        gbc.writeMem(0x68e6, { 0x58 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6c1c, gbc.sp());
        EXPECT(0x68e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00AB
        gbc.setState(0xde03, 0x86dd, 0xb930, 0x1305, 0xc9bd, 0x4bec, 0x0, 0x1);
        gbc.writeMem(0xde03, { 0x58 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x86dd, gbc.sp());
        EXPECT(0xde04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xde03));
        // 58 00AC
        gbc.setState(0x11a7, 0x6f67, 0xfef0, 0x26c1, 0xca7d, 0xf1e9, 0x0, 0x0);
        gbc.writeMem(0x11a7, { 0x58 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6f67, gbc.sp());
        EXPECT(0x11a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00AD
        gbc.setState(0x6f72, 0xf0cf, 0xf770, 0xf7fc, 0xdc0a, 0x4459, 0x1, 0x0);
        gbc.writeMem(0x6f72, { 0x58 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf0cf, gbc.sp());
        EXPECT(0x6f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00AE
        gbc.setState(0x2f73, 0x4305, 0x2e50, 0x5019, 0x71e0, 0x702f, 0x1, 0x0);
        gbc.writeMem(0x2f73, { 0x58 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4305, gbc.sp());
        EXPECT(0x2f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00AF
        gbc.setState(0xeec0, 0x94e2, 0x73f0, 0x4c24, 0xb4ac, 0xf790, 0x0, 0x1);
        gbc.writeMem(0xeec0, { 0x58 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x94e2, gbc.sp());
        EXPECT(0xeec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xeec0));
        // 58 00B0
        gbc.setState(0x5eb9, 0x926d, 0x1fd0, 0x8cc7, 0x3641, 0x1b2, 0x0, 0x1);
        gbc.writeMem(0x5eb9, { 0x58 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x926d, gbc.sp());
        EXPECT(0x5eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00B1
        gbc.setState(0x4188, 0x9c9, 0xf810, 0x979b, 0xf21f, 0x8ba5, 0x0, 0x0);
        gbc.writeMem(0x4188, { 0x58 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9c9, gbc.sp());
        EXPECT(0x4189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00B2
        gbc.setState(0x6100, 0xcfa1, 0x40, 0x78b9, 0xfe9, 0x31d0, 0x0, 0x0);
        gbc.writeMem(0x6100, { 0x58 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcfa1, gbc.sp());
        EXPECT(0x6101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00B3
        gbc.setState(0x37d9, 0xb7db, 0x9f70, 0x3ea2, 0xfcfe, 0x26d3, 0x0, 0x1);
        gbc.writeMem(0x37d9, { 0x58 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb7db, gbc.sp());
        EXPECT(0x37da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00B4
        gbc.setState(0x5a91, 0xaa0d, 0x4710, 0x12, 0xa26c, 0x292d, 0x0, 0x1);
        gbc.writeMem(0x5a91, { 0x58 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xaa0d, gbc.sp());
        EXPECT(0x5a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00B5
        gbc.setState(0x4af, 0xb982, 0x850, 0xcd5c, 0xedc0, 0xcae0, 0x1, 0x1);
        gbc.writeMem(0x4af, { 0x58 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb982, gbc.sp());
        EXPECT(0x4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00B6
        gbc.setState(0x1a61, 0x866e, 0x67d0, 0xc3bc, 0xf6b8, 0x15ea, 0x1, 0x1);
        gbc.writeMem(0x1a61, { 0x58 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x866e, gbc.sp());
        EXPECT(0x1a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00B7
        gbc.setState(0xdf68, 0xb139, 0x5d30, 0x6ffa, 0xed75, 0x5ccc, 0x1, 0x0);
        gbc.writeMem(0xdf68, { 0x58 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb139, gbc.sp());
        EXPECT(0xdf69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdf68));
        // 58 00B8
        gbc.setState(0x44e9, 0x22bb, 0xae70, 0xb3d8, 0x6fc1, 0x9e94, 0x1, 0x1);
        gbc.writeMem(0x44e9, { 0x58 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x22bb, gbc.sp());
        EXPECT(0x44ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00B9
        gbc.setState(0x6e25, 0x7ab3, 0xde80, 0x17b0, 0x7d44, 0x71e1, 0x1, 0x0);
        gbc.writeMem(0x6e25, { 0x58 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7ab3, gbc.sp());
        EXPECT(0x6e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00BA
        gbc.setState(0xdaa1, 0x360, 0xf500, 0x3558, 0xcaf3, 0x4e1b, 0x1, 0x0);
        gbc.writeMem(0xdaa1, { 0x58 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x360, gbc.sp());
        EXPECT(0xdaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdaa1));
        // 58 00BB
        gbc.setState(0x5339, 0x8e4f, 0xd170, 0x5846, 0x1cac, 0x9ef8, 0x1, 0x0);
        gbc.writeMem(0x5339, { 0x58 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8e4f, gbc.sp());
        EXPECT(0x533a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00BC
        gbc.setState(0xe7d5, 0xa8ed, 0xe270, 0xdd1d, 0x1505, 0x8f5c, 0x0, 0x0);
        gbc.writeMem(0xe7d5, { 0x58 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa8ed, gbc.sp());
        EXPECT(0xe7d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe7d5));
        // 58 00BD
        gbc.setState(0x850b, 0xc021, 0x5090, 0x4eab, 0x47f9, 0x7cac, 0x1, 0x1);
        gbc.writeMem(0x850b, { 0x58 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc021, gbc.sp());
        EXPECT(0x850c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x850b));
        // 58 00BE
        gbc.setState(0x718e, 0x8172, 0xd090, 0xaec, 0x130a, 0x6da1, 0x0, 0x1);
        gbc.writeMem(0x718e, { 0x58 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8172, gbc.sp());
        EXPECT(0x718f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00BF
        gbc.setState(0x955f, 0x1f51, 0x99b0, 0x1c12, 0x57af, 0xe447, 0x1, 0x0);
        gbc.writeMem(0x955f, { 0x58 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1f51, gbc.sp());
        EXPECT(0x9560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x955f));
        // 58 00C0
        gbc.setState(0x836f, 0x98bf, 0xef70, 0x35d0, 0xac60, 0xa4b0, 0x0, 0x0);
        gbc.writeMem(0x836f, { 0x58 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x98bf, gbc.sp());
        EXPECT(0x8370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x836f));
        // 58 00C1
        gbc.setState(0xd0f, 0x45d, 0x8000, 0xdae3, 0xa5bb, 0xfa2a, 0x1, 0x0);
        gbc.writeMem(0xd0f, { 0x58 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x45d, gbc.sp());
        EXPECT(0xd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00C2
        gbc.setState(0x97e9, 0x5835, 0x19a0, 0x561a, 0xa51f, 0x296f, 0x0, 0x0);
        gbc.writeMem(0x97e9, { 0x58 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5835, gbc.sp());
        EXPECT(0x97ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x97e9));
        // 58 00C3
        gbc.setState(0x3ebe, 0x914b, 0xad80, 0xaef9, 0x517c, 0x1d51, 0x1, 0x1);
        gbc.writeMem(0x3ebe, { 0x58 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x914b, gbc.sp());
        EXPECT(0x3ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00C5
        gbc.setState(0x8b3f, 0xf416, 0xe0, 0xf16f, 0x183b, 0x704c, 0x0, 0x0);
        gbc.writeMem(0x8b3f, { 0x58 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf416, gbc.sp());
        EXPECT(0x8b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8b3f));
        // 58 00C6
        gbc.setState(0x43af, 0x6c5e, 0x6be0, 0x9037, 0x3ed9, 0xf1a, 0x0, 0x1);
        gbc.writeMem(0x43af, { 0x58 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6c5e, gbc.sp());
        EXPECT(0x43b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00C7
        gbc.setState(0xb7e2, 0xee70, 0xce10, 0xd987, 0x77d1, 0x7839, 0x1, 0x0);
        gbc.writeMem(0xb7e2, { 0x58 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xee70, gbc.sp());
        EXPECT(0xb7e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb7e2));
        // 58 00C8
        gbc.setState(0x41c7, 0x579f, 0xa2f0, 0x6105, 0x40ca, 0xfe21, 0x1, 0x0);
        gbc.writeMem(0x41c7, { 0x58 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x579f, gbc.sp());
        EXPECT(0x41c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00C9
        gbc.setState(0xd797, 0x6a42, 0x6d20, 0xf7b8, 0x5e82, 0xed0a, 0x1, 0x1);
        gbc.writeMem(0xd797, { 0x58 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6a42, gbc.sp());
        EXPECT(0xd798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd797));
        // 58 00CA
        gbc.setState(0x951f, 0x6127, 0xb500, 0x9add, 0x4f60, 0xef32, 0x1, 0x0);
        gbc.writeMem(0x951f, { 0x58 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6127, gbc.sp());
        EXPECT(0x9520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x951f));
        // 58 00CB
        gbc.setState(0xdd4c, 0xe5a8, 0xdcf0, 0xf070, 0x6f1, 0xd534, 0x0, 0x1);
        gbc.writeMem(0xdd4c, { 0x58 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe5a8, gbc.sp());
        EXPECT(0xdd4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdd4c));
        // 58 00CC
        gbc.setState(0x1279, 0x5570, 0x51f0, 0x9959, 0x5ecd, 0xd106, 0x0, 0x0);
        gbc.writeMem(0x1279, { 0x58 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5570, gbc.sp());
        EXPECT(0x127a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00CD
        gbc.setState(0xd751, 0xf41, 0xd440, 0xd358, 0x70e1, 0xe125, 0x0, 0x1);
        gbc.writeMem(0xd751, { 0x58 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf41, gbc.sp());
        EXPECT(0xd752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd751));
        // 58 00CE
        gbc.setState(0x8171, 0x2cbc, 0x7810, 0x8d54, 0x1d69, 0x30d8, 0x1, 0x0);
        gbc.writeMem(0x8171, { 0x58 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2cbc, gbc.sp());
        EXPECT(0x8172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8171));
        // 58 00CF
        gbc.setState(0x6763, 0xb34f, 0x9500, 0xc617, 0x929c, 0xe479, 0x0, 0x0);
        gbc.writeMem(0x6763, { 0x58 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb34f, gbc.sp());
        EXPECT(0x6764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00D0
        gbc.setState(0x7374, 0x8772, 0x42c0, 0x3135, 0xca7b, 0x948b, 0x0, 0x1);
        gbc.writeMem(0x7374, { 0x58 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8772, gbc.sp());
        EXPECT(0x7375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00D1
        gbc.setState(0x102, 0xbf88, 0x3950, 0x26e8, 0xcff9, 0x5e3c, 0x0, 0x1);
        gbc.writeMem(0x102, { 0x58 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbf88, gbc.sp());
        EXPECT(0x103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00D2
        gbc.setState(0xbddb, 0x725, 0x9dd0, 0x85a3, 0xf647, 0x6c87, 0x1, 0x0);
        gbc.writeMem(0xbddb, { 0x58 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x725, gbc.sp());
        EXPECT(0xbddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbddb));
        // 58 00D3
        gbc.setState(0x3eef, 0xedd, 0xd4b0, 0x7c97, 0xe1a3, 0x19db, 0x1, 0x0);
        gbc.writeMem(0x3eef, { 0x58 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xedd, gbc.sp());
        EXPECT(0x3ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00D4
        gbc.setState(0x6106, 0xd190, 0xa7c0, 0xb5cf, 0xeecf, 0xc756, 0x0, 0x1);
        gbc.writeMem(0x6106, { 0x58 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd190, gbc.sp());
        EXPECT(0x6107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00D6
        gbc.setState(0x2ef1, 0x2762, 0xfb60, 0x362f, 0x1b22, 0xf431, 0x1, 0x0);
        gbc.writeMem(0x2ef1, { 0x58 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2762, gbc.sp());
        EXPECT(0x2ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00D7
        gbc.setState(0x1b70, 0xcc92, 0xc9d0, 0x73e4, 0xe0, 0x91dc, 0x0, 0x0);
        gbc.writeMem(0x1b70, { 0x58 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcc92, gbc.sp());
        EXPECT(0x1b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00D8
        gbc.setState(0xb045, 0xf476, 0x7f30, 0x4145, 0xbbb0, 0x2451, 0x1, 0x0);
        gbc.writeMem(0xb045, { 0x58 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf476, gbc.sp());
        EXPECT(0xb046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb045));
        // 58 00D9
        gbc.setState(0xc8f3, 0xc009, 0x8960, 0x589e, 0x5313, 0x2c30, 0x0, 0x1);
        gbc.writeMem(0xc8f3, { 0x58 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc009, gbc.sp());
        EXPECT(0xc8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc8f3));
        // 58 00DA
        gbc.setState(0xc20f, 0xe29f, 0xdb80, 0xbc5d, 0xf035, 0x45fa, 0x0, 0x0);
        gbc.writeMem(0xc20f, { 0x58 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe29f, gbc.sp());
        EXPECT(0xc210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc20f));
        // 58 00DB
        gbc.setState(0x3017, 0x4144, 0xcef0, 0x761f, 0xa5bf, 0x6fdc, 0x0, 0x1);
        gbc.writeMem(0x3017, { 0x58 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4144, gbc.sp());
        EXPECT(0x3018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00DC
        gbc.setState(0xe723, 0x1ce3, 0x21e0, 0x44b6, 0x7271, 0xf5ff, 0x0, 0x0);
        gbc.writeMem(0xe723, { 0x58 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1ce3, gbc.sp());
        EXPECT(0xe724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe723));
        // 58 00DD
        gbc.setState(0x8777, 0x22a, 0x97b0, 0x2d85, 0x50f, 0xbc32, 0x0, 0x0);
        gbc.writeMem(0x8777, { 0x58 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x22a, gbc.sp());
        EXPECT(0x8778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8777));
        // 58 00DE
        gbc.setState(0xbf0d, 0x2c70, 0xede0, 0xb781, 0x442a, 0x5d95, 0x1, 0x0);
        gbc.writeMem(0xbf0d, { 0x58 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2c70, gbc.sp());
        EXPECT(0xbf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbf0d));
        // 58 00DF
        gbc.setState(0x99a7, 0xf2a7, 0xeb90, 0x8520, 0x1b33, 0x144f, 0x0, 0x0);
        gbc.writeMem(0x99a7, { 0x58 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf2a7, gbc.sp());
        EXPECT(0x99a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x99a7));
        // 58 00E0
        gbc.setState(0x2510, 0xcfb9, 0xde60, 0x4321, 0x4295, 0xddbe, 0x0, 0x1);
        gbc.writeMem(0x2510, { 0x58 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcfb9, gbc.sp());
        EXPECT(0x2511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00E1
        gbc.setState(0x2e4f, 0x584b, 0xa90, 0xeaf4, 0x6fed, 0xac86, 0x1, 0x1);
        gbc.writeMem(0x2e4f, { 0x58 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x584b, gbc.sp());
        EXPECT(0x2e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00E2
        gbc.setState(0x2597, 0x279b, 0xb040, 0x7455, 0x4edf, 0x952f, 0x1, 0x1);
        gbc.writeMem(0x2597, { 0x58 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x279b, gbc.sp());
        EXPECT(0x2598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00E3
        gbc.setState(0x8177, 0xe306, 0xa760, 0x4d47, 0x66bb, 0x9a6e, 0x0, 0x0);
        gbc.writeMem(0x8177, { 0x58 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe306, gbc.sp());
        EXPECT(0x8178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8177));
        // 58 00E5
        gbc.setState(0xce20, 0x2266, 0x4df0, 0x6c5d, 0x1761, 0x79c7, 0x1, 0x0);
        gbc.writeMem(0xce20, { 0x58 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2266, gbc.sp());
        EXPECT(0xce21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xce20));
        // 58 00E6
        gbc.setState(0x95d9, 0x6741, 0x3810, 0x87f1, 0xa549, 0x6a6a, 0x0, 0x1);
        gbc.writeMem(0x95d9, { 0x58 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6741, gbc.sp());
        EXPECT(0x95da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x95d9));
        // 58 00E7
        gbc.setState(0x1a2, 0x1481, 0xfc60, 0xb62b, 0x646d, 0x1913, 0x1, 0x1);
        gbc.writeMem(0x1a2, { 0x58 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1481, gbc.sp());
        EXPECT(0x1a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00E8
        gbc.setState(0xd538, 0x6158, 0x38b0, 0x5b75, 0xd0a0, 0xd476, 0x0, 0x0);
        gbc.writeMem(0xd538, { 0x58 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6158, gbc.sp());
        EXPECT(0xd539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd538));
        // 58 00E9
        gbc.setState(0x1034, 0x8830, 0x1b80, 0x39bb, 0xb6a2, 0x2a, 0x0, 0x0);
        gbc.writeMem(0x1034, { 0x58 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8830, gbc.sp());
        EXPECT(0x1035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00EA
        gbc.setState(0x33fe, 0x4762, 0xd580, 0x9025, 0x2838, 0xb79e, 0x1, 0x1);
        gbc.writeMem(0x33fe, { 0x58 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4762, gbc.sp());
        EXPECT(0x33ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00EB
        gbc.setState(0x88f8, 0xeb6, 0x4f30, 0x6da5, 0xd5fc, 0x3013, 0x1, 0x1);
        gbc.writeMem(0x88f8, { 0x58 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xeb6, gbc.sp());
        EXPECT(0x88f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x88f8));
        // 58 00EC
        gbc.setState(0x7216, 0xcf7, 0x7260, 0xa840, 0x7229, 0xef6a, 0x0, 0x1);
        gbc.writeMem(0x7216, { 0x58 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xcf7, gbc.sp());
        EXPECT(0x7217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00ED
        gbc.setState(0x8cb4, 0x7c7d, 0xc3a0, 0x41a0, 0xbdd9, 0xc8d, 0x0, 0x1);
        gbc.writeMem(0x8cb4, { 0x58 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7c7d, gbc.sp());
        EXPECT(0x8cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8cb4));
        // 58 00EE
        gbc.setState(0x85b6, 0x282a, 0x6220, 0x6db6, 0x733e, 0x51d7, 0x0, 0x0);
        gbc.writeMem(0x85b6, { 0x58 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x282a, gbc.sp());
        EXPECT(0x85b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x85b6));
        // 58 00EF
        gbc.setState(0x4cdb, 0xb40f, 0x5f0, 0x16b8, 0x238c, 0x6c11, 0x1, 0x0);
        gbc.writeMem(0x4cdb, { 0x58 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb40f, gbc.sp());
        EXPECT(0x4cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00F0
        gbc.setState(0x9351, 0x17b4, 0xef00, 0x43fd, 0xfe59, 0x464f, 0x1, 0x1);
        gbc.writeMem(0x9351, { 0x58 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x17b4, gbc.sp());
        EXPECT(0x9352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9351));
        // 58 00F1
        gbc.setState(0xe4c1, 0x5ead, 0x52e0, 0xdb02, 0xc6e2, 0xb828, 0x1, 0x0);
        gbc.writeMem(0xe4c1, { 0x58 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5ead, gbc.sp());
        EXPECT(0xe4c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe4c1));
        // 58 00F2
        gbc.setState(0x1663, 0x9385, 0x9e60, 0x15c, 0x763e, 0x779, 0x1, 0x1);
        gbc.writeMem(0x1663, { 0x58 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9385, gbc.sp());
        EXPECT(0x1664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00F3
        gbc.setState(0x4340, 0x5b9f, 0x4b90, 0xbe48, 0x73a, 0x464e, 0x0, 0x1);
        gbc.writeMem(0x4340, { 0x58 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5b9f, gbc.sp());
        EXPECT(0x4341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00F4
        gbc.setState(0x9326, 0xad11, 0x3df0, 0xb77a, 0x6cdb, 0x3963, 0x0, 0x1);
        gbc.writeMem(0x9326, { 0x58 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xad11, gbc.sp());
        EXPECT(0x9327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9326));
        // 58 00F5
        gbc.setState(0x6aed, 0x2f31, 0x20, 0xa20c, 0xcd6a, 0xce20, 0x0, 0x0);
        gbc.writeMem(0x6aed, { 0x58 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2f31, gbc.sp());
        EXPECT(0x6aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 00F6
        gbc.setState(0x6534, 0xa36b, 0xd70, 0xccf0, 0xfb60, 0xf15f, 0x1, 0x1);
        gbc.writeMem(0x6534, { 0x58 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa36b, gbc.sp());
        EXPECT(0x6535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00F7
        gbc.setState(0x593d, 0x7075, 0x3c50, 0x8fdb, 0x1574, 0x1755, 0x0, 0x1);
        gbc.writeMem(0x593d, { 0x58 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7075, gbc.sp());
        EXPECT(0x593e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00F8
        gbc.setState(0x7536, 0x924, 0x5430, 0x6109, 0xd36d, 0xc36f, 0x1, 0x1);
        gbc.writeMem(0x7536, { 0x58 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x924, gbc.sp());
        EXPECT(0x7537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00FA
        gbc.setState(0x8329, 0x95a3, 0xd060, 0xd66c, 0x2f3f, 0xbc7e, 0x1, 0x0);
        gbc.writeMem(0x8329, { 0x58 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x95a3, gbc.sp());
        EXPECT(0x832a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8329));
        // 58 00FB
        gbc.setState(0x2dd9, 0x7a29, 0x4310, 0x505d, 0x199f, 0x3cac, 0x1, 0x1);
        gbc.writeMem(0x2dd9, { 0x58 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7a29, gbc.sp());
        EXPECT(0x2dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00FD
        gbc.setState(0xd7c0, 0x551d, 0x3570, 0x3d6e, 0xd59a, 0x19df, 0x0, 0x1);
        gbc.writeMem(0xd7c0, { 0x58 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x551d, gbc.sp());
        EXPECT(0xd7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd7c0));
        // 58 00FE
        gbc.setState(0x493e, 0x9cd0, 0xedf0, 0xb127, 0x21c7, 0x9b0, 0x1, 0x0);
        gbc.writeMem(0x493e, { 0x58 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9cd0, gbc.sp());
        EXPECT(0x493f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 00FF
        gbc.setState(0x1f1c, 0x7010, 0x6cc0, 0x4b8e, 0x6816, 0x6460, 0x0, 0x0);
        gbc.writeMem(0x1f1c, { 0x58 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7010, gbc.sp());
        EXPECT(0x1f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0100
        gbc.setState(0x8a2d, 0x89a2, 0xedf0, 0xd252, 0x66c6, 0xf03e, 0x0, 0x0);
        gbc.writeMem(0x8a2d, { 0x58 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x89a2, gbc.sp());
        EXPECT(0x8a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8a2d));
        // 58 0101
        gbc.setState(0x77c2, 0x6f66, 0xe680, 0x262d, 0xdbf6, 0xc908, 0x1, 0x1);
        gbc.writeMem(0x77c2, { 0x58 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6f66, gbc.sp());
        EXPECT(0x77c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0102
        gbc.setState(0xec2, 0xd31, 0x57f0, 0xf1b0, 0xa508, 0xa362, 0x1, 0x1);
        gbc.writeMem(0xec2, { 0x58 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd31, gbc.sp());
        EXPECT(0xec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0103
        gbc.setState(0xee96, 0x475c, 0xf7a0, 0x6c5b, 0x696e, 0xba78, 0x1, 0x1);
        gbc.writeMem(0xee96, { 0x58 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x475c, gbc.sp());
        EXPECT(0xee97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xee96));
        // 58 0104
        gbc.setState(0xdf28, 0xcab4, 0x8df0, 0x367a, 0xe339, 0x7876, 0x0, 0x0);
        gbc.writeMem(0xdf28, { 0x58 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcab4, gbc.sp());
        EXPECT(0xdf29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdf28));
        // 58 0105
        gbc.setState(0xb4f6, 0xc68d, 0x8c90, 0x79ba, 0x31d6, 0x6db9, 0x1, 0x0);
        gbc.writeMem(0xb4f6, { 0x58 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc68d, gbc.sp());
        EXPECT(0xb4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb4f6));
        // 58 0106
        gbc.setState(0x83c8, 0x77b3, 0xc360, 0x9a92, 0xcc6e, 0x270e, 0x0, 0x0);
        gbc.writeMem(0x83c8, { 0x58 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x77b3, gbc.sp());
        EXPECT(0x83c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x83c8));
        // 58 0107
        gbc.setState(0xac54, 0x218f, 0xb130, 0xd5a9, 0x4cf3, 0xc217, 0x0, 0x1);
        gbc.writeMem(0xac54, { 0x58 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x218f, gbc.sp());
        EXPECT(0xac55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xac54));
        // 58 0108
        gbc.setState(0x2256, 0x1634, 0xba90, 0x8b8d, 0x23b, 0xc46b, 0x1, 0x0);
        gbc.writeMem(0x2256, { 0x58 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1634, gbc.sp());
        EXPECT(0x2257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0109
        gbc.setState(0x163b, 0x41b8, 0x65a0, 0xd498, 0xb90b, 0xb885, 0x0, 0x1);
        gbc.writeMem(0x163b, { 0x58 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x41b8, gbc.sp());
        EXPECT(0x163c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 010B
        gbc.setState(0x5413, 0x59a4, 0xebf0, 0x31b8, 0x630f, 0x7f43, 0x0, 0x0);
        gbc.writeMem(0x5413, { 0x58 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x59a4, gbc.sp());
        EXPECT(0x5414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 010C
        gbc.setState(0x431c, 0x5f1b, 0xde50, 0x1ad1, 0x97f5, 0x4eb1, 0x0, 0x1);
        gbc.writeMem(0x431c, { 0x58 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5f1b, gbc.sp());
        EXPECT(0x431d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 010D
        gbc.setState(0x6ac8, 0xd661, 0x1a10, 0xbf8f, 0x23cb, 0xe7c5, 0x0, 0x1);
        gbc.writeMem(0x6ac8, { 0x58 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd661, gbc.sp());
        EXPECT(0x6ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 010E
        gbc.setState(0x4660, 0x8ffb, 0xe0, 0x7cca, 0x97a8, 0x3633, 0x0, 0x1);
        gbc.writeMem(0x4660, { 0x58 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8ffb, gbc.sp());
        EXPECT(0x4661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 010F
        gbc.setState(0x5c82, 0x96e3, 0x7e30, 0x673f, 0xfd86, 0x18df, 0x1, 0x0);
        gbc.writeMem(0x5c82, { 0x58 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x96e3, gbc.sp());
        EXPECT(0x5c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0110
        gbc.setState(0x9409, 0x2ce7, 0x7180, 0xa5d6, 0x4416, 0x2341, 0x0, 0x1);
        gbc.writeMem(0x9409, { 0x58 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2ce7, gbc.sp());
        EXPECT(0x940a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9409));
        // 58 0111
        gbc.setState(0x4e5e, 0x4992, 0x6bf0, 0x2252, 0x9755, 0xfb18, 0x0, 0x1);
        gbc.writeMem(0x4e5e, { 0x58 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4992, gbc.sp());
        EXPECT(0x4e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0112
        gbc.setState(0xfd9, 0xf657, 0xf100, 0xee52, 0x88d8, 0x1985, 0x0, 0x1);
        gbc.writeMem(0xfd9, { 0x58 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf657, gbc.sp());
        EXPECT(0xfda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0113
        gbc.setState(0xa10f, 0xcf69, 0x1a60, 0x9cb8, 0x1f6e, 0x9ab4, 0x1, 0x1);
        gbc.writeMem(0xa10f, { 0x58 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcf69, gbc.sp());
        EXPECT(0xa110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa10f));
        // 58 0114
        gbc.setState(0xa49e, 0xc322, 0x2530, 0x2d48, 0x4a6d, 0xc826, 0x1, 0x1);
        gbc.writeMem(0xa49e, { 0x58 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc322, gbc.sp());
        EXPECT(0xa49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa49e));
        // 58 0115
        gbc.setState(0x3b10, 0x412d, 0xd560, 0xd7f0, 0x7dca, 0xdb1c, 0x1, 0x0);
        gbc.writeMem(0x3b10, { 0x58 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x412d, gbc.sp());
        EXPECT(0x3b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0116
        gbc.setState(0xf7a, 0x35a4, 0x53d0, 0x13cb, 0xba9d, 0x2704, 0x0, 0x0);
        gbc.writeMem(0xf7a, { 0x58 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x35a4, gbc.sp());
        EXPECT(0xf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0117
        gbc.setState(0x333a, 0x7f5, 0xe900, 0x6f8f, 0xb743, 0x2599, 0x1, 0x1);
        gbc.writeMem(0x333a, { 0x58 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7f5, gbc.sp());
        EXPECT(0x333b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0118
        gbc.setState(0xa3ac, 0xd935, 0xc500, 0xd52d, 0x8c83, 0x433c, 0x0, 0x1);
        gbc.writeMem(0xa3ac, { 0x58 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd935, gbc.sp());
        EXPECT(0xa3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa3ac));
        // 58 0119
        gbc.setState(0x4123, 0xa25, 0x4350, 0xf3f3, 0xe494, 0xedef, 0x1, 0x0);
        gbc.writeMem(0x4123, { 0x58 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa25, gbc.sp());
        EXPECT(0x4124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 011A
        gbc.setState(0xb774, 0x12d6, 0x6800, 0x7632, 0x26d5, 0x3bad, 0x1, 0x1);
        gbc.writeMem(0xb774, { 0x58 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x12d6, gbc.sp());
        EXPECT(0xb775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb774));
        // 58 011B
        gbc.setState(0xbbe0, 0x8f4c, 0x7870, 0x388e, 0x3f0f, 0x5aa8, 0x0, 0x1);
        gbc.writeMem(0xbbe0, { 0x58 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8f4c, gbc.sp());
        EXPECT(0xbbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbbe0));
        // 58 011C
        gbc.setState(0xde05, 0x8d70, 0x2ae0, 0x88a6, 0xf49e, 0xb4bb, 0x1, 0x0);
        gbc.writeMem(0xde05, { 0x58 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8d70, gbc.sp());
        EXPECT(0xde06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xde05));
        // 58 011D
        gbc.setState(0x9d12, 0x21e4, 0x4790, 0xaf25, 0xbe0b, 0x71f5, 0x0, 0x0);
        gbc.writeMem(0x9d12, { 0x58 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x21e4, gbc.sp());
        EXPECT(0x9d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9d12));
        // 58 011E
        gbc.setState(0x6820, 0xba86, 0x15a0, 0xd470, 0xc14d, 0x2a49, 0x1, 0x0);
        gbc.writeMem(0x6820, { 0x58 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xba86, gbc.sp());
        EXPECT(0x6821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 011F
        gbc.setState(0x9cbf, 0x745e, 0x7bb0, 0xdd1f, 0x2205, 0xb43e, 0x1, 0x0);
        gbc.writeMem(0x9cbf, { 0x58 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x745e, gbc.sp());
        EXPECT(0x9cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9cbf));
        // 58 0120
        gbc.setState(0x78a3, 0xb8f7, 0x51b0, 0xb57, 0x401f, 0x7881, 0x1, 0x0);
        gbc.writeMem(0x78a3, { 0x58 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb8f7, gbc.sp());
        EXPECT(0x78a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0121
        gbc.setState(0x71eb, 0x45d8, 0x6960, 0x5db3, 0x796c, 0xce3b, 0x1, 0x1);
        gbc.writeMem(0x71eb, { 0x58 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x45d8, gbc.sp());
        EXPECT(0x71ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0122
        gbc.setState(0xa682, 0x70f7, 0x39d0, 0xfd4d, 0x8a4e, 0x8b37, 0x1, 0x0);
        gbc.writeMem(0xa682, { 0x58 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x70f7, gbc.sp());
        EXPECT(0xa683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa682));
        // 58 0123
        gbc.setState(0x4ad3, 0x527a, 0xbb70, 0x366c, 0x30a, 0x5f42, 0x0, 0x0);
        gbc.writeMem(0x4ad3, { 0x58 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x527a, gbc.sp());
        EXPECT(0x4ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0124
        gbc.setState(0x6011, 0x882e, 0xdde0, 0xc9e0, 0x25f9, 0x3f1d, 0x1, 0x0);
        gbc.writeMem(0x6011, { 0x58 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x882e, gbc.sp());
        EXPECT(0x6012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0125
        gbc.setState(0x7f5a, 0x47bd, 0x810, 0x41e4, 0x67b, 0xdf68, 0x0, 0x1);
        gbc.writeMem(0x7f5a, { 0x58 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x47bd, gbc.sp());
        EXPECT(0x7f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0126
        gbc.setState(0x3584, 0xe9d7, 0xa910, 0xbedd, 0xa3d8, 0x486f, 0x1, 0x1);
        gbc.writeMem(0x3584, { 0x58 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe9d7, gbc.sp());
        EXPECT(0x3585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0127
        gbc.setState(0x9639, 0xb4e8, 0xe360, 0x81e1, 0xc581, 0x9d2b, 0x1, 0x1);
        gbc.writeMem(0x9639, { 0x58 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb4e8, gbc.sp());
        EXPECT(0x963a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9639));
        // 58 0128
        gbc.setState(0xcdac, 0x96f5, 0xdec0, 0x6d54, 0x4f4a, 0x2ffb, 0x1, 0x1);
        gbc.writeMem(0xcdac, { 0x58 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x96f5, gbc.sp());
        EXPECT(0xcdad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xcdac));
        // 58 0129
        gbc.setState(0x2f27, 0xb894, 0xa680, 0x7a71, 0xb427, 0xf742, 0x0, 0x1);
        gbc.writeMem(0x2f27, { 0x58 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb894, gbc.sp());
        EXPECT(0x2f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 012A
        gbc.setState(0x6b83, 0x77a5, 0x1000, 0x5063, 0xcb69, 0x75c2, 0x0, 0x0);
        gbc.writeMem(0x6b83, { 0x58 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x77a5, gbc.sp());
        EXPECT(0x6b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 012B
        gbc.setState(0xbdfa, 0x9258, 0xbe10, 0xc310, 0xa19c, 0x5795, 0x1, 0x0);
        gbc.writeMem(0xbdfa, { 0x58 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9258, gbc.sp());
        EXPECT(0xbdfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbdfa));
        // 58 012C
        gbc.setState(0x41b8, 0xd174, 0x8cf0, 0xc43a, 0xe80b, 0xa4f3, 0x1, 0x0);
        gbc.writeMem(0x41b8, { 0x58 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd174, gbc.sp());
        EXPECT(0x41b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 012D
        gbc.setState(0x683f, 0x7cd6, 0xad50, 0xa41e, 0xc953, 0x303, 0x0, 0x1);
        gbc.writeMem(0x683f, { 0x58 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7cd6, gbc.sp());
        EXPECT(0x6840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 012E
        gbc.setState(0x5311, 0xb2fd, 0x2ea0, 0xd602, 0xb095, 0xf521, 0x0, 0x0);
        gbc.writeMem(0x5311, { 0x58 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb2fd, gbc.sp());
        EXPECT(0x5312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 012F
        gbc.setState(0x21b6, 0x4557, 0x2890, 0x959b, 0x8017, 0xeb13, 0x1, 0x0);
        gbc.writeMem(0x21b6, { 0x58 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4557, gbc.sp());
        EXPECT(0x21b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0130
        gbc.setState(0x2054, 0x360a, 0xbc90, 0x2c38, 0x80d0, 0x13fd, 0x1, 0x1);
        gbc.writeMem(0x2054, { 0x58 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x360a, gbc.sp());
        EXPECT(0x2055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0131
        gbc.setState(0x6ca4, 0xd820, 0x5800, 0xfa28, 0x77ad, 0xd31, 0x0, 0x0);
        gbc.writeMem(0x6ca4, { 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd820, gbc.sp());
        EXPECT(0x6ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0132
        gbc.setState(0x9806, 0x119d, 0x47d0, 0xbc88, 0x1aa9, 0xc5b3, 0x0, 0x0);
        gbc.writeMem(0x9806, { 0x58 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x119d, gbc.sp());
        EXPECT(0x9807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9806));
        // 58 0134
        gbc.setState(0xd42e, 0xfb19, 0x2fe0, 0x8992, 0x989a, 0x7d92, 0x0, 0x1);
        gbc.writeMem(0xd42e, { 0x58 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfb19, gbc.sp());
        EXPECT(0xd42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd42e));
        // 58 0135
        gbc.setState(0xddbd, 0x7091, 0xa5c0, 0xd284, 0xc501, 0x654f, 0x0, 0x1);
        gbc.writeMem(0xddbd, { 0x58 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7091, gbc.sp());
        EXPECT(0xddbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xddbd));
        // 58 0136
        gbc.setState(0x8695, 0xf88b, 0x3f0, 0x7583, 0x54d8, 0xc796, 0x1, 0x0);
        gbc.writeMem(0x8695, { 0x58 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf88b, gbc.sp());
        EXPECT(0x8696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8695));
        // 58 0137
        gbc.setState(0x76d0, 0x5690, 0xd6b0, 0x4a66, 0xf5d, 0xcacb, 0x1, 0x1);
        gbc.writeMem(0x76d0, { 0x58 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5690, gbc.sp());
        EXPECT(0x76d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0138
        gbc.setState(0x2387, 0x9dec, 0xb7b0, 0x80a2, 0x6371, 0x11c8, 0x1, 0x0);
        gbc.writeMem(0x2387, { 0x58 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9dec, gbc.sp());
        EXPECT(0x2388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 013A
        gbc.setState(0x1b1, 0xa1e7, 0xb490, 0x300a, 0x6fe6, 0x9e97, 0x0, 0x1);
        gbc.writeMem(0x1b1, { 0x58 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa1e7, gbc.sp());
        EXPECT(0x1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 013B
        gbc.setState(0x1b1f, 0x192f, 0x2e60, 0xaea0, 0xde60, 0xa8c6, 0x0, 0x0);
        gbc.writeMem(0x1b1f, { 0x58 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x192f, gbc.sp());
        EXPECT(0x1b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 013C
        gbc.setState(0xd7f3, 0xc47c, 0x65a0, 0xeede, 0x80a1, 0xb960, 0x1, 0x1);
        gbc.writeMem(0xd7f3, { 0x58 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc47c, gbc.sp());
        EXPECT(0xd7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd7f3));
        // 58 013D
        gbc.setState(0x9090, 0xdc40, 0x8950, 0x3d9, 0x7564, 0x6ea7, 0x0, 0x1);
        gbc.writeMem(0x9090, { 0x58 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdc40, gbc.sp());
        EXPECT(0x9091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9090));
        // 58 013E
        gbc.setState(0xec70, 0x7f39, 0xfc90, 0xd799, 0xa13f, 0x4ce4, 0x0, 0x1);
        gbc.writeMem(0xec70, { 0x58 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7f39, gbc.sp());
        EXPECT(0xec71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xec70));
        // 58 013F
        gbc.setState(0xc233, 0x29c6, 0x7680, 0x5f28, 0x24fa, 0xc95d, 0x0, 0x0);
        gbc.writeMem(0xc233, { 0x58 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x29c6, gbc.sp());
        EXPECT(0xc234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc233));
        // 58 0140
        gbc.setState(0xb110, 0x89a6, 0x8df0, 0x1a96, 0xe468, 0xc281, 0x0, 0x1);
        gbc.writeMem(0xb110, { 0x58 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x89a6, gbc.sp());
        EXPECT(0xb111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb110));
        // 58 0141
        gbc.setState(0x5aed, 0xbc5, 0x1730, 0x9c4f, 0x8529, 0x78fc, 0x0, 0x1);
        gbc.writeMem(0x5aed, { 0x58 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbc5, gbc.sp());
        EXPECT(0x5aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0142
        gbc.setState(0x281c, 0x3b7f, 0x2f50, 0x266a, 0x5d59, 0x6ea7, 0x0, 0x1);
        gbc.writeMem(0x281c, { 0x58 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3b7f, gbc.sp());
        EXPECT(0x281d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0143
        gbc.setState(0xdd03, 0x6846, 0x4790, 0xcebe, 0x7b65, 0x6641, 0x1, 0x0);
        gbc.writeMem(0xdd03, { 0x58 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6846, gbc.sp());
        EXPECT(0xdd04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdd03));
        // 58 0144
        gbc.setState(0x56f4, 0x2a2a, 0x8640, 0x769c, 0x322b, 0x2b38, 0x1, 0x0);
        gbc.writeMem(0x56f4, { 0x58 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2a2a, gbc.sp());
        EXPECT(0x56f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0145
        gbc.setState(0x6091, 0xf95d, 0x9820, 0x35f7, 0x749b, 0x8465, 0x0, 0x0);
        gbc.writeMem(0x6091, { 0x58 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf95d, gbc.sp());
        EXPECT(0x6092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0146
        gbc.setState(0x6553, 0xbac8, 0xe2a0, 0xc31c, 0x4e6, 0xd924, 0x0, 0x0);
        gbc.writeMem(0x6553, { 0x58 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbac8, gbc.sp());
        EXPECT(0x6554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0147
        gbc.setState(0xdbbb, 0x258f, 0xda50, 0xc775, 0xb423, 0x41f1, 0x0, 0x1);
        gbc.writeMem(0xdbbb, { 0x58 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x258f, gbc.sp());
        EXPECT(0xdbbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdbbb));
        // 58 0148
        gbc.setState(0xae8f, 0x8d, 0x44e0, 0xcf04, 0x2c90, 0x2d9b, 0x0, 0x1);
        gbc.writeMem(0xae8f, { 0x58 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8d, gbc.sp());
        EXPECT(0xae90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xae8f));
        // 58 0149
        gbc.setState(0xc720, 0x8ed1, 0xe530, 0xd284, 0x81e1, 0xbe83, 0x0, 0x1);
        gbc.writeMem(0xc720, { 0x58 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8ed1, gbc.sp());
        EXPECT(0xc721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc720));
        // 58 014A
        gbc.setState(0x6ca6, 0x20e3, 0x67e0, 0xc304, 0xc265, 0x7d19, 0x0, 0x1);
        gbc.writeMem(0x6ca6, { 0x58 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x20e3, gbc.sp());
        EXPECT(0x6ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 014B
        gbc.setState(0x72a1, 0x4907, 0x8d0, 0x4372, 0xc059, 0xc96f, 0x0, 0x0);
        gbc.writeMem(0x72a1, { 0x58 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4907, gbc.sp());
        EXPECT(0x72a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 014C
        gbc.setState(0x83da, 0xba4b, 0xfb60, 0xdc5a, 0xf47d, 0x1346, 0x0, 0x1);
        gbc.writeMem(0x83da, { 0x58 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xba4b, gbc.sp());
        EXPECT(0x83db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x83da));
        // 58 014D
        gbc.setState(0xe33a, 0x9824, 0x4c50, 0xe8fc, 0x6703, 0x2e4c, 0x1, 0x0);
        gbc.writeMem(0xe33a, { 0x58 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9824, gbc.sp());
        EXPECT(0xe33b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe33a));
        // 58 014E
        gbc.setState(0x604d, 0xa03e, 0xb670, 0xbb19, 0xab65, 0x84f3, 0x0, 0x0);
        gbc.writeMem(0x604d, { 0x58 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa03e, gbc.sp());
        EXPECT(0x604e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0150
        gbc.setState(0x90b2, 0xd46a, 0x410, 0x345d, 0x53a8, 0x50fb, 0x1, 0x0);
        gbc.writeMem(0x90b2, { 0x58 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd46a, gbc.sp());
        EXPECT(0x90b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x90b2));
        // 58 0151
        gbc.setState(0xcb6f, 0x21a5, 0x6470, 0x7b7f, 0xe5c9, 0xe0a6, 0x1, 0x0);
        gbc.writeMem(0xcb6f, { 0x58 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x21a5, gbc.sp());
        EXPECT(0xcb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xcb6f));
        // 58 0152
        gbc.setState(0x3326, 0x3e87, 0xc9b0, 0xebaa, 0xf0c8, 0xcb7d, 0x0, 0x1);
        gbc.writeMem(0x3326, { 0x58 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3e87, gbc.sp());
        EXPECT(0x3327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0153
        gbc.setState(0xc93f, 0x6190, 0xbab0, 0x6a05, 0x8a73, 0x96f4, 0x1, 0x0);
        gbc.writeMem(0xc93f, { 0x58 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6190, gbc.sp());
        EXPECT(0xc940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc93f));
        // 58 0154
        gbc.setState(0x1c70, 0xca2d, 0xd8c0, 0x8187, 0x9e08, 0x7a3e, 0x0, 0x0);
        gbc.writeMem(0x1c70, { 0x58 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xca2d, gbc.sp());
        EXPECT(0x1c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0156
        gbc.setState(0x7168, 0x1407, 0xc950, 0x86ef, 0x5f86, 0x5d0d, 0x1, 0x1);
        gbc.writeMem(0x7168, { 0x58 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1407, gbc.sp());
        EXPECT(0x7169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0157
        gbc.setState(0xcc3b, 0x2799, 0x8180, 0x4fdf, 0xead6, 0x3a60, 0x1, 0x1);
        gbc.writeMem(0xcc3b, { 0x58 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2799, gbc.sp());
        EXPECT(0xcc3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xcc3b));
        // 58 0158
        gbc.setState(0x2d43, 0x4b8b, 0x66f0, 0x1b2f, 0x1ef1, 0xd5eb, 0x1, 0x1);
        gbc.writeMem(0x2d43, { 0x58 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4b8b, gbc.sp());
        EXPECT(0x2d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0159
        gbc.setState(0x9233, 0xed09, 0xf1b0, 0x81f1, 0x63e2, 0xa3c, 0x0, 0x0);
        gbc.writeMem(0x9233, { 0x58 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xed09, gbc.sp());
        EXPECT(0x9234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9233));
        // 58 015A
        gbc.setState(0xae67, 0xf01b, 0x9420, 0x3a20, 0xf41c, 0xe34a, 0x0, 0x0);
        gbc.writeMem(0xae67, { 0x58 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf01b, gbc.sp());
        EXPECT(0xae68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xae67));
        // 58 015B
        gbc.setState(0x4ea0, 0x15b7, 0x8920, 0xdfa2, 0xc44c, 0xbaac, 0x1, 0x1);
        gbc.writeMem(0x4ea0, { 0x58 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x15b7, gbc.sp());
        EXPECT(0x4ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 015C
        gbc.setState(0x7c85, 0x7b67, 0x1520, 0x287e, 0x8b7b, 0xa457, 0x0, 0x0);
        gbc.writeMem(0x7c85, { 0x58 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7b67, gbc.sp());
        EXPECT(0x7c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 015D
        gbc.setState(0x52c8, 0x446f, 0x5890, 0x5c6e, 0x53f4, 0x5f, 0x0, 0x0);
        gbc.writeMem(0x52c8, { 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x446f, gbc.sp());
        EXPECT(0x52c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 015E
        gbc.setState(0xec5, 0x6488, 0xd9a0, 0x4c58, 0x1ded, 0x11c, 0x1, 0x1);
        gbc.writeMem(0xec5, { 0x58 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6488, gbc.sp());
        EXPECT(0xec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 015F
        gbc.setState(0xa633, 0x6562, 0xd890, 0x1da0, 0xf692, 0x15, 0x1, 0x1);
        gbc.writeMem(0xa633, { 0x58 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6562, gbc.sp());
        EXPECT(0xa634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa633));
        // 58 0160
        gbc.setState(0x2d35, 0xdbdb, 0x4e40, 0x96c9, 0xb8, 0xd930, 0x1, 0x0);
        gbc.writeMem(0x2d35, { 0x58 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdbdb, gbc.sp());
        EXPECT(0x2d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0161
        gbc.setState(0x9e58, 0xfe81, 0x80b0, 0x7bc1, 0x133b, 0x6206, 0x0, 0x0);
        gbc.writeMem(0x9e58, { 0x58 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfe81, gbc.sp());
        EXPECT(0x9e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9e58));
        // 58 0162
        gbc.setState(0x1f45, 0x434f, 0xf590, 0x3972, 0x4226, 0x7071, 0x0, 0x0);
        gbc.writeMem(0x1f45, { 0x58 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x434f, gbc.sp());
        EXPECT(0x1f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0163
        gbc.setState(0x3fc0, 0x842e, 0xe5c0, 0xb40f, 0x28a4, 0xe48d, 0x1, 0x0);
        gbc.writeMem(0x3fc0, { 0x58 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x842e, gbc.sp());
        EXPECT(0x3fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0164
        gbc.setState(0xa087, 0xd37c, 0x8620, 0x5838, 0xbd59, 0x9f2a, 0x0, 0x1);
        gbc.writeMem(0xa087, { 0x58 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd37c, gbc.sp());
        EXPECT(0xa088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa087));
        // 58 0165
        gbc.setState(0xc945, 0x55a3, 0xd900, 0x1bff, 0x6822, 0x4e39, 0x0, 0x1);
        gbc.writeMem(0xc945, { 0x58 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x55a3, gbc.sp());
        EXPECT(0xc946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc945));
        // 58 0166
        gbc.setState(0x4bd4, 0x5800, 0xfd60, 0x5bfb, 0xb2d5, 0xdf5, 0x0, 0x0);
        gbc.writeMem(0x4bd4, { 0x58 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5800, gbc.sp());
        EXPECT(0x4bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0167
        gbc.setState(0xe76d, 0x90a9, 0x29f0, 0x4b3, 0x619e, 0xa635, 0x0, 0x1);
        gbc.writeMem(0xe76d, { 0x58 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x90a9, gbc.sp());
        EXPECT(0xe76e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe76d));
        // 58 0168
        gbc.setState(0xee24, 0x6793, 0xb710, 0x8839, 0xb6c2, 0xfab7, 0x0, 0x1);
        gbc.writeMem(0xee24, { 0x58 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6793, gbc.sp());
        EXPECT(0xee25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xee24));
        // 58 016A
        gbc.setState(0x3a27, 0x923f, 0x3a90, 0x8f04, 0xa399, 0x59c9, 0x0, 0x0);
        gbc.writeMem(0x3a27, { 0x58 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x923f, gbc.sp());
        EXPECT(0x3a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 016B
        gbc.setState(0x46f6, 0xaff0, 0x38e0, 0xd0cf, 0x6d83, 0x6cfc, 0x1, 0x1);
        gbc.writeMem(0x46f6, { 0x58 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xaff0, gbc.sp());
        EXPECT(0x46f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 016C
        gbc.setState(0x7584, 0xdb93, 0x78b0, 0xdc3b, 0x5c73, 0xb2c6, 0x1, 0x1);
        gbc.writeMem(0x7584, { 0x58 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdb93, gbc.sp());
        EXPECT(0x7585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 016D
        gbc.setState(0x98d9, 0xf50c, 0x5710, 0xabf, 0x6fc, 0x4834, 0x0, 0x1);
        gbc.writeMem(0x98d9, { 0x58 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf50c, gbc.sp());
        EXPECT(0x98da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x98d9));
        // 58 016E
        gbc.setState(0xa9ab, 0xa3f3, 0x30f0, 0xacb1, 0x2997, 0xe238, 0x1, 0x1);
        gbc.writeMem(0xa9ab, { 0x58 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa3f3, gbc.sp());
        EXPECT(0xa9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa9ab));
        // 58 016F
        gbc.setState(0x6df9, 0xa035, 0x39c0, 0xc12b, 0x8fb, 0xa677, 0x0, 0x0);
        gbc.writeMem(0x6df9, { 0x58 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa035, gbc.sp());
        EXPECT(0x6dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0170
        gbc.setState(0x9340, 0x729, 0xc000, 0xb2c7, 0xad16, 0x6a9e, 0x1, 0x1);
        gbc.writeMem(0x9340, { 0x58 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x729, gbc.sp());
        EXPECT(0x9341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9340));
        // 58 0171
        gbc.setState(0x5fca, 0x9a4a, 0x5730, 0x2904, 0xe6b1, 0x1aea, 0x0, 0x0);
        gbc.writeMem(0x5fca, { 0x58 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9a4a, gbc.sp());
        EXPECT(0x5fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0172
        gbc.setState(0xbe4, 0xde8b, 0xb970, 0x245d, 0xaa7b, 0x50a6, 0x0, 0x1);
        gbc.writeMem(0xbe4, { 0x58 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xde8b, gbc.sp());
        EXPECT(0xbe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0174
        gbc.setState(0xa3bb, 0xcbd6, 0x9560, 0xe7b4, 0xdf9b, 0xd219, 0x1, 0x1);
        gbc.writeMem(0xa3bb, { 0x58 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xcbd6, gbc.sp());
        EXPECT(0xa3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa3bb));
        // 58 0175
        gbc.setState(0x9742, 0xeb1d, 0x6b60, 0xee, 0x8a18, 0xd874, 0x0, 0x1);
        gbc.writeMem(0x9742, { 0x58 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xeb1d, gbc.sp());
        EXPECT(0x9743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9742));
        // 58 0176
        gbc.setState(0xec49, 0xc867, 0xb1e0, 0x5c07, 0xcd2e, 0x3b79, 0x1, 0x0);
        gbc.writeMem(0xec49, { 0x58 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc867, gbc.sp());
        EXPECT(0xec4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xec49));
        // 58 0177
        gbc.setState(0x47da, 0x36a0, 0x9bf0, 0x1c04, 0x73c, 0x4fb3, 0x1, 0x0);
        gbc.writeMem(0x47da, { 0x58 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x36a0, gbc.sp());
        EXPECT(0x47db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0178
        gbc.setState(0x928b, 0xa715, 0x2c00, 0xe712, 0xeaef, 0x226d, 0x1, 0x0);
        gbc.writeMem(0x928b, { 0x58 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa715, gbc.sp());
        EXPECT(0x928c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x928b));
        // 58 0179
        gbc.setState(0xe66e, 0x4707, 0x83e0, 0x1359, 0xd2a0, 0xf88e, 0x0, 0x0);
        gbc.writeMem(0xe66e, { 0x58 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4707, gbc.sp());
        EXPECT(0xe66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe66e));
        // 58 017A
        gbc.setState(0xb009, 0xd349, 0x3c30, 0xb109, 0xe322, 0x7d41, 0x0, 0x0);
        gbc.writeMem(0xb009, { 0x58 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd349, gbc.sp());
        EXPECT(0xb00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb009));
        // 58 017B
        gbc.setState(0xa61f, 0x78f8, 0xd9d0, 0xefe, 0xdf12, 0xece5, 0x0, 0x0);
        gbc.writeMem(0xa61f, { 0x58 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x78f8, gbc.sp());
        EXPECT(0xa620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa61f));
        // 58 017C
        gbc.setState(0xc9b0, 0x37d, 0x4e80, 0x4c17, 0xbdb3, 0x47db, 0x1, 0x1);
        gbc.writeMem(0xc9b0, { 0x58 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x37d, gbc.sp());
        EXPECT(0xc9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc9b0));
        // 58 017D
        gbc.setState(0x5adb, 0xa725, 0x8010, 0xb1fa, 0xa993, 0x915f, 0x0, 0x1);
        gbc.writeMem(0x5adb, { 0x58 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa725, gbc.sp());
        EXPECT(0x5adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 017E
        gbc.setState(0xab18, 0xf176, 0xfd30, 0xd640, 0x6d, 0xe1b1, 0x1, 0x0);
        gbc.writeMem(0xab18, { 0x58 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf176, gbc.sp());
        EXPECT(0xab19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xab18));
        // 58 017F
        gbc.setState(0x6737, 0x1768, 0x6140, 0x156e, 0xfd13, 0x8442, 0x1, 0x0);
        gbc.writeMem(0x6737, { 0x58 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1768, gbc.sp());
        EXPECT(0x6738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0180
        gbc.setState(0xc5b1, 0xe10d, 0x40, 0x8527, 0x12ae, 0xe699, 0x1, 0x1);
        gbc.writeMem(0xc5b1, { 0x58 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe10d, gbc.sp());
        EXPECT(0xc5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc5b1));
        // 58 0181
        gbc.setState(0xe2ad, 0xdfe, 0xb6a0, 0xa64b, 0xd9ac, 0x68cc, 0x0, 0x1);
        gbc.writeMem(0xe2ad, { 0x58 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdfe, gbc.sp());
        EXPECT(0xe2ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe2ad));
        // 58 0182
        gbc.setState(0xe5e4, 0xacd4, 0x2a00, 0x6467, 0x82f9, 0x9b90, 0x0, 0x1);
        gbc.writeMem(0xe5e4, { 0x58 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xacd4, gbc.sp());
        EXPECT(0xe5e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe5e4));
        // 58 0183
        gbc.setState(0x2a8c, 0x3904, 0x7180, 0x1606, 0xcd23, 0x729, 0x1, 0x0);
        gbc.writeMem(0x2a8c, { 0x58 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3904, gbc.sp());
        EXPECT(0x2a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0184
        gbc.setState(0x195a, 0xc807, 0x68f0, 0xc5e9, 0xdb9d, 0x43c2, 0x1, 0x1);
        gbc.writeMem(0x195a, { 0x58 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc807, gbc.sp());
        EXPECT(0x195b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0185
        gbc.setState(0x6de6, 0xeeb4, 0xd0e0, 0x163d, 0xb011, 0x52d4, 0x0, 0x1);
        gbc.writeMem(0x6de6, { 0x58 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xeeb4, gbc.sp());
        EXPECT(0x6de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0186
        gbc.setState(0x2f8d, 0x3348, 0xbc90, 0xf0de, 0x1745, 0x8fc7, 0x1, 0x0);
        gbc.writeMem(0x2f8d, { 0x58 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3348, gbc.sp());
        EXPECT(0x2f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0187
        gbc.setState(0x89d9, 0xe232, 0x9e00, 0xfad0, 0xf924, 0x9b35, 0x1, 0x1);
        gbc.writeMem(0x89d9, { 0x58 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe232, gbc.sp());
        EXPECT(0x89da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x89d9));
        // 58 0188
        gbc.setState(0xdb84, 0x3d9a, 0x30c0, 0x9aad, 0xd85b, 0x41c9, 0x0, 0x1);
        gbc.writeMem(0xdb84, { 0x58 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3d9a, gbc.sp());
        EXPECT(0xdb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdb84));
        // 58 0189
        gbc.setState(0xc924, 0x2b32, 0x86b0, 0x71c0, 0xd327, 0x7547, 0x0, 0x1);
        gbc.writeMem(0xc924, { 0x58 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2b32, gbc.sp());
        EXPECT(0xc925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc924));
        // 58 018A
        gbc.setState(0x7550, 0x5809, 0x410, 0xc6f9, 0xde62, 0xa2a3, 0x1, 0x0);
        gbc.writeMem(0x7550, { 0x58 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5809, gbc.sp());
        EXPECT(0x7551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 018B
        gbc.setState(0x6df6, 0x5ff2, 0xea40, 0xbbc0, 0xb55, 0xa01, 0x1, 0x1);
        gbc.writeMem(0x6df6, { 0x58 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5ff2, gbc.sp());
        EXPECT(0x6df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 018C
        gbc.setState(0x727a, 0x305, 0x3820, 0x106a, 0x42e3, 0xb1eb, 0x0, 0x0);
        gbc.writeMem(0x727a, { 0x58 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x305, gbc.sp());
        EXPECT(0x727b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 018D
        gbc.setState(0x240, 0xf749, 0x79a0, 0x8eef, 0x77dc, 0x288f, 0x0, 0x0);
        gbc.writeMem(0x240, { 0x58 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf749, gbc.sp());
        EXPECT(0x241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 018E
        gbc.setState(0x1845, 0x1654, 0xb890, 0xc670, 0x6d82, 0xd451, 0x0, 0x0);
        gbc.writeMem(0x1845, { 0x58 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1654, gbc.sp());
        EXPECT(0x1846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 018F
        gbc.setState(0xe7b8, 0x3f2f, 0x3990, 0x6cfd, 0x5b93, 0x5023, 0x1, 0x1);
        gbc.writeMem(0xe7b8, { 0x58 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3f2f, gbc.sp());
        EXPECT(0xe7b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe7b8));
        // 58 0190
        gbc.setState(0x14fd, 0xffce, 0x5fe0, 0xd3d5, 0xfa6c, 0xf232, 0x0, 0x0);
        gbc.writeMem(0x14fd, { 0x58 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xffce, gbc.sp());
        EXPECT(0x14fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0191
        gbc.setState(0x3e37, 0xe31b, 0xbd50, 0x1e88, 0xb62d, 0x9121, 0x0, 0x1);
        gbc.writeMem(0x3e37, { 0x58 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe31b, gbc.sp());
        EXPECT(0x3e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0192
        gbc.setState(0x4d33, 0x3f97, 0x9750, 0x30f4, 0xaa31, 0xcdce, 0x0, 0x1);
        gbc.writeMem(0x4d33, { 0x58 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3f97, gbc.sp());
        EXPECT(0x4d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0194
        gbc.setState(0x4301, 0x479e, 0x1bc0, 0xf47a, 0x4524, 0xe717, 0x1, 0x0);
        gbc.writeMem(0x4301, { 0x58 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x479e, gbc.sp());
        EXPECT(0x4302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0195
        gbc.setState(0xac57, 0xef15, 0xeca0, 0xe374, 0x14dc, 0x889a, 0x0, 0x1);
        gbc.writeMem(0xac57, { 0x58 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xef15, gbc.sp());
        EXPECT(0xac58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xac57));
        // 58 0196
        gbc.setState(0xbe81, 0x84bf, 0x7a30, 0x8f6e, 0x4d7, 0x1472, 0x1, 0x1);
        gbc.writeMem(0xbe81, { 0x58 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x84bf, gbc.sp());
        EXPECT(0xbe82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbe81));
        // 58 0197
        gbc.setState(0x71d, 0x263f, 0x2160, 0x20e7, 0x2a05, 0xa880, 0x0, 0x0);
        gbc.writeMem(0x71d, { 0x58 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x263f, gbc.sp());
        EXPECT(0x71e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0198
        gbc.setState(0x1157, 0xd535, 0x8380, 0xd09a, 0xc1ef, 0x2a67, 0x1, 0x0);
        gbc.writeMem(0x1157, { 0x58 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd535, gbc.sp());
        EXPECT(0x1158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0199
        gbc.setState(0x74dd, 0x184b, 0xc2a0, 0x8582, 0xbbd8, 0xf759, 0x0, 0x0);
        gbc.writeMem(0x74dd, { 0x58 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x184b, gbc.sp());
        EXPECT(0x74de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 019A
        gbc.setState(0x5058, 0x8ac2, 0x8330, 0xf31b, 0xa0c3, 0x3d45, 0x0, 0x0);
        gbc.writeMem(0x5058, { 0x58 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8ac2, gbc.sp());
        EXPECT(0x5059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 019B
        gbc.setState(0x10fa, 0xc127, 0x110, 0xbfba, 0xaaab, 0xae3e, 0x1, 0x0);
        gbc.writeMem(0x10fa, { 0x58 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc127, gbc.sp());
        EXPECT(0x10fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 019C
        gbc.setState(0xb701, 0xf21e, 0xd100, 0xd37f, 0xb089, 0x49e1, 0x0, 0x0);
        gbc.writeMem(0xb701, { 0x58 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf21e, gbc.sp());
        EXPECT(0xb702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb701));
        // 58 019D
        gbc.setState(0x1299, 0x20a4, 0xaad0, 0x34e4, 0xef99, 0x6656, 0x1, 0x1);
        gbc.writeMem(0x1299, { 0x58 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x20a4, gbc.sp());
        EXPECT(0x129a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 019E
        gbc.setState(0x50c2, 0x374, 0x75d0, 0xcdf7, 0x8f2a, 0x23af, 0x1, 0x0);
        gbc.writeMem(0x50c2, { 0x58 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x374, gbc.sp());
        EXPECT(0x50c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 019F
        gbc.setState(0x77fc, 0xf1e4, 0xb5f0, 0xdfb2, 0x347e, 0x1113, 0x0, 0x0);
        gbc.writeMem(0x77fc, { 0x58 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf1e4, gbc.sp());
        EXPECT(0x77fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01A0
        gbc.setState(0x1240, 0x9cd0, 0x7050, 0x9b7, 0xa54a, 0xf5a0, 0x1, 0x1);
        gbc.writeMem(0x1240, { 0x58 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9cd0, gbc.sp());
        EXPECT(0x1241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01A1
        gbc.setState(0x5ef2, 0xd2be, 0xd680, 0x4a5f, 0x7308, 0x765, 0x0, 0x1);
        gbc.writeMem(0x5ef2, { 0x58 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd2be, gbc.sp());
        EXPECT(0x5ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01A2
        gbc.setState(0xb7ed, 0xd46d, 0xf8f0, 0x89d9, 0xcbb1, 0x310a, 0x0, 0x0);
        gbc.writeMem(0xb7ed, { 0x58 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd46d, gbc.sp());
        EXPECT(0xb7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb7ed));
        // 58 01A3
        gbc.setState(0x9470, 0x2ee0, 0x4830, 0x6ea7, 0x7ad0, 0xcce8, 0x0, 0x0);
        gbc.writeMem(0x9470, { 0x58 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2ee0, gbc.sp());
        EXPECT(0x9471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9470));
        // 58 01A4
        gbc.setState(0x2a39, 0x7fa1, 0x97d0, 0xb26d, 0xf634, 0xe06a, 0x1, 0x1);
        gbc.writeMem(0x2a39, { 0x58 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7fa1, gbc.sp());
        EXPECT(0x2a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01A5
        gbc.setState(0x8ea3, 0x1f28, 0x9030, 0xb536, 0xf07a, 0xb7e5, 0x0, 0x1);
        gbc.writeMem(0x8ea3, { 0x58 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1f28, gbc.sp());
        EXPECT(0x8ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8ea3));
        // 58 01A6
        gbc.setState(0x38d1, 0xd311, 0xca10, 0x3f5b, 0xb58, 0xf8ed, 0x1, 0x1);
        gbc.writeMem(0x38d1, { 0x58 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd311, gbc.sp());
        EXPECT(0x38d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01A7
        gbc.setState(0xd6a6, 0x364e, 0xccc0, 0x14c1, 0x6521, 0xd0b0, 0x0, 0x1);
        gbc.writeMem(0xd6a6, { 0x58 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x364e, gbc.sp());
        EXPECT(0xd6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd6a6));
        // 58 01A8
        gbc.setState(0xd856, 0xca59, 0x4710, 0xc69, 0xae6a, 0x522a, 0x0, 0x1);
        gbc.writeMem(0xd856, { 0x58 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xca59, gbc.sp());
        EXPECT(0xd857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd856));
        // 58 01A9
        gbc.setState(0x30e3, 0xc842, 0x5130, 0xaa21, 0x57b1, 0x4870, 0x0, 0x1);
        gbc.writeMem(0x30e3, { 0x58 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc842, gbc.sp());
        EXPECT(0x30e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01AA
        gbc.setState(0x199e, 0x40e8, 0x68b0, 0xa0a2, 0x293e, 0x8421, 0x1, 0x1);
        gbc.writeMem(0x199e, { 0x58 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x40e8, gbc.sp());
        EXPECT(0x199f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01AB
        gbc.setState(0x6429, 0x1d24, 0x7e70, 0xbce1, 0xba7c, 0x7f7d, 0x0, 0x1);
        gbc.writeMem(0x6429, { 0x58 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1d24, gbc.sp());
        EXPECT(0x642a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01AC
        gbc.setState(0xa9bd, 0xe0f4, 0xfab0, 0xd8d8, 0xd994, 0x980f, 0x1, 0x0);
        gbc.writeMem(0xa9bd, { 0x58 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe0f4, gbc.sp());
        EXPECT(0xa9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa9bd));
        // 58 01AD
        gbc.setState(0x1fee, 0x42df, 0xe2a0, 0x772f, 0x6860, 0xec31, 0x0, 0x0);
        gbc.writeMem(0x1fee, { 0x58 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x42df, gbc.sp());
        EXPECT(0x1fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01AE
        gbc.setState(0xddbc, 0x785b, 0xe0f0, 0x60be, 0xae17, 0xd626, 0x0, 0x1);
        gbc.writeMem(0xddbc, { 0x58 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x785b, gbc.sp());
        EXPECT(0xddbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xddbc));
        // 58 01AF
        gbc.setState(0xe29b, 0x40e2, 0x33f0, 0x2e9c, 0xd273, 0x1654, 0x0, 0x0);
        gbc.writeMem(0xe29b, { 0x58 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x40e2, gbc.sp());
        EXPECT(0xe29c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe29b));
        // 58 01B0
        gbc.setState(0xda66, 0x108c, 0x4ba0, 0x41d, 0x2f7a, 0x67f8, 0x0, 0x0);
        gbc.writeMem(0xda66, { 0x58 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x108c, gbc.sp());
        EXPECT(0xda67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xda66));
        // 58 01B1
        gbc.setState(0xdd61, 0x4483, 0x7030, 0x95a0, 0x9d41, 0x4d33, 0x1, 0x0);
        gbc.writeMem(0xdd61, { 0x58 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4483, gbc.sp());
        EXPECT(0xdd62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdd61));
        // 58 01B2
        gbc.setState(0x9575, 0x71bc, 0x68e0, 0x1a78, 0xec89, 0x5da5, 0x1, 0x1);
        gbc.writeMem(0x9575, { 0x58 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x71bc, gbc.sp());
        EXPECT(0x9576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9575));
        // 58 01B3
        gbc.setState(0xae81, 0x4343, 0x84e0, 0x6896, 0x8c85, 0xe8bf, 0x1, 0x1);
        gbc.writeMem(0xae81, { 0x58 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4343, gbc.sp());
        EXPECT(0xae82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xae81));
        // 58 01B4
        gbc.setState(0xe310, 0xfbdc, 0x6640, 0x36d9, 0x3ad1, 0x7ccb, 0x1, 0x1);
        gbc.writeMem(0xe310, { 0x58 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfbdc, gbc.sp());
        EXPECT(0xe311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe310));
        // 58 01B5
        gbc.setState(0xf, 0x971a, 0x3c20, 0xf4d8, 0x9f95, 0x84f3, 0x0, 0x1);
        gbc.writeMem(0xf, { 0x58 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x971a, gbc.sp());
        EXPECT(0x10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01B6
        gbc.setState(0x85c4, 0xb70c, 0xbc30, 0x8713, 0xea96, 0x8b55, 0x1, 0x0);
        gbc.writeMem(0x85c4, { 0x58 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb70c, gbc.sp());
        EXPECT(0x85c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x85c4));
        // 58 01B7
        gbc.setState(0x3a3b, 0x404f, 0x1100, 0x2798, 0xd67b, 0xb894, 0x1, 0x0);
        gbc.writeMem(0x3a3b, { 0x58 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x404f, gbc.sp());
        EXPECT(0x3a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01B8
        gbc.setState(0xace5, 0x97a3, 0x7c70, 0xab06, 0x4807, 0xdd65, 0x0, 0x0);
        gbc.writeMem(0xace5, { 0x58 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x97a3, gbc.sp());
        EXPECT(0xace6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xace5));
        // 58 01B9
        gbc.setState(0xab80, 0xc433, 0xa980, 0x1cc1, 0x22e4, 0x7d70, 0x1, 0x1);
        gbc.writeMem(0xab80, { 0x58 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc433, gbc.sp());
        EXPECT(0xab81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xab80));
        // 58 01BA
        gbc.setState(0xefd4, 0x69f9, 0xe440, 0x1d1d, 0x5288, 0x5f58, 0x1, 0x1);
        gbc.writeMem(0xefd4, { 0x58 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x69f9, gbc.sp());
        EXPECT(0xefd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xefd4));
        // 58 01BB
        gbc.setState(0x3e4f, 0x8816, 0x5030, 0xdafc, 0xfa9f, 0x25a7, 0x1, 0x1);
        gbc.writeMem(0x3e4f, { 0x58 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8816, gbc.sp());
        EXPECT(0x3e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01BC
        gbc.setState(0xb29c, 0xbff, 0xd640, 0x4c74, 0xe72, 0xb78d, 0x1, 0x0);
        gbc.writeMem(0xb29c, { 0x58 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbff, gbc.sp());
        EXPECT(0xb29d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb29c));
        // 58 01BD
        gbc.setState(0xaf41, 0x759f, 0xcb0, 0x7c36, 0x6ffd, 0xee28, 0x0, 0x1);
        gbc.writeMem(0xaf41, { 0x58 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x759f, gbc.sp());
        EXPECT(0xaf42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xaf41));
        // 58 01BE
        gbc.setState(0x84cd, 0xcad, 0x1b00, 0x220b, 0x27db, 0xb0e3, 0x0, 0x1);
        gbc.writeMem(0x84cd, { 0x58 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcad, gbc.sp());
        EXPECT(0x84ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x84cd));
        // 58 01BF
        gbc.setState(0x628e, 0x282, 0xe820, 0xe809, 0x6734, 0xd158, 0x1, 0x1);
        gbc.writeMem(0x628e, { 0x58 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x282, gbc.sp());
        EXPECT(0x628f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01C0
        gbc.setState(0x4273, 0xa7f6, 0x97b0, 0xd391, 0x7f7c, 0xf99e, 0x0, 0x1);
        gbc.writeMem(0x4273, { 0x58 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa7f6, gbc.sp());
        EXPECT(0x4274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01C1
        gbc.setState(0x8677, 0xa794, 0xc770, 0x10c4, 0x6d98, 0x5762, 0x1, 0x0);
        gbc.writeMem(0x8677, { 0x58 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa794, gbc.sp());
        EXPECT(0x8678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8677));
        // 58 01C2
        gbc.setState(0x7a82, 0x5436, 0x6a10, 0x292c, 0x32ef, 0xa30f, 0x0, 0x1);
        gbc.writeMem(0x7a82, { 0x58 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5436, gbc.sp());
        EXPECT(0x7a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01C3
        gbc.setState(0xbd57, 0xe139, 0xed10, 0x45da, 0x7c5b, 0x8345, 0x0, 0x0);
        gbc.writeMem(0xbd57, { 0x58 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe139, gbc.sp());
        EXPECT(0xbd58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbd57));
        // 58 01C4
        gbc.setState(0x21d4, 0xe2f4, 0xb9a0, 0xf0c8, 0x5dc7, 0xbeb, 0x0, 0x1);
        gbc.writeMem(0x21d4, { 0x58 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe2f4, gbc.sp());
        EXPECT(0x21d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01C5
        gbc.setState(0x3356, 0x94b0, 0xeec0, 0x7707, 0xe0bd, 0x5fa0, 0x1, 0x1);
        gbc.writeMem(0x3356, { 0x58 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x94b0, gbc.sp());
        EXPECT(0x3357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01C6
        gbc.setState(0xbb07, 0x2432, 0xac0, 0x47f4, 0x55fe, 0xc821, 0x1, 0x0);
        gbc.writeMem(0xbb07, { 0x58 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2432, gbc.sp());
        EXPECT(0xbb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbb07));
        // 58 01C7
        gbc.setState(0x8a26, 0xfa8c, 0x39c0, 0xbd04, 0xb879, 0x8a46, 0x1, 0x0);
        gbc.writeMem(0x8a26, { 0x58 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfa8c, gbc.sp());
        EXPECT(0x8a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8a26));
        // 58 01C8
        gbc.setState(0xaca8, 0x521, 0x8880, 0x27c7, 0x64fe, 0x8c16, 0x1, 0x0);
        gbc.writeMem(0xaca8, { 0x58 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x521, gbc.sp());
        EXPECT(0xaca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xaca8));
        // 58 01C9
        gbc.setState(0x8b5d, 0x6f4a, 0x69d0, 0x29eb, 0xe59c, 0xef66, 0x0, 0x1);
        gbc.writeMem(0x8b5d, { 0x58 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6f4a, gbc.sp());
        EXPECT(0x8b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8b5d));
        // 58 01CA
        gbc.setState(0x2156, 0x2553, 0x6a10, 0x246e, 0x657d, 0xe1e2, 0x0, 0x1);
        gbc.writeMem(0x2156, { 0x58 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2553, gbc.sp());
        EXPECT(0x2157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01CB
        gbc.setState(0x5ee7, 0x90c2, 0x8880, 0x68c4, 0x11f7, 0xcaec, 0x0, 0x0);
        gbc.writeMem(0x5ee7, { 0x58 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x90c2, gbc.sp());
        EXPECT(0x5ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01CC
        gbc.setState(0x485f, 0xc5c1, 0x1780, 0x18e8, 0xc81f, 0x8fdd, 0x1, 0x0);
        gbc.writeMem(0x485f, { 0x58 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc5c1, gbc.sp());
        EXPECT(0x4860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01CD
        gbc.setState(0x3d8f, 0x2747, 0xbf50, 0x46e4, 0xc47b, 0x7df0, 0x0, 0x0);
        gbc.writeMem(0x3d8f, { 0x58 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2747, gbc.sp());
        EXPECT(0x3d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01CE
        gbc.setState(0x2036, 0x43f8, 0xb550, 0x50d7, 0x7302, 0x4666, 0x0, 0x0);
        gbc.writeMem(0x2036, { 0x58 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x43f8, gbc.sp());
        EXPECT(0x2037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01CF
        gbc.setState(0x9cd7, 0xdffb, 0x3990, 0xa5c2, 0x45fc, 0xc1be, 0x0, 0x1);
        gbc.writeMem(0x9cd7, { 0x58 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdffb, gbc.sp());
        EXPECT(0x9cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9cd7));
        // 58 01D0
        gbc.setState(0x6652, 0xaf7c, 0xa320, 0xf53b, 0x373d, 0x41d5, 0x1, 0x1);
        gbc.writeMem(0x6652, { 0x58 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xaf7c, gbc.sp());
        EXPECT(0x6653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01D1
        gbc.setState(0x59f7, 0xd848, 0x9270, 0x96b0, 0x89c1, 0xfb1d, 0x1, 0x1);
        gbc.writeMem(0x59f7, { 0x58 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd848, gbc.sp());
        EXPECT(0x59f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01D2
        gbc.setState(0xdb6b, 0xc3dc, 0xdf90, 0x2039, 0x9c8d, 0xa586, 0x1, 0x0);
        gbc.writeMem(0xdb6b, { 0x58 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc3dc, gbc.sp());
        EXPECT(0xdb6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdb6b));
        // 58 01D3
        gbc.setState(0x6004, 0xa769, 0xe6e0, 0xe415, 0x9c11, 0x3e6c, 0x0, 0x0);
        gbc.writeMem(0x6004, { 0x58 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa769, gbc.sp());
        EXPECT(0x6005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01D4
        gbc.setState(0x3b40, 0x4a0d, 0x76d0, 0xb137, 0x4053, 0x2db3, 0x0, 0x1);
        gbc.writeMem(0x3b40, { 0x58 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4a0d, gbc.sp());
        EXPECT(0x3b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01D5
        gbc.setState(0x3267, 0x4090, 0xb890, 0xda56, 0x441b, 0xb13d, 0x1, 0x0);
        gbc.writeMem(0x3267, { 0x58 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4090, gbc.sp());
        EXPECT(0x3268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01D6
        gbc.setState(0x58e8, 0xcb0c, 0xed10, 0x7d9f, 0xae5d, 0xd029, 0x1, 0x0);
        gbc.writeMem(0x58e8, { 0x58 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcb0c, gbc.sp());
        EXPECT(0x58e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01D9
        gbc.setState(0x3270, 0x97e1, 0x9270, 0xa55d, 0x8089, 0x3539, 0x0, 0x0);
        gbc.writeMem(0x3270, { 0x58 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x97e1, gbc.sp());
        EXPECT(0x3271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01DB
        gbc.setState(0x36bf, 0x4c3d, 0x4310, 0x4288, 0xaeb0, 0x4af0, 0x0, 0x1);
        gbc.writeMem(0x36bf, { 0x58 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4c3d, gbc.sp());
        EXPECT(0x36c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01DC
        gbc.setState(0xd069, 0x6eec, 0x7670, 0x9fdd, 0x10dd, 0xa53f, 0x0, 0x1);
        gbc.writeMem(0xd069, { 0x58 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6eec, gbc.sp());
        EXPECT(0xd06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd069));
        // 58 01DD
        gbc.setState(0x5fa0, 0xb98f, 0xdbe0, 0xd2f8, 0xa1eb, 0x3672, 0x0, 0x0);
        gbc.writeMem(0x5fa0, { 0x58 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb98f, gbc.sp());
        EXPECT(0x5fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01DE
        gbc.setState(0x45bc, 0xe1bc, 0x3370, 0x2e8d, 0xd1f5, 0x2722, 0x0, 0x1);
        gbc.writeMem(0x45bc, { 0x58 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe1bc, gbc.sp());
        EXPECT(0x45bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01DF
        gbc.setState(0x8114, 0xcc44, 0xb3d0, 0x6242, 0x1bbc, 0xd2f2, 0x0, 0x0);
        gbc.writeMem(0x8114, { 0x58 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcc44, gbc.sp());
        EXPECT(0x8115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8114));
        // 58 01E0
        gbc.setState(0x1306, 0xf9f, 0xcb20, 0xad28, 0xe036, 0x9dd7, 0x1, 0x0);
        gbc.writeMem(0x1306, { 0x58 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf9f, gbc.sp());
        EXPECT(0x1307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01E1
        gbc.setState(0x1346, 0x5536, 0xbc00, 0x5070, 0x8b29, 0x8d24, 0x1, 0x1);
        gbc.writeMem(0x1346, { 0x58 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5536, gbc.sp());
        EXPECT(0x1347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01E3
        gbc.setState(0x857f, 0x8e7b, 0x88a0, 0x318a, 0xe1be, 0xc105, 0x0, 0x1);
        gbc.writeMem(0x857f, { 0x58 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8e7b, gbc.sp());
        EXPECT(0x8580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x857f));
        // 58 01E4
        gbc.setState(0x643b, 0x8f86, 0xd880, 0xe1bf, 0x5e, 0x142d, 0x1, 0x1);
        gbc.writeMem(0x643b, { 0x58 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8f86, gbc.sp());
        EXPECT(0x643c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01E5
        gbc.setState(0x92c8, 0xc9b3, 0x6740, 0x5380, 0xf569, 0x770f, 0x0, 0x1);
        gbc.writeMem(0x92c8, { 0x58 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc9b3, gbc.sp());
        EXPECT(0x92c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x92c8));
        // 58 01E7
        gbc.setState(0x53f7, 0x3952, 0xbc60, 0x289b, 0x2d, 0x69f5, 0x1, 0x0);
        gbc.writeMem(0x53f7, { 0x58 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3952, gbc.sp());
        EXPECT(0x53f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01E8
        gbc.setState(0x6caa, 0xc3ec, 0xd760, 0x7181, 0x8993, 0xcdf9, 0x0, 0x1);
        gbc.writeMem(0x6caa, { 0x58 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc3ec, gbc.sp());
        EXPECT(0x6cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01E9
        gbc.setState(0xca3f, 0xa726, 0xf7c0, 0x6880, 0x1a6c, 0x8ab, 0x1, 0x0);
        gbc.writeMem(0xca3f, { 0x58 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa726, gbc.sp());
        EXPECT(0xca40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xca3f));
        // 58 01EA
        gbc.setState(0x3371, 0x5f11, 0xa150, 0xc61, 0x5e58, 0x6b73, 0x1, 0x1);
        gbc.writeMem(0x3371, { 0x58 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5f11, gbc.sp());
        EXPECT(0x3372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01EB
        gbc.setState(0xba95, 0xa99e, 0x97c0, 0x7b85, 0x1f90, 0xcbec, 0x0, 0x0);
        gbc.writeMem(0xba95, { 0x58 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa99e, gbc.sp());
        EXPECT(0xba96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xba95));
        // 58 01EC
        gbc.setState(0xbeb3, 0x1c41, 0x5590, 0xf68c, 0x8669, 0x7a22, 0x0, 0x1);
        gbc.writeMem(0xbeb3, { 0x58 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1c41, gbc.sp());
        EXPECT(0xbeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbeb3));
        // 58 01ED
        gbc.setState(0x4b47, 0x471a, 0xe300, 0x70cc, 0x8213, 0xecd3, 0x0, 0x0);
        gbc.writeMem(0x4b47, { 0x58 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x471a, gbc.sp());
        EXPECT(0x4b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01EF
        gbc.setState(0x7697, 0x716b, 0x2630, 0x7bef, 0xb767, 0x535e, 0x0, 0x0);
        gbc.writeMem(0x7697, { 0x58 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x716b, gbc.sp());
        EXPECT(0x7698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01F0
        gbc.setState(0x928, 0x9a4c, 0xe2a0, 0x2619, 0x1f0f, 0x5d85, 0x1, 0x0);
        gbc.writeMem(0x928, { 0x58 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9a4c, gbc.sp());
        EXPECT(0x929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01F1
        gbc.setState(0xac76, 0x5329, 0xc5a0, 0x7358, 0xbb48, 0x94e2, 0x0, 0x1);
        gbc.writeMem(0xac76, { 0x58 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5329, gbc.sp());
        EXPECT(0xac77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xac76));
        // 58 01F2
        gbc.setState(0x140f, 0xbf02, 0x3530, 0x4f22, 0x6c8b, 0xc962, 0x0, 0x1);
        gbc.writeMem(0x140f, { 0x58 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbf02, gbc.sp());
        EXPECT(0x1410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01F3
        gbc.setState(0x9719, 0xa955, 0xbf80, 0x5173, 0x3545, 0x598, 0x1, 0x1);
        gbc.writeMem(0x9719, { 0x58 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa955, gbc.sp());
        EXPECT(0x971a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9719));
        // 58 01F4
        gbc.setState(0x6d45, 0xf893, 0x26f0, 0xdd98, 0x309b, 0xa6a7, 0x0, 0x0);
        gbc.writeMem(0x6d45, { 0x58 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf893, gbc.sp());
        EXPECT(0x6d46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01F5
        gbc.setState(0x1fa3, 0xcc21, 0x3160, 0xdbdc, 0xc9c, 0xe9fd, 0x0, 0x1);
        gbc.writeMem(0x1fa3, { 0x58 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcc21, gbc.sp());
        EXPECT(0x1fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01F6
        gbc.setState(0x51ce, 0x7b2c, 0xdc30, 0xe81a, 0xa37b, 0xfcb1, 0x0, 0x1);
        gbc.writeMem(0x51ce, { 0x58 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7b2c, gbc.sp());
        EXPECT(0x51cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01F7
        gbc.setState(0x2b2e, 0xaebd, 0x3db0, 0xfef8, 0x9c38, 0x6405, 0x1, 0x0);
        gbc.writeMem(0x2b2e, { 0x58 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xaebd, gbc.sp());
        EXPECT(0x2b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01F8
        gbc.setState(0x7a88, 0x2ef9, 0xdc40, 0x6e8e, 0x40a, 0x1e40, 0x1, 0x0);
        gbc.writeMem(0x7a88, { 0x58 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2ef9, gbc.sp());
        EXPECT(0x7a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01F9
        gbc.setState(0xb2d1, 0x8c2f, 0xa10, 0x8f79, 0x1128, 0x1eaf, 0x0, 0x1);
        gbc.writeMem(0xb2d1, { 0x58 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8c2f, gbc.sp());
        EXPECT(0xb2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb2d1));
        // 58 01FA
        gbc.setState(0x464f, 0x67fd, 0x53b0, 0x84d8, 0x7434, 0xda44, 0x0, 0x1);
        gbc.writeMem(0x464f, { 0x58 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x67fd, gbc.sp());
        EXPECT(0x4650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01FB
        gbc.setState(0xcfd1, 0x6aa9, 0xf5f0, 0x7778, 0xc511, 0xdb81, 0x0, 0x1);
        gbc.writeMem(0xcfd1, { 0x58 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6aa9, gbc.sp());
        EXPECT(0xcfd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xcfd1));
        // 58 01FC
        gbc.setState(0xd4a2, 0xc125, 0xfb50, 0xbd50, 0xb323, 0xb5a8, 0x0, 0x0);
        gbc.writeMem(0xd4a2, { 0x58 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc125, gbc.sp());
        EXPECT(0xd4a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd4a2));
        // 58 01FD
        gbc.setState(0x3d52, 0x7faf, 0xaca0, 0xfff4, 0xd6c9, 0x29e4, 0x1, 0x0);
        gbc.writeMem(0x3d52, { 0x58 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7faf, gbc.sp());
        EXPECT(0x3d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 01FE
        gbc.setState(0x2bcf, 0x19af, 0x6550, 0x4a54, 0x266b, 0xe658, 0x1, 0x1);
        gbc.writeMem(0x2bcf, { 0x58 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x19af, gbc.sp());
        EXPECT(0x2bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 01FF
        gbc.setState(0x36f7, 0xb3aa, 0x67d0, 0xf5ad, 0xa88e, 0x4ebd, 0x1, 0x0);
        gbc.writeMem(0x36f7, { 0x58 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb3aa, gbc.sp());
        EXPECT(0x36f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0200
        gbc.setState(0xd6ae, 0x324c, 0xfa50, 0x8e73, 0x2d72, 0xed66, 0x0, 0x1);
        gbc.writeMem(0xd6ae, { 0x58 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x324c, gbc.sp());
        EXPECT(0xd6af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd6ae));
        // 58 0201
        gbc.setState(0x94e7, 0x56cc, 0xadc0, 0xa835, 0x3765, 0xac22, 0x1, 0x1);
        gbc.writeMem(0x94e7, { 0x58 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x56cc, gbc.sp());
        EXPECT(0x94e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x94e7));
        // 58 0202
        gbc.setState(0x542a, 0xde21, 0xd290, 0xc0ed, 0x1dc7, 0x4310, 0x1, 0x0);
        gbc.writeMem(0x542a, { 0x58 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xde21, gbc.sp());
        EXPECT(0x542b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0203
        gbc.setState(0xb034, 0xad74, 0xaba0, 0x9da3, 0x6534, 0x26ad, 0x1, 0x1);
        gbc.writeMem(0xb034, { 0x58 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xad74, gbc.sp());
        EXPECT(0xb035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb034));
        // 58 0204
        gbc.setState(0x8011, 0x7782, 0x9c40, 0xdc6a, 0xc50f, 0xa9b, 0x1, 0x0);
        gbc.writeMem(0x8011, { 0x58 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7782, gbc.sp());
        EXPECT(0x8012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8011));
        // 58 0205
        gbc.setState(0x36aa, 0xce8, 0x4400, 0x1857, 0x9a66, 0xb70f, 0x0, 0x1);
        gbc.writeMem(0x36aa, { 0x58 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xce8, gbc.sp());
        EXPECT(0x36ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0206
        gbc.setState(0x1b32, 0x25b4, 0x4160, 0xce8d, 0xb9d8, 0x500b, 0x1, 0x1);
        gbc.writeMem(0x1b32, { 0x58 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x25b4, gbc.sp());
        EXPECT(0x1b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0207
        gbc.setState(0x9d6a, 0xe5c3, 0x6be0, 0x3dae, 0x2704, 0x348c, 0x1, 0x0);
        gbc.writeMem(0x9d6a, { 0x58 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe5c3, gbc.sp());
        EXPECT(0x9d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9d6a));
        // 58 0208
        gbc.setState(0xa25f, 0x8a92, 0xc480, 0xef7a, 0xca6, 0x5aa9, 0x1, 0x0);
        gbc.writeMem(0xa25f, { 0x58 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8a92, gbc.sp());
        EXPECT(0xa260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa25f));
        // 58 0209
        gbc.setState(0xbcad, 0x95e4, 0x4120, 0x5d6, 0xe7ef, 0xa93c, 0x0, 0x0);
        gbc.writeMem(0xbcad, { 0x58 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x95e4, gbc.sp());
        EXPECT(0xbcae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbcad));
        // 58 020A
        gbc.setState(0x6746, 0xf65c, 0x4310, 0x6ed, 0x8f40, 0x1e75, 0x1, 0x0);
        gbc.writeMem(0x6746, { 0x58 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf65c, gbc.sp());
        EXPECT(0x6747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 020B
        gbc.setState(0x5cef, 0x4fa9, 0x2cf0, 0xb9c9, 0x44c2, 0x3e57, 0x1, 0x1);
        gbc.writeMem(0x5cef, { 0x58 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4fa9, gbc.sp());
        EXPECT(0x5cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 020E
        gbc.setState(0x4c31, 0xc2c2, 0xce80, 0x4a5f, 0x745a, 0xb50e, 0x0, 0x0);
        gbc.writeMem(0x4c31, { 0x58 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc2c2, gbc.sp());
        EXPECT(0x4c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 020F
        gbc.setState(0x2e3b, 0xdb1a, 0xf360, 0x3cb2, 0x151a, 0x636f, 0x1, 0x0);
        gbc.writeMem(0x2e3b, { 0x58 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdb1a, gbc.sp());
        EXPECT(0x2e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0210
        gbc.setState(0x2307, 0x169a, 0x8240, 0xdaea, 0x2f9d, 0x645c, 0x1, 0x1);
        gbc.writeMem(0x2307, { 0x58 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x169a, gbc.sp());
        EXPECT(0x2308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0211
        gbc.setState(0xaa96, 0x1653, 0xd8d0, 0xec3a, 0x31b5, 0x6eca, 0x1, 0x0);
        gbc.writeMem(0xaa96, { 0x58 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1653, gbc.sp());
        EXPECT(0xaa97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xaa96));
        // 58 0212
        gbc.setState(0x8ce8, 0xd49d, 0x3910, 0x699e, 0x3574, 0x3c77, 0x0, 0x0);
        gbc.writeMem(0x8ce8, { 0x58 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd49d, gbc.sp());
        EXPECT(0x8ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8ce8));
        // 58 0213
        gbc.setState(0x23f9, 0x680b, 0x8e00, 0x5988, 0x39fc, 0xcfb2, 0x1, 0x0);
        gbc.writeMem(0x23f9, { 0x58 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x680b, gbc.sp());
        EXPECT(0x23fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0215
        gbc.setState(0x7772, 0x81ce, 0xe7b0, 0x9dcc, 0xdcb2, 0xd2b, 0x0, 0x0);
        gbc.writeMem(0x7772, { 0x58 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x81ce, gbc.sp());
        EXPECT(0x7773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0216
        gbc.setState(0x443, 0xa7c, 0xcf50, 0xc00a, 0xb7c8, 0xc2c1, 0x1, 0x0);
        gbc.writeMem(0x443, { 0x58 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa7c, gbc.sp());
        EXPECT(0x444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0217
        gbc.setState(0xb51b, 0x539b, 0x5660, 0x6d30, 0x5cbc, 0x3f9a, 0x0, 0x1);
        gbc.writeMem(0xb51b, { 0x58 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x539b, gbc.sp());
        EXPECT(0xb51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb51b));
        // 58 0218
        gbc.setState(0x19b4, 0xf541, 0x6e50, 0xb67, 0xad3f, 0x427f, 0x0, 0x0);
        gbc.writeMem(0x19b4, { 0x58 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf541, gbc.sp());
        EXPECT(0x19b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0219
        gbc.setState(0x4ef6, 0x5be5, 0x6320, 0x5941, 0x85ef, 0xfc85, 0x0, 0x0);
        gbc.writeMem(0x4ef6, { 0x58 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5be5, gbc.sp());
        EXPECT(0x4ef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 021A
        gbc.setState(0x5e15, 0x2e82, 0x8710, 0x5ac4, 0x8960, 0x2138, 0x1, 0x1);
        gbc.writeMem(0x5e15, { 0x58 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2e82, gbc.sp());
        EXPECT(0x5e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 021C
        gbc.setState(0x58a9, 0x9442, 0x8d60, 0x6675, 0x1f5f, 0xfc49, 0x1, 0x1);
        gbc.writeMem(0x58a9, { 0x58 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9442, gbc.sp());
        EXPECT(0x58aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 021D
        gbc.setState(0x9d6f, 0xbf58, 0x5280, 0xe1c9, 0x6dce, 0xa4ca, 0x0, 0x0);
        gbc.writeMem(0x9d6f, { 0x58 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbf58, gbc.sp());
        EXPECT(0x9d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9d6f));
        // 58 0220
        gbc.setState(0xa7e3, 0xd99, 0x4ae0, 0x1033, 0xb54d, 0xed3f, 0x0, 0x1);
        gbc.writeMem(0xa7e3, { 0x58 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd99, gbc.sp());
        EXPECT(0xa7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa7e3));
        // 58 0221
        gbc.setState(0xb879, 0x57cf, 0xc950, 0x1561, 0x2465, 0xb5a1, 0x1, 0x1);
        gbc.writeMem(0xb879, { 0x58 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x57cf, gbc.sp());
        EXPECT(0xb87a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb879));
        // 58 0222
        gbc.setState(0x3b71, 0xc030, 0xba10, 0xd977, 0xb20b, 0xb368, 0x1, 0x1);
        gbc.writeMem(0x3b71, { 0x58 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc030, gbc.sp());
        EXPECT(0x3b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0223
        gbc.setState(0x6de0, 0x2772, 0xfe60, 0x5b24, 0xbfb6, 0x3742, 0x0, 0x0);
        gbc.writeMem(0x6de0, { 0x58 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2772, gbc.sp());
        EXPECT(0x6de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0224
        gbc.setState(0x7379, 0x68ff, 0x5f90, 0xb3c, 0x3102, 0xfc31, 0x1, 0x1);
        gbc.writeMem(0x7379, { 0x58 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x68ff, gbc.sp());
        EXPECT(0x737a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0225
        gbc.setState(0x116b, 0x8c62, 0xf580, 0xbd, 0x1390, 0xfe1d, 0x0, 0x0);
        gbc.writeMem(0x116b, { 0x58 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8c62, gbc.sp());
        EXPECT(0x116c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0226
        gbc.setState(0xd576, 0x1560, 0xb9b0, 0x4941, 0x59d5, 0x43a6, 0x0, 0x0);
        gbc.writeMem(0xd576, { 0x58 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1560, gbc.sp());
        EXPECT(0xd577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd576));
        // 58 0227
        gbc.setState(0x7ea9, 0xd3fa, 0x8130, 0x4b2a, 0xb997, 0x79c5, 0x1, 0x1);
        gbc.writeMem(0x7ea9, { 0x58 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd3fa, gbc.sp());
        EXPECT(0x7eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0228
        gbc.setState(0x48f1, 0xb34a, 0xb030, 0xf316, 0x8fd9, 0xafbf, 0x1, 0x1);
        gbc.writeMem(0x48f1, { 0x58 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb34a, gbc.sp());
        EXPECT(0x48f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0229
        gbc.setState(0x5c15, 0x2920, 0x5b10, 0xeed8, 0x1ce6, 0xb4e2, 0x0, 0x1);
        gbc.writeMem(0x5c15, { 0x58 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2920, gbc.sp());
        EXPECT(0x5c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 022A
        gbc.setState(0x8139, 0xbbbc, 0x3b60, 0xc4ce, 0x7414, 0x8952, 0x1, 0x0);
        gbc.writeMem(0x8139, { 0x58 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbbbc, gbc.sp());
        EXPECT(0x813a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8139));
        // 58 022B
        gbc.setState(0x602, 0xbcad, 0xbec0, 0xb126, 0x7d98, 0xbaf7, 0x1, 0x0);
        gbc.writeMem(0x602, { 0x58 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbcad, gbc.sp());
        EXPECT(0x603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 022C
        gbc.setState(0xbcf8, 0x1b30, 0xf250, 0x129b, 0x5d00, 0x2ce2, 0x0, 0x0);
        gbc.writeMem(0xbcf8, { 0x58 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1b30, gbc.sp());
        EXPECT(0xbcf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbcf8));
        // 58 022E
        gbc.setState(0x9c44, 0xb335, 0x1010, 0x978, 0x27a4, 0xd4d0, 0x1, 0x1);
        gbc.writeMem(0x9c44, { 0x58 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb335, gbc.sp());
        EXPECT(0x9c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9c44));
        // 58 022F
        gbc.setState(0xe25b, 0xd2a9, 0x7ad0, 0xce66, 0xe2, 0xb00d, 0x0, 0x1);
        gbc.writeMem(0xe25b, { 0x58 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd2a9, gbc.sp());
        EXPECT(0xe25c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe25b));
        // 58 0230
        gbc.setState(0x20e3, 0xda90, 0x98c0, 0x34d, 0x6c36, 0x6978, 0x0, 0x0);
        gbc.writeMem(0x20e3, { 0x58 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xda90, gbc.sp());
        EXPECT(0x20e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0231
        gbc.setState(0x12d5, 0xd16c, 0xf090, 0x9799, 0x2745, 0x8bf3, 0x1, 0x0);
        gbc.writeMem(0x12d5, { 0x58 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd16c, gbc.sp());
        EXPECT(0x12d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0232
        gbc.setState(0xcd8f, 0x1f92, 0x42c0, 0x3928, 0x8a29, 0xa7df, 0x1, 0x0);
        gbc.writeMem(0xcd8f, { 0x58 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1f92, gbc.sp());
        EXPECT(0xcd90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xcd8f));
        // 58 0233
        gbc.setState(0x9776, 0x7eb2, 0x20, 0x66f2, 0x691e, 0x2996, 0x0, 0x1);
        gbc.writeMem(0x9776, { 0x58 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7eb2, gbc.sp());
        EXPECT(0x9777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9776));
        // 58 0234
        gbc.setState(0x6456, 0x431a, 0x420, 0x5b97, 0x59f9, 0xee19, 0x1, 0x0);
        gbc.writeMem(0x6456, { 0x58 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x431a, gbc.sp());
        EXPECT(0x6457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0235
        gbc.setState(0x534, 0xc984, 0xcc20, 0x1609, 0xf22e, 0xb411, 0x1, 0x1);
        gbc.writeMem(0x534, { 0x58 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc984, gbc.sp());
        EXPECT(0x535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0236
        gbc.setState(0x6779, 0xf046, 0xbd10, 0x50c2, 0x58fc, 0xbb9e, 0x1, 0x0);
        gbc.writeMem(0x6779, { 0x58 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf046, gbc.sp());
        EXPECT(0x677a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0237
        gbc.setState(0xef9b, 0x8da3, 0x630, 0x6ac0, 0x74b1, 0x6bfb, 0x0, 0x0);
        gbc.writeMem(0xef9b, { 0x58 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8da3, gbc.sp());
        EXPECT(0xef9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xef9b));
        // 58 0238
        gbc.setState(0xda94, 0x662d, 0x1960, 0x50d3, 0xded4, 0x1df9, 0x1, 0x0);
        gbc.writeMem(0xda94, { 0x58 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x662d, gbc.sp());
        EXPECT(0xda95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xda94));
        // 58 0239
        gbc.setState(0x803b, 0x7158, 0x400, 0x4aa9, 0x5a01, 0xe6aa, 0x0, 0x1);
        gbc.writeMem(0x803b, { 0x58 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7158, gbc.sp());
        EXPECT(0x803c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x803b));
        // 58 023A
        gbc.setState(0x6ac, 0x1658, 0xc5e0, 0x6bd9, 0xe0aa, 0x5c11, 0x1, 0x1);
        gbc.writeMem(0x6ac, { 0x58 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1658, gbc.sp());
        EXPECT(0x6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 023B
        gbc.setState(0x709b, 0x7b63, 0xab10, 0x6545, 0xa38, 0xc6f5, 0x1, 0x0);
        gbc.writeMem(0x709b, { 0x58 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7b63, gbc.sp());
        EXPECT(0x709c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 023C
        gbc.setState(0xab62, 0x77b1, 0x46a0, 0x69bc, 0x855b, 0xadca, 0x1, 0x0);
        gbc.writeMem(0xab62, { 0x58 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x77b1, gbc.sp());
        EXPECT(0xab63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xab62));
        // 58 023D
        gbc.setState(0xb6d5, 0x2baf, 0x5320, 0xfe44, 0x6d9b, 0x91d1, 0x1, 0x0);
        gbc.writeMem(0xb6d5, { 0x58 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2baf, gbc.sp());
        EXPECT(0xb6d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb6d5));
        // 58 023E
        gbc.setState(0x7d91, 0x887e, 0xae50, 0x17e0, 0x1e03, 0x6d12, 0x1, 0x1);
        gbc.writeMem(0x7d91, { 0x58 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x887e, gbc.sp());
        EXPECT(0x7d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 023F
        gbc.setState(0xb564, 0xa293, 0xae80, 0x9f81, 0x1439, 0x701b, 0x0, 0x0);
        gbc.writeMem(0xb564, { 0x58 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa293, gbc.sp());
        EXPECT(0xb565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb564));
        // 58 0240
        gbc.setState(0x6b1f, 0x6d60, 0x42f0, 0x458a, 0x1d3e, 0xfa4a, 0x0, 0x1);
        gbc.writeMem(0x6b1f, { 0x58 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6d60, gbc.sp());
        EXPECT(0x6b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0241
        gbc.setState(0x9050, 0x316f, 0x5a30, 0xcb82, 0x320d, 0xe37, 0x1, 0x1);
        gbc.writeMem(0x9050, { 0x58 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x316f, gbc.sp());
        EXPECT(0x9051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9050));
        // 58 0242
        gbc.setState(0x281, 0xbdc2, 0xc010, 0x8c57, 0x5c05, 0xd873, 0x0, 0x1);
        gbc.writeMem(0x281, { 0x58 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbdc2, gbc.sp());
        EXPECT(0x282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0243
        gbc.setState(0x238, 0x4a8, 0x76d0, 0xf431, 0xf9bd, 0x4c73, 0x0, 0x0);
        gbc.writeMem(0x238, { 0x58 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4a8, gbc.sp());
        EXPECT(0x239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0244
        gbc.setState(0x6d9, 0x93b4, 0xacf0, 0x4ec8, 0x60d0, 0x31fb, 0x0, 0x0);
        gbc.writeMem(0x6d9, { 0x58 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x93b4, gbc.sp());
        EXPECT(0x6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0245
        gbc.setState(0x71e0, 0x494f, 0x3820, 0x1c52, 0xedd8, 0x2bd1, 0x0, 0x0);
        gbc.writeMem(0x71e0, { 0x58 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x494f, gbc.sp());
        EXPECT(0x71e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0246
        gbc.setState(0x56b7, 0x56bf, 0xd560, 0x2356, 0x7fbd, 0xac5c, 0x0, 0x0);
        gbc.writeMem(0x56b7, { 0x58 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x56bf, gbc.sp());
        EXPECT(0x56b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0247
        gbc.setState(0x3324, 0xedb3, 0x6d60, 0xa745, 0x8331, 0xe653, 0x0, 0x0);
        gbc.writeMem(0x3324, { 0x58 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xedb3, gbc.sp());
        EXPECT(0x3325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0248
        gbc.setState(0x207c, 0xe3da, 0x4490, 0x9806, 0x1aa5, 0x46bc, 0x0, 0x0);
        gbc.writeMem(0x207c, { 0x58 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe3da, gbc.sp());
        EXPECT(0x207d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0249
        gbc.setState(0x965, 0xcf7e, 0x37b0, 0x4aa6, 0x8060, 0xd2f5, 0x0, 0x1);
        gbc.writeMem(0x965, { 0x58 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcf7e, gbc.sp());
        EXPECT(0x966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 024A
        gbc.setState(0x6d6f, 0xc19b, 0x4340, 0x5a33, 0x128e, 0x3e13, 0x1, 0x1);
        gbc.writeMem(0x6d6f, { 0x58 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc19b, gbc.sp());
        EXPECT(0x6d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 024B
        gbc.setState(0x594c, 0x9290, 0xf550, 0x13ac, 0xfc85, 0xaeba, 0x0, 0x0);
        gbc.writeMem(0x594c, { 0x58 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9290, gbc.sp());
        EXPECT(0x594d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 024C
        gbc.setState(0xab7f, 0x1f5a, 0x3890, 0x51e0, 0x7496, 0x539f, 0x1, 0x0);
        gbc.writeMem(0xab7f, { 0x58 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1f5a, gbc.sp());
        EXPECT(0xab80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xab7f));
        // 58 024D
        gbc.setState(0xed7c, 0xa699, 0x5dd0, 0xbc57, 0xe71f, 0xa97e, 0x0, 0x0);
        gbc.writeMem(0xed7c, { 0x58 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa699, gbc.sp());
        EXPECT(0xed7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xed7c));
        // 58 024E
        gbc.setState(0x4aba, 0xfa2b, 0x3f90, 0xa61, 0x5834, 0x53f6, 0x1, 0x0);
        gbc.writeMem(0x4aba, { 0x58 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfa2b, gbc.sp());
        EXPECT(0x4abb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 024F
        gbc.setState(0x37ca, 0xef3c, 0x4790, 0xd10e, 0x87f, 0x767a, 0x1, 0x0);
        gbc.writeMem(0x37ca, { 0x58 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xef3c, gbc.sp());
        EXPECT(0x37cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0250
        gbc.setState(0x29f0, 0x74a2, 0xc360, 0xe25, 0x628c, 0x7dc, 0x1, 0x0);
        gbc.writeMem(0x29f0, { 0x58 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x74a2, gbc.sp());
        EXPECT(0x29f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0251
        gbc.setState(0x322a, 0x6a5a, 0x4db0, 0x342f, 0xc065, 0x2bf8, 0x1, 0x1);
        gbc.writeMem(0x322a, { 0x58 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6a5a, gbc.sp());
        EXPECT(0x322b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0252
        gbc.setState(0xe582, 0x4db9, 0x8f20, 0xf3d2, 0x4288, 0x1ff5, 0x1, 0x0);
        gbc.writeMem(0xe582, { 0x58 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4db9, gbc.sp());
        EXPECT(0xe583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe582));
        // 58 0253
        gbc.setState(0x787a, 0xf341, 0x310, 0x5b7d, 0x80cc, 0xc0ba, 0x0, 0x1);
        gbc.writeMem(0x787a, { 0x58 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf341, gbc.sp());
        EXPECT(0x787b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0254
        gbc.setState(0xc51c, 0x495f, 0xa20, 0xcf25, 0xb96a, 0xb606, 0x0, 0x0);
        gbc.writeMem(0xc51c, { 0x58 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x495f, gbc.sp());
        EXPECT(0xc51d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc51c));
        // 58 0255
        gbc.setState(0x3ac1, 0xeabf, 0x9650, 0x1b65, 0xad66, 0x13f, 0x0, 0x0);
        gbc.writeMem(0x3ac1, { 0x58 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xeabf, gbc.sp());
        EXPECT(0x3ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0256
        gbc.setState(0xcc80, 0x95be, 0x7a50, 0x9c16, 0x1f18, 0x6d44, 0x0, 0x0);
        gbc.writeMem(0xcc80, { 0x58 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x95be, gbc.sp());
        EXPECT(0xcc81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xcc80));
        // 58 0257
        gbc.setState(0x5f9e, 0xee8f, 0x1ad0, 0xa8d1, 0xed62, 0xc4d, 0x1, 0x0);
        gbc.writeMem(0x5f9e, { 0x58 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xee8f, gbc.sp());
        EXPECT(0x5f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0258
        gbc.setState(0xa6ab, 0x1e29, 0x3390, 0xdaf0, 0x37cc, 0x46c4, 0x1, 0x0);
        gbc.writeMem(0xa6ab, { 0x58 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1e29, gbc.sp());
        EXPECT(0xa6ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa6ab));
        // 58 0259
        gbc.setState(0x190e, 0x38e8, 0x4c30, 0x5139, 0x5e9e, 0xca80, 0x1, 0x0);
        gbc.writeMem(0x190e, { 0x58 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x38e8, gbc.sp());
        EXPECT(0x190f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 025A
        gbc.setState(0xa838, 0x402f, 0xa2f0, 0x2d84, 0xb7dd, 0xdc39, 0x1, 0x0);
        gbc.writeMem(0xa838, { 0x58 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x402f, gbc.sp());
        EXPECT(0xa839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa838));
        // 58 025B
        gbc.setState(0xb2fc, 0xb405, 0x1ee0, 0x764a, 0xbb4b, 0xd91f, 0x0, 0x1);
        gbc.writeMem(0xb2fc, { 0x58 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb405, gbc.sp());
        EXPECT(0xb2fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb2fc));
        // 58 025C
        gbc.setState(0xd329, 0x5fc8, 0x7090, 0xae7a, 0xd4c9, 0xdaef, 0x0, 0x1);
        gbc.writeMem(0xd329, { 0x58 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5fc8, gbc.sp());
        EXPECT(0xd32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd329));
        // 58 025D
        gbc.setState(0xbded, 0x9685, 0xa970, 0x7b20, 0xdc7f, 0x5f03, 0x0, 0x0);
        gbc.writeMem(0xbded, { 0x58 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9685, gbc.sp());
        EXPECT(0xbdee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbded));
        // 58 025E
        gbc.setState(0xd4cb, 0x108, 0x55b0, 0xb12a, 0x672, 0x91a8, 0x0, 0x0);
        gbc.writeMem(0xd4cb, { 0x58 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x108, gbc.sp());
        EXPECT(0xd4cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd4cb));
        // 58 025F
        gbc.setState(0x5c53, 0x793, 0xba10, 0xeb94, 0x5a8c, 0x1f9c, 0x1, 0x0);
        gbc.writeMem(0x5c53, { 0x58 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x793, gbc.sp());
        EXPECT(0x5c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0260
        gbc.setState(0x2ac9, 0xe318, 0x7320, 0xdec6, 0xb269, 0x9fc, 0x1, 0x0);
        gbc.writeMem(0x2ac9, { 0x58 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe318, gbc.sp());
        EXPECT(0x2aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0261
        gbc.setState(0xa477, 0xa667, 0xe160, 0xf22c, 0x1855, 0xa8f5, 0x0, 0x0);
        gbc.writeMem(0xa477, { 0x58 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa667, gbc.sp());
        EXPECT(0xa478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa477));
        // 58 0262
        gbc.setState(0xde2a, 0x1cec, 0xe0f0, 0xa797, 0x5d6c, 0xc58e, 0x0, 0x1);
        gbc.writeMem(0xde2a, { 0x58 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1cec, gbc.sp());
        EXPECT(0xde2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xde2a));
        // 58 0263
        gbc.setState(0x4ec2, 0x8c36, 0x7980, 0x4c89, 0x32d6, 0xcd59, 0x1, 0x0);
        gbc.writeMem(0x4ec2, { 0x58 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8c36, gbc.sp());
        EXPECT(0x4ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0264
        gbc.setState(0x24e0, 0x6b17, 0x8cd0, 0x89b3, 0x5912, 0x9ac9, 0x0, 0x1);
        gbc.writeMem(0x24e0, { 0x58 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6b17, gbc.sp());
        EXPECT(0x24e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0265
        gbc.setState(0x97e2, 0xd4fc, 0x5a10, 0xb4dd, 0xf321, 0x7c6b, 0x0, 0x1);
        gbc.writeMem(0x97e2, { 0x58 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd4fc, gbc.sp());
        EXPECT(0x97e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x97e2));
        // 58 0266
        gbc.setState(0xd184, 0xfc03, 0x6be0, 0x54de, 0xa8dc, 0xf694, 0x0, 0x0);
        gbc.writeMem(0xd184, { 0x58 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfc03, gbc.sp());
        EXPECT(0xd185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd184));
        // 58 0267
        gbc.setState(0x22bd, 0x2857, 0xc470, 0x7411, 0xe054, 0x35f9, 0x1, 0x0);
        gbc.writeMem(0x22bd, { 0x58 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2857, gbc.sp());
        EXPECT(0x22be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0268
        gbc.setState(0xaa96, 0x6288, 0x40a0, 0xf0d5, 0x64a3, 0xa069, 0x0, 0x0);
        gbc.writeMem(0xaa96, { 0x58 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6288, gbc.sp());
        EXPECT(0xaa97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xaa96));
        // 58 0269
        gbc.setState(0x1a2d, 0x6c25, 0x7d70, 0x90d3, 0xfeb8, 0xebb3, 0x1, 0x1);
        gbc.writeMem(0x1a2d, { 0x58 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6c25, gbc.sp());
        EXPECT(0x1a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 026A
        gbc.setState(0x4098, 0xde0a, 0x6030, 0x8e0e, 0xf31a, 0x276d, 0x0, 0x1);
        gbc.writeMem(0x4098, { 0x58 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xde0a, gbc.sp());
        EXPECT(0x4099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 026B
        gbc.setState(0x1c05, 0xbfcd, 0xf7c0, 0xd21f, 0x3da6, 0x39ad, 0x0, 0x0);
        gbc.writeMem(0x1c05, { 0x58 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbfcd, gbc.sp());
        EXPECT(0x1c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 026C
        gbc.setState(0x58c4, 0x64ef, 0xe70, 0xc983, 0xa038, 0x4e03, 0x1, 0x1);
        gbc.writeMem(0x58c4, { 0x58 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x64ef, gbc.sp());
        EXPECT(0x58c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 026D
        gbc.setState(0xe65e, 0xfbcf, 0xedd0, 0x9b4, 0xfaa8, 0x19dd, 0x0, 0x1);
        gbc.writeMem(0xe65e, { 0x58 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfbcf, gbc.sp());
        EXPECT(0xe65f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe65e));
        // 58 026E
        gbc.setState(0x8ec8, 0xb2fb, 0xfba0, 0x3de6, 0xe0e0, 0x8046, 0x0, 0x0);
        gbc.writeMem(0x8ec8, { 0x58 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb2fb, gbc.sp());
        EXPECT(0x8ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8ec8));
        // 58 026F
        gbc.setState(0x193f, 0xae3d, 0xb8c0, 0xd713, 0xb223, 0x341f, 0x1, 0x1);
        gbc.writeMem(0x193f, { 0x58 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xae3d, gbc.sp());
        EXPECT(0x1940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0270
        gbc.setState(0xe557, 0xde65, 0x31b0, 0x8e3d, 0x279f, 0xc128, 0x1, 0x1);
        gbc.writeMem(0xe557, { 0x58 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xde65, gbc.sp());
        EXPECT(0xe558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe557));
        // 58 0271
        gbc.setState(0x530e, 0xb0fd, 0xbc50, 0xe5fc, 0xb758, 0x493f, 0x0, 0x0);
        gbc.writeMem(0x530e, { 0x58 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb0fd, gbc.sp());
        EXPECT(0x530f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0272
        gbc.setState(0xc7f, 0xfe1c, 0x61a0, 0x5a95, 0xdb20, 0x8bd0, 0x1, 0x1);
        gbc.writeMem(0xc7f, { 0x58 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfe1c, gbc.sp());
        EXPECT(0xc80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0273
        gbc.setState(0xe002, 0xca00, 0x41d0, 0x25b3, 0x3637, 0xff01, 0x1, 0x0);
        gbc.writeMem(0xe002, { 0x58 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xca00, gbc.sp());
        EXPECT(0xe003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe002));
        // 58 0274
        gbc.setState(0xbccb, 0x3990, 0xb90, 0xb4a1, 0x8e6c, 0x8855, 0x1, 0x0);
        gbc.writeMem(0xbccb, { 0x58 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3990, gbc.sp());
        EXPECT(0xbccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbccb));
        // 58 0275
        gbc.setState(0x9ace, 0x9b4e, 0x2e0, 0x8b4f, 0xa3b5, 0x305f, 0x1, 0x0);
        gbc.writeMem(0x9ace, { 0x58 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9b4e, gbc.sp());
        EXPECT(0x9acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9ace));
        // 58 0276
        gbc.setState(0x8628, 0x5d49, 0x7340, 0x2d46, 0xafc8, 0x92ec, 0x1, 0x1);
        gbc.writeMem(0x8628, { 0x58 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5d49, gbc.sp());
        EXPECT(0x8629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8628));
        // 58 0277
        gbc.setState(0x721a, 0x6137, 0x4250, 0x7052, 0x227e, 0x27a3, 0x1, 0x0);
        gbc.writeMem(0x721a, { 0x58 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6137, gbc.sp());
        EXPECT(0x721b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0278
        gbc.setState(0xa4af, 0x79c6, 0x6920, 0xcb33, 0x9949, 0x151, 0x0, 0x0);
        gbc.writeMem(0xa4af, { 0x58 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x79c6, gbc.sp());
        EXPECT(0xa4b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa4af));
        // 58 0279
        gbc.setState(0x6fc7, 0x40ee, 0x3200, 0x36bc, 0x8354, 0xa4ab, 0x0, 0x1);
        gbc.writeMem(0x6fc7, { 0x58 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x40ee, gbc.sp());
        EXPECT(0x6fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 027A
        gbc.setState(0xdb91, 0xef4d, 0x57b0, 0x9d19, 0x73d3, 0x47d8, 0x1, 0x1);
        gbc.writeMem(0xdb91, { 0x58 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xef4d, gbc.sp());
        EXPECT(0xdb92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdb91));
        // 58 027B
        gbc.setState(0x41fd, 0x5418, 0x94b0, 0xcd8c, 0x9d3e, 0x1ecc, 0x0, 0x0);
        gbc.writeMem(0x41fd, { 0x58 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5418, gbc.sp());
        EXPECT(0x41fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 027C
        gbc.setState(0xc5c7, 0x241b, 0xd4e0, 0x4102, 0xb593, 0xc080, 0x1, 0x1);
        gbc.writeMem(0xc5c7, { 0x58 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x241b, gbc.sp());
        EXPECT(0xc5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc5c7));
        // 58 027D
        gbc.setState(0x396e, 0x5b88, 0xa5c0, 0xcaa0, 0x330d, 0x4ff0, 0x1, 0x0);
        gbc.writeMem(0x396e, { 0x58 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5b88, gbc.sp());
        EXPECT(0x396f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 027E
        gbc.setState(0x9150, 0x7129, 0x8170, 0x9e37, 0x4165, 0x8845, 0x1, 0x0);
        gbc.writeMem(0x9150, { 0x58 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7129, gbc.sp());
        EXPECT(0x9151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9150));
        // 58 027F
        gbc.setState(0x362b, 0xed1c, 0x51f0, 0x6a1f, 0x50d1, 0x233d, 0x1, 0x1);
        gbc.writeMem(0x362b, { 0x58 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xed1c, gbc.sp());
        EXPECT(0x362c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0280
        gbc.setState(0x7664, 0x986b, 0xdf30, 0x4321, 0xb1ac, 0xb92, 0x0, 0x0);
        gbc.writeMem(0x7664, { 0x58 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x986b, gbc.sp());
        EXPECT(0x7665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0281
        gbc.setState(0x3893, 0x240b, 0x39c0, 0x9f83, 0xd9e3, 0x4a46, 0x1, 0x1);
        gbc.writeMem(0x3893, { 0x58 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x240b, gbc.sp());
        EXPECT(0x3894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0282
        gbc.setState(0x6cac, 0xdb3f, 0xc50, 0xbf27, 0x6a3a, 0x1106, 0x0, 0x0);
        gbc.writeMem(0x6cac, { 0x58 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdb3f, gbc.sp());
        EXPECT(0x6cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0283
        gbc.setState(0x3e39, 0xc7e3, 0x9e70, 0xa6d1, 0x5476, 0x3e4d, 0x1, 0x1);
        gbc.writeMem(0x3e39, { 0x58 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc7e3, gbc.sp());
        EXPECT(0x3e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0285
        gbc.setState(0x6c02, 0x83b5, 0x8130, 0xfb02, 0xc650, 0x6178, 0x0, 0x0);
        gbc.writeMem(0x6c02, { 0x58 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x83b5, gbc.sp());
        EXPECT(0x6c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0286
        gbc.setState(0xb000, 0x7aa0, 0xdf60, 0xf6a3, 0x68ac, 0x2e7f, 0x0, 0x1);
        gbc.writeMem(0xb000, { 0x58 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7aa0, gbc.sp());
        EXPECT(0xb001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb000));
        // 58 0287
        gbc.setState(0x4d82, 0x68ad, 0x8810, 0x6296, 0xb675, 0x5fd9, 0x0, 0x0);
        gbc.writeMem(0x4d82, { 0x58 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x68ad, gbc.sp());
        EXPECT(0x4d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0288
        gbc.setState(0x8a89, 0xce4, 0xcd10, 0x2bb9, 0x526, 0x7706, 0x1, 0x1);
        gbc.writeMem(0x8a89, { 0x58 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xce4, gbc.sp());
        EXPECT(0x8a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8a89));
        // 58 0289
        gbc.setState(0xca7f, 0x4b21, 0xa470, 0xeb45, 0x1ee5, 0xc90c, 0x0, 0x1);
        gbc.writeMem(0xca7f, { 0x58 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4b21, gbc.sp());
        EXPECT(0xca80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xca7f));
        // 58 028A
        gbc.setState(0xc018, 0x1d7c, 0x8d20, 0xfd7b, 0xc4ad, 0xb12b, 0x0, 0x0);
        gbc.writeMem(0xc018, { 0x58 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1d7c, gbc.sp());
        EXPECT(0xc019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc018));
        // 58 028B
        gbc.setState(0x8681, 0x4430, 0xdfe0, 0x347f, 0x523f, 0xcf0, 0x1, 0x0);
        gbc.writeMem(0x8681, { 0x58 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4430, gbc.sp());
        EXPECT(0x8682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8681));
        // 58 028C
        gbc.setState(0x4016, 0xa64c, 0x89e0, 0xbbc0, 0x8deb, 0x2300, 0x0, 0x0);
        gbc.writeMem(0x4016, { 0x58 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa64c, gbc.sp());
        EXPECT(0x4017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 028D
        gbc.setState(0xf0a, 0xe70d, 0x5440, 0xecd7, 0xaf12, 0xfcc9, 0x0, 0x0);
        gbc.writeMem(0xf0a, { 0x58 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe70d, gbc.sp());
        EXPECT(0xf0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 028E
        gbc.setState(0x4dd1, 0x90ac, 0x7990, 0x42f, 0xe13c, 0xd03a, 0x1, 0x0);
        gbc.writeMem(0x4dd1, { 0x58 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x90ac, gbc.sp());
        EXPECT(0x4dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 028F
        gbc.setState(0x34d1, 0x87a7, 0xa9f0, 0x1d48, 0x6d7f, 0x9b90, 0x0, 0x1);
        gbc.writeMem(0x34d1, { 0x58 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x87a7, gbc.sp());
        EXPECT(0x34d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0290
        gbc.setState(0xd02c, 0xe1ee, 0x2c70, 0x2a66, 0x88e8, 0x76eb, 0x1, 0x1);
        gbc.writeMem(0xd02c, { 0x58 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe1ee, gbc.sp());
        EXPECT(0xd02d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd02c));
        // 58 0291
        gbc.setState(0xa849, 0x5a3d, 0xacb0, 0xbc8b, 0x7fc5, 0xe6d, 0x0, 0x1);
        gbc.writeMem(0xa849, { 0x58 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5a3d, gbc.sp());
        EXPECT(0xa84a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa849));
        // 58 0292
        gbc.setState(0xea1f, 0x186b, 0x9940, 0xa2bb, 0x1913, 0xbed2, 0x1, 0x0);
        gbc.writeMem(0xea1f, { 0x58 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x186b, gbc.sp());
        EXPECT(0xea20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xea1f));
        // 58 0293
        gbc.setState(0xd4cd, 0x3812, 0xca0, 0x3700, 0x1ff2, 0x8f63, 0x1, 0x0);
        gbc.writeMem(0xd4cd, { 0x58 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3812, gbc.sp());
        EXPECT(0xd4ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd4cd));
        // 58 0294
        gbc.setState(0xaa2b, 0xea1, 0x5c30, 0x2466, 0x405b, 0x83ce, 0x1, 0x1);
        gbc.writeMem(0xaa2b, { 0x58 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xea1, gbc.sp());
        EXPECT(0xaa2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xaa2b));
        // 58 0295
        gbc.setState(0x9e64, 0x4200, 0x98f0, 0xbb8b, 0x6a89, 0x60fd, 0x1, 0x1);
        gbc.writeMem(0x9e64, { 0x58 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4200, gbc.sp());
        EXPECT(0x9e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9e64));
        // 58 0297
        gbc.setState(0x6cb2, 0x14dc, 0xea90, 0x47e, 0xdef, 0x1057, 0x0, 0x0);
        gbc.writeMem(0x6cb2, { 0x58 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x14dc, gbc.sp());
        EXPECT(0x6cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0298
        gbc.setState(0x8da, 0x6bed, 0xd9d0, 0xd6de, 0xdf7b, 0x8af4, 0x1, 0x0);
        gbc.writeMem(0x8da, { 0x58 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6bed, gbc.sp());
        EXPECT(0x8db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0299
        gbc.setState(0xc46, 0x9abc, 0x2e80, 0x5d55, 0xe969, 0xd7a1, 0x0, 0x1);
        gbc.writeMem(0xc46, { 0x58 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9abc, gbc.sp());
        EXPECT(0xc47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 029A
        gbc.setState(0x770a, 0x4868, 0x92c0, 0xbdd, 0xe935, 0x695, 0x0, 0x1);
        gbc.writeMem(0x770a, { 0x58 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4868, gbc.sp());
        EXPECT(0x770b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 029B
        gbc.setState(0x2d5, 0xafc2, 0x3500, 0x48af, 0xbb6a, 0x10, 0x1, 0x0);
        gbc.writeMem(0x2d5, { 0x58 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xafc2, gbc.sp());
        EXPECT(0x2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 029C
        gbc.setState(0x5711, 0x23d2, 0x7320, 0xf901, 0xdcbb, 0xd1d1, 0x1, 0x1);
        gbc.writeMem(0x5711, { 0x58 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x23d2, gbc.sp());
        EXPECT(0x5712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 029D
        gbc.setState(0x3720, 0x43ed, 0x30c0, 0x3999, 0xc09a, 0x3bce, 0x0, 0x1);
        gbc.writeMem(0x3720, { 0x58 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x43ed, gbc.sp());
        EXPECT(0x3721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 029E
        gbc.setState(0xe53f, 0xc61b, 0x30, 0x6da1, 0x5691, 0x51ae, 0x0, 0x1);
        gbc.writeMem(0xe53f, { 0x58 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc61b, gbc.sp());
        EXPECT(0xe540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe53f));
        // 58 029F
        gbc.setState(0x574, 0xa788, 0x1680, 0x58c2, 0xe21b, 0x6b65, 0x1, 0x0);
        gbc.writeMem(0x574, { 0x58 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa788, gbc.sp());
        EXPECT(0x575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02A0
        gbc.setState(0x6990, 0xbe2d, 0xca40, 0x964f, 0x2c49, 0x30a, 0x1, 0x0);
        gbc.writeMem(0x6990, { 0x58 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbe2d, gbc.sp());
        EXPECT(0x6991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02A1
        gbc.setState(0x833, 0xe04f, 0x6ac0, 0xee42, 0x4988, 0xc348, 0x1, 0x1);
        gbc.writeMem(0x833, { 0x58 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe04f, gbc.sp());
        EXPECT(0x834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02A2
        gbc.setState(0x240, 0x4ee6, 0xea40, 0xd82f, 0x5be6, 0x5276, 0x0, 0x0);
        gbc.writeMem(0x240, { 0x58 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4ee6, gbc.sp());
        EXPECT(0x241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02A3
        gbc.setState(0xc621, 0xbb4e, 0x2960, 0x6171, 0x531c, 0x3efc, 0x1, 0x0);
        gbc.writeMem(0xc621, { 0x58 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbb4e, gbc.sp());
        EXPECT(0xc622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc621));
        // 58 02A4
        gbc.setState(0x77da, 0xf4e8, 0x44a0, 0x3f5b, 0x6048, 0xea50, 0x1, 0x0);
        gbc.writeMem(0x77da, { 0x58 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf4e8, gbc.sp());
        EXPECT(0x77db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02A5
        gbc.setState(0x2ab8, 0x5f08, 0xdcb0, 0xc0e7, 0x164c, 0x3e31, 0x1, 0x0);
        gbc.writeMem(0x2ab8, { 0x58 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5f08, gbc.sp());
        EXPECT(0x2ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02A6
        gbc.setState(0x2b35, 0x802d, 0xf5d0, 0x4b11, 0x8557, 0x3b01, 0x0, 0x0);
        gbc.writeMem(0x2b35, { 0x58 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x802d, gbc.sp());
        EXPECT(0x2b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02A7
        gbc.setState(0x7542, 0x18d7, 0xb490, 0xc14d, 0xabde, 0x33fa, 0x1, 0x0);
        gbc.writeMem(0x7542, { 0x58 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x18d7, gbc.sp());
        EXPECT(0x7543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02A8
        gbc.setState(0xc849, 0x2819, 0xa580, 0x71b7, 0x85a3, 0xd294, 0x0, 0x0);
        gbc.writeMem(0xc849, { 0x58 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2819, gbc.sp());
        EXPECT(0xc84a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc849));
        // 58 02A9
        gbc.setState(0xa5ec, 0x1967, 0x3be0, 0xe899, 0x331f, 0x2cfd, 0x0, 0x0);
        gbc.writeMem(0xa5ec, { 0x58 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1967, gbc.sp());
        EXPECT(0xa5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa5ec));
        // 58 02AA
        gbc.setState(0x7877, 0x3c9b, 0x79a0, 0x49fa, 0xcb7c, 0x1add, 0x1, 0x0);
        gbc.writeMem(0x7877, { 0x58 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3c9b, gbc.sp());
        EXPECT(0x7878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02AB
        gbc.setState(0x29ca, 0x1827, 0xa370, 0x722d, 0xb84b, 0xf118, 0x1, 0x1);
        gbc.writeMem(0x29ca, { 0x58 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1827, gbc.sp());
        EXPECT(0x29cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02AC
        gbc.setState(0x5777, 0x3bca, 0x62f0, 0x683a, 0x36ab, 0x4fc8, 0x0, 0x0);
        gbc.writeMem(0x5777, { 0x58 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3bca, gbc.sp());
        EXPECT(0x5778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02AD
        gbc.setState(0x17d3, 0x22b0, 0x8550, 0x3205, 0x1e3f, 0xdbb3, 0x0, 0x0);
        gbc.writeMem(0x17d3, { 0x58 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x22b0, gbc.sp());
        EXPECT(0x17d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02AE
        gbc.setState(0xc1b, 0x3b6e, 0x4de0, 0x6a3b, 0xe4db, 0x8599, 0x0, 0x1);
        gbc.writeMem(0xc1b, { 0x58 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3b6e, gbc.sp());
        EXPECT(0xc1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02AF
        gbc.setState(0x35d8, 0xf24b, 0xeae0, 0x9d78, 0x3772, 0xbfc1, 0x1, 0x0);
        gbc.writeMem(0x35d8, { 0x58 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf24b, gbc.sp());
        EXPECT(0x35d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02B0
        gbc.setState(0x1c64, 0x5915, 0x6970, 0xd12a, 0x7d12, 0x7689, 0x0, 0x1);
        gbc.writeMem(0x1c64, { 0x58 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5915, gbc.sp());
        EXPECT(0x1c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02B2
        gbc.setState(0x2fe1, 0xdee, 0x7b60, 0xcef0, 0x4315, 0x3e3b, 0x1, 0x1);
        gbc.writeMem(0x2fe1, { 0x58 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdee, gbc.sp());
        EXPECT(0x2fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02B3
        gbc.setState(0xce13, 0x2f8, 0xd1b0, 0x8275, 0xb4da, 0x51d3, 0x0, 0x1);
        gbc.writeMem(0xce13, { 0x58 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2f8, gbc.sp());
        EXPECT(0xce14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xce13));
        // 58 02B4
        gbc.setState(0xef6a, 0xfa69, 0x72d0, 0xb36, 0xf0ac, 0x8e7d, 0x0, 0x0);
        gbc.writeMem(0xef6a, { 0x58 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfa69, gbc.sp());
        EXPECT(0xef6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xef6a));
        // 58 02B5
        gbc.setState(0x138d, 0x9b80, 0xcff0, 0xcdec, 0x57b4, 0x4ed5, 0x0, 0x1);
        gbc.writeMem(0x138d, { 0x58 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9b80, gbc.sp());
        EXPECT(0x138e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02B6
        gbc.setState(0xecee, 0xd9f5, 0x200, 0x40ca, 0xdb9d, 0x577e, 0x1, 0x1);
        gbc.writeMem(0xecee, { 0x58 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd9f5, gbc.sp());
        EXPECT(0xecef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xecee));
        // 58 02B7
        gbc.setState(0x2b68, 0xc126, 0xfc50, 0xc853, 0x4d9f, 0xf3e1, 0x1, 0x1);
        gbc.writeMem(0x2b68, { 0x58 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc126, gbc.sp());
        EXPECT(0x2b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02B8
        gbc.setState(0x11b8, 0xeb42, 0x1790, 0xc9e4, 0x48d8, 0x120d, 0x1, 0x0);
        gbc.writeMem(0x11b8, { 0x58 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xeb42, gbc.sp());
        EXPECT(0x11b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02B9
        gbc.setState(0x9248, 0xc146, 0x7960, 0xbbc, 0x3636, 0x1cb8, 0x0, 0x0);
        gbc.writeMem(0x9248, { 0x58 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc146, gbc.sp());
        EXPECT(0x9249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9248));
        // 58 02BA
        gbc.setState(0x14d2, 0xb365, 0x9910, 0xe095, 0xbf77, 0xd82c, 0x0, 0x1);
        gbc.writeMem(0x14d2, { 0x58 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb365, gbc.sp());
        EXPECT(0x14d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02BB
        gbc.setState(0x40f1, 0xba4a, 0xeca0, 0xb2ea, 0x169b, 0x1fb, 0x0, 0x0);
        gbc.writeMem(0x40f1, { 0x58 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xba4a, gbc.sp());
        EXPECT(0x40f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02BC
        gbc.setState(0x5f66, 0x9b3a, 0xb770, 0xb1e4, 0x4989, 0x2e0d, 0x0, 0x1);
        gbc.writeMem(0x5f66, { 0x58 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9b3a, gbc.sp());
        EXPECT(0x5f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02BD
        gbc.setState(0xca41, 0xc469, 0xb670, 0xd1be, 0xbd09, 0xb0dd, 0x1, 0x1);
        gbc.writeMem(0xca41, { 0x58 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc469, gbc.sp());
        EXPECT(0xca42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xca41));
        // 58 02BE
        gbc.setState(0x5109, 0x243f, 0x50d0, 0xfdb9, 0xea31, 0x51f6, 0x1, 0x1);
        gbc.writeMem(0x5109, { 0x58 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x243f, gbc.sp());
        EXPECT(0x510a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02BF
        gbc.setState(0x75d9, 0x3265, 0xdef0, 0x4a57, 0xe5ee, 0x44e2, 0x1, 0x1);
        gbc.writeMem(0x75d9, { 0x58 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3265, gbc.sp());
        EXPECT(0x75da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02C0
        gbc.setState(0xdcfe, 0x2e9d, 0xaa60, 0xa94f, 0x397f, 0x16e9, 0x1, 0x0);
        gbc.writeMem(0xdcfe, { 0x58 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2e9d, gbc.sp());
        EXPECT(0xdcff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdcfe));
        // 58 02C1
        gbc.setState(0x124b, 0xcb91, 0xf290, 0xafa1, 0x1ba5, 0x6561, 0x1, 0x1);
        gbc.writeMem(0x124b, { 0x58 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcb91, gbc.sp());
        EXPECT(0x124c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02C2
        gbc.setState(0x4975, 0xd8b5, 0xfe80, 0x7b9e, 0xb586, 0x6ae9, 0x0, 0x1);
        gbc.writeMem(0x4975, { 0x58 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd8b5, gbc.sp());
        EXPECT(0x4976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02C3
        gbc.setState(0xbe97, 0x8b8, 0xed70, 0x3934, 0xd556, 0x8aaa, 0x0, 0x0);
        gbc.writeMem(0xbe97, { 0x58 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8b8, gbc.sp());
        EXPECT(0xbe98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbe97));
        // 58 02C4
        gbc.setState(0x82cd, 0xe901, 0xb370, 0x19a3, 0xf860, 0xec0d, 0x0, 0x0);
        gbc.writeMem(0x82cd, { 0x58 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe901, gbc.sp());
        EXPECT(0x82ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x82cd));
        // 58 02C5
        gbc.setState(0xcba1, 0xbeb, 0xbf50, 0x12c5, 0xe625, 0xfe11, 0x1, 0x0);
        gbc.writeMem(0xcba1, { 0x58 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbeb, gbc.sp());
        EXPECT(0xcba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xcba1));
        // 58 02C6
        gbc.setState(0x9b96, 0x4bb9, 0xc7f0, 0xbf99, 0xfc96, 0xfe13, 0x1, 0x0);
        gbc.writeMem(0x9b96, { 0x58 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4bb9, gbc.sp());
        EXPECT(0x9b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9b96));
        // 58 02C7
        gbc.setState(0x3e46, 0x49ad, 0xcd40, 0xa067, 0x1fce, 0x6f2f, 0x1, 0x0);
        gbc.writeMem(0x3e46, { 0x58 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x49ad, gbc.sp());
        EXPECT(0x3e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02C8
        gbc.setState(0x2e24, 0xec6f, 0x7f40, 0x4f68, 0x372, 0x9f5, 0x0, 0x1);
        gbc.writeMem(0x2e24, { 0x58 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xec6f, gbc.sp());
        EXPECT(0x2e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02C9
        gbc.setState(0x662b, 0xba09, 0x1310, 0x9c2c, 0xcb66, 0x5dc3, 0x1, 0x1);
        gbc.writeMem(0x662b, { 0x58 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xba09, gbc.sp());
        EXPECT(0x662c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02CA
        gbc.setState(0xd48e, 0x3762, 0x7160, 0x5af3, 0x87bf, 0xe76e, 0x0, 0x0);
        gbc.writeMem(0xd48e, { 0x58 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3762, gbc.sp());
        EXPECT(0xd48f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd48e));
        // 58 02CB
        gbc.setState(0xb3ec, 0xa7cb, 0xd690, 0x89dd, 0x65b5, 0x8dc6, 0x0, 0x0);
        gbc.writeMem(0xb3ec, { 0x58 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa7cb, gbc.sp());
        EXPECT(0xb3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb3ec));
        // 58 02CC
        gbc.setState(0x6352, 0xadc8, 0x7760, 0x316c, 0x4f9e, 0xb7c8, 0x0, 0x0);
        gbc.writeMem(0x6352, { 0x58 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xadc8, gbc.sp());
        EXPECT(0x6353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02CD
        gbc.setState(0x5a89, 0x360c, 0xfbc0, 0xaf03, 0xe81, 0x5195, 0x0, 0x1);
        gbc.writeMem(0x5a89, { 0x58 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x360c, gbc.sp());
        EXPECT(0x5a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02CE
        gbc.setState(0x13f4, 0x951f, 0x4390, 0x96bc, 0x4b44, 0x26e4, 0x0, 0x1);
        gbc.writeMem(0x13f4, { 0x58 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x951f, gbc.sp());
        EXPECT(0x13f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02CF
        gbc.setState(0x733, 0xc8be, 0xe4d0, 0xc6e6, 0x76b5, 0x9aa3, 0x0, 0x0);
        gbc.writeMem(0x733, { 0x58 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc8be, gbc.sp());
        EXPECT(0x734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02D0
        gbc.setState(0x2aa9, 0xea04, 0xb020, 0xf3a7, 0x2d03, 0x7563, 0x1, 0x1);
        gbc.writeMem(0x2aa9, { 0x58 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xea04, gbc.sp());
        EXPECT(0x2aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02D1
        gbc.setState(0x6956, 0x4af8, 0xe7d0, 0xd93e, 0xbb8, 0xa57b, 0x1, 0x0);
        gbc.writeMem(0x6956, { 0x58 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4af8, gbc.sp());
        EXPECT(0x6957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02D2
        gbc.setState(0xa7a1, 0x105e, 0xda90, 0xbfab, 0x58e9, 0xaf3c, 0x0, 0x1);
        gbc.writeMem(0xa7a1, { 0x58 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x105e, gbc.sp());
        EXPECT(0xa7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa7a1));
        // 58 02D3
        gbc.setState(0x51c2, 0x4650, 0xdd90, 0x82b4, 0x2f59, 0x840, 0x0, 0x1);
        gbc.writeMem(0x51c2, { 0x58 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4650, gbc.sp());
        EXPECT(0x51c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02D4
        gbc.setState(0xdb33, 0x1d1c, 0xa850, 0x4b1c, 0x7338, 0x84b7, 0x0, 0x1);
        gbc.writeMem(0xdb33, { 0x58 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1d1c, gbc.sp());
        EXPECT(0xdb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdb33));
        // 58 02D5
        gbc.setState(0xba9d, 0x1944, 0x4f50, 0x77, 0x967a, 0x7d2e, 0x0, 0x1);
        gbc.writeMem(0xba9d, { 0x58 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1944, gbc.sp());
        EXPECT(0xba9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xba9d));
        // 58 02D6
        gbc.setState(0x6af2, 0x3c79, 0xe2a0, 0xfd2a, 0xfee3, 0xdc97, 0x1, 0x1);
        gbc.writeMem(0x6af2, { 0x58 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3c79, gbc.sp());
        EXPECT(0x6af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02D7
        gbc.setState(0xb2bb, 0x275a, 0x5080, 0x90d8, 0x3d5a, 0x8a7, 0x1, 0x0);
        gbc.writeMem(0xb2bb, { 0x58 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x275a, gbc.sp());
        EXPECT(0xb2bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb2bb));
        // 58 02D8
        gbc.setState(0x586b, 0xce8d, 0xe810, 0x9855, 0x7f9, 0x74c9, 0x0, 0x0);
        gbc.writeMem(0x586b, { 0x58 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xce8d, gbc.sp());
        EXPECT(0x586c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02D9
        gbc.setState(0x8ffb, 0xd505, 0x3020, 0xf535, 0x8203, 0x87a6, 0x1, 0x0);
        gbc.writeMem(0x8ffb, { 0x58 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd505, gbc.sp());
        EXPECT(0x8ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8ffb));
        // 58 02DA
        gbc.setState(0xb18, 0xbe7b, 0x1590, 0x9738, 0x8ee, 0x785, 0x1, 0x1);
        gbc.writeMem(0xb18, { 0x58 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbe7b, gbc.sp());
        EXPECT(0xb19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02DB
        gbc.setState(0x1b, 0xda2e, 0xb150, 0xda45, 0xf46e, 0xb398, 0x0, 0x1);
        gbc.writeMem(0x1b, { 0x58 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xda2e, gbc.sp());
        EXPECT(0x1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02DC
        gbc.setState(0x1047, 0xa10a, 0xee0, 0xa07b, 0xdbe2, 0xf0c8, 0x1, 0x0);
        gbc.writeMem(0x1047, { 0x58 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa10a, gbc.sp());
        EXPECT(0x1048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02DD
        gbc.setState(0x5483, 0xcdaf, 0x5300, 0xcc9c, 0x4ce, 0x368e, 0x0, 0x0);
        gbc.writeMem(0x5483, { 0x58 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcdaf, gbc.sp());
        EXPECT(0x5484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02DE
        gbc.setState(0x48cc, 0xeca4, 0xdb60, 0xb702, 0x7df8, 0xc161, 0x1, 0x1);
        gbc.writeMem(0x48cc, { 0x58 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xeca4, gbc.sp());
        EXPECT(0x48cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02DF
        gbc.setState(0x185b, 0x3194, 0xf840, 0xccca, 0x3b1, 0x16d5, 0x1, 0x1);
        gbc.writeMem(0x185b, { 0x58 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3194, gbc.sp());
        EXPECT(0x185c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02E0
        gbc.setState(0xb0a7, 0x381a, 0xc640, 0x834e, 0x485b, 0x259a, 0x0, 0x0);
        gbc.writeMem(0xb0a7, { 0x58 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x381a, gbc.sp());
        EXPECT(0xb0a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb0a7));
        // 58 02E1
        gbc.setState(0xcb7b, 0xabbd, 0xf7f0, 0xabc5, 0xa66d, 0xcb8f, 0x1, 0x1);
        gbc.writeMem(0xcb7b, { 0x58 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xabbd, gbc.sp());
        EXPECT(0xcb7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xcb7b));
        // 58 02E2
        gbc.setState(0x33b7, 0x43e5, 0x5170, 0xbcc9, 0xc87f, 0x4825, 0x0, 0x0);
        gbc.writeMem(0x33b7, { 0x58 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x43e5, gbc.sp());
        EXPECT(0x33b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02E3
        gbc.setState(0xc9b7, 0x955e, 0x58b0, 0xcc24, 0x7ab1, 0xa9e5, 0x1, 0x0);
        gbc.writeMem(0xc9b7, { 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x955e, gbc.sp());
        EXPECT(0xc9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc9b7));
        // 58 02E4
        gbc.setState(0x50fb, 0x6bc, 0x7130, 0x8353, 0x6c96, 0x777b, 0x0, 0x0);
        gbc.writeMem(0x50fb, { 0x58 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6bc, gbc.sp());
        EXPECT(0x50fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02E5
        gbc.setState(0x9238, 0x379f, 0x8890, 0x20b6, 0xf8c2, 0x2313, 0x0, 0x0);
        gbc.writeMem(0x9238, { 0x58 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x379f, gbc.sp());
        EXPECT(0x9239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9238));
        // 58 02E6
        gbc.setState(0x6789, 0xa512, 0x5010, 0x5a54, 0x53a8, 0x2f45, 0x0, 0x0);
        gbc.writeMem(0x6789, { 0x58 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa512, gbc.sp());
        EXPECT(0x678a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02E7
        gbc.setState(0x5597, 0xabc5, 0x75b0, 0x3feb, 0x7560, 0x3bd5, 0x1, 0x1);
        gbc.writeMem(0x5597, { 0x58 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xabc5, gbc.sp());
        EXPECT(0x5598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02E8
        gbc.setState(0xdeb6, 0x9c81, 0x7370, 0xac50, 0xc3d5, 0x4371, 0x0, 0x0);
        gbc.writeMem(0xdeb6, { 0x58 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9c81, gbc.sp());
        EXPECT(0xdeb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdeb6));
        // 58 02E9
        gbc.setState(0x39be, 0xdafa, 0x2c60, 0x6443, 0xe3c3, 0x9cae, 0x0, 0x1);
        gbc.writeMem(0x39be, { 0x58 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdafa, gbc.sp());
        EXPECT(0x39bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02EA
        gbc.setState(0xdc05, 0xebb7, 0x8550, 0x40f6, 0xa125, 0x5cd6, 0x0, 0x0);
        gbc.writeMem(0xdc05, { 0x58 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xebb7, gbc.sp());
        EXPECT(0xdc06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdc05));
        // 58 02EB
        gbc.setState(0x88, 0x51f8, 0x6d00, 0x90e4, 0x8795, 0xb43e, 0x0, 0x0);
        gbc.writeMem(0x88, { 0x58 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x51f8, gbc.sp());
        EXPECT(0x89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02EC
        gbc.setState(0xe451, 0x96c5, 0x12d0, 0xccea, 0x4554, 0x2331, 0x1, 0x0);
        gbc.writeMem(0xe451, { 0x58 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x96c5, gbc.sp());
        EXPECT(0xe452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe451));
        // 58 02ED
        gbc.setState(0x8456, 0x98f8, 0x7cb0, 0xcea8, 0x20f0, 0x5f5e, 0x1, 0x0);
        gbc.writeMem(0x8456, { 0x58 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x98f8, gbc.sp());
        EXPECT(0x8457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8456));
        // 58 02EF
        gbc.setState(0x851, 0xc536, 0x5280, 0x1e42, 0x69ca, 0x8582, 0x1, 0x1);
        gbc.writeMem(0x851, { 0x58 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc536, gbc.sp());
        EXPECT(0x852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02F0
        gbc.setState(0x14aa, 0x9863, 0x6210, 0x7337, 0x6d72, 0x27f2, 0x1, 0x0);
        gbc.writeMem(0x14aa, { 0x58 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9863, gbc.sp());
        EXPECT(0x14ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02F1
        gbc.setState(0x24fe, 0x43db, 0x77f0, 0x3005, 0x607d, 0x7935, 0x1, 0x1);
        gbc.writeMem(0x24fe, { 0x58 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x43db, gbc.sp());
        EXPECT(0x24ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02F2
        gbc.setState(0x81de, 0x5b31, 0xae50, 0xb90c, 0x2de4, 0xc0dd, 0x0, 0x0);
        gbc.writeMem(0x81de, { 0x58 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5b31, gbc.sp());
        EXPECT(0x81df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x81de));
        // 58 02F3
        gbc.setState(0x6a20, 0xf8f3, 0xe880, 0xc848, 0x235b, 0xcc6f, 0x1, 0x0);
        gbc.writeMem(0x6a20, { 0x58 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf8f3, gbc.sp());
        EXPECT(0x6a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02F4
        gbc.setState(0x9e1e, 0x80fb, 0xb640, 0x24f1, 0x13f4, 0xf0ea, 0x0, 0x1);
        gbc.writeMem(0x9e1e, { 0x58 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x80fb, gbc.sp());
        EXPECT(0x9e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9e1e));
        // 58 02F5
        gbc.setState(0xda05, 0x79ab, 0xebc0, 0x2cf7, 0x2353, 0xf481, 0x0, 0x1);
        gbc.writeMem(0xda05, { 0x58 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x79ab, gbc.sp());
        EXPECT(0xda06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xda05));
        // 58 02F6
        gbc.setState(0xced7, 0x8d42, 0xd5e0, 0xae86, 0x85ea, 0x85f7, 0x0, 0x1);
        gbc.writeMem(0xced7, { 0x58 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8d42, gbc.sp());
        EXPECT(0xced8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xced7));
        // 58 02F7
        gbc.setState(0x2e26, 0x6b1e, 0x9640, 0xee32, 0x5af9, 0x7c1, 0x1, 0x0);
        gbc.writeMem(0x2e26, { 0x58 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6b1e, gbc.sp());
        EXPECT(0x2e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02F8
        gbc.setState(0x3671, 0x277e, 0x8e40, 0x6b16, 0x77b, 0x89b4, 0x0, 0x1);
        gbc.writeMem(0x3671, { 0x58 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x277e, gbc.sp());
        EXPECT(0x3672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02F9
        gbc.setState(0x83c4, 0xdbfe, 0x72c0, 0xad66, 0x577a, 0x279f, 0x1, 0x0);
        gbc.writeMem(0x83c4, { 0x58 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdbfe, gbc.sp());
        EXPECT(0x83c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x83c4));
        // 58 02FA
        gbc.setState(0x6d79, 0xd93d, 0x54c0, 0xbe37, 0x93d0, 0x9556, 0x1, 0x1);
        gbc.writeMem(0x6d79, { 0x58 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd93d, gbc.sp());
        EXPECT(0x6d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02FB
        gbc.setState(0x21d0, 0x1530, 0xefd0, 0x9dfe, 0x394f, 0xe921, 0x0, 0x1);
        gbc.writeMem(0x21d0, { 0x58 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1530, gbc.sp());
        EXPECT(0x21d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02FC
        gbc.setState(0x668d, 0x6944, 0x7fa0, 0x81fa, 0xec00, 0x2f87, 0x1, 0x0);
        gbc.writeMem(0x668d, { 0x58 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6944, gbc.sp());
        EXPECT(0x668e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 02FE
        gbc.setState(0x1d8c, 0x5fb6, 0x1930, 0xaaff, 0x1583, 0xad9c, 0x1, 0x0);
        gbc.writeMem(0x1d8c, { 0x58 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5fb6, gbc.sp());
        EXPECT(0x1d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 02FF
        gbc.setState(0xeaf, 0xadef, 0x68a0, 0xd32b, 0x82c9, 0x40dc, 0x0, 0x1);
        gbc.writeMem(0xeaf, { 0x58 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xadef, gbc.sp());
        EXPECT(0xeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0300
        gbc.setState(0xadb3, 0x176e, 0x5b30, 0x15a, 0x4526, 0x6630, 0x0, 0x0);
        gbc.writeMem(0xadb3, { 0x58 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x176e, gbc.sp());
        EXPECT(0xadb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xadb3));
        // 58 0301
        gbc.setState(0x59f0, 0x15cd, 0xced0, 0xeefa, 0x39d9, 0xfebd, 0x0, 0x0);
        gbc.writeMem(0x59f0, { 0x58 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x15cd, gbc.sp());
        EXPECT(0x59f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0302
        gbc.setState(0x80aa, 0xb4b6, 0x41d0, 0x6941, 0x5a1d, 0xb95b, 0x1, 0x0);
        gbc.writeMem(0x80aa, { 0x58 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb4b6, gbc.sp());
        EXPECT(0x80ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x80aa));
        // 58 0303
        gbc.setState(0x9d70, 0xaabd, 0x4ed0, 0x4210, 0x5a20, 0xd1c9, 0x0, 0x1);
        gbc.writeMem(0x9d70, { 0x58 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xaabd, gbc.sp());
        EXPECT(0x9d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9d70));
        // 58 0304
        gbc.setState(0xe487, 0x4f9c, 0xb1d0, 0x66cf, 0xc25, 0x717b, 0x0, 0x1);
        gbc.writeMem(0xe487, { 0x58 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4f9c, gbc.sp());
        EXPECT(0xe488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe487));
        // 58 0305
        gbc.setState(0x3f79, 0xe881, 0x82c0, 0xaea8, 0xd512, 0x103f, 0x1, 0x0);
        gbc.writeMem(0x3f79, { 0x58 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe881, gbc.sp());
        EXPECT(0x3f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0306
        gbc.setState(0x8f01, 0xbe9b, 0x87b0, 0x6f43, 0xdb6d, 0xf938, 0x1, 0x0);
        gbc.writeMem(0x8f01, { 0x58 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbe9b, gbc.sp());
        EXPECT(0x8f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8f01));
        // 58 0307
        gbc.setState(0xa630, 0xb528, 0x62d0, 0x2853, 0xbc89, 0x4c9b, 0x0, 0x1);
        gbc.writeMem(0xa630, { 0x58 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb528, gbc.sp());
        EXPECT(0xa631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa630));
        // 58 0308
        gbc.setState(0x242, 0x7886, 0x2900, 0xd3b5, 0xe65b, 0xcb1c, 0x1, 0x0);
        gbc.writeMem(0x242, { 0x58 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7886, gbc.sp());
        EXPECT(0x243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0309
        gbc.setState(0x8eea, 0xdd10, 0x49d0, 0x1eb6, 0x8dec, 0xc4b1, 0x1, 0x1);
        gbc.writeMem(0x8eea, { 0x58 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdd10, gbc.sp());
        EXPECT(0x8eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8eea));
        // 58 030A
        gbc.setState(0x9e1, 0x15e6, 0x20f0, 0xb714, 0x4306, 0xc771, 0x1, 0x1);
        gbc.writeMem(0x9e1, { 0x58 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x15e6, gbc.sp());
        EXPECT(0x9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 030B
        gbc.setState(0xd875, 0xc7a5, 0x5c10, 0x12ee, 0xbe8a, 0x877, 0x1, 0x0);
        gbc.writeMem(0xd875, { 0x58 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc7a5, gbc.sp());
        EXPECT(0xd876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd875));
        // 58 030C
        gbc.setState(0x6cbc, 0x3bf2, 0x4c0, 0x76e3, 0xa07, 0x25a3, 0x0, 0x0);
        gbc.writeMem(0x6cbc, { 0x58 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3bf2, gbc.sp());
        EXPECT(0x6cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 030D
        gbc.setState(0x2441, 0x1bd1, 0x1ea0, 0x7ddc, 0x4be8, 0x13d3, 0x1, 0x1);
        gbc.writeMem(0x2441, { 0x58 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1bd1, gbc.sp());
        EXPECT(0x2442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 030E
        gbc.setState(0x7764, 0xc8bb, 0x3970, 0x534f, 0x4cac, 0xc23b, 0x1, 0x0);
        gbc.writeMem(0x7764, { 0x58 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc8bb, gbc.sp());
        EXPECT(0x7765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0310
        gbc.setState(0x3a46, 0xe77d, 0xcd70, 0xbf34, 0x7afe, 0x5e61, 0x1, 0x1);
        gbc.writeMem(0x3a46, { 0x58 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe77d, gbc.sp());
        EXPECT(0x3a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0311
        gbc.setState(0x98ff, 0xd10d, 0x21d0, 0xc646, 0x363f, 0xaad8, 0x0, 0x1);
        gbc.writeMem(0x98ff, { 0x58 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd10d, gbc.sp());
        EXPECT(0x9900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x98ff));
        // 58 0313
        gbc.setState(0xf45, 0x2b2e, 0xaa90, 0x72fd, 0xc0dd, 0xcb77, 0x1, 0x1);
        gbc.writeMem(0xf45, { 0x58 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2b2e, gbc.sp());
        EXPECT(0xf46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0315
        gbc.setState(0xec22, 0x4599, 0xd5f0, 0x5341, 0x4660, 0x31e8, 0x0, 0x0);
        gbc.writeMem(0xec22, { 0x58 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4599, gbc.sp());
        EXPECT(0xec23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xec22));
        // 58 0316
        gbc.setState(0xcb78, 0x3440, 0xadd0, 0x8cdf, 0xb0ad, 0x29f5, 0x0, 0x1);
        gbc.writeMem(0xcb78, { 0x58 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3440, gbc.sp());
        EXPECT(0xcb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xcb78));
        // 58 0317
        gbc.setState(0xa21d, 0x6a48, 0xa850, 0x2b89, 0x3202, 0x72ef, 0x1, 0x0);
        gbc.writeMem(0xa21d, { 0x58 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6a48, gbc.sp());
        EXPECT(0xa21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa21d));
        // 58 0318
        gbc.setState(0x9850, 0xe924, 0x26c0, 0xe7d9, 0xf6b5, 0x7d72, 0x0, 0x0);
        gbc.writeMem(0x9850, { 0x58 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe924, gbc.sp());
        EXPECT(0x9851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9850));
        // 58 0319
        gbc.setState(0x7822, 0x5585, 0x4c60, 0x68ce, 0x3c7f, 0x59f4, 0x0, 0x0);
        gbc.writeMem(0x7822, { 0x58 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5585, gbc.sp());
        EXPECT(0x7823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 031A
        gbc.setState(0xedc7, 0x483e, 0xf060, 0x9bcb, 0x28f3, 0x58ca, 0x1, 0x1);
        gbc.writeMem(0xedc7, { 0x58 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x483e, gbc.sp());
        EXPECT(0xedc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xedc7));
        // 58 031B
        gbc.setState(0x2804, 0xbb21, 0x8920, 0xfc28, 0x1d59, 0x1e7c, 0x0, 0x1);
        gbc.writeMem(0x2804, { 0x58 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbb21, gbc.sp());
        EXPECT(0x2805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 031C
        gbc.setState(0x7223, 0x22f2, 0x9d80, 0x6c8f, 0xffd9, 0x2e2a, 0x0, 0x0);
        gbc.writeMem(0x7223, { 0x58 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x22f2, gbc.sp());
        EXPECT(0x7224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 031D
        gbc.setState(0x607f, 0x9b8e, 0x3b40, 0x5e43, 0x4979, 0x1e81, 0x0, 0x1);
        gbc.writeMem(0x607f, { 0x58 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9b8e, gbc.sp());
        EXPECT(0x6080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 031E
        gbc.setState(0x651c, 0x5c5e, 0x83a0, 0xa78f, 0x507b, 0x594, 0x1, 0x1);
        gbc.writeMem(0x651c, { 0x58 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5c5e, gbc.sp());
        EXPECT(0x651d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 031F
        gbc.setState(0x4b2e, 0xdbd2, 0xe020, 0x62e2, 0xea8e, 0xaa6d, 0x1, 0x1);
        gbc.writeMem(0x4b2e, { 0x58 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdbd2, gbc.sp());
        EXPECT(0x4b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0320
        gbc.setState(0xe785, 0xa6a, 0xa4b0, 0x430e, 0x4e9f, 0xbd5b, 0x0, 0x1);
        gbc.writeMem(0xe785, { 0x58 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa6a, gbc.sp());
        EXPECT(0xe786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe785));
        // 58 0321
        gbc.setState(0xd857, 0x636d, 0x4020, 0x868e, 0xe62b, 0x7c65, 0x0, 0x1);
        gbc.writeMem(0xd857, { 0x58 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x636d, gbc.sp());
        EXPECT(0xd858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd857));
        // 58 0322
        gbc.setState(0x8cea, 0x4a8f, 0xd8e0, 0x4bf3, 0x2a59, 0x59ce, 0x0, 0x0);
        gbc.writeMem(0x8cea, { 0x58 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4a8f, gbc.sp());
        EXPECT(0x8ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8cea));
        // 58 0323
        gbc.setState(0x25e0, 0x2531, 0xe7c0, 0x8205, 0xf15, 0x2bfc, 0x1, 0x0);
        gbc.writeMem(0x25e0, { 0x58 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2531, gbc.sp());
        EXPECT(0x25e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0324
        gbc.setState(0xbce5, 0x6061, 0xc70, 0x36df, 0x389b, 0x21aa, 0x1, 0x1);
        gbc.writeMem(0xbce5, { 0x58 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6061, gbc.sp());
        EXPECT(0xbce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbce5));
        // 58 0325
        gbc.setState(0xb7a7, 0xd277, 0x3570, 0x1222, 0xa54, 0x4691, 0x0, 0x1);
        gbc.writeMem(0xb7a7, { 0x58 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd277, gbc.sp());
        EXPECT(0xb7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb7a7));
        // 58 0326
        gbc.setState(0xabb9, 0x11a7, 0xa240, 0x7e57, 0xbd8c, 0xc69e, 0x1, 0x0);
        gbc.writeMem(0xabb9, { 0x58 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x11a7, gbc.sp());
        EXPECT(0xabba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xabb9));
        // 58 0327
        gbc.setState(0x4a8f, 0x9e20, 0x4810, 0x6acf, 0x389e, 0x9097, 0x1, 0x1);
        gbc.writeMem(0x4a8f, { 0x58 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9e20, gbc.sp());
        EXPECT(0x4a90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0328
        gbc.setState(0x2666, 0xb900, 0x21e0, 0x653e, 0xa42e, 0xbb92, 0x0, 0x0);
        gbc.writeMem(0x2666, { 0x58 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb900, gbc.sp());
        EXPECT(0x2667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0329
        gbc.setState(0xe97c, 0xcf25, 0x3fe0, 0x6d11, 0x8619, 0x55, 0x1, 0x0);
        gbc.writeMem(0xe97c, { 0x58 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcf25, gbc.sp());
        EXPECT(0xe97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe97c));
        // 58 032A
        gbc.setState(0x99ad, 0x2dce, 0xab50, 0xaeb9, 0x4792, 0x8184, 0x1, 0x1);
        gbc.writeMem(0x99ad, { 0x58 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2dce, gbc.sp());
        EXPECT(0x99ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x99ad));
        // 58 032B
        gbc.setState(0x6c60, 0x5245, 0xf70, 0x13a3, 0x28dd, 0xa3a5, 0x1, 0x1);
        gbc.writeMem(0x6c60, { 0x58 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5245, gbc.sp());
        EXPECT(0x6c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 032C
        gbc.setState(0xe07c, 0x5bdc, 0xc1f0, 0xeeea, 0xb5dc, 0xae27, 0x0, 0x0);
        gbc.writeMem(0xe07c, { 0x58 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5bdc, gbc.sp());
        EXPECT(0xe07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe07c));
        // 58 032D
        gbc.setState(0x7c9d, 0xf926, 0x7c40, 0xcc67, 0xf07a, 0x617d, 0x1, 0x0);
        gbc.writeMem(0x7c9d, { 0x58 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf926, gbc.sp());
        EXPECT(0x7c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 032F
        gbc.setState(0xbc15, 0x8cf5, 0x1f00, 0x8754, 0xdd0a, 0xbe27, 0x0, 0x1);
        gbc.writeMem(0xbc15, { 0x58 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8cf5, gbc.sp());
        EXPECT(0xbc16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbc15));
        // 58 0330
        gbc.setState(0xa996, 0x3f9f, 0x3400, 0xdf4d, 0xfeb, 0x211d, 0x0, 0x1);
        gbc.writeMem(0xa996, { 0x58 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3f9f, gbc.sp());
        EXPECT(0xa997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa996));
        // 58 0331
        gbc.setState(0x8f09, 0x528e, 0x4530, 0x8302, 0xdadd, 0x63be, 0x0, 0x0);
        gbc.writeMem(0x8f09, { 0x58 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x528e, gbc.sp());
        EXPECT(0x8f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8f09));
        // 58 0332
        gbc.setState(0x40c0, 0xa644, 0x5480, 0x4c35, 0x881d, 0xd89e, 0x1, 0x1);
        gbc.writeMem(0x40c0, { 0x58 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa644, gbc.sp());
        EXPECT(0x40c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0333
        gbc.setState(0xa95f, 0xdeee, 0x65f0, 0xe9c6, 0xbe00, 0x1796, 0x1, 0x0);
        gbc.writeMem(0xa95f, { 0x58 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdeee, gbc.sp());
        EXPECT(0xa960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa95f));
        // 58 0334
        gbc.setState(0x5f9a, 0x15e1, 0xd810, 0xd601, 0x9af2, 0xc21c, 0x1, 0x1);
        gbc.writeMem(0x5f9a, { 0x58 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x15e1, gbc.sp());
        EXPECT(0x5f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0335
        gbc.setState(0xda95, 0xa026, 0x5f0, 0x3d62, 0xf481, 0xea7c, 0x0, 0x1);
        gbc.writeMem(0xda95, { 0x58 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa026, gbc.sp());
        EXPECT(0xda96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xda95));
        // 58 0336
        gbc.setState(0x9b14, 0x4c98, 0x980, 0xb6e4, 0xadad, 0xd189, 0x0, 0x0);
        gbc.writeMem(0x9b14, { 0x58 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4c98, gbc.sp());
        EXPECT(0x9b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9b14));
        // 58 0337
        gbc.setState(0x9b1, 0xffd5, 0x80e0, 0x11d0, 0x2ee9, 0x69d6, 0x1, 0x0);
        gbc.writeMem(0x9b1, { 0x58 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xffd5, gbc.sp());
        EXPECT(0x9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0338
        gbc.setState(0x12d4, 0x4fb5, 0xde80, 0x7680, 0x74c1, 0x2f13, 0x1, 0x1);
        gbc.writeMem(0x12d4, { 0x58 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4fb5, gbc.sp());
        EXPECT(0x12d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0339
        gbc.setState(0x74b, 0x38aa, 0x84a0, 0xa649, 0xecc4, 0xea5, 0x1, 0x1);
        gbc.writeMem(0x74b, { 0x58 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x38aa, gbc.sp());
        EXPECT(0x74c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 033A
        gbc.setState(0x6d06, 0xa010, 0x9760, 0x392d, 0x3b83, 0x5b31, 0x0, 0x1);
        gbc.writeMem(0x6d06, { 0x58 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa010, gbc.sp());
        EXPECT(0x6d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 033B
        gbc.setState(0x1963, 0x28, 0x75d0, 0xfc2, 0xa1c1, 0x7587, 0x0, 0x1);
        gbc.writeMem(0x1963, { 0x58 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x28, gbc.sp());
        EXPECT(0x1964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 033C
        gbc.setState(0x1822, 0xff57, 0x6160, 0x5868, 0x169, 0x8e07, 0x1, 0x0);
        gbc.writeMem(0x1822, { 0x58 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xff57, gbc.sp());
        EXPECT(0x1823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 033D
        gbc.setState(0x6c80, 0xf27e, 0x2de0, 0xeb1a, 0x5784, 0xc4ce, 0x0, 0x1);
        gbc.writeMem(0x6c80, { 0x58 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf27e, gbc.sp());
        EXPECT(0x6c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 033E
        gbc.setState(0x64f7, 0x1bdf, 0x3cc0, 0xee1, 0xbfe4, 0x7ab0, 0x1, 0x0);
        gbc.writeMem(0x64f7, { 0x58 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1bdf, gbc.sp());
        EXPECT(0x64f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 033F
        gbc.setState(0x26e9, 0x6a99, 0x1ee0, 0x5dd1, 0x82ec, 0x8f04, 0x1, 0x1);
        gbc.writeMem(0x26e9, { 0x58 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6a99, gbc.sp());
        EXPECT(0x26ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0340
        gbc.setState(0x5681, 0xb46b, 0x1010, 0xc910, 0x9fef, 0x22c, 0x0, 0x1);
        gbc.writeMem(0x5681, { 0x58 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb46b, gbc.sp());
        EXPECT(0x5682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0341
        gbc.setState(0xb2ad, 0x20ed, 0xb4c0, 0xab8e, 0x97a2, 0x2066, 0x1, 0x1);
        gbc.writeMem(0xb2ad, { 0x58 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x20ed, gbc.sp());
        EXPECT(0xb2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb2ad));
        // 58 0342
        gbc.setState(0xdb30, 0x10df, 0xe730, 0xf2a3, 0xc44b, 0x4bc4, 0x0, 0x0);
        gbc.writeMem(0xdb30, { 0x58 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x10df, gbc.sp());
        EXPECT(0xdb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdb30));
        // 58 0343
        gbc.setState(0xae46, 0x5ff7, 0x5fd0, 0x8a74, 0xe105, 0x7366, 0x0, 0x0);
        gbc.writeMem(0xae46, { 0x58 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5ff7, gbc.sp());
        EXPECT(0xae47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xae46));
        // 58 0344
        gbc.setState(0x558c, 0x715c, 0xb260, 0xc8c5, 0xf748, 0x7f1, 0x1, 0x0);
        gbc.writeMem(0x558c, { 0x58 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x715c, gbc.sp());
        EXPECT(0x558d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0345
        gbc.setState(0x5d7d, 0x3fad, 0x8d30, 0x47cc, 0x3edd, 0x3267, 0x1, 0x0);
        gbc.writeMem(0x5d7d, { 0x58 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3fad, gbc.sp());
        EXPECT(0x5d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0346
        gbc.setState(0xcffd, 0xa3df, 0xd090, 0xa36f, 0xe05, 0x8756, 0x0, 0x1);
        gbc.writeMem(0xcffd, { 0x58 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa3df, gbc.sp());
        EXPECT(0xcffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xcffd));
        // 58 0347
        gbc.setState(0x78fe, 0xdcae, 0xa6a0, 0xb512, 0x60dc, 0xcc3b, 0x0, 0x1);
        gbc.writeMem(0x78fe, { 0x58 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdcae, gbc.sp());
        EXPECT(0x78ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0348
        gbc.setState(0x3dcc, 0x122f, 0x31a0, 0x6006, 0x4b13, 0x741, 0x1, 0x0);
        gbc.writeMem(0x3dcc, { 0x58 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x122f, gbc.sp());
        EXPECT(0x3dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0349
        gbc.setState(0x572d, 0xab94, 0x6620, 0x93e9, 0x1217, 0xd7a8, 0x1, 0x0);
        gbc.writeMem(0x572d, { 0x58 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xab94, gbc.sp());
        EXPECT(0x572e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 034A
        gbc.setState(0x64f4, 0x58a3, 0xab10, 0xaad0, 0xf7b, 0x6f3, 0x0, 0x0);
        gbc.writeMem(0x64f4, { 0x58 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x58a3, gbc.sp());
        EXPECT(0x64f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 034B
        gbc.setState(0x7d39, 0x5036, 0x78f0, 0xfeba, 0x4fe9, 0xbf13, 0x0, 0x0);
        gbc.writeMem(0x7d39, { 0x58 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5036, gbc.sp());
        EXPECT(0x7d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 034C
        gbc.setState(0x4f82, 0xb909, 0x24a0, 0x8fcd, 0x20f9, 0xf3f1, 0x0, 0x1);
        gbc.writeMem(0x4f82, { 0x58 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb909, gbc.sp());
        EXPECT(0x4f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 034D
        gbc.setState(0x5f64, 0x2a95, 0xfaf0, 0x4ad9, 0xd79f, 0x4a3f, 0x0, 0x0);
        gbc.writeMem(0x5f64, { 0x58 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2a95, gbc.sp());
        EXPECT(0x5f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 034E
        gbc.setState(0xaaa3, 0xf557, 0x75d0, 0x5742, 0x2f4, 0x934e, 0x0, 0x0);
        gbc.writeMem(0xaaa3, { 0x58 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf557, gbc.sp());
        EXPECT(0xaaa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xaaa3));
        // 58 034F
        gbc.setState(0x5e6f, 0x7c6f, 0x30b0, 0x5922, 0x4c65, 0x55e2, 0x0, 0x0);
        gbc.writeMem(0x5e6f, { 0x58 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7c6f, gbc.sp());
        EXPECT(0x5e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0351
        gbc.setState(0xbb8f, 0x2d69, 0xcb80, 0xce9b, 0xa580, 0x5915, 0x1, 0x1);
        gbc.writeMem(0xbb8f, { 0x58 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2d69, gbc.sp());
        EXPECT(0xbb90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbb8f));
        // 58 0353
        gbc.setState(0x5a6e, 0x8982, 0xe260, 0x67a7, 0x5986, 0xbeac, 0x0, 0x0);
        gbc.writeMem(0x5a6e, { 0x58 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8982, gbc.sp());
        EXPECT(0x5a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0354
        gbc.setState(0xaf1, 0x2443, 0x1a70, 0x6be5, 0xbeb9, 0xb264, 0x1, 0x1);
        gbc.writeMem(0xaf1, { 0x58 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2443, gbc.sp());
        EXPECT(0xaf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0355
        gbc.setState(0x6eab, 0xf7b3, 0xfde0, 0x1bc3, 0x5477, 0x135c, 0x1, 0x0);
        gbc.writeMem(0x6eab, { 0x58 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf7b3, gbc.sp());
        EXPECT(0x6eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0357
        gbc.setState(0x7cfe, 0xd574, 0x160, 0xff5, 0xb9e1, 0xe72d, 0x1, 0x1);
        gbc.writeMem(0x7cfe, { 0x58 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd574, gbc.sp());
        EXPECT(0x7cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0358
        gbc.setState(0x6cd1, 0xff0a, 0x8400, 0xea60, 0xf2d4, 0x9086, 0x0, 0x1);
        gbc.writeMem(0x6cd1, { 0x58 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xff0a, gbc.sp());
        EXPECT(0x6cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0359
        gbc.setState(0xe6ff, 0x20bc, 0xdf20, 0xc919, 0xa0d3, 0x1615, 0x1, 0x0);
        gbc.writeMem(0xe6ff, { 0x58 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x20bc, gbc.sp());
        EXPECT(0xe700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe6ff));
        // 58 035A
        gbc.setState(0x6173, 0xb231, 0x8ca0, 0x8f5b, 0x9796, 0xeb5, 0x1, 0x1);
        gbc.writeMem(0x6173, { 0x58 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb231, gbc.sp());
        EXPECT(0x6174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 035B
        gbc.setState(0x3848, 0xf5b, 0xfc20, 0x65b2, 0x22ce, 0xfd24, 0x1, 0x1);
        gbc.writeMem(0x3848, { 0x58 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf5b, gbc.sp());
        EXPECT(0x3849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 035C
        gbc.setState(0x3291, 0xe451, 0xe880, 0x81cc, 0x9c09, 0x268d, 0x0, 0x0);
        gbc.writeMem(0x3291, { 0x58 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe451, gbc.sp());
        EXPECT(0x3292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 035D
        gbc.setState(0x50a7, 0xfb48, 0x44f0, 0xfe5f, 0xa822, 0xdfa3, 0x1, 0x0);
        gbc.writeMem(0x50a7, { 0x58 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfb48, gbc.sp());
        EXPECT(0x50a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 035E
        gbc.setState(0xc079, 0x52a3, 0xab30, 0x902e, 0xcfaa, 0x36a7, 0x1, 0x1);
        gbc.writeMem(0xc079, { 0x58 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x52a3, gbc.sp());
        EXPECT(0xc07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc079));
        // 58 0360
        gbc.setState(0xbcca, 0xfb23, 0x81a0, 0x507c, 0xfa74, 0x91af, 0x1, 0x0);
        gbc.writeMem(0xbcca, { 0x58 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfb23, gbc.sp());
        EXPECT(0xbccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbcca));
        // 58 0361
        gbc.setState(0xd242, 0xc2f5, 0xec10, 0xdb70, 0x92fd, 0xd945, 0x0, 0x0);
        gbc.writeMem(0xd242, { 0x58 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc2f5, gbc.sp());
        EXPECT(0xd243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd242));
        // 58 0362
        gbc.setState(0xdb85, 0xabec, 0x4010, 0xf1e3, 0x83e1, 0xbcc9, 0x0, 0x0);
        gbc.writeMem(0xdb85, { 0x58 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xabec, gbc.sp());
        EXPECT(0xdb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdb85));
        // 58 0363
        gbc.setState(0x76d2, 0x7579, 0x8530, 0x94df, 0x4084, 0x18a7, 0x1, 0x0);
        gbc.writeMem(0x76d2, { 0x58 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7579, gbc.sp());
        EXPECT(0x76d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0364
        gbc.setState(0xccd8, 0x4354, 0x7450, 0x735f, 0xac43, 0xa01a, 0x0, 0x1);
        gbc.writeMem(0xccd8, { 0x58 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4354, gbc.sp());
        EXPECT(0xccd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xccd8));
        // 58 0365
        gbc.setState(0x4a1c, 0xd2aa, 0x850, 0x37fc, 0x694d, 0x472d, 0x0, 0x0);
        gbc.writeMem(0x4a1c, { 0x58 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd2aa, gbc.sp());
        EXPECT(0x4a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0366
        gbc.setState(0x604, 0x6b13, 0x270, 0x95bb, 0xb277, 0x5069, 0x0, 0x1);
        gbc.writeMem(0x604, { 0x58 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6b13, gbc.sp());
        EXPECT(0x605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0367
        gbc.setState(0x874c, 0x4bb9, 0xd850, 0x3a95, 0x3533, 0x1c9b, 0x1, 0x0);
        gbc.writeMem(0x874c, { 0x58 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4bb9, gbc.sp());
        EXPECT(0x874d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x874c));
        // 58 0368
        gbc.setState(0x1a33, 0xf4b1, 0x37f0, 0xa785, 0xf1b6, 0x1be6, 0x1, 0x0);
        gbc.writeMem(0x1a33, { 0x58 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf4b1, gbc.sp());
        EXPECT(0x1a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0369
        gbc.setState(0xbf49, 0x7cff, 0x4a40, 0x52a, 0xd6d5, 0x1fc7, 0x0, 0x0);
        gbc.writeMem(0xbf49, { 0x58 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7cff, gbc.sp());
        EXPECT(0xbf4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbf49));
        // 58 036A
        gbc.setState(0x7572, 0xa446, 0x7e60, 0xb235, 0x45e3, 0xbea5, 0x0, 0x0);
        gbc.writeMem(0x7572, { 0x58 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa446, gbc.sp());
        EXPECT(0x7573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 036B
        gbc.setState(0x1d80, 0xa667, 0xeb10, 0x4506, 0x8c1f, 0xda10, 0x1, 0x1);
        gbc.writeMem(0x1d80, { 0x58 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa667, gbc.sp());
        EXPECT(0x1d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 036C
        gbc.setState(0x2e3f, 0x975a, 0x3a40, 0xa933, 0xcc5, 0x7bf2, 0x1, 0x1);
        gbc.writeMem(0x2e3f, { 0x58 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x975a, gbc.sp());
        EXPECT(0x2e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 036D
        gbc.setState(0x9dae, 0x628a, 0x9080, 0xda6f, 0x7970, 0x4398, 0x0, 0x0);
        gbc.writeMem(0x9dae, { 0x58 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x628a, gbc.sp());
        EXPECT(0x9daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9dae));
        // 58 036E
        gbc.setState(0x7945, 0xb10f, 0x5a30, 0xa313, 0xb079, 0x93ec, 0x0, 0x1);
        gbc.writeMem(0x7945, { 0x58 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb10f, gbc.sp());
        EXPECT(0x7946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 036F
        gbc.setState(0x64e6, 0xf6ef, 0x18f0, 0x5e66, 0xb05b, 0x1721, 0x1, 0x0);
        gbc.writeMem(0x64e6, { 0x58 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf6ef, gbc.sp());
        EXPECT(0x64e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0370
        gbc.setState(0x820c, 0xae9c, 0x61b0, 0x8212, 0xe05, 0x2241, 0x0, 0x0);
        gbc.writeMem(0x820c, { 0x58 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xae9c, gbc.sp());
        EXPECT(0x820d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x820c));
        // 58 0371
        gbc.setState(0x35b1, 0xd098, 0xb00, 0xb555, 0x26dd, 0x447b, 0x1, 0x0);
        gbc.writeMem(0x35b1, { 0x58 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd098, gbc.sp());
        EXPECT(0x35b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0372
        gbc.setState(0x1f4c, 0xdf85, 0x77a0, 0xa60c, 0x9b65, 0x649b, 0x1, 0x1);
        gbc.writeMem(0x1f4c, { 0x58 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdf85, gbc.sp());
        EXPECT(0x1f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0373
        gbc.setState(0x140c, 0xc18a, 0x8ab0, 0x561, 0x79da, 0x6b71, 0x0, 0x0);
        gbc.writeMem(0x140c, { 0x58 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc18a, gbc.sp());
        EXPECT(0x140d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0374
        gbc.setState(0xc5be, 0xeeff, 0x5d90, 0xae5f, 0xec7, 0xf38a, 0x1, 0x0);
        gbc.writeMem(0xc5be, { 0x58 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xeeff, gbc.sp());
        EXPECT(0xc5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc5be));
        // 58 0375
        gbc.setState(0xe262, 0xf4b1, 0xa1a0, 0x35d9, 0xacda, 0x6452, 0x0, 0x1);
        gbc.writeMem(0xe262, { 0x58 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf4b1, gbc.sp());
        EXPECT(0xe263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe262));
        // 58 0376
        gbc.setState(0x6980, 0xd30c, 0x30c0, 0x1d5d, 0x9291, 0xa25b, 0x1, 0x0);
        gbc.writeMem(0x6980, { 0x58 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd30c, gbc.sp());
        EXPECT(0x6981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0377
        gbc.setState(0x3a01, 0x67da, 0x2450, 0xc2b6, 0x8428, 0x62fa, 0x0, 0x0);
        gbc.writeMem(0x3a01, { 0x58 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x67da, gbc.sp());
        EXPECT(0x3a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0378
        gbc.setState(0xd5da, 0xea89, 0xaee0, 0x91df, 0x52e6, 0x2c25, 0x1, 0x1);
        gbc.writeMem(0xd5da, { 0x58 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xea89, gbc.sp());
        EXPECT(0xd5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd5da));
        // 58 0379
        gbc.setState(0x456c, 0x44fb, 0xe900, 0x266d, 0xc689, 0x10ce, 0x0, 0x1);
        gbc.writeMem(0x456c, { 0x58 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x44fb, gbc.sp());
        EXPECT(0x456d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 037A
        gbc.setState(0x5368, 0xdc91, 0x3cc0, 0xf247, 0xdf4f, 0x17b1, 0x1, 0x1);
        gbc.writeMem(0x5368, { 0x58 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdc91, gbc.sp());
        EXPECT(0x5369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 037B
        gbc.setState(0xab3, 0x158c, 0x2750, 0xe2e4, 0xaa4f, 0x2c98, 0x0, 0x1);
        gbc.writeMem(0xab3, { 0x58 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x158c, gbc.sp());
        EXPECT(0xab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 037C
        gbc.setState(0x4d6e, 0x45e7, 0xa550, 0x1f3a, 0x71e2, 0xc569, 0x1, 0x1);
        gbc.writeMem(0x4d6e, { 0x58 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x45e7, gbc.sp());
        EXPECT(0x4d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 037F
        gbc.setState(0xa4d9, 0x9210, 0x1f90, 0xc5a6, 0xaa7e, 0x18d3, 0x1, 0x1);
        gbc.writeMem(0xa4d9, { 0x58 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9210, gbc.sp());
        EXPECT(0xa4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa4d9));
        // 58 0380
        gbc.setState(0x85d9, 0xb0e3, 0x3930, 0x53db, 0xf241, 0x975a, 0x0, 0x0);
        gbc.writeMem(0x85d9, { 0x58 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb0e3, gbc.sp());
        EXPECT(0x85da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x85d9));
        // 58 0381
        gbc.setState(0x334d, 0x869f, 0xb390, 0x2c7d, 0x2b6e, 0x3d71, 0x1, 0x1);
        gbc.writeMem(0x334d, { 0x58 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x869f, gbc.sp());
        EXPECT(0x334e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0382
        gbc.setState(0x1123, 0x6a3d, 0xeca0, 0xab7e, 0xe5ea, 0xef68, 0x1, 0x0);
        gbc.writeMem(0x1123, { 0x58 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6a3d, gbc.sp());
        EXPECT(0x1124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0383
        gbc.setState(0x30e6, 0x2f4a, 0x6400, 0x2a27, 0x3e01, 0xf1d3, 0x1, 0x1);
        gbc.writeMem(0x30e6, { 0x58 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2f4a, gbc.sp());
        EXPECT(0x30e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0385
        gbc.setState(0x7343, 0xc191, 0x9770, 0x2649, 0xcc11, 0xdb45, 0x0, 0x0);
        gbc.writeMem(0x7343, { 0x58 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc191, gbc.sp());
        EXPECT(0x7344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0386
        gbc.setState(0xeb12, 0xc75, 0x7ff0, 0x2e5f, 0x5163, 0xdd89, 0x1, 0x0);
        gbc.writeMem(0xeb12, { 0x58 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc75, gbc.sp());
        EXPECT(0xeb13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xeb12));
        // 58 0387
        gbc.setState(0xc082, 0xa5b3, 0xabc0, 0x6e8a, 0xb837, 0x5754, 0x1, 0x1);
        gbc.writeMem(0xc082, { 0x58 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa5b3, gbc.sp());
        EXPECT(0xc083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc082));
        // 58 0388
        gbc.setState(0x12e5, 0x2028, 0xc540, 0x83ec, 0x68b0, 0xdb94, 0x1, 0x1);
        gbc.writeMem(0x12e5, { 0x58 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2028, gbc.sp());
        EXPECT(0x12e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 038A
        gbc.setState(0xbed7, 0xe159, 0xb340, 0xc17e, 0x9598, 0xcbfb, 0x1, 0x0);
        gbc.writeMem(0xbed7, { 0x58 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe159, gbc.sp());
        EXPECT(0xbed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbed7));
        // 58 038C
        gbc.setState(0xa0d3, 0x3f09, 0x99f0, 0x64ec, 0x9db7, 0x9700, 0x0, 0x1);
        gbc.writeMem(0xa0d3, { 0x58 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3f09, gbc.sp());
        EXPECT(0xa0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa0d3));
        // 58 038D
        gbc.setState(0xc552, 0xa21e, 0x8800, 0x9b43, 0x5884, 0x324f, 0x0, 0x1);
        gbc.writeMem(0xc552, { 0x58 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa21e, gbc.sp());
        EXPECT(0xc553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc552));
        // 58 038E
        gbc.setState(0xa9a8, 0x445d, 0x2170, 0xd07a, 0x9b49, 0x878f, 0x1, 0x0);
        gbc.writeMem(0xa9a8, { 0x58 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x445d, gbc.sp());
        EXPECT(0xa9a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa9a8));
        // 58 038F
        gbc.setState(0xc2a2, 0xa383, 0xdb60, 0x371e, 0x68c7, 0x3f8, 0x0, 0x0);
        gbc.writeMem(0xc2a2, { 0x58 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa383, gbc.sp());
        EXPECT(0xc2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc2a2));
        // 58 0390
        gbc.setState(0x7541, 0x38ff, 0x5560, 0x1037, 0x9a7d, 0x8fb1, 0x1, 0x1);
        gbc.writeMem(0x7541, { 0x58 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x38ff, gbc.sp());
        EXPECT(0x7542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0392
        gbc.setState(0x117c, 0xc541, 0x9570, 0xfc56, 0x49fc, 0x895, 0x1, 0x1);
        gbc.writeMem(0x117c, { 0x58 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc541, gbc.sp());
        EXPECT(0x117d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0393
        gbc.setState(0x24cb, 0x3284, 0x4150, 0x8d88, 0x416c, 0x4872, 0x0, 0x1);
        gbc.writeMem(0x24cb, { 0x58 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3284, gbc.sp());
        EXPECT(0x24cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0394
        gbc.setState(0x7231, 0x2d9, 0x6500, 0xef0a, 0x4c22, 0x24c2, 0x1, 0x0);
        gbc.writeMem(0x7231, { 0x58 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2d9, gbc.sp());
        EXPECT(0x7232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0395
        gbc.setState(0x2a24, 0x9741, 0xbaa0, 0x813b, 0xcb4e, 0x9d88, 0x1, 0x0);
        gbc.writeMem(0x2a24, { 0x58 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9741, gbc.sp());
        EXPECT(0x2a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0396
        gbc.setState(0x188d, 0xd482, 0x3410, 0x45d6, 0xca35, 0x82a3, 0x1, 0x1);
        gbc.writeMem(0x188d, { 0x58 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd482, gbc.sp());
        EXPECT(0x188e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 0397
        gbc.setState(0x43cb, 0xb6fd, 0xc4a0, 0xdd6c, 0xe8ed, 0xba68, 0x1, 0x0);
        gbc.writeMem(0x43cb, { 0x58 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb6fd, gbc.sp());
        EXPECT(0x43cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0398
        gbc.setState(0x5a14, 0x5b0f, 0x36e0, 0x2de6, 0xd0c2, 0x8e1d, 0x1, 0x0);
        gbc.writeMem(0x5a14, { 0x58 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5b0f, gbc.sp());
        EXPECT(0x5a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 0399
        gbc.setState(0x8f6, 0xf91, 0x33e0, 0xb6fd, 0x9140, 0x7ddf, 0x0, 0x1);
        gbc.writeMem(0x8f6, { 0x58 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf91, gbc.sp());
        EXPECT(0x8f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 039A
        gbc.setState(0x3a35, 0x8410, 0xb9b0, 0x568c, 0x5857, 0xb05a, 0x0, 0x0);
        gbc.writeMem(0x3a35, { 0x58 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8410, gbc.sp());
        EXPECT(0x3a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 039B
        gbc.setState(0x498b, 0x26ce, 0xb0d0, 0xa2ee, 0x3c10, 0xa46, 0x0, 0x0);
        gbc.writeMem(0x498b, { 0x58 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x26ce, gbc.sp());
        EXPECT(0x498c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 039C
        gbc.setState(0x90ea, 0xc5d0, 0x3850, 0xd29b, 0xdc77, 0x1ad2, 0x1, 0x1);
        gbc.writeMem(0x90ea, { 0x58 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc5d0, gbc.sp());
        EXPECT(0x90eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x90ea));
        // 58 039D
        gbc.setState(0x2eb0, 0x5c7e, 0x6f0, 0x93f1, 0x5c28, 0xc84, 0x0, 0x1);
        gbc.writeMem(0x2eb0, { 0x58 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5c7e, gbc.sp());
        EXPECT(0x2eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 039E
        gbc.setState(0x93e9, 0x7f60, 0xa590, 0x5db0, 0x8df8, 0x83d2, 0x1, 0x1);
        gbc.writeMem(0x93e9, { 0x58 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7f60, gbc.sp());
        EXPECT(0x93ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x93e9));
        // 58 039F
        gbc.setState(0x523f, 0x787f, 0x5fc0, 0x193d, 0x237c, 0x397d, 0x1, 0x1);
        gbc.writeMem(0x523f, { 0x58 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x787f, gbc.sp());
        EXPECT(0x5240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03A0
        gbc.setState(0x8db0, 0x4a71, 0x7b0, 0xd388, 0x4f7a, 0x66fe, 0x1, 0x0);
        gbc.writeMem(0x8db0, { 0x58 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4a71, gbc.sp());
        EXPECT(0x8db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8db0));
        // 58 03A1
        gbc.setState(0xc4e3, 0x2675, 0x84c0, 0x362c, 0xfbcc, 0x24ff, 0x1, 0x1);
        gbc.writeMem(0xc4e3, { 0x58 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2675, gbc.sp());
        EXPECT(0xc4e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc4e3));
        // 58 03A2
        gbc.setState(0x6d91, 0x5f1b, 0x33c0, 0x1579, 0x807c, 0x1474, 0x0, 0x1);
        gbc.writeMem(0x6d91, { 0x58 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5f1b, gbc.sp());
        EXPECT(0x6d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03A3
        gbc.setState(0x69df, 0x655, 0x76e0, 0x99e5, 0x2bb0, 0x36ba, 0x0, 0x1);
        gbc.writeMem(0x69df, { 0x58 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x655, gbc.sp());
        EXPECT(0x69e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03A4
        gbc.setState(0x1eb6, 0xe590, 0x910, 0xcfdb, 0xdde6, 0xcacc, 0x1, 0x1);
        gbc.writeMem(0x1eb6, { 0x58 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe590, gbc.sp());
        EXPECT(0x1eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03A5
        gbc.setState(0x246a, 0x6862, 0x54f0, 0x5265, 0x80d4, 0x67d, 0x0, 0x0);
        gbc.writeMem(0x246a, { 0x58 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6862, gbc.sp());
        EXPECT(0x246b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03A7
        gbc.setState(0x77f7, 0xbbed, 0x4540, 0xcce, 0x5909, 0xf118, 0x1, 0x0);
        gbc.writeMem(0x77f7, { 0x58 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbbed, gbc.sp());
        EXPECT(0x77f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03A9
        gbc.setState(0x91b4, 0x8982, 0x9170, 0x4efa, 0x6b8b, 0x7c31, 0x0, 0x1);
        gbc.writeMem(0x91b4, { 0x58 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8982, gbc.sp());
        EXPECT(0x91b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x91b4));
        // 58 03AB
        gbc.setState(0xdb3d, 0x3c03, 0x8d30, 0x648, 0x6933, 0xa8f1, 0x0, 0x1);
        gbc.writeMem(0xdb3d, { 0x58 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3c03, gbc.sp());
        EXPECT(0xdb3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdb3d));
        // 58 03AC
        gbc.setState(0xba, 0x757d, 0x3e60, 0x84ad, 0x95f5, 0xa34f, 0x1, 0x1);
        gbc.writeMem(0xba, { 0x58 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x757d, gbc.sp());
        EXPECT(0xbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03AD
        gbc.setState(0xcd90, 0x653f, 0x95b0, 0x28fb, 0xcf5f, 0x6c00, 0x0, 0x1);
        gbc.writeMem(0xcd90, { 0x58 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x653f, gbc.sp());
        EXPECT(0xcd91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xcd90));
        // 58 03AE
        gbc.setState(0x6f9f, 0x5b54, 0x6140, 0xbdfc, 0x9527, 0x2fb3, 0x1, 0x0);
        gbc.writeMem(0x6f9f, { 0x58 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5b54, gbc.sp());
        EXPECT(0x6fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03AF
        gbc.setState(0x7dac, 0x438b, 0xa410, 0x651a, 0x2de9, 0xb94e, 0x1, 0x1);
        gbc.writeMem(0x7dac, { 0x58 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x438b, gbc.sp());
        EXPECT(0x7dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03B0
        gbc.setState(0x6d3b, 0xf14e, 0x4db0, 0xa4e6, 0x72e9, 0x6fe7, 0x1, 0x1);
        gbc.writeMem(0x6d3b, { 0x58 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf14e, gbc.sp());
        EXPECT(0x6d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03B1
        gbc.setState(0x9265, 0x6a0f, 0x8de0, 0xc4aa, 0xc270, 0x489c, 0x0, 0x0);
        gbc.writeMem(0x9265, { 0x58 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6a0f, gbc.sp());
        EXPECT(0x9266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9265));
        // 58 03B2
        gbc.setState(0x463d, 0x963e, 0x7540, 0xf5de, 0xf64, 0xf52b, 0x1, 0x1);
        gbc.writeMem(0x463d, { 0x58 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x963e, gbc.sp());
        EXPECT(0x463e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03B3
        gbc.setState(0x9564, 0x6bbb, 0xc000, 0x83be, 0xd460, 0xd585, 0x1, 0x1);
        gbc.writeMem(0x9564, { 0x58 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6bbb, gbc.sp());
        EXPECT(0x9565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9564));
        // 58 03B4
        gbc.setState(0x60d5, 0x5d15, 0x7090, 0xe5f0, 0x6c38, 0x3051, 0x1, 0x1);
        gbc.writeMem(0x60d5, { 0x58 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5d15, gbc.sp());
        EXPECT(0x60d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03B5
        gbc.setState(0x4f1f, 0x18f7, 0x720, 0x497d, 0x96a7, 0x1e1b, 0x0, 0x0);
        gbc.writeMem(0x4f1f, { 0x58 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x18f7, gbc.sp());
        EXPECT(0x4f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03B7
        gbc.setState(0xaa93, 0x5170, 0x4100, 0xd365, 0xae99, 0x3dda, 0x0, 0x0);
        gbc.writeMem(0xaa93, { 0x58 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5170, gbc.sp());
        EXPECT(0xaa94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xaa93));
        // 58 03B8
        gbc.setState(0xb0aa, 0xf7a7, 0x4170, 0xb0bc, 0x7d3c, 0x78c4, 0x1, 0x1);
        gbc.writeMem(0xb0aa, { 0x58 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf7a7, gbc.sp());
        EXPECT(0xb0ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb0aa));
        // 58 03B9
        gbc.setState(0x3ae3, 0x2700, 0xde50, 0x7e15, 0x1d61, 0x19f4, 0x0, 0x1);
        gbc.writeMem(0x3ae3, { 0x58 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2700, gbc.sp());
        EXPECT(0x3ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03BA
        gbc.setState(0xa8f7, 0x3a18, 0x3520, 0x9fbc, 0xdfc2, 0x56d8, 0x0, 0x0);
        gbc.writeMem(0xa8f7, { 0x58 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3a18, gbc.sp());
        EXPECT(0xa8f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa8f7));
        // 58 03BB
        gbc.setState(0xc63b, 0x64f1, 0x1f0, 0xf5b8, 0x9e54, 0x33cc, 0x0, 0x1);
        gbc.writeMem(0xc63b, { 0x58 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x64f1, gbc.sp());
        EXPECT(0xc63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc63b));
        // 58 03BC
        gbc.setState(0x82ba, 0xc, 0x50f0, 0x681c, 0x4822, 0x55a1, 0x1, 0x1);
        gbc.writeMem(0x82ba, { 0x58 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc, gbc.sp());
        EXPECT(0x82bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x82ba));
        // 58 03BD
        gbc.setState(0x4777, 0xcf24, 0xa010, 0x5ec7, 0x2757, 0x186b, 0x1, 0x0);
        gbc.writeMem(0x4777, { 0x58 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcf24, gbc.sp());
        EXPECT(0x4778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03BE
        gbc.setState(0xd0d, 0xaf08, 0x6230, 0x24fa, 0xe25c, 0x3567, 0x1, 0x0);
        gbc.writeMem(0xd0d, { 0x58 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xaf08, gbc.sp());
        EXPECT(0xd0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03BF
        gbc.setState(0x7489, 0x77e9, 0x2c30, 0x1c97, 0x9f64, 0xe0b0, 0x0, 0x1);
        gbc.writeMem(0x7489, { 0x58 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x77e9, gbc.sp());
        EXPECT(0x748a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03C0
        gbc.setState(0x5c22, 0xd25d, 0x3d80, 0x6973, 0xdc06, 0x24e9, 0x0, 0x1);
        gbc.writeMem(0x5c22, { 0x58 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd25d, gbc.sp());
        EXPECT(0x5c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03C1
        gbc.setState(0x2bf1, 0x2e36, 0xb440, 0x7812, 0x1736, 0xf9fc, 0x1, 0x0);
        gbc.writeMem(0x2bf1, { 0x58 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2e36, gbc.sp());
        EXPECT(0x2bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03C2
        gbc.setState(0x3ee1, 0x9b53, 0x4e80, 0x8eb7, 0xc58c, 0x12b9, 0x1, 0x1);
        gbc.writeMem(0x3ee1, { 0x58 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9b53, gbc.sp());
        EXPECT(0x3ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03C3
        gbc.setState(0x2030, 0xca3d, 0x8170, 0xf0c8, 0x731a, 0xd4d5, 0x0, 0x1);
        gbc.writeMem(0x2030, { 0x58 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xca3d, gbc.sp());
        EXPECT(0x2031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03C4
        gbc.setState(0xd501, 0x402, 0xec10, 0x68eb, 0xe13f, 0x711c, 0x1, 0x1);
        gbc.writeMem(0xd501, { 0x58 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x402, gbc.sp());
        EXPECT(0xd502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd501));
        // 58 03C5
        gbc.setState(0x5156, 0xa8a8, 0xb540, 0x563e, 0x68e8, 0x229d, 0x1, 0x0);
        gbc.writeMem(0x5156, { 0x58 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa8a8, gbc.sp());
        EXPECT(0x5157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03C6
        gbc.setState(0x6268, 0x2f0d, 0xbe10, 0x296a, 0x7ff2, 0xf8f0, 0x1, 0x0);
        gbc.writeMem(0x6268, { 0x58 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2f0d, gbc.sp());
        EXPECT(0x6269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03C7
        gbc.setState(0xe3e8, 0xe761, 0xc920, 0xf301, 0xfb13, 0x14e8, 0x0, 0x1);
        gbc.writeMem(0xe3e8, { 0x58 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe761, gbc.sp());
        EXPECT(0xe3e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe3e8));
        // 58 03C8
        gbc.setState(0x37c8, 0xe514, 0x5750, 0xb4c3, 0xb478, 0xe2b9, 0x0, 0x1);
        gbc.writeMem(0x37c8, { 0x58 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe514, gbc.sp());
        EXPECT(0x37c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03C9
        gbc.setState(0xabae, 0x53c5, 0x3e20, 0x8a1e, 0x3375, 0x9839, 0x1, 0x0);
        gbc.writeMem(0xabae, { 0x58 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x53c5, gbc.sp());
        EXPECT(0xabaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xabae));
        // 58 03CB
        gbc.setState(0x5154, 0xe223, 0xc220, 0x23a1, 0x65bd, 0x8a95, 0x0, 0x1);
        gbc.writeMem(0x5154, { 0x58 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe223, gbc.sp());
        EXPECT(0x5155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03CC
        gbc.setState(0xe0b4, 0xcbb7, 0x1990, 0x585e, 0x80c8, 0x6366, 0x1, 0x1);
        gbc.writeMem(0xe0b4, { 0x58 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcbb7, gbc.sp());
        EXPECT(0xe0b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe0b4));
        // 58 03CD
        gbc.setState(0xbd1f, 0x5054, 0xe650, 0xb73f, 0xe6ca, 0x53bd, 0x1, 0x1);
        gbc.writeMem(0xbd1f, { 0x58 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5054, gbc.sp());
        EXPECT(0xbd20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbd1f));
        // 58 03CE
        gbc.setState(0xd4fb, 0x7221, 0xaf80, 0x201d, 0x437a, 0x7163, 0x0, 0x1);
        gbc.writeMem(0xd4fb, { 0x58 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7221, gbc.sp());
        EXPECT(0xd4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd4fb));
        // 58 03CF
        gbc.setState(0x83, 0x94e4, 0x29f0, 0xc1e6, 0xb97, 0xdf7c, 0x1, 0x0);
        gbc.writeMem(0x83, { 0x58 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x94e4, gbc.sp());
        EXPECT(0x84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03D0
        gbc.setState(0x51d, 0x5f6e, 0xf820, 0xb738, 0x3311, 0xdcb6, 0x1, 0x0);
        gbc.writeMem(0x51d, { 0x58 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5f6e, gbc.sp());
        EXPECT(0x51e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03D1
        gbc.setState(0x785, 0x9221, 0x2900, 0xd4fc, 0xd647, 0x1eb8, 0x0, 0x1);
        gbc.writeMem(0x785, { 0x58 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9221, gbc.sp());
        EXPECT(0x786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03D2
        gbc.setState(0x32e2, 0xb7b7, 0x790, 0xd2b2, 0x71d7, 0x4663, 0x1, 0x0);
        gbc.writeMem(0x32e2, { 0x58 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb7b7, gbc.sp());
        EXPECT(0x32e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03D3
        gbc.setState(0xfd8, 0x899f, 0xe50, 0xb4a4, 0xdb69, 0x5105, 0x0, 0x1);
        gbc.writeMem(0xfd8, { 0x58 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x899f, gbc.sp());
        EXPECT(0xfd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03D4
        gbc.setState(0xac27, 0xd8c5, 0x6ca0, 0xb565, 0xa37a, 0xc9a, 0x0, 0x1);
        gbc.writeMem(0xac27, { 0x58 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd8c5, gbc.sp());
        EXPECT(0xac28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xac27));
        // 58 03D5
        gbc.setState(0x9979, 0x1fa0, 0xd060, 0x95ea, 0xd13b, 0x9e6e, 0x1, 0x1);
        gbc.writeMem(0x9979, { 0x58 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1fa0, gbc.sp());
        EXPECT(0x997a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9979));
        // 58 03D6
        gbc.setState(0x4095, 0x4df5, 0xcdf0, 0x9808, 0x3674, 0x336f, 0x1, 0x1);
        gbc.writeMem(0x4095, { 0x58 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4df5, gbc.sp());
        EXPECT(0x4096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03D7
        gbc.setState(0xbe31, 0xaa2a, 0xc2e0, 0xaf9f, 0xe244, 0x7d89, 0x0, 0x1);
        gbc.writeMem(0xbe31, { 0x58 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xaa2a, gbc.sp());
        EXPECT(0xbe32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbe31));
        // 58 03D8
        gbc.setState(0x9217, 0xab4, 0x79e0, 0xd1b6, 0xb24c, 0xb78b, 0x1, 0x1);
        gbc.writeMem(0x9217, { 0x58 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xab4, gbc.sp());
        EXPECT(0x9218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9217));
        // 58 03D9
        gbc.setState(0x1e79, 0x99eb, 0x9970, 0xaf16, 0x23e1, 0xd948, 0x1, 0x1);
        gbc.writeMem(0x1e79, { 0x58 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x99eb, gbc.sp());
        EXPECT(0x1e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03DA
        gbc.setState(0x7b2f, 0xfdc9, 0x3570, 0x8751, 0x54b8, 0x69db, 0x1, 0x0);
        gbc.writeMem(0x7b2f, { 0x58 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfdc9, gbc.sp());
        EXPECT(0x7b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03DB
        gbc.setState(0x224b, 0xa4a8, 0x18e0, 0xd248, 0x8d78, 0x3c7c, 0x1, 0x1);
        gbc.writeMem(0x224b, { 0x58 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa4a8, gbc.sp());
        EXPECT(0x224c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03DC
        gbc.setState(0xb8aa, 0xd310, 0x7790, 0xbb4, 0x20dc, 0xdec2, 0x1, 0x0);
        gbc.writeMem(0xb8aa, { 0x58 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd310, gbc.sp());
        EXPECT(0xb8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb8aa));
        // 58 03DD
        gbc.setState(0x6f48, 0x2b39, 0x2dc0, 0x4b15, 0x5aed, 0xee43, 0x0, 0x1);
        gbc.writeMem(0x6f48, { 0x58 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2b39, gbc.sp());
        EXPECT(0x6f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03DE
        gbc.setState(0xb664, 0xeccf, 0x36e0, 0x229, 0x983a, 0x741c, 0x1, 0x0);
        gbc.writeMem(0xb664, { 0x58 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xeccf, gbc.sp());
        EXPECT(0xb665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb664));
        // 58 03DF
        gbc.setState(0x939d, 0x9122, 0xe850, 0xb506, 0xb472, 0x63ef, 0x0, 0x0);
        gbc.writeMem(0x939d, { 0x58 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9122, gbc.sp());
        EXPECT(0x939e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x939d));
        // 58 03E0
        gbc.setState(0x684e, 0x3f87, 0xfc10, 0x3dda, 0xc843, 0xd5a1, 0x0, 0x0);
        gbc.writeMem(0x684e, { 0x58 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3f87, gbc.sp());
        EXPECT(0x684f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03E1
        gbc.setState(0xe901, 0x1806, 0xc520, 0x6344, 0xc05f, 0x1d59, 0x1, 0x0);
        gbc.writeMem(0xe901, { 0x58 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1806, gbc.sp());
        EXPECT(0xe902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe901));
        // 58 03E2
        gbc.setState(0x33fa, 0x60e6, 0xde10, 0x6460, 0xf0bf, 0xa09f, 0x1, 0x1);
        gbc.writeMem(0x33fa, { 0x58 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x60e6, gbc.sp());
        EXPECT(0x33fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 58 03E3
        gbc.setState(0x6f7e, 0xebde, 0x2fa0, 0x45a2, 0xef, 0x38db, 0x0, 0x0);
        gbc.writeMem(0x6f7e, { 0x58 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xebde, gbc.sp());
        EXPECT(0x6f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 58 03E4
        gbc.setState(0xa571, 0x99d9, 0xf5d0, 0xd237, 0x3ab9, 0xc25d, 0x1, 0x0);
        gbc.writeMem(0xa571, { 0x58 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x99d9, gbc.sp());
        EXPECT(0xa572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa571));
        // 58 03E5
        gbc.setState(0xb9cd, 0x2f89, 0x30e0, 0x3f24, 0x7076, 0x3617, 0x1, 0x0);
        gbc.writeMem(0xb9cd, { 0x58 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2f89, gbc.sp());
        EXPECT(0xb9ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb9cd));
        // 58 03E6
        gbc.setState(0xb3e7, 0x1bb0, 0x4230, 0xb509, 0x58c8, 0x9261, 0x1, 0x1);
        gbc.writeMem(0xb3e7, { 0x58 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1bb0, gbc.sp());
        EXPECT(0xb3e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb3e7));
        // 58 03E7
        gbc.setState(0x8860, 0xb9e2, 0x95e0, 0x10f3, 0xdfb, 0xc755, 0x1, 0x1);
        gbc.writeMem(0x8860, { 0x58 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb9e2, gbc.sp());
        EXPECT(0x8861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8860));
    }
