#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_54)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_54) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 54 0000
        gbc.setState(0x8343, 0x9316, 0xa2e0, 0x5ef1, 0x142e, 0xdc46, 0x0, 0x1);
        gbc.writeMem(0x8343, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9316);
        EXPECT(gbc.pc(), 0x8345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8343), 0xcb);
        EXPECT(gbc.readMem(0x8344), 0x54);
        // CB 54 0001
        gbc.setState(0x6edd, 0x9f9f, 0xd330, 0x7bf4, 0xb646, 0xb33c, 0x0, 0x0);
        gbc.writeMem(0x6edd, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9f9f);
        EXPECT(gbc.pc(), 0x6edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0002
        gbc.setState(0x9dc7, 0x1cee, 0x3760, 0x5682, 0xcdd, 0x1486, 0x0, 0x0);
        gbc.writeMem(0x9dc7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1cee);
        EXPECT(gbc.pc(), 0x9dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dc7), 0xcb);
        EXPECT(gbc.readMem(0x9dc8), 0x54);
        // CB 54 0003
        gbc.setState(0x1a2b, 0x51f9, 0x8450, 0x72df, 0xaa8d, 0xaa15, 0x0, 0x0);
        gbc.writeMem(0x1a2b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x51f9);
        EXPECT(gbc.pc(), 0x1a2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0004
        gbc.setState(0xd692, 0x8e2c, 0x1d50, 0xfa8c, 0x53df, 0xe8dc, 0x0, 0x0);
        gbc.writeMem(0xd692, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8e2c);
        EXPECT(gbc.pc(), 0xd694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd692), 0xcb);
        EXPECT(gbc.readMem(0xd693), 0x54);
        // CB 54 0005
        gbc.setState(0xdcf8, 0x5e2d, 0x5790, 0xa4a7, 0x1d45, 0x1d7f, 0x1, 0x0);
        gbc.writeMem(0xdcf8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5e2d);
        EXPECT(gbc.pc(), 0xdcfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf8), 0xcb);
        EXPECT(gbc.readMem(0xdcf9), 0x54);
        // CB 54 0006
        gbc.setState(0xcc5a, 0x68c, 0xf250, 0x1dcc, 0x1ba0, 0xc89f, 0x1, 0x0);
        gbc.writeMem(0xcc5a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x68c);
        EXPECT(gbc.pc(), 0xcc5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc5a), 0xcb);
        EXPECT(gbc.readMem(0xcc5b), 0x54);
        // CB 54 0007
        gbc.setState(0xbca2, 0xf356, 0x5e00, 0xe118, 0x964f, 0x1ef8, 0x0, 0x1);
        gbc.writeMem(0xbca2, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf356);
        EXPECT(gbc.pc(), 0xbca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca2), 0xcb);
        EXPECT(gbc.readMem(0xbca3), 0x54);
        // CB 54 0008
        gbc.setState(0x223b, 0x4793, 0xeda0, 0x5cda, 0xcba0, 0x5c01, 0x0, 0x1);
        gbc.writeMem(0x223b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4793);
        EXPECT(gbc.pc(), 0x223d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0009
        gbc.setState(0x47bc, 0x5333, 0xefd0, 0x55e9, 0xb219, 0x6a3d, 0x1, 0x0);
        gbc.writeMem(0x47bc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5333);
        EXPECT(gbc.pc(), 0x47be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 000A
        gbc.setState(0x5303, 0x644b, 0x4010, 0x9085, 0x4d53, 0x5614, 0x1, 0x1);
        gbc.writeMem(0x5303, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x644b);
        EXPECT(gbc.pc(), 0x5305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 000B
        gbc.setState(0x4b3c, 0xebc4, 0xeb20, 0x3860, 0xd367, 0xdae, 0x0, 0x0);
        gbc.writeMem(0x4b3c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xebc4);
        EXPECT(gbc.pc(), 0x4b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 000C
        gbc.setState(0x7a5d, 0xe13c, 0x9020, 0x8cda, 0x555a, 0x9288, 0x0, 0x0);
        gbc.writeMem(0x7a5d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe13c);
        EXPECT(gbc.pc(), 0x7a5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 000D
        gbc.setState(0xd7bb, 0x64a9, 0x3a90, 0xd7a7, 0xdcad, 0x2639, 0x1, 0x0);
        gbc.writeMem(0xd7bb, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x64a9);
        EXPECT(gbc.pc(), 0xd7bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7bb), 0xcb);
        EXPECT(gbc.readMem(0xd7bc), 0x54);
        // CB 54 000E
        gbc.setState(0x8ccf, 0xfb14, 0x6420, 0x6a44, 0x2705, 0x2930, 0x1, 0x0);
        gbc.writeMem(0x8ccf, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xfb14);
        EXPECT(gbc.pc(), 0x8cd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ccf), 0xcb);
        EXPECT(gbc.readMem(0x8cd0), 0x54);
        // CB 54 000F
        gbc.setState(0xddf7, 0x189a, 0x91c0, 0xfe44, 0xdf3, 0x5ca3, 0x0, 0x1);
        gbc.writeMem(0xddf7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x189a);
        EXPECT(gbc.pc(), 0xddf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf7), 0xcb);
        EXPECT(gbc.readMem(0xddf8), 0x54);
        // CB 54 0010
        gbc.setState(0x6394, 0xa1e5, 0x62d0, 0xf75d, 0x6e95, 0xb10a, 0x0, 0x1);
        gbc.writeMem(0x6394, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa1e5);
        EXPECT(gbc.pc(), 0x6396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0011
        gbc.setState(0xbd17, 0xcada, 0xd190, 0x2fc3, 0x6c1, 0xfe47, 0x0, 0x1);
        gbc.writeMem(0xbd17, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xcada);
        EXPECT(gbc.pc(), 0xbd19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd17), 0xcb);
        EXPECT(gbc.readMem(0xbd18), 0x54);
        // CB 54 0012
        gbc.setState(0x226, 0x39f7, 0xea00, 0x8b7f, 0x7c38, 0x623c, 0x1, 0x0);
        gbc.writeMem(0x226, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x39f7);
        EXPECT(gbc.pc(), 0x228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0013
        gbc.setState(0x3e07, 0x3e5f, 0xcfa0, 0xe59d, 0xe8ad, 0x4e96, 0x0, 0x0);
        gbc.writeMem(0x3e07, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3e5f);
        EXPECT(gbc.pc(), 0x3e09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0014
        gbc.setState(0xb4ac, 0x931, 0x790, 0xb95d, 0x61ae, 0x32d0, 0x0, 0x1);
        gbc.writeMem(0xb4ac, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x931);
        EXPECT(gbc.pc(), 0xb4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ac), 0xcb);
        EXPECT(gbc.readMem(0xb4ad), 0x54);
        // CB 54 0015
        gbc.setState(0x9f1b, 0x660d, 0x7f80, 0x7e1b, 0x1321, 0x580b, 0x0, 0x0);
        gbc.writeMem(0x9f1b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x660d);
        EXPECT(gbc.pc(), 0x9f1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f1b), 0xcb);
        EXPECT(gbc.readMem(0x9f1c), 0x54);
        // CB 54 0016
        gbc.setState(0xadb, 0xed1, 0x240, 0x4bdd, 0x972f, 0x8ce5, 0x1, 0x0);
        gbc.writeMem(0xadb, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xed1);
        EXPECT(gbc.pc(), 0xadd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0017
        gbc.setState(0x21f6, 0x4d6f, 0xc600, 0xcc03, 0x4a81, 0xd2dd, 0x0, 0x1);
        gbc.writeMem(0x21f6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4d6f);
        EXPECT(gbc.pc(), 0x21f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0019
        gbc.setState(0xa541, 0xae99, 0xe990, 0xe9d2, 0x1a6d, 0xd66e, 0x0, 0x0);
        gbc.writeMem(0xa541, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xae99);
        EXPECT(gbc.pc(), 0xa543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa541), 0xcb);
        EXPECT(gbc.readMem(0xa542), 0x54);
        // CB 54 001A
        gbc.setState(0x624d, 0xb1ec, 0x2e80, 0x87d2, 0x1c89, 0xf01, 0x0, 0x0);
        gbc.writeMem(0x624d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb1ec);
        EXPECT(gbc.pc(), 0x624f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 001B
        gbc.setState(0xd9f7, 0xbc14, 0xe2e0, 0x5305, 0xea93, 0x5a4e, 0x0, 0x0);
        gbc.writeMem(0xd9f7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xbc14);
        EXPECT(gbc.pc(), 0xd9f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f7), 0xcb);
        EXPECT(gbc.readMem(0xd9f8), 0x54);
        // CB 54 001C
        gbc.setState(0x2d16, 0xfadc, 0x5570, 0xc0a8, 0xe94d, 0xc30, 0x1, 0x0);
        gbc.writeMem(0x2d16, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xfadc);
        EXPECT(gbc.pc(), 0x2d18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 001D
        gbc.setState(0x9e33, 0xa7c2, 0x5f30, 0x3bcb, 0x4744, 0x9bb0, 0x0, 0x1);
        gbc.writeMem(0x9e33, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa7c2);
        EXPECT(gbc.pc(), 0x9e35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e33), 0xcb);
        EXPECT(gbc.readMem(0x9e34), 0x54);
        // CB 54 001E
        gbc.setState(0x34a0, 0x63a6, 0x6b30, 0x1e2c, 0x1de1, 0x8ea1, 0x0, 0x1);
        gbc.writeMem(0x34a0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x63a6);
        EXPECT(gbc.pc(), 0x34a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 001F
        gbc.setState(0x9dc3, 0xdbe5, 0xe790, 0xc25e, 0x686d, 0xa60, 0x0, 0x0);
        gbc.writeMem(0x9dc3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdbe5);
        EXPECT(gbc.pc(), 0x9dc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc3), 0xcb);
        EXPECT(gbc.readMem(0x9dc4), 0x54);
        // CB 54 0020
        gbc.setState(0x5922, 0x9c1d, 0x2530, 0xa000, 0x7fce, 0x440, 0x1, 0x0);
        gbc.writeMem(0x5922, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9c1d);
        EXPECT(gbc.pc(), 0x5924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0021
        gbc.setState(0x340, 0x1eb1, 0xfed0, 0x634b, 0xbbb7, 0x141d, 0x1, 0x0);
        gbc.writeMem(0x340, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1eb1);
        EXPECT(gbc.pc(), 0x342);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0022
        gbc.setState(0x56eb, 0xc368, 0x1ae0, 0xc254, 0x435, 0xeea9, 0x1, 0x0);
        gbc.writeMem(0x56eb, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc368);
        EXPECT(gbc.pc(), 0x56ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0023
        gbc.setState(0xc1bf, 0xa427, 0x260, 0xe1ef, 0x42ef, 0x953a, 0x1, 0x0);
        gbc.writeMem(0xc1bf, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa427);
        EXPECT(gbc.pc(), 0xc1c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1bf), 0xcb);
        EXPECT(gbc.readMem(0xc1c0), 0x54);
        // CB 54 0024
        gbc.setState(0xe057, 0x9722, 0x4340, 0x657f, 0x2b88, 0xe8b7, 0x0, 0x0);
        gbc.writeMem(0xe057, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9722);
        EXPECT(gbc.pc(), 0xe059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe057), 0xcb);
        EXPECT(gbc.readMem(0xe058), 0x54);
        // CB 54 0025
        gbc.setState(0xdc12, 0x2e3f, 0xee20, 0x81ae, 0xad66, 0x2d02, 0x0, 0x0);
        gbc.writeMem(0xdc12, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2e3f);
        EXPECT(gbc.pc(), 0xdc14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc12), 0xcb);
        EXPECT(gbc.readMem(0xdc13), 0x54);
        // CB 54 0026
        gbc.setState(0xc108, 0x17ee, 0xc570, 0x919, 0xd52, 0x4d10, 0x0, 0x0);
        gbc.writeMem(0xc108, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x17ee);
        EXPECT(gbc.pc(), 0xc10a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc108), 0xcb);
        EXPECT(gbc.readMem(0xc109), 0x54);
        // CB 54 0027
        gbc.setState(0x6bb0, 0x5bca, 0x54b0, 0x8888, 0xfe94, 0x5abc, 0x0, 0x0);
        gbc.writeMem(0x6bb0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5bca);
        EXPECT(gbc.pc(), 0x6bb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0028
        gbc.setState(0x4dbd, 0x59ef, 0xe040, 0x3542, 0xc08c, 0x9f98, 0x1, 0x0);
        gbc.writeMem(0x4dbd, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x59ef);
        EXPECT(gbc.pc(), 0x4dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 002A
        gbc.setState(0xc1fc, 0xe60c, 0x3240, 0x7bcd, 0x2454, 0x59b0, 0x0, 0x0);
        gbc.writeMem(0xc1fc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe60c);
        EXPECT(gbc.pc(), 0xc1fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1fc), 0xcb);
        EXPECT(gbc.readMem(0xc1fd), 0x54);
        // CB 54 002B
        gbc.setState(0x9ea4, 0xcdc7, 0x63f0, 0x3cda, 0x7ecd, 0x5b99, 0x0, 0x1);
        gbc.writeMem(0x9ea4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xcdc7);
        EXPECT(gbc.pc(), 0x9ea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea4), 0xcb);
        EXPECT(gbc.readMem(0x9ea5), 0x54);
        // CB 54 002C
        gbc.setState(0xa4a9, 0x10ef, 0xec90, 0x6ae8, 0xa9ea, 0x5307, 0x1, 0x1);
        gbc.writeMem(0xa4a9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x10ef);
        EXPECT(gbc.pc(), 0xa4ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a9), 0xcb);
        EXPECT(gbc.readMem(0xa4aa), 0x54);
        // CB 54 002D
        gbc.setState(0x7037, 0xbf93, 0x530, 0x6c5a, 0xd83, 0xbdb4, 0x1, 0x1);
        gbc.writeMem(0x7037, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbf93);
        EXPECT(gbc.pc(), 0x7039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 002E
        gbc.setState(0x7346, 0xe00, 0x3bd0, 0xfe48, 0x54f2, 0x1f2c, 0x1, 0x1);
        gbc.writeMem(0x7346, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe00);
        EXPECT(gbc.pc(), 0x7348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 002F
        gbc.setState(0x1a93, 0xa405, 0x3c40, 0x5ac9, 0xa44c, 0xf3dd, 0x1, 0x0);
        gbc.writeMem(0x1a93, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa405);
        EXPECT(gbc.pc(), 0x1a95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0030
        gbc.setState(0x4329, 0x7055, 0xcf20, 0xb928, 0x44f8, 0x2bea, 0x0, 0x0);
        gbc.writeMem(0x4329, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7055);
        EXPECT(gbc.pc(), 0x432b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0031
        gbc.setState(0xc692, 0x1ecf, 0x7800, 0xbe68, 0x7f54, 0x7364, 0x0, 0x0);
        gbc.writeMem(0xc692, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1ecf);
        EXPECT(gbc.pc(), 0xc694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc692), 0xcb);
        EXPECT(gbc.readMem(0xc693), 0x54);
        // CB 54 0032
        gbc.setState(0x687, 0x69c0, 0xa5e0, 0xa2b5, 0xe78e, 0x5f45, 0x0, 0x1);
        gbc.writeMem(0x687, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x69c0);
        EXPECT(gbc.pc(), 0x689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0033
        gbc.setState(0x2619, 0x16ed, 0x3950, 0x8500, 0x4340, 0x33f9, 0x0, 0x0);
        gbc.writeMem(0x2619, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x16ed);
        EXPECT(gbc.pc(), 0x261b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0034
        gbc.setState(0xdfa, 0xed6f, 0x2da0, 0x111, 0xbc74, 0x12e3, 0x1, 0x0);
        gbc.writeMem(0xdfa, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xed6f);
        EXPECT(gbc.pc(), 0xdfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0035
        gbc.setState(0x4584, 0x38a5, 0xf300, 0x4d1f, 0xbde9, 0xde73, 0x0, 0x0);
        gbc.writeMem(0x4584, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x38a5);
        EXPECT(gbc.pc(), 0x4586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0037
        gbc.setState(0xd00d, 0x1550, 0xa20, 0xa2b7, 0x94ce, 0x67ff, 0x0, 0x0);
        gbc.writeMem(0xd00d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1550);
        EXPECT(gbc.pc(), 0xd00f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd00d), 0xcb);
        EXPECT(gbc.readMem(0xd00e), 0x54);
        // CB 54 0038
        gbc.setState(0x2c5d, 0x9532, 0xe1a0, 0x7725, 0x94c6, 0xa0f9, 0x0, 0x1);
        gbc.writeMem(0x2c5d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9532);
        EXPECT(gbc.pc(), 0x2c5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0039
        gbc.setState(0x3126, 0xf51a, 0x8900, 0x26a9, 0xec9c, 0x13f3, 0x1, 0x0);
        gbc.writeMem(0x3126, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf51a);
        EXPECT(gbc.pc(), 0x3128);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 003A
        gbc.setState(0x99eb, 0x1841, 0x50f0, 0xc71d, 0xd777, 0x6d06, 0x0, 0x1);
        gbc.writeMem(0x99eb, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1841);
        EXPECT(gbc.pc(), 0x99ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99eb), 0xcb);
        EXPECT(gbc.readMem(0x99ec), 0x54);
        // CB 54 003B
        gbc.setState(0x68e5, 0x312b, 0xf660, 0xc4f3, 0x78f6, 0x97a9, 0x1, 0x0);
        gbc.writeMem(0x68e5, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x312b);
        EXPECT(gbc.pc(), 0x68e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 003C
        gbc.setState(0xeef0, 0xf2b0, 0x56a0, 0x22de, 0xd6a6, 0x403a, 0x0, 0x0);
        gbc.writeMem(0xeef0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf2b0);
        EXPECT(gbc.pc(), 0xeef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeef0), 0xcb);
        EXPECT(gbc.readMem(0xeef1), 0x54);
        // CB 54 003D
        gbc.setState(0xd568, 0xfe2f, 0x5070, 0x314b, 0xe758, 0x1e5b, 0x0, 0x1);
        gbc.writeMem(0xd568, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xfe2f);
        EXPECT(gbc.pc(), 0xd56a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd568), 0xcb);
        EXPECT(gbc.readMem(0xd569), 0x54);
        // CB 54 003E
        gbc.setState(0x79a7, 0x5d36, 0x9290, 0xd1dc, 0xb08c, 0xffd6, 0x0, 0x1);
        gbc.writeMem(0x79a7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5d36);
        EXPECT(gbc.pc(), 0x79a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 003F
        gbc.setState(0xdb59, 0x9e18, 0x7e10, 0x1484, 0xf48e, 0xa046, 0x1, 0x1);
        gbc.writeMem(0xdb59, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9e18);
        EXPECT(gbc.pc(), 0xdb5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb59), 0xcb);
        EXPECT(gbc.readMem(0xdb5a), 0x54);
        // CB 54 0040
        gbc.setState(0x14fa, 0xa189, 0xe550, 0xca4, 0xb4b1, 0x57c4, 0x1, 0x1);
        gbc.writeMem(0x14fa, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa189);
        EXPECT(gbc.pc(), 0x14fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0041
        gbc.setState(0xa890, 0x6237, 0x4b00, 0x902f, 0xf891, 0xce32, 0x0, 0x0);
        gbc.writeMem(0xa890, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6237);
        EXPECT(gbc.pc(), 0xa892);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa890), 0xcb);
        EXPECT(gbc.readMem(0xa891), 0x54);
        // CB 54 0042
        gbc.setState(0x9662, 0x2a76, 0xaa40, 0x6450, 0x8021, 0xeb5b, 0x1, 0x1);
        gbc.writeMem(0x9662, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2a76);
        EXPECT(gbc.pc(), 0x9664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9662), 0xcb);
        EXPECT(gbc.readMem(0x9663), 0x54);
        // CB 54 0043
        gbc.setState(0x97e0, 0x54f7, 0xdf50, 0x41cc, 0xb203, 0xd198, 0x0, 0x1);
        gbc.writeMem(0x97e0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x54f7);
        EXPECT(gbc.pc(), 0x97e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97e0), 0xcb);
        EXPECT(gbc.readMem(0x97e1), 0x54);
        // CB 54 0044
        gbc.setState(0x459b, 0xbd2c, 0x970, 0x9527, 0xf54a, 0x50ff, 0x1, 0x1);
        gbc.writeMem(0x459b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbd2c);
        EXPECT(gbc.pc(), 0x459d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0045
        gbc.setState(0xeba, 0x5adb, 0xf2a0, 0x2d56, 0xb7ed, 0x3213, 0x1, 0x0);
        gbc.writeMem(0xeba, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5adb);
        EXPECT(gbc.pc(), 0xebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0046
        gbc.setState(0xc601, 0x3a30, 0x63b0, 0xea03, 0xa5b8, 0x5243, 0x1, 0x0);
        gbc.writeMem(0xc601, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3a30);
        EXPECT(gbc.pc(), 0xc603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc601), 0xcb);
        EXPECT(gbc.readMem(0xc602), 0x54);
        // CB 54 0047
        gbc.setState(0x607c, 0x548b, 0xcde0, 0xe686, 0x22b9, 0x89db, 0x1, 0x1);
        gbc.writeMem(0x607c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x548b);
        EXPECT(gbc.pc(), 0x607e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0048
        gbc.setState(0x3710, 0x27a0, 0xd4d0, 0xc8e9, 0x12da, 0x3882, 0x1, 0x1);
        gbc.writeMem(0x3710, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x27a0);
        EXPECT(gbc.pc(), 0x3712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0049
        gbc.setState(0x37cd, 0xd77a, 0x4d40, 0x4c6b, 0x6544, 0x1f84, 0x1, 0x1);
        gbc.writeMem(0x37cd, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd77a);
        EXPECT(gbc.pc(), 0x37cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 004A
        gbc.setState(0x9d00, 0x7d3c, 0x8750, 0xd925, 0x571c, 0x1689, 0x0, 0x0);
        gbc.writeMem(0x9d00, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7d3c);
        EXPECT(gbc.pc(), 0x9d02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d00), 0xcb);
        EXPECT(gbc.readMem(0x9d01), 0x54);
        // CB 54 004B
        gbc.setState(0x304, 0x2a85, 0xd80, 0xd003, 0xecb0, 0xcb3f, 0x0, 0x0);
        gbc.writeMem(0x304, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2a85);
        EXPECT(gbc.pc(), 0x306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 004C
        gbc.setState(0xa5f3, 0xe962, 0x8f40, 0xbd31, 0x142c, 0x4479, 0x1, 0x0);
        gbc.writeMem(0xa5f3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe962);
        EXPECT(gbc.pc(), 0xa5f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f3), 0xcb);
        EXPECT(gbc.readMem(0xa5f4), 0x54);
        // CB 54 004D
        gbc.setState(0xc72f, 0x5102, 0x2a10, 0x16b5, 0x1d6, 0x1056, 0x0, 0x0);
        gbc.writeMem(0xc72f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5102);
        EXPECT(gbc.pc(), 0xc731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc72f), 0xcb);
        EXPECT(gbc.readMem(0xc730), 0x54);
        // CB 54 004E
        gbc.setState(0xdbd3, 0x2959, 0x2270, 0xc300, 0x367c, 0xff49, 0x1, 0x0);
        gbc.writeMem(0xdbd3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2959);
        EXPECT(gbc.pc(), 0xdbd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbd3), 0xcb);
        EXPECT(gbc.readMem(0xdbd4), 0x54);
        // CB 54 004F
        gbc.setState(0x1d0b, 0xa13a, 0xec50, 0x2f07, 0x21ee, 0xd1f8, 0x0, 0x0);
        gbc.writeMem(0x1d0b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa13a);
        EXPECT(gbc.pc(), 0x1d0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0050
        gbc.setState(0x2d2f, 0x7db, 0xd1d0, 0x8847, 0xa470, 0x5307, 0x0, 0x0);
        gbc.writeMem(0x2d2f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7db);
        EXPECT(gbc.pc(), 0x2d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0051
        gbc.setState(0xe95a, 0xd4d0, 0x4980, 0xf3a4, 0x4da6, 0xb8e3, 0x0, 0x1);
        gbc.writeMem(0xe95a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd4d0);
        EXPECT(gbc.pc(), 0xe95c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe95a), 0xcb);
        EXPECT(gbc.readMem(0xe95b), 0x54);
        // CB 54 0052
        gbc.setState(0x1419, 0xec10, 0xda80, 0xba45, 0xfa19, 0x49ff, 0x0, 0x1);
        gbc.writeMem(0x1419, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xec10);
        EXPECT(gbc.pc(), 0x141b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0053
        gbc.setState(0x960d, 0xbc50, 0xcce0, 0xfd52, 0x28de, 0x7250, 0x1, 0x1);
        gbc.writeMem(0x960d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbc50);
        EXPECT(gbc.pc(), 0x960f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x960d), 0xcb);
        EXPECT(gbc.readMem(0x960e), 0x54);
        // CB 54 0054
        gbc.setState(0x9d09, 0xfbd5, 0x59f0, 0xdc8e, 0x5a4e, 0x1f20, 0x0, 0x0);
        gbc.writeMem(0x9d09, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfbd5);
        EXPECT(gbc.pc(), 0x9d0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d09), 0xcb);
        EXPECT(gbc.readMem(0x9d0a), 0x54);
        // CB 54 0055
        gbc.setState(0xbf16, 0xb923, 0x1770, 0x5f42, 0xd5ef, 0xc98e, 0x1, 0x1);
        gbc.writeMem(0xbf16, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb923);
        EXPECT(gbc.pc(), 0xbf18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf16), 0xcb);
        EXPECT(gbc.readMem(0xbf17), 0x54);
        // CB 54 0056
        gbc.setState(0xddad, 0xd05d, 0x8ed0, 0x9088, 0x525b, 0x8694, 0x1, 0x0);
        gbc.writeMem(0xddad, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd05d);
        EXPECT(gbc.pc(), 0xddaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddad), 0xcb);
        EXPECT(gbc.readMem(0xddae), 0x54);
        // CB 54 0057
        gbc.setState(0x3255, 0x867c, 0xfe60, 0xdb26, 0x118a, 0xfd08, 0x1, 0x1);
        gbc.writeMem(0x3255, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x867c);
        EXPECT(gbc.pc(), 0x3257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0058
        gbc.setState(0xb6d4, 0x82e9, 0x38e0, 0x96ee, 0x230c, 0x14c7, 0x0, 0x0);
        gbc.writeMem(0xb6d4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x82e9);
        EXPECT(gbc.pc(), 0xb6d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d4), 0xcb);
        EXPECT(gbc.readMem(0xb6d5), 0x54);
        // CB 54 0059
        gbc.setState(0x53fa, 0x3b46, 0x94f0, 0xce6c, 0x6b71, 0x7cc1, 0x1, 0x1);
        gbc.writeMem(0x53fa, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3b46);
        EXPECT(gbc.pc(), 0x53fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 005A
        gbc.setState(0x4625, 0xd275, 0x7b50, 0xa8dd, 0xb38a, 0x7b91, 0x0, 0x1);
        gbc.writeMem(0x4625, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd275);
        EXPECT(gbc.pc(), 0x4627);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 005B
        gbc.setState(0xd439, 0xf2ce, 0xc140, 0x812d, 0xbb27, 0x6c3c, 0x1, 0x1);
        gbc.writeMem(0xd439, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf2ce);
        EXPECT(gbc.pc(), 0xd43b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd439), 0xcb);
        EXPECT(gbc.readMem(0xd43a), 0x54);
        // CB 54 005D
        gbc.setState(0xbd7, 0x18be, 0xb710, 0xedcb, 0x76d4, 0x170, 0x1, 0x1);
        gbc.writeMem(0xbd7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x18be);
        EXPECT(gbc.pc(), 0xbd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 005E
        gbc.setState(0xdb97, 0x4a27, 0x6a80, 0x2f4, 0x8b0c, 0x9a2c, 0x1, 0x1);
        gbc.writeMem(0xdb97, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4a27);
        EXPECT(gbc.pc(), 0xdb99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb97), 0xcb);
        EXPECT(gbc.readMem(0xdb98), 0x54);
        // CB 54 005F
        gbc.setState(0x7f1f, 0xb1d, 0x61f0, 0xcf85, 0xe4c3, 0x4b61, 0x1, 0x0);
        gbc.writeMem(0x7f1f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb1d);
        EXPECT(gbc.pc(), 0x7f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0060
        gbc.setState(0x2434, 0xe17, 0x7750, 0x2f88, 0x5bb9, 0xd4fb, 0x0, 0x1);
        gbc.writeMem(0x2434, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe17);
        EXPECT(gbc.pc(), 0x2436);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0061
        gbc.setState(0xbaaa, 0x68c5, 0x8490, 0x3d04, 0xa883, 0xbf0e, 0x0, 0x0);
        gbc.writeMem(0xbaaa, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x68c5);
        EXPECT(gbc.pc(), 0xbaac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaaa), 0xcb);
        EXPECT(gbc.readMem(0xbaab), 0x54);
        // CB 54 0062
        gbc.setState(0x577a, 0x8642, 0x6ec0, 0xca5c, 0x7381, 0x9d0f, 0x0, 0x1);
        gbc.writeMem(0x577a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8642);
        EXPECT(gbc.pc(), 0x577c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0063
        gbc.setState(0xe020, 0xcbfd, 0x4b0, 0xb1ab, 0x3e72, 0x8943, 0x1, 0x0);
        gbc.writeMem(0xe020, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcbfd);
        EXPECT(gbc.pc(), 0xe022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe020), 0xcb);
        EXPECT(gbc.readMem(0xe021), 0x54);
        // CB 54 0064
        gbc.setState(0x5d0f, 0xad36, 0x4bc0, 0xac59, 0x4ad0, 0x7887, 0x0, 0x1);
        gbc.writeMem(0x5d0f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xad36);
        EXPECT(gbc.pc(), 0x5d11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0065
        gbc.setState(0x5d6d, 0x495d, 0xe4b0, 0x258e, 0xd9e7, 0x2099, 0x1, 0x1);
        gbc.writeMem(0x5d6d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x495d);
        EXPECT(gbc.pc(), 0x5d6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0067
        gbc.setState(0x52aa, 0x9c89, 0xc1d0, 0xa7f6, 0x6f96, 0x40b1, 0x0, 0x1);
        gbc.writeMem(0x52aa, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9c89);
        EXPECT(gbc.pc(), 0x52ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0068
        gbc.setState(0x8fa, 0x3db2, 0x3c00, 0x2acf, 0xc62a, 0xe8af, 0x0, 0x0);
        gbc.writeMem(0x8fa, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3db2);
        EXPECT(gbc.pc(), 0x8fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0069
        gbc.setState(0xc96c, 0x4856, 0x7260, 0x33fb, 0xdea9, 0xd2a6, 0x0, 0x1);
        gbc.writeMem(0xc96c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4856);
        EXPECT(gbc.pc(), 0xc96e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc96c), 0xcb);
        EXPECT(gbc.readMem(0xc96d), 0x54);
        // CB 54 006A
        gbc.setState(0x8196, 0xc1e, 0xb370, 0x8b7c, 0x729c, 0x4632, 0x0, 0x1);
        gbc.writeMem(0x8196, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc1e);
        EXPECT(gbc.pc(), 0x8198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8196), 0xcb);
        EXPECT(gbc.readMem(0x8197), 0x54);
        // CB 54 006B
        gbc.setState(0x7e30, 0xa0ff, 0x9fb0, 0x95bc, 0x675, 0xb1e, 0x0, 0x1);
        gbc.writeMem(0x7e30, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa0ff);
        EXPECT(gbc.pc(), 0x7e32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 006C
        gbc.setState(0x8ae3, 0xc6fd, 0x21a0, 0xfe9a, 0x8287, 0x4658, 0x0, 0x1);
        gbc.writeMem(0x8ae3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc6fd);
        EXPECT(gbc.pc(), 0x8ae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ae3), 0xcb);
        EXPECT(gbc.readMem(0x8ae4), 0x54);
        // CB 54 006D
        gbc.setState(0x7b43, 0x466b, 0x6880, 0x8b8a, 0x619e, 0x66b9, 0x0, 0x1);
        gbc.writeMem(0x7b43, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x466b);
        EXPECT(gbc.pc(), 0x7b45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 006E
        gbc.setState(0x9d33, 0x2edc, 0x2890, 0xbd81, 0x554a, 0x567d, 0x1, 0x0);
        gbc.writeMem(0x9d33, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2edc);
        EXPECT(gbc.pc(), 0x9d35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d33), 0xcb);
        EXPECT(gbc.readMem(0x9d34), 0x54);
        // CB 54 006F
        gbc.setState(0xbe39, 0x1c66, 0x1860, 0xfd89, 0x264d, 0x31b, 0x0, 0x0);
        gbc.writeMem(0xbe39, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1c66);
        EXPECT(gbc.pc(), 0xbe3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe39), 0xcb);
        EXPECT(gbc.readMem(0xbe3a), 0x54);
        // CB 54 0070
        gbc.setState(0x1462, 0x348d, 0xfb70, 0xc5ef, 0x324b, 0xab8c, 0x0, 0x1);
        gbc.writeMem(0x1462, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x348d);
        EXPECT(gbc.pc(), 0x1464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0071
        gbc.setState(0x3c6e, 0xdaf4, 0xafc0, 0x5e5e, 0x2104, 0x63ef, 0x1, 0x0);
        gbc.writeMem(0x3c6e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xdaf4);
        EXPECT(gbc.pc(), 0x3c70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0072
        gbc.setState(0x998d, 0x9e74, 0xf2b0, 0x2329, 0x9d89, 0x19fc, 0x1, 0x0);
        gbc.writeMem(0x998d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9e74);
        EXPECT(gbc.pc(), 0x998f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x998d), 0xcb);
        EXPECT(gbc.readMem(0x998e), 0x54);
        // CB 54 0073
        gbc.setState(0x9706, 0xdda0, 0xd5c0, 0xa2ca, 0x254f, 0x1672, 0x1, 0x1);
        gbc.writeMem(0x9706, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xdda0);
        EXPECT(gbc.pc(), 0x9708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9706), 0xcb);
        EXPECT(gbc.readMem(0x9707), 0x54);
        // CB 54 0074
        gbc.setState(0xbe27, 0x837f, 0x9750, 0x1b96, 0x5bc1, 0xa73f, 0x1, 0x0);
        gbc.writeMem(0xbe27, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x837f);
        EXPECT(gbc.pc(), 0xbe29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe27), 0xcb);
        EXPECT(gbc.readMem(0xbe28), 0x54);
        // CB 54 0075
        gbc.setState(0xaf51, 0x9f47, 0xc660, 0x6b86, 0xa26e, 0xea81, 0x1, 0x0);
        gbc.writeMem(0xaf51, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9f47);
        EXPECT(gbc.pc(), 0xaf53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf51), 0xcb);
        EXPECT(gbc.readMem(0xaf52), 0x54);
        // CB 54 0076
        gbc.setState(0x4b2b, 0x7ce4, 0xf3e0, 0xf077, 0x54f5, 0xff21, 0x1, 0x0);
        gbc.writeMem(0x4b2b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7ce4);
        EXPECT(gbc.pc(), 0x4b2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0077
        gbc.setState(0x8a30, 0x9531, 0xac60, 0x30db, 0x50e5, 0x3b96, 0x0, 0x0);
        gbc.writeMem(0x8a30, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9531);
        EXPECT(gbc.pc(), 0x8a32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a30), 0xcb);
        EXPECT(gbc.readMem(0x8a31), 0x54);
        // CB 54 0078
        gbc.setState(0x2246, 0xe56c, 0xe0c0, 0x6f91, 0x8ab9, 0xf4f4, 0x0, 0x0);
        gbc.writeMem(0x2246, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe56c);
        EXPECT(gbc.pc(), 0x2248);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0079
        gbc.setState(0xc868, 0x21c, 0x2640, 0x6e6, 0x8e59, 0x73a5, 0x1, 0x0);
        gbc.writeMem(0xc868, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x21c);
        EXPECT(gbc.pc(), 0xc86a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc868), 0xcb);
        EXPECT(gbc.readMem(0xc869), 0x54);
        // CB 54 007A
        gbc.setState(0x21e8, 0xd92f, 0x410, 0x2030, 0x1586, 0x5366, 0x1, 0x0);
        gbc.writeMem(0x21e8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd92f);
        EXPECT(gbc.pc(), 0x21ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 007C
        gbc.setState(0xafab, 0xcc43, 0x1750, 0x5225, 0xeb1e, 0xc663, 0x1, 0x1);
        gbc.writeMem(0xafab, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcc43);
        EXPECT(gbc.pc(), 0xafad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafab), 0xcb);
        EXPECT(gbc.readMem(0xafac), 0x54);
        // CB 54 007F
        gbc.setState(0xb9cf, 0x79f3, 0x140, 0xdfe7, 0xcb5a, 0x34a6, 0x0, 0x1);
        gbc.writeMem(0xb9cf, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x79f3);
        EXPECT(gbc.pc(), 0xb9d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9cf), 0xcb);
        EXPECT(gbc.readMem(0xb9d0), 0x54);
        // CB 54 0080
        gbc.setState(0xdaf2, 0xf335, 0xb9a0, 0xaba7, 0x85e3, 0xb908, 0x1, 0x1);
        gbc.writeMem(0xdaf2, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf335);
        EXPECT(gbc.pc(), 0xdaf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaf2), 0xcb);
        EXPECT(gbc.readMem(0xdaf3), 0x54);
        // CB 54 0081
        gbc.setState(0x4430, 0x7f77, 0xbde0, 0x14a1, 0xb930, 0x8bae, 0x0, 0x0);
        gbc.writeMem(0x4430, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7f77);
        EXPECT(gbc.pc(), 0x4432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0084
        gbc.setState(0x8731, 0xd4d8, 0x28a0, 0x9edd, 0xd630, 0xdb8a, 0x1, 0x1);
        gbc.writeMem(0x8731, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd4d8);
        EXPECT(gbc.pc(), 0x8733);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8731), 0xcb);
        EXPECT(gbc.readMem(0x8732), 0x54);
        // CB 54 0085
        gbc.setState(0xc0c2, 0x7f5c, 0x2340, 0x6963, 0x7edc, 0x9b68, 0x0, 0x1);
        gbc.writeMem(0xc0c2, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7f5c);
        EXPECT(gbc.pc(), 0xc0c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c2), 0xcb);
        EXPECT(gbc.readMem(0xc0c3), 0x54);
        // CB 54 0086
        gbc.setState(0x5b5e, 0x8be1, 0xf280, 0x3773, 0xf7ae, 0x45fb, 0x0, 0x1);
        gbc.writeMem(0x5b5e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8be1);
        EXPECT(gbc.pc(), 0x5b60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0087
        gbc.setState(0xd35, 0x1fff, 0xfc60, 0x2dbf, 0xe5b1, 0x931c, 0x1, 0x0);
        gbc.writeMem(0xd35, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1fff);
        EXPECT(gbc.pc(), 0xd37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0088
        gbc.setState(0xccf3, 0x5ba0, 0xaa30, 0xdcd2, 0x7b46, 0xca4c, 0x1, 0x0);
        gbc.writeMem(0xccf3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5ba0);
        EXPECT(gbc.pc(), 0xccf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf3), 0xcb);
        EXPECT(gbc.readMem(0xccf4), 0x54);
        // CB 54 0089
        gbc.setState(0x91ea, 0x4926, 0x67b0, 0xdc93, 0xc6d2, 0x9402, 0x1, 0x0);
        gbc.writeMem(0x91ea, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4926);
        EXPECT(gbc.pc(), 0x91ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91ea), 0xcb);
        EXPECT(gbc.readMem(0x91eb), 0x54);
        // CB 54 008A
        gbc.setState(0x9a4, 0x8d7b, 0xf8e0, 0x19c, 0x85ea, 0xc159, 0x0, 0x0);
        gbc.writeMem(0x9a4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8d7b);
        EXPECT(gbc.pc(), 0x9a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 008B
        gbc.setState(0xbf60, 0x1d77, 0x96c0, 0x9f6e, 0xa22c, 0xdf3b, 0x1, 0x1);
        gbc.writeMem(0xbf60, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1d77);
        EXPECT(gbc.pc(), 0xbf62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf60), 0xcb);
        EXPECT(gbc.readMem(0xbf61), 0x54);
        // CB 54 008C
        gbc.setState(0x815f, 0xda51, 0x7890, 0x5818, 0xb286, 0xf6e9, 0x1, 0x1);
        gbc.writeMem(0x815f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xda51);
        EXPECT(gbc.pc(), 0x8161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x815f), 0xcb);
        EXPECT(gbc.readMem(0x8160), 0x54);
        // CB 54 008D
        gbc.setState(0x7cb9, 0x6b40, 0xd0a0, 0x7992, 0x3a80, 0xd6c6, 0x0, 0x0);
        gbc.writeMem(0x7cb9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6b40);
        EXPECT(gbc.pc(), 0x7cbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 008E
        gbc.setState(0xb494, 0x1b21, 0x5030, 0xf812, 0xfc2f, 0xe5ce, 0x1, 0x1);
        gbc.writeMem(0xb494, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1b21);
        EXPECT(gbc.pc(), 0xb496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb494), 0xcb);
        EXPECT(gbc.readMem(0xb495), 0x54);
        // CB 54 008F
        gbc.setState(0x2787, 0x341e, 0x150, 0x93fe, 0x643f, 0xebba, 0x0, 0x1);
        gbc.writeMem(0x2787, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x341e);
        EXPECT(gbc.pc(), 0x2789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0090
        gbc.setState(0x591e, 0xf00e, 0x7d70, 0x8823, 0x487b, 0xad5, 0x0, 0x1);
        gbc.writeMem(0x591e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf00e);
        EXPECT(gbc.pc(), 0x5920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0091
        gbc.setState(0xb43c, 0xed11, 0x8fb0, 0x8f73, 0xaa5a, 0x925a, 0x0, 0x0);
        gbc.writeMem(0xb43c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xed11);
        EXPECT(gbc.pc(), 0xb43e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb43c), 0xcb);
        EXPECT(gbc.readMem(0xb43d), 0x54);
        // CB 54 0092
        gbc.setState(0x631, 0x71b, 0xfb80, 0x84eb, 0x4c70, 0xb8c6, 0x1, 0x1);
        gbc.writeMem(0x631, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x71b);
        EXPECT(gbc.pc(), 0x633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0093
        gbc.setState(0xdf4e, 0x6d8, 0x1860, 0x22a1, 0x83f8, 0x8534, 0x1, 0x1);
        gbc.writeMem(0xdf4e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6d8);
        EXPECT(gbc.pc(), 0xdf50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf4e), 0xcb);
        EXPECT(gbc.readMem(0xdf4f), 0x54);
        // CB 54 0094
        gbc.setState(0x5328, 0xe7f7, 0x7a50, 0x185a, 0x7b1d, 0x9ffe, 0x1, 0x0);
        gbc.writeMem(0x5328, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe7f7);
        EXPECT(gbc.pc(), 0x532a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0095
        gbc.setState(0x6b77, 0x18d8, 0xfba0, 0x1095, 0x456c, 0x6c74, 0x1, 0x1);
        gbc.writeMem(0x6b77, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x18d8);
        EXPECT(gbc.pc(), 0x6b79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0096
        gbc.setState(0x52d8, 0x528, 0x1b20, 0x79a0, 0xd9d4, 0xb884, 0x0, 0x0);
        gbc.writeMem(0x52d8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x528);
        EXPECT(gbc.pc(), 0x52da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0097
        gbc.setState(0x2741, 0x1378, 0x9930, 0x3a5d, 0x3126, 0x680f, 0x0, 0x0);
        gbc.writeMem(0x2741, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1378);
        EXPECT(gbc.pc(), 0x2743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0098
        gbc.setState(0xd21f, 0x73ab, 0xfc90, 0xd9c5, 0x80ad, 0x94e0, 0x1, 0x1);
        gbc.writeMem(0xd21f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x73ab);
        EXPECT(gbc.pc(), 0xd221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd21f), 0xcb);
        EXPECT(gbc.readMem(0xd220), 0x54);
        // CB 54 0099
        gbc.setState(0x9cc, 0x8df0, 0x77e0, 0xb65f, 0xbd88, 0xe09b, 0x0, 0x1);
        gbc.writeMem(0x9cc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8df0);
        EXPECT(gbc.pc(), 0x9ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 009A
        gbc.setState(0x2c1b, 0xe227, 0xbca0, 0x42ff, 0x2cf6, 0xcbc4, 0x0, 0x1);
        gbc.writeMem(0x2c1b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe227);
        EXPECT(gbc.pc(), 0x2c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 009B
        gbc.setState(0x5056, 0x5505, 0xd880, 0x8bf5, 0xc62, 0x9738, 0x1, 0x0);
        gbc.writeMem(0x5056, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5505);
        EXPECT(gbc.pc(), 0x5058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 009D
        gbc.setState(0xe966, 0xd71c, 0xc050, 0x3288, 0xdba2, 0xc8a0, 0x0, 0x0);
        gbc.writeMem(0xe966, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd71c);
        EXPECT(gbc.pc(), 0xe968);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe966), 0xcb);
        EXPECT(gbc.readMem(0xe967), 0x54);
        // CB 54 009F
        gbc.setState(0xe734, 0x6675, 0xc140, 0x2e00, 0xdb37, 0xc1c6, 0x0, 0x0);
        gbc.writeMem(0xe734, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6675);
        EXPECT(gbc.pc(), 0xe736);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe734), 0xcb);
        EXPECT(gbc.readMem(0xe735), 0x54);
        // CB 54 00A0
        gbc.setState(0xbe5e, 0x3161, 0x4430, 0x501a, 0xacdd, 0x365b, 0x0, 0x1);
        gbc.writeMem(0xbe5e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3161);
        EXPECT(gbc.pc(), 0xbe60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe5e), 0xcb);
        EXPECT(gbc.readMem(0xbe5f), 0x54);
        // CB 54 00A1
        gbc.setState(0x7270, 0xefc0, 0x250, 0xd80d, 0x21ac, 0xda93, 0x0, 0x0);
        gbc.writeMem(0x7270, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xefc0);
        EXPECT(gbc.pc(), 0x7272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00A2
        gbc.setState(0xce6c, 0x4f8a, 0x1c40, 0x864f, 0xb8a5, 0x8223, 0x1, 0x1);
        gbc.writeMem(0xce6c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4f8a);
        EXPECT(gbc.pc(), 0xce6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce6c), 0xcb);
        EXPECT(gbc.readMem(0xce6d), 0x54);
        // CB 54 00A3
        gbc.setState(0x70e7, 0x9871, 0xa790, 0x4cf5, 0xd7aa, 0x1c5b, 0x1, 0x0);
        gbc.writeMem(0x70e7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9871);
        EXPECT(gbc.pc(), 0x70e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00A5
        gbc.setState(0x3eb7, 0xb3b8, 0x91c0, 0x754, 0xc424, 0xf5f9, 0x1, 0x0);
        gbc.writeMem(0x3eb7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb3b8);
        EXPECT(gbc.pc(), 0x3eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00A6
        gbc.setState(0xd58d, 0x6749, 0x4b90, 0xf085, 0x9d2d, 0xd4a3, 0x0, 0x0);
        gbc.writeMem(0xd58d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6749);
        EXPECT(gbc.pc(), 0xd58f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd58d), 0xcb);
        EXPECT(gbc.readMem(0xd58e), 0x54);
        // CB 54 00A7
        gbc.setState(0xe5b0, 0x6b73, 0xc930, 0x39a5, 0xb2c0, 0x5110, 0x1, 0x1);
        gbc.writeMem(0xe5b0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6b73);
        EXPECT(gbc.pc(), 0xe5b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5b0), 0xcb);
        EXPECT(gbc.readMem(0xe5b1), 0x54);
        // CB 54 00A8
        gbc.setState(0x1830, 0xdbd8, 0x5f00, 0x5f77, 0x42a5, 0x1e2d, 0x0, 0x1);
        gbc.writeMem(0x1830, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xdbd8);
        EXPECT(gbc.pc(), 0x1832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00A9
        gbc.setState(0x5228, 0x6713, 0xb100, 0x14c1, 0x8b54, 0x3340, 0x1, 0x1);
        gbc.writeMem(0x5228, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x6713);
        EXPECT(gbc.pc(), 0x522a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00AA
        gbc.setState(0x865d, 0x4992, 0x3490, 0x216f, 0xdbca, 0x14a, 0x0, 0x0);
        gbc.writeMem(0x865d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4992);
        EXPECT(gbc.pc(), 0x865f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x865d), 0xcb);
        EXPECT(gbc.readMem(0x865e), 0x54);
        // CB 54 00AB
        gbc.setState(0x30b2, 0xa0b5, 0x95f0, 0xc755, 0xdc8f, 0x8330, 0x0, 0x0);
        gbc.writeMem(0x30b2, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa0b5);
        EXPECT(gbc.pc(), 0x30b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00AC
        gbc.setState(0x9c70, 0x22fd, 0x7070, 0x4529, 0x8a43, 0x280a, 0x1, 0x0);
        gbc.writeMem(0x9c70, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x22fd);
        EXPECT(gbc.pc(), 0x9c72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c70), 0xcb);
        EXPECT(gbc.readMem(0x9c71), 0x54);
        // CB 54 00AD
        gbc.setState(0x71f4, 0x456f, 0x1d50, 0xa074, 0xd8dd, 0x272b, 0x0, 0x1);
        gbc.writeMem(0x71f4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x456f);
        EXPECT(gbc.pc(), 0x71f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00AE
        gbc.setState(0x4ee0, 0x123, 0x92a0, 0xf648, 0x5ddd, 0xa31c, 0x1, 0x1);
        gbc.writeMem(0x4ee0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x123);
        EXPECT(gbc.pc(), 0x4ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00AF
        gbc.setState(0xd663, 0xc87d, 0x6d30, 0x6ef, 0xc351, 0x8de, 0x0, 0x1);
        gbc.writeMem(0xd663, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc87d);
        EXPECT(gbc.pc(), 0xd665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd663), 0xcb);
        EXPECT(gbc.readMem(0xd664), 0x54);
        // CB 54 00B1
        gbc.setState(0xe1bb, 0x65a7, 0x3700, 0xcd8d, 0x19ec, 0xa9b7, 0x1, 0x1);
        gbc.writeMem(0xe1bb, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x65a7);
        EXPECT(gbc.pc(), 0xe1bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1bb), 0xcb);
        EXPECT(gbc.readMem(0xe1bc), 0x54);
        // CB 54 00B2
        gbc.setState(0xe97d, 0x3ec1, 0x1240, 0xee1, 0xddf5, 0x3869, 0x1, 0x1);
        gbc.writeMem(0xe97d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3ec1);
        EXPECT(gbc.pc(), 0xe97f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe97d), 0xcb);
        EXPECT(gbc.readMem(0xe97e), 0x54);
        // CB 54 00B3
        gbc.setState(0x5722, 0x2cea, 0x750, 0x38b5, 0x5870, 0xba2c, 0x1, 0x1);
        gbc.writeMem(0x5722, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2cea);
        EXPECT(gbc.pc(), 0x5724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00B4
        gbc.setState(0xcd54, 0x4bb5, 0x3510, 0x3851, 0x2e3f, 0x77fa, 0x1, 0x1);
        gbc.writeMem(0xcd54, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4bb5);
        EXPECT(gbc.pc(), 0xcd56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd54), 0xcb);
        EXPECT(gbc.readMem(0xcd55), 0x54);
        // CB 54 00B5
        gbc.setState(0xb25, 0xffa1, 0x8ac0, 0x6322, 0xea52, 0xa8fe, 0x1, 0x0);
        gbc.writeMem(0xb25, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xffa1);
        EXPECT(gbc.pc(), 0xb27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00B6
        gbc.setState(0x27ce, 0xc1ec, 0x9b90, 0x1d76, 0xfcda, 0xd00b, 0x0, 0x1);
        gbc.writeMem(0x27ce, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc1ec);
        EXPECT(gbc.pc(), 0x27d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00B7
        gbc.setState(0x1f0e, 0x9a0b, 0x7c80, 0xa1c6, 0x9137, 0xa5e, 0x1, 0x0);
        gbc.writeMem(0x1f0e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9a0b);
        EXPECT(gbc.pc(), 0x1f10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00B8
        gbc.setState(0xd059, 0x3bda, 0xcee0, 0x92c0, 0x3a68, 0x956a, 0x0, 0x0);
        gbc.writeMem(0xd059, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3bda);
        EXPECT(gbc.pc(), 0xd05b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd059), 0xcb);
        EXPECT(gbc.readMem(0xd05a), 0x54);
        // CB 54 00B9
        gbc.setState(0x7cac, 0x5ed7, 0xb8a0, 0x5a91, 0xc192, 0x7ed5, 0x0, 0x1);
        gbc.writeMem(0x7cac, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5ed7);
        EXPECT(gbc.pc(), 0x7cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00BA
        gbc.setState(0xba16, 0x6e4a, 0xeb0, 0xbabc, 0x555d, 0xef5b, 0x1, 0x1);
        gbc.writeMem(0xba16, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6e4a);
        EXPECT(gbc.pc(), 0xba18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba16), 0xcb);
        EXPECT(gbc.readMem(0xba17), 0x54);
        // CB 54 00BB
        gbc.setState(0xd490, 0xe90e, 0x46a0, 0x3ec6, 0xe732, 0xc234, 0x1, 0x0);
        gbc.writeMem(0xd490, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe90e);
        EXPECT(gbc.pc(), 0xd492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd490), 0xcb);
        EXPECT(gbc.readMem(0xd491), 0x54);
        // CB 54 00BC
        gbc.setState(0xc971, 0x2431, 0xde10, 0x2631, 0x7a0e, 0x4b42, 0x0, 0x0);
        gbc.writeMem(0xc971, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2431);
        EXPECT(gbc.pc(), 0xc973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc971), 0xcb);
        EXPECT(gbc.readMem(0xc972), 0x54);
        // CB 54 00BD
        gbc.setState(0x1fde, 0x2ee1, 0x6a70, 0xd12a, 0x587c, 0x8e10, 0x0, 0x1);
        gbc.writeMem(0x1fde, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2ee1);
        EXPECT(gbc.pc(), 0x1fe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00BE
        gbc.setState(0xe4a2, 0x2883, 0xcfd0, 0xa8a3, 0x8735, 0xbf82, 0x1, 0x0);
        gbc.writeMem(0xe4a2, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2883);
        EXPECT(gbc.pc(), 0xe4a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4a2), 0xcb);
        EXPECT(gbc.readMem(0xe4a3), 0x54);
        // CB 54 00BF
        gbc.setState(0x9fd8, 0xfd66, 0xaf80, 0x1f06, 0x9016, 0x5304, 0x0, 0x1);
        gbc.writeMem(0x9fd8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xfd66);
        EXPECT(gbc.pc(), 0x9fda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd8), 0xcb);
        EXPECT(gbc.readMem(0x9fd9), 0x54);
        // CB 54 00C0
        gbc.setState(0xb2d6, 0x772e, 0x8d80, 0xb1e8, 0x70c, 0xbc0c, 0x0, 0x1);
        gbc.writeMem(0xb2d6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x772e);
        EXPECT(gbc.pc(), 0xb2d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2d6), 0xcb);
        EXPECT(gbc.readMem(0xb2d7), 0x54);
        // CB 54 00C1
        gbc.setState(0x2fc8, 0xa1c0, 0x3aa0, 0x9f70, 0xe660, 0xeb8e, 0x0, 0x1);
        gbc.writeMem(0x2fc8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa1c0);
        EXPECT(gbc.pc(), 0x2fca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00C2
        gbc.setState(0x43d, 0xf287, 0xf020, 0xe745, 0x5ccd, 0xb9de, 0x0, 0x1);
        gbc.writeMem(0x43d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf287);
        EXPECT(gbc.pc(), 0x43f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00C4
        gbc.setState(0x4ff6, 0x367b, 0xb6d0, 0xb8ef, 0x5874, 0xc4ad, 0x1, 0x1);
        gbc.writeMem(0x4ff6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x367b);
        EXPECT(gbc.pc(), 0x4ff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00C5
        gbc.setState(0xc3d6, 0x16ef, 0xfa60, 0xb078, 0x6530, 0xe738, 0x1, 0x1);
        gbc.writeMem(0xc3d6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x16ef);
        EXPECT(gbc.pc(), 0xc3d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d6), 0xcb);
        EXPECT(gbc.readMem(0xc3d7), 0x54);
        // CB 54 00C6
        gbc.setState(0x953d, 0xce48, 0x2000, 0x19fb, 0x20b8, 0xfb93, 0x0, 0x0);
        gbc.writeMem(0x953d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xce48);
        EXPECT(gbc.pc(), 0x953f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x953d), 0xcb);
        EXPECT(gbc.readMem(0x953e), 0x54);
        // CB 54 00C7
        gbc.setState(0xb6ab, 0x5710, 0xee30, 0x3de5, 0xae8e, 0x92bc, 0x0, 0x0);
        gbc.writeMem(0xb6ab, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5710);
        EXPECT(gbc.pc(), 0xb6ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ab), 0xcb);
        EXPECT(gbc.readMem(0xb6ac), 0x54);
        // CB 54 00C8
        gbc.setState(0x3626, 0x200f, 0x2070, 0x1b4, 0x77d9, 0xb56e, 0x1, 0x0);
        gbc.writeMem(0x3626, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x200f);
        EXPECT(gbc.pc(), 0x3628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00C9
        gbc.setState(0x2b54, 0x633f, 0x25e0, 0x42ea, 0xcdc2, 0xff9f, 0x1, 0x0);
        gbc.writeMem(0x2b54, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x633f);
        EXPECT(gbc.pc(), 0x2b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00CA
        gbc.setState(0x98ea, 0xfb8, 0x1f20, 0x2216, 0x9789, 0x89ea, 0x1, 0x0);
        gbc.writeMem(0x98ea, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfb8);
        EXPECT(gbc.pc(), 0x98ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98ea), 0xcb);
        EXPECT(gbc.readMem(0x98eb), 0x54);
        // CB 54 00CB
        gbc.setState(0x1ee8, 0xa652, 0xa860, 0xa009, 0xc3dd, 0x8395, 0x0, 0x1);
        gbc.writeMem(0x1ee8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa652);
        EXPECT(gbc.pc(), 0x1eea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00CC
        gbc.setState(0x499b, 0x23f9, 0x24f0, 0x8763, 0x93f4, 0x9aca, 0x0, 0x0);
        gbc.writeMem(0x499b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x23f9);
        EXPECT(gbc.pc(), 0x499d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00CD
        gbc.setState(0xeb1d, 0x16b7, 0xf20, 0xc16e, 0x3f8f, 0x992c, 0x1, 0x0);
        gbc.writeMem(0xeb1d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x16b7);
        EXPECT(gbc.pc(), 0xeb1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb1d), 0xcb);
        EXPECT(gbc.readMem(0xeb1e), 0x54);
        // CB 54 00CE
        gbc.setState(0xefcf, 0xb52f, 0xe5f0, 0xc6fc, 0x3090, 0xb241, 0x1, 0x1);
        gbc.writeMem(0xefcf, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb52f);
        EXPECT(gbc.pc(), 0xefd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefcf), 0xcb);
        EXPECT(gbc.readMem(0xefd0), 0x54);
        // CB 54 00CF
        gbc.setState(0x390f, 0xd39, 0xc940, 0x2255, 0x5d3b, 0x1814, 0x0, 0x0);
        gbc.writeMem(0x390f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd39);
        EXPECT(gbc.pc(), 0x3911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00D0
        gbc.setState(0xdf48, 0x47eb, 0xfc50, 0x826c, 0x1698, 0x6a98, 0x0, 0x1);
        gbc.writeMem(0xdf48, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x47eb);
        EXPECT(gbc.pc(), 0xdf4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf48), 0xcb);
        EXPECT(gbc.readMem(0xdf49), 0x54);
        // CB 54 00D1
        gbc.setState(0xa94b, 0xfb25, 0x70, 0xe1db, 0x4446, 0x8a4c, 0x0, 0x0);
        gbc.writeMem(0xa94b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfb25);
        EXPECT(gbc.pc(), 0xa94d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa94b), 0xcb);
        EXPECT(gbc.readMem(0xa94c), 0x54);
        // CB 54 00D2
        gbc.setState(0xe2bd, 0x1c28, 0x490, 0x934c, 0x7a13, 0x8cfa, 0x0, 0x1);
        gbc.writeMem(0xe2bd, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1c28);
        EXPECT(gbc.pc(), 0xe2bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2bd), 0xcb);
        EXPECT(gbc.readMem(0xe2be), 0x54);
        // CB 54 00D3
        gbc.setState(0x1905, 0xd15c, 0xdb80, 0x482a, 0x201d, 0xe72e, 0x1, 0x0);
        gbc.writeMem(0x1905, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd15c);
        EXPECT(gbc.pc(), 0x1907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00D4
        gbc.setState(0x333b, 0x8276, 0xdc70, 0xaf21, 0x2ae1, 0x9c98, 0x1, 0x0);
        gbc.writeMem(0x333b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8276);
        EXPECT(gbc.pc(), 0x333d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00D5
        gbc.setState(0xbd14, 0xd0da, 0x3cf0, 0x9e00, 0x51be, 0x11df, 0x1, 0x1);
        gbc.writeMem(0xbd14, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd0da);
        EXPECT(gbc.pc(), 0xbd16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd14), 0xcb);
        EXPECT(gbc.readMem(0xbd15), 0x54);
        // CB 54 00D6
        gbc.setState(0x8de2, 0xce0, 0x1d90, 0x3c4b, 0xbb5b, 0xde82, 0x1, 0x1);
        gbc.writeMem(0x8de2, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xce0);
        EXPECT(gbc.pc(), 0x8de4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de2), 0xcb);
        EXPECT(gbc.readMem(0x8de3), 0x54);
        // CB 54 00D7
        gbc.setState(0x66d1, 0x5105, 0xf8a0, 0xc0ce, 0x1746, 0xbd78, 0x0, 0x1);
        gbc.writeMem(0x66d1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5105);
        EXPECT(gbc.pc(), 0x66d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00D8
        gbc.setState(0x7751, 0x141e, 0xfcb0, 0x38b9, 0xcb09, 0xfaaa, 0x0, 0x1);
        gbc.writeMem(0x7751, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x141e);
        EXPECT(gbc.pc(), 0x7753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00D9
        gbc.setState(0xb2be, 0x7c53, 0xa080, 0x5a1c, 0x588d, 0x54d4, 0x1, 0x1);
        gbc.writeMem(0xb2be, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7c53);
        EXPECT(gbc.pc(), 0xb2c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2be), 0xcb);
        EXPECT(gbc.readMem(0xb2bf), 0x54);
        // CB 54 00DA
        gbc.setState(0x3bd8, 0xaaa0, 0x8a60, 0xdcfd, 0x2743, 0xf81d, 0x0, 0x1);
        gbc.writeMem(0x3bd8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xaaa0);
        EXPECT(gbc.pc(), 0x3bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00DB
        gbc.setState(0x4b7, 0x2b15, 0x1950, 0xad7a, 0xaac3, 0x7fbd, 0x0, 0x1);
        gbc.writeMem(0x4b7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2b15);
        EXPECT(gbc.pc(), 0x4b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00DC
        gbc.setState(0xa70a, 0xc2bd, 0x8ce0, 0xd850, 0x5b87, 0x6a32, 0x0, 0x0);
        gbc.writeMem(0xa70a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc2bd);
        EXPECT(gbc.pc(), 0xa70c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa70a), 0xcb);
        EXPECT(gbc.readMem(0xa70b), 0x54);
        // CB 54 00DD
        gbc.setState(0x1846, 0xb25b, 0x4830, 0x4f21, 0x7886, 0xf90b, 0x1, 0x1);
        gbc.writeMem(0x1846, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb25b);
        EXPECT(gbc.pc(), 0x1848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00DE
        gbc.setState(0x94c8, 0x8430, 0x96e0, 0x55f7, 0xc08b, 0xe6ca, 0x1, 0x1);
        gbc.writeMem(0x94c8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8430);
        EXPECT(gbc.pc(), 0x94ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94c8), 0xcb);
        EXPECT(gbc.readMem(0x94c9), 0x54);
        // CB 54 00DF
        gbc.setState(0xe95f, 0xa517, 0x8b30, 0x71ba, 0xb7d5, 0xe28d, 0x0, 0x0);
        gbc.writeMem(0xe95f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa517);
        EXPECT(gbc.pc(), 0xe961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe95f), 0xcb);
        EXPECT(gbc.readMem(0xe960), 0x54);
        // CB 54 00E0
        gbc.setState(0x7da4, 0x4b31, 0xfa0, 0xd448, 0x2997, 0x7710, 0x1, 0x0);
        gbc.writeMem(0x7da4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4b31);
        EXPECT(gbc.pc(), 0x7da6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00E2
        gbc.setState(0xbfee, 0x4aea, 0xfd20, 0x7d08, 0xbd48, 0x3e83, 0x1, 0x0);
        gbc.writeMem(0xbfee, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4aea);
        EXPECT(gbc.pc(), 0xbff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfee), 0xcb);
        EXPECT(gbc.readMem(0xbfef), 0x54);
        // CB 54 00E3
        gbc.setState(0x6835, 0xf1e0, 0x71d0, 0xf0d, 0x4c62, 0x5fc9, 0x1, 0x1);
        gbc.writeMem(0x6835, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf1e0);
        EXPECT(gbc.pc(), 0x6837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00E4
        gbc.setState(0xb888, 0xb34, 0x8620, 0x91f7, 0x8f2e, 0x9cf7, 0x0, 0x0);
        gbc.writeMem(0xb888, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb34);
        EXPECT(gbc.pc(), 0xb88a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb888), 0xcb);
        EXPECT(gbc.readMem(0xb889), 0x54);
        // CB 54 00E5
        gbc.setState(0xa49b, 0x5e9e, 0x9980, 0x217, 0xbe0c, 0x8a14, 0x1, 0x0);
        gbc.writeMem(0xa49b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5e9e);
        EXPECT(gbc.pc(), 0xa49d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49b), 0xcb);
        EXPECT(gbc.readMem(0xa49c), 0x54);
        // CB 54 00E6
        gbc.setState(0xdf17, 0xed63, 0x6380, 0x7431, 0x516b, 0x3326, 0x0, 0x0);
        gbc.writeMem(0xdf17, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xed63);
        EXPECT(gbc.pc(), 0xdf19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf17), 0xcb);
        EXPECT(gbc.readMem(0xdf18), 0x54);
        // CB 54 00E7
        gbc.setState(0x22dd, 0x786, 0xa240, 0xa82b, 0x5099, 0x8912, 0x1, 0x0);
        gbc.writeMem(0x22dd, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x786);
        EXPECT(gbc.pc(), 0x22df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00E8
        gbc.setState(0xc9c1, 0xf3b5, 0x1d0, 0x9f75, 0xfd61, 0x7974, 0x1, 0x1);
        gbc.writeMem(0xc9c1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf3b5);
        EXPECT(gbc.pc(), 0xc9c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c1), 0xcb);
        EXPECT(gbc.readMem(0xc9c2), 0x54);
        // CB 54 00E9
        gbc.setState(0xccf3, 0x5420, 0xdae0, 0x4eb4, 0x8e6b, 0x3339, 0x0, 0x1);
        gbc.writeMem(0xccf3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5420);
        EXPECT(gbc.pc(), 0xccf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf3), 0xcb);
        EXPECT(gbc.readMem(0xccf4), 0x54);
        // CB 54 00EA
        gbc.setState(0x7dc6, 0xf203, 0x5740, 0x2c65, 0xac75, 0x1739, 0x1, 0x0);
        gbc.writeMem(0x7dc6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf203);
        EXPECT(gbc.pc(), 0x7dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00EB
        gbc.setState(0x2056, 0xd89, 0xb700, 0xcb9c, 0x25db, 0x5003, 0x0, 0x0);
        gbc.writeMem(0x2056, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd89);
        EXPECT(gbc.pc(), 0x2058);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00EC
        gbc.setState(0x84d, 0x6451, 0xa1f0, 0xa34b, 0x646f, 0x5684, 0x1, 0x0);
        gbc.writeMem(0x84d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6451);
        EXPECT(gbc.pc(), 0x84f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00ED
        gbc.setState(0xadb6, 0xadd5, 0x2560, 0x200b, 0x5794, 0xcb87, 0x0, 0x0);
        gbc.writeMem(0xadb6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xadd5);
        EXPECT(gbc.pc(), 0xadb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadb6), 0xcb);
        EXPECT(gbc.readMem(0xadb7), 0x54);
        // CB 54 00EE
        gbc.setState(0x76dd, 0xae6c, 0x3e0, 0x686c, 0x9b94, 0xcd60, 0x0, 0x1);
        gbc.writeMem(0x76dd, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xae6c);
        EXPECT(gbc.pc(), 0x76df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00EF
        gbc.setState(0xe1b7, 0x89db, 0x4430, 0x167, 0x155d, 0x5869, 0x0, 0x0);
        gbc.writeMem(0xe1b7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x89db);
        EXPECT(gbc.pc(), 0xe1b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1b7), 0xcb);
        EXPECT(gbc.readMem(0xe1b8), 0x54);
        // CB 54 00F0
        gbc.setState(0x2abc, 0x4917, 0xe170, 0xe662, 0x6d30, 0x8c0e, 0x1, 0x0);
        gbc.writeMem(0x2abc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4917);
        EXPECT(gbc.pc(), 0x2abe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00F2
        gbc.setState(0x23cf, 0x372d, 0xc140, 0x538e, 0x809a, 0xeeb1, 0x1, 0x1);
        gbc.writeMem(0x23cf, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x372d);
        EXPECT(gbc.pc(), 0x23d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00F3
        gbc.setState(0xbf4b, 0xf48, 0x4b10, 0xbed5, 0xf16d, 0xda15, 0x1, 0x1);
        gbc.writeMem(0xbf4b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf48);
        EXPECT(gbc.pc(), 0xbf4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf4b), 0xcb);
        EXPECT(gbc.readMem(0xbf4c), 0x54);
        // CB 54 00F4
        gbc.setState(0x75eb, 0xca6c, 0x6fa0, 0x9482, 0xae08, 0x242d, 0x1, 0x0);
        gbc.writeMem(0x75eb, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xca6c);
        EXPECT(gbc.pc(), 0x75ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00F5
        gbc.setState(0xd433, 0x3b60, 0xc000, 0x65bc, 0x56d6, 0x352d, 0x1, 0x0);
        gbc.writeMem(0xd433, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3b60);
        EXPECT(gbc.pc(), 0xd435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd433), 0xcb);
        EXPECT(gbc.readMem(0xd434), 0x54);
        // CB 54 00F6
        gbc.setState(0x6d1d, 0x62b8, 0x1cf0, 0x557f, 0x398c, 0x7e4f, 0x1, 0x0);
        gbc.writeMem(0x6d1d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x62b8);
        EXPECT(gbc.pc(), 0x6d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00F7
        gbc.setState(0x18ac, 0xdb8b, 0x3eb0, 0x1f74, 0xaf7e, 0x24ee, 0x1, 0x0);
        gbc.writeMem(0x18ac, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdb8b);
        EXPECT(gbc.pc(), 0x18ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 00F8
        gbc.setState(0x2e2d, 0x7b0d, 0x18a0, 0x1ff5, 0xd4f7, 0x51da, 0x0, 0x1);
        gbc.writeMem(0x2e2d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7b0d);
        EXPECT(gbc.pc(), 0x2e2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00F9
        gbc.setState(0x9390, 0x5a3, 0xc60, 0x41bd, 0xde78, 0x5ffb, 0x1, 0x0);
        gbc.writeMem(0x9390, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5a3);
        EXPECT(gbc.pc(), 0x9392);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9390), 0xcb);
        EXPECT(gbc.readMem(0x9391), 0x54);
        // CB 54 00FA
        gbc.setState(0xf73, 0xab18, 0x360, 0xc534, 0xd312, 0x6b83, 0x0, 0x0);
        gbc.writeMem(0xf73, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xab18);
        EXPECT(gbc.pc(), 0xf75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00FB
        gbc.setState(0x4a66, 0x7ce2, 0xdca0, 0xe9d9, 0x231f, 0xa706, 0x0, 0x0);
        gbc.writeMem(0x4a66, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7ce2);
        EXPECT(gbc.pc(), 0x4a68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00FD
        gbc.setState(0x7d66, 0x977d, 0x3f80, 0xf4df, 0xe321, 0xecf9, 0x0, 0x1);
        gbc.writeMem(0x7d66, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x977d);
        EXPECT(gbc.pc(), 0x7d68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00FE
        gbc.setState(0x4012, 0x992c, 0x7220, 0x11f6, 0xde59, 0xc5ed, 0x0, 0x0);
        gbc.writeMem(0x4012, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x992c);
        EXPECT(gbc.pc(), 0x4014);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 00FF
        gbc.setState(0x677, 0xec6e, 0xf810, 0x2ee3, 0x6e33, 0xbb66, 0x0, 0x1);
        gbc.writeMem(0x677, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xec6e);
        EXPECT(gbc.pc(), 0x679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0100
        gbc.setState(0x50f0, 0xe61c, 0xfe10, 0x1631, 0xfba0, 0xfad5, 0x0, 0x0);
        gbc.writeMem(0x50f0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe61c);
        EXPECT(gbc.pc(), 0x50f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0101
        gbc.setState(0x595b, 0xfb4b, 0x93b0, 0xa80c, 0x4d3e, 0x9fc3, 0x1, 0x1);
        gbc.writeMem(0x595b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfb4b);
        EXPECT(gbc.pc(), 0x595d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0102
        gbc.setState(0xdd7, 0xc395, 0x7b90, 0x6ed1, 0xf58, 0x756, 0x0, 0x0);
        gbc.writeMem(0xdd7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc395);
        EXPECT(gbc.pc(), 0xdd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0103
        gbc.setState(0x895e, 0x1f99, 0x30b0, 0x4866, 0x2f3c, 0xd015, 0x1, 0x0);
        gbc.writeMem(0x895e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1f99);
        EXPECT(gbc.pc(), 0x8960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x895e), 0xcb);
        EXPECT(gbc.readMem(0x895f), 0x54);
        // CB 54 0104
        gbc.setState(0xe60d, 0x240, 0x4100, 0x6ce0, 0x1155, 0x26b8, 0x1, 0x0);
        gbc.writeMem(0xe60d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x240);
        EXPECT(gbc.pc(), 0xe60f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe60d), 0xcb);
        EXPECT(gbc.readMem(0xe60e), 0x54);
        // CB 54 0105
        gbc.setState(0xcafa, 0xb189, 0xc0f0, 0xabc1, 0xe6c8, 0x9a68, 0x0, 0x1);
        gbc.writeMem(0xcafa, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb189);
        EXPECT(gbc.pc(), 0xcafc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcafa), 0xcb);
        EXPECT(gbc.readMem(0xcafb), 0x54);
        // CB 54 0106
        gbc.setState(0x261b, 0x40de, 0xc350, 0xd142, 0x8de0, 0x7774, 0x1, 0x0);
        gbc.writeMem(0x261b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x40de);
        EXPECT(gbc.pc(), 0x261d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0107
        gbc.setState(0xae47, 0x6253, 0x5490, 0xdb07, 0x876c, 0xbc78, 0x1, 0x0);
        gbc.writeMem(0xae47, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6253);
        EXPECT(gbc.pc(), 0xae49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae47), 0xcb);
        EXPECT(gbc.readMem(0xae48), 0x54);
        // CB 54 0108
        gbc.setState(0xad21, 0x206f, 0xc090, 0xaa37, 0x1693, 0xfafe, 0x0, 0x0);
        gbc.writeMem(0xad21, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x206f);
        EXPECT(gbc.pc(), 0xad23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad21), 0xcb);
        EXPECT(gbc.readMem(0xad22), 0x54);
        // CB 54 0109
        gbc.setState(0xe6f2, 0x78e9, 0x2d70, 0x9477, 0x4c09, 0x3330, 0x1, 0x0);
        gbc.writeMem(0xe6f2, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x78e9);
        EXPECT(gbc.pc(), 0xe6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6f2), 0xcb);
        EXPECT(gbc.readMem(0xe6f3), 0x54);
        // CB 54 010A
        gbc.setState(0x5088, 0x1e2d, 0xb300, 0x970f, 0x2a37, 0x3bf9, 0x1, 0x0);
        gbc.writeMem(0x5088, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1e2d);
        EXPECT(gbc.pc(), 0x508a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 010B
        gbc.setState(0x1744, 0xe6ba, 0xe390, 0xbfe4, 0xbc65, 0xf216, 0x0, 0x1);
        gbc.writeMem(0x1744, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe6ba);
        EXPECT(gbc.pc(), 0x1746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 010C
        gbc.setState(0x80d, 0x1bab, 0x49f0, 0xbf9f, 0xf708, 0x3bc3, 0x0, 0x1);
        gbc.writeMem(0x80d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1bab);
        EXPECT(gbc.pc(), 0x80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 010D
        gbc.setState(0x83f6, 0xad8b, 0x98f0, 0xc8eb, 0x21b7, 0x787c, 0x0, 0x1);
        gbc.writeMem(0x83f6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xad8b);
        EXPECT(gbc.pc(), 0x83f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83f6), 0xcb);
        EXPECT(gbc.readMem(0x83f7), 0x54);
        // CB 54 010E
        gbc.setState(0x611d, 0x3e2d, 0x40d0, 0xab83, 0x3e52, 0xda1c, 0x0, 0x0);
        gbc.writeMem(0x611d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3e2d);
        EXPECT(gbc.pc(), 0x611f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 010F
        gbc.setState(0x4aca, 0x781a, 0x4e80, 0x79b0, 0xdad9, 0x90c9, 0x0, 0x0);
        gbc.writeMem(0x4aca, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x781a);
        EXPECT(gbc.pc(), 0x4acc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0110
        gbc.setState(0xc838, 0x4ef7, 0x42f0, 0x4b79, 0x2f01, 0x253, 0x1, 0x0);
        gbc.writeMem(0xc838, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4ef7);
        EXPECT(gbc.pc(), 0xc83a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc838), 0xcb);
        EXPECT(gbc.readMem(0xc839), 0x54);
        // CB 54 0111
        gbc.setState(0x510a, 0xf5aa, 0xf4b0, 0x5d41, 0x9a57, 0x43e9, 0x0, 0x1);
        gbc.writeMem(0x510a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf5aa);
        EXPECT(gbc.pc(), 0x510c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0112
        gbc.setState(0x7fe9, 0xea21, 0xd3a0, 0x42d0, 0xd073, 0x9902, 0x0, 0x0);
        gbc.writeMem(0x7fe9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xea21);
        EXPECT(gbc.pc(), 0x7feb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0113
        gbc.setState(0x85c5, 0xe765, 0x24c0, 0xec63, 0xcd69, 0xd1ac, 0x0, 0x1);
        gbc.writeMem(0x85c5, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe765);
        EXPECT(gbc.pc(), 0x85c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c5), 0xcb);
        EXPECT(gbc.readMem(0x85c6), 0x54);
        // CB 54 0114
        gbc.setState(0x98ac, 0xab1d, 0x9d50, 0xade6, 0xb45e, 0x3642, 0x1, 0x0);
        gbc.writeMem(0x98ac, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xab1d);
        EXPECT(gbc.pc(), 0x98ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ac), 0xcb);
        EXPECT(gbc.readMem(0x98ad), 0x54);
        // CB 54 0115
        gbc.setState(0x9618, 0xab8d, 0x1a80, 0x9ebe, 0x93b9, 0x7877, 0x0, 0x1);
        gbc.writeMem(0x9618, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xab8d);
        EXPECT(gbc.pc(), 0x961a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9618), 0xcb);
        EXPECT(gbc.readMem(0x9619), 0x54);
        // CB 54 0116
        gbc.setState(0x8447, 0xa98d, 0x4270, 0xf6f7, 0x16e2, 0x2194, 0x0, 0x0);
        gbc.writeMem(0x8447, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa98d);
        EXPECT(gbc.pc(), 0x8449);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8447), 0xcb);
        EXPECT(gbc.readMem(0x8448), 0x54);
        // CB 54 0117
        gbc.setState(0x5411, 0x4cf4, 0xe400, 0xf000, 0xd24d, 0xcb1c, 0x0, 0x1);
        gbc.writeMem(0x5411, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4cf4);
        EXPECT(gbc.pc(), 0x5413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0118
        gbc.setState(0xd3de, 0x55ff, 0xd800, 0xc7b2, 0xe3f3, 0xe116, 0x1, 0x1);
        gbc.writeMem(0xd3de, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x55ff);
        EXPECT(gbc.pc(), 0xd3e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3de), 0xcb);
        EXPECT(gbc.readMem(0xd3df), 0x54);
        // CB 54 011A
        gbc.setState(0x3fb9, 0xaadb, 0x4f20, 0xcc84, 0xc9d, 0xf565, 0x0, 0x1);
        gbc.writeMem(0x3fb9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xaadb);
        EXPECT(gbc.pc(), 0x3fbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 011B
        gbc.setState(0x6b3e, 0x3d67, 0xd7d0, 0x259f, 0xe094, 0x2ce5, 0x0, 0x0);
        gbc.writeMem(0x6b3e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3d67);
        EXPECT(gbc.pc(), 0x6b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 011C
        gbc.setState(0x3252, 0xb3e, 0xd7b0, 0xec25, 0xc751, 0xcb6a, 0x1, 0x1);
        gbc.writeMem(0x3252, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb3e);
        EXPECT(gbc.pc(), 0x3254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 011D
        gbc.setState(0x9612, 0x5a1, 0x1ab0, 0xe63e, 0xd5e8, 0x49c8, 0x1, 0x1);
        gbc.writeMem(0x9612, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5a1);
        EXPECT(gbc.pc(), 0x9614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9612), 0xcb);
        EXPECT(gbc.readMem(0x9613), 0x54);
        // CB 54 011E
        gbc.setState(0x35aa, 0x6d3, 0xbf70, 0xf215, 0x3ba8, 0x7a5f, 0x0, 0x1);
        gbc.writeMem(0x35aa, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6d3);
        EXPECT(gbc.pc(), 0x35ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 011F
        gbc.setState(0xbe90, 0xd4c6, 0x5610, 0xde32, 0x7b12, 0xd52e, 0x0, 0x0);
        gbc.writeMem(0xbe90, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd4c6);
        EXPECT(gbc.pc(), 0xbe92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe90), 0xcb);
        EXPECT(gbc.readMem(0xbe91), 0x54);
        // CB 54 0120
        gbc.setState(0x239e, 0xf8d0, 0x4190, 0x4bef, 0xc2d8, 0xc4d0, 0x0, 0x1);
        gbc.writeMem(0x239e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf8d0);
        EXPECT(gbc.pc(), 0x23a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0121
        gbc.setState(0xd82e, 0xf09d, 0xb9e0, 0xf037, 0x7381, 0x8511, 0x0, 0x1);
        gbc.writeMem(0xd82e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf09d);
        EXPECT(gbc.pc(), 0xd830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd82e), 0xcb);
        EXPECT(gbc.readMem(0xd82f), 0x54);
        // CB 54 0122
        gbc.setState(0x8a60, 0xacc9, 0x75a0, 0x3c9f, 0x230b, 0x8f7, 0x1, 0x1);
        gbc.writeMem(0x8a60, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xacc9);
        EXPECT(gbc.pc(), 0x8a62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a60), 0xcb);
        EXPECT(gbc.readMem(0x8a61), 0x54);
        // CB 54 0123
        gbc.setState(0x2d78, 0x358f, 0x3010, 0xb90f, 0xa237, 0xfcb, 0x1, 0x0);
        gbc.writeMem(0x2d78, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x358f);
        EXPECT(gbc.pc(), 0x2d7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0124
        gbc.setState(0x1b94, 0x5215, 0xa380, 0x3e8, 0x934c, 0xeed6, 0x1, 0x0);
        gbc.writeMem(0x1b94, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5215);
        EXPECT(gbc.pc(), 0x1b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0125
        gbc.setState(0xe272, 0xc154, 0x71e0, 0x1062, 0x2821, 0xe4fb, 0x1, 0x1);
        gbc.writeMem(0xe272, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc154);
        EXPECT(gbc.pc(), 0xe274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe272), 0xcb);
        EXPECT(gbc.readMem(0xe273), 0x54);
        // CB 54 0126
        gbc.setState(0x367d, 0x3c72, 0xf930, 0xedb4, 0x89ef, 0x8d8d, 0x0, 0x0);
        gbc.writeMem(0x367d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3c72);
        EXPECT(gbc.pc(), 0x367f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0128
        gbc.setState(0xc87c, 0x4a26, 0xf6c0, 0x5dfd, 0xd647, 0xdcd3, 0x1, 0x0);
        gbc.writeMem(0xc87c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4a26);
        EXPECT(gbc.pc(), 0xc87e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc87c), 0xcb);
        EXPECT(gbc.readMem(0xc87d), 0x54);
        // CB 54 0129
        gbc.setState(0x6aec, 0x9ebb, 0xc6f0, 0x3d2f, 0xde8a, 0xeedb, 0x1, 0x1);
        gbc.writeMem(0x6aec, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9ebb);
        EXPECT(gbc.pc(), 0x6aee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 012A
        gbc.setState(0x7907, 0xc652, 0x910, 0xefc1, 0xacdf, 0xf9e6, 0x0, 0x1);
        gbc.writeMem(0x7907, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc652);
        EXPECT(gbc.pc(), 0x7909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 012B
        gbc.setState(0x1c0d, 0x373, 0x96b0, 0x1b43, 0x66f8, 0xca42, 0x0, 0x0);
        gbc.writeMem(0x1c0d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x373);
        EXPECT(gbc.pc(), 0x1c0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 012C
        gbc.setState(0xd0da, 0xb2ab, 0xc7d0, 0xa69f, 0xc35, 0x2621, 0x0, 0x1);
        gbc.writeMem(0xd0da, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb2ab);
        EXPECT(gbc.pc(), 0xd0dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0da), 0xcb);
        EXPECT(gbc.readMem(0xd0db), 0x54);
        // CB 54 012D
        gbc.setState(0x55d0, 0x7d78, 0xf9f0, 0xd798, 0x7c4f, 0x9f42, 0x0, 0x0);
        gbc.writeMem(0x55d0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7d78);
        EXPECT(gbc.pc(), 0x55d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 012E
        gbc.setState(0x8f22, 0x24bb, 0x7390, 0x6ac1, 0xb7e, 0x81d8, 0x0, 0x0);
        gbc.writeMem(0x8f22, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x24bb);
        EXPECT(gbc.pc(), 0x8f24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f22), 0xcb);
        EXPECT(gbc.readMem(0x8f23), 0x54);
        // CB 54 012F
        gbc.setState(0x1dd0, 0xa35f, 0x4fc0, 0x4ee6, 0xa86e, 0x1104, 0x0, 0x1);
        gbc.writeMem(0x1dd0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa35f);
        EXPECT(gbc.pc(), 0x1dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0130
        gbc.setState(0x5b1, 0x20ad, 0xb840, 0xd182, 0xa305, 0xc524, 0x0, 0x0);
        gbc.writeMem(0x5b1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x20ad);
        EXPECT(gbc.pc(), 0x5b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0131
        gbc.setState(0xd0a4, 0x1898, 0x3500, 0x5d58, 0x6fcf, 0x1889, 0x1, 0x0);
        gbc.writeMem(0xd0a4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1898);
        EXPECT(gbc.pc(), 0xd0a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0a4), 0xcb);
        EXPECT(gbc.readMem(0xd0a5), 0x54);
        // CB 54 0132
        gbc.setState(0x92e4, 0xbc14, 0xeae0, 0x9d36, 0x3ef0, 0xade0, 0x1, 0x1);
        gbc.writeMem(0x92e4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xbc14);
        EXPECT(gbc.pc(), 0x92e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e4), 0xcb);
        EXPECT(gbc.readMem(0x92e5), 0x54);
        // CB 54 0133
        gbc.setState(0xa25, 0xd52, 0x41f0, 0x2388, 0xd9ce, 0x908e, 0x0, 0x0);
        gbc.writeMem(0xa25, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd52);
        EXPECT(gbc.pc(), 0xa27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0134
        gbc.setState(0x240c, 0x7ff7, 0xc20, 0xe383, 0xd5c4, 0x38d4, 0x1, 0x0);
        gbc.writeMem(0x240c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7ff7);
        EXPECT(gbc.pc(), 0x240e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0135
        gbc.setState(0x6953, 0x5c98, 0x4580, 0xa054, 0xb6e8, 0x428f, 0x0, 0x1);
        gbc.writeMem(0x6953, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5c98);
        EXPECT(gbc.pc(), 0x6955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0137
        gbc.setState(0x7c4f, 0x3169, 0x5950, 0x54b6, 0xe3bf, 0x30cd, 0x1, 0x0);
        gbc.writeMem(0x7c4f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3169);
        EXPECT(gbc.pc(), 0x7c51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0138
        gbc.setState(0x9ecf, 0xe9ca, 0xc950, 0x6107, 0x2068, 0xd4a1, 0x0, 0x1);
        gbc.writeMem(0x9ecf, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe9ca);
        EXPECT(gbc.pc(), 0x9ed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ecf), 0xcb);
        EXPECT(gbc.readMem(0x9ed0), 0x54);
        // CB 54 0139
        gbc.setState(0xf90, 0x3dab, 0x7120, 0x6d01, 0x108e, 0x75ef, 0x1, 0x0);
        gbc.writeMem(0xf90, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3dab);
        EXPECT(gbc.pc(), 0xf92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 013A
        gbc.setState(0xccf0, 0x8bcc, 0x93a0, 0x4277, 0xbcf8, 0x2b7b, 0x0, 0x0);
        gbc.writeMem(0xccf0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8bcc);
        EXPECT(gbc.pc(), 0xccf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf0), 0xcb);
        EXPECT(gbc.readMem(0xccf1), 0x54);
        // CB 54 013B
        gbc.setState(0x7d21, 0x727b, 0x27c0, 0xe883, 0x7fb2, 0x5a83, 0x0, 0x1);
        gbc.writeMem(0x7d21, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x727b);
        EXPECT(gbc.pc(), 0x7d23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 013C
        gbc.setState(0x9b2c, 0x4725, 0x3470, 0x2a0a, 0x3245, 0x7be5, 0x1, 0x1);
        gbc.writeMem(0x9b2c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4725);
        EXPECT(gbc.pc(), 0x9b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b2c), 0xcb);
        EXPECT(gbc.readMem(0x9b2d), 0x54);
        // CB 54 013D
        gbc.setState(0x3fda, 0xc9b6, 0x8380, 0x100d, 0x3b90, 0x16ca, 0x1, 0x1);
        gbc.writeMem(0x3fda, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc9b6);
        EXPECT(gbc.pc(), 0x3fdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 013E
        gbc.setState(0x32c1, 0x7bbe, 0x5330, 0x6efe, 0xa3f8, 0x8540, 0x1, 0x1);
        gbc.writeMem(0x32c1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7bbe);
        EXPECT(gbc.pc(), 0x32c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 013F
        gbc.setState(0x8151, 0xd15f, 0x67c0, 0x284a, 0xbf44, 0xf3cf, 0x1, 0x0);
        gbc.writeMem(0x8151, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd15f);
        EXPECT(gbc.pc(), 0x8153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8151), 0xcb);
        EXPECT(gbc.readMem(0x8152), 0x54);
        // CB 54 0140
        gbc.setState(0x1dd0, 0x94cf, 0xf540, 0x43d5, 0x220b, 0xb7f7, 0x0, 0x1);
        gbc.writeMem(0x1dd0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x94cf);
        EXPECT(gbc.pc(), 0x1dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0141
        gbc.setState(0x29ce, 0x9a8e, 0x90f0, 0xb905, 0x881, 0x6859, 0x0, 0x0);
        gbc.writeMem(0x29ce, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9a8e);
        EXPECT(gbc.pc(), 0x29d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0142
        gbc.setState(0x396d, 0xb387, 0x6290, 0x36c8, 0x6f2e, 0xcb37, 0x1, 0x0);
        gbc.writeMem(0x396d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb387);
        EXPECT(gbc.pc(), 0x396f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0143
        gbc.setState(0x9e51, 0x54a1, 0x1170, 0x8c62, 0x350, 0xbe49, 0x0, 0x1);
        gbc.writeMem(0x9e51, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x54a1);
        EXPECT(gbc.pc(), 0x9e53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e51), 0xcb);
        EXPECT(gbc.readMem(0x9e52), 0x54);
        // CB 54 0144
        gbc.setState(0x5fb2, 0x60ec, 0x6c90, 0x9fba, 0x2a11, 0x1c57, 0x1, 0x1);
        gbc.writeMem(0x5fb2, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x60ec);
        EXPECT(gbc.pc(), 0x5fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0146
        gbc.setState(0x64b9, 0x1fb4, 0x3070, 0x9ea0, 0x7190, 0x68d3, 0x0, 0x1);
        gbc.writeMem(0x64b9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1fb4);
        EXPECT(gbc.pc(), 0x64bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0147
        gbc.setState(0xc815, 0xa6cc, 0x7e0, 0x9c36, 0xc2d6, 0xc0db, 0x1, 0x1);
        gbc.writeMem(0xc815, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa6cc);
        EXPECT(gbc.pc(), 0xc817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc815), 0xcb);
        EXPECT(gbc.readMem(0xc816), 0x54);
        // CB 54 0148
        gbc.setState(0xe73a, 0x5476, 0xbb20, 0x84a2, 0x7964, 0xef51, 0x1, 0x0);
        gbc.writeMem(0xe73a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5476);
        EXPECT(gbc.pc(), 0xe73c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe73a), 0xcb);
        EXPECT(gbc.readMem(0xe73b), 0x54);
        // CB 54 0149
        gbc.setState(0xe094, 0x105e, 0x90c0, 0x9ad4, 0xf66d, 0xafef, 0x1, 0x0);
        gbc.writeMem(0xe094, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x105e);
        EXPECT(gbc.pc(), 0xe096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe094), 0xcb);
        EXPECT(gbc.readMem(0xe095), 0x54);
        // CB 54 014A
        gbc.setState(0x4a7f, 0xd429, 0xacf0, 0x2861, 0xfcfb, 0xeb5f, 0x0, 0x0);
        gbc.writeMem(0x4a7f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd429);
        EXPECT(gbc.pc(), 0x4a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 014B
        gbc.setState(0xc939, 0x56ea, 0xdc0, 0x5647, 0x3364, 0x97a5, 0x0, 0x0);
        gbc.writeMem(0xc939, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x56ea);
        EXPECT(gbc.pc(), 0xc93b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc939), 0xcb);
        EXPECT(gbc.readMem(0xc93a), 0x54);
        // CB 54 014C
        gbc.setState(0xe54b, 0x838b, 0x8930, 0x32f1, 0x8352, 0x7a85, 0x0, 0x0);
        gbc.writeMem(0xe54b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x838b);
        EXPECT(gbc.pc(), 0xe54d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe54b), 0xcb);
        EXPECT(gbc.readMem(0xe54c), 0x54);
        // CB 54 014D
        gbc.setState(0x5fb1, 0xae18, 0x3b30, 0xe717, 0x20a8, 0x89ab, 0x1, 0x0);
        gbc.writeMem(0x5fb1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xae18);
        EXPECT(gbc.pc(), 0x5fb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 014E
        gbc.setState(0x1b3, 0x11c3, 0xcb80, 0x6b8d, 0xc06b, 0x2bd4, 0x0, 0x0);
        gbc.writeMem(0x1b3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x11c3);
        EXPECT(gbc.pc(), 0x1b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 014F
        gbc.setState(0x61a5, 0xca62, 0xe6d0, 0x24c7, 0xd677, 0x5fa4, 0x1, 0x0);
        gbc.writeMem(0x61a5, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xca62);
        EXPECT(gbc.pc(), 0x61a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0150
        gbc.setState(0x6409, 0x68a, 0xe880, 0x8bcd, 0x73d8, 0x9ec1, 0x0, 0x0);
        gbc.writeMem(0x6409, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x68a);
        EXPECT(gbc.pc(), 0x640b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0151
        gbc.setState(0x7bb1, 0xbad0, 0x3e20, 0xb158, 0xedf2, 0x2611, 0x0, 0x0);
        gbc.writeMem(0x7bb1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbad0);
        EXPECT(gbc.pc(), 0x7bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0152
        gbc.setState(0x89fc, 0xcced, 0xe920, 0x606d, 0x2511, 0xb7f8, 0x0, 0x0);
        gbc.writeMem(0x89fc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xcced);
        EXPECT(gbc.pc(), 0x89fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89fc), 0xcb);
        EXPECT(gbc.readMem(0x89fd), 0x54);
        // CB 54 0153
        gbc.setState(0x545c, 0xa341, 0xf2c0, 0xffde, 0x7e8f, 0x9e6a, 0x1, 0x0);
        gbc.writeMem(0x545c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa341);
        EXPECT(gbc.pc(), 0x545e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0154
        gbc.setState(0x931d, 0x836d, 0x9c70, 0x6bc3, 0x753, 0x1eb7, 0x0, 0x1);
        gbc.writeMem(0x931d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x836d);
        EXPECT(gbc.pc(), 0x931f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x931d), 0xcb);
        EXPECT(gbc.readMem(0x931e), 0x54);
        // CB 54 0155
        gbc.setState(0xd166, 0x9e7, 0x3ad0, 0x718c, 0x9d01, 0x27a2, 0x1, 0x1);
        gbc.writeMem(0xd166, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9e7);
        EXPECT(gbc.pc(), 0xd168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd166), 0xcb);
        EXPECT(gbc.readMem(0xd167), 0x54);
        // CB 54 0156
        gbc.setState(0xb869, 0x7067, 0x85f0, 0xa71, 0x9284, 0x71eb, 0x0, 0x0);
        gbc.writeMem(0xb869, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7067);
        EXPECT(gbc.pc(), 0xb86b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb869), 0xcb);
        EXPECT(gbc.readMem(0xb86a), 0x54);
        // CB 54 0157
        gbc.setState(0x7ead, 0x9500, 0x9090, 0x66c8, 0x37ee, 0x8b6c, 0x1, 0x1);
        gbc.writeMem(0x7ead, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9500);
        EXPECT(gbc.pc(), 0x7eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0158
        gbc.setState(0x3d41, 0x5289, 0xba30, 0xa496, 0x472, 0x6459, 0x0, 0x1);
        gbc.writeMem(0x3d41, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5289);
        EXPECT(gbc.pc(), 0x3d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0159
        gbc.setState(0xa43d, 0x676c, 0xf980, 0xdbbf, 0x910e, 0x9b87, 0x1, 0x1);
        gbc.writeMem(0xa43d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x676c);
        EXPECT(gbc.pc(), 0xa43f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa43d), 0xcb);
        EXPECT(gbc.readMem(0xa43e), 0x54);
        // CB 54 015B
        gbc.setState(0xaaba, 0x9323, 0x4680, 0xa425, 0xa6f5, 0x7f5a, 0x0, 0x0);
        gbc.writeMem(0xaaba, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9323);
        EXPECT(gbc.pc(), 0xaabc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaba), 0xcb);
        EXPECT(gbc.readMem(0xaabb), 0x54);
        // CB 54 015C
        gbc.setState(0x55c3, 0xcd7, 0x3e60, 0x1bbd, 0x7ea7, 0x5fcd, 0x0, 0x1);
        gbc.writeMem(0x55c3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xcd7);
        EXPECT(gbc.pc(), 0x55c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 015D
        gbc.setState(0xa36f, 0xa533, 0xf5b0, 0x5a0f, 0x36c0, 0x999e, 0x0, 0x0);
        gbc.writeMem(0xa36f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa533);
        EXPECT(gbc.pc(), 0xa371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa36f), 0xcb);
        EXPECT(gbc.readMem(0xa370), 0x54);
        // CB 54 015E
        gbc.setState(0x9170, 0x3ab5, 0xd7f0, 0x7237, 0x27bd, 0xad1f, 0x1, 0x0);
        gbc.writeMem(0x9170, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3ab5);
        EXPECT(gbc.pc(), 0x9172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9170), 0xcb);
        EXPECT(gbc.readMem(0x9171), 0x54);
        // CB 54 015F
        gbc.setState(0x12e1, 0xa8d7, 0x29c0, 0x61f7, 0x1fc8, 0xc16, 0x0, 0x0);
        gbc.writeMem(0x12e1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa8d7);
        EXPECT(gbc.pc(), 0x12e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0161
        gbc.setState(0xa08e, 0xf7e5, 0x6a60, 0xae5a, 0x359, 0x615d, 0x0, 0x0);
        gbc.writeMem(0xa08e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf7e5);
        EXPECT(gbc.pc(), 0xa090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08e), 0xcb);
        EXPECT(gbc.readMem(0xa08f), 0x54);
        // CB 54 0162
        gbc.setState(0x8d45, 0xf592, 0xc340, 0x2c5d, 0x30f4, 0x9513, 0x1, 0x0);
        gbc.writeMem(0x8d45, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf592);
        EXPECT(gbc.pc(), 0x8d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d45), 0xcb);
        EXPECT(gbc.readMem(0x8d46), 0x54);
        // CB 54 0163
        gbc.setState(0xa81c, 0xb4b1, 0xa110, 0xe9bc, 0x27d, 0xc28b, 0x0, 0x1);
        gbc.writeMem(0xa81c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb4b1);
        EXPECT(gbc.pc(), 0xa81e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa81c), 0xcb);
        EXPECT(gbc.readMem(0xa81d), 0x54);
        // CB 54 0164
        gbc.setState(0xc929, 0x3836, 0x1e30, 0x16da, 0x2cfe, 0x6733, 0x1, 0x1);
        gbc.writeMem(0xc929, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3836);
        EXPECT(gbc.pc(), 0xc92b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc929), 0xcb);
        EXPECT(gbc.readMem(0xc92a), 0x54);
        // CB 54 0165
        gbc.setState(0xd284, 0xa03d, 0xa910, 0x3161, 0x6bad, 0x50c7, 0x0, 0x0);
        gbc.writeMem(0xd284, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa03d);
        EXPECT(gbc.pc(), 0xd286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd284), 0xcb);
        EXPECT(gbc.readMem(0xd285), 0x54);
        // CB 54 0166
        gbc.setState(0xcab4, 0x6a64, 0x6030, 0x6b3a, 0x3e99, 0xeaf2, 0x1, 0x1);
        gbc.writeMem(0xcab4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6a64);
        EXPECT(gbc.pc(), 0xcab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab4), 0xcb);
        EXPECT(gbc.readMem(0xcab5), 0x54);
        // CB 54 0167
        gbc.setState(0x7658, 0x7188, 0xd6d0, 0xec77, 0xeb11, 0x5866, 0x1, 0x0);
        gbc.writeMem(0x7658, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7188);
        EXPECT(gbc.pc(), 0x765a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0168
        gbc.setState(0xa910, 0x193b, 0x3250, 0xc25d, 0x62b9, 0x2a05, 0x1, 0x1);
        gbc.writeMem(0xa910, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x193b);
        EXPECT(gbc.pc(), 0xa912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa910), 0xcb);
        EXPECT(gbc.readMem(0xa911), 0x54);
        // CB 54 0169
        gbc.setState(0x1a7e, 0x1a95, 0x10f0, 0xb10e, 0x6400, 0x4e7c, 0x1, 0x0);
        gbc.writeMem(0x1a7e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1a95);
        EXPECT(gbc.pc(), 0x1a80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 016A
        gbc.setState(0x1a0c, 0x174e, 0x4ae0, 0x69de, 0x69f8, 0xfee8, 0x0, 0x1);
        gbc.writeMem(0x1a0c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x174e);
        EXPECT(gbc.pc(), 0x1a0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 016B
        gbc.setState(0x7a3f, 0x7b84, 0xac00, 0xbb9e, 0x1b07, 0x1eb2, 0x1, 0x1);
        gbc.writeMem(0x7a3f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7b84);
        EXPECT(gbc.pc(), 0x7a41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 016C
        gbc.setState(0xade8, 0xc20c, 0x9cb0, 0xfb37, 0xae1a, 0x5b6e, 0x0, 0x1);
        gbc.writeMem(0xade8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc20c);
        EXPECT(gbc.pc(), 0xadea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade8), 0xcb);
        EXPECT(gbc.readMem(0xade9), 0x54);
        // CB 54 016D
        gbc.setState(0x13ab, 0x2445, 0x6820, 0xf463, 0x81f6, 0xefe4, 0x1, 0x1);
        gbc.writeMem(0x13ab, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2445);
        EXPECT(gbc.pc(), 0x13ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 016E
        gbc.setState(0x4f73, 0x4488, 0xa6e0, 0xb761, 0xe7bc, 0x8d3c, 0x1, 0x1);
        gbc.writeMem(0x4f73, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4488);
        EXPECT(gbc.pc(), 0x4f75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 016F
        gbc.setState(0x10d3, 0x8bec, 0x1160, 0x1c97, 0xf0c0, 0x2794, 0x1, 0x0);
        gbc.writeMem(0x10d3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8bec);
        EXPECT(gbc.pc(), 0x10d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0170
        gbc.setState(0xb309, 0xf022, 0x83f0, 0x99e4, 0xf01d, 0xdc9b, 0x0, 0x0);
        gbc.writeMem(0xb309, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf022);
        EXPECT(gbc.pc(), 0xb30b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb309), 0xcb);
        EXPECT(gbc.readMem(0xb30a), 0x54);
        // CB 54 0171
        gbc.setState(0xb8b, 0xa3e1, 0x8c10, 0x19ed, 0xe266, 0xfee7, 0x1, 0x0);
        gbc.writeMem(0xb8b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa3e1);
        EXPECT(gbc.pc(), 0xb8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0172
        gbc.setState(0xc812, 0x9943, 0x7df0, 0x2872, 0x3606, 0x898a, 0x0, 0x0);
        gbc.writeMem(0xc812, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9943);
        EXPECT(gbc.pc(), 0xc814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc812), 0xcb);
        EXPECT(gbc.readMem(0xc813), 0x54);
        // CB 54 0173
        gbc.setState(0x9458, 0x600c, 0x52b0, 0xc3b4, 0x89e4, 0x831, 0x0, 0x1);
        gbc.writeMem(0x9458, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x600c);
        EXPECT(gbc.pc(), 0x945a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9458), 0xcb);
        EXPECT(gbc.readMem(0x9459), 0x54);
        // CB 54 0174
        gbc.setState(0x2bbf, 0xdc0, 0x4190, 0x9c18, 0x9a6, 0x1e51, 0x1, 0x1);
        gbc.writeMem(0x2bbf, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xdc0);
        EXPECT(gbc.pc(), 0x2bc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0176
        gbc.setState(0x5825, 0xb85a, 0x7e40, 0x3ed0, 0x4fae, 0x75e, 0x0, 0x0);
        gbc.writeMem(0x5825, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb85a);
        EXPECT(gbc.pc(), 0x5827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0177
        gbc.setState(0xeb8e, 0xd192, 0x80, 0xec56, 0x92bd, 0x264e, 0x0, 0x1);
        gbc.writeMem(0xeb8e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd192);
        EXPECT(gbc.pc(), 0xeb90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb8e), 0xcb);
        EXPECT(gbc.readMem(0xeb8f), 0x54);
        // CB 54 0178
        gbc.setState(0x7981, 0x4367, 0xa320, 0xa392, 0x7294, 0x4d7c, 0x1, 0x1);
        gbc.writeMem(0x7981, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4367);
        EXPECT(gbc.pc(), 0x7983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0179
        gbc.setState(0x910f, 0xefba, 0x71d0, 0xac1c, 0x1bfc, 0xcda6, 0x0, 0x0);
        gbc.writeMem(0x910f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xefba);
        EXPECT(gbc.pc(), 0x9111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x910f), 0xcb);
        EXPECT(gbc.readMem(0x9110), 0x54);
        // CB 54 017A
        gbc.setState(0xa17, 0x7e84, 0xf1b0, 0x2b12, 0x57b7, 0x1313, 0x1, 0x1);
        gbc.writeMem(0xa17, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7e84);
        EXPECT(gbc.pc(), 0xa19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 017B
        gbc.setState(0xcc6a, 0xa149, 0xdda0, 0x3252, 0xf1dc, 0x6d7f, 0x0, 0x1);
        gbc.writeMem(0xcc6a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa149);
        EXPECT(gbc.pc(), 0xcc6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc6a), 0xcb);
        EXPECT(gbc.readMem(0xcc6b), 0x54);
        // CB 54 017C
        gbc.setState(0x1670, 0x9662, 0xf040, 0x8525, 0xf967, 0x8ab8, 0x0, 0x1);
        gbc.writeMem(0x1670, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9662);
        EXPECT(gbc.pc(), 0x1672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 017D
        gbc.setState(0xab56, 0x823e, 0xf110, 0xfb87, 0xcda, 0xb053, 0x1, 0x1);
        gbc.writeMem(0xab56, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x823e);
        EXPECT(gbc.pc(), 0xab58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab56), 0xcb);
        EXPECT(gbc.readMem(0xab57), 0x54);
        // CB 54 017F
        gbc.setState(0x9f17, 0xdcc5, 0x3100, 0xfda4, 0x818e, 0x2651, 0x1, 0x0);
        gbc.writeMem(0x9f17, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xdcc5);
        EXPECT(gbc.pc(), 0x9f19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f17), 0xcb);
        EXPECT(gbc.readMem(0x9f18), 0x54);
        // CB 54 0180
        gbc.setState(0xbf14, 0x68b7, 0x9ce0, 0x4878, 0x1082, 0xd82f, 0x0, 0x0);
        gbc.writeMem(0xbf14, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x68b7);
        EXPECT(gbc.pc(), 0xbf16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf14), 0xcb);
        EXPECT(gbc.readMem(0xbf15), 0x54);
        // CB 54 0181
        gbc.setState(0x727d, 0x5724, 0x9b30, 0xab96, 0x436f, 0x49cb, 0x0, 0x1);
        gbc.writeMem(0x727d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5724);
        EXPECT(gbc.pc(), 0x727f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0182
        gbc.setState(0x5d20, 0xa309, 0xf3f0, 0x687d, 0x5448, 0xf55f, 0x1, 0x1);
        gbc.writeMem(0x5d20, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa309);
        EXPECT(gbc.pc(), 0x5d22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0183
        gbc.setState(0xd4f3, 0xd894, 0x5c50, 0x3d40, 0xebaf, 0xd39, 0x1, 0x1);
        gbc.writeMem(0xd4f3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd894);
        EXPECT(gbc.pc(), 0xd4f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f3), 0xcb);
        EXPECT(gbc.readMem(0xd4f4), 0x54);
        // CB 54 0184
        gbc.setState(0x567e, 0xbc89, 0xd110, 0x9e64, 0xeff4, 0x1c13, 0x0, 0x0);
        gbc.writeMem(0x567e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbc89);
        EXPECT(gbc.pc(), 0x5680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0185
        gbc.setState(0x15ef, 0x7e69, 0x9560, 0x2637, 0x5a09, 0xde1b, 0x0, 0x1);
        gbc.writeMem(0x15ef, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7e69);
        EXPECT(gbc.pc(), 0x15f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0186
        gbc.setState(0xe926, 0x1563, 0x7c80, 0x6874, 0xc199, 0xf833, 0x1, 0x0);
        gbc.writeMem(0xe926, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1563);
        EXPECT(gbc.pc(), 0xe928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe926), 0xcb);
        EXPECT(gbc.readMem(0xe927), 0x54);
        // CB 54 0187
        gbc.setState(0x715f, 0xe358, 0x38c0, 0x6466, 0x189a, 0x70f, 0x1, 0x1);
        gbc.writeMem(0x715f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe358);
        EXPECT(gbc.pc(), 0x7161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0188
        gbc.setState(0x24ec, 0x1d96, 0xe630, 0x8a91, 0x4226, 0x6168, 0x0, 0x0);
        gbc.writeMem(0x24ec, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1d96);
        EXPECT(gbc.pc(), 0x24ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0189
        gbc.setState(0x173c, 0x3fc1, 0x1f70, 0x6920, 0x4211, 0x72ce, 0x1, 0x0);
        gbc.writeMem(0x173c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3fc1);
        EXPECT(gbc.pc(), 0x173e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 018A
        gbc.setState(0x65b0, 0xf85c, 0x3300, 0x117b, 0x565f, 0x9223, 0x0, 0x1);
        gbc.writeMem(0x65b0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf85c);
        EXPECT(gbc.pc(), 0x65b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 018B
        gbc.setState(0x76ad, 0x164a, 0xd610, 0x3d49, 0xdd9d, 0x63c0, 0x1, 0x0);
        gbc.writeMem(0x76ad, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x164a);
        EXPECT(gbc.pc(), 0x76af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 018C
        gbc.setState(0x4b52, 0x8780, 0x890, 0x7086, 0xbadf, 0xe8bd, 0x0, 0x0);
        gbc.writeMem(0x4b52, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8780);
        EXPECT(gbc.pc(), 0x4b54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 018D
        gbc.setState(0x53fe, 0x7fe2, 0xadb0, 0xd27e, 0xe2c1, 0xad78, 0x0, 0x0);
        gbc.writeMem(0x53fe, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7fe2);
        EXPECT(gbc.pc(), 0x5400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 018E
        gbc.setState(0x6eba, 0x3d4f, 0x7700, 0x43d9, 0xe66, 0x3346, 0x0, 0x0);
        gbc.writeMem(0x6eba, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3d4f);
        EXPECT(gbc.pc(), 0x6ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 018F
        gbc.setState(0x354c, 0xd231, 0xd480, 0x202b, 0xbba0, 0x5060, 0x0, 0x0);
        gbc.writeMem(0x354c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd231);
        EXPECT(gbc.pc(), 0x354e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0190
        gbc.setState(0x136, 0x86d2, 0x1a0, 0x176b, 0x6670, 0x15db, 0x1, 0x0);
        gbc.writeMem(0x136, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x86d2);
        EXPECT(gbc.pc(), 0x138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0191
        gbc.setState(0xc20a, 0xba6b, 0xe700, 0xa105, 0x7b8e, 0xe1c, 0x1, 0x1);
        gbc.writeMem(0xc20a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xba6b);
        EXPECT(gbc.pc(), 0xc20c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc20a), 0xcb);
        EXPECT(gbc.readMem(0xc20b), 0x54);
        // CB 54 0192
        gbc.setState(0xcb49, 0x4aa9, 0x1460, 0xdc7c, 0x5c35, 0xab79, 0x0, 0x1);
        gbc.writeMem(0xcb49, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4aa9);
        EXPECT(gbc.pc(), 0xcb4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb49), 0xcb);
        EXPECT(gbc.readMem(0xcb4a), 0x54);
        // CB 54 0193
        gbc.setState(0x489e, 0x5258, 0x76a0, 0xf6bc, 0x69fa, 0xe863, 0x0, 0x1);
        gbc.writeMem(0x489e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5258);
        EXPECT(gbc.pc(), 0x48a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0194
        gbc.setState(0x4810, 0x7e45, 0x1f40, 0x7643, 0x290c, 0x3816, 0x1, 0x0);
        gbc.writeMem(0x4810, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7e45);
        EXPECT(gbc.pc(), 0x4812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0195
        gbc.setState(0x9713, 0xf9dc, 0x86d0, 0x17a5, 0xde91, 0xe94d, 0x0, 0x1);
        gbc.writeMem(0x9713, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf9dc);
        EXPECT(gbc.pc(), 0x9715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9713), 0xcb);
        EXPECT(gbc.readMem(0x9714), 0x54);
        // CB 54 0197
        gbc.setState(0x9dfe, 0x6cf, 0xd180, 0xd27b, 0xb596, 0x5295, 0x0, 0x1);
        gbc.writeMem(0x9dfe, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6cf);
        EXPECT(gbc.pc(), 0x9e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dfe), 0xcb);
        EXPECT(gbc.readMem(0x9dff), 0x54);
        // CB 54 0198
        gbc.setState(0x33b3, 0xbd5, 0x5e30, 0x2c2, 0x1b96, 0x2f8a, 0x1, 0x1);
        gbc.writeMem(0x33b3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbd5);
        EXPECT(gbc.pc(), 0x33b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0199
        gbc.setState(0xc9ed, 0xb46d, 0x6e10, 0xb0be, 0x4d31, 0x5e4b, 0x0, 0x1);
        gbc.writeMem(0xc9ed, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb46d);
        EXPECT(gbc.pc(), 0xc9ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ed), 0xcb);
        EXPECT(gbc.readMem(0xc9ee), 0x54);
        // CB 54 019A
        gbc.setState(0xcd8, 0x535d, 0xb80, 0x6e96, 0x8615, 0x4541, 0x1, 0x1);
        gbc.writeMem(0xcd8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x535d);
        EXPECT(gbc.pc(), 0xcda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 019B
        gbc.setState(0x1325, 0x4205, 0x950, 0xde9a, 0xf0a3, 0xc612, 0x1, 0x0);
        gbc.writeMem(0x1325, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4205);
        EXPECT(gbc.pc(), 0x1327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 019C
        gbc.setState(0x9b44, 0x6b72, 0x5700, 0xea87, 0x6db9, 0xc224, 0x1, 0x1);
        gbc.writeMem(0x9b44, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6b72);
        EXPECT(gbc.pc(), 0x9b46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b44), 0xcb);
        EXPECT(gbc.readMem(0x9b45), 0x54);
        // CB 54 019D
        gbc.setState(0x3ae0, 0x6d44, 0xfb90, 0x124e, 0xaaf5, 0x169b, 0x1, 0x1);
        gbc.writeMem(0x3ae0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6d44);
        EXPECT(gbc.pc(), 0x3ae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 019E
        gbc.setState(0xdb95, 0x7919, 0x8f70, 0x12eb, 0x97f0, 0x7c65, 0x1, 0x1);
        gbc.writeMem(0xdb95, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7919);
        EXPECT(gbc.pc(), 0xdb97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb95), 0xcb);
        EXPECT(gbc.readMem(0xdb96), 0x54);
        // CB 54 019F
        gbc.setState(0x7588, 0x912e, 0xcba0, 0xc6d, 0x2526, 0xa634, 0x0, 0x1);
        gbc.writeMem(0x7588, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x912e);
        EXPECT(gbc.pc(), 0x758a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01A0
        gbc.setState(0x3f4, 0xa1a5, 0x9860, 0x69f0, 0x397a, 0x806c, 0x0, 0x1);
        gbc.writeMem(0x3f4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa1a5);
        EXPECT(gbc.pc(), 0x3f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01A1
        gbc.setState(0x30d6, 0xb98d, 0xb700, 0x9ab0, 0xc112, 0x695b, 0x1, 0x1);
        gbc.writeMem(0x30d6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb98d);
        EXPECT(gbc.pc(), 0x30d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01A2
        gbc.setState(0x155e, 0x145d, 0x6170, 0x87b6, 0x34da, 0x9890, 0x0, 0x0);
        gbc.writeMem(0x155e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x145d);
        EXPECT(gbc.pc(), 0x1560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01A3
        gbc.setState(0x9aba, 0x9156, 0xbca0, 0x148f, 0xb662, 0xfca7, 0x0, 0x0);
        gbc.writeMem(0x9aba, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9156);
        EXPECT(gbc.pc(), 0x9abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aba), 0xcb);
        EXPECT(gbc.readMem(0x9abb), 0x54);
        // CB 54 01A4
        gbc.setState(0xc255, 0xc3dc, 0xc160, 0xf0fd, 0xcc31, 0x291a, 0x0, 0x0);
        gbc.writeMem(0xc255, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc3dc);
        EXPECT(gbc.pc(), 0xc257);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc255), 0xcb);
        EXPECT(gbc.readMem(0xc256), 0x54);
        // CB 54 01A5
        gbc.setState(0x63e5, 0x5336, 0xb060, 0x6707, 0xac5c, 0xdeb7, 0x1, 0x1);
        gbc.writeMem(0x63e5, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5336);
        EXPECT(gbc.pc(), 0x63e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01A6
        gbc.setState(0x99f0, 0xbbe, 0xc2f0, 0xc2b6, 0x280a, 0x8624, 0x1, 0x0);
        gbc.writeMem(0x99f0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbbe);
        EXPECT(gbc.pc(), 0x99f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f0), 0xcb);
        EXPECT(gbc.readMem(0x99f1), 0x54);
        // CB 54 01A7
        gbc.setState(0x3b9a, 0x4439, 0xc1a0, 0xb897, 0x1957, 0x2c79, 0x0, 0x1);
        gbc.writeMem(0x3b9a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4439);
        EXPECT(gbc.pc(), 0x3b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01A8
        gbc.setState(0x53d1, 0xe624, 0x53f0, 0x398f, 0x1296, 0xe630, 0x0, 0x0);
        gbc.writeMem(0x53d1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe624);
        EXPECT(gbc.pc(), 0x53d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01A9
        gbc.setState(0xcfc4, 0xeb60, 0x93e0, 0x4c44, 0x9530, 0x578a, 0x1, 0x0);
        gbc.writeMem(0xcfc4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xeb60);
        EXPECT(gbc.pc(), 0xcfc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfc4), 0xcb);
        EXPECT(gbc.readMem(0xcfc5), 0x54);
        // CB 54 01AA
        gbc.setState(0xe333, 0x9e57, 0x4390, 0xb80e, 0x5dcb, 0x8129, 0x1, 0x0);
        gbc.writeMem(0xe333, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9e57);
        EXPECT(gbc.pc(), 0xe335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe333), 0xcb);
        EXPECT(gbc.readMem(0xe334), 0x54);
        // CB 54 01AB
        gbc.setState(0xcd3d, 0xe526, 0x2830, 0x8371, 0xa742, 0xee18, 0x0, 0x1);
        gbc.writeMem(0xcd3d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe526);
        EXPECT(gbc.pc(), 0xcd3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd3d), 0xcb);
        EXPECT(gbc.readMem(0xcd3e), 0x54);
        // CB 54 01AC
        gbc.setState(0xd835, 0x88c4, 0x980, 0x710e, 0xee3b, 0x17c7, 0x0, 0x1);
        gbc.writeMem(0xd835, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x88c4);
        EXPECT(gbc.pc(), 0xd837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd835), 0xcb);
        EXPECT(gbc.readMem(0xd836), 0x54);
        // CB 54 01AD
        gbc.setState(0xadc, 0x3a44, 0xe900, 0x8742, 0xa8e1, 0x8ba1, 0x0, 0x0);
        gbc.writeMem(0xadc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3a44);
        EXPECT(gbc.pc(), 0xade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01AE
        gbc.setState(0x429a, 0x9cb4, 0xb140, 0xcd01, 0xa25a, 0xde68, 0x1, 0x0);
        gbc.writeMem(0x429a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9cb4);
        EXPECT(gbc.pc(), 0x429c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01B0
        gbc.setState(0x2b0a, 0xa0df, 0x2df0, 0x65b9, 0xecd6, 0x4bf7, 0x1, 0x0);
        gbc.writeMem(0x2b0a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa0df);
        EXPECT(gbc.pc(), 0x2b0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01B1
        gbc.setState(0x8b60, 0xab1d, 0x1050, 0xacda, 0xeab, 0x985d, 0x1, 0x0);
        gbc.writeMem(0x8b60, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xab1d);
        EXPECT(gbc.pc(), 0x8b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b60), 0xcb);
        EXPECT(gbc.readMem(0x8b61), 0x54);
        // CB 54 01B2
        gbc.setState(0x11a3, 0xd90c, 0xf3c0, 0xb28e, 0x5a57, 0xeb4, 0x0, 0x1);
        gbc.writeMem(0x11a3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd90c);
        EXPECT(gbc.pc(), 0x11a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01B5
        gbc.setState(0x1d0e, 0x8e25, 0x650, 0xed5e, 0x310d, 0x8a21, 0x0, 0x1);
        gbc.writeMem(0x1d0e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8e25);
        EXPECT(gbc.pc(), 0x1d10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01B6
        gbc.setState(0x566b, 0x42da, 0xfbb0, 0xb18a, 0xacb6, 0xc493, 0x1, 0x0);
        gbc.writeMem(0x566b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x42da);
        EXPECT(gbc.pc(), 0x566d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01B7
        gbc.setState(0xafdb, 0x6c93, 0x270, 0x6b80, 0xe331, 0x39f2, 0x0, 0x0);
        gbc.writeMem(0xafdb, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6c93);
        EXPECT(gbc.pc(), 0xafdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafdb), 0xcb);
        EXPECT(gbc.readMem(0xafdc), 0x54);
        // CB 54 01B8
        gbc.setState(0x9e7b, 0x18b9, 0x8e40, 0x6f5, 0xaf89, 0xa235, 0x1, 0x0);
        gbc.writeMem(0x9e7b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x18b9);
        EXPECT(gbc.pc(), 0x9e7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e7b), 0xcb);
        EXPECT(gbc.readMem(0x9e7c), 0x54);
        // CB 54 01B9
        gbc.setState(0xc31b, 0xd3c4, 0x59a0, 0xa3ba, 0x2ee5, 0xe8b9, 0x1, 0x1);
        gbc.writeMem(0xc31b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd3c4);
        EXPECT(gbc.pc(), 0xc31d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc31b), 0xcb);
        EXPECT(gbc.readMem(0xc31c), 0x54);
        // CB 54 01BA
        gbc.setState(0x2824, 0xd827, 0x4900, 0x77af, 0x967d, 0x5b6, 0x0, 0x0);
        gbc.writeMem(0x2824, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd827);
        EXPECT(gbc.pc(), 0x2826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01BB
        gbc.setState(0xefb6, 0xa748, 0x35c0, 0x20ce, 0xb634, 0xb6c2, 0x0, 0x0);
        gbc.writeMem(0xefb6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa748);
        EXPECT(gbc.pc(), 0xefb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefb6), 0xcb);
        EXPECT(gbc.readMem(0xefb7), 0x54);
        // CB 54 01BC
        gbc.setState(0xbfcc, 0xbd0c, 0x6a50, 0x5ef1, 0xaf24, 0x62f3, 0x1, 0x0);
        gbc.writeMem(0xbfcc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbd0c);
        EXPECT(gbc.pc(), 0xbfce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfcc), 0xcb);
        EXPECT(gbc.readMem(0xbfcd), 0x54);
        // CB 54 01BD
        gbc.setState(0x8863, 0xb18f, 0x16c0, 0x3114, 0x2192, 0x90ff, 0x1, 0x0);
        gbc.writeMem(0x8863, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb18f);
        EXPECT(gbc.pc(), 0x8865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8863), 0xcb);
        EXPECT(gbc.readMem(0x8864), 0x54);
        // CB 54 01BE
        gbc.setState(0x8a5f, 0x6eb8, 0x38e0, 0x3732, 0x881a, 0xc9a, 0x0, 0x0);
        gbc.writeMem(0x8a5f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6eb8);
        EXPECT(gbc.pc(), 0x8a61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a5f), 0xcb);
        EXPECT(gbc.readMem(0x8a60), 0x54);
        // CB 54 01BF
        gbc.setState(0x98c8, 0x6000, 0x6680, 0x7af9, 0x3cce, 0xca1d, 0x1, 0x1);
        gbc.writeMem(0x98c8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6000);
        EXPECT(gbc.pc(), 0x98ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c8), 0xcb);
        EXPECT(gbc.readMem(0x98c9), 0x54);
        // CB 54 01C0
        gbc.setState(0xaa65, 0x3ffb, 0x5ef0, 0xa10, 0x937e, 0x6a2f, 0x0, 0x0);
        gbc.writeMem(0xaa65, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3ffb);
        EXPECT(gbc.pc(), 0xaa67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa65), 0xcb);
        EXPECT(gbc.readMem(0xaa66), 0x54);
        // CB 54 01C1
        gbc.setState(0x91f3, 0x2032, 0xa980, 0x471e, 0x9eaa, 0x1404, 0x1, 0x0);
        gbc.writeMem(0x91f3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2032);
        EXPECT(gbc.pc(), 0x91f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f3), 0xcb);
        EXPECT(gbc.readMem(0x91f4), 0x54);
        // CB 54 01C2
        gbc.setState(0xe5be, 0xa52, 0x92e0, 0x3787, 0xce94, 0xf5c9, 0x1, 0x0);
        gbc.writeMem(0xe5be, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa52);
        EXPECT(gbc.pc(), 0xe5c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5be), 0xcb);
        EXPECT(gbc.readMem(0xe5bf), 0x54);
        // CB 54 01C3
        gbc.setState(0x1347, 0x424d, 0x1610, 0xb895, 0x4c41, 0x4b28, 0x0, 0x0);
        gbc.writeMem(0x1347, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x424d);
        EXPECT(gbc.pc(), 0x1349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01C4
        gbc.setState(0x83, 0x262b, 0x3900, 0xdde3, 0x6876, 0x5456, 0x0, 0x0);
        gbc.writeMem(0x83, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x262b);
        EXPECT(gbc.pc(), 0x85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01C5
        gbc.setState(0xbc13, 0x31c7, 0x7b70, 0xaa6e, 0xa9f9, 0x9788, 0x1, 0x1);
        gbc.writeMem(0xbc13, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x31c7);
        EXPECT(gbc.pc(), 0xbc15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc13), 0xcb);
        EXPECT(gbc.readMem(0xbc14), 0x54);
        // CB 54 01C6
        gbc.setState(0x70bb, 0x4815, 0x8cc0, 0x264e, 0x34a2, 0x58e9, 0x1, 0x1);
        gbc.writeMem(0x70bb, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4815);
        EXPECT(gbc.pc(), 0x70bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01C7
        gbc.setState(0xe7d1, 0x3c16, 0x32a0, 0x8945, 0x488e, 0x8b0b, 0x1, 0x1);
        gbc.writeMem(0xe7d1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3c16);
        EXPECT(gbc.pc(), 0xe7d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7d1), 0xcb);
        EXPECT(gbc.readMem(0xe7d2), 0x54);
        // CB 54 01C8
        gbc.setState(0x4c58, 0x5ce2, 0xb860, 0xc563, 0x2681, 0x1877, 0x0, 0x0);
        gbc.writeMem(0x4c58, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5ce2);
        EXPECT(gbc.pc(), 0x4c5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01C9
        gbc.setState(0xcb28, 0xcfff, 0xe150, 0x2df3, 0xad12, 0xfe62, 0x0, 0x1);
        gbc.writeMem(0xcb28, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcfff);
        EXPECT(gbc.pc(), 0xcb2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb28), 0xcb);
        EXPECT(gbc.readMem(0xcb29), 0x54);
        // CB 54 01CA
        gbc.setState(0x15c6, 0xc53d, 0xba50, 0xaaef, 0x41ff, 0xd5f8, 0x0, 0x1);
        gbc.writeMem(0x15c6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc53d);
        EXPECT(gbc.pc(), 0x15c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01CB
        gbc.setState(0xa9bd, 0x8ab3, 0x8210, 0x1f5f, 0xfa41, 0x859d, 0x1, 0x1);
        gbc.writeMem(0xa9bd, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8ab3);
        EXPECT(gbc.pc(), 0xa9bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9bd), 0xcb);
        EXPECT(gbc.readMem(0xa9be), 0x54);
        // CB 54 01CC
        gbc.setState(0x7683, 0xc26c, 0x6180, 0xf98b, 0x1682, 0x7a3a, 0x1, 0x0);
        gbc.writeMem(0x7683, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc26c);
        EXPECT(gbc.pc(), 0x7685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01CD
        gbc.setState(0xaaa7, 0xc508, 0x5f60, 0x52e4, 0x3679, 0xd458, 0x1, 0x0);
        gbc.writeMem(0xaaa7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc508);
        EXPECT(gbc.pc(), 0xaaa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa7), 0xcb);
        EXPECT(gbc.readMem(0xaaa8), 0x54);
        // CB 54 01CF
        gbc.setState(0x5995, 0x48a2, 0x4e10, 0x14fe, 0x13df, 0x9d5, 0x1, 0x1);
        gbc.writeMem(0x5995, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x48a2);
        EXPECT(gbc.pc(), 0x5997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01D0
        gbc.setState(0xee1, 0x95ae, 0xe8f0, 0xd483, 0x6806, 0x10b, 0x0, 0x1);
        gbc.writeMem(0xee1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x95ae);
        EXPECT(gbc.pc(), 0xee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01D1
        gbc.setState(0x8970, 0x5478, 0xf550, 0xa880, 0x884a, 0xb4d2, 0x0, 0x0);
        gbc.writeMem(0x8970, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5478);
        EXPECT(gbc.pc(), 0x8972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8970), 0xcb);
        EXPECT(gbc.readMem(0x8971), 0x54);
        // CB 54 01D2
        gbc.setState(0x79ea, 0xf9d8, 0xfeb0, 0xf831, 0xa275, 0x446e, 0x0, 0x0);
        gbc.writeMem(0x79ea, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf9d8);
        EXPECT(gbc.pc(), 0x79ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01D3
        gbc.setState(0x4fcf, 0x32cc, 0xb930, 0xed27, 0x59b8, 0x78d0, 0x1, 0x1);
        gbc.writeMem(0x4fcf, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x32cc);
        EXPECT(gbc.pc(), 0x4fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01D4
        gbc.setState(0xc736, 0xc51f, 0x3cb0, 0x9f8e, 0xe71, 0x1b29, 0x0, 0x0);
        gbc.writeMem(0xc736, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc51f);
        EXPECT(gbc.pc(), 0xc738);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc736), 0xcb);
        EXPECT(gbc.readMem(0xc737), 0x54);
        // CB 54 01D5
        gbc.setState(0x5d93, 0x7ff, 0x540, 0xc8e2, 0xb0a, 0x45ab, 0x1, 0x1);
        gbc.writeMem(0x5d93, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7ff);
        EXPECT(gbc.pc(), 0x5d95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01D6
        gbc.setState(0xacab, 0x4086, 0x8c0, 0x8f1c, 0xe399, 0x6733, 0x0, 0x1);
        gbc.writeMem(0xacab, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4086);
        EXPECT(gbc.pc(), 0xacad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacab), 0xcb);
        EXPECT(gbc.readMem(0xacac), 0x54);
        // CB 54 01D7
        gbc.setState(0x38b, 0xe94e, 0x7c40, 0xfc7f, 0x977, 0x6121, 0x0, 0x1);
        gbc.writeMem(0x38b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe94e);
        EXPECT(gbc.pc(), 0x38d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01D8
        gbc.setState(0xc24e, 0x8a5c, 0x4b20, 0xbc3f, 0x49a4, 0xd90d, 0x1, 0x1);
        gbc.writeMem(0xc24e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8a5c);
        EXPECT(gbc.pc(), 0xc250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc24e), 0xcb);
        EXPECT(gbc.readMem(0xc24f), 0x54);
        // CB 54 01D9
        gbc.setState(0xe326, 0x5ccf, 0x7390, 0x40e2, 0x3d98, 0xd6fb, 0x0, 0x0);
        gbc.writeMem(0xe326, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5ccf);
        EXPECT(gbc.pc(), 0xe328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe326), 0xcb);
        EXPECT(gbc.readMem(0xe327), 0x54);
        // CB 54 01DB
        gbc.setState(0xb34f, 0xe144, 0x3c80, 0x7c74, 0x4747, 0x6a65, 0x0, 0x0);
        gbc.writeMem(0xb34f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe144);
        EXPECT(gbc.pc(), 0xb351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb34f), 0xcb);
        EXPECT(gbc.readMem(0xb350), 0x54);
        // CB 54 01DC
        gbc.setState(0x816a, 0x177f, 0x5a20, 0xd84c, 0x5634, 0xb092, 0x0, 0x0);
        gbc.writeMem(0x816a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x177f);
        EXPECT(gbc.pc(), 0x816c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x816a), 0xcb);
        EXPECT(gbc.readMem(0x816b), 0x54);
        // CB 54 01DD
        gbc.setState(0xbe77, 0x2c82, 0x85a0, 0xe337, 0x911f, 0x2986, 0x1, 0x1);
        gbc.writeMem(0xbe77, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2c82);
        EXPECT(gbc.pc(), 0xbe79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe77), 0xcb);
        EXPECT(gbc.readMem(0xbe78), 0x54);
        // CB 54 01DE
        gbc.setState(0xff8, 0x4ba0, 0xb900, 0x925e, 0xa084, 0xa374, 0x1, 0x0);
        gbc.writeMem(0xff8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4ba0);
        EXPECT(gbc.pc(), 0xffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01DF
        gbc.setState(0xeda7, 0xa817, 0x3280, 0x998f, 0x70da, 0x69a0, 0x0, 0x1);
        gbc.writeMem(0xeda7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa817);
        EXPECT(gbc.pc(), 0xeda9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda7), 0xcb);
        EXPECT(gbc.readMem(0xeda8), 0x54);
        // CB 54 01E0
        gbc.setState(0x6c69, 0x445e, 0x17b0, 0xa166, 0xd5be, 0x75c, 0x0, 0x0);
        gbc.writeMem(0x6c69, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x445e);
        EXPECT(gbc.pc(), 0x6c6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01E1
        gbc.setState(0xa03c, 0xa563, 0x58c0, 0x402, 0xe48d, 0xa3f6, 0x0, 0x1);
        gbc.writeMem(0xa03c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa563);
        EXPECT(gbc.pc(), 0xa03e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa03c), 0xcb);
        EXPECT(gbc.readMem(0xa03d), 0x54);
        // CB 54 01E2
        gbc.setState(0x2f79, 0x2f4, 0x3040, 0xc037, 0x7829, 0xb052, 0x0, 0x1);
        gbc.writeMem(0x2f79, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2f4);
        EXPECT(gbc.pc(), 0x2f7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01E3
        gbc.setState(0x148c, 0x89f8, 0xc870, 0x5847, 0x1977, 0x9ad6, 0x1, 0x0);
        gbc.writeMem(0x148c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x89f8);
        EXPECT(gbc.pc(), 0x148e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01E4
        gbc.setState(0xbf86, 0xb346, 0xfd0, 0xde7d, 0xcdb8, 0x22c1, 0x1, 0x0);
        gbc.writeMem(0xbf86, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb346);
        EXPECT(gbc.pc(), 0xbf88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf86), 0xcb);
        EXPECT(gbc.readMem(0xbf87), 0x54);
        // CB 54 01E5
        gbc.setState(0xec39, 0x4453, 0x3b70, 0xe030, 0x7a67, 0x1886, 0x0, 0x1);
        gbc.writeMem(0xec39, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4453);
        EXPECT(gbc.pc(), 0xec3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec39), 0xcb);
        EXPECT(gbc.readMem(0xec3a), 0x54);
        // CB 54 01E6
        gbc.setState(0x48ee, 0x8cdd, 0xd160, 0x4a0, 0x2702, 0xe3c2, 0x0, 0x1);
        gbc.writeMem(0x48ee, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8cdd);
        EXPECT(gbc.pc(), 0x48f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01E7
        gbc.setState(0x1944, 0x4450, 0x26c0, 0xfeec, 0xfa6d, 0xda2a, 0x1, 0x0);
        gbc.writeMem(0x1944, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4450);
        EXPECT(gbc.pc(), 0x1946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01E8
        gbc.setState(0x527c, 0x793d, 0xe850, 0x57e5, 0x3b62, 0xb543, 0x0, 0x0);
        gbc.writeMem(0x527c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x793d);
        EXPECT(gbc.pc(), 0x527e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01EB
        gbc.setState(0xc8e9, 0x5e41, 0x2e60, 0xe42b, 0x22fa, 0xf4e0, 0x0, 0x1);
        gbc.writeMem(0xc8e9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5e41);
        EXPECT(gbc.pc(), 0xc8eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8e9), 0xcb);
        EXPECT(gbc.readMem(0xc8ea), 0x54);
        // CB 54 01EC
        gbc.setState(0xe7a5, 0x3169, 0x9d20, 0x38ee, 0x58e7, 0x24cf, 0x1, 0x1);
        gbc.writeMem(0xe7a5, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3169);
        EXPECT(gbc.pc(), 0xe7a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a5), 0xcb);
        EXPECT(gbc.readMem(0xe7a6), 0x54);
        // CB 54 01ED
        gbc.setState(0x1899, 0x47b7, 0x820, 0xb130, 0xb6bd, 0xec0f, 0x0, 0x1);
        gbc.writeMem(0x1899, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x47b7);
        EXPECT(gbc.pc(), 0x189b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01EE
        gbc.setState(0x7104, 0x897a, 0x7b10, 0xd831, 0x777f, 0xde5a, 0x1, 0x1);
        gbc.writeMem(0x7104, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x897a);
        EXPECT(gbc.pc(), 0x7106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01EF
        gbc.setState(0x320e, 0xf452, 0x4660, 0x4ec4, 0xbb73, 0x89bc, 0x0, 0x1);
        gbc.writeMem(0x320e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf452);
        EXPECT(gbc.pc(), 0x3210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01F0
        gbc.setState(0x1d5f, 0x7ec, 0xcb50, 0x2cc1, 0x6a20, 0x1ca3, 0x0, 0x1);
        gbc.writeMem(0x1d5f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7ec);
        EXPECT(gbc.pc(), 0x1d61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01F1
        gbc.setState(0x8d3e, 0x9b72, 0xabb0, 0xfb36, 0xb619, 0x4a4a, 0x1, 0x0);
        gbc.writeMem(0x8d3e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9b72);
        EXPECT(gbc.pc(), 0x8d40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d3e), 0xcb);
        EXPECT(gbc.readMem(0x8d3f), 0x54);
        // CB 54 01F2
        gbc.setState(0x4285, 0x3e85, 0x5300, 0x485f, 0xdd24, 0x2e90, 0x0, 0x0);
        gbc.writeMem(0x4285, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3e85);
        EXPECT(gbc.pc(), 0x4287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01F3
        gbc.setState(0x478a, 0x4266, 0x4090, 0xe593, 0x79db, 0x352b, 0x0, 0x1);
        gbc.writeMem(0x478a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4266);
        EXPECT(gbc.pc(), 0x478c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01F4
        gbc.setState(0xd1d, 0x77c7, 0x6c00, 0xbde, 0x3e, 0xce17, 0x0, 0x0);
        gbc.writeMem(0xd1d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x77c7);
        EXPECT(gbc.pc(), 0xd1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01F5
        gbc.setState(0x9b36, 0x55aa, 0x6030, 0x94f2, 0x67bb, 0x78d7, 0x0, 0x0);
        gbc.writeMem(0x9b36, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x55aa);
        EXPECT(gbc.pc(), 0x9b38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b36), 0xcb);
        EXPECT(gbc.readMem(0x9b37), 0x54);
        // CB 54 01F6
        gbc.setState(0x8a98, 0x3876, 0x1f0, 0x29a3, 0x49f4, 0x88c2, 0x1, 0x1);
        gbc.writeMem(0x8a98, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3876);
        EXPECT(gbc.pc(), 0x8a9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a98), 0xcb);
        EXPECT(gbc.readMem(0x8a99), 0x54);
        // CB 54 01F7
        gbc.setState(0x5330, 0x1c90, 0x88b0, 0xfc87, 0x39f3, 0x859b, 0x0, 0x0);
        gbc.writeMem(0x5330, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1c90);
        EXPECT(gbc.pc(), 0x5332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01F8
        gbc.setState(0x6183, 0x626f, 0x9450, 0x34e1, 0x5a7e, 0x8dcc, 0x0, 0x1);
        gbc.writeMem(0x6183, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x626f);
        EXPECT(gbc.pc(), 0x6185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01FA
        gbc.setState(0x60c3, 0x11fb, 0xf1c0, 0xd2b, 0x1778, 0x4266, 0x0, 0x1);
        gbc.writeMem(0x60c3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x11fb);
        EXPECT(gbc.pc(), 0x60c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01FB
        gbc.setState(0xb869, 0xaa6b, 0x4e40, 0x22cf, 0x93a6, 0x7ab3, 0x0, 0x0);
        gbc.writeMem(0xb869, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xaa6b);
        EXPECT(gbc.pc(), 0xb86b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb869), 0xcb);
        EXPECT(gbc.readMem(0xb86a), 0x54);
        // CB 54 01FC
        gbc.setState(0x4a03, 0x254b, 0x5e80, 0xd6ee, 0xa41a, 0x458c, 0x1, 0x0);
        gbc.writeMem(0x4a03, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x254b);
        EXPECT(gbc.pc(), 0x4a05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 01FD
        gbc.setState(0xd27f, 0x8b9f, 0x63b0, 0xeb40, 0xc1f9, 0xb3f, 0x1, 0x1);
        gbc.writeMem(0xd27f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8b9f);
        EXPECT(gbc.pc(), 0xd281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd27f), 0xcb);
        EXPECT(gbc.readMem(0xd280), 0x54);
        // CB 54 01FE
        gbc.setState(0x5bd9, 0x4011, 0x6070, 0x97a7, 0xf319, 0xa9d0, 0x1, 0x0);
        gbc.writeMem(0x5bd9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4011);
        EXPECT(gbc.pc(), 0x5bdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 01FF
        gbc.setState(0x8913, 0x794d, 0x3180, 0x5997, 0x5ca8, 0xf768, 0x1, 0x0);
        gbc.writeMem(0x8913, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x794d);
        EXPECT(gbc.pc(), 0x8915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8913), 0xcb);
        EXPECT(gbc.readMem(0x8914), 0x54);
        // CB 54 0200
        gbc.setState(0xd00e, 0xfbd7, 0x8a70, 0xbe5a, 0xa58f, 0x16e1, 0x0, 0x0);
        gbc.writeMem(0xd00e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfbd7);
        EXPECT(gbc.pc(), 0xd010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd00e), 0xcb);
        EXPECT(gbc.readMem(0xd00f), 0x54);
        // CB 54 0201
        gbc.setState(0x18e3, 0x8796, 0x8110, 0x2348, 0x60f5, 0x211f, 0x0, 0x0);
        gbc.writeMem(0x18e3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8796);
        EXPECT(gbc.pc(), 0x18e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0204
        gbc.setState(0x92a1, 0x8c8f, 0xd930, 0xfae8, 0xf4f0, 0xea7b, 0x1, 0x0);
        gbc.writeMem(0x92a1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8c8f);
        EXPECT(gbc.pc(), 0x92a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a1), 0xcb);
        EXPECT(gbc.readMem(0x92a2), 0x54);
        // CB 54 0205
        gbc.setState(0x69e9, 0xaab7, 0xd360, 0x6682, 0x5d68, 0x9caa, 0x1, 0x1);
        gbc.writeMem(0x69e9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xaab7);
        EXPECT(gbc.pc(), 0x69eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0206
        gbc.setState(0x6777, 0xf05, 0x7c30, 0x7afe, 0x9c77, 0x344, 0x0, 0x1);
        gbc.writeMem(0x6777, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf05);
        EXPECT(gbc.pc(), 0x6779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0207
        gbc.setState(0xaf74, 0x7b32, 0x5250, 0x2c6f, 0x48a8, 0xb815, 0x1, 0x1);
        gbc.writeMem(0xaf74, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7b32);
        EXPECT(gbc.pc(), 0xaf76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf74), 0xcb);
        EXPECT(gbc.readMem(0xaf75), 0x54);
        // CB 54 0208
        gbc.setState(0xadbf, 0x27e7, 0x4460, 0x37c0, 0x4f7c, 0x9180, 0x1, 0x0);
        gbc.writeMem(0xadbf, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x27e7);
        EXPECT(gbc.pc(), 0xadc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadbf), 0xcb);
        EXPECT(gbc.readMem(0xadc0), 0x54);
        // CB 54 0209
        gbc.setState(0xb685, 0x835f, 0xcf0, 0x5cc5, 0xc325, 0xf927, 0x1, 0x0);
        gbc.writeMem(0xb685, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x835f);
        EXPECT(gbc.pc(), 0xb687);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb685), 0xcb);
        EXPECT(gbc.readMem(0xb686), 0x54);
        // CB 54 020A
        gbc.setState(0xa70f, 0xdd5a, 0x9d70, 0x69e2, 0x4b91, 0x55ba, 0x0, 0x0);
        gbc.writeMem(0xa70f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xdd5a);
        EXPECT(gbc.pc(), 0xa711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa70f), 0xcb);
        EXPECT(gbc.readMem(0xa710), 0x54);
        // CB 54 020B
        gbc.setState(0xb133, 0xf49d, 0x7ef0, 0x54cc, 0x698c, 0x28f2, 0x0, 0x1);
        gbc.writeMem(0xb133, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf49d);
        EXPECT(gbc.pc(), 0xb135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb133), 0xcb);
        EXPECT(gbc.readMem(0xb134), 0x54);
        // CB 54 020C
        gbc.setState(0x2c12, 0x58a1, 0x7940, 0x6b77, 0x7a97, 0xd120, 0x0, 0x1);
        gbc.writeMem(0x2c12, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x58a1);
        EXPECT(gbc.pc(), 0x2c14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 020E
        gbc.setState(0x9512, 0x46ff, 0x3ab0, 0xab46, 0x71f3, 0xf78f, 0x0, 0x1);
        gbc.writeMem(0x9512, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x46ff);
        EXPECT(gbc.pc(), 0x9514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9512), 0xcb);
        EXPECT(gbc.readMem(0x9513), 0x54);
        // CB 54 020F
        gbc.setState(0x6a40, 0x3516, 0x8450, 0x3bcf, 0x3297, 0xf501, 0x1, 0x0);
        gbc.writeMem(0x6a40, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3516);
        EXPECT(gbc.pc(), 0x6a42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0210
        gbc.setState(0x534f, 0x53c8, 0xba20, 0x8286, 0xe1a1, 0xd3de, 0x0, 0x0);
        gbc.writeMem(0x534f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x53c8);
        EXPECT(gbc.pc(), 0x5351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0211
        gbc.setState(0x886, 0xb581, 0x8090, 0x1d41, 0xeea0, 0x4587, 0x0, 0x0);
        gbc.writeMem(0x886, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb581);
        EXPECT(gbc.pc(), 0x888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0212
        gbc.setState(0xe513, 0xbbb1, 0x1890, 0x44ce, 0x33ee, 0xd94e, 0x1, 0x1);
        gbc.writeMem(0xe513, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xbbb1);
        EXPECT(gbc.pc(), 0xe515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe513), 0xcb);
        EXPECT(gbc.readMem(0xe514), 0x54);
        // CB 54 0213
        gbc.setState(0x8b2f, 0x7389, 0x3740, 0x734b, 0x7076, 0xefbf, 0x1, 0x0);
        gbc.writeMem(0x8b2f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7389);
        EXPECT(gbc.pc(), 0x8b31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2f), 0xcb);
        EXPECT(gbc.readMem(0x8b30), 0x54);
        // CB 54 0214
        gbc.setState(0xa1e1, 0x4e27, 0xe4e0, 0xd8ba, 0xb650, 0x182c, 0x1, 0x0);
        gbc.writeMem(0xa1e1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4e27);
        EXPECT(gbc.pc(), 0xa1e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e1), 0xcb);
        EXPECT(gbc.readMem(0xa1e2), 0x54);
        // CB 54 0215
        gbc.setState(0x1e3e, 0xf397, 0xc980, 0xe15c, 0xca3e, 0xd262, 0x1, 0x1);
        gbc.writeMem(0x1e3e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf397);
        EXPECT(gbc.pc(), 0x1e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0216
        gbc.setState(0x8bb5, 0xa883, 0xf9b0, 0xfae2, 0x4b3b, 0x2718, 0x1, 0x0);
        gbc.writeMem(0x8bb5, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa883);
        EXPECT(gbc.pc(), 0x8bb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bb5), 0xcb);
        EXPECT(gbc.readMem(0x8bb6), 0x54);
        // CB 54 0217
        gbc.setState(0x261e, 0x19c5, 0x8080, 0xf2f2, 0xed2e, 0xc274, 0x0, 0x1);
        gbc.writeMem(0x261e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x19c5);
        EXPECT(gbc.pc(), 0x2620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0218
        gbc.setState(0x3eeb, 0xb2c3, 0x2df0, 0x9d96, 0x4990, 0x20c8, 0x0, 0x0);
        gbc.writeMem(0x3eeb, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb2c3);
        EXPECT(gbc.pc(), 0x3eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0219
        gbc.setState(0x1ca3, 0x9a2d, 0x39e0, 0xc580, 0x4022, 0xb57f, 0x1, 0x1);
        gbc.writeMem(0x1ca3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9a2d);
        EXPECT(gbc.pc(), 0x1ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 021A
        gbc.setState(0xe8b0, 0x278f, 0xf5a0, 0x2ffa, 0xebe8, 0x181a, 0x1, 0x1);
        gbc.writeMem(0xe8b0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x278f);
        EXPECT(gbc.pc(), 0xe8b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b0), 0xcb);
        EXPECT(gbc.readMem(0xe8b1), 0x54);
        // CB 54 021B
        gbc.setState(0x6306, 0xf34b, 0x8000, 0xab82, 0x19cd, 0x34bd, 0x0, 0x0);
        gbc.writeMem(0x6306, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf34b);
        EXPECT(gbc.pc(), 0x6308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 021D
        gbc.setState(0x643a, 0xb261, 0xac60, 0x100b, 0xec42, 0x9965, 0x0, 0x0);
        gbc.writeMem(0x643a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb261);
        EXPECT(gbc.pc(), 0x643c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 021E
        gbc.setState(0x126b, 0x737, 0x9230, 0x8b0a, 0x91bd, 0x65a1, 0x0, 0x1);
        gbc.writeMem(0x126b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x737);
        EXPECT(gbc.pc(), 0x126d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 021F
        gbc.setState(0x7824, 0x1523, 0x3810, 0xeab0, 0x87ef, 0xd881, 0x0, 0x1);
        gbc.writeMem(0x7824, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1523);
        EXPECT(gbc.pc(), 0x7826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0220
        gbc.setState(0xa9e5, 0x1001, 0x9340, 0xd83a, 0x7f3f, 0x9176, 0x1, 0x0);
        gbc.writeMem(0xa9e5, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1001);
        EXPECT(gbc.pc(), 0xa9e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e5), 0xcb);
        EXPECT(gbc.readMem(0xa9e6), 0x54);
        // CB 54 0221
        gbc.setState(0x5c6b, 0xf152, 0x1b50, 0x4006, 0xcc9d, 0x7728, 0x1, 0x0);
        gbc.writeMem(0x5c6b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf152);
        EXPECT(gbc.pc(), 0x5c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0222
        gbc.setState(0xdb77, 0x3342, 0xe920, 0x98f3, 0xe452, 0xc7c7, 0x1, 0x1);
        gbc.writeMem(0xdb77, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3342);
        EXPECT(gbc.pc(), 0xdb79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb77), 0xcb);
        EXPECT(gbc.readMem(0xdb78), 0x54);
        // CB 54 0223
        gbc.setState(0x6b29, 0xd305, 0xf7a0, 0xf6da, 0xa7dc, 0xd4bb, 0x0, 0x0);
        gbc.writeMem(0x6b29, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd305);
        EXPECT(gbc.pc(), 0x6b2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0224
        gbc.setState(0x30a7, 0x810e, 0x6710, 0x63a4, 0xdb27, 0x368c, 0x1, 0x1);
        gbc.writeMem(0x30a7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x810e);
        EXPECT(gbc.pc(), 0x30a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0225
        gbc.setState(0xbc61, 0xb0c0, 0x1660, 0x6791, 0x8bb2, 0xa0bc, 0x0, 0x0);
        gbc.writeMem(0xbc61, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb0c0);
        EXPECT(gbc.pc(), 0xbc63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc61), 0xcb);
        EXPECT(gbc.readMem(0xbc62), 0x54);
        // CB 54 0226
        gbc.setState(0xc41, 0x2d74, 0x8780, 0x2b22, 0x255b, 0x7ac3, 0x0, 0x0);
        gbc.writeMem(0xc41, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2d74);
        EXPECT(gbc.pc(), 0xc43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0227
        gbc.setState(0x6d64, 0x4ae3, 0x85a0, 0x5f6f, 0x8ac, 0x3364, 0x1, 0x0);
        gbc.writeMem(0x6d64, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x4ae3);
        EXPECT(gbc.pc(), 0x6d66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0228
        gbc.setState(0x8b1, 0xc90a, 0xd450, 0x83f8, 0x2cee, 0x5db4, 0x0, 0x1);
        gbc.writeMem(0x8b1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc90a);
        EXPECT(gbc.pc(), 0x8b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0229
        gbc.setState(0x65d5, 0xd365, 0x8290, 0xfa90, 0xa3d1, 0xff9b, 0x0, 0x1);
        gbc.writeMem(0x65d5, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd365);
        EXPECT(gbc.pc(), 0x65d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 022A
        gbc.setState(0x2d10, 0xfa12, 0xd3a0, 0xe756, 0xee55, 0x2c6a, 0x0, 0x1);
        gbc.writeMem(0x2d10, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfa12);
        EXPECT(gbc.pc(), 0x2d12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 022B
        gbc.setState(0x8d82, 0x590d, 0x6ff0, 0xeeb3, 0x37eb, 0x6f5d, 0x1, 0x1);
        gbc.writeMem(0x8d82, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x590d);
        EXPECT(gbc.pc(), 0x8d84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d82), 0xcb);
        EXPECT(gbc.readMem(0x8d83), 0x54);
        // CB 54 022D
        gbc.setState(0xbb56, 0xfde4, 0x10b0, 0xefb7, 0xef01, 0x5c5d, 0x0, 0x1);
        gbc.writeMem(0xbb56, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfde4);
        EXPECT(gbc.pc(), 0xbb58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb56), 0xcb);
        EXPECT(gbc.readMem(0xbb57), 0x54);
        // CB 54 022E
        gbc.setState(0xa40, 0xc645, 0xb830, 0x8fc2, 0xbc9e, 0xf4af, 0x0, 0x0);
        gbc.writeMem(0xa40, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc645);
        EXPECT(gbc.pc(), 0xa42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 022F
        gbc.setState(0x20d1, 0xf04d, 0x8a90, 0x4e45, 0x3bc6, 0x5817, 0x1, 0x0);
        gbc.writeMem(0x20d1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf04d);
        EXPECT(gbc.pc(), 0x20d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0230
        gbc.setState(0x3c13, 0xed16, 0x970, 0x4ec5, 0xb23, 0x3ffe, 0x1, 0x1);
        gbc.writeMem(0x3c13, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xed16);
        EXPECT(gbc.pc(), 0x3c15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0231
        gbc.setState(0x887c, 0xd7ab, 0x7f90, 0xe174, 0x30f7, 0x8a76, 0x1, 0x1);
        gbc.writeMem(0x887c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd7ab);
        EXPECT(gbc.pc(), 0x887e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x887c), 0xcb);
        EXPECT(gbc.readMem(0x887d), 0x54);
        // CB 54 0232
        gbc.setState(0x2b44, 0xf7d9, 0x14e0, 0xbd43, 0xc094, 0xc740, 0x0, 0x0);
        gbc.writeMem(0x2b44, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf7d9);
        EXPECT(gbc.pc(), 0x2b46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0233
        gbc.setState(0xc16e, 0x7374, 0x890, 0x4e9, 0x28bd, 0x2a2c, 0x1, 0x0);
        gbc.writeMem(0xc16e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7374);
        EXPECT(gbc.pc(), 0xc170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc16e), 0xcb);
        EXPECT(gbc.readMem(0xc16f), 0x54);
        // CB 54 0234
        gbc.setState(0xa207, 0x18ec, 0x9fd0, 0xd056, 0x5952, 0x851e, 0x1, 0x1);
        gbc.writeMem(0xa207, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x18ec);
        EXPECT(gbc.pc(), 0xa209);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa207), 0xcb);
        EXPECT(gbc.readMem(0xa208), 0x54);
        // CB 54 0235
        gbc.setState(0xb867, 0xc67e, 0x49a0, 0xc14f, 0x5efc, 0x7222, 0x1, 0x0);
        gbc.writeMem(0xb867, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc67e);
        EXPECT(gbc.pc(), 0xb869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb867), 0xcb);
        EXPECT(gbc.readMem(0xb868), 0x54);
        // CB 54 0236
        gbc.setState(0xcff1, 0x3e36, 0xa8c0, 0x2083, 0x627c, 0x8e15, 0x1, 0x1);
        gbc.writeMem(0xcff1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3e36);
        EXPECT(gbc.pc(), 0xcff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcff1), 0xcb);
        EXPECT(gbc.readMem(0xcff2), 0x54);
        // CB 54 0238
        gbc.setState(0x8441, 0x3940, 0x4710, 0xbbeb, 0x8a5d, 0x58e1, 0x0, 0x1);
        gbc.writeMem(0x8441, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3940);
        EXPECT(gbc.pc(), 0x8443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8441), 0xcb);
        EXPECT(gbc.readMem(0x8442), 0x54);
        // CB 54 0239
        gbc.setState(0xb6df, 0x29a4, 0x34f0, 0x48bc, 0xb059, 0x2a98, 0x0, 0x1);
        gbc.writeMem(0xb6df, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x29a4);
        EXPECT(gbc.pc(), 0xb6e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6df), 0xcb);
        EXPECT(gbc.readMem(0xb6e0), 0x54);
        // CB 54 023A
        gbc.setState(0x822c, 0xed29, 0xd790, 0x908a, 0x5324, 0x38de, 0x0, 0x1);
        gbc.writeMem(0x822c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xed29);
        EXPECT(gbc.pc(), 0x822e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x822c), 0xcb);
        EXPECT(gbc.readMem(0x822d), 0x54);
        // CB 54 023B
        gbc.setState(0x2fb, 0x7bcf, 0x9a30, 0x6311, 0x502b, 0x8e21, 0x1, 0x0);
        gbc.writeMem(0x2fb, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7bcf);
        EXPECT(gbc.pc(), 0x2fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 023C
        gbc.setState(0xca15, 0x767a, 0x9140, 0x704b, 0x7920, 0x4310, 0x0, 0x0);
        gbc.writeMem(0xca15, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x767a);
        EXPECT(gbc.pc(), 0xca17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca15), 0xcb);
        EXPECT(gbc.readMem(0xca16), 0x54);
        // CB 54 023D
        gbc.setState(0x34e4, 0x2eee, 0xfd0, 0xdaf8, 0x2bc5, 0xd02b, 0x1, 0x0);
        gbc.writeMem(0x34e4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2eee);
        EXPECT(gbc.pc(), 0x34e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 023E
        gbc.setState(0x76e9, 0x92e6, 0x5660, 0x1469, 0x7559, 0x1e2b, 0x0, 0x0);
        gbc.writeMem(0x76e9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x92e6);
        EXPECT(gbc.pc(), 0x76eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 023F
        gbc.setState(0x218f, 0x85af, 0xa450, 0xb0ab, 0xa294, 0xd1e7, 0x0, 0x1);
        gbc.writeMem(0x218f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x85af);
        EXPECT(gbc.pc(), 0x2191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0240
        gbc.setState(0xa600, 0x13ea, 0xaed0, 0x2b5d, 0xa8d8, 0xe291, 0x1, 0x0);
        gbc.writeMem(0xa600, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x13ea);
        EXPECT(gbc.pc(), 0xa602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa600), 0xcb);
        EXPECT(gbc.readMem(0xa601), 0x54);
        // CB 54 0241
        gbc.setState(0xd5, 0x277f, 0x8850, 0x7cd, 0x5f0a, 0x8b5a, 0x0, 0x0);
        gbc.writeMem(0xd5, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x277f);
        EXPECT(gbc.pc(), 0xd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0243
        gbc.setState(0x85fa, 0x87f7, 0xb450, 0xac94, 0x9f1c, 0x6394, 0x1, 0x0);
        gbc.writeMem(0x85fa, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x87f7);
        EXPECT(gbc.pc(), 0x85fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85fa), 0xcb);
        EXPECT(gbc.readMem(0x85fb), 0x54);
        // CB 54 0244
        gbc.setState(0x9960, 0x5423, 0x2f90, 0x624c, 0xa1d8, 0xd972, 0x0, 0x0);
        gbc.writeMem(0x9960, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5423);
        EXPECT(gbc.pc(), 0x9962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9960), 0xcb);
        EXPECT(gbc.readMem(0x9961), 0x54);
        // CB 54 0245
        gbc.setState(0x62d1, 0xc1f0, 0x9580, 0xef7f, 0xe951, 0x192, 0x1, 0x0);
        gbc.writeMem(0x62d1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc1f0);
        EXPECT(gbc.pc(), 0x62d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0246
        gbc.setState(0xead4, 0xdd4a, 0xd3c0, 0x9a7e, 0xf80e, 0x493, 0x0, 0x0);
        gbc.writeMem(0xead4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xdd4a);
        EXPECT(gbc.pc(), 0xead6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead4), 0xcb);
        EXPECT(gbc.readMem(0xead5), 0x54);
        // CB 54 0247
        gbc.setState(0x3281, 0x9a29, 0xa3c0, 0xb870, 0xc53f, 0x8a6, 0x0, 0x1);
        gbc.writeMem(0x3281, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9a29);
        EXPECT(gbc.pc(), 0x3283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0248
        gbc.setState(0x270, 0xf8f5, 0x4040, 0xce8d, 0xa451, 0xbb4b, 0x0, 0x0);
        gbc.writeMem(0x270, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf8f5);
        EXPECT(gbc.pc(), 0x272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0249
        gbc.setState(0xf72, 0x9a4, 0x7bd0, 0xa37e, 0x2e9c, 0x37a1, 0x0, 0x1);
        gbc.writeMem(0xf72, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9a4);
        EXPECT(gbc.pc(), 0xf74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 024A
        gbc.setState(0x7372, 0x4b2a, 0x52d0, 0x5d62, 0x128f, 0x9033, 0x0, 0x1);
        gbc.writeMem(0x7372, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4b2a);
        EXPECT(gbc.pc(), 0x7374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 024B
        gbc.setState(0x89b0, 0xfc5c, 0xdc30, 0x1b5d, 0x58d6, 0x79cf, 0x0, 0x1);
        gbc.writeMem(0x89b0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xfc5c);
        EXPECT(gbc.pc(), 0x89b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89b0), 0xcb);
        EXPECT(gbc.readMem(0x89b1), 0x54);
        // CB 54 024C
        gbc.setState(0x5c1c, 0xad3c, 0xb120, 0xf53e, 0x500d, 0x9bfe, 0x0, 0x0);
        gbc.writeMem(0x5c1c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xad3c);
        EXPECT(gbc.pc(), 0x5c1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 024D
        gbc.setState(0x3f2c, 0x21e1, 0xeae0, 0xa59c, 0xca84, 0x4954, 0x0, 0x1);
        gbc.writeMem(0x3f2c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x21e1);
        EXPECT(gbc.pc(), 0x3f2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 024E
        gbc.setState(0x5dd, 0x6af0, 0x4960, 0x6a05, 0x26fc, 0xb6fe, 0x1, 0x1);
        gbc.writeMem(0x5dd, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6af0);
        EXPECT(gbc.pc(), 0x5df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 024F
        gbc.setState(0x6907, 0xc246, 0x4450, 0xccc6, 0xb9f6, 0x591c, 0x1, 0x0);
        gbc.writeMem(0x6907, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc246);
        EXPECT(gbc.pc(), 0x6909);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0250
        gbc.setState(0x51cf, 0xd54e, 0xed80, 0xba78, 0x6687, 0xf700, 0x0, 0x1);
        gbc.writeMem(0x51cf, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd54e);
        EXPECT(gbc.pc(), 0x51d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0251
        gbc.setState(0x165, 0x11da, 0x8e90, 0xe107, 0x5030, 0x89ca, 0x0, 0x0);
        gbc.writeMem(0x165, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x11da);
        EXPECT(gbc.pc(), 0x167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0252
        gbc.setState(0xd9a3, 0x117a, 0xda70, 0x9adb, 0xf9b8, 0x5acb, 0x0, 0x1);
        gbc.writeMem(0xd9a3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x117a);
        EXPECT(gbc.pc(), 0xd9a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a3), 0xcb);
        EXPECT(gbc.readMem(0xd9a4), 0x54);
        // CB 54 0253
        gbc.setState(0xe44c, 0x858c, 0x9b0, 0xadf1, 0xe83, 0x350d, 0x1, 0x1);
        gbc.writeMem(0xe44c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x858c);
        EXPECT(gbc.pc(), 0xe44e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe44c), 0xcb);
        EXPECT(gbc.readMem(0xe44d), 0x54);
        // CB 54 0254
        gbc.setState(0x2fdd, 0x615d, 0x8960, 0xe58a, 0xbc16, 0x3749, 0x0, 0x0);
        gbc.writeMem(0x2fdd, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x615d);
        EXPECT(gbc.pc(), 0x2fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0255
        gbc.setState(0x7d16, 0x815e, 0x48f0, 0x1adb, 0xf867, 0xc5b9, 0x0, 0x0);
        gbc.writeMem(0x7d16, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x815e);
        EXPECT(gbc.pc(), 0x7d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0256
        gbc.setState(0x191c, 0xcbda, 0xc5f0, 0x3a, 0x8ed0, 0x70bd, 0x0, 0x0);
        gbc.writeMem(0x191c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xcbda);
        EXPECT(gbc.pc(), 0x191e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0257
        gbc.setState(0x3edd, 0x6ad6, 0xb0a0, 0xec9c, 0x86ef, 0x8f44, 0x0, 0x0);
        gbc.writeMem(0x3edd, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6ad6);
        EXPECT(gbc.pc(), 0x3edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0258
        gbc.setState(0x4df6, 0x1fef, 0x85d0, 0xb5b0, 0x7e27, 0x725, 0x0, 0x1);
        gbc.writeMem(0x4df6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1fef);
        EXPECT(gbc.pc(), 0x4df8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0259
        gbc.setState(0xb309, 0x38ff, 0xf2c0, 0x345f, 0x55f9, 0x7de3, 0x0, 0x1);
        gbc.writeMem(0xb309, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x38ff);
        EXPECT(gbc.pc(), 0xb30b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb309), 0xcb);
        EXPECT(gbc.readMem(0xb30a), 0x54);
        // CB 54 025A
        gbc.setState(0x2a70, 0xe1f2, 0x2270, 0xa17, 0x1a6f, 0x683, 0x1, 0x1);
        gbc.writeMem(0x2a70, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe1f2);
        EXPECT(gbc.pc(), 0x2a72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 025B
        gbc.setState(0xbec3, 0xc17e, 0x3480, 0xa62a, 0x3a92, 0x733a, 0x0, 0x1);
        gbc.writeMem(0xbec3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc17e);
        EXPECT(gbc.pc(), 0xbec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec3), 0xcb);
        EXPECT(gbc.readMem(0xbec4), 0x54);
        // CB 54 025C
        gbc.setState(0xd9f1, 0xc82c, 0xc4d0, 0x73b3, 0x48ef, 0xab38, 0x0, 0x1);
        gbc.writeMem(0xd9f1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc82c);
        EXPECT(gbc.pc(), 0xd9f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9f1), 0xcb);
        EXPECT(gbc.readMem(0xd9f2), 0x54);
        // CB 54 025D
        gbc.setState(0xe3ed, 0xdbad, 0x730, 0x910a, 0x107c, 0xdc4f, 0x1, 0x0);
        gbc.writeMem(0xe3ed, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdbad);
        EXPECT(gbc.pc(), 0xe3ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ed), 0xcb);
        EXPECT(gbc.readMem(0xe3ee), 0x54);
        // CB 54 025E
        gbc.setState(0xc93, 0xfd86, 0xaf50, 0x79f1, 0xbee1, 0x4b84, 0x1, 0x1);
        gbc.writeMem(0xc93, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xfd86);
        EXPECT(gbc.pc(), 0xc95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 025F
        gbc.setState(0x8e35, 0xeefe, 0x6fc0, 0x89e1, 0xd33b, 0x1969, 0x1, 0x1);
        gbc.writeMem(0x8e35, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xeefe);
        EXPECT(gbc.pc(), 0x8e37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e35), 0xcb);
        EXPECT(gbc.readMem(0x8e36), 0x54);
        // CB 54 0260
        gbc.setState(0xbb2c, 0x77ef, 0xb570, 0xc2a8, 0x23ae, 0x9e62, 0x0, 0x0);
        gbc.writeMem(0xbb2c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x77ef);
        EXPECT(gbc.pc(), 0xbb2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb2c), 0xcb);
        EXPECT(gbc.readMem(0xbb2d), 0x54);
        // CB 54 0262
        gbc.setState(0x31f3, 0xb968, 0x71e0, 0x6877, 0xbd1e, 0x6abd, 0x1, 0x1);
        gbc.writeMem(0x31f3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb968);
        EXPECT(gbc.pc(), 0x31f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0263
        gbc.setState(0xf16, 0xa699, 0xd7a0, 0x77a2, 0x18f, 0xc827, 0x1, 0x0);
        gbc.writeMem(0xf16, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa699);
        EXPECT(gbc.pc(), 0xf18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0264
        gbc.setState(0x869f, 0x2df7, 0x5280, 0xbca4, 0x76bd, 0xa028, 0x1, 0x1);
        gbc.writeMem(0x869f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2df7);
        EXPECT(gbc.pc(), 0x86a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x869f), 0xcb);
        EXPECT(gbc.readMem(0x86a0), 0x54);
        // CB 54 0265
        gbc.setState(0x5a6d, 0x86e4, 0x8bc0, 0x7a5a, 0x63b2, 0xac95, 0x1, 0x1);
        gbc.writeMem(0x5a6d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x86e4);
        EXPECT(gbc.pc(), 0x5a6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0266
        gbc.setState(0x4bb8, 0x9e00, 0x13e0, 0xddc6, 0xb918, 0x1606, 0x1, 0x1);
        gbc.writeMem(0x4bb8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9e00);
        EXPECT(gbc.pc(), 0x4bba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0267
        gbc.setState(0xcdf8, 0x9784, 0x1d00, 0x7143, 0x2e0b, 0xa9fe, 0x0, 0x0);
        gbc.writeMem(0xcdf8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9784);
        EXPECT(gbc.pc(), 0xcdfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf8), 0xcb);
        EXPECT(gbc.readMem(0xcdf9), 0x54);
        // CB 54 0268
        gbc.setState(0x1ae, 0x110b, 0xb70, 0xd1bc, 0x9d95, 0x5d, 0x0, 0x0);
        gbc.writeMem(0x1ae, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x110b);
        EXPECT(gbc.pc(), 0x1b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0269
        gbc.setState(0x3871, 0x87a3, 0xbcd0, 0x8ee8, 0x71c8, 0x1c19, 0x1, 0x0);
        gbc.writeMem(0x3871, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x87a3);
        EXPECT(gbc.pc(), 0x3873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 026A
        gbc.setState(0x2d53, 0x6e91, 0xd870, 0xaa5c, 0xb572, 0x64be, 0x0, 0x1);
        gbc.writeMem(0x2d53, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6e91);
        EXPECT(gbc.pc(), 0x2d55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 026C
        gbc.setState(0x56c6, 0x68d8, 0x2610, 0xf0d2, 0x38b4, 0x52b1, 0x0, 0x0);
        gbc.writeMem(0x56c6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x68d8);
        EXPECT(gbc.pc(), 0x56c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 026D
        gbc.setState(0xa6b7, 0xa22b, 0x6440, 0x76bd, 0x48e9, 0xdc48, 0x1, 0x0);
        gbc.writeMem(0xa6b7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa22b);
        EXPECT(gbc.pc(), 0xa6b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b7), 0xcb);
        EXPECT(gbc.readMem(0xa6b8), 0x54);
        // CB 54 026E
        gbc.setState(0xaf03, 0x6d49, 0x4b60, 0x208d, 0xa4f4, 0x9407, 0x0, 0x1);
        gbc.writeMem(0xaf03, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6d49);
        EXPECT(gbc.pc(), 0xaf05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf03), 0xcb);
        EXPECT(gbc.readMem(0xaf04), 0x54);
        // CB 54 026F
        gbc.setState(0x821b, 0xd0a9, 0x5ff0, 0x1d6e, 0x9fd, 0x149c, 0x0, 0x1);
        gbc.writeMem(0x821b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd0a9);
        EXPECT(gbc.pc(), 0x821d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x821b), 0xcb);
        EXPECT(gbc.readMem(0x821c), 0x54);
        // CB 54 0270
        gbc.setState(0xaaab, 0x3d2e, 0xa470, 0x11b5, 0x10c, 0x9ade, 0x1, 0x0);
        gbc.writeMem(0xaaab, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3d2e);
        EXPECT(gbc.pc(), 0xaaad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaab), 0xcb);
        EXPECT(gbc.readMem(0xaaac), 0x54);
        // CB 54 0271
        gbc.setState(0x275f, 0xae74, 0xa7d0, 0x9811, 0xbd77, 0xc5ec, 0x1, 0x1);
        gbc.writeMem(0x275f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xae74);
        EXPECT(gbc.pc(), 0x2761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0272
        gbc.setState(0xdb15, 0xad82, 0xfa0, 0x3e3d, 0x8e72, 0x3e3f, 0x0, 0x1);
        gbc.writeMem(0xdb15, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xad82);
        EXPECT(gbc.pc(), 0xdb17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb15), 0xcb);
        EXPECT(gbc.readMem(0xdb16), 0x54);
        // CB 54 0273
        gbc.setState(0x72d3, 0x7380, 0x3480, 0x491a, 0xb9d1, 0x2d8d, 0x1, 0x1);
        gbc.writeMem(0x72d3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7380);
        EXPECT(gbc.pc(), 0x72d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0274
        gbc.setState(0x291a, 0xc3e3, 0x6180, 0x3694, 0x39f3, 0xded2, 0x1, 0x1);
        gbc.writeMem(0x291a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc3e3);
        EXPECT(gbc.pc(), 0x291c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0275
        gbc.setState(0x883b, 0x8123, 0x21e0, 0x378e, 0x27ea, 0xfa06, 0x0, 0x1);
        gbc.writeMem(0x883b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8123);
        EXPECT(gbc.pc(), 0x883d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x883b), 0xcb);
        EXPECT(gbc.readMem(0x883c), 0x54);
        // CB 54 0276
        gbc.setState(0x209a, 0xbf9c, 0x36c0, 0xde04, 0xc9c, 0xc10c, 0x0, 0x1);
        gbc.writeMem(0x209a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbf9c);
        EXPECT(gbc.pc(), 0x209c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0277
        gbc.setState(0x1cd0, 0xab38, 0x3930, 0xe6aa, 0x56fe, 0xdd8f, 0x0, 0x0);
        gbc.writeMem(0x1cd0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xab38);
        EXPECT(gbc.pc(), 0x1cd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0278
        gbc.setState(0x1260, 0xa57, 0x4dd0, 0x7955, 0xd70f, 0x534b, 0x0, 0x0);
        gbc.writeMem(0x1260, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa57);
        EXPECT(gbc.pc(), 0x1262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 027A
        gbc.setState(0x678f, 0xf530, 0x4bf0, 0x8a98, 0x6440, 0x6770, 0x1, 0x0);
        gbc.writeMem(0x678f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf530);
        EXPECT(gbc.pc(), 0x6791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 027B
        gbc.setState(0x20f9, 0xecdc, 0x4f10, 0x63d4, 0x97cd, 0x2f78, 0x1, 0x0);
        gbc.writeMem(0x20f9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xecdc);
        EXPECT(gbc.pc(), 0x20fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 027D
        gbc.setState(0x5938, 0x2b0e, 0xc230, 0xd2c1, 0x9122, 0xa200, 0x0, 0x1);
        gbc.writeMem(0x5938, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2b0e);
        EXPECT(gbc.pc(), 0x593a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 027E
        gbc.setState(0xb824, 0xcc61, 0xd4e0, 0x500f, 0x751b, 0x5c0e, 0x0, 0x1);
        gbc.writeMem(0xb824, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xcc61);
        EXPECT(gbc.pc(), 0xb826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb824), 0xcb);
        EXPECT(gbc.readMem(0xb825), 0x54);
        // CB 54 027F
        gbc.setState(0xee30, 0xf32b, 0x21b0, 0x78e2, 0x4d0e, 0x3244, 0x0, 0x1);
        gbc.writeMem(0xee30, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf32b);
        EXPECT(gbc.pc(), 0xee32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee30), 0xcb);
        EXPECT(gbc.readMem(0xee31), 0x54);
        // CB 54 0280
        gbc.setState(0x7774, 0x241f, 0x7bd0, 0xeee3, 0x9559, 0x36d, 0x0, 0x0);
        gbc.writeMem(0x7774, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x241f);
        EXPECT(gbc.pc(), 0x7776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0281
        gbc.setState(0x14e8, 0x5779, 0x1930, 0xdbd4, 0xb818, 0xa08a, 0x0, 0x1);
        gbc.writeMem(0x14e8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5779);
        EXPECT(gbc.pc(), 0x14ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0282
        gbc.setState(0x9666, 0x3cda, 0x4410, 0x7148, 0x1a0a, 0x6542, 0x1, 0x1);
        gbc.writeMem(0x9666, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3cda);
        EXPECT(gbc.pc(), 0x9668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9666), 0xcb);
        EXPECT(gbc.readMem(0x9667), 0x54);
        // CB 54 0283
        gbc.setState(0x5a1c, 0xdd91, 0x9660, 0xd72d, 0xebb4, 0x5ae1, 0x1, 0x0);
        gbc.writeMem(0x5a1c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdd91);
        EXPECT(gbc.pc(), 0x5a1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0284
        gbc.setState(0x77d, 0xde00, 0xc0f0, 0x788e, 0xf99e, 0x2445, 0x1, 0x0);
        gbc.writeMem(0x77d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xde00);
        EXPECT(gbc.pc(), 0x77f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0285
        gbc.setState(0xb51b, 0x79ab, 0x8bd0, 0xdfd2, 0xc692, 0x93d7, 0x1, 0x1);
        gbc.writeMem(0xb51b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x79ab);
        EXPECT(gbc.pc(), 0xb51d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb51b), 0xcb);
        EXPECT(gbc.readMem(0xb51c), 0x54);
        // CB 54 0286
        gbc.setState(0x4b4f, 0x3db5, 0x9930, 0xc83f, 0xa5f2, 0x7324, 0x0, 0x1);
        gbc.writeMem(0x4b4f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3db5);
        EXPECT(gbc.pc(), 0x4b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0288
        gbc.setState(0x4c1c, 0x2256, 0x7fc0, 0x6fcf, 0x80b4, 0x4a89, 0x1, 0x1);
        gbc.writeMem(0x4c1c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2256);
        EXPECT(gbc.pc(), 0x4c1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0289
        gbc.setState(0x58c1, 0xfce8, 0xe210, 0xf933, 0xf133, 0xef6, 0x0, 0x0);
        gbc.writeMem(0x58c1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfce8);
        EXPECT(gbc.pc(), 0x58c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 028A
        gbc.setState(0xa4f4, 0x4e6, 0x480, 0xbe62, 0xaa6f, 0xaaa, 0x1, 0x1);
        gbc.writeMem(0xa4f4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4e6);
        EXPECT(gbc.pc(), 0xa4f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4f4), 0xcb);
        EXPECT(gbc.readMem(0xa4f5), 0x54);
        // CB 54 028B
        gbc.setState(0xd815, 0x64a9, 0xa8c0, 0x832, 0xda14, 0xe0f6, 0x0, 0x1);
        gbc.writeMem(0xd815, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x64a9);
        EXPECT(gbc.pc(), 0xd817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd815), 0xcb);
        EXPECT(gbc.readMem(0xd816), 0x54);
        // CB 54 028C
        gbc.setState(0x5597, 0x6a24, 0x49e0, 0xfbaf, 0xe180, 0x7d2b, 0x1, 0x1);
        gbc.writeMem(0x5597, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6a24);
        EXPECT(gbc.pc(), 0x5599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 028D
        gbc.setState(0x8e41, 0x4dbe, 0xfe60, 0xbf2d, 0xf00c, 0x5c9e, 0x0, 0x0);
        gbc.writeMem(0x8e41, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4dbe);
        EXPECT(gbc.pc(), 0x8e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e41), 0xcb);
        EXPECT(gbc.readMem(0x8e42), 0x54);
        // CB 54 028E
        gbc.setState(0xd220, 0x7689, 0x9930, 0x9c48, 0xb412, 0x669d, 0x0, 0x0);
        gbc.writeMem(0xd220, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7689);
        EXPECT(gbc.pc(), 0xd222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd220), 0xcb);
        EXPECT(gbc.readMem(0xd221), 0x54);
        // CB 54 028F
        gbc.setState(0xa9cd, 0xc016, 0x44c0, 0xd2d2, 0xe30a, 0x449c, 0x1, 0x1);
        gbc.writeMem(0xa9cd, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc016);
        EXPECT(gbc.pc(), 0xa9cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9cd), 0xcb);
        EXPECT(gbc.readMem(0xa9ce), 0x54);
        // CB 54 0290
        gbc.setState(0xc98b, 0x7d00, 0xb2f0, 0x6a32, 0x7d0b, 0x7099, 0x1, 0x1);
        gbc.writeMem(0xc98b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7d00);
        EXPECT(gbc.pc(), 0xc98d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98b), 0xcb);
        EXPECT(gbc.readMem(0xc98c), 0x54);
        // CB 54 0292
        gbc.setState(0x2e3d, 0xc3fd, 0xdcc0, 0x5c6d, 0x37b2, 0x42ef, 0x0, 0x0);
        gbc.writeMem(0x2e3d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc3fd);
        EXPECT(gbc.pc(), 0x2e3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0294
        gbc.setState(0x2596, 0xa7e0, 0xada0, 0xe650, 0x9eb, 0xb3f3, 0x1, 0x1);
        gbc.writeMem(0x2596, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa7e0);
        EXPECT(gbc.pc(), 0x2598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0295
        gbc.setState(0x3444, 0xc60e, 0x2040, 0x95c9, 0x1d0b, 0x3a58, 0x0, 0x1);
        gbc.writeMem(0x3444, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc60e);
        EXPECT(gbc.pc(), 0x3446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0296
        gbc.setState(0x163a, 0x9932, 0x2fa0, 0xa5f2, 0xf6c5, 0x5e0b, 0x1, 0x1);
        gbc.writeMem(0x163a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9932);
        EXPECT(gbc.pc(), 0x163c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0297
        gbc.setState(0xd1ce, 0x4c16, 0xfe00, 0xb62b, 0x62ca, 0xf4a1, 0x0, 0x1);
        gbc.writeMem(0xd1ce, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4c16);
        EXPECT(gbc.pc(), 0xd1d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ce), 0xcb);
        EXPECT(gbc.readMem(0xd1cf), 0x54);
        // CB 54 0298
        gbc.setState(0x9a, 0xc56a, 0x4a30, 0x801e, 0xbb71, 0x37ca, 0x0, 0x1);
        gbc.writeMem(0x9a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc56a);
        EXPECT(gbc.pc(), 0x9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0299
        gbc.setState(0x7337, 0x88ab, 0xdeb0, 0x5df, 0xf403, 0xc175, 0x1, 0x1);
        gbc.writeMem(0x7337, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x88ab);
        EXPECT(gbc.pc(), 0x7339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 029A
        gbc.setState(0x93c, 0xc536, 0x4880, 0x8d10, 0x4c1d, 0xbf1c, 0x1, 0x1);
        gbc.writeMem(0x93c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc536);
        EXPECT(gbc.pc(), 0x93e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 029B
        gbc.setState(0x26a4, 0x6db, 0x58d0, 0x1613, 0x6e02, 0x7374, 0x1, 0x0);
        gbc.writeMem(0x26a4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6db);
        EXPECT(gbc.pc(), 0x26a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 029C
        gbc.setState(0xe325, 0x2d9, 0xbf00, 0x8389, 0x61b4, 0xbe4f, 0x1, 0x1);
        gbc.writeMem(0xe325, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2d9);
        EXPECT(gbc.pc(), 0xe327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe325), 0xcb);
        EXPECT(gbc.readMem(0xe326), 0x54);
        // CB 54 029D
        gbc.setState(0x61b2, 0x2706, 0xaf90, 0xac1c, 0x782, 0xf8e6, 0x0, 0x0);
        gbc.writeMem(0x61b2, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2706);
        EXPECT(gbc.pc(), 0x61b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 029E
        gbc.setState(0xe5c5, 0x99cd, 0x5050, 0x8f2, 0x1118, 0x43e3, 0x0, 0x0);
        gbc.writeMem(0xe5c5, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x99cd);
        EXPECT(gbc.pc(), 0xe5c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c5), 0xcb);
        EXPECT(gbc.readMem(0xe5c6), 0x54);
        // CB 54 029F
        gbc.setState(0xae4c, 0x998b, 0x8ff0, 0xa63b, 0x187c, 0x130e, 0x1, 0x0);
        gbc.writeMem(0xae4c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x998b);
        EXPECT(gbc.pc(), 0xae4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae4c), 0xcb);
        EXPECT(gbc.readMem(0xae4d), 0x54);
        // CB 54 02A0
        gbc.setState(0x67e5, 0x66e5, 0xc070, 0xadf0, 0xf525, 0x6a44, 0x1, 0x0);
        gbc.writeMem(0x67e5, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x66e5);
        EXPECT(gbc.pc(), 0x67e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02A1
        gbc.setState(0x9859, 0x60f7, 0x9800, 0xa1b0, 0x949b, 0x83f8, 0x0, 0x1);
        gbc.writeMem(0x9859, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x60f7);
        EXPECT(gbc.pc(), 0x985b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9859), 0xcb);
        EXPECT(gbc.readMem(0x985a), 0x54);
        // CB 54 02A2
        gbc.setState(0x418, 0xc0ce, 0x8c60, 0xb692, 0xa927, 0x9de8, 0x1, 0x0);
        gbc.writeMem(0x418, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc0ce);
        EXPECT(gbc.pc(), 0x41a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02A3
        gbc.setState(0x6a30, 0x937c, 0x6a80, 0xc4f, 0xfc11, 0xdf0c, 0x1, 0x1);
        gbc.writeMem(0x6a30, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x937c);
        EXPECT(gbc.pc(), 0x6a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02A4
        gbc.setState(0x8278, 0x5185, 0xaa50, 0xcf4a, 0x238d, 0x1036, 0x1, 0x1);
        gbc.writeMem(0x8278, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5185);
        EXPECT(gbc.pc(), 0x827a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8278), 0xcb);
        EXPECT(gbc.readMem(0x8279), 0x54);
        // CB 54 02A5
        gbc.setState(0x78e, 0xbdea, 0x8770, 0xca27, 0xbcad, 0x4ed2, 0x0, 0x0);
        gbc.writeMem(0x78e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xbdea);
        EXPECT(gbc.pc(), 0x790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02A6
        gbc.setState(0x65e7, 0x9bd1, 0xea00, 0x6b28, 0xc2de, 0xb982, 0x1, 0x1);
        gbc.writeMem(0x65e7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9bd1);
        EXPECT(gbc.pc(), 0x65e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02A7
        gbc.setState(0x8e25, 0xab77, 0x76e0, 0xb82a, 0xcb6e, 0xe889, 0x1, 0x0);
        gbc.writeMem(0x8e25, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xab77);
        EXPECT(gbc.pc(), 0x8e27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e25), 0xcb);
        EXPECT(gbc.readMem(0x8e26), 0x54);
        // CB 54 02A8
        gbc.setState(0x34b4, 0xbf25, 0x4cd0, 0x720a, 0x7392, 0xadce, 0x1, 0x0);
        gbc.writeMem(0x34b4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xbf25);
        EXPECT(gbc.pc(), 0x34b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02A9
        gbc.setState(0xa738, 0x4b5a, 0x9870, 0x4b27, 0x946e, 0x4393, 0x1, 0x0);
        gbc.writeMem(0xa738, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4b5a);
        EXPECT(gbc.pc(), 0xa73a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa738), 0xcb);
        EXPECT(gbc.readMem(0xa739), 0x54);
        // CB 54 02AA
        gbc.setState(0x9b9a, 0x89a4, 0x9100, 0xc445, 0x66fd, 0x20ca, 0x1, 0x0);
        gbc.writeMem(0x9b9a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x89a4);
        EXPECT(gbc.pc(), 0x9b9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b9a), 0xcb);
        EXPECT(gbc.readMem(0x9b9b), 0x54);
        // CB 54 02AB
        gbc.setState(0xce73, 0x132d, 0x2b10, 0xd5e7, 0xa890, 0x19df, 0x1, 0x1);
        gbc.writeMem(0xce73, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x132d);
        EXPECT(gbc.pc(), 0xce75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce73), 0xcb);
        EXPECT(gbc.readMem(0xce74), 0x54);
        // CB 54 02AC
        gbc.setState(0x7188, 0x3ece, 0xcc70, 0x27a, 0xbcb5, 0xa22e, 0x0, 0x1);
        gbc.writeMem(0x7188, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3ece);
        EXPECT(gbc.pc(), 0x718a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02AD
        gbc.setState(0x70c6, 0xc5db, 0xde0, 0xa336, 0xe44e, 0x6c1, 0x1, 0x0);
        gbc.writeMem(0x70c6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc5db);
        EXPECT(gbc.pc(), 0x70c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02AE
        gbc.setState(0x6f87, 0x17a9, 0xbff0, 0x2bee, 0x4977, 0xfbe8, 0x0, 0x0);
        gbc.writeMem(0x6f87, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x17a9);
        EXPECT(gbc.pc(), 0x6f89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02AF
        gbc.setState(0xcac9, 0x21c4, 0xca20, 0x7ee8, 0xb295, 0x21c0, 0x1, 0x0);
        gbc.writeMem(0xcac9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x21c4);
        EXPECT(gbc.pc(), 0xcacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac9), 0xcb);
        EXPECT(gbc.readMem(0xcaca), 0x54);
        // CB 54 02B0
        gbc.setState(0x6235, 0xe0ea, 0x3800, 0x1698, 0xc8c3, 0xdd46, 0x0, 0x1);
        gbc.writeMem(0x6235, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe0ea);
        EXPECT(gbc.pc(), 0x6237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02B1
        gbc.setState(0xaf1b, 0x8466, 0x6b10, 0xde8b, 0xd9f9, 0x36ea, 0x1, 0x1);
        gbc.writeMem(0xaf1b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8466);
        EXPECT(gbc.pc(), 0xaf1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf1b), 0xcb);
        EXPECT(gbc.readMem(0xaf1c), 0x54);
        // CB 54 02B2
        gbc.setState(0xe6d3, 0xeae1, 0xa550, 0x65ba, 0x1e95, 0x259b, 0x1, 0x0);
        gbc.writeMem(0xe6d3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xeae1);
        EXPECT(gbc.pc(), 0xe6d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6d3), 0xcb);
        EXPECT(gbc.readMem(0xe6d4), 0x54);
        // CB 54 02B3
        gbc.setState(0xd576, 0xbc0c, 0x3780, 0xe607, 0x5441, 0x4004, 0x0, 0x1);
        gbc.writeMem(0xd576, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xbc0c);
        EXPECT(gbc.pc(), 0xd578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd576), 0xcb);
        EXPECT(gbc.readMem(0xd577), 0x54);
        // CB 54 02B4
        gbc.setState(0x92c1, 0x90f3, 0xa340, 0x6b4f, 0xfba5, 0xdb45, 0x0, 0x1);
        gbc.writeMem(0x92c1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x90f3);
        EXPECT(gbc.pc(), 0x92c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c1), 0xcb);
        EXPECT(gbc.readMem(0x92c2), 0x54);
        // CB 54 02B5
        gbc.setState(0x1678, 0xb24b, 0x4680, 0xbfc7, 0x352a, 0x3898, 0x1, 0x0);
        gbc.writeMem(0x1678, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb24b);
        EXPECT(gbc.pc(), 0x167a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02B6
        gbc.setState(0x8d4a, 0xc130, 0x11f0, 0xab27, 0x2e6d, 0xe306, 0x1, 0x1);
        gbc.writeMem(0x8d4a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc130);
        EXPECT(gbc.pc(), 0x8d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d4a), 0xcb);
        EXPECT(gbc.readMem(0x8d4b), 0x54);
        // CB 54 02B7
        gbc.setState(0xc4dd, 0x96b6, 0xf700, 0xa818, 0x248e, 0x57ee, 0x1, 0x1);
        gbc.writeMem(0xc4dd, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x96b6);
        EXPECT(gbc.pc(), 0xc4df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4dd), 0xcb);
        EXPECT(gbc.readMem(0xc4de), 0x54);
        // CB 54 02B9
        gbc.setState(0x998, 0x790b, 0x7b10, 0xb098, 0xdb8c, 0xd1f1, 0x1, 0x0);
        gbc.writeMem(0x998, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x790b);
        EXPECT(gbc.pc(), 0x99a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02BA
        gbc.setState(0x2126, 0x49a0, 0x1a20, 0xd8b9, 0x8fc, 0xeb23, 0x1, 0x1);
        gbc.writeMem(0x2126, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x49a0);
        EXPECT(gbc.pc(), 0x2128);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02BB
        gbc.setState(0x6bd0, 0xa174, 0x3a50, 0x4f5e, 0x87bc, 0x2054, 0x1, 0x0);
        gbc.writeMem(0x6bd0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa174);
        EXPECT(gbc.pc(), 0x6bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02BC
        gbc.setState(0x3d30, 0x2eb2, 0xbcd0, 0x3c2c, 0x230c, 0xc604, 0x0, 0x1);
        gbc.writeMem(0x3d30, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2eb2);
        EXPECT(gbc.pc(), 0x3d32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02BD
        gbc.setState(0xf8, 0xb60f, 0xb6e0, 0x24e1, 0x206c, 0xc7a4, 0x0, 0x0);
        gbc.writeMem(0xf8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb60f);
        EXPECT(gbc.pc(), 0xfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02BE
        gbc.setState(0x45e7, 0x782, 0x3a40, 0x94fe, 0x144f, 0xfce1, 0x1, 0x1);
        gbc.writeMem(0x45e7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x782);
        EXPECT(gbc.pc(), 0x45e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02BF
        gbc.setState(0xe3fb, 0x1fbb, 0x4900, 0x6466, 0x9519, 0xf1, 0x0, 0x0);
        gbc.writeMem(0xe3fb, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1fbb);
        EXPECT(gbc.pc(), 0xe3fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3fb), 0xcb);
        EXPECT(gbc.readMem(0xe3fc), 0x54);
        // CB 54 02C0
        gbc.setState(0xa05c, 0xaabd, 0x90a0, 0xb5b5, 0x55ab, 0xba71, 0x1, 0x0);
        gbc.writeMem(0xa05c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xaabd);
        EXPECT(gbc.pc(), 0xa05e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa05c), 0xcb);
        EXPECT(gbc.readMem(0xa05d), 0x54);
        // CB 54 02C1
        gbc.setState(0x6d18, 0xf953, 0x36c0, 0xd77f, 0x1186, 0x5661, 0x1, 0x1);
        gbc.writeMem(0x6d18, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf953);
        EXPECT(gbc.pc(), 0x6d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02C2
        gbc.setState(0x39c4, 0xb2fc, 0x74d0, 0x26c7, 0x64bd, 0x6b18, 0x0, 0x1);
        gbc.writeMem(0x39c4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb2fc);
        EXPECT(gbc.pc(), 0x39c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02C3
        gbc.setState(0x96cf, 0x257c, 0x64a0, 0x1c1, 0x478a, 0x4bc0, 0x0, 0x1);
        gbc.writeMem(0x96cf, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x257c);
        EXPECT(gbc.pc(), 0x96d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96cf), 0xcb);
        EXPECT(gbc.readMem(0x96d0), 0x54);
        // CB 54 02C4
        gbc.setState(0x8fc, 0x3984, 0xc6a0, 0xd9b5, 0x1b74, 0xfa7a, 0x0, 0x1);
        gbc.writeMem(0x8fc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3984);
        EXPECT(gbc.pc(), 0x8fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02C5
        gbc.setState(0xb7d3, 0x6690, 0xcb50, 0xde60, 0xd713, 0x485d, 0x1, 0x1);
        gbc.writeMem(0xb7d3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6690);
        EXPECT(gbc.pc(), 0xb7d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7d3), 0xcb);
        EXPECT(gbc.readMem(0xb7d4), 0x54);
        // CB 54 02C8
        gbc.setState(0x390b, 0xdcf7, 0xcb0, 0x113e, 0xdac7, 0x289e, 0x0, 0x1);
        gbc.writeMem(0x390b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xdcf7);
        EXPECT(gbc.pc(), 0x390d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02C9
        gbc.setState(0x2223, 0x58b9, 0xc8a0, 0x2224, 0x2954, 0x1cb8, 0x0, 0x1);
        gbc.writeMem(0x2223, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x58b9);
        EXPECT(gbc.pc(), 0x2225);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02CA
        gbc.setState(0x2f8e, 0x283, 0xea30, 0x8a93, 0x4be0, 0x1ccd, 0x0, 0x1);
        gbc.writeMem(0x2f8e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x283);
        EXPECT(gbc.pc(), 0x2f90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02CB
        gbc.setState(0xd4c4, 0x512e, 0x41c0, 0xcee, 0xcfe4, 0xac4c, 0x1, 0x0);
        gbc.writeMem(0xd4c4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x512e);
        EXPECT(gbc.pc(), 0xd4c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4c4), 0xcb);
        EXPECT(gbc.readMem(0xd4c5), 0x54);
        // CB 54 02CC
        gbc.setState(0x1a93, 0x21e4, 0x8840, 0xb6b5, 0xebc1, 0x3f6f, 0x0, 0x0);
        gbc.writeMem(0x1a93, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x21e4);
        EXPECT(gbc.pc(), 0x1a95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02CD
        gbc.setState(0xb265, 0xd064, 0x15f0, 0x604a, 0x3541, 0x7d7e, 0x0, 0x0);
        gbc.writeMem(0xb265, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd064);
        EXPECT(gbc.pc(), 0xb267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb265), 0xcb);
        EXPECT(gbc.readMem(0xb266), 0x54);
        // CB 54 02CE
        gbc.setState(0x4df7, 0x9665, 0x3550, 0xffc6, 0x770f, 0x9ac2, 0x1, 0x1);
        gbc.writeMem(0x4df7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9665);
        EXPECT(gbc.pc(), 0x4df9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02CF
        gbc.setState(0x3255, 0xf782, 0x1000, 0x3c62, 0xd9ee, 0x8049, 0x0, 0x0);
        gbc.writeMem(0x3255, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf782);
        EXPECT(gbc.pc(), 0x3257);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02D0
        gbc.setState(0x8411, 0xae94, 0x4220, 0x772c, 0xff6d, 0xecf, 0x1, 0x1);
        gbc.writeMem(0x8411, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xae94);
        EXPECT(gbc.pc(), 0x8413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8411), 0xcb);
        EXPECT(gbc.readMem(0x8412), 0x54);
        // CB 54 02D1
        gbc.setState(0xff2, 0xca07, 0x5db0, 0x388f, 0xca06, 0x4c43, 0x1, 0x0);
        gbc.writeMem(0xff2, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xca07);
        EXPECT(gbc.pc(), 0xff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02D2
        gbc.setState(0x80c9, 0xfdd3, 0x26d0, 0xffba, 0x929, 0xe091, 0x0, 0x1);
        gbc.writeMem(0x80c9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xfdd3);
        EXPECT(gbc.pc(), 0x80cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80c9), 0xcb);
        EXPECT(gbc.readMem(0x80ca), 0x54);
        // CB 54 02D3
        gbc.setState(0x116c, 0xcb36, 0xd3a0, 0xb3e9, 0xa6ab, 0x2191, 0x0, 0x0);
        gbc.writeMem(0x116c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xcb36);
        EXPECT(gbc.pc(), 0x116e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02D4
        gbc.setState(0x48c3, 0xc3a1, 0x8920, 0x3fd5, 0xf376, 0xf610, 0x1, 0x0);
        gbc.writeMem(0x48c3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc3a1);
        EXPECT(gbc.pc(), 0x48c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02D5
        gbc.setState(0x46cd, 0x5ab5, 0xb9b0, 0xf62c, 0x8bbc, 0xc801, 0x0, 0x1);
        gbc.writeMem(0x46cd, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5ab5);
        EXPECT(gbc.pc(), 0x46cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02D6
        gbc.setState(0x84fe, 0xf507, 0xfa20, 0x372f, 0xb96, 0x724d, 0x0, 0x0);
        gbc.writeMem(0x84fe, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf507);
        EXPECT(gbc.pc(), 0x8500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84fe), 0xcb);
        EXPECT(gbc.readMem(0x84ff), 0x54);
        // CB 54 02D7
        gbc.setState(0x7825, 0x8f72, 0x2860, 0x19f8, 0xc89b, 0x7073, 0x1, 0x0);
        gbc.writeMem(0x7825, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8f72);
        EXPECT(gbc.pc(), 0x7827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02D9
        gbc.setState(0xae08, 0x87e4, 0x4850, 0x38d0, 0xeb0c, 0x9913, 0x1, 0x0);
        gbc.writeMem(0xae08, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x87e4);
        EXPECT(gbc.pc(), 0xae0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae08), 0xcb);
        EXPECT(gbc.readMem(0xae09), 0x54);
        // CB 54 02DA
        gbc.setState(0x2c4c, 0xa366, 0xfcb0, 0x69dd, 0x94c4, 0x49d1, 0x1, 0x1);
        gbc.writeMem(0x2c4c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa366);
        EXPECT(gbc.pc(), 0x2c4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02DB
        gbc.setState(0xab23, 0x2233, 0x650, 0xfecc, 0x663d, 0x9ad3, 0x0, 0x0);
        gbc.writeMem(0xab23, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2233);
        EXPECT(gbc.pc(), 0xab25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab23), 0xcb);
        EXPECT(gbc.readMem(0xab24), 0x54);
        // CB 54 02DC
        gbc.setState(0x57a4, 0x667f, 0x89e0, 0x33bb, 0xba6b, 0xa024, 0x0, 0x1);
        gbc.writeMem(0x57a4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x667f);
        EXPECT(gbc.pc(), 0x57a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02DD
        gbc.setState(0x1ca7, 0xb66, 0x5f00, 0xa601, 0xd2c4, 0xc907, 0x0, 0x1);
        gbc.writeMem(0x1ca7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb66);
        EXPECT(gbc.pc(), 0x1ca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02DF
        gbc.setState(0x5dc1, 0xdec, 0x1f00, 0x8157, 0xcbe4, 0xe66e, 0x0, 0x1);
        gbc.writeMem(0x5dc1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xdec);
        EXPECT(gbc.pc(), 0x5dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02E0
        gbc.setState(0xb320, 0xd06, 0x2cd0, 0xe3de, 0xc77, 0xef6, 0x1, 0x1);
        gbc.writeMem(0xb320, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd06);
        EXPECT(gbc.pc(), 0xb322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb320), 0xcb);
        EXPECT(gbc.readMem(0xb321), 0x54);
        // CB 54 02E1
        gbc.setState(0xa7c3, 0x9d34, 0x1cb0, 0xeb4d, 0x1406, 0x4a78, 0x1, 0x1);
        gbc.writeMem(0xa7c3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9d34);
        EXPECT(gbc.pc(), 0xa7c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7c3), 0xcb);
        EXPECT(gbc.readMem(0xa7c4), 0x54);
        // CB 54 02E2
        gbc.setState(0x2094, 0xbeca, 0xfa60, 0x8e9e, 0xcdec, 0x4f25, 0x0, 0x1);
        gbc.writeMem(0x2094, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xbeca);
        EXPECT(gbc.pc(), 0x2096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02E3
        gbc.setState(0x1dcf, 0xb58c, 0x27c0, 0x763a, 0xcd7a, 0xd501, 0x1, 0x1);
        gbc.writeMem(0x1dcf, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb58c);
        EXPECT(gbc.pc(), 0x1dd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02E4
        gbc.setState(0x2b7e, 0x18de, 0xcf30, 0xbaba, 0x97c, 0xad6a, 0x1, 0x0);
        gbc.writeMem(0x2b7e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x18de);
        EXPECT(gbc.pc(), 0x2b80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02E5
        gbc.setState(0x901f, 0xcc1b, 0x46e0, 0x1a3f, 0x9eb8, 0xd66c, 0x0, 0x0);
        gbc.writeMem(0x901f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcc1b);
        EXPECT(gbc.pc(), 0x9021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x901f), 0xcb);
        EXPECT(gbc.readMem(0x9020), 0x54);
        // CB 54 02E6
        gbc.setState(0xde2a, 0x2a49, 0x9d50, 0x6ba, 0x3528, 0x819d, 0x0, 0x1);
        gbc.writeMem(0xde2a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2a49);
        EXPECT(gbc.pc(), 0xde2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde2a), 0xcb);
        EXPECT(gbc.readMem(0xde2b), 0x54);
        // CB 54 02E7
        gbc.setState(0x709c, 0x5fc7, 0x7d90, 0x5cd9, 0x206a, 0x94f6, 0x0, 0x1);
        gbc.writeMem(0x709c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5fc7);
        EXPECT(gbc.pc(), 0x709e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02E8
        gbc.setState(0x3691, 0x4109, 0xadf0, 0x4823, 0x2479, 0x88ed, 0x1, 0x1);
        gbc.writeMem(0x3691, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4109);
        EXPECT(gbc.pc(), 0x3693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02E9
        gbc.setState(0xc76e, 0x1020, 0x7ca0, 0x4de0, 0xcd4b, 0x59e1, 0x0, 0x0);
        gbc.writeMem(0xc76e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1020);
        EXPECT(gbc.pc(), 0xc770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc76e), 0xcb);
        EXPECT(gbc.readMem(0xc76f), 0x54);
        // CB 54 02EA
        gbc.setState(0xbe9f, 0x8efc, 0xc9e0, 0x44e4, 0xdb4b, 0xa047, 0x0, 0x0);
        gbc.writeMem(0xbe9f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8efc);
        EXPECT(gbc.pc(), 0xbea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe9f), 0xcb);
        EXPECT(gbc.readMem(0xbea0), 0x54);
        // CB 54 02EB
        gbc.setState(0x484, 0xe570, 0x9320, 0x76c6, 0x8467, 0x8a1c, 0x0, 0x1);
        gbc.writeMem(0x484, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe570);
        EXPECT(gbc.pc(), 0x486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02EC
        gbc.setState(0x2849, 0x2697, 0x8b40, 0x7ac7, 0xd2df, 0x4cbc, 0x1, 0x0);
        gbc.writeMem(0x2849, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2697);
        EXPECT(gbc.pc(), 0x284b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02ED
        gbc.setState(0xc768, 0xbedb, 0x5360, 0x543e, 0x2f86, 0x3636, 0x1, 0x1);
        gbc.writeMem(0xc768, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xbedb);
        EXPECT(gbc.pc(), 0xc76a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc768), 0xcb);
        EXPECT(gbc.readMem(0xc769), 0x54);
        // CB 54 02EE
        gbc.setState(0xa6e6, 0x371e, 0x33a0, 0x83e3, 0xbc8b, 0x25e1, 0x0, 0x0);
        gbc.writeMem(0xa6e6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x371e);
        EXPECT(gbc.pc(), 0xa6e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6e6), 0xcb);
        EXPECT(gbc.readMem(0xa6e7), 0x54);
        // CB 54 02EF
        gbc.setState(0x59f0, 0x3eac, 0x7040, 0xa460, 0xd4c3, 0x8692, 0x0, 0x1);
        gbc.writeMem(0x59f0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3eac);
        EXPECT(gbc.pc(), 0x59f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02F0
        gbc.setState(0x5229, 0x52fc, 0x54c0, 0x3d85, 0xd3ec, 0x14f3, 0x1, 0x1);
        gbc.writeMem(0x5229, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x52fc);
        EXPECT(gbc.pc(), 0x522b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02F1
        gbc.setState(0x5be8, 0x9c70, 0x26a0, 0x5dfa, 0xc198, 0xaa7c, 0x1, 0x0);
        gbc.writeMem(0x5be8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9c70);
        EXPECT(gbc.pc(), 0x5bea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02F2
        gbc.setState(0xa797, 0x1497, 0x99c0, 0x20fd, 0x78a6, 0xce46, 0x1, 0x1);
        gbc.writeMem(0xa797, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1497);
        EXPECT(gbc.pc(), 0xa799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa797), 0xcb);
        EXPECT(gbc.readMem(0xa798), 0x54);
        // CB 54 02F3
        gbc.setState(0x3eea, 0x1494, 0x47d0, 0x3ce6, 0x66a9, 0x21bd, 0x1, 0x1);
        gbc.writeMem(0x3eea, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1494);
        EXPECT(gbc.pc(), 0x3eec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02F4
        gbc.setState(0xde6e, 0x95b3, 0x6ee0, 0xc554, 0x3a42, 0xd311, 0x1, 0x1);
        gbc.writeMem(0xde6e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x95b3);
        EXPECT(gbc.pc(), 0xde70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde6e), 0xcb);
        EXPECT(gbc.readMem(0xde6f), 0x54);
        // CB 54 02F5
        gbc.setState(0xda42, 0x1f04, 0x4f60, 0xc5d0, 0x8080, 0x4099, 0x0, 0x0);
        gbc.writeMem(0xda42, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1f04);
        EXPECT(gbc.pc(), 0xda44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda42), 0xcb);
        EXPECT(gbc.readMem(0xda43), 0x54);
        // CB 54 02F6
        gbc.setState(0x458, 0xd271, 0xc880, 0x304, 0xbb73, 0x8d95, 0x1, 0x1);
        gbc.writeMem(0x458, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd271);
        EXPECT(gbc.pc(), 0x45a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02F7
        gbc.setState(0xa0c1, 0x6526, 0xa9f0, 0xb097, 0x1b9f, 0xdc48, 0x0, 0x0);
        gbc.writeMem(0xa0c1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6526);
        EXPECT(gbc.pc(), 0xa0c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0c1), 0xcb);
        EXPECT(gbc.readMem(0xa0c2), 0x54);
        // CB 54 02F8
        gbc.setState(0x5ff3, 0xa0c6, 0xdd60, 0xee1e, 0xf2bf, 0x9b87, 0x1, 0x0);
        gbc.writeMem(0x5ff3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa0c6);
        EXPECT(gbc.pc(), 0x5ff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02F9
        gbc.setState(0x28d8, 0xf0b6, 0xd890, 0xeb90, 0x7280, 0xd21e, 0x1, 0x1);
        gbc.writeMem(0x28d8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf0b6);
        EXPECT(gbc.pc(), 0x28da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 02FA
        gbc.setState(0xd6ad, 0x321c, 0x8e0, 0x777d, 0x7ded, 0x296, 0x1, 0x0);
        gbc.writeMem(0xd6ad, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x321c);
        EXPECT(gbc.pc(), 0xd6af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ad), 0xcb);
        EXPECT(gbc.readMem(0xd6ae), 0x54);
        // CB 54 02FB
        gbc.setState(0x8e6f, 0x1c69, 0x3c60, 0x7b32, 0x5184, 0x725e, 0x0, 0x0);
        gbc.writeMem(0x8e6f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1c69);
        EXPECT(gbc.pc(), 0x8e71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e6f), 0xcb);
        EXPECT(gbc.readMem(0x8e70), 0x54);
        // CB 54 02FC
        gbc.setState(0xcc48, 0xef1d, 0x1170, 0x1aeb, 0xf4b5, 0xac06, 0x1, 0x0);
        gbc.writeMem(0xcc48, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xef1d);
        EXPECT(gbc.pc(), 0xcc4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc48), 0xcb);
        EXPECT(gbc.readMem(0xcc49), 0x54);
        // CB 54 02FD
        gbc.setState(0x8166, 0xbcd0, 0x8db0, 0x10fe, 0xb9c9, 0x3d35, 0x1, 0x1);
        gbc.writeMem(0x8166, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xbcd0);
        EXPECT(gbc.pc(), 0x8168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8166), 0xcb);
        EXPECT(gbc.readMem(0x8167), 0x54);
        // CB 54 02FE
        gbc.setState(0x1be9, 0x6bc6, 0x7ee0, 0x7, 0x2cd4, 0x1e38, 0x0, 0x1);
        gbc.writeMem(0x1be9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6bc6);
        EXPECT(gbc.pc(), 0x1beb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 02FF
        gbc.setState(0x46f, 0xa793, 0x7480, 0x958e, 0x9a4d, 0x4097, 0x0, 0x1);
        gbc.writeMem(0x46f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa793);
        EXPECT(gbc.pc(), 0x471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0300
        gbc.setState(0x555f, 0xdb4e, 0x5b10, 0xbb5b, 0xc299, 0xb45b, 0x1, 0x1);
        gbc.writeMem(0x555f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xdb4e);
        EXPECT(gbc.pc(), 0x5561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0301
        gbc.setState(0xdbe1, 0x7b3c, 0xba50, 0xb87b, 0x77a9, 0x7663, 0x0, 0x0);
        gbc.writeMem(0xdbe1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7b3c);
        EXPECT(gbc.pc(), 0xdbe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe1), 0xcb);
        EXPECT(gbc.readMem(0xdbe2), 0x54);
        // CB 54 0302
        gbc.setState(0x74a6, 0x162f, 0x9df0, 0x84a1, 0x64ab, 0x39ff, 0x0, 0x1);
        gbc.writeMem(0x74a6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x162f);
        EXPECT(gbc.pc(), 0x74a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0304
        gbc.setState(0xe3a, 0xce8f, 0x5b50, 0xc2ad, 0xe12, 0xec8d, 0x1, 0x1);
        gbc.writeMem(0xe3a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xce8f);
        EXPECT(gbc.pc(), 0xe3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0305
        gbc.setState(0xabb9, 0x9fd0, 0x2860, 0x7a42, 0x78ba, 0x9b33, 0x1, 0x0);
        gbc.writeMem(0xabb9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9fd0);
        EXPECT(gbc.pc(), 0xabbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb9), 0xcb);
        EXPECT(gbc.readMem(0xabba), 0x54);
        // CB 54 0306
        gbc.setState(0x87d, 0xba5a, 0x7070, 0xcaf5, 0xe464, 0xbd79, 0x0, 0x0);
        gbc.writeMem(0x87d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xba5a);
        EXPECT(gbc.pc(), 0x87f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0307
        gbc.setState(0xd010, 0x1039, 0x5920, 0xacf5, 0x45be, 0xadba, 0x1, 0x0);
        gbc.writeMem(0xd010, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1039);
        EXPECT(gbc.pc(), 0xd012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd010), 0xcb);
        EXPECT(gbc.readMem(0xd011), 0x54);
        // CB 54 0308
        gbc.setState(0xaf3a, 0x299b, 0x8ff0, 0x5bd3, 0xb949, 0x8ba0, 0x0, 0x0);
        gbc.writeMem(0xaf3a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x299b);
        EXPECT(gbc.pc(), 0xaf3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf3a), 0xcb);
        EXPECT(gbc.readMem(0xaf3b), 0x54);
        // CB 54 030B
        gbc.setState(0xdae8, 0x6037, 0xf800, 0xb4be, 0x3456, 0x622d, 0x0, 0x0);
        gbc.writeMem(0xdae8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6037);
        EXPECT(gbc.pc(), 0xdaea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdae8), 0xcb);
        EXPECT(gbc.readMem(0xdae9), 0x54);
        // CB 54 030C
        gbc.setState(0x708f, 0x3592, 0x9f40, 0xc251, 0x3eca, 0xb64e, 0x0, 0x1);
        gbc.writeMem(0x708f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3592);
        EXPECT(gbc.pc(), 0x7091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 030D
        gbc.setState(0x9d15, 0x760, 0xbf50, 0xd139, 0xc49, 0x14e0, 0x0, 0x1);
        gbc.writeMem(0x9d15, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x760);
        EXPECT(gbc.pc(), 0x9d17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d15), 0xcb);
        EXPECT(gbc.readMem(0x9d16), 0x54);
        // CB 54 030E
        gbc.setState(0x9bf, 0x99e7, 0xac20, 0x5d1d, 0x2294, 0xabc1, 0x1, 0x0);
        gbc.writeMem(0x9bf, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x99e7);
        EXPECT(gbc.pc(), 0x9c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 030F
        gbc.setState(0xea99, 0x8f, 0x36f0, 0xfa71, 0x5363, 0x5597, 0x1, 0x1);
        gbc.writeMem(0xea99, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8f);
        EXPECT(gbc.pc(), 0xea9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea99), 0xcb);
        EXPECT(gbc.readMem(0xea9a), 0x54);
        // CB 54 0310
        gbc.setState(0x2dd5, 0x7aa9, 0x3de0, 0xbe8c, 0xa89c, 0x86ec, 0x0, 0x0);
        gbc.writeMem(0x2dd5, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7aa9);
        EXPECT(gbc.pc(), 0x2dd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0311
        gbc.setState(0x346, 0x9c22, 0x2d10, 0x724c, 0xeb44, 0x874a, 0x1, 0x0);
        gbc.writeMem(0x346, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9c22);
        EXPECT(gbc.pc(), 0x348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0312
        gbc.setState(0xcd7a, 0x6d49, 0x9d60, 0x1991, 0xdabe, 0x21e5, 0x1, 0x1);
        gbc.writeMem(0xcd7a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6d49);
        EXPECT(gbc.pc(), 0xcd7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd7a), 0xcb);
        EXPECT(gbc.readMem(0xcd7b), 0x54);
        // CB 54 0313
        gbc.setState(0x5501, 0xae7, 0x2510, 0x456f, 0xd102, 0xf5af, 0x0, 0x1);
        gbc.writeMem(0x5501, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xae7);
        EXPECT(gbc.pc(), 0x5503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0314
        gbc.setState(0xa12c, 0xd620, 0xc480, 0xb24c, 0xc73f, 0xc6b, 0x1, 0x1);
        gbc.writeMem(0xa12c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd620);
        EXPECT(gbc.pc(), 0xa12e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa12c), 0xcb);
        EXPECT(gbc.readMem(0xa12d), 0x54);
        // CB 54 0315
        gbc.setState(0xe086, 0x16f2, 0x5710, 0x56f7, 0xff92, 0xda26, 0x0, 0x1);
        gbc.writeMem(0xe086, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x16f2);
        EXPECT(gbc.pc(), 0xe088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe086), 0xcb);
        EXPECT(gbc.readMem(0xe087), 0x54);
        // CB 54 0316
        gbc.setState(0xb716, 0x50b0, 0x33b0, 0xb104, 0xd06a, 0x184c, 0x1, 0x0);
        gbc.writeMem(0xb716, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x50b0);
        EXPECT(gbc.pc(), 0xb718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb716), 0xcb);
        EXPECT(gbc.readMem(0xb717), 0x54);
        // CB 54 0317
        gbc.setState(0xb5c7, 0xb59f, 0xf400, 0x266b, 0x2db4, 0xd850, 0x0, 0x1);
        gbc.writeMem(0xb5c7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb59f);
        EXPECT(gbc.pc(), 0xb5c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c7), 0xcb);
        EXPECT(gbc.readMem(0xb5c8), 0x54);
        // CB 54 0318
        gbc.setState(0xb89f, 0xbe72, 0xeb50, 0x30b5, 0xcfe2, 0xc088, 0x0, 0x1);
        gbc.writeMem(0xb89f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xbe72);
        EXPECT(gbc.pc(), 0xb8a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb89f), 0xcb);
        EXPECT(gbc.readMem(0xb8a0), 0x54);
        // CB 54 0319
        gbc.setState(0x2e75, 0x9b3d, 0xe9b0, 0xf08c, 0x3991, 0x55e3, 0x1, 0x0);
        gbc.writeMem(0x2e75, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9b3d);
        EXPECT(gbc.pc(), 0x2e77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 031A
        gbc.setState(0xba21, 0x3d08, 0xbc50, 0xc89b, 0x5b18, 0x6c4b, 0x1, 0x1);
        gbc.writeMem(0xba21, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3d08);
        EXPECT(gbc.pc(), 0xba23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba21), 0xcb);
        EXPECT(gbc.readMem(0xba22), 0x54);
        // CB 54 031B
        gbc.setState(0x74b1, 0x945e, 0xb730, 0x554a, 0x6d6, 0xe331, 0x1, 0x1);
        gbc.writeMem(0x74b1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x945e);
        EXPECT(gbc.pc(), 0x74b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 031C
        gbc.setState(0x1de3, 0x901d, 0x8500, 0x8754, 0x8b3d, 0xb611, 0x0, 0x1);
        gbc.writeMem(0x1de3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x901d);
        EXPECT(gbc.pc(), 0x1de5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 031D
        gbc.setState(0x76af, 0x67b6, 0xa120, 0xb783, 0xfe96, 0xfb9, 0x1, 0x1);
        gbc.writeMem(0x76af, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x67b6);
        EXPECT(gbc.pc(), 0x76b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 031F
        gbc.setState(0xc926, 0xccbb, 0xb050, 0x39b, 0xe6b8, 0xc775, 0x1, 0x0);
        gbc.writeMem(0xc926, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xccbb);
        EXPECT(gbc.pc(), 0xc928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc926), 0xcb);
        EXPECT(gbc.readMem(0xc927), 0x54);
        // CB 54 0320
        gbc.setState(0x13e8, 0x996d, 0xa2a0, 0xa764, 0x30f7, 0x9199, 0x1, 0x0);
        gbc.writeMem(0x13e8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x996d);
        EXPECT(gbc.pc(), 0x13ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0321
        gbc.setState(0x17ab, 0x608a, 0x9f40, 0xa9db, 0x96c2, 0x1419, 0x0, 0x0);
        gbc.writeMem(0x17ab, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x608a);
        EXPECT(gbc.pc(), 0x17ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0322
        gbc.setState(0x681d, 0x569b, 0xf7b0, 0xad52, 0x5536, 0xf094, 0x0, 0x0);
        gbc.writeMem(0x681d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x569b);
        EXPECT(gbc.pc(), 0x681f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0323
        gbc.setState(0xa475, 0xbb94, 0xd340, 0xae3f, 0xdd18, 0xcb11, 0x1, 0x0);
        gbc.writeMem(0xa475, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbb94);
        EXPECT(gbc.pc(), 0xa477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa475), 0xcb);
        EXPECT(gbc.readMem(0xa476), 0x54);
        // CB 54 0324
        gbc.setState(0xf53, 0x7c4e, 0xc840, 0xe56, 0x646f, 0xc74a, 0x0, 0x0);
        gbc.writeMem(0xf53, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7c4e);
        EXPECT(gbc.pc(), 0xf55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0325
        gbc.setState(0x86a, 0x48f0, 0xf070, 0xcf14, 0x785d, 0x1376, 0x1, 0x0);
        gbc.writeMem(0x86a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x48f0);
        EXPECT(gbc.pc(), 0x86c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0326
        gbc.setState(0x9c59, 0x17d2, 0x34a0, 0x332a, 0xda8a, 0x7fab, 0x0, 0x1);
        gbc.writeMem(0x9c59, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x17d2);
        EXPECT(gbc.pc(), 0x9c5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c59), 0xcb);
        EXPECT(gbc.readMem(0x9c5a), 0x54);
        // CB 54 0327
        gbc.setState(0xe042, 0x9f23, 0xa8e0, 0x918a, 0xbd5, 0xadbb, 0x1, 0x0);
        gbc.writeMem(0xe042, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9f23);
        EXPECT(gbc.pc(), 0xe044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe042), 0xcb);
        EXPECT(gbc.readMem(0xe043), 0x54);
        // CB 54 0328
        gbc.setState(0x428, 0xc507, 0x1cd0, 0xc530, 0xf862, 0x594f, 0x0, 0x0);
        gbc.writeMem(0x428, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc507);
        EXPECT(gbc.pc(), 0x42a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0329
        gbc.setState(0x6283, 0xe7e1, 0xdbd0, 0xf8a9, 0x1d80, 0xb224, 0x0, 0x0);
        gbc.writeMem(0x6283, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe7e1);
        EXPECT(gbc.pc(), 0x6285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 032A
        gbc.setState(0xac93, 0x6e34, 0xa3f0, 0x6eee, 0x1496, 0xb00e, 0x1, 0x1);
        gbc.writeMem(0xac93, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6e34);
        EXPECT(gbc.pc(), 0xac95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac93), 0xcb);
        EXPECT(gbc.readMem(0xac94), 0x54);
        // CB 54 032B
        gbc.setState(0x551e, 0xe062, 0xef40, 0x1e73, 0x5601, 0x64cc, 0x1, 0x1);
        gbc.writeMem(0x551e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe062);
        EXPECT(gbc.pc(), 0x5520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 032C
        gbc.setState(0xc018, 0x6eb1, 0x1dc0, 0x136e, 0x7cc4, 0xa649, 0x1, 0x0);
        gbc.writeMem(0xc018, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6eb1);
        EXPECT(gbc.pc(), 0xc01a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc018), 0xcb);
        EXPECT(gbc.readMem(0xc019), 0x54);
        // CB 54 032D
        gbc.setState(0x38f2, 0x26e7, 0x2d60, 0x37d, 0x3cab, 0xb751, 0x0, 0x1);
        gbc.writeMem(0x38f2, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x26e7);
        EXPECT(gbc.pc(), 0x38f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 032E
        gbc.setState(0x140f, 0x3448, 0x1290, 0xd5e2, 0x327d, 0xf42f, 0x1, 0x0);
        gbc.writeMem(0x140f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3448);
        EXPECT(gbc.pc(), 0x1411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 032F
        gbc.setState(0xc781, 0x2a94, 0xb3f0, 0xe54, 0xa4ce, 0x5c6d, 0x1, 0x0);
        gbc.writeMem(0xc781, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2a94);
        EXPECT(gbc.pc(), 0xc783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc781), 0xcb);
        EXPECT(gbc.readMem(0xc782), 0x54);
        // CB 54 0330
        gbc.setState(0xaeae, 0x1960, 0x2b80, 0x7b0e, 0xef4a, 0xe8c3, 0x0, 0x0);
        gbc.writeMem(0xaeae, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1960);
        EXPECT(gbc.pc(), 0xaeb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeae), 0xcb);
        EXPECT(gbc.readMem(0xaeaf), 0x54);
        // CB 54 0331
        gbc.setState(0x395e, 0x771d, 0xfe40, 0x8c6d, 0x7b81, 0x27a7, 0x1, 0x1);
        gbc.writeMem(0x395e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x771d);
        EXPECT(gbc.pc(), 0x3960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0332
        gbc.setState(0x2d01, 0x4998, 0x3640, 0xbcfa, 0x6931, 0xf33f, 0x1, 0x0);
        gbc.writeMem(0x2d01, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4998);
        EXPECT(gbc.pc(), 0x2d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0333
        gbc.setState(0xcd83, 0x291a, 0xd930, 0x4da7, 0x301f, 0x1c4c, 0x1, 0x0);
        gbc.writeMem(0xcd83, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x291a);
        EXPECT(gbc.pc(), 0xcd85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd83), 0xcb);
        EXPECT(gbc.readMem(0xcd84), 0x54);
        // CB 54 0334
        gbc.setState(0x928, 0x7d92, 0xf040, 0x92be, 0xd18b, 0x104f, 0x0, 0x1);
        gbc.writeMem(0x928, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7d92);
        EXPECT(gbc.pc(), 0x92a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0335
        gbc.setState(0x5846, 0xa0a9, 0x6d40, 0x7cf4, 0x2629, 0x1fda, 0x0, 0x0);
        gbc.writeMem(0x5846, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa0a9);
        EXPECT(gbc.pc(), 0x5848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0336
        gbc.setState(0xb929, 0x76e, 0x7ef0, 0x43aa, 0x19b7, 0xcf3d, 0x0, 0x1);
        gbc.writeMem(0xb929, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x76e);
        EXPECT(gbc.pc(), 0xb92b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb929), 0xcb);
        EXPECT(gbc.readMem(0xb92a), 0x54);
        // CB 54 0337
        gbc.setState(0xd8d4, 0x3ae8, 0x2550, 0xd818, 0x801d, 0xf4df, 0x1, 0x1);
        gbc.writeMem(0xd8d4, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3ae8);
        EXPECT(gbc.pc(), 0xd8d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d4), 0xcb);
        EXPECT(gbc.readMem(0xd8d5), 0x54);
        // CB 54 0338
        gbc.setState(0xb7d, 0x4210, 0xab60, 0xb1e5, 0x94ea, 0x5004, 0x0, 0x1);
        gbc.writeMem(0xb7d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4210);
        EXPECT(gbc.pc(), 0xb7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0339
        gbc.setState(0x3d43, 0xf088, 0x9a30, 0x9f2e, 0xa4d3, 0x1b1a, 0x0, 0x0);
        gbc.writeMem(0x3d43, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf088);
        EXPECT(gbc.pc(), 0x3d45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 033A
        gbc.setState(0x72db, 0x7698, 0x2140, 0xf4ed, 0x43a2, 0x123d, 0x1, 0x0);
        gbc.writeMem(0x72db, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7698);
        EXPECT(gbc.pc(), 0x72dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 033B
        gbc.setState(0xc7a9, 0x18a8, 0x1630, 0x673c, 0xbb3c, 0x1e9a, 0x0, 0x0);
        gbc.writeMem(0xc7a9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x18a8);
        EXPECT(gbc.pc(), 0xc7ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7a9), 0xcb);
        EXPECT(gbc.readMem(0xc7aa), 0x54);
        // CB 54 033C
        gbc.setState(0x7527, 0xe5e7, 0xb980, 0x4570, 0xc1bc, 0x8b50, 0x0, 0x1);
        gbc.writeMem(0x7527, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe5e7);
        EXPECT(gbc.pc(), 0x7529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 033D
        gbc.setState(0x72c0, 0x5b51, 0xc010, 0x8ea1, 0xaffd, 0x527f, 0x1, 0x0);
        gbc.writeMem(0x72c0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5b51);
        EXPECT(gbc.pc(), 0x72c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 033E
        gbc.setState(0x2030, 0x443d, 0x3980, 0xedde, 0x98b3, 0x80a, 0x1, 0x0);
        gbc.writeMem(0x2030, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x443d);
        EXPECT(gbc.pc(), 0x2032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 033F
        gbc.setState(0xbf29, 0x445f, 0x1f70, 0x18ba, 0xd508, 0x3360, 0x0, 0x0);
        gbc.writeMem(0xbf29, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x445f);
        EXPECT(gbc.pc(), 0xbf2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf29), 0xcb);
        EXPECT(gbc.readMem(0xbf2a), 0x54);
        // CB 54 0340
        gbc.setState(0x2aed, 0xba9b, 0xd6b0, 0xc797, 0xf4a9, 0x2382, 0x0, 0x0);
        gbc.writeMem(0x2aed, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xba9b);
        EXPECT(gbc.pc(), 0x2aef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0341
        gbc.setState(0xe703, 0xf3b5, 0x8440, 0x7ce2, 0x96e5, 0xf8c6, 0x0, 0x1);
        gbc.writeMem(0xe703, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf3b5);
        EXPECT(gbc.pc(), 0xe705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe703), 0xcb);
        EXPECT(gbc.readMem(0xe704), 0x54);
        // CB 54 0342
        gbc.setState(0x8e37, 0xacb8, 0x2ae0, 0xeb5e, 0x2c8b, 0x79d1, 0x0, 0x0);
        gbc.writeMem(0x8e37, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xacb8);
        EXPECT(gbc.pc(), 0x8e39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e37), 0xcb);
        EXPECT(gbc.readMem(0x8e38), 0x54);
        // CB 54 0343
        gbc.setState(0x6cd9, 0x51f6, 0x41c0, 0x6b9b, 0x67d4, 0x6eea, 0x1, 0x1);
        gbc.writeMem(0x6cd9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x51f6);
        EXPECT(gbc.pc(), 0x6cdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0344
        gbc.setState(0x788c, 0x65de, 0x64c0, 0x9c58, 0x7611, 0xaa4c, 0x1, 0x1);
        gbc.writeMem(0x788c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x65de);
        EXPECT(gbc.pc(), 0x788e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0345
        gbc.setState(0xd9dd, 0xb88c, 0x3e0, 0xc74b, 0xe9dd, 0x5b7a, 0x0, 0x0);
        gbc.writeMem(0xd9dd, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb88c);
        EXPECT(gbc.pc(), 0xd9df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9dd), 0xcb);
        EXPECT(gbc.readMem(0xd9de), 0x54);
        // CB 54 0346
        gbc.setState(0x1e71, 0x7c0b, 0x7440, 0xce32, 0xf10f, 0x45a8, 0x0, 0x0);
        gbc.writeMem(0x1e71, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7c0b);
        EXPECT(gbc.pc(), 0x1e73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0348
        gbc.setState(0x6438, 0xbb25, 0x9aa0, 0x1dfb, 0x8756, 0x47e1, 0x1, 0x0);
        gbc.writeMem(0x6438, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xbb25);
        EXPECT(gbc.pc(), 0x643a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0349
        gbc.setState(0x8b87, 0x59, 0x8af0, 0xd093, 0x10eb, 0x7ff2, 0x1, 0x0);
        gbc.writeMem(0x8b87, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x59);
        EXPECT(gbc.pc(), 0x8b89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b87), 0xcb);
        EXPECT(gbc.readMem(0x8b88), 0x54);
        // CB 54 034A
        gbc.setState(0xec4f, 0x6c2, 0xfb00, 0x680b, 0x198b, 0x517b, 0x1, 0x0);
        gbc.writeMem(0xec4f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6c2);
        EXPECT(gbc.pc(), 0xec51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec4f), 0xcb);
        EXPECT(gbc.readMem(0xec50), 0x54);
        // CB 54 034B
        gbc.setState(0x7e5e, 0x3dee, 0x8d80, 0xabcb, 0xd109, 0xf1e0, 0x0, 0x1);
        gbc.writeMem(0x7e5e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3dee);
        EXPECT(gbc.pc(), 0x7e60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 034C
        gbc.setState(0x838f, 0xf938, 0xfa70, 0xaf8b, 0x27ee, 0x6848, 0x0, 0x0);
        gbc.writeMem(0x838f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf938);
        EXPECT(gbc.pc(), 0x8391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838f), 0xcb);
        EXPECT(gbc.readMem(0x8390), 0x54);
        // CB 54 034D
        gbc.setState(0xa387, 0x920d, 0xbb00, 0x9481, 0x3060, 0xdce3, 0x0, 0x0);
        gbc.writeMem(0xa387, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x920d);
        EXPECT(gbc.pc(), 0xa389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa387), 0xcb);
        EXPECT(gbc.readMem(0xa388), 0x54);
        // CB 54 034E
        gbc.setState(0xc0d1, 0x678a, 0x54d0, 0x1fe4, 0x660d, 0xc5d, 0x0, 0x0);
        gbc.writeMem(0xc0d1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x678a);
        EXPECT(gbc.pc(), 0xc0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0d1), 0xcb);
        EXPECT(gbc.readMem(0xc0d2), 0x54);
        // CB 54 034F
        gbc.setState(0xb719, 0x8d53, 0x1f0, 0x93ae, 0x9bc7, 0x6798, 0x1, 0x1);
        gbc.writeMem(0xb719, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8d53);
        EXPECT(gbc.pc(), 0xb71b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb719), 0xcb);
        EXPECT(gbc.readMem(0xb71a), 0x54);
        // CB 54 0350
        gbc.setState(0xa354, 0x4943, 0x2ef0, 0x5217, 0xa65a, 0x68a2, 0x1, 0x0);
        gbc.writeMem(0xa354, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4943);
        EXPECT(gbc.pc(), 0xa356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa354), 0xcb);
        EXPECT(gbc.readMem(0xa355), 0x54);
        // CB 54 0351
        gbc.setState(0x13ce, 0xbf51, 0x1280, 0xddf4, 0x59ca, 0xf476, 0x0, 0x1);
        gbc.writeMem(0x13ce, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xbf51);
        EXPECT(gbc.pc(), 0x13d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0352
        gbc.setState(0xd10c, 0x7317, 0xed0, 0x32ef, 0x3e42, 0x9190, 0x1, 0x1);
        gbc.writeMem(0xd10c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7317);
        EXPECT(gbc.pc(), 0xd10e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd10c), 0xcb);
        EXPECT(gbc.readMem(0xd10d), 0x54);
        // CB 54 0353
        gbc.setState(0x9c0a, 0xb76f, 0x7cf0, 0xf249, 0xb9ec, 0x4313, 0x0, 0x1);
        gbc.writeMem(0x9c0a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb76f);
        EXPECT(gbc.pc(), 0x9c0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c0a), 0xcb);
        EXPECT(gbc.readMem(0x9c0b), 0x54);
        // CB 54 0354
        gbc.setState(0x7e84, 0x787b, 0x9f0, 0x5e73, 0x104a, 0xd332, 0x0, 0x1);
        gbc.writeMem(0x7e84, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x787b);
        EXPECT(gbc.pc(), 0x7e86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0355
        gbc.setState(0xb23b, 0xb575, 0x3150, 0xc7d3, 0x3da7, 0x9a60, 0x1, 0x0);
        gbc.writeMem(0xb23b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb575);
        EXPECT(gbc.pc(), 0xb23d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb23b), 0xcb);
        EXPECT(gbc.readMem(0xb23c), 0x54);
        // CB 54 0356
        gbc.setState(0x9671, 0xeb48, 0xb550, 0xbbbc, 0x82c7, 0xbeff, 0x1, 0x1);
        gbc.writeMem(0x9671, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xeb48);
        EXPECT(gbc.pc(), 0x9673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9671), 0xcb);
        EXPECT(gbc.readMem(0x9672), 0x54);
        // CB 54 0357
        gbc.setState(0xc5ce, 0xd5b1, 0xa190, 0x315a, 0xad74, 0x6701, 0x1, 0x1);
        gbc.writeMem(0xc5ce, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd5b1);
        EXPECT(gbc.pc(), 0xc5d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5ce), 0xcb);
        EXPECT(gbc.readMem(0xc5cf), 0x54);
        // CB 54 0358
        gbc.setState(0x2a3f, 0xf94, 0x49a0, 0xd580, 0x5595, 0x8c99, 0x0, 0x0);
        gbc.writeMem(0x2a3f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf94);
        EXPECT(gbc.pc(), 0x2a41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0359
        gbc.setState(0x892b, 0xfe68, 0x3410, 0xd50b, 0xab22, 0x44fe, 0x0, 0x0);
        gbc.writeMem(0x892b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xfe68);
        EXPECT(gbc.pc(), 0x892d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x892b), 0xcb);
        EXPECT(gbc.readMem(0x892c), 0x54);
        // CB 54 035A
        gbc.setState(0x4f4f, 0xb3be, 0x4e50, 0x727d, 0x304a, 0xd159, 0x1, 0x0);
        gbc.writeMem(0x4f4f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb3be);
        EXPECT(gbc.pc(), 0x4f51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 035B
        gbc.setState(0x6d7d, 0x6ab9, 0xa6b0, 0xeebc, 0xf880, 0xbc06, 0x1, 0x1);
        gbc.writeMem(0x6d7d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6ab9);
        EXPECT(gbc.pc(), 0x6d7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 035C
        gbc.setState(0xdd50, 0x7e04, 0xa850, 0x367d, 0x657e, 0x59a9, 0x1, 0x1);
        gbc.writeMem(0xdd50, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7e04);
        EXPECT(gbc.pc(), 0xdd52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd50), 0xcb);
        EXPECT(gbc.readMem(0xdd51), 0x54);
        // CB 54 035D
        gbc.setState(0x1c1a, 0xa9ba, 0x5950, 0xc116, 0xe38f, 0xf52a, 0x0, 0x1);
        gbc.writeMem(0x1c1a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa9ba);
        EXPECT(gbc.pc(), 0x1c1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 035E
        gbc.setState(0x7f3f, 0x2254, 0x2440, 0xc31f, 0x85ac, 0x7694, 0x1, 0x0);
        gbc.writeMem(0x7f3f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2254);
        EXPECT(gbc.pc(), 0x7f41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 035F
        gbc.setState(0x38c1, 0x30e, 0x5980, 0xb683, 0xf971, 0x6c5, 0x1, 0x1);
        gbc.writeMem(0x38c1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x30e);
        EXPECT(gbc.pc(), 0x38c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0360
        gbc.setState(0xdcb5, 0xf0e4, 0x11c0, 0x37d7, 0x51, 0x4f85, 0x1, 0x0);
        gbc.writeMem(0xdcb5, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf0e4);
        EXPECT(gbc.pc(), 0xdcb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb5), 0xcb);
        EXPECT(gbc.readMem(0xdcb6), 0x54);
        // CB 54 0361
        gbc.setState(0x62fa, 0x9611, 0x4e0, 0xa9d9, 0x402b, 0xd305, 0x0, 0x1);
        gbc.writeMem(0x62fa, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9611);
        EXPECT(gbc.pc(), 0x62fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0362
        gbc.setState(0x1a8c, 0x3cd2, 0xd700, 0xbaee, 0x12bf, 0xf5f7, 0x0, 0x0);
        gbc.writeMem(0x1a8c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3cd2);
        EXPECT(gbc.pc(), 0x1a8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0363
        gbc.setState(0xd91d, 0xe9c2, 0xb890, 0xa473, 0x26d0, 0x5017, 0x0, 0x0);
        gbc.writeMem(0xd91d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe9c2);
        EXPECT(gbc.pc(), 0xd91f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd91d), 0xcb);
        EXPECT(gbc.readMem(0xd91e), 0x54);
        // CB 54 0364
        gbc.setState(0x665c, 0x5177, 0xe370, 0x344b, 0x30ac, 0xf8b5, 0x0, 0x0);
        gbc.writeMem(0x665c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5177);
        EXPECT(gbc.pc(), 0x665e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0365
        gbc.setState(0x92e1, 0xa406, 0x5660, 0xcbf5, 0x6de3, 0xd1e1, 0x1, 0x1);
        gbc.writeMem(0x92e1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa406);
        EXPECT(gbc.pc(), 0x92e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e1), 0xcb);
        EXPECT(gbc.readMem(0x92e2), 0x54);
        // CB 54 0366
        gbc.setState(0x37c8, 0xf853, 0x3620, 0x831f, 0x158c, 0xfca2, 0x1, 0x0);
        gbc.writeMem(0x37c8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf853);
        EXPECT(gbc.pc(), 0x37ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0367
        gbc.setState(0xbc08, 0x6a6d, 0x7700, 0x2643, 0xd764, 0xef3f, 0x0, 0x0);
        gbc.writeMem(0xbc08, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6a6d);
        EXPECT(gbc.pc(), 0xbc0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc08), 0xcb);
        EXPECT(gbc.readMem(0xbc09), 0x54);
        // CB 54 0368
        gbc.setState(0xae11, 0x410e, 0x7de0, 0x6133, 0x869e, 0xd103, 0x0, 0x0);
        gbc.writeMem(0xae11, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x410e);
        EXPECT(gbc.pc(), 0xae13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae11), 0xcb);
        EXPECT(gbc.readMem(0xae12), 0x54);
        // CB 54 0369
        gbc.setState(0xcc9d, 0x7275, 0x780, 0xe860, 0xb678, 0xb04b, 0x1, 0x1);
        gbc.writeMem(0xcc9d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7275);
        EXPECT(gbc.pc(), 0xcc9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc9d), 0xcb);
        EXPECT(gbc.readMem(0xcc9e), 0x54);
        // CB 54 036A
        gbc.setState(0xe8cc, 0xcb31, 0x2fb0, 0xd511, 0x7831, 0xad4b, 0x0, 0x1);
        gbc.writeMem(0xe8cc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xcb31);
        EXPECT(gbc.pc(), 0xe8ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8cc), 0xcb);
        EXPECT(gbc.readMem(0xe8cd), 0x54);
        // CB 54 036B
        gbc.setState(0xe9d, 0x2e48, 0x85b0, 0xba4d, 0x7c79, 0x75b1, 0x0, 0x0);
        gbc.writeMem(0xe9d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2e48);
        EXPECT(gbc.pc(), 0xe9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 036C
        gbc.setState(0x7206, 0x3567, 0xfb80, 0x1f6a, 0x6c37, 0x605a, 0x0, 0x0);
        gbc.writeMem(0x7206, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3567);
        EXPECT(gbc.pc(), 0x7208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 036D
        gbc.setState(0xd671, 0x2f37, 0xeb90, 0x701a, 0x16fe, 0x3d77, 0x0, 0x1);
        gbc.writeMem(0xd671, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2f37);
        EXPECT(gbc.pc(), 0xd673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd671), 0xcb);
        EXPECT(gbc.readMem(0xd672), 0x54);
        // CB 54 036E
        gbc.setState(0x238b, 0x55ec, 0x39e0, 0xa272, 0x63b9, 0x3efa, 0x1, 0x1);
        gbc.writeMem(0x238b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x55ec);
        EXPECT(gbc.pc(), 0x238d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0370
        gbc.setState(0x8a9f, 0xbc0c, 0x5f00, 0xd4d0, 0x9651, 0x3a9a, 0x1, 0x0);
        gbc.writeMem(0x8a9f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbc0c);
        EXPECT(gbc.pc(), 0x8aa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a9f), 0xcb);
        EXPECT(gbc.readMem(0x8aa0), 0x54);
        // CB 54 0371
        gbc.setState(0x134c, 0x5ce0, 0xabb0, 0x38e3, 0xf0f5, 0x2c3c, 0x1, 0x1);
        gbc.writeMem(0x134c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5ce0);
        EXPECT(gbc.pc(), 0x134e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0372
        gbc.setState(0x161b, 0x3be2, 0xf780, 0xcbc2, 0xbd27, 0x3b4a, 0x1, 0x1);
        gbc.writeMem(0x161b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3be2);
        EXPECT(gbc.pc(), 0x161d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0373
        gbc.setState(0x6ca1, 0xb6e5, 0xfb70, 0x8d7a, 0xe7dd, 0x52cb, 0x1, 0x1);
        gbc.writeMem(0x6ca1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb6e5);
        EXPECT(gbc.pc(), 0x6ca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0374
        gbc.setState(0x3cac, 0xe7eb, 0xb380, 0x8113, 0x9121, 0x9d96, 0x0, 0x0);
        gbc.writeMem(0x3cac, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe7eb);
        EXPECT(gbc.pc(), 0x3cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0375
        gbc.setState(0x159c, 0xcb71, 0xc910, 0x71d5, 0x3958, 0xaa6, 0x1, 0x0);
        gbc.writeMem(0x159c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xcb71);
        EXPECT(gbc.pc(), 0x159e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0376
        gbc.setState(0x1a46, 0xdba0, 0xe60, 0xc3f9, 0xeff3, 0xe45a, 0x0, 0x1);
        gbc.writeMem(0x1a46, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdba0);
        EXPECT(gbc.pc(), 0x1a48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0377
        gbc.setState(0xa0db, 0x2b72, 0xed70, 0x8e5b, 0x2c36, 0x3b7d, 0x1, 0x1);
        gbc.writeMem(0xa0db, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2b72);
        EXPECT(gbc.pc(), 0xa0dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0db), 0xcb);
        EXPECT(gbc.readMem(0xa0dc), 0x54);
        // CB 54 0378
        gbc.setState(0x53d7, 0xa856, 0x2c70, 0xd90e, 0xfc2f, 0x8c3f, 0x0, 0x0);
        gbc.writeMem(0x53d7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa856);
        EXPECT(gbc.pc(), 0x53d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0379
        gbc.setState(0xcba8, 0x8fc8, 0x7030, 0x3874, 0xd6c7, 0x91cd, 0x1, 0x0);
        gbc.writeMem(0xcba8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8fc8);
        EXPECT(gbc.pc(), 0xcbaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba8), 0xcb);
        EXPECT(gbc.readMem(0xcba9), 0x54);
        // CB 54 037A
        gbc.setState(0x426a, 0x1314, 0x6490, 0x4918, 0xfc21, 0x504c, 0x0, 0x1);
        gbc.writeMem(0x426a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1314);
        EXPECT(gbc.pc(), 0x426c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 037B
        gbc.setState(0x4f4d, 0x173d, 0x9d00, 0x19ee, 0x57a0, 0x677a, 0x0, 0x1);
        gbc.writeMem(0x4f4d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x173d);
        EXPECT(gbc.pc(), 0x4f4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 037C
        gbc.setState(0xc869, 0x851c, 0xc4f0, 0xdbf3, 0xc97d, 0x2092, 0x0, 0x1);
        gbc.writeMem(0xc869, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x851c);
        EXPECT(gbc.pc(), 0xc86b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc869), 0xcb);
        EXPECT(gbc.readMem(0xc86a), 0x54);
        // CB 54 037D
        gbc.setState(0xb013, 0x74a3, 0x2090, 0xdc0a, 0x3a45, 0xe123, 0x0, 0x0);
        gbc.writeMem(0xb013, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x74a3);
        EXPECT(gbc.pc(), 0xb015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb013), 0xcb);
        EXPECT(gbc.readMem(0xb014), 0x54);
        // CB 54 037E
        gbc.setState(0xcaec, 0xb9c7, 0xd9a0, 0x85b4, 0x78b1, 0x69a6, 0x1, 0x0);
        gbc.writeMem(0xcaec, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb9c7);
        EXPECT(gbc.pc(), 0xcaee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaec), 0xcb);
        EXPECT(gbc.readMem(0xcaed), 0x54);
        // CB 54 037F
        gbc.setState(0xeb0, 0x60e, 0xc910, 0x4457, 0x2228, 0xc603, 0x1, 0x0);
        gbc.writeMem(0xeb0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x60e);
        EXPECT(gbc.pc(), 0xeb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0380
        gbc.setState(0x7f71, 0x761f, 0x9120, 0xaed8, 0x867a, 0x6bee, 0x0, 0x0);
        gbc.writeMem(0x7f71, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x761f);
        EXPECT(gbc.pc(), 0x7f73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0381
        gbc.setState(0x731, 0x37f7, 0x3d00, 0xdf4a, 0x1fda, 0xdc5b, 0x0, 0x0);
        gbc.writeMem(0x731, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x37f7);
        EXPECT(gbc.pc(), 0x733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0382
        gbc.setState(0x90c0, 0x3917, 0xf870, 0x41c0, 0x11c, 0x3316, 0x1, 0x0);
        gbc.writeMem(0x90c0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3917);
        EXPECT(gbc.pc(), 0x90c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c0), 0xcb);
        EXPECT(gbc.readMem(0x90c1), 0x54);
        // CB 54 0383
        gbc.setState(0xac11, 0xe6bb, 0x1610, 0xb31d, 0xb65d, 0x50e6, 0x0, 0x1);
        gbc.writeMem(0xac11, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe6bb);
        EXPECT(gbc.pc(), 0xac13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac11), 0xcb);
        EXPECT(gbc.readMem(0xac12), 0x54);
        // CB 54 0384
        gbc.setState(0xedfa, 0x8a8f, 0xbff0, 0x1ee7, 0x6711, 0x3ae0, 0x1, 0x0);
        gbc.writeMem(0xedfa, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8a8f);
        EXPECT(gbc.pc(), 0xedfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedfa), 0xcb);
        EXPECT(gbc.readMem(0xedfb), 0x54);
        // CB 54 0385
        gbc.setState(0xa113, 0x2318, 0x6660, 0x47ed, 0xdaf7, 0xdcc5, 0x0, 0x0);
        gbc.writeMem(0xa113, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2318);
        EXPECT(gbc.pc(), 0xa115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa113), 0xcb);
        EXPECT(gbc.readMem(0xa114), 0x54);
        // CB 54 0386
        gbc.setState(0xbf7a, 0x7ed9, 0x4890, 0x6c13, 0x5ee2, 0xb876, 0x1, 0x0);
        gbc.writeMem(0xbf7a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7ed9);
        EXPECT(gbc.pc(), 0xbf7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf7a), 0xcb);
        EXPECT(gbc.readMem(0xbf7b), 0x54);
        // CB 54 0387
        gbc.setState(0x8087, 0x8ee1, 0x9f0, 0x8de5, 0xdfaf, 0x304b, 0x0, 0x1);
        gbc.writeMem(0x8087, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8ee1);
        EXPECT(gbc.pc(), 0x8089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8087), 0xcb);
        EXPECT(gbc.readMem(0x8088), 0x54);
        // CB 54 0388
        gbc.setState(0x73b1, 0xc226, 0xc9b0, 0xed0e, 0x15af, 0x464c, 0x1, 0x0);
        gbc.writeMem(0x73b1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc226);
        EXPECT(gbc.pc(), 0x73b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0389
        gbc.setState(0x3ba8, 0x5122, 0x4920, 0xf4d8, 0x8680, 0x12c2, 0x1, 0x1);
        gbc.writeMem(0x3ba8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5122);
        EXPECT(gbc.pc(), 0x3baa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 038A
        gbc.setState(0xa542, 0x2cab, 0x5b30, 0x1b41, 0xe874, 0xc762, 0x0, 0x0);
        gbc.writeMem(0xa542, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2cab);
        EXPECT(gbc.pc(), 0xa544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa542), 0xcb);
        EXPECT(gbc.readMem(0xa543), 0x54);
        // CB 54 038B
        gbc.setState(0x44cc, 0xf489, 0xf840, 0xa82b, 0xdb66, 0x968, 0x0, 0x0);
        gbc.writeMem(0x44cc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf489);
        EXPECT(gbc.pc(), 0x44ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 038C
        gbc.setState(0xa5b6, 0xa5bc, 0x6310, 0x24d5, 0x8d42, 0xb7ba, 0x0, 0x0);
        gbc.writeMem(0xa5b6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa5bc);
        EXPECT(gbc.pc(), 0xa5b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5b6), 0xcb);
        EXPECT(gbc.readMem(0xa5b7), 0x54);
        // CB 54 038E
        gbc.setState(0xd45, 0xcaeb, 0x2600, 0x1bc0, 0x1ba1, 0x68f2, 0x1, 0x0);
        gbc.writeMem(0xd45, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xcaeb);
        EXPECT(gbc.pc(), 0xd47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 038F
        gbc.setState(0x6b30, 0x9b39, 0x23e0, 0xcc8c, 0xd290, 0x4cec, 0x1, 0x1);
        gbc.writeMem(0x6b30, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9b39);
        EXPECT(gbc.pc(), 0x6b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0390
        gbc.setState(0xb606, 0x3707, 0x6760, 0xd52, 0xeb06, 0x8d06, 0x0, 0x1);
        gbc.writeMem(0xb606, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3707);
        EXPECT(gbc.pc(), 0xb608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb606), 0xcb);
        EXPECT(gbc.readMem(0xb607), 0x54);
        // CB 54 0391
        gbc.setState(0x6565, 0x426d, 0x2ff0, 0xf9dd, 0xadc, 0xed93, 0x0, 0x0);
        gbc.writeMem(0x6565, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x426d);
        EXPECT(gbc.pc(), 0x6567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 0392
        gbc.setState(0x282c, 0x6497, 0xe4a0, 0x9ca7, 0x3159, 0x3164, 0x0, 0x1);
        gbc.writeMem(0x282c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6497);
        EXPECT(gbc.pc(), 0x282e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0393
        gbc.setState(0xbfd9, 0xac2b, 0xe4a0, 0x6d57, 0xc08d, 0x6a9a, 0x0, 0x0);
        gbc.writeMem(0xbfd9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xac2b);
        EXPECT(gbc.pc(), 0xbfdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfd9), 0xcb);
        EXPECT(gbc.readMem(0xbfda), 0x54);
        // CB 54 0394
        gbc.setState(0x8f37, 0x328, 0xfb60, 0x7083, 0xebb1, 0x592c, 0x0, 0x1);
        gbc.writeMem(0x8f37, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x328);
        EXPECT(gbc.pc(), 0x8f39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f37), 0xcb);
        EXPECT(gbc.readMem(0x8f38), 0x54);
        // CB 54 0395
        gbc.setState(0x22bc, 0xfdc4, 0x6a20, 0xd8ea, 0x1d61, 0xb594, 0x1, 0x1);
        gbc.writeMem(0x22bc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xfdc4);
        EXPECT(gbc.pc(), 0x22be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0396
        gbc.setState(0x573b, 0xf613, 0xc2a0, 0x5c5c, 0x3383, 0xa7e6, 0x0, 0x1);
        gbc.writeMem(0x573b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf613);
        EXPECT(gbc.pc(), 0x573d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0397
        gbc.setState(0x57a7, 0xb138, 0xdd20, 0xdc64, 0xecf6, 0xcb25, 0x0, 0x1);
        gbc.writeMem(0x57a7, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb138);
        EXPECT(gbc.pc(), 0x57a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0398
        gbc.setState(0x4311, 0x803, 0xe5a0, 0x78cd, 0x30b6, 0xc5c5, 0x0, 0x0);
        gbc.writeMem(0x4311, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x803);
        EXPECT(gbc.pc(), 0x4313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 0399
        gbc.setState(0xafc8, 0xa0f0, 0x7ce0, 0xe68f, 0xb4d0, 0xe913, 0x0, 0x0);
        gbc.writeMem(0xafc8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa0f0);
        EXPECT(gbc.pc(), 0xafca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc8), 0xcb);
        EXPECT(gbc.readMem(0xafc9), 0x54);
        // CB 54 039A
        gbc.setState(0x1925, 0xc41c, 0xd8c0, 0x6291, 0x370c, 0xdb7f, 0x1, 0x0);
        gbc.writeMem(0x1925, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc41c);
        EXPECT(gbc.pc(), 0x1927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 039B
        gbc.setState(0xeb7a, 0xc6dc, 0x6c10, 0xa6dd, 0x173a, 0xac9a, 0x0, 0x0);
        gbc.writeMem(0xeb7a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc6dc);
        EXPECT(gbc.pc(), 0xeb7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb7a), 0xcb);
        EXPECT(gbc.readMem(0xeb7b), 0x54);
        // CB 54 039C
        gbc.setState(0x4cc0, 0xc382, 0x4fa0, 0xcf6, 0xf084, 0x49ee, 0x0, 0x1);
        gbc.writeMem(0x4cc0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc382);
        EXPECT(gbc.pc(), 0x4cc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 039D
        gbc.setState(0x825e, 0xfc5a, 0xb080, 0x4e13, 0xe02f, 0x55e2, 0x1, 0x0);
        gbc.writeMem(0x825e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xfc5a);
        EXPECT(gbc.pc(), 0x8260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x825e), 0xcb);
        EXPECT(gbc.readMem(0x825f), 0x54);
        // CB 54 039E
        gbc.setState(0xab8c, 0xd66e, 0x8c30, 0x61, 0x353d, 0xcc02, 0x1, 0x1);
        gbc.writeMem(0xab8c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd66e);
        EXPECT(gbc.pc(), 0xab8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab8c), 0xcb);
        EXPECT(gbc.readMem(0xab8d), 0x54);
        // CB 54 039F
        gbc.setState(0xef17, 0x9c85, 0x18c0, 0x24e2, 0x1bf7, 0xf78, 0x0, 0x0);
        gbc.writeMem(0xef17, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9c85);
        EXPECT(gbc.pc(), 0xef19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef17), 0xcb);
        EXPECT(gbc.readMem(0xef18), 0x54);
        // CB 54 03A0
        gbc.setState(0x8ea8, 0xa72c, 0x5120, 0x1f27, 0x2128, 0x71b0, 0x0, 0x0);
        gbc.writeMem(0x8ea8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa72c);
        EXPECT(gbc.pc(), 0x8eaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea8), 0xcb);
        EXPECT(gbc.readMem(0x8ea9), 0x54);
        // CB 54 03A1
        gbc.setState(0xb621, 0x316, 0x8690, 0x2cf9, 0xf349, 0x6ebb, 0x1, 0x1);
        gbc.writeMem(0xb621, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x316);
        EXPECT(gbc.pc(), 0xb623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb621), 0xcb);
        EXPECT(gbc.readMem(0xb622), 0x54);
        // CB 54 03A2
        gbc.setState(0xbc23, 0xebc3, 0x5250, 0x3da5, 0xfddc, 0x790, 0x1, 0x1);
        gbc.writeMem(0xbc23, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xebc3);
        EXPECT(gbc.pc(), 0xbc25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc23), 0xcb);
        EXPECT(gbc.readMem(0xbc24), 0x54);
        // CB 54 03A3
        gbc.setState(0xda5a, 0xae96, 0xf70, 0xa8d7, 0x1ab8, 0x1485, 0x0, 0x1);
        gbc.writeMem(0xda5a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xae96);
        EXPECT(gbc.pc(), 0xda5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda5a), 0xcb);
        EXPECT(gbc.readMem(0xda5b), 0x54);
        // CB 54 03A4
        gbc.setState(0xbbb2, 0x8b8, 0xf720, 0x4ef1, 0x8e91, 0x94ff, 0x1, 0x1);
        gbc.writeMem(0xbbb2, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8b8);
        EXPECT(gbc.pc(), 0xbbb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb2), 0xcb);
        EXPECT(gbc.readMem(0xbbb3), 0x54);
        // CB 54 03A5
        gbc.setState(0x2263, 0x8350, 0xc5e0, 0xa222, 0xb814, 0x20d4, 0x0, 0x0);
        gbc.writeMem(0x2263, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8350);
        EXPECT(gbc.pc(), 0x2265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03A6
        gbc.setState(0xa720, 0x85e4, 0x15e0, 0x918, 0x8f7d, 0xac2a, 0x0, 0x1);
        gbc.writeMem(0xa720, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x85e4);
        EXPECT(gbc.pc(), 0xa722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa720), 0xcb);
        EXPECT(gbc.readMem(0xa721), 0x54);
        // CB 54 03A7
        gbc.setState(0xea85, 0xab2f, 0xe170, 0xd351, 0xb6ad, 0xd6e2, 0x1, 0x0);
        gbc.writeMem(0xea85, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xab2f);
        EXPECT(gbc.pc(), 0xea87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea85), 0xcb);
        EXPECT(gbc.readMem(0xea86), 0x54);
        // CB 54 03A8
        gbc.setState(0x3df0, 0x76f8, 0xaab0, 0xc477, 0xe9c, 0xc154, 0x1, 0x1);
        gbc.writeMem(0x3df0, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x76f8);
        EXPECT(gbc.pc(), 0x3df2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03A9
        gbc.setState(0x862f, 0x1688, 0x95c0, 0xf1c0, 0x3b5a, 0xd0e9, 0x1, 0x0);
        gbc.writeMem(0x862f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1688);
        EXPECT(gbc.pc(), 0x8631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x862f), 0xcb);
        EXPECT(gbc.readMem(0x8630), 0x54);
        // CB 54 03AA
        gbc.setState(0x25d3, 0x9e7d, 0xcdf0, 0xc746, 0x9142, 0x4fa1, 0x1, 0x0);
        gbc.writeMem(0x25d3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9e7d);
        EXPECT(gbc.pc(), 0x25d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03AB
        gbc.setState(0x3ad1, 0xf327, 0x3c20, 0xca2e, 0xa51f, 0x2119, 0x0, 0x0);
        gbc.writeMem(0x3ad1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf327);
        EXPECT(gbc.pc(), 0x3ad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03AC
        gbc.setState(0x7963, 0xfbc7, 0x1420, 0x5315, 0x85d9, 0xd6d8, 0x1, 0x1);
        gbc.writeMem(0x7963, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xfbc7);
        EXPECT(gbc.pc(), 0x7965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03AD
        gbc.setState(0x60d9, 0x74db, 0xf290, 0xe08a, 0xdf2b, 0xb574, 0x1, 0x1);
        gbc.writeMem(0x60d9, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x74db);
        EXPECT(gbc.pc(), 0x60db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03AE
        gbc.setState(0xeca2, 0xbb35, 0x30b0, 0xa3e6, 0x14e7, 0x62d2, 0x1, 0x1);
        gbc.writeMem(0xeca2, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xbb35);
        EXPECT(gbc.pc(), 0xeca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeca2), 0xcb);
        EXPECT(gbc.readMem(0xeca3), 0x54);
        // CB 54 03B0
        gbc.setState(0xe26d, 0x7283, 0xd660, 0xf6f3, 0x8aa5, 0xd52e, 0x0, 0x0);
        gbc.writeMem(0xe26d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7283);
        EXPECT(gbc.pc(), 0xe26f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe26d), 0xcb);
        EXPECT(gbc.readMem(0xe26e), 0x54);
        // CB 54 03B1
        gbc.setState(0xd74b, 0xa233, 0x7ea0, 0x2100, 0x216e, 0xb1d6, 0x0, 0x0);
        gbc.writeMem(0xd74b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa233);
        EXPECT(gbc.pc(), 0xd74d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd74b), 0xcb);
        EXPECT(gbc.readMem(0xd74c), 0x54);
        // CB 54 03B2
        gbc.setState(0xdede, 0xb783, 0xa9d0, 0xb719, 0xad0, 0x5357, 0x0, 0x1);
        gbc.writeMem(0xdede, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb783);
        EXPECT(gbc.pc(), 0xdee0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdede), 0xcb);
        EXPECT(gbc.readMem(0xdedf), 0x54);
        // CB 54 03B3
        gbc.setState(0x7265, 0x5851, 0xe630, 0x92eb, 0xf76a, 0x9a12, 0x1, 0x0);
        gbc.writeMem(0x7265, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5851);
        EXPECT(gbc.pc(), 0x7267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03B4
        gbc.setState(0xc810, 0x74fa, 0xfeb0, 0xf58a, 0x2e0b, 0x1424, 0x0, 0x0);
        gbc.writeMem(0xc810, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x74fa);
        EXPECT(gbc.pc(), 0xc812);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc810), 0xcb);
        EXPECT(gbc.readMem(0xc811), 0x54);
        // CB 54 03B5
        gbc.setState(0xed8e, 0xe255, 0x7290, 0x91b0, 0xedb6, 0x151c, 0x0, 0x0);
        gbc.writeMem(0xed8e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe255);
        EXPECT(gbc.pc(), 0xed90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed8e), 0xcb);
        EXPECT(gbc.readMem(0xed8f), 0x54);
        // CB 54 03B6
        gbc.setState(0x38a, 0xfbe5, 0xe580, 0xfca2, 0x94bb, 0x74d1, 0x0, 0x0);
        gbc.writeMem(0x38a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xfbe5);
        EXPECT(gbc.pc(), 0x38c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03B7
        gbc.setState(0x72a8, 0x694e, 0x10d0, 0xfe1e, 0x8fbd, 0xd807, 0x0, 0x0);
        gbc.writeMem(0x72a8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x694e);
        EXPECT(gbc.pc(), 0x72aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03B8
        gbc.setState(0x7730, 0x99c, 0xa700, 0x5b54, 0x2411, 0x24e7, 0x1, 0x1);
        gbc.writeMem(0x7730, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x99c);
        EXPECT(gbc.pc(), 0x7732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03B9
        gbc.setState(0x8336, 0x33e, 0xd290, 0x8c1b, 0x220a, 0x55d1, 0x1, 0x1);
        gbc.writeMem(0x8336, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x33e);
        EXPECT(gbc.pc(), 0x8338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8336), 0xcb);
        EXPECT(gbc.readMem(0x8337), 0x54);
        // CB 54 03BA
        gbc.setState(0xddd6, 0xa8c3, 0x5a0, 0x5157, 0x1b17, 0xbb43, 0x0, 0x0);
        gbc.writeMem(0xddd6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa8c3);
        EXPECT(gbc.pc(), 0xddd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd6), 0xcb);
        EXPECT(gbc.readMem(0xddd7), 0x54);
        // CB 54 03BB
        gbc.setState(0x258, 0x378, 0x7c20, 0x8d1e, 0x973b, 0xa27, 0x1, 0x0);
        gbc.writeMem(0x258, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x378);
        EXPECT(gbc.pc(), 0x25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03BC
        gbc.setState(0x6e4a, 0x3b74, 0xc620, 0x5b77, 0x689d, 0x166f, 0x0, 0x1);
        gbc.writeMem(0x6e4a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3b74);
        EXPECT(gbc.pc(), 0x6e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03BD
        gbc.setState(0xe388, 0xe8f1, 0x66e0, 0xb790, 0x3e0e, 0x8c46, 0x1, 0x0);
        gbc.writeMem(0xe388, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe8f1);
        EXPECT(gbc.pc(), 0xe38a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe388), 0xcb);
        EXPECT(gbc.readMem(0xe389), 0x54);
        // CB 54 03BE
        gbc.setState(0x5700, 0x3685, 0x80d0, 0x3903, 0xd18c, 0x80c1, 0x0, 0x0);
        gbc.writeMem(0x5700, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3685);
        EXPECT(gbc.pc(), 0x5702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03BF
        gbc.setState(0x8b97, 0x29a, 0xf2e0, 0x8196, 0x1832, 0xa7c8, 0x1, 0x1);
        gbc.writeMem(0x8b97, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x29a);
        EXPECT(gbc.pc(), 0x8b99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b97), 0xcb);
        EXPECT(gbc.readMem(0x8b98), 0x54);
        // CB 54 03C0
        gbc.setState(0x3819, 0x7cb, 0xc830, 0x3ccd, 0x1bf5, 0xec47, 0x1, 0x0);
        gbc.writeMem(0x3819, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7cb);
        EXPECT(gbc.pc(), 0x381b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03C1
        gbc.setState(0xd84e, 0xb17a, 0x4110, 0xcec7, 0xa1f0, 0xae75, 0x0, 0x1);
        gbc.writeMem(0xd84e, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb17a);
        EXPECT(gbc.pc(), 0xd850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd84e), 0xcb);
        EXPECT(gbc.readMem(0xd84f), 0x54);
        // CB 54 03C2
        gbc.setState(0x66f6, 0x2180, 0x2390, 0x271f, 0x368d, 0x9ac9, 0x0, 0x0);
        gbc.writeMem(0x66f6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2180);
        EXPECT(gbc.pc(), 0x66f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03C3
        gbc.setState(0xe583, 0xbac0, 0x2b80, 0xce3d, 0x771, 0x51e4, 0x1, 0x0);
        gbc.writeMem(0xe583, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xbac0);
        EXPECT(gbc.pc(), 0xe585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe583), 0xcb);
        EXPECT(gbc.readMem(0xe584), 0x54);
        // CB 54 03C4
        gbc.setState(0xad58, 0xbdc8, 0x7350, 0xf513, 0xe2a9, 0x4b8, 0x0, 0x1);
        gbc.writeMem(0xad58, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbdc8);
        EXPECT(gbc.pc(), 0xad5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad58), 0xcb);
        EXPECT(gbc.readMem(0xad59), 0x54);
        // CB 54 03C5
        gbc.setState(0x18a8, 0xb227, 0x9180, 0xd9a5, 0x65c6, 0x7c5c, 0x0, 0x0);
        gbc.writeMem(0x18a8, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb227);
        EXPECT(gbc.pc(), 0x18aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03C6
        gbc.setState(0x6bfc, 0x15dc, 0x8b00, 0x65ab, 0x4b94, 0x742c, 0x0, 0x0);
        gbc.writeMem(0x6bfc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x15dc);
        EXPECT(gbc.pc(), 0x6bfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03C7
        gbc.setState(0xe031, 0xbc70, 0xc840, 0xa4b, 0x2d45, 0xc76f, 0x0, 0x0);
        gbc.writeMem(0xe031, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xbc70);
        EXPECT(gbc.pc(), 0xe033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe031), 0xcb);
        EXPECT(gbc.readMem(0xe032), 0x54);
        // CB 54 03C8
        gbc.setState(0x6af5, 0x870c, 0x99d0, 0x45a0, 0x6551, 0xc158, 0x0, 0x1);
        gbc.writeMem(0x6af5, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x870c);
        EXPECT(gbc.pc(), 0x6af7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03C9
        gbc.setState(0x11fc, 0x9869, 0xdfb0, 0x72c8, 0xdf3d, 0xb1d7, 0x0, 0x1);
        gbc.writeMem(0x11fc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9869);
        EXPECT(gbc.pc(), 0x11fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03CA
        gbc.setState(0xe048, 0xb1ae, 0x6d70, 0x4714, 0xc2ac, 0xe6d3, 0x0, 0x0);
        gbc.writeMem(0xe048, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb1ae);
        EXPECT(gbc.pc(), 0xe04a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe048), 0xcb);
        EXPECT(gbc.readMem(0xe049), 0x54);
        // CB 54 03CB
        gbc.setState(0x519a, 0x9a75, 0xf2e0, 0x9dc3, 0x19c7, 0x6eed, 0x1, 0x1);
        gbc.writeMem(0x519a, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9a75);
        EXPECT(gbc.pc(), 0x519c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03CC
        gbc.setState(0x77cc, 0xac1d, 0x8670, 0xf067, 0xc0ac, 0x14ee, 0x0, 0x1);
        gbc.writeMem(0x77cc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xac1d);
        EXPECT(gbc.pc(), 0x77ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03CD
        gbc.setState(0xef6, 0xcd26, 0x47c0, 0xea9a, 0x1da4, 0xd846, 0x0, 0x1);
        gbc.writeMem(0xef6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xcd26);
        EXPECT(gbc.pc(), 0xef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03CE
        gbc.setState(0x4283, 0xa647, 0x670, 0x5ad, 0xec30, 0x2d07, 0x0, 0x1);
        gbc.writeMem(0x4283, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa647);
        EXPECT(gbc.pc(), 0x4285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03CF
        gbc.setState(0xadfc, 0x9a34, 0xc680, 0x1c15, 0x7a3, 0xc196, 0x1, 0x0);
        gbc.writeMem(0xadfc, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9a34);
        EXPECT(gbc.pc(), 0xadfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadfc), 0xcb);
        EXPECT(gbc.readMem(0xadfd), 0x54);
        // CB 54 03D1
        gbc.setState(0x26a6, 0xf7ad, 0x4eb0, 0x9b97, 0x9106, 0xab3, 0x1, 0x0);
        gbc.writeMem(0x26a6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf7ad);
        EXPECT(gbc.pc(), 0x26a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03D2
        gbc.setState(0xa07f, 0xd898, 0x7d00, 0x2fe1, 0xe7c9, 0x13bf, 0x1, 0x0);
        gbc.writeMem(0xa07f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd898);
        EXPECT(gbc.pc(), 0xa081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa07f), 0xcb);
        EXPECT(gbc.readMem(0xa080), 0x54);
        // CB 54 03D3
        gbc.setState(0x548d, 0x2ceb, 0xbf0, 0x5476, 0xc880, 0x2af, 0x0, 0x0);
        gbc.writeMem(0x548d, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2ceb);
        EXPECT(gbc.pc(), 0x548f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03D4
        gbc.setState(0x2308, 0xb323, 0x2b20, 0xe439, 0x8ce1, 0x70ac, 0x0, 0x1);
        gbc.writeMem(0x2308, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb323);
        EXPECT(gbc.pc(), 0x230a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03D5
        gbc.setState(0x8f77, 0x15bd, 0xf820, 0xebdb, 0x7bec, 0x7158, 0x1, 0x1);
        gbc.writeMem(0x8f77, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x15bd);
        EXPECT(gbc.pc(), 0x8f79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f77), 0xcb);
        EXPECT(gbc.readMem(0x8f78), 0x54);
        // CB 54 03D6
        gbc.setState(0xd073, 0xb23e, 0x6f40, 0x1d8d, 0xb6ec, 0x4570, 0x0, 0x0);
        gbc.writeMem(0xd073, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb23e);
        EXPECT(gbc.pc(), 0xd075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd073), 0xcb);
        EXPECT(gbc.readMem(0xd074), 0x54);
        // CB 54 03D7
        gbc.setState(0x14e6, 0x4ac4, 0xa910, 0xbc2c, 0xae00, 0x6f29, 0x1, 0x1);
        gbc.writeMem(0x14e6, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4ac4);
        EXPECT(gbc.pc(), 0x14e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03D8
        gbc.setState(0x2fd3, 0x1af4, 0xad30, 0x4585, 0x3565, 0x689d, 0x1, 0x1);
        gbc.writeMem(0x2fd3, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1af4);
        EXPECT(gbc.pc(), 0x2fd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03D9
        gbc.setState(0xcb99, 0x5b0, 0x4e70, 0x5dbe, 0x9e21, 0x9a1d, 0x1, 0x1);
        gbc.writeMem(0xcb99, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5b0);
        EXPECT(gbc.pc(), 0xcb9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb99), 0xcb);
        EXPECT(gbc.readMem(0xcb9a), 0x54);
        // CB 54 03DA
        gbc.setState(0x454f, 0xf86d, 0xfd20, 0xd67a, 0x684e, 0x5274, 0x0, 0x0);
        gbc.writeMem(0x454f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf86d);
        EXPECT(gbc.pc(), 0x4551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03DC
        gbc.setState(0xa194, 0x718b, 0xf9f0, 0x8960, 0x39ed, 0x3098, 0x1, 0x1);
        gbc.writeMem(0xa194, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x718b);
        EXPECT(gbc.pc(), 0xa196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa194), 0xcb);
        EXPECT(gbc.readMem(0xa195), 0x54);
        // CB 54 03DD
        gbc.setState(0x26af, 0x6a78, 0x8fe0, 0x74b3, 0x8133, 0x6729, 0x0, 0x0);
        gbc.writeMem(0x26af, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6a78);
        EXPECT(gbc.pc(), 0x26b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03DE
        gbc.setState(0x21cb, 0x9bdc, 0xab50, 0x6e36, 0x8499, 0x4669, 0x0, 0x1);
        gbc.writeMem(0x21cb, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9bdc);
        EXPECT(gbc.pc(), 0x21cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 54 03DF
        gbc.setState(0xd30b, 0x89b1, 0xc920, 0x14eb, 0xfd38, 0x59bb, 0x0, 0x0);
        gbc.writeMem(0xd30b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x89b1);
        EXPECT(gbc.pc(), 0xd30d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd30b), 0xcb);
        EXPECT(gbc.readMem(0xd30c), 0x54);
        // CB 54 03E0
        gbc.setState(0x1e8c, 0x8373, 0xa700, 0x7e8, 0x2f02, 0xf1d4, 0x1, 0x0);
        gbc.writeMem(0x1e8c, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8373);
        EXPECT(gbc.pc(), 0x1e8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03E1
        gbc.setState(0x2e06, 0x74b3, 0x8a00, 0x1c4, 0x4b0f, 0x16ad, 0x0, 0x1);
        gbc.writeMem(0x2e06, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x74b3);
        EXPECT(gbc.pc(), 0x2e08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 54 03E2
        gbc.setState(0xa260, 0xe72c, 0xf80, 0x4588, 0x8367, 0xc46f, 0x0, 0x1);
        gbc.writeMem(0xa260, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe72c);
        EXPECT(gbc.pc(), 0xa262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa260), 0xcb);
        EXPECT(gbc.readMem(0xa261), 0x54);
        // CB 54 03E3
        gbc.setState(0xa1f1, 0x3067, 0xba00, 0xd802, 0xf0c1, 0xcacc, 0x0, 0x1);
        gbc.writeMem(0xa1f1, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3067);
        EXPECT(gbc.pc(), 0xa1f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1f1), 0xcb);
        EXPECT(gbc.readMem(0xa1f2), 0x54);
        // CB 54 03E4
        gbc.setState(0x9982, 0xa8c4, 0xdc00, 0xa76b, 0xce74, 0xb43d, 0x1, 0x0);
        gbc.writeMem(0x9982, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa8c4);
        EXPECT(gbc.pc(), 0x9984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9982), 0xcb);
        EXPECT(gbc.readMem(0x9983), 0x54);
        // CB 54 03E5
        gbc.setState(0x8750, 0x62e0, 0xe9b0, 0x1bb8, 0x677d, 0xab6b, 0x1, 0x0);
        gbc.writeMem(0x8750, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x62e0);
        EXPECT(gbc.pc(), 0x8752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8750), 0xcb);
        EXPECT(gbc.readMem(0x8751), 0x54);
        // CB 54 03E6
        gbc.setState(0xe33f, 0x45e6, 0x8a30, 0xeeb2, 0xf496, 0xd194, 0x0, 0x1);
        gbc.writeMem(0xe33f, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x45e6);
        EXPECT(gbc.pc(), 0xe341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33f), 0xcb);
        EXPECT(gbc.readMem(0xe340), 0x54);
        // CB 54 03E7
        gbc.setState(0xb01b, 0x80d1, 0x55d0, 0xe15c, 0x7b51, 0x47c8, 0x0, 0x0);
        gbc.writeMem(0xb01b, { 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x80d1);
        EXPECT(gbc.pc(), 0xb01d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb01b), 0xcb);
        EXPECT(gbc.readMem(0xb01c), 0x54);
    }
}
#endif
