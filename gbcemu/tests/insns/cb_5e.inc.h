    TEST(gbcemu, opcode_cb_5e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 5E 0001
        gbc.setState(0x7bf6, 0x416d, 0x640, 0x48eb, 0x9f0, 0x601f, 0x0, 0x1);
        gbc.writeMem(0x601f, { 0x1 });
        gbc.writeMem(0x7bf6, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x416d, gbc.sp());
        EXPECT(0x7bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0002
        gbc.setState(0xcf0d, 0xc17a, 0x18a0, 0xc859, 0x8375, 0x8369, 0x0, 0x1);
        gbc.writeMem(0x8369, { 0xad });
        gbc.writeMem(0xcf0d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc17a, gbc.sp());
        EXPECT(0xcf0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x8369));
        EXPECT(0xcb, gbc.readMem(0xcf0d));
        EXPECT(0x5e, gbc.readMem(0xcf0e));
        // CB 5E 0003
        gbc.setState(0xc573, 0x8768, 0xd270, 0xac32, 0x4ae1, 0x1b10, 0x0, 0x1);
        gbc.writeMem(0x1b10, { 0x68 });
        gbc.writeMem(0xc573, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8768, gbc.sp());
        EXPECT(0xc575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc573));
        EXPECT(0x5e, gbc.readMem(0xc574));
        // CB 5E 0004
        gbc.setState(0x9ef5, 0x7901, 0x7490, 0xdc9c, 0x528e, 0x8973, 0x1, 0x1);
        gbc.writeMem(0x8973, { 0xba });
        gbc.writeMem(0x9ef5, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7901, gbc.sp());
        EXPECT(0x9ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x8973));
        EXPECT(0xcb, gbc.readMem(0x9ef5));
        EXPECT(0x5e, gbc.readMem(0x9ef6));
        // CB 5E 0005
        gbc.setState(0x138b, 0xdb22, 0xd1c0, 0x8a98, 0x8173, 0x1c7c, 0x1, 0x1);
        gbc.writeMem(0x138b, { 0xcb, 0x5e });
        gbc.writeMem(0x1c7c, { 0xdf });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdb22, gbc.sp());
        EXPECT(0x138d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0006
        gbc.setState(0x27d3, 0x5c69, 0x9240, 0xf01c, 0x9008, 0xa561, 0x1, 0x0);
        gbc.writeMem(0x27d3, { 0xcb, 0x5e });
        gbc.writeMem(0xa561, { 0x56 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5c69, gbc.sp());
        EXPECT(0x27d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa561));
        // CB 5E 0007
        gbc.setState(0xcbaa, 0xbf95, 0x290, 0xb7ca, 0xaa45, 0x721f, 0x1, 0x0);
        gbc.writeMem(0x721f, { 0x4b });
        gbc.writeMem(0xcbaa, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbf95, gbc.sp());
        EXPECT(0xcbac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbaa));
        EXPECT(0x5e, gbc.readMem(0xcbab));
        // CB 5E 0008
        gbc.setState(0x46ec, 0xe909, 0xc990, 0xcbb6, 0xc236, 0xf7c, 0x0, 0x1);
        gbc.writeMem(0xf7c, { 0x31 });
        gbc.writeMem(0x46ec, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe909, gbc.sp());
        EXPECT(0x46ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0009
        gbc.setState(0xc446, 0x2530, 0x91a0, 0x5da3, 0x9a1a, 0x623b, 0x0, 0x1);
        gbc.writeMem(0x623b, { 0x78 });
        gbc.writeMem(0xc446, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2530, gbc.sp());
        EXPECT(0xc448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc446));
        EXPECT(0x5e, gbc.readMem(0xc447));
        // CB 5E 000A
        gbc.setState(0xc869, 0xcbe1, 0xa490, 0xfe7a, 0xa67, 0x6f59, 0x0, 0x0);
        gbc.writeMem(0x6f59, { 0xa8 });
        gbc.writeMem(0xc869, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcbe1, gbc.sp());
        EXPECT(0xc86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc869));
        EXPECT(0x5e, gbc.readMem(0xc86a));
        // CB 5E 000B
        gbc.setState(0xabb1, 0x4b83, 0x4660, 0xb90, 0x9828, 0x37bd, 0x0, 0x1);
        gbc.writeMem(0x37bd, { 0x89 });
        gbc.writeMem(0xabb1, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4b83, gbc.sp());
        EXPECT(0xabb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb1));
        EXPECT(0x5e, gbc.readMem(0xabb2));
        // CB 5E 000C
        gbc.setState(0xa93f, 0x3b40, 0x8050, 0x6759, 0xecb3, 0x9ee7, 0x1, 0x1);
        gbc.writeMem(0x9ee7, { 0xa7 });
        gbc.writeMem(0xa93f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3b40, gbc.sp());
        EXPECT(0xa941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9ee7));
        EXPECT(0xcb, gbc.readMem(0xa93f));
        EXPECT(0x5e, gbc.readMem(0xa940));
        // CB 5E 000D
        gbc.setState(0x6bae, 0x9ab7, 0xcea0, 0x5442, 0x3562, 0x25fe, 0x1, 0x1);
        gbc.writeMem(0x25fe, { 0xb1 });
        gbc.writeMem(0x6bae, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9ab7, gbc.sp());
        EXPECT(0x6bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 000F
        gbc.setState(0x768a, 0x710, 0xf2a0, 0x8ca6, 0x36ca, 0x3441, 0x0, 0x0);
        gbc.writeMem(0x3441, { 0x55 });
        gbc.writeMem(0x768a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x710, gbc.sp());
        EXPECT(0x768c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0010
        gbc.setState(0xce1d, 0x6dd5, 0x690, 0xdd00, 0xffa0, 0x3709, 0x1, 0x0);
        gbc.writeMem(0x3709, { 0x68 });
        gbc.writeMem(0xce1d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6dd5, gbc.sp());
        EXPECT(0xce1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1d));
        EXPECT(0x5e, gbc.readMem(0xce1e));
        // CB 5E 0011
        gbc.setState(0x62e7, 0xd9fe, 0xa130, 0x489d, 0x1b30, 0xdcce, 0x1, 0x1);
        gbc.writeMem(0x62e7, { 0xcb, 0x5e });
        gbc.writeMem(0xdcce, { 0xe8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd9fe, gbc.sp());
        EXPECT(0x62e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xdcce));
        // CB 5E 0012
        gbc.setState(0x3692, 0x484a, 0x15a0, 0x1d30, 0x9869, 0xfff, 0x1, 0x0);
        gbc.writeMem(0xfff, { 0x72 });
        gbc.writeMem(0x3692, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x484a, gbc.sp());
        EXPECT(0x3694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0013
        gbc.setState(0x598b, 0x62be, 0x4bb0, 0x4a31, 0xe96e, 0xcd63, 0x1, 0x1);
        gbc.writeMem(0x598b, { 0xcb, 0x5e });
        gbc.writeMem(0xcd63, { 0xdb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x62be, gbc.sp());
        EXPECT(0x598d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xcd63));
        // CB 5E 0014
        gbc.setState(0x105, 0x4647, 0xe320, 0x8225, 0x2c22, 0x2ac5, 0x0, 0x0);
        gbc.writeMem(0x105, { 0xcb, 0x5e });
        gbc.writeMem(0x2ac5, { 0x51 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4647, gbc.sp());
        EXPECT(0x107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0015
        gbc.setState(0x2fb2, 0x6718, 0x1930, 0xc874, 0x8f95, 0x5516, 0x1, 0x0);
        gbc.writeMem(0x2fb2, { 0xcb, 0x5e });
        gbc.writeMem(0x5516, { 0x8f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6718, gbc.sp());
        EXPECT(0x2fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0016
        gbc.setState(0x7d3d, 0xaa6, 0xda70, 0x28c0, 0x4cdc, 0x6bb2, 0x1, 0x0);
        gbc.writeMem(0x6bb2, { 0xda });
        gbc.writeMem(0x7d3d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaa6, gbc.sp());
        EXPECT(0x7d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0017
        gbc.setState(0x8532, 0x7b18, 0xd150, 0xafb5, 0xbeeb, 0x9518, 0x0, 0x0);
        gbc.writeMem(0x8532, { 0xcb, 0x5e });
        gbc.writeMem(0x9518, { 0xca });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7b18, gbc.sp());
        EXPECT(0x8534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8532));
        EXPECT(0x5e, gbc.readMem(0x8533));
        EXPECT(0xca, gbc.readMem(0x9518));
        // CB 5E 0018
        gbc.setState(0x1f08, 0xd006, 0xa880, 0xfde6, 0xa149, 0xeab4, 0x0, 0x0);
        gbc.writeMem(0x1f08, { 0xcb, 0x5e });
        gbc.writeMem(0xeab4, { 0x20 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd006, gbc.sp());
        EXPECT(0x1f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xeab4));
        // CB 5E 001A
        gbc.setState(0xa651, 0x437, 0x3310, 0xbb54, 0xe28c, 0xb629, 0x1, 0x0);
        gbc.writeMem(0xa651, { 0xcb, 0x5e });
        gbc.writeMem(0xb629, { 0xb9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x437, gbc.sp());
        EXPECT(0xa653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa651));
        EXPECT(0x5e, gbc.readMem(0xa652));
        EXPECT(0xb9, gbc.readMem(0xb629));
        // CB 5E 001B
        gbc.setState(0x4b16, 0x1749, 0x19b0, 0xae2e, 0x239a, 0x9636, 0x1, 0x1);
        gbc.writeMem(0x4b16, { 0xcb, 0x5e });
        gbc.writeMem(0x9636, { 0x83 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1749, gbc.sp());
        EXPECT(0x4b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x9636));
        // CB 5E 001C
        gbc.setState(0x259c, 0x9591, 0x7e00, 0xe4e9, 0xaf24, 0x7291, 0x0, 0x0);
        gbc.writeMem(0x259c, { 0xcb, 0x5e });
        gbc.writeMem(0x7291, { 0x22 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9591, gbc.sp());
        EXPECT(0x259e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 001D
        gbc.setState(0x618f, 0xf05d, 0x3240, 0x2d9c, 0x5684, 0xd230, 0x0, 0x1);
        gbc.writeMem(0x618f, { 0xcb, 0x5e });
        gbc.writeMem(0xd230, { 0x8c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf05d, gbc.sp());
        EXPECT(0x6191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd230));
        // CB 5E 001E
        gbc.setState(0x63c4, 0xe125, 0x72a0, 0x35d2, 0x648e, 0x8e4e, 0x1, 0x1);
        gbc.writeMem(0x63c4, { 0xcb, 0x5e });
        gbc.writeMem(0x8e4e, { 0x40 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe125, gbc.sp());
        EXPECT(0x63c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8e4e));
        // CB 5E 001F
        gbc.setState(0x403, 0xaadb, 0xed80, 0x4334, 0x950b, 0x616e, 0x1, 0x1);
        gbc.writeMem(0x403, { 0xcb, 0x5e });
        gbc.writeMem(0x616e, { 0xbc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xaadb, gbc.sp());
        EXPECT(0x405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0020
        gbc.setState(0x3ae7, 0xba45, 0x3e70, 0x557e, 0x7b5, 0x626a, 0x1, 0x1);
        gbc.writeMem(0x3ae7, { 0xcb, 0x5e });
        gbc.writeMem(0x626a, { 0x5d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xba45, gbc.sp());
        EXPECT(0x3ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0021
        gbc.setState(0xbfeb, 0xe8cc, 0xc360, 0x5f00, 0xbfd4, 0xff86, 0x1, 0x0);
        gbc.writeMem(0xbfeb, { 0xcb, 0x5e });
        gbc.writeMem(0xff86, { 0x5e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe8cc, gbc.sp());
        EXPECT(0xbfed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfeb));
        EXPECT(0x5e, gbc.readMem(0xbfec));
        EXPECT(0x5e, gbc.readMem(0xff86));
        // CB 5E 0022
        gbc.setState(0xd0e4, 0x5ddf, 0x5960, 0x6ca1, 0xf757, 0x2da2, 0x0, 0x0);
        gbc.writeMem(0x2da2, { 0x4a });
        gbc.writeMem(0xd0e4, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5ddf, gbc.sp());
        EXPECT(0xd0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e4));
        EXPECT(0x5e, gbc.readMem(0xd0e5));
        // CB 5E 0023
        gbc.setState(0xbdf5, 0xfe8b, 0x1690, 0xa257, 0xe734, 0xf53f, 0x0, 0x0);
        gbc.writeMem(0xbdf5, { 0xcb, 0x5e });
        gbc.writeMem(0xf53f, { 0x3e });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfe8b, gbc.sp());
        EXPECT(0xbdf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf5));
        EXPECT(0x5e, gbc.readMem(0xbdf6));
        EXPECT(0x3e, gbc.readMem(0xf53f));
        // CB 5E 0024
        gbc.setState(0x957c, 0x14ec, 0xdf0, 0xb9ef, 0x82d8, 0xc7c8, 0x1, 0x1);
        gbc.writeMem(0x957c, { 0xcb, 0x5e });
        gbc.writeMem(0xc7c8, { 0x2e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x14ec, gbc.sp());
        EXPECT(0x957e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957c));
        EXPECT(0x5e, gbc.readMem(0x957d));
        EXPECT(0x2e, gbc.readMem(0xc7c8));
        // CB 5E 0025
        gbc.setState(0x31ad, 0x7a02, 0x5d10, 0x2128, 0x6f4b, 0x2bce, 0x0, 0x1);
        gbc.writeMem(0x2bce, { 0x22 });
        gbc.writeMem(0x31ad, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7a02, gbc.sp());
        EXPECT(0x31af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0026
        gbc.setState(0x51a5, 0xa9c, 0x25b0, 0xfe6a, 0x16b0, 0xd4ca, 0x1, 0x0);
        gbc.writeMem(0x51a5, { 0xcb, 0x5e });
        gbc.writeMem(0xd4ca, { 0x7a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa9c, gbc.sp());
        EXPECT(0x51a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd4ca));
        // CB 5E 0027
        gbc.setState(0x232f, 0x9133, 0xade0, 0x1311, 0x8e12, 0xe43a, 0x0, 0x1);
        gbc.writeMem(0x232f, { 0xcb, 0x5e });
        gbc.writeMem(0xe43a, { 0x3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9133, gbc.sp());
        EXPECT(0x2331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe43a));
        // CB 5E 0028
        gbc.setState(0x93ec, 0xa417, 0x80c0, 0x1061, 0x951e, 0xfd49, 0x0, 0x1);
        gbc.writeMem(0x93ec, { 0xcb, 0x5e });
        gbc.writeMem(0xfd49, { 0xb6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa417, gbc.sp());
        EXPECT(0x93ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ec));
        EXPECT(0x5e, gbc.readMem(0x93ed));
        EXPECT(0xb6, gbc.readMem(0xfd49));
        // CB 5E 0029
        gbc.setState(0x6d96, 0xf0d1, 0xc190, 0x6746, 0x76b3, 0xb132, 0x1, 0x0);
        gbc.writeMem(0x6d96, { 0xcb, 0x5e });
        gbc.writeMem(0xb132, { 0xad });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf0d1, gbc.sp());
        EXPECT(0x6d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xb132));
        // CB 5E 002B
        gbc.setState(0xc604, 0x1203, 0x59b0, 0x86a8, 0x15d, 0xf53c, 0x1, 0x0);
        gbc.writeMem(0xc604, { 0xcb, 0x5e });
        gbc.writeMem(0xf53c, { 0xf2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1203, gbc.sp());
        EXPECT(0xc606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc604));
        EXPECT(0x5e, gbc.readMem(0xc605));
        EXPECT(0xf2, gbc.readMem(0xf53c));
        // CB 5E 002C
        gbc.setState(0x8754, 0x30b8, 0xe940, 0xdaf2, 0xb701, 0xa6b1, 0x0, 0x1);
        gbc.writeMem(0x8754, { 0xcb, 0x5e });
        gbc.writeMem(0xa6b1, { 0x15 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x30b8, gbc.sp());
        EXPECT(0x8756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8754));
        EXPECT(0x5e, gbc.readMem(0x8755));
        EXPECT(0x15, gbc.readMem(0xa6b1));
        // CB 5E 002D
        gbc.setState(0x7c9, 0x2e66, 0x3330, 0xeddd, 0xde6d, 0xa1af, 0x1, 0x1);
        gbc.writeMem(0x7c9, { 0xcb, 0x5e });
        gbc.writeMem(0xa1af, { 0xcc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2e66, gbc.sp());
        EXPECT(0x7cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xa1af));
        // CB 5E 002E
        gbc.setState(0x46fe, 0x9e77, 0xcd20, 0x61b8, 0x7484, 0xa2cd, 0x0, 0x1);
        gbc.writeMem(0x46fe, { 0xcb, 0x5e });
        gbc.writeMem(0xa2cd, { 0xae });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9e77, gbc.sp());
        EXPECT(0x4700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xa2cd));
        // CB 5E 002F
        gbc.setState(0x318f, 0xb45f, 0x6380, 0xb512, 0xa29a, 0x9fed, 0x1, 0x0);
        gbc.writeMem(0x318f, { 0xcb, 0x5e });
        gbc.writeMem(0x9fed, { 0x8c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb45f, gbc.sp());
        EXPECT(0x3191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9fed));
        // CB 5E 0030
        gbc.setState(0x6602, 0x3f47, 0xb0a0, 0xa967, 0xb1c9, 0xa717, 0x0, 0x0);
        gbc.writeMem(0x6602, { 0xcb, 0x5e });
        gbc.writeMem(0xa717, { 0xf2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3f47, gbc.sp());
        EXPECT(0x6604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xa717));
        // CB 5E 0031
        gbc.setState(0x456c, 0x804a, 0x5830, 0x9180, 0x5948, 0x8b00, 0x0, 0x1);
        gbc.writeMem(0x456c, { 0xcb, 0x5e });
        gbc.writeMem(0x8b00, { 0x42 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x804a, gbc.sp());
        EXPECT(0x456e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8b00));
        // CB 5E 0032
        gbc.setState(0xb637, 0xbdad, 0xa180, 0x5dcf, 0xdf6c, 0xfeb6, 0x0, 0x1);
        gbc.writeMem(0xb637, { 0xcb, 0x5e });
        gbc.writeMem(0xfeb6, { 0x12 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbdad, gbc.sp());
        EXPECT(0xb639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb637));
        EXPECT(0x5e, gbc.readMem(0xb638));
        EXPECT(0x12, gbc.readMem(0xfeb6));
        // CB 5E 0033
        gbc.setState(0x9af0, 0x33a8, 0xad40, 0x1671, 0xe7e3, 0xf2d, 0x0, 0x1);
        gbc.writeMem(0xf2d, { 0x40 });
        gbc.writeMem(0x9af0, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x33a8, gbc.sp());
        EXPECT(0x9af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af0));
        EXPECT(0x5e, gbc.readMem(0x9af1));
        // CB 5E 0034
        gbc.setState(0x51ff, 0x8c06, 0x3450, 0x990a, 0xdd92, 0x31f9, 0x0, 0x0);
        gbc.writeMem(0x31f9, { 0xf0 });
        gbc.writeMem(0x51ff, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8c06, gbc.sp());
        EXPECT(0x5201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0035
        gbc.setState(0x79b7, 0x391a, 0x1740, 0xb5ad, 0x6a9, 0xeca, 0x0, 0x0);
        gbc.writeMem(0xeca, { 0xb6 });
        gbc.writeMem(0x79b7, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x391a, gbc.sp());
        EXPECT(0x79b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0036
        gbc.setState(0x17c1, 0x9031, 0x8ea0, 0x5638, 0x2ca3, 0x269e, 0x1, 0x0);
        gbc.writeMem(0x17c1, { 0xcb, 0x5e });
        gbc.writeMem(0x269e, { 0x4f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9031, gbc.sp());
        EXPECT(0x17c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0037
        gbc.setState(0x2bf4, 0x6112, 0xe950, 0x2db9, 0xf30d, 0x9f90, 0x1, 0x0);
        gbc.writeMem(0x2bf4, { 0xcb, 0x5e });
        gbc.writeMem(0x9f90, { 0xb0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6112, gbc.sp());
        EXPECT(0x2bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9f90));
        // CB 5E 0038
        gbc.setState(0xbf9b, 0xf5ce, 0x7950, 0xcd75, 0xd4d6, 0x1123, 0x0, 0x1);
        gbc.writeMem(0x1123, { 0xbc });
        gbc.writeMem(0xbf9b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf5ce, gbc.sp());
        EXPECT(0xbf9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf9b));
        EXPECT(0x5e, gbc.readMem(0xbf9c));
        // CB 5E 0039
        gbc.setState(0x718f, 0xd7d6, 0x79e0, 0x91b7, 0x8925, 0x15c6, 0x0, 0x0);
        gbc.writeMem(0x15c6, { 0x50 });
        gbc.writeMem(0x718f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd7d6, gbc.sp());
        EXPECT(0x7191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 003A
        gbc.setState(0xcc0a, 0xcf7c, 0x47b0, 0x3009, 0xaf2f, 0xbb0, 0x0, 0x1);
        gbc.writeMem(0xbb0, { 0x29 });
        gbc.writeMem(0xcc0a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcf7c, gbc.sp());
        EXPECT(0xcc0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc0a));
        EXPECT(0x5e, gbc.readMem(0xcc0b));
        // CB 5E 003B
        gbc.setState(0x5695, 0xaec9, 0x9080, 0xb8b3, 0xe03a, 0x7cf9, 0x1, 0x1);
        gbc.writeMem(0x5695, { 0xcb, 0x5e });
        gbc.writeMem(0x7cf9, { 0xcf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaec9, gbc.sp());
        EXPECT(0x5697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 003C
        gbc.setState(0x1a58, 0xa978, 0x39e0, 0x2fc7, 0x3e9e, 0xd52b, 0x0, 0x1);
        gbc.writeMem(0x1a58, { 0xcb, 0x5e });
        gbc.writeMem(0xd52b, { 0x64 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa978, gbc.sp());
        EXPECT(0x1a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd52b));
        // CB 5E 003D
        gbc.setState(0x26c6, 0x261d, 0xa280, 0x922b, 0x95cf, 0x7196, 0x0, 0x1);
        gbc.writeMem(0x26c6, { 0xcb, 0x5e });
        gbc.writeMem(0x7196, { 0x1f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x261d, gbc.sp());
        EXPECT(0x26c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 003E
        gbc.setState(0x5760, 0x21c9, 0x98e0, 0x301b, 0xa3a7, 0x401b, 0x1, 0x0);
        gbc.writeMem(0x401b, { 0x2a });
        gbc.writeMem(0x5760, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x21c9, gbc.sp());
        EXPECT(0x5762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 003F
        gbc.setState(0xb1c7, 0x4a9b, 0xe680, 0x98d8, 0x343d, 0x4e5e, 0x1, 0x0);
        gbc.writeMem(0x4e5e, { 0x46 });
        gbc.writeMem(0xb1c7, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4a9b, gbc.sp());
        EXPECT(0xb1c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c7));
        EXPECT(0x5e, gbc.readMem(0xb1c8));
        // CB 5E 0040
        gbc.setState(0x5b16, 0x4681, 0x6900, 0x5563, 0x8c0d, 0x6df7, 0x1, 0x1);
        gbc.writeMem(0x5b16, { 0xcb, 0x5e });
        gbc.writeMem(0x6df7, { 0xf2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4681, gbc.sp());
        EXPECT(0x5b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0041
        gbc.setState(0x8d18, 0xe8f0, 0x2f30, 0xa8ea, 0xee49, 0xe97, 0x1, 0x1);
        gbc.writeMem(0xe97, { 0x10 });
        gbc.writeMem(0x8d18, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe8f0, gbc.sp());
        EXPECT(0x8d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d18));
        EXPECT(0x5e, gbc.readMem(0x8d19));
        // CB 5E 0042
        gbc.setState(0x9fd0, 0xf57d, 0x7650, 0x3a7, 0x6393, 0xd4f2, 0x0, 0x1);
        gbc.writeMem(0x9fd0, { 0xcb, 0x5e });
        gbc.writeMem(0xd4f2, { 0x5b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf57d, gbc.sp());
        EXPECT(0x9fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd0));
        EXPECT(0x5e, gbc.readMem(0x9fd1));
        EXPECT(0x5b, gbc.readMem(0xd4f2));
        // CB 5E 0043
        gbc.setState(0xd83d, 0x588a, 0x9160, 0x38, 0xbbff, 0x6fcc, 0x1, 0x1);
        gbc.writeMem(0x6fcc, { 0x85 });
        gbc.writeMem(0xd83d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x588a, gbc.sp());
        EXPECT(0xd83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd83d));
        EXPECT(0x5e, gbc.readMem(0xd83e));
        // CB 5E 0044
        gbc.setState(0x9d1a, 0xb047, 0x2f0, 0x874e, 0x32fb, 0x8b32, 0x1, 0x0);
        gbc.writeMem(0x8b32, { 0xe1 });
        gbc.writeMem(0x9d1a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb047, gbc.sp());
        EXPECT(0x9d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8b32));
        EXPECT(0xcb, gbc.readMem(0x9d1a));
        EXPECT(0x5e, gbc.readMem(0x9d1b));
        // CB 5E 0045
        gbc.setState(0x1ec8, 0x1a40, 0x93a0, 0xc3de, 0xb8a9, 0xa8eb, 0x0, 0x1);
        gbc.writeMem(0x1ec8, { 0xcb, 0x5e });
        gbc.writeMem(0xa8eb, { 0x6c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1a40, gbc.sp());
        EXPECT(0x1eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa8eb));
        // CB 5E 0046
        gbc.setState(0x7dc9, 0x9eef, 0x1200, 0xa9ed, 0x80d1, 0x1b7e, 0x1, 0x1);
        gbc.writeMem(0x1b7e, { 0x5f });
        gbc.writeMem(0x7dc9, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9eef, gbc.sp());
        EXPECT(0x7dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0047
        gbc.setState(0xc965, 0xa36f, 0x78b0, 0xb9ac, 0x6281, 0xc323, 0x0, 0x0);
        gbc.writeMem(0xc323, { 0xf });
        gbc.writeMem(0xc965, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa36f, gbc.sp());
        EXPECT(0xc967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xc323));
        EXPECT(0xcb, gbc.readMem(0xc965));
        EXPECT(0x5e, gbc.readMem(0xc966));
        // CB 5E 0048
        gbc.setState(0xbc21, 0xd973, 0x410, 0x4eb1, 0x5e0e, 0xa7cb, 0x1, 0x1);
        gbc.writeMem(0xa7cb, { 0x8a });
        gbc.writeMem(0xbc21, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd973, gbc.sp());
        EXPECT(0xbc23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa7cb));
        EXPECT(0xcb, gbc.readMem(0xbc21));
        EXPECT(0x5e, gbc.readMem(0xbc22));
        // CB 5E 0049
        gbc.setState(0xb1f7, 0x48bc, 0x5e20, 0xfee5, 0x9e9a, 0x6b6b, 0x1, 0x0);
        gbc.writeMem(0x6b6b, { 0x64 });
        gbc.writeMem(0xb1f7, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x48bc, gbc.sp());
        EXPECT(0xb1f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f7));
        EXPECT(0x5e, gbc.readMem(0xb1f8));
        // CB 5E 004A
        gbc.setState(0x88ba, 0xc915, 0x7180, 0xac80, 0xda48, 0x50fa, 0x0, 0x0);
        gbc.writeMem(0x50fa, { 0x65 });
        gbc.writeMem(0x88ba, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc915, gbc.sp());
        EXPECT(0x88bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ba));
        EXPECT(0x5e, gbc.readMem(0x88bb));
        // CB 5E 004B
        gbc.setState(0x3270, 0x98e, 0xc940, 0x5298, 0xd86, 0xa79b, 0x0, 0x1);
        gbc.writeMem(0x3270, { 0xcb, 0x5e });
        gbc.writeMem(0xa79b, { 0x33 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x98e, gbc.sp());
        EXPECT(0x3272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa79b));
        // CB 5E 004C
        gbc.setState(0xaa79, 0x357, 0x45e0, 0xb3a, 0x1dae, 0x1dae, 0x0, 0x0);
        gbc.writeMem(0x1dae, { 0x53 });
        gbc.writeMem(0xaa79, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x357, gbc.sp());
        EXPECT(0xaa7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa79));
        EXPECT(0x5e, gbc.readMem(0xaa7a));
        // CB 5E 004D
        gbc.setState(0x4b1e, 0xff33, 0x1a0, 0xf2b4, 0x27ab, 0xd84f, 0x1, 0x1);
        gbc.writeMem(0x4b1e, { 0xcb, 0x5e });
        gbc.writeMem(0xd84f, { 0xb1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xff33, gbc.sp());
        EXPECT(0x4b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xd84f));
        // CB 5E 004E
        gbc.setState(0x3bbe, 0x842d, 0x67d0, 0x74c0, 0x6a1d, 0x8730, 0x0, 0x0);
        gbc.writeMem(0x3bbe, { 0xcb, 0x5e });
        gbc.writeMem(0x8730, { 0x97 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x842d, gbc.sp());
        EXPECT(0x3bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8730));
        // CB 5E 004F
        gbc.setState(0x3a7f, 0x8726, 0x2780, 0xb47a, 0x8a2, 0x75aa, 0x0, 0x0);
        gbc.writeMem(0x3a7f, { 0xcb, 0x5e });
        gbc.writeMem(0x75aa, { 0x42 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8726, gbc.sp());
        EXPECT(0x3a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0050
        gbc.setState(0x2ca8, 0x458c, 0x73b0, 0xc29d, 0xaccf, 0x1f43, 0x0, 0x0);
        gbc.writeMem(0x1f43, { 0x66 });
        gbc.writeMem(0x2ca8, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x458c, gbc.sp());
        EXPECT(0x2caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0051
        gbc.setState(0x4000, 0xdb3b, 0xedb0, 0xd8f7, 0x9268, 0x609c, 0x0, 0x1);
        gbc.writeMem(0x4000, { 0xcb, 0x5e });
        gbc.writeMem(0x609c, { 0x70 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdb3b, gbc.sp());
        EXPECT(0x4002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0052
        gbc.setState(0x2374, 0xec5e, 0xa340, 0xc43c, 0xb677, 0xf88b, 0x1, 0x1);
        gbc.writeMem(0x2374, { 0xcb, 0x5e });
        gbc.writeMem(0xf88b, { 0xa5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xec5e, gbc.sp());
        EXPECT(0x2376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xf88b));
        // CB 5E 0053
        gbc.setState(0xd08b, 0xf77f, 0xd240, 0x66ed, 0x70fd, 0xfa57, 0x1, 0x0);
        gbc.writeMem(0xd08b, { 0xcb, 0x5e });
        gbc.writeMem(0xfa57, { 0x31 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf77f, gbc.sp());
        EXPECT(0xd08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd08b));
        EXPECT(0x5e, gbc.readMem(0xd08c));
        EXPECT(0x31, gbc.readMem(0xfa57));
        // CB 5E 0054
        gbc.setState(0xe19, 0x933a, 0x1350, 0x5f0f, 0x72ca, 0x4cf4, 0x0, 0x0);
        gbc.writeMem(0xe19, { 0xcb, 0x5e });
        gbc.writeMem(0x4cf4, { 0xd9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x933a, gbc.sp());
        EXPECT(0xe1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0055
        gbc.setState(0xee66, 0x1bdd, 0xe510, 0x440b, 0xf62d, 0xc267, 0x0, 0x0);
        gbc.writeMem(0xc267, { 0x45 });
        gbc.writeMem(0xee66, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1bdd, gbc.sp());
        EXPECT(0xee68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xc267));
        EXPECT(0xcb, gbc.readMem(0xee66));
        EXPECT(0x5e, gbc.readMem(0xee67));
        // CB 5E 0056
        gbc.setState(0xe9d9, 0xacca, 0x6aa0, 0x1562, 0x7727, 0xddb6, 0x0, 0x1);
        gbc.writeMem(0xddb6, { 0xfb });
        gbc.writeMem(0xe9d9, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xacca, gbc.sp());
        EXPECT(0xe9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xddb6));
        EXPECT(0xcb, gbc.readMem(0xe9d9));
        EXPECT(0x5e, gbc.readMem(0xe9da));
        // CB 5E 0057
        gbc.setState(0xbf06, 0xc9e8, 0xcf50, 0xaca7, 0x846a, 0x29cc, 0x1, 0x1);
        gbc.writeMem(0x29cc, { 0xf });
        gbc.writeMem(0xbf06, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc9e8, gbc.sp());
        EXPECT(0xbf08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf06));
        EXPECT(0x5e, gbc.readMem(0xbf07));
        // CB 5E 0058
        gbc.setState(0x6c99, 0x777b, 0x4a90, 0x4b0d, 0xb8d3, 0x20a1, 0x1, 0x1);
        gbc.writeMem(0x20a1, { 0x92 });
        gbc.writeMem(0x6c99, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x777b, gbc.sp());
        EXPECT(0x6c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0059
        gbc.setState(0xba0f, 0xac54, 0x720, 0xda2e, 0xa6b4, 0xe3c0, 0x0, 0x0);
        gbc.writeMem(0xba0f, { 0xcb, 0x5e });
        gbc.writeMem(0xe3c0, { 0xcc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xac54, gbc.sp());
        EXPECT(0xba11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0f));
        EXPECT(0x5e, gbc.readMem(0xba10));
        EXPECT(0xcc, gbc.readMem(0xe3c0));
        // CB 5E 005A
        gbc.setState(0x295f, 0x2c8e, 0xed30, 0x65ab, 0xb092, 0xe8da, 0x1, 0x1);
        gbc.writeMem(0x295f, { 0xcb, 0x5e });
        gbc.writeMem(0xe8da, { 0xd8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2c8e, gbc.sp());
        EXPECT(0x2961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xe8da));
        // CB 5E 005B
        gbc.setState(0x22ef, 0x51ce, 0x9e0, 0x9b02, 0xa3f7, 0x681d, 0x1, 0x1);
        gbc.writeMem(0x22ef, { 0xcb, 0x5e });
        gbc.writeMem(0x681d, { 0x3e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x51ce, gbc.sp());
        EXPECT(0x22f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 005C
        gbc.setState(0xd2aa, 0x8938, 0x1120, 0xefe, 0x3fb, 0xcfe1, 0x1, 0x1);
        gbc.writeMem(0xcfe1, { 0xb9 });
        gbc.writeMem(0xd2aa, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8938, gbc.sp());
        EXPECT(0xd2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcfe1));
        EXPECT(0xcb, gbc.readMem(0xd2aa));
        EXPECT(0x5e, gbc.readMem(0xd2ab));
        // CB 5E 005D
        gbc.setState(0x536e, 0xc834, 0xcd80, 0x8461, 0xfe3d, 0xfadc, 0x0, 0x1);
        gbc.writeMem(0x536e, { 0xcb, 0x5e });
        gbc.writeMem(0xfadc, { 0xe8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc834, gbc.sp());
        EXPECT(0x5370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xfadc));
        // CB 5E 005E
        gbc.setState(0x290d, 0x456d, 0x9f50, 0x89ad, 0x74dc, 0x741b, 0x1, 0x0);
        gbc.writeMem(0x290d, { 0xcb, 0x5e });
        gbc.writeMem(0x741b, { 0xbe });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x456d, gbc.sp());
        EXPECT(0x290f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 005F
        gbc.setState(0xe702, 0x7c6e, 0x8d90, 0xcb2e, 0x19ca, 0xafe9, 0x0, 0x1);
        gbc.writeMem(0xafe9, { 0xfe });
        gbc.writeMem(0xe702, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7c6e, gbc.sp());
        EXPECT(0xe704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xafe9));
        EXPECT(0xcb, gbc.readMem(0xe702));
        EXPECT(0x5e, gbc.readMem(0xe703));
        // CB 5E 0060
        gbc.setState(0x84f6, 0x98ea, 0x80f0, 0xaf64, 0xe414, 0xda4a, 0x0, 0x0);
        gbc.writeMem(0x84f6, { 0xcb, 0x5e });
        gbc.writeMem(0xda4a, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x98ea, gbc.sp());
        EXPECT(0x84f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f6));
        EXPECT(0x5e, gbc.readMem(0x84f7));
        EXPECT(0xa3, gbc.readMem(0xda4a));
        // CB 5E 0061
        gbc.setState(0x2402, 0x1506, 0x6f30, 0xdad0, 0x29a5, 0xfd8b, 0x1, 0x1);
        gbc.writeMem(0x2402, { 0xcb, 0x5e });
        gbc.writeMem(0xfd8b, { 0xb6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1506, gbc.sp());
        EXPECT(0x2404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xfd8b));
        // CB 5E 0062
        gbc.setState(0xc40e, 0x3167, 0xcf40, 0xb6bc, 0x389c, 0x514e, 0x0, 0x1);
        gbc.writeMem(0x514e, { 0xa });
        gbc.writeMem(0xc40e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3167, gbc.sp());
        EXPECT(0xc410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc40e));
        EXPECT(0x5e, gbc.readMem(0xc40f));
        // CB 5E 0063
        gbc.setState(0x9f31, 0x771d, 0xc540, 0x86bb, 0xf3d7, 0x863c, 0x0, 0x0);
        gbc.writeMem(0x863c, { 0x58 });
        gbc.writeMem(0x9f31, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x771d, gbc.sp());
        EXPECT(0x9f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x863c));
        EXPECT(0xcb, gbc.readMem(0x9f31));
        EXPECT(0x5e, gbc.readMem(0x9f32));
        // CB 5E 0064
        gbc.setState(0x87c9, 0x5e80, 0xa2f0, 0x3548, 0xbee9, 0x847e, 0x1, 0x0);
        gbc.writeMem(0x847e, { 0xfa });
        gbc.writeMem(0x87c9, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5e80, gbc.sp());
        EXPECT(0x87cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x847e));
        EXPECT(0xcb, gbc.readMem(0x87c9));
        EXPECT(0x5e, gbc.readMem(0x87ca));
        // CB 5E 0066
        gbc.setState(0x6028, 0x37e, 0x30e0, 0xe24, 0x584a, 0x2740, 0x0, 0x1);
        gbc.writeMem(0x2740, { 0x63 });
        gbc.writeMem(0x6028, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x37e, gbc.sp());
        EXPECT(0x602a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0067
        gbc.setState(0xd125, 0x6eb9, 0x9c60, 0x335a, 0x581a, 0xd487, 0x1, 0x1);
        gbc.writeMem(0xd125, { 0xcb, 0x5e });
        gbc.writeMem(0xd487, { 0x4e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6eb9, gbc.sp());
        EXPECT(0xd127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd125));
        EXPECT(0x5e, gbc.readMem(0xd126));
        EXPECT(0x4e, gbc.readMem(0xd487));
        // CB 5E 0068
        gbc.setState(0xe205, 0xce41, 0x1c70, 0x359c, 0xbfac, 0xd2e, 0x1, 0x0);
        gbc.writeMem(0xd2e, { 0xc2 });
        gbc.writeMem(0xe205, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xce41, gbc.sp());
        EXPECT(0xe207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe205));
        EXPECT(0x5e, gbc.readMem(0xe206));
        // CB 5E 0069
        gbc.setState(0x5b88, 0x4022, 0x4b10, 0x7de7, 0xdfec, 0x9987, 0x0, 0x0);
        gbc.writeMem(0x5b88, { 0xcb, 0x5e });
        gbc.writeMem(0x9987, { 0x8e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4022, gbc.sp());
        EXPECT(0x5b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x9987));
        // CB 5E 006A
        gbc.setState(0x6a83, 0x23e8, 0x1150, 0x3da4, 0x3142, 0x2a2a, 0x0, 0x0);
        gbc.writeMem(0x2a2a, { 0x6b });
        gbc.writeMem(0x6a83, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x23e8, gbc.sp());
        EXPECT(0x6a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 006B
        gbc.setState(0x8032, 0x9aff, 0xf9b0, 0x61f9, 0x9e8, 0xb2a2, 0x0, 0x1);
        gbc.writeMem(0x8032, { 0xcb, 0x5e });
        gbc.writeMem(0xb2a2, { 0x74 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9aff, gbc.sp());
        EXPECT(0x8034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8032));
        EXPECT(0x5e, gbc.readMem(0x8033));
        EXPECT(0x74, gbc.readMem(0xb2a2));
        // CB 5E 006C
        gbc.setState(0x4206, 0x2014, 0xa650, 0xfaef, 0xd576, 0xa5a2, 0x1, 0x1);
        gbc.writeMem(0x4206, { 0xcb, 0x5e });
        gbc.writeMem(0xa5a2, { 0x42 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2014, gbc.sp());
        EXPECT(0x4208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa5a2));
        // CB 5E 006D
        gbc.setState(0x2d32, 0x9ecc, 0x8900, 0x4a09, 0x4348, 0xb4fe, 0x0, 0x0);
        gbc.writeMem(0x2d32, { 0xcb, 0x5e });
        gbc.writeMem(0xb4fe, { 0xcb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9ecc, gbc.sp());
        EXPECT(0x2d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fe));
        // CB 5E 006E
        gbc.setState(0x68ae, 0x9b86, 0x2680, 0x8f20, 0x6ea4, 0xe981, 0x0, 0x0);
        gbc.writeMem(0x68ae, { 0xcb, 0x5e });
        gbc.writeMem(0xe981, { 0xcf });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9b86, gbc.sp());
        EXPECT(0x68b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xe981));
        // CB 5E 006F
        gbc.setState(0xe461, 0x3e94, 0xbd90, 0xc4d4, 0x431a, 0xad63, 0x1, 0x1);
        gbc.writeMem(0xad63, { 0x19 });
        gbc.writeMem(0xe461, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3e94, gbc.sp());
        EXPECT(0xe463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xad63));
        EXPECT(0xcb, gbc.readMem(0xe461));
        EXPECT(0x5e, gbc.readMem(0xe462));
        // CB 5E 0070
        gbc.setState(0x37a0, 0x73e8, 0x1490, 0x1ec2, 0x164f, 0xd015, 0x1, 0x1);
        gbc.writeMem(0x37a0, { 0xcb, 0x5e });
        gbc.writeMem(0xd015, { 0x26 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x73e8, gbc.sp());
        EXPECT(0x37a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd015));
        // CB 5E 0071
        gbc.setState(0xa966, 0xf5a, 0x8dc0, 0x6518, 0x9f3a, 0xa2c2, 0x0, 0x0);
        gbc.writeMem(0xa2c2, { 0x67 });
        gbc.writeMem(0xa966, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf5a, gbc.sp());
        EXPECT(0xa968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xa2c2));
        EXPECT(0xcb, gbc.readMem(0xa966));
        EXPECT(0x5e, gbc.readMem(0xa967));
        // CB 5E 0072
        gbc.setState(0xd791, 0x6b37, 0x38d0, 0xe584, 0xdea2, 0xf7db, 0x0, 0x1);
        gbc.writeMem(0xd791, { 0xcb, 0x5e });
        gbc.writeMem(0xf7db, { 0xd5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6b37, gbc.sp());
        EXPECT(0xd793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd791));
        EXPECT(0x5e, gbc.readMem(0xd792));
        EXPECT(0xd5, gbc.readMem(0xf7db));
        // CB 5E 0073
        gbc.setState(0xb066, 0xb761, 0xb530, 0x706c, 0x4fcd, 0x6e84, 0x1, 0x0);
        gbc.writeMem(0x6e84, { 0x8e });
        gbc.writeMem(0xb066, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb761, gbc.sp());
        EXPECT(0xb068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb066));
        EXPECT(0x5e, gbc.readMem(0xb067));
        // CB 5E 0074
        gbc.setState(0x816d, 0xd82, 0xd8a0, 0xfb4f, 0x3adf, 0x8eb7, 0x0, 0x0);
        gbc.writeMem(0x816d, { 0xcb, 0x5e });
        gbc.writeMem(0x8eb7, { 0xf5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0x816f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816d));
        EXPECT(0x5e, gbc.readMem(0x816e));
        EXPECT(0xf5, gbc.readMem(0x8eb7));
        // CB 5E 0075
        gbc.setState(0x385c, 0x8a60, 0x1590, 0x9c91, 0xf9a6, 0x6a8, 0x0, 0x1);
        gbc.writeMem(0x6a8, { 0x30 });
        gbc.writeMem(0x385c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8a60, gbc.sp());
        EXPECT(0x385e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0076
        gbc.setState(0x2e8c, 0xed7d, 0x6c20, 0xd17a, 0x522a, 0xca65, 0x0, 0x0);
        gbc.writeMem(0x2e8c, { 0xcb, 0x5e });
        gbc.writeMem(0xca65, { 0xc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xed7d, gbc.sp());
        EXPECT(0x2e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xca65));
        // CB 5E 0077
        gbc.setState(0xaf53, 0x3999, 0x8d50, 0xd3e1, 0x6138, 0x13b5, 0x1, 0x0);
        gbc.writeMem(0x13b5, { 0x2f });
        gbc.writeMem(0xaf53, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3999, gbc.sp());
        EXPECT(0xaf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf53));
        EXPECT(0x5e, gbc.readMem(0xaf54));
        // CB 5E 0078
        gbc.setState(0x5ea4, 0xb94f, 0x4690, 0xd8d0, 0xae4, 0x2f2c, 0x0, 0x0);
        gbc.writeMem(0x2f2c, { 0xa6 });
        gbc.writeMem(0x5ea4, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb94f, gbc.sp());
        EXPECT(0x5ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0079
        gbc.setState(0xb34b, 0x68e8, 0xcf70, 0x9db7, 0x582f, 0x34b7, 0x1, 0x0);
        gbc.writeMem(0x34b7, { 0x99 });
        gbc.writeMem(0xb34b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x68e8, gbc.sp());
        EXPECT(0xb34d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb34b));
        EXPECT(0x5e, gbc.readMem(0xb34c));
        // CB 5E 007A
        gbc.setState(0x4b6e, 0xe87e, 0xb860, 0x7f39, 0xdf81, 0x1298, 0x0, 0x1);
        gbc.writeMem(0x1298, { 0x6a });
        gbc.writeMem(0x4b6e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe87e, gbc.sp());
        EXPECT(0x4b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 007B
        gbc.setState(0x807c, 0xb241, 0x53e0, 0xcb3f, 0xb933, 0x24c1, 0x0, 0x1);
        gbc.writeMem(0x24c1, { 0xf9 });
        gbc.writeMem(0x807c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb241, gbc.sp());
        EXPECT(0x807e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807c));
        EXPECT(0x5e, gbc.readMem(0x807d));
        // CB 5E 007C
        gbc.setState(0xaed3, 0x9046, 0xb540, 0xa19f, 0xe43f, 0xf8f9, 0x0, 0x0);
        gbc.writeMem(0xaed3, { 0xcb, 0x5e });
        gbc.writeMem(0xf8f9, { 0x9a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9046, gbc.sp());
        EXPECT(0xaed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed3));
        EXPECT(0x5e, gbc.readMem(0xaed4));
        EXPECT(0x9a, gbc.readMem(0xf8f9));
        // CB 5E 007D
        gbc.setState(0xfd6, 0x9d0a, 0xa190, 0xdb68, 0x6cfa, 0x4213, 0x1, 0x1);
        gbc.writeMem(0xfd6, { 0xcb, 0x5e });
        gbc.writeMem(0x4213, { 0x8d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9d0a, gbc.sp());
        EXPECT(0xfd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 007E
        gbc.setState(0x87f2, 0xdd7a, 0xd830, 0x194e, 0x30b0, 0xdb66, 0x0, 0x1);
        gbc.writeMem(0x87f2, { 0xcb, 0x5e });
        gbc.writeMem(0xdb66, { 0xd0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdd7a, gbc.sp());
        EXPECT(0x87f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f2));
        EXPECT(0x5e, gbc.readMem(0x87f3));
        EXPECT(0xd0, gbc.readMem(0xdb66));
        // CB 5E 007F
        gbc.setState(0xa9fb, 0x270e, 0xe950, 0xbccf, 0x4b7f, 0xcfd, 0x0, 0x1);
        gbc.writeMem(0xcfd, { 0xa4 });
        gbc.writeMem(0xa9fb, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x270e, gbc.sp());
        EXPECT(0xa9fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9fb));
        EXPECT(0x5e, gbc.readMem(0xa9fc));
        // CB 5E 0080
        gbc.setState(0x745d, 0x8d68, 0x95f0, 0xff80, 0x50ca, 0x29f0, 0x0, 0x0);
        gbc.writeMem(0x29f0, { 0xba });
        gbc.writeMem(0x745d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8d68, gbc.sp());
        EXPECT(0x745f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0081
        gbc.setState(0xb0, 0xbca8, 0x2f40, 0xc5b2, 0x6e48, 0x279d, 0x1, 0x0);
        gbc.writeMem(0xb0, { 0xcb, 0x5e });
        gbc.writeMem(0x279d, { 0xef });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbca8, gbc.sp());
        EXPECT(0xb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0082
        gbc.setState(0xe79d, 0xa8cc, 0x2e80, 0x3d41, 0x34c5, 0xf93d, 0x1, 0x1);
        gbc.writeMem(0xe79d, { 0xcb, 0x5e });
        gbc.writeMem(0xf93d, { 0xc6 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa8cc, gbc.sp());
        EXPECT(0xe79f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79d));
        EXPECT(0x5e, gbc.readMem(0xe79e));
        EXPECT(0xc6, gbc.readMem(0xf93d));
        // CB 5E 0083
        gbc.setState(0x26c8, 0xe790, 0x1840, 0x7da3, 0x2b92, 0xcf1a, 0x0, 0x0);
        gbc.writeMem(0x26c8, { 0xcb, 0x5e });
        gbc.writeMem(0xcf1a, { 0x49 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe790, gbc.sp());
        EXPECT(0x26ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcf1a));
        // CB 5E 0084
        gbc.setState(0xabf, 0xc17f, 0xafd0, 0x2498, 0xcd50, 0xf7f2, 0x0, 0x0);
        gbc.writeMem(0xabf, { 0xcb, 0x5e });
        gbc.writeMem(0xf7f2, { 0x6f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc17f, gbc.sp());
        EXPECT(0xac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xf7f2));
        // CB 5E 0086
        gbc.setState(0xbe66, 0x12ed, 0xef00, 0xa252, 0xed57, 0x1ad, 0x0, 0x1);
        gbc.writeMem(0x1ad, { 0x2e });
        gbc.writeMem(0xbe66, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x12ed, gbc.sp());
        EXPECT(0xbe68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe66));
        EXPECT(0x5e, gbc.readMem(0xbe67));
        // CB 5E 0087
        gbc.setState(0xe03b, 0x316, 0xdb40, 0x40e6, 0x715e, 0x78f, 0x1, 0x0);
        gbc.writeMem(0x78f, { 0x2e });
        gbc.writeMem(0xe03b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x316, gbc.sp());
        EXPECT(0xe03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe03b));
        EXPECT(0x5e, gbc.readMem(0xe03c));
        // CB 5E 0088
        gbc.setState(0x9d35, 0x7e8b, 0xe060, 0xefa3, 0x8148, 0xbab6, 0x1, 0x0);
        gbc.writeMem(0x9d35, { 0xcb, 0x5e });
        gbc.writeMem(0xbab6, { 0x6a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7e8b, gbc.sp());
        EXPECT(0x9d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d35));
        EXPECT(0x5e, gbc.readMem(0x9d36));
        EXPECT(0x6a, gbc.readMem(0xbab6));
        // CB 5E 0089
        gbc.setState(0xa9af, 0x98e5, 0x7bd0, 0x6a3f, 0xda53, 0x3100, 0x1, 0x0);
        gbc.writeMem(0x3100, { 0xae });
        gbc.writeMem(0xa9af, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x98e5, gbc.sp());
        EXPECT(0xa9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9af));
        EXPECT(0x5e, gbc.readMem(0xa9b0));
        // CB 5E 008A
        gbc.setState(0x1e94, 0xb7db, 0xc880, 0x322c, 0x408e, 0xce4, 0x1, 0x1);
        gbc.writeMem(0xce4, { 0x50 });
        gbc.writeMem(0x1e94, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb7db, gbc.sp());
        EXPECT(0x1e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 008B
        gbc.setState(0x46ce, 0xf107, 0xe70, 0xc369, 0xa545, 0xa467, 0x1, 0x1);
        gbc.writeMem(0x46ce, { 0xcb, 0x5e });
        gbc.writeMem(0xa467, { 0xef });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf107, gbc.sp());
        EXPECT(0x46d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xa467));
        // CB 5E 008C
        gbc.setState(0x358c, 0x977e, 0xa360, 0x2079, 0xae4c, 0x73c6, 0x1, 0x0);
        gbc.writeMem(0x358c, { 0xcb, 0x5e });
        gbc.writeMem(0x73c6, { 0xd4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x977e, gbc.sp());
        EXPECT(0x358e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 008D
        gbc.setState(0x2c48, 0xd870, 0xdba0, 0xe90f, 0xc030, 0x9e30, 0x0, 0x0);
        gbc.writeMem(0x2c48, { 0xcb, 0x5e });
        gbc.writeMem(0x9e30, { 0xd7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd870, gbc.sp());
        EXPECT(0x2c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x9e30));
        // CB 5E 008E
        gbc.setState(0x4ce9, 0x62d9, 0x7e40, 0xf518, 0xd382, 0x511, 0x0, 0x0);
        gbc.writeMem(0x511, { 0xd6 });
        gbc.writeMem(0x4ce9, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x62d9, gbc.sp());
        EXPECT(0x4ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 008F
        gbc.setState(0x691f, 0x1866, 0x6850, 0xd362, 0xde60, 0x9cdc, 0x0, 0x1);
        gbc.writeMem(0x691f, { 0xcb, 0x5e });
        gbc.writeMem(0x9cdc, { 0xf1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1866, gbc.sp());
        EXPECT(0x6921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9cdc));
        // CB 5E 0090
        gbc.setState(0x7bb1, 0xdda1, 0xb230, 0xe3e6, 0x9ba5, 0xa4cc, 0x1, 0x0);
        gbc.writeMem(0x7bb1, { 0xcb, 0x5e });
        gbc.writeMem(0xa4cc, { 0xc9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdda1, gbc.sp());
        EXPECT(0x7bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa4cc));
        // CB 5E 0091
        gbc.setState(0xbdfc, 0x1dbe, 0xd620, 0x784d, 0x7bab, 0x1a1b, 0x0, 0x1);
        gbc.writeMem(0x1a1b, { 0x7 });
        gbc.writeMem(0xbdfc, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1dbe, gbc.sp());
        EXPECT(0xbdfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfc));
        EXPECT(0x5e, gbc.readMem(0xbdfd));
        // CB 5E 0092
        gbc.setState(0x397a, 0x242c, 0x6d10, 0x838, 0xf0bc, 0x5075, 0x1, 0x1);
        gbc.writeMem(0x397a, { 0xcb, 0x5e });
        gbc.writeMem(0x5075, { 0x24 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x242c, gbc.sp());
        EXPECT(0x397c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0093
        gbc.setState(0x5c5c, 0x8c5e, 0x8b0, 0xd0d5, 0x641b, 0x8942, 0x0, 0x0);
        gbc.writeMem(0x5c5c, { 0xcb, 0x5e });
        gbc.writeMem(0x8942, { 0x40 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8c5e, gbc.sp());
        EXPECT(0x5c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8942));
        // CB 5E 0094
        gbc.setState(0xedb5, 0x2214, 0xde30, 0xef2f, 0x339e, 0x1fb1, 0x1, 0x0);
        gbc.writeMem(0x1fb1, { 0x2a });
        gbc.writeMem(0xedb5, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2214, gbc.sp());
        EXPECT(0xedb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb5));
        EXPECT(0x5e, gbc.readMem(0xedb6));
        // CB 5E 0096
        gbc.setState(0xde5b, 0xb19b, 0x5570, 0xa2dd, 0xf7b3, 0x3981, 0x0, 0x0);
        gbc.writeMem(0x3981, { 0x46 });
        gbc.writeMem(0xde5b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb19b, gbc.sp());
        EXPECT(0xde5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde5b));
        EXPECT(0x5e, gbc.readMem(0xde5c));
        // CB 5E 0097
        gbc.setState(0x5e04, 0xbc02, 0x5310, 0x10f1, 0x7483, 0xfe09, 0x0, 0x0);
        gbc.writeMem(0x5e04, { 0xcb, 0x5e });
        gbc.writeMem(0xfe09, { 0x66 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbc02, gbc.sp());
        EXPECT(0x5e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xfe09));
        // CB 5E 0098
        gbc.setState(0x5c40, 0xfe3f, 0xd7b0, 0x4e9e, 0xbc9, 0xc126, 0x1, 0x0);
        gbc.writeMem(0x5c40, { 0xcb, 0x5e });
        gbc.writeMem(0xc126, { 0xf });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfe3f, gbc.sp());
        EXPECT(0x5c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xc126));
        // CB 5E 0099
        gbc.setState(0xe669, 0xb3ce, 0xa7c0, 0xfa84, 0xb6f6, 0xbeb0, 0x1, 0x0);
        gbc.writeMem(0xbeb0, { 0x84 });
        gbc.writeMem(0xe669, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb3ce, gbc.sp());
        EXPECT(0xe66b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xbeb0));
        EXPECT(0xcb, gbc.readMem(0xe669));
        EXPECT(0x5e, gbc.readMem(0xe66a));
        // CB 5E 009A
        gbc.setState(0x6069, 0x3059, 0xce30, 0x4177, 0xf699, 0x515, 0x1, 0x0);
        gbc.writeMem(0x515, { 0xe2 });
        gbc.writeMem(0x6069, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3059, gbc.sp());
        EXPECT(0x606b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 009B
        gbc.setState(0x2fe2, 0x4838, 0xfa90, 0x9619, 0x2b3b, 0xb878, 0x1, 0x1);
        gbc.writeMem(0x2fe2, { 0xcb, 0x5e });
        gbc.writeMem(0xb878, { 0xbe });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4838, gbc.sp());
        EXPECT(0x2fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xb878));
        // CB 5E 009C
        gbc.setState(0x35b1, 0xf67d, 0x1200, 0xe97f, 0x9b42, 0x71fd, 0x1, 0x1);
        gbc.writeMem(0x35b1, { 0xcb, 0x5e });
        gbc.writeMem(0x71fd, { 0xcf });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf67d, gbc.sp());
        EXPECT(0x35b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 009D
        gbc.setState(0xdb3f, 0xe25a, 0xc140, 0x2367, 0x15ff, 0x5143, 0x0, 0x1);
        gbc.writeMem(0x5143, { 0xb3 });
        gbc.writeMem(0xdb3f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe25a, gbc.sp());
        EXPECT(0xdb41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3f));
        EXPECT(0x5e, gbc.readMem(0xdb40));
        // CB 5E 009E
        gbc.setState(0xb3b3, 0xb00a, 0xded0, 0xfc10, 0xd52e, 0x1173, 0x0, 0x1);
        gbc.writeMem(0x1173, { 0xfb });
        gbc.writeMem(0xb3b3, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb00a, gbc.sp());
        EXPECT(0xb3b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b3));
        EXPECT(0x5e, gbc.readMem(0xb3b4));
        // CB 5E 009F
        gbc.setState(0x1f9, 0xde3a, 0xe900, 0x759e, 0x1ab, 0x2f86, 0x1, 0x0);
        gbc.writeMem(0x1f9, { 0xcb, 0x5e });
        gbc.writeMem(0x2f86, { 0x32 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xde3a, gbc.sp());
        EXPECT(0x1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 00A0
        gbc.setState(0xcfcd, 0x4253, 0x6c20, 0x5835, 0x654d, 0xc961, 0x0, 0x1);
        gbc.writeMem(0xc961, { 0x52 });
        gbc.writeMem(0xcfcd, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4253, gbc.sp());
        EXPECT(0xcfcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc961));
        EXPECT(0xcb, gbc.readMem(0xcfcd));
        EXPECT(0x5e, gbc.readMem(0xcfce));
        // CB 5E 00A1
        gbc.setState(0x9aee, 0x385d, 0xf1e0, 0x11b0, 0xd250, 0x4a1f, 0x0, 0x1);
        gbc.writeMem(0x4a1f, { 0x53 });
        gbc.writeMem(0x9aee, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x385d, gbc.sp());
        EXPECT(0x9af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aee));
        EXPECT(0x5e, gbc.readMem(0x9aef));
        // CB 5E 00A2
        gbc.setState(0x579, 0x2cae, 0x34e0, 0xb91a, 0x671a, 0x43b4, 0x0, 0x1);
        gbc.writeMem(0x579, { 0xcb, 0x5e });
        gbc.writeMem(0x43b4, { 0xba });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2cae, gbc.sp());
        EXPECT(0x57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 00A3
        gbc.setState(0xc4f2, 0x539, 0x1f80, 0x430f, 0xf27b, 0x369d, 0x0, 0x1);
        gbc.writeMem(0x369d, { 0xf4 });
        gbc.writeMem(0xc4f2, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x539, gbc.sp());
        EXPECT(0xc4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f2));
        EXPECT(0x5e, gbc.readMem(0xc4f3));
        // CB 5E 00A4
        gbc.setState(0xe6cf, 0x2fbf, 0xe080, 0xc378, 0x27b4, 0x81d8, 0x1, 0x0);
        gbc.writeMem(0x81d8, { 0xda });
        gbc.writeMem(0xe6cf, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2fbf, gbc.sp());
        EXPECT(0xe6d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x81d8));
        EXPECT(0xcb, gbc.readMem(0xe6cf));
        EXPECT(0x5e, gbc.readMem(0xe6d0));
        // CB 5E 00A5
        gbc.setState(0x17cb, 0xaa96, 0x1980, 0xc09, 0x9a9b, 0xda2c, 0x0, 0x0);
        gbc.writeMem(0x17cb, { 0xcb, 0x5e });
        gbc.writeMem(0xda2c, { 0xb7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xaa96, gbc.sp());
        EXPECT(0x17cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xda2c));
        // CB 5E 00A6
        gbc.setState(0x640f, 0xd7f6, 0x97d0, 0x13cb, 0x4454, 0x29be, 0x1, 0x1);
        gbc.writeMem(0x29be, { 0x74 });
        gbc.writeMem(0x640f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd7f6, gbc.sp());
        EXPECT(0x6411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 00A7
        gbc.setState(0x991c, 0xd00f, 0x5f40, 0x4625, 0x7b85, 0xd023, 0x1, 0x1);
        gbc.writeMem(0x991c, { 0xcb, 0x5e });
        gbc.writeMem(0xd023, { 0x1b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd00f, gbc.sp());
        EXPECT(0x991e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991c));
        EXPECT(0x5e, gbc.readMem(0x991d));
        EXPECT(0x1b, gbc.readMem(0xd023));
        // CB 5E 00A8
        gbc.setState(0x2a3d, 0xa0e, 0x8ca0, 0xb8f9, 0x449e, 0xdeab, 0x1, 0x1);
        gbc.writeMem(0x2a3d, { 0xcb, 0x5e });
        gbc.writeMem(0xdeab, { 0x1d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa0e, gbc.sp());
        EXPECT(0x2a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdeab));
        // CB 5E 00A9
        gbc.setState(0x8247, 0x8a00, 0x5450, 0x9bb8, 0xff5, 0xdd27, 0x0, 0x0);
        gbc.writeMem(0x8247, { 0xcb, 0x5e });
        gbc.writeMem(0xdd27, { 0xf8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8a00, gbc.sp());
        EXPECT(0x8249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8247));
        EXPECT(0x5e, gbc.readMem(0x8248));
        EXPECT(0xf8, gbc.readMem(0xdd27));
        // CB 5E 00AA
        gbc.setState(0xb535, 0x7f6d, 0x3130, 0x1acd, 0x9a0d, 0xf4c9, 0x1, 0x0);
        gbc.writeMem(0xb535, { 0xcb, 0x5e });
        gbc.writeMem(0xf4c9, { 0xbf });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7f6d, gbc.sp());
        EXPECT(0xb537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb535));
        EXPECT(0x5e, gbc.readMem(0xb536));
        EXPECT(0xbf, gbc.readMem(0xf4c9));
        // CB 5E 00AB
        gbc.setState(0x3d69, 0xe010, 0x69d0, 0xeb8e, 0x17fd, 0xec57, 0x0, 0x1);
        gbc.writeMem(0x3d69, { 0xcb, 0x5e });
        gbc.writeMem(0xec57, { 0xa8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe010, gbc.sp());
        EXPECT(0x3d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xec57));
        // CB 5E 00AC
        gbc.setState(0x8971, 0x7e8e, 0x5a00, 0x338, 0x165f, 0xa7be, 0x1, 0x1);
        gbc.writeMem(0x8971, { 0xcb, 0x5e });
        gbc.writeMem(0xa7be, { 0x2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7e8e, gbc.sp());
        EXPECT(0x8973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8971));
        EXPECT(0x5e, gbc.readMem(0x8972));
        EXPECT(0x2, gbc.readMem(0xa7be));
        // CB 5E 00AD
        gbc.setState(0x27b, 0xa28c, 0xd600, 0xf008, 0x9d1e, 0xd549, 0x1, 0x0);
        gbc.writeMem(0x27b, { 0xcb, 0x5e });
        gbc.writeMem(0xd549, { 0x8d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa28c, gbc.sp());
        EXPECT(0x27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd549));
        // CB 5E 00AE
        gbc.setState(0x4769, 0x926c, 0x5d0, 0x8640, 0x3fb8, 0xf9c7, 0x0, 0x1);
        gbc.writeMem(0x4769, { 0xcb, 0x5e });
        gbc.writeMem(0xf9c7, { 0x1f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x926c, gbc.sp());
        EXPECT(0x476b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xf9c7));
        // CB 5E 00AF
        gbc.setState(0xe3d7, 0x57d5, 0xb5e0, 0xfe59, 0x8a7a, 0xeea, 0x0, 0x1);
        gbc.writeMem(0xeea, { 0x2f });
        gbc.writeMem(0xe3d7, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x57d5, gbc.sp());
        EXPECT(0xe3d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d7));
        EXPECT(0x5e, gbc.readMem(0xe3d8));
        // CB 5E 00B0
        gbc.setState(0xc533, 0xf667, 0x15f0, 0x23fa, 0xc63e, 0x7941, 0x0, 0x0);
        gbc.writeMem(0x7941, { 0xd5 });
        gbc.writeMem(0xc533, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf667, gbc.sp());
        EXPECT(0xc535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc533));
        EXPECT(0x5e, gbc.readMem(0xc534));
        // CB 5E 00B1
        gbc.setState(0xa574, 0xc441, 0x6fc0, 0x48d6, 0x2c6, 0x1cb5, 0x0, 0x0);
        gbc.writeMem(0x1cb5, { 0x61 });
        gbc.writeMem(0xa574, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc441, gbc.sp());
        EXPECT(0xa576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa574));
        EXPECT(0x5e, gbc.readMem(0xa575));
        // CB 5E 00B2
        gbc.setState(0xd62c, 0x54fa, 0x1660, 0x1e22, 0x2966, 0x12c7, 0x0, 0x0);
        gbc.writeMem(0x12c7, { 0x39 });
        gbc.writeMem(0xd62c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x54fa, gbc.sp());
        EXPECT(0xd62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd62c));
        EXPECT(0x5e, gbc.readMem(0xd62d));
        // CB 5E 00B3
        gbc.setState(0x439f, 0x50e3, 0x1a80, 0xc234, 0x281f, 0xc180, 0x0, 0x1);
        gbc.writeMem(0x439f, { 0xcb, 0x5e });
        gbc.writeMem(0xc180, { 0x99 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x50e3, gbc.sp());
        EXPECT(0x43a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc180));
        // CB 5E 00B4
        gbc.setState(0x3161, 0xc475, 0xd3b0, 0xe3e1, 0xa484, 0xa87a, 0x1, 0x1);
        gbc.writeMem(0x3161, { 0xcb, 0x5e });
        gbc.writeMem(0xa87a, { 0x2a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc475, gbc.sp());
        EXPECT(0x3163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xa87a));
        // CB 5E 00B5
        gbc.setState(0x9e7, 0x382b, 0x72e0, 0x9c77, 0xb96c, 0x405a, 0x0, 0x0);
        gbc.writeMem(0x9e7, { 0xcb, 0x5e });
        gbc.writeMem(0x405a, { 0x75 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x382b, gbc.sp());
        EXPECT(0x9e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 00B6
        gbc.setState(0xd2c0, 0x72ff, 0x3e0, 0xaa39, 0x4fe1, 0x3285, 0x0, 0x1);
        gbc.writeMem(0x3285, { 0xd8 });
        gbc.writeMem(0xd2c0, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x72ff, gbc.sp());
        EXPECT(0xd2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c0));
        EXPECT(0x5e, gbc.readMem(0xd2c1));
        // CB 5E 00B7
        gbc.setState(0x730c, 0x97cf, 0xc580, 0xdd13, 0xa570, 0x5e9b, 0x1, 0x1);
        gbc.writeMem(0x5e9b, { 0xd3 });
        gbc.writeMem(0x730c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x97cf, gbc.sp());
        EXPECT(0x730e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 00B8
        gbc.setState(0x4642, 0x8265, 0xa020, 0xa436, 0xb39b, 0xb305, 0x1, 0x1);
        gbc.writeMem(0x4642, { 0xcb, 0x5e });
        gbc.writeMem(0xb305, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8265, gbc.sp());
        EXPECT(0x4644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb305));
        // CB 5E 00B9
        gbc.setState(0x56ac, 0x105e, 0xea10, 0xfe3f, 0xb1bc, 0xee8a, 0x0, 0x1);
        gbc.writeMem(0x56ac, { 0xcb, 0x5e });
        gbc.writeMem(0xee8a, { 0xd9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x105e, gbc.sp());
        EXPECT(0x56ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xee8a));
        // CB 5E 00BA
        gbc.setState(0x227, 0x5fa4, 0x80c0, 0x71e0, 0xb594, 0x7a5e, 0x0, 0x0);
        gbc.writeMem(0x227, { 0xcb, 0x5e });
        gbc.writeMem(0x7a5e, { 0x94 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5fa4, gbc.sp());
        EXPECT(0x229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 00BB
        gbc.setState(0x63bb, 0xb16c, 0x9590, 0x4f1e, 0x66f7, 0x2bb5, 0x0, 0x1);
        gbc.writeMem(0x2bb5, { 0x8f });
        gbc.writeMem(0x63bb, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb16c, gbc.sp());
        EXPECT(0x63bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 00BC
        gbc.setState(0xcea1, 0xb6d6, 0xd560, 0x11c7, 0xb21f, 0x90a9, 0x0, 0x0);
        gbc.writeMem(0x90a9, { 0x43 });
        gbc.writeMem(0xcea1, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb6d6, gbc.sp());
        EXPECT(0xcea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x90a9));
        EXPECT(0xcb, gbc.readMem(0xcea1));
        EXPECT(0x5e, gbc.readMem(0xcea2));
        // CB 5E 00BD
        gbc.setState(0x515d, 0x676, 0xeca0, 0xd7ad, 0xea1, 0x2a15, 0x0, 0x1);
        gbc.writeMem(0x2a15, { 0x32 });
        gbc.writeMem(0x515d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x676, gbc.sp());
        EXPECT(0x515f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 00BE
        gbc.setState(0x8cde, 0xeef4, 0xeeb0, 0x5cf2, 0x7e14, 0x9b3c, 0x0, 0x1);
        gbc.writeMem(0x8cde, { 0xcb, 0x5e });
        gbc.writeMem(0x9b3c, { 0x19 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xeef4, gbc.sp());
        EXPECT(0x8ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cde));
        EXPECT(0x5e, gbc.readMem(0x8cdf));
        EXPECT(0x19, gbc.readMem(0x9b3c));
        // CB 5E 00BF
        gbc.setState(0xdc06, 0x34a5, 0x4700, 0xf19, 0xb9c7, 0xd47f, 0x1, 0x0);
        gbc.writeMem(0xd47f, { 0xa2 });
        gbc.writeMem(0xdc06, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x34a5, gbc.sp());
        EXPECT(0xdc08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd47f));
        EXPECT(0xcb, gbc.readMem(0xdc06));
        EXPECT(0x5e, gbc.readMem(0xdc07));
        // CB 5E 00C0
        gbc.setState(0x30bb, 0x268c, 0xc100, 0xa081, 0xb5e7, 0x4714, 0x0, 0x0);
        gbc.writeMem(0x30bb, { 0xcb, 0x5e });
        gbc.writeMem(0x4714, { 0x67 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x268c, gbc.sp());
        EXPECT(0x30bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 00C1
        gbc.setState(0xba1e, 0xbe2d, 0x8080, 0xa4f7, 0x14d, 0xcc29, 0x1, 0x0);
        gbc.writeMem(0xba1e, { 0xcb, 0x5e });
        gbc.writeMem(0xcc29, { 0x65 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbe2d, gbc.sp());
        EXPECT(0xba20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1e));
        EXPECT(0x5e, gbc.readMem(0xba1f));
        EXPECT(0x65, gbc.readMem(0xcc29));
        // CB 5E 00C2
        gbc.setState(0x812c, 0xc7b2, 0x49f0, 0xe9ab, 0xafb8, 0x22a0, 0x0, 0x1);
        gbc.writeMem(0x22a0, { 0xbe });
        gbc.writeMem(0x812c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc7b2, gbc.sp());
        EXPECT(0x812e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x812c));
        EXPECT(0x5e, gbc.readMem(0x812d));
        // CB 5E 00C3
        gbc.setState(0x8022, 0x411c, 0x5dd0, 0x22ff, 0xc5f9, 0xad3, 0x0, 0x0);
        gbc.writeMem(0xad3, { 0xe5 });
        gbc.writeMem(0x8022, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x411c, gbc.sp());
        EXPECT(0x8024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8022));
        EXPECT(0x5e, gbc.readMem(0x8023));
        // CB 5E 00C4
        gbc.setState(0x43eb, 0x9f41, 0xfcb0, 0x5f64, 0x4bbe, 0x18ed, 0x1, 0x0);
        gbc.writeMem(0x18ed, { 0x1b });
        gbc.writeMem(0x43eb, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9f41, gbc.sp());
        EXPECT(0x43ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 00C5
        gbc.setState(0xef20, 0xd7de, 0x6e0, 0x2ff6, 0x5ef1, 0xb7c7, 0x0, 0x0);
        gbc.writeMem(0xb7c7, { 0x2d });
        gbc.writeMem(0xef20, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd7de, gbc.sp());
        EXPECT(0xef22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb7c7));
        EXPECT(0xcb, gbc.readMem(0xef20));
        EXPECT(0x5e, gbc.readMem(0xef21));
        // CB 5E 00C6
        gbc.setState(0x558d, 0x9acc, 0x34b0, 0x8704, 0xc6f9, 0xd83, 0x0, 0x1);
        gbc.writeMem(0xd83, { 0xa8 });
        gbc.writeMem(0x558d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9acc, gbc.sp());
        EXPECT(0x558f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 00C7
        gbc.setState(0x73b, 0xf374, 0x62c0, 0xd9de, 0xa345, 0x912b, 0x0, 0x1);
        gbc.writeMem(0x73b, { 0xcb, 0x5e });
        gbc.writeMem(0x912b, { 0xce });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf374, gbc.sp());
        EXPECT(0x73d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x912b));
        // CB 5E 00C8
        gbc.setState(0x771c, 0xc798, 0xb2d0, 0x9ff0, 0xf0b4, 0x102b, 0x1, 0x0);
        gbc.writeMem(0x102b, { 0x6b });
        gbc.writeMem(0x771c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc798, gbc.sp());
        EXPECT(0x771e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 00C9
        gbc.setState(0xd48a, 0x1837, 0x7260, 0x8d44, 0xb876, 0x3403, 0x1, 0x0);
        gbc.writeMem(0x3403, { 0x6 });
        gbc.writeMem(0xd48a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1837, gbc.sp());
        EXPECT(0xd48c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd48a));
        EXPECT(0x5e, gbc.readMem(0xd48b));
        // CB 5E 00CA
        gbc.setState(0x3789, 0x5687, 0x9860, 0x9e3, 0xed57, 0x92c1, 0x1, 0x1);
        gbc.writeMem(0x3789, { 0xcb, 0x5e });
        gbc.writeMem(0x92c1, { 0xcb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5687, gbc.sp());
        EXPECT(0x378b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c1));
        // CB 5E 00CB
        gbc.setState(0x41ca, 0xc25, 0xb350, 0x704b, 0x8c44, 0x45bb, 0x1, 0x1);
        gbc.writeMem(0x41ca, { 0xcb, 0x5e });
        gbc.writeMem(0x45bb, { 0x7e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc25, gbc.sp());
        EXPECT(0x41cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 00CC
        gbc.setState(0xcab0, 0x3626, 0xc060, 0xc69d, 0xc70, 0x9612, 0x0, 0x1);
        gbc.writeMem(0x9612, { 0x40 });
        gbc.writeMem(0xcab0, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3626, gbc.sp());
        EXPECT(0xcab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9612));
        EXPECT(0xcb, gbc.readMem(0xcab0));
        EXPECT(0x5e, gbc.readMem(0xcab1));
        // CB 5E 00CD
        gbc.setState(0xeaf6, 0x73a4, 0x4eb0, 0x758a, 0xe46f, 0x9eff, 0x1, 0x1);
        gbc.writeMem(0x9eff, { 0x4c });
        gbc.writeMem(0xeaf6, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x73a4, gbc.sp());
        EXPECT(0xeaf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9eff));
        EXPECT(0xcb, gbc.readMem(0xeaf6));
        EXPECT(0x5e, gbc.readMem(0xeaf7));
        // CB 5E 00CE
        gbc.setState(0xcdd7, 0x6fbf, 0x7dc0, 0xaf, 0x48f7, 0x312a, 0x1, 0x0);
        gbc.writeMem(0x312a, { 0x2d });
        gbc.writeMem(0xcdd7, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6fbf, gbc.sp());
        EXPECT(0xcdd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd7));
        EXPECT(0x5e, gbc.readMem(0xcdd8));
        // CB 5E 00CF
        gbc.setState(0x5be0, 0x964a, 0x7ef0, 0x6fd9, 0x7f49, 0x6d0c, 0x0, 0x1);
        gbc.writeMem(0x5be0, { 0xcb, 0x5e });
        gbc.writeMem(0x6d0c, { 0xd6 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x964a, gbc.sp());
        EXPECT(0x5be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 00D0
        gbc.setState(0x4aa8, 0x8252, 0xe7e0, 0xa3d8, 0xb9d4, 0xd5e2, 0x1, 0x1);
        gbc.writeMem(0x4aa8, { 0xcb, 0x5e });
        gbc.writeMem(0xd5e2, { 0x96 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8252, gbc.sp());
        EXPECT(0x4aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xd5e2));
        // CB 5E 00D1
        gbc.setState(0x18a, 0xb606, 0xec30, 0x93f5, 0x1552, 0x7644, 0x0, 0x0);
        gbc.writeMem(0x18a, { 0xcb, 0x5e });
        gbc.writeMem(0x7644, { 0x83 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb606, gbc.sp());
        EXPECT(0x18c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 00D2
        gbc.setState(0x40d7, 0xed91, 0x2120, 0xa6ab, 0xae97, 0xaf3e, 0x0, 0x0);
        gbc.writeMem(0x40d7, { 0xcb, 0x5e });
        gbc.writeMem(0xaf3e, { 0xcb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xed91, gbc.sp());
        EXPECT(0x40d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3e));
        // CB 5E 00D3
        gbc.setState(0x5559, 0xfb97, 0x2c50, 0xe490, 0x5ec7, 0x7784, 0x1, 0x0);
        gbc.writeMem(0x5559, { 0xcb, 0x5e });
        gbc.writeMem(0x7784, { 0x68 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfb97, gbc.sp());
        EXPECT(0x555b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 00D4
        gbc.setState(0x684c, 0x802f, 0x5a70, 0x9618, 0x7592, 0x9260, 0x1, 0x0);
        gbc.writeMem(0x684c, { 0xcb, 0x5e });
        gbc.writeMem(0x9260, { 0x72 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x802f, gbc.sp());
        EXPECT(0x684e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9260));
        // CB 5E 00D6
        gbc.setState(0x5ed4, 0xb6ee, 0xfe90, 0xc816, 0x9774, 0x3d57, 0x0, 0x0);
        gbc.writeMem(0x3d57, { 0xef });
        gbc.writeMem(0x5ed4, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb6ee, gbc.sp());
        EXPECT(0x5ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 00D7
        gbc.setState(0x95aa, 0x5030, 0xc5b0, 0xcc16, 0x7a92, 0x3479, 0x1, 0x1);
        gbc.writeMem(0x3479, { 0xca });
        gbc.writeMem(0x95aa, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5030, gbc.sp());
        EXPECT(0x95ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95aa));
        EXPECT(0x5e, gbc.readMem(0x95ab));
        // CB 5E 00D8
        gbc.setState(0x3f01, 0x6c01, 0x1c60, 0xb879, 0x3fb9, 0x1949, 0x1, 0x1);
        gbc.writeMem(0x1949, { 0x64 });
        gbc.writeMem(0x3f01, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6c01, gbc.sp());
        EXPECT(0x3f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 00D9
        gbc.setState(0x7a2e, 0xcc4a, 0x4df0, 0x9fdb, 0x7b8b, 0x66c2, 0x1, 0x1);
        gbc.writeMem(0x66c2, { 0x71 });
        gbc.writeMem(0x7a2e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcc4a, gbc.sp());
        EXPECT(0x7a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 00DA
        gbc.setState(0xc334, 0xe678, 0xdfc0, 0xe490, 0xec3f, 0x9fa6, 0x0, 0x0);
        gbc.writeMem(0x9fa6, { 0xff });
        gbc.writeMem(0xc334, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe678, gbc.sp());
        EXPECT(0xc336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9fa6));
        EXPECT(0xcb, gbc.readMem(0xc334));
        EXPECT(0x5e, gbc.readMem(0xc335));
        // CB 5E 00DB
        gbc.setState(0xde27, 0xc0c2, 0xedb0, 0xa6c5, 0xf93d, 0x9da2, 0x1, 0x0);
        gbc.writeMem(0x9da2, { 0x9 });
        gbc.writeMem(0xde27, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc0c2, gbc.sp());
        EXPECT(0xde29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9da2));
        EXPECT(0xcb, gbc.readMem(0xde27));
        EXPECT(0x5e, gbc.readMem(0xde28));
        // CB 5E 00DC
        gbc.setState(0xe096, 0xae3f, 0x8ca0, 0x2553, 0x4a66, 0x15c7, 0x1, 0x1);
        gbc.writeMem(0x15c7, { 0xae });
        gbc.writeMem(0xe096, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xae3f, gbc.sp());
        EXPECT(0xe098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe096));
        EXPECT(0x5e, gbc.readMem(0xe097));
        // CB 5E 00DD
        gbc.setState(0x5414, 0x99aa, 0x7010, 0xcc88, 0xd78, 0x6281, 0x1, 0x0);
        gbc.writeMem(0x5414, { 0xcb, 0x5e });
        gbc.writeMem(0x6281, { 0x24 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x99aa, gbc.sp());
        EXPECT(0x5416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 00DE
        gbc.setState(0x89dd, 0x23b1, 0x7210, 0xd2ea, 0x51f3, 0xb48f, 0x0, 0x0);
        gbc.writeMem(0x89dd, { 0xcb, 0x5e });
        gbc.writeMem(0xb48f, { 0x8d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x23b1, gbc.sp());
        EXPECT(0x89df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89dd));
        EXPECT(0x5e, gbc.readMem(0x89de));
        EXPECT(0x8d, gbc.readMem(0xb48f));
        // CB 5E 00DF
        gbc.setState(0x138e, 0xc8c2, 0x1720, 0xb8ed, 0x688a, 0x37de, 0x1, 0x1);
        gbc.writeMem(0x138e, { 0xcb, 0x5e });
        gbc.writeMem(0x37de, { 0x43 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc8c2, gbc.sp());
        EXPECT(0x1390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 00E0
        gbc.setState(0x8124, 0x977b, 0x51b0, 0xef91, 0x72a0, 0x4c1d, 0x1, 0x0);
        gbc.writeMem(0x4c1d, { 0xce });
        gbc.writeMem(0x8124, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x977b, gbc.sp());
        EXPECT(0x8126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8124));
        EXPECT(0x5e, gbc.readMem(0x8125));
        // CB 5E 00E1
        gbc.setState(0x55d2, 0xd3c8, 0xeb90, 0x5a6d, 0x4021, 0xd712, 0x0, 0x0);
        gbc.writeMem(0x55d2, { 0xcb, 0x5e });
        gbc.writeMem(0xd712, { 0x85 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd3c8, gbc.sp());
        EXPECT(0x55d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd712));
        // CB 5E 00E2
        gbc.setState(0x535f, 0xa9e1, 0x8750, 0x276, 0x99f9, 0xadb, 0x1, 0x1);
        gbc.writeMem(0xadb, { 0xda });
        gbc.writeMem(0x535f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa9e1, gbc.sp());
        EXPECT(0x5361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 00E3
        gbc.setState(0xe4ca, 0x8dfb, 0x8650, 0xf384, 0x4fbf, 0x9dcb, 0x1, 0x0);
        gbc.writeMem(0x9dcb, { 0xf6 });
        gbc.writeMem(0xe4ca, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8dfb, gbc.sp());
        EXPECT(0xe4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x9dcb));
        EXPECT(0xcb, gbc.readMem(0xe4ca));
        EXPECT(0x5e, gbc.readMem(0xe4cb));
        // CB 5E 00E4
        gbc.setState(0xeefb, 0x83b3, 0x9110, 0x3e12, 0xaa45, 0x6beb, 0x0, 0x0);
        gbc.writeMem(0x6beb, { 0x19 });
        gbc.writeMem(0xeefb, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x83b3, gbc.sp());
        EXPECT(0xeefd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeefb));
        EXPECT(0x5e, gbc.readMem(0xeefc));
        // CB 5E 00E5
        gbc.setState(0x5317, 0x7238, 0x4830, 0x8cbc, 0x6d1e, 0x84f8, 0x0, 0x0);
        gbc.writeMem(0x5317, { 0xcb, 0x5e });
        gbc.writeMem(0x84f8, { 0x18 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7238, gbc.sp());
        EXPECT(0x5319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x84f8));
        // CB 5E 00E6
        gbc.setState(0xeb67, 0x9e92, 0xb10, 0x13a8, 0xeb2d, 0x479a, 0x1, 0x0);
        gbc.writeMem(0x479a, { 0xc7 });
        gbc.writeMem(0xeb67, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9e92, gbc.sp());
        EXPECT(0xeb69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb67));
        EXPECT(0x5e, gbc.readMem(0xeb68));
        // CB 5E 00E8
        gbc.setState(0x6df8, 0x4ef0, 0x4310, 0xb43e, 0xbe10, 0xca45, 0x0, 0x1);
        gbc.writeMem(0x6df8, { 0xcb, 0x5e });
        gbc.writeMem(0xca45, { 0x7c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4ef0, gbc.sp());
        EXPECT(0x6dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xca45));
        // CB 5E 00E9
        gbc.setState(0xef91, 0xacd4, 0xc9b0, 0x6fc5, 0xb7c, 0x2029, 0x1, 0x0);
        gbc.writeMem(0x2029, { 0x67 });
        gbc.writeMem(0xef91, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xacd4, gbc.sp());
        EXPECT(0xef93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef91));
        EXPECT(0x5e, gbc.readMem(0xef92));
        // CB 5E 00EA
        gbc.setState(0xe58f, 0x9392, 0x1530, 0x9fce, 0x8bc5, 0x36b3, 0x0, 0x1);
        gbc.writeMem(0x36b3, { 0x5a });
        gbc.writeMem(0xe58f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9392, gbc.sp());
        EXPECT(0xe591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe58f));
        EXPECT(0x5e, gbc.readMem(0xe590));
        // CB 5E 00EB
        gbc.setState(0x529c, 0x6bcd, 0x97e0, 0xfaaf, 0xc4f, 0x6262, 0x0, 0x0);
        gbc.writeMem(0x529c, { 0xcb, 0x5e });
        gbc.writeMem(0x6262, { 0x26 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6bcd, gbc.sp());
        EXPECT(0x529e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 00EC
        gbc.setState(0xa50f, 0x2cd8, 0x52a0, 0xdc8c, 0x78a6, 0x5a7a, 0x1, 0x1);
        gbc.writeMem(0x5a7a, { 0x78 });
        gbc.writeMem(0xa50f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2cd8, gbc.sp());
        EXPECT(0xa511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50f));
        EXPECT(0x5e, gbc.readMem(0xa510));
        // CB 5E 00ED
        gbc.setState(0x17f5, 0x3ca1, 0x23b0, 0xfe34, 0xdde0, 0xc69c, 0x0, 0x1);
        gbc.writeMem(0x17f5, { 0xcb, 0x5e });
        gbc.writeMem(0xc69c, { 0x41 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3ca1, gbc.sp());
        EXPECT(0x17f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xc69c));
        // CB 5E 00EE
        gbc.setState(0x1e3e, 0x6dbf, 0x3aa0, 0x1070, 0xc1ee, 0xd9f, 0x0, 0x1);
        gbc.writeMem(0xd9f, { 0x87 });
        gbc.writeMem(0x1e3e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6dbf, gbc.sp());
        EXPECT(0x1e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 00EF
        gbc.setState(0x8c2, 0xe121, 0xf650, 0x6e46, 0xd571, 0x4014, 0x1, 0x1);
        gbc.writeMem(0x8c2, { 0xcb, 0x5e });
        gbc.writeMem(0x4014, { 0x76 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe121, gbc.sp());
        EXPECT(0x8c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 00F0
        gbc.setState(0xdb5a, 0xf389, 0x4110, 0x7a49, 0xf7a8, 0xa084, 0x0, 0x0);
        gbc.writeMem(0xa084, { 0x92 });
        gbc.writeMem(0xdb5a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf389, gbc.sp());
        EXPECT(0xdb5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa084));
        EXPECT(0xcb, gbc.readMem(0xdb5a));
        EXPECT(0x5e, gbc.readMem(0xdb5b));
        // CB 5E 00F1
        gbc.setState(0xda8b, 0x152c, 0x9570, 0xc7c5, 0xc755, 0x244c, 0x0, 0x1);
        gbc.writeMem(0x244c, { 0x49 });
        gbc.writeMem(0xda8b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x152c, gbc.sp());
        EXPECT(0xda8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8b));
        EXPECT(0x5e, gbc.readMem(0xda8c));
        // CB 5E 00F2
        gbc.setState(0xcc2b, 0xaeab, 0xfe40, 0xdbe6, 0xe1a8, 0x2891, 0x0, 0x0);
        gbc.writeMem(0x2891, { 0xe5 });
        gbc.writeMem(0xcc2b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xaeab, gbc.sp());
        EXPECT(0xcc2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2b));
        EXPECT(0x5e, gbc.readMem(0xcc2c));
        // CB 5E 00F3
        gbc.setState(0xb2df, 0x1d98, 0xc390, 0xdc79, 0x1de9, 0x9950, 0x0, 0x1);
        gbc.writeMem(0x9950, { 0x8a });
        gbc.writeMem(0xb2df, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1d98, gbc.sp());
        EXPECT(0xb2e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9950));
        EXPECT(0xcb, gbc.readMem(0xb2df));
        EXPECT(0x5e, gbc.readMem(0xb2e0));
        // CB 5E 00F5
        gbc.setState(0x2d9, 0xf6ce, 0x6a50, 0x2c34, 0xfdba, 0xcb20, 0x0, 0x0);
        gbc.writeMem(0x2d9, { 0xcb, 0x5e });
        gbc.writeMem(0xcb20, { 0x68 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf6ce, gbc.sp());
        EXPECT(0x2db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcb20));
        // CB 5E 00F6
        gbc.setState(0xb826, 0x589c, 0xb420, 0xca0a, 0x2962, 0xe2f4, 0x0, 0x0);
        gbc.writeMem(0xb826, { 0xcb, 0x5e });
        gbc.writeMem(0xe2f4, { 0xa4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x589c, gbc.sp());
        EXPECT(0xb828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb826));
        EXPECT(0x5e, gbc.readMem(0xb827));
        EXPECT(0xa4, gbc.readMem(0xe2f4));
        // CB 5E 00F7
        gbc.setState(0xc140, 0x2311, 0xa750, 0x1f7e, 0xb1f5, 0xdf8a, 0x0, 0x1);
        gbc.writeMem(0xc140, { 0xcb, 0x5e });
        gbc.writeMem(0xdf8a, { 0xad });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2311, gbc.sp());
        EXPECT(0xc142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc140));
        EXPECT(0x5e, gbc.readMem(0xc141));
        EXPECT(0xad, gbc.readMem(0xdf8a));
        // CB 5E 00F8
        gbc.setState(0xb36b, 0xa5d7, 0xafc0, 0xb3c3, 0xe596, 0x48, 0x1, 0x1);
        gbc.writeMem(0x48, { 0xed });
        gbc.writeMem(0xb36b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa5d7, gbc.sp());
        EXPECT(0xb36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb36b));
        EXPECT(0x5e, gbc.readMem(0xb36c));
        // CB 5E 00F9
        gbc.setState(0x629e, 0xc6c5, 0x9f0, 0xbe33, 0x7c53, 0xd8af, 0x1, 0x1);
        gbc.writeMem(0x629e, { 0xcb, 0x5e });
        gbc.writeMem(0xd8af, { 0x45 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc6c5, gbc.sp());
        EXPECT(0x62a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xd8af));
        // CB 5E 00FA
        gbc.setState(0xc3f9, 0x6143, 0x4fc0, 0xa875, 0xba16, 0x24fc, 0x1, 0x1);
        gbc.writeMem(0x24fc, { 0x82 });
        gbc.writeMem(0xc3f9, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6143, gbc.sp());
        EXPECT(0xc3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f9));
        EXPECT(0x5e, gbc.readMem(0xc3fa));
        // CB 5E 00FB
        gbc.setState(0xd13b, 0x3340, 0x49a0, 0x20c4, 0xfded, 0xceb9, 0x1, 0x0);
        gbc.writeMem(0xceb9, { 0x15 });
        gbc.writeMem(0xd13b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3340, gbc.sp());
        EXPECT(0xd13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xceb9));
        EXPECT(0xcb, gbc.readMem(0xd13b));
        EXPECT(0x5e, gbc.readMem(0xd13c));
        // CB 5E 00FC
        gbc.setState(0x11b, 0x4e6d, 0xf280, 0x7fc1, 0x55ac, 0xd441, 0x1, 0x1);
        gbc.writeMem(0x11b, { 0xcb, 0x5e });
        gbc.writeMem(0xd441, { 0xde });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4e6d, gbc.sp());
        EXPECT(0x11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xd441));
        // CB 5E 00FD
        gbc.setState(0x6aeb, 0x1d9e, 0x7460, 0x1fd3, 0xf139, 0xae2e, 0x1, 0x1);
        gbc.writeMem(0x6aeb, { 0xcb, 0x5e });
        gbc.writeMem(0xae2e, { 0xe7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1d9e, gbc.sp());
        EXPECT(0x6aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xae2e));
        // CB 5E 00FE
        gbc.setState(0xb37b, 0x1f9a, 0x5950, 0x539, 0x5e6a, 0x64c0, 0x1, 0x0);
        gbc.writeMem(0x64c0, { 0xb1 });
        gbc.writeMem(0xb37b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1f9a, gbc.sp());
        EXPECT(0xb37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb37b));
        EXPECT(0x5e, gbc.readMem(0xb37c));
        // CB 5E 00FF
        gbc.setState(0x8d18, 0xa1bc, 0xa320, 0xa524, 0xbf8a, 0x7f20, 0x1, 0x0);
        gbc.writeMem(0x7f20, { 0x32 });
        gbc.writeMem(0x8d18, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa1bc, gbc.sp());
        EXPECT(0x8d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d18));
        EXPECT(0x5e, gbc.readMem(0x8d19));
        // CB 5E 0100
        gbc.setState(0x9282, 0xefb2, 0xf5d0, 0xd8a3, 0xb3de, 0x5375, 0x1, 0x0);
        gbc.writeMem(0x5375, { 0xca });
        gbc.writeMem(0x9282, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xefb2, gbc.sp());
        EXPECT(0x9284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9282));
        EXPECT(0x5e, gbc.readMem(0x9283));
        // CB 5E 0101
        gbc.setState(0x3f07, 0xd2e0, 0x2930, 0x7cd, 0x8a08, 0x8454, 0x0, 0x1);
        gbc.writeMem(0x3f07, { 0xcb, 0x5e });
        gbc.writeMem(0x8454, { 0x3e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd2e0, gbc.sp());
        EXPECT(0x3f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8454));
        // CB 5E 0102
        gbc.setState(0x7b22, 0x7725, 0xe8d0, 0x1f87, 0xe2d4, 0xb324, 0x1, 0x0);
        gbc.writeMem(0x7b22, { 0xcb, 0x5e });
        gbc.writeMem(0xb324, { 0xf7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7725, gbc.sp());
        EXPECT(0x7b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb324));
        // CB 5E 0103
        gbc.setState(0xaafb, 0xb742, 0x2e0, 0x4d58, 0x62df, 0xe1b7, 0x1, 0x0);
        gbc.writeMem(0xaafb, { 0xcb, 0x5e });
        gbc.writeMem(0xe1b7, { 0xba });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb742, gbc.sp());
        EXPECT(0xaafd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaafb));
        EXPECT(0x5e, gbc.readMem(0xaafc));
        EXPECT(0xba, gbc.readMem(0xe1b7));
        // CB 5E 0104
        gbc.setState(0x1e51, 0xe2ce, 0x4f10, 0x1c45, 0x4093, 0xf719, 0x0, 0x1);
        gbc.writeMem(0x1e51, { 0xcb, 0x5e });
        gbc.writeMem(0xf719, { 0x9c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe2ce, gbc.sp());
        EXPECT(0x1e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xf719));
        // CB 5E 0105
        gbc.setState(0x86fe, 0x7eee, 0x8af0, 0xe21f, 0xa794, 0xdd35, 0x1, 0x0);
        gbc.writeMem(0x86fe, { 0xcb, 0x5e });
        gbc.writeMem(0xdd35, { 0x6b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7eee, gbc.sp());
        EXPECT(0x8700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fe));
        EXPECT(0x5e, gbc.readMem(0x86ff));
        EXPECT(0x6b, gbc.readMem(0xdd35));
        // CB 5E 0107
        gbc.setState(0x3e79, 0x5819, 0xdbf0, 0x2ef4, 0xff1a, 0xc9b2, 0x1, 0x0);
        gbc.writeMem(0x3e79, { 0xcb, 0x5e });
        gbc.writeMem(0xc9b2, { 0xd0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5819, gbc.sp());
        EXPECT(0x3e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc9b2));
        // CB 5E 0108
        gbc.setState(0x6996, 0xb97b, 0xaf80, 0xf417, 0x8b6a, 0x1284, 0x1, 0x0);
        gbc.writeMem(0x1284, { 0x77 });
        gbc.writeMem(0x6996, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb97b, gbc.sp());
        EXPECT(0x6998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0109
        gbc.setState(0xaf53, 0xf906, 0x7a70, 0x3275, 0x87c2, 0xc2c3, 0x1, 0x1);
        gbc.writeMem(0xaf53, { 0xcb, 0x5e });
        gbc.writeMem(0xc2c3, { 0xd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf906, gbc.sp());
        EXPECT(0xaf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf53));
        EXPECT(0x5e, gbc.readMem(0xaf54));
        EXPECT(0xd, gbc.readMem(0xc2c3));
        // CB 5E 010B
        gbc.setState(0xe246, 0xc192, 0xf870, 0x61be, 0x1c2a, 0x1c01, 0x1, 0x0);
        gbc.writeMem(0x1c01, { 0xfe });
        gbc.writeMem(0xe246, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc192, gbc.sp());
        EXPECT(0xe248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe246));
        EXPECT(0x5e, gbc.readMem(0xe247));
        // CB 5E 010C
        gbc.setState(0xeaf0, 0x69fd, 0xd7c0, 0x7e65, 0x153d, 0x2a4e, 0x0, 0x0);
        gbc.writeMem(0x2a4e, { 0xf7 });
        gbc.writeMem(0xeaf0, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x69fd, gbc.sp());
        EXPECT(0xeaf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf0));
        EXPECT(0x5e, gbc.readMem(0xeaf1));
        // CB 5E 010D
        gbc.setState(0xeb98, 0x6be1, 0xabb0, 0x14e5, 0x14d8, 0x1be9, 0x0, 0x0);
        gbc.writeMem(0x1be9, { 0x5d });
        gbc.writeMem(0xeb98, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6be1, gbc.sp());
        EXPECT(0xeb9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb98));
        EXPECT(0x5e, gbc.readMem(0xeb99));
        // CB 5E 010E
        gbc.setState(0x9196, 0xfde4, 0xe6b0, 0x566b, 0xcec1, 0xf434, 0x0, 0x1);
        gbc.writeMem(0x9196, { 0xcb, 0x5e });
        gbc.writeMem(0xf434, { 0x74 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfde4, gbc.sp());
        EXPECT(0x9198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9196));
        EXPECT(0x5e, gbc.readMem(0x9197));
        EXPECT(0x74, gbc.readMem(0xf434));
        // CB 5E 010F
        gbc.setState(0xe224, 0x68b7, 0x65d0, 0x1dd4, 0xb11c, 0xe47b, 0x0, 0x0);
        gbc.writeMem(0xe224, { 0xcb, 0x5e });
        gbc.writeMem(0xe47b, { 0x2f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x68b7, gbc.sp());
        EXPECT(0xe226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe224));
        EXPECT(0x5e, gbc.readMem(0xe225));
        EXPECT(0x2f, gbc.readMem(0xe47b));
        // CB 5E 0110
        gbc.setState(0x8d9a, 0x619, 0x9110, 0xee96, 0xdc8a, 0x1dbc, 0x0, 0x0);
        gbc.writeMem(0x1dbc, { 0xe6 });
        gbc.writeMem(0x8d9a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x619, gbc.sp());
        EXPECT(0x8d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d9a));
        EXPECT(0x5e, gbc.readMem(0x8d9b));
        // CB 5E 0111
        gbc.setState(0x88dc, 0x2b6c, 0x9a70, 0x7a1d, 0x16df, 0x9955, 0x0, 0x1);
        gbc.writeMem(0x88dc, { 0xcb, 0x5e });
        gbc.writeMem(0x9955, { 0x35 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2b6c, gbc.sp());
        EXPECT(0x88de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88dc));
        EXPECT(0x5e, gbc.readMem(0x88dd));
        EXPECT(0x35, gbc.readMem(0x9955));
        // CB 5E 0112
        gbc.setState(0x57f5, 0xe53a, 0x8830, 0xf6ef, 0x48ed, 0xd470, 0x1, 0x0);
        gbc.writeMem(0x57f5, { 0xcb, 0x5e });
        gbc.writeMem(0xd470, { 0xf4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe53a, gbc.sp());
        EXPECT(0x57f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xd470));
        // CB 5E 0113
        gbc.setState(0xed97, 0x8426, 0x76c0, 0x12ac, 0x5e30, 0x5094, 0x0, 0x0);
        gbc.writeMem(0x5094, { 0x71 });
        gbc.writeMem(0xed97, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8426, gbc.sp());
        EXPECT(0xed99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed97));
        EXPECT(0x5e, gbc.readMem(0xed98));
        // CB 5E 0115
        gbc.setState(0x1092, 0xed6f, 0x7100, 0x5c13, 0xe357, 0x40ba, 0x1, 0x0);
        gbc.writeMem(0x1092, { 0xcb, 0x5e });
        gbc.writeMem(0x40ba, { 0xb6 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xed6f, gbc.sp());
        EXPECT(0x1094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0116
        gbc.setState(0x8582, 0xb01f, 0x15b0, 0x2e3d, 0x3f48, 0xc23b, 0x0, 0x1);
        gbc.writeMem(0x8582, { 0xcb, 0x5e });
        gbc.writeMem(0xc23b, { 0x95 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb01f, gbc.sp());
        EXPECT(0x8584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8582));
        EXPECT(0x5e, gbc.readMem(0x8583));
        EXPECT(0x95, gbc.readMem(0xc23b));
        // CB 5E 0117
        gbc.setState(0x2ce5, 0x4ba2, 0xbc20, 0xf45a, 0xd13c, 0xe5f9, 0x1, 0x1);
        gbc.writeMem(0x2ce5, { 0xcb, 0x5e });
        gbc.writeMem(0xe5f9, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4ba2, gbc.sp());
        EXPECT(0x2ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe5f9));
        // CB 5E 0118
        gbc.setState(0x2b2c, 0x9588, 0xa720, 0xee2e, 0xef69, 0xff82, 0x1, 0x1);
        gbc.writeMem(0x2b2c, { 0xcb, 0x5e });
        gbc.writeMem(0xff82, { 0x5e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9588, gbc.sp());
        EXPECT(0x2b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xff82));
        // CB 5E 0119
        gbc.setState(0x8463, 0x9347, 0x5d30, 0x62ab, 0xc939, 0x54f0, 0x0, 0x0);
        gbc.writeMem(0x54f0, { 0xdf });
        gbc.writeMem(0x8463, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9347, gbc.sp());
        EXPECT(0x8465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8463));
        EXPECT(0x5e, gbc.readMem(0x8464));
        // CB 5E 011A
        gbc.setState(0x4ccf, 0xd95c, 0x6880, 0xdbb, 0xb645, 0x7ca0, 0x1, 0x0);
        gbc.writeMem(0x4ccf, { 0xcb, 0x5e });
        gbc.writeMem(0x7ca0, { 0x89 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd95c, gbc.sp());
        EXPECT(0x4cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 011B
        gbc.setState(0x36ad, 0x8cc7, 0xf1e0, 0x86c2, 0xba0, 0xfa7e, 0x1, 0x1);
        gbc.writeMem(0x36ad, { 0xcb, 0x5e });
        gbc.writeMem(0xfa7e, { 0x83 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8cc7, gbc.sp());
        EXPECT(0x36af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xfa7e));
        // CB 5E 011C
        gbc.setState(0xba52, 0x3c9c, 0x48e0, 0xa836, 0x85b5, 0xd8b9, 0x1, 0x1);
        gbc.writeMem(0xba52, { 0xcb, 0x5e });
        gbc.writeMem(0xd8b9, { 0x9b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3c9c, gbc.sp());
        EXPECT(0xba54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba52));
        EXPECT(0x5e, gbc.readMem(0xba53));
        EXPECT(0x9b, gbc.readMem(0xd8b9));
        // CB 5E 011D
        gbc.setState(0x451, 0x6768, 0x16c0, 0xd6bd, 0x3000, 0x19b2, 0x0, 0x1);
        gbc.writeMem(0x451, { 0xcb, 0x5e });
        gbc.writeMem(0x19b2, { 0x90 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6768, gbc.sp());
        EXPECT(0x453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 011E
        gbc.setState(0x679d, 0xb547, 0xbc20, 0xf379, 0x436e, 0x5a23, 0x0, 0x1);
        gbc.writeMem(0x5a23, { 0x19 });
        gbc.writeMem(0x679d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb547, gbc.sp());
        EXPECT(0x679f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 011F
        gbc.setState(0xb09a, 0xc785, 0x2a20, 0x4020, 0xce8e, 0xd625, 0x1, 0x0);
        gbc.writeMem(0xb09a, { 0xcb, 0x5e });
        gbc.writeMem(0xd625, { 0xaa });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc785, gbc.sp());
        EXPECT(0xb09c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09a));
        EXPECT(0x5e, gbc.readMem(0xb09b));
        EXPECT(0xaa, gbc.readMem(0xd625));
        // CB 5E 0120
        gbc.setState(0xac69, 0x3e75, 0xb020, 0xeab8, 0xb4b0, 0x626e, 0x1, 0x1);
        gbc.writeMem(0x626e, { 0x7d });
        gbc.writeMem(0xac69, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3e75, gbc.sp());
        EXPECT(0xac6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac69));
        EXPECT(0x5e, gbc.readMem(0xac6a));
        // CB 5E 0121
        gbc.setState(0x245f, 0xbcdc, 0xcdf0, 0x83d4, 0xe18c, 0xa86c, 0x0, 0x0);
        gbc.writeMem(0x245f, { 0xcb, 0x5e });
        gbc.writeMem(0xa86c, { 0x60 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbcdc, gbc.sp());
        EXPECT(0x2461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xa86c));
        // CB 5E 0122
        gbc.setState(0x9d30, 0xc755, 0xa5b0, 0x4c9, 0xa03, 0x3a6c, 0x0, 0x0);
        gbc.writeMem(0x3a6c, { 0xd });
        gbc.writeMem(0x9d30, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc755, gbc.sp());
        EXPECT(0x9d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d30));
        EXPECT(0x5e, gbc.readMem(0x9d31));
        // CB 5E 0123
        gbc.setState(0x8242, 0x5543, 0xbfb0, 0x9bc4, 0xc1ca, 0x6341, 0x1, 0x1);
        gbc.writeMem(0x6341, { 0x68 });
        gbc.writeMem(0x8242, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5543, gbc.sp());
        EXPECT(0x8244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8242));
        EXPECT(0x5e, gbc.readMem(0x8243));
        // CB 5E 0124
        gbc.setState(0xa0fc, 0x2026, 0x6220, 0x15d0, 0x56e1, 0x55ae, 0x1, 0x1);
        gbc.writeMem(0x55ae, { 0xc5 });
        gbc.writeMem(0xa0fc, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2026, gbc.sp());
        EXPECT(0xa0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0fc));
        EXPECT(0x5e, gbc.readMem(0xa0fd));
        // CB 5E 0126
        gbc.setState(0x7794, 0x64fa, 0x3130, 0x58e0, 0x8565, 0xfda3, 0x0, 0x0);
        gbc.writeMem(0x7794, { 0xcb, 0x5e });
        gbc.writeMem(0xfda3, { 0x79 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x64fa, gbc.sp());
        EXPECT(0x7796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xfda3));
        // CB 5E 0127
        gbc.setState(0x2c41, 0xf040, 0xe100, 0x843c, 0x5637, 0xa42, 0x0, 0x1);
        gbc.writeMem(0xa42, { 0x1b });
        gbc.writeMem(0x2c41, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf040, gbc.sp());
        EXPECT(0x2c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0129
        gbc.setState(0x7bbf, 0x9bd7, 0xb470, 0xc82, 0xd3fb, 0xce19, 0x0, 0x0);
        gbc.writeMem(0x7bbf, { 0xcb, 0x5e });
        gbc.writeMem(0xce19, { 0xc6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9bd7, gbc.sp());
        EXPECT(0x7bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xce19));
        // CB 5E 012B
        gbc.setState(0x7d6, 0x1479, 0x8950, 0xf90b, 0x8397, 0xb504, 0x1, 0x0);
        gbc.writeMem(0x7d6, { 0xcb, 0x5e });
        gbc.writeMem(0xb504, { 0x47 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1479, gbc.sp());
        EXPECT(0x7d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb504));
        // CB 5E 012C
        gbc.setState(0xc516, 0x161a, 0xc340, 0x6e5d, 0x118b, 0xeddf, 0x1, 0x1);
        gbc.writeMem(0xc516, { 0xcb, 0x5e });
        gbc.writeMem(0xeddf, { 0x4f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x161a, gbc.sp());
        EXPECT(0xc518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc516));
        EXPECT(0x5e, gbc.readMem(0xc517));
        EXPECT(0x4f, gbc.readMem(0xeddf));
        // CB 5E 012D
        gbc.setState(0x2675, 0xb4a2, 0xd970, 0x9a0c, 0x7b43, 0x2a12, 0x0, 0x0);
        gbc.writeMem(0x2675, { 0xcb, 0x5e });
        gbc.writeMem(0x2a12, { 0xe });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb4a2, gbc.sp());
        EXPECT(0x2677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 012E
        gbc.setState(0xb026, 0x354c, 0x7630, 0x318f, 0x2d42, 0x1d3, 0x0, 0x0);
        gbc.writeMem(0x1d3, { 0xa6 });
        gbc.writeMem(0xb026, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x354c, gbc.sp());
        EXPECT(0xb028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb026));
        EXPECT(0x5e, gbc.readMem(0xb027));
        // CB 5E 012F
        gbc.setState(0xc7a8, 0x252f, 0x7f10, 0x2886, 0x1cbb, 0xac87, 0x1, 0x0);
        gbc.writeMem(0xac87, { 0x4c });
        gbc.writeMem(0xc7a8, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x252f, gbc.sp());
        EXPECT(0xc7aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xac87));
        EXPECT(0xcb, gbc.readMem(0xc7a8));
        EXPECT(0x5e, gbc.readMem(0xc7a9));
        // CB 5E 0130
        gbc.setState(0xc434, 0xc7d8, 0x5140, 0x2c3b, 0xa38a, 0xf391, 0x1, 0x0);
        gbc.writeMem(0xc434, { 0xcb, 0x5e });
        gbc.writeMem(0xf391, { 0x10 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc7d8, gbc.sp());
        EXPECT(0xc436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc434));
        EXPECT(0x5e, gbc.readMem(0xc435));
        EXPECT(0x10, gbc.readMem(0xf391));
        // CB 5E 0131
        gbc.setState(0x5923, 0xbf70, 0x41b0, 0x25c8, 0x20a0, 0x2341, 0x1, 0x1);
        gbc.writeMem(0x2341, { 0xd1 });
        gbc.writeMem(0x5923, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbf70, gbc.sp());
        EXPECT(0x5925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0132
        gbc.setState(0x6445, 0x128e, 0x1c10, 0x7c34, 0x5d65, 0xec8f, 0x1, 0x0);
        gbc.writeMem(0x6445, { 0xcb, 0x5e });
        gbc.writeMem(0xec8f, { 0xf3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x128e, gbc.sp());
        EXPECT(0x6447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xec8f));
        // CB 5E 0133
        gbc.setState(0x87f3, 0x5353, 0x7bf0, 0x20b6, 0x29a3, 0xcb4c, 0x0, 0x1);
        gbc.writeMem(0x87f3, { 0xcb, 0x5e });
        gbc.writeMem(0xcb4c, { 0x2d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5353, gbc.sp());
        EXPECT(0x87f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f3));
        EXPECT(0x5e, gbc.readMem(0x87f4));
        EXPECT(0x2d, gbc.readMem(0xcb4c));
        // CB 5E 0134
        gbc.setState(0x3fc7, 0x5b7b, 0x3e80, 0x6836, 0xd667, 0x5931, 0x0, 0x0);
        gbc.writeMem(0x3fc7, { 0xcb, 0x5e });
        gbc.writeMem(0x5931, { 0x7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5b7b, gbc.sp());
        EXPECT(0x3fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0135
        gbc.setState(0x5dd2, 0x4b20, 0x5a0, 0xbc7a, 0xf2f5, 0xd351, 0x1, 0x0);
        gbc.writeMem(0x5dd2, { 0xcb, 0x5e });
        gbc.writeMem(0xd351, { 0x8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4b20, gbc.sp());
        EXPECT(0x5dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xd351));
        // CB 5E 0136
        gbc.setState(0x5af8, 0x7e55, 0x4610, 0x2746, 0xa14f, 0x8084, 0x1, 0x0);
        gbc.writeMem(0x5af8, { 0xcb, 0x5e });
        gbc.writeMem(0x8084, { 0xe });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7e55, gbc.sp());
        EXPECT(0x5afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8084));
        // CB 5E 0137
        gbc.setState(0x46da, 0x3c8b, 0x8620, 0xb8b8, 0xa40e, 0xa55f, 0x0, 0x1);
        gbc.writeMem(0x46da, { 0xcb, 0x5e });
        gbc.writeMem(0xa55f, { 0x32 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3c8b, gbc.sp());
        EXPECT(0x46dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xa55f));
        // CB 5E 0138
        gbc.setState(0xb264, 0xa492, 0x95c0, 0xcd2, 0xdd6f, 0xf46e, 0x0, 0x0);
        gbc.writeMem(0xb264, { 0xcb, 0x5e });
        gbc.writeMem(0xf46e, { 0x6d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa492, gbc.sp());
        EXPECT(0xb266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb264));
        EXPECT(0x5e, gbc.readMem(0xb265));
        EXPECT(0x6d, gbc.readMem(0xf46e));
        // CB 5E 0139
        gbc.setState(0xd4be, 0x377c, 0xe950, 0xa089, 0x389c, 0x5542, 0x1, 0x1);
        gbc.writeMem(0x5542, { 0xc0 });
        gbc.writeMem(0xd4be, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x377c, gbc.sp());
        EXPECT(0xd4c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4be));
        EXPECT(0x5e, gbc.readMem(0xd4bf));
        // CB 5E 013A
        gbc.setState(0x33e7, 0x89d4, 0x58d0, 0x64e7, 0xbfdf, 0xec42, 0x1, 0x0);
        gbc.writeMem(0x33e7, { 0xcb, 0x5e });
        gbc.writeMem(0xec42, { 0x25 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x89d4, gbc.sp());
        EXPECT(0x33e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xec42));
        // CB 5E 013B
        gbc.setState(0x3a5a, 0xa09f, 0x2ec0, 0x2db2, 0x2dbb, 0xb946, 0x1, 0x1);
        gbc.writeMem(0x3a5a, { 0xcb, 0x5e });
        gbc.writeMem(0xb946, { 0x33 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa09f, gbc.sp());
        EXPECT(0x3a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb946));
        // CB 5E 013C
        gbc.setState(0x228, 0xb86a, 0x1a90, 0x6c5c, 0x5115, 0xd0cf, 0x0, 0x1);
        gbc.writeMem(0x228, { 0xcb, 0x5e });
        gbc.writeMem(0xd0cf, { 0xc4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb86a, gbc.sp());
        EXPECT(0x22a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xd0cf));
        // CB 5E 013D
        gbc.setState(0x2dcf, 0x160, 0xa6f0, 0x45e1, 0xe5dd, 0x9295, 0x0, 0x1);
        gbc.writeMem(0x2dcf, { 0xcb, 0x5e });
        gbc.writeMem(0x9295, { 0x6c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x160, gbc.sp());
        EXPECT(0x2dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9295));
        // CB 5E 013E
        gbc.setState(0x68ad, 0xebd9, 0x4f60, 0xb11c, 0x16a2, 0x1b1f, 0x0, 0x1);
        gbc.writeMem(0x1b1f, { 0xf7 });
        gbc.writeMem(0x68ad, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xebd9, gbc.sp());
        EXPECT(0x68af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 013F
        gbc.setState(0x6e0f, 0xa1cd, 0xdfa0, 0xcaff, 0xd2d, 0xe362, 0x0, 0x1);
        gbc.writeMem(0x6e0f, { 0xcb, 0x5e });
        gbc.writeMem(0xe362, { 0xf3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa1cd, gbc.sp());
        EXPECT(0x6e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xe362));
        // CB 5E 0140
        gbc.setState(0x16d2, 0x8b5f, 0x9f50, 0x2aa5, 0x580e, 0x179d, 0x1, 0x0);
        gbc.writeMem(0x16d2, { 0xcb, 0x5e });
        gbc.writeMem(0x179d, { 0xbd });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8b5f, gbc.sp());
        EXPECT(0x16d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0141
        gbc.setState(0x9858, 0x153d, 0xf120, 0x8d3, 0x14a0, 0x578c, 0x0, 0x0);
        gbc.writeMem(0x578c, { 0xe1 });
        gbc.writeMem(0x9858, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x153d, gbc.sp());
        EXPECT(0x985a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9858));
        EXPECT(0x5e, gbc.readMem(0x9859));
        // CB 5E 0142
        gbc.setState(0x78a2, 0xe518, 0x1ce0, 0x7fe2, 0x78f6, 0xe6a1, 0x1, 0x0);
        gbc.writeMem(0x78a2, { 0xcb, 0x5e });
        gbc.writeMem(0xe6a1, { 0xdb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe518, gbc.sp());
        EXPECT(0x78a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xe6a1));
        // CB 5E 0143
        gbc.setState(0xe2fd, 0xc530, 0x7910, 0x783a, 0x8f30, 0xa656, 0x0, 0x1);
        gbc.writeMem(0xa656, { 0xa });
        gbc.writeMem(0xe2fd, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc530, gbc.sp());
        EXPECT(0xe2ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa656));
        EXPECT(0xcb, gbc.readMem(0xe2fd));
        EXPECT(0x5e, gbc.readMem(0xe2fe));
        // CB 5E 0144
        gbc.setState(0x3d31, 0x9d12, 0xa6c0, 0x8180, 0x7a17, 0xa168, 0x0, 0x1);
        gbc.writeMem(0x3d31, { 0xcb, 0x5e });
        gbc.writeMem(0xa168, { 0xe5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9d12, gbc.sp());
        EXPECT(0x3d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa168));
        // CB 5E 0145
        gbc.setState(0x9eed, 0x6e5f, 0xcb40, 0x5671, 0x70e3, 0x89f, 0x0, 0x1);
        gbc.writeMem(0x89f, { 0x38 });
        gbc.writeMem(0x9eed, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6e5f, gbc.sp());
        EXPECT(0x9eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eed));
        EXPECT(0x5e, gbc.readMem(0x9eee));
        // CB 5E 0146
        gbc.setState(0x84ee, 0xa1bf, 0x7590, 0x67b, 0x199d, 0x33e6, 0x0, 0x0);
        gbc.writeMem(0x33e6, { 0x4b });
        gbc.writeMem(0x84ee, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa1bf, gbc.sp());
        EXPECT(0x84f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ee));
        EXPECT(0x5e, gbc.readMem(0x84ef));
        // CB 5E 0147
        gbc.setState(0xc038, 0xc330, 0xea10, 0x7d, 0xcc40, 0x917a, 0x0, 0x0);
        gbc.writeMem(0x917a, { 0x6 });
        gbc.writeMem(0xc038, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc330, gbc.sp());
        EXPECT(0xc03a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x917a));
        EXPECT(0xcb, gbc.readMem(0xc038));
        EXPECT(0x5e, gbc.readMem(0xc039));
        // CB 5E 0148
        gbc.setState(0x3860, 0x54c8, 0xb3b0, 0x834f, 0xdca0, 0x9d1c, 0x0, 0x1);
        gbc.writeMem(0x3860, { 0xcb, 0x5e });
        gbc.writeMem(0x9d1c, { 0x69 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x54c8, gbc.sp());
        EXPECT(0x3862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9d1c));
        // CB 5E 0149
        gbc.setState(0x8c06, 0x42de, 0x73a0, 0xaed8, 0x5ef5, 0x3f52, 0x1, 0x1);
        gbc.writeMem(0x3f52, { 0x21 });
        gbc.writeMem(0x8c06, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x42de, gbc.sp());
        EXPECT(0x8c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c06));
        EXPECT(0x5e, gbc.readMem(0x8c07));
        // CB 5E 014A
        gbc.setState(0xbfda, 0xd018, 0xcd50, 0xac1c, 0xe213, 0x52b7, 0x1, 0x0);
        gbc.writeMem(0x52b7, { 0x36 });
        gbc.writeMem(0xbfda, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd018, gbc.sp());
        EXPECT(0xbfdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfda));
        EXPECT(0x5e, gbc.readMem(0xbfdb));
        // CB 5E 014C
        gbc.setState(0xcf9e, 0x817, 0x2df0, 0x6dce, 0xdb7e, 0x99c4, 0x0, 0x0);
        gbc.writeMem(0x99c4, { 0x3 });
        gbc.writeMem(0xcf9e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x817, gbc.sp());
        EXPECT(0xcfa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x99c4));
        EXPECT(0xcb, gbc.readMem(0xcf9e));
        EXPECT(0x5e, gbc.readMem(0xcf9f));
        // CB 5E 014D
        gbc.setState(0x3755, 0x72d1, 0x9020, 0x4662, 0xf1ab, 0xc9ae, 0x0, 0x0);
        gbc.writeMem(0x3755, { 0xcb, 0x5e });
        gbc.writeMem(0xc9ae, { 0x4b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x72d1, gbc.sp());
        EXPECT(0x3757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc9ae));
        // CB 5E 014E
        gbc.setState(0xe8bc, 0xa990, 0x10a0, 0xaf16, 0x1386, 0x5e84, 0x1, 0x0);
        gbc.writeMem(0x5e84, { 0xd8 });
        gbc.writeMem(0xe8bc, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa990, gbc.sp());
        EXPECT(0xe8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8bc));
        EXPECT(0x5e, gbc.readMem(0xe8bd));
        // CB 5E 014F
        gbc.setState(0xbc57, 0x10c1, 0x14a0, 0xeb8c, 0x4188, 0xd924, 0x0, 0x0);
        gbc.writeMem(0xbc57, { 0xcb, 0x5e });
        gbc.writeMem(0xd924, { 0x69 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x10c1, gbc.sp());
        EXPECT(0xbc59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc57));
        EXPECT(0x5e, gbc.readMem(0xbc58));
        EXPECT(0x69, gbc.readMem(0xd924));
        // CB 5E 0150
        gbc.setState(0x6a81, 0x97cd, 0x3210, 0x2172, 0x2bfc, 0x9b60, 0x1, 0x0);
        gbc.writeMem(0x6a81, { 0xcb, 0x5e });
        gbc.writeMem(0x9b60, { 0x37 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x97cd, gbc.sp());
        EXPECT(0x6a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9b60));
        // CB 5E 0151
        gbc.setState(0xe25d, 0x1eff, 0xee90, 0x774, 0x6ad1, 0x3754, 0x1, 0x1);
        gbc.writeMem(0x3754, { 0xdc });
        gbc.writeMem(0xe25d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1eff, gbc.sp());
        EXPECT(0xe25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25d));
        EXPECT(0x5e, gbc.readMem(0xe25e));
        // CB 5E 0152
        gbc.setState(0x9d50, 0x87f8, 0x4990, 0x7da0, 0xdc6f, 0x3e90, 0x1, 0x1);
        gbc.writeMem(0x3e90, { 0xa0 });
        gbc.writeMem(0x9d50, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x87f8, gbc.sp());
        EXPECT(0x9d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d50));
        EXPECT(0x5e, gbc.readMem(0x9d51));
        // CB 5E 0153
        gbc.setState(0x4fc6, 0x41ac, 0xbd50, 0xdc45, 0x40b5, 0x714a, 0x0, 0x1);
        gbc.writeMem(0x4fc6, { 0xcb, 0x5e });
        gbc.writeMem(0x714a, { 0xc8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x41ac, gbc.sp());
        EXPECT(0x4fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0154
        gbc.setState(0xa166, 0x9808, 0xc400, 0x6e3c, 0x259b, 0x9870, 0x1, 0x0);
        gbc.writeMem(0x9870, { 0x1c });
        gbc.writeMem(0xa166, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9808, gbc.sp());
        EXPECT(0xa168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9870));
        EXPECT(0xcb, gbc.readMem(0xa166));
        EXPECT(0x5e, gbc.readMem(0xa167));
        // CB 5E 0155
        gbc.setState(0x6f90, 0x1d15, 0xf3b0, 0x99e1, 0xf51e, 0x2f37, 0x1, 0x1);
        gbc.writeMem(0x2f37, { 0xb9 });
        gbc.writeMem(0x6f90, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1d15, gbc.sp());
        EXPECT(0x6f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0156
        gbc.setState(0x7e43, 0x2f59, 0xe290, 0x9896, 0x8f1c, 0x1f72, 0x1, 0x1);
        gbc.writeMem(0x1f72, { 0x65 });
        gbc.writeMem(0x7e43, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2f59, gbc.sp());
        EXPECT(0x7e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0157
        gbc.setState(0xe71, 0xbd23, 0x2720, 0x5e82, 0x3def, 0xc6d2, 0x1, 0x0);
        gbc.writeMem(0xe71, { 0xcb, 0x5e });
        gbc.writeMem(0xc6d2, { 0xca });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbd23, gbc.sp());
        EXPECT(0xe73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xc6d2));
        // CB 5E 0158
        gbc.setState(0x65d3, 0x134f, 0x7e50, 0xdcf2, 0x5872, 0x38a, 0x1, 0x1);
        gbc.writeMem(0x38a, { 0x24 });
        gbc.writeMem(0x65d3, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x134f, gbc.sp());
        EXPECT(0x65d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0159
        gbc.setState(0x6391, 0xf7cc, 0x4830, 0x5127, 0xc8d0, 0x4049, 0x0, 0x0);
        gbc.writeMem(0x4049, { 0x65 });
        gbc.writeMem(0x6391, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf7cc, gbc.sp());
        EXPECT(0x6393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 015A
        gbc.setState(0x2f64, 0x2c79, 0xe300, 0x93d1, 0xadc9, 0xff6, 0x1, 0x0);
        gbc.writeMem(0xff6, { 0xe5 });
        gbc.writeMem(0x2f64, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2c79, gbc.sp());
        EXPECT(0x2f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 015B
        gbc.setState(0x717c, 0x74c5, 0x7030, 0x5d77, 0xa34f, 0xd155, 0x1, 0x0);
        gbc.writeMem(0x717c, { 0xcb, 0x5e });
        gbc.writeMem(0xd155, { 0x3b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x74c5, gbc.sp());
        EXPECT(0x717e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd155));
        // CB 5E 015C
        gbc.setState(0x9baf, 0xc260, 0x8540, 0xf800, 0x9c5f, 0x5720, 0x1, 0x0);
        gbc.writeMem(0x5720, { 0x4f });
        gbc.writeMem(0x9baf, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc260, gbc.sp());
        EXPECT(0x9bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9baf));
        EXPECT(0x5e, gbc.readMem(0x9bb0));
        // CB 5E 015D
        gbc.setState(0xd7dd, 0x7020, 0xcb70, 0x9cb2, 0x3f2b, 0xd15b, 0x0, 0x1);
        gbc.writeMem(0xd15b, { 0x41 });
        gbc.writeMem(0xd7dd, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7020, gbc.sp());
        EXPECT(0xd7df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xd15b));
        EXPECT(0xcb, gbc.readMem(0xd7dd));
        EXPECT(0x5e, gbc.readMem(0xd7de));
        // CB 5E 015E
        gbc.setState(0x6231, 0x4e72, 0x2d60, 0x211c, 0x44bb, 0x834f, 0x1, 0x0);
        gbc.writeMem(0x6231, { 0xcb, 0x5e });
        gbc.writeMem(0x834f, { 0x9b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4e72, gbc.sp());
        EXPECT(0x6233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x834f));
        // CB 5E 0160
        gbc.setState(0xc89f, 0xe7ea, 0x4350, 0xcc8e, 0xe9d6, 0xd19d, 0x0, 0x1);
        gbc.writeMem(0xc89f, { 0xcb, 0x5e });
        gbc.writeMem(0xd19d, { 0xb8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe7ea, gbc.sp());
        EXPECT(0xc8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc89f));
        EXPECT(0x5e, gbc.readMem(0xc8a0));
        EXPECT(0xb8, gbc.readMem(0xd19d));
        // CB 5E 0161
        gbc.setState(0xa043, 0x67ec, 0xe5f0, 0xbaff, 0x1488, 0x35bd, 0x1, 0x1);
        gbc.writeMem(0x35bd, { 0x3e });
        gbc.writeMem(0xa043, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x67ec, gbc.sp());
        EXPECT(0xa045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa043));
        EXPECT(0x5e, gbc.readMem(0xa044));
        // CB 5E 0162
        gbc.setState(0x8434, 0x7c0d, 0x74a0, 0xf7ca, 0x6152, 0x1980, 0x0, 0x1);
        gbc.writeMem(0x1980, { 0x94 });
        gbc.writeMem(0x8434, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7c0d, gbc.sp());
        EXPECT(0x8436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8434));
        EXPECT(0x5e, gbc.readMem(0x8435));
        // CB 5E 0163
        gbc.setState(0xc19d, 0x1243, 0x7c80, 0x2fd6, 0x85ce, 0xa8c0, 0x0, 0x1);
        gbc.writeMem(0xa8c0, { 0x1f });
        gbc.writeMem(0xc19d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1243, gbc.sp());
        EXPECT(0xc19f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xa8c0));
        EXPECT(0xcb, gbc.readMem(0xc19d));
        EXPECT(0x5e, gbc.readMem(0xc19e));
        // CB 5E 0164
        gbc.setState(0xa272, 0xe62f, 0xfa50, 0x379e, 0x744, 0x6cd4, 0x1, 0x1);
        gbc.writeMem(0x6cd4, { 0x12 });
        gbc.writeMem(0xa272, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe62f, gbc.sp());
        EXPECT(0xa274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa272));
        EXPECT(0x5e, gbc.readMem(0xa273));
        // CB 5E 0165
        gbc.setState(0x3dd8, 0x1382, 0xe940, 0xa941, 0xadac, 0x15e7, 0x0, 0x1);
        gbc.writeMem(0x15e7, { 0x2f });
        gbc.writeMem(0x3dd8, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1382, gbc.sp());
        EXPECT(0x3dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0166
        gbc.setState(0x4d47, 0xd7ee, 0x5fc0, 0xf33, 0x9bb6, 0x8271, 0x0, 0x0);
        gbc.writeMem(0x4d47, { 0xcb, 0x5e });
        gbc.writeMem(0x8271, { 0xbb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd7ee, gbc.sp());
        EXPECT(0x4d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8271));
        // CB 5E 0167
        gbc.setState(0x87a1, 0xa58b, 0x43b0, 0xdb18, 0x7987, 0x9227, 0x0, 0x0);
        gbc.writeMem(0x87a1, { 0xcb, 0x5e });
        gbc.writeMem(0x9227, { 0x96 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa58b, gbc.sp());
        EXPECT(0x87a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a1));
        EXPECT(0x5e, gbc.readMem(0x87a2));
        EXPECT(0x96, gbc.readMem(0x9227));
        // CB 5E 0168
        gbc.setState(0x3b92, 0x2cbe, 0xba00, 0x788e, 0xebaa, 0x1403, 0x1, 0x0);
        gbc.writeMem(0x1403, { 0xcd });
        gbc.writeMem(0x3b92, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2cbe, gbc.sp());
        EXPECT(0x3b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0169
        gbc.setState(0xad3f, 0x5d03, 0xee30, 0xf311, 0x153d, 0x5c0c, 0x1, 0x1);
        gbc.writeMem(0x5c0c, { 0xcb });
        gbc.writeMem(0xad3f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5d03, gbc.sp());
        EXPECT(0xad41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad3f));
        EXPECT(0x5e, gbc.readMem(0xad40));
        // CB 5E 016A
        gbc.setState(0xb088, 0x2f8a, 0x84c0, 0x2664, 0x2a1c, 0xf34c, 0x1, 0x0);
        gbc.writeMem(0xb088, { 0xcb, 0x5e });
        gbc.writeMem(0xf34c, { 0xf3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2f8a, gbc.sp());
        EXPECT(0xb08a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb088));
        EXPECT(0x5e, gbc.readMem(0xb089));
        EXPECT(0xf3, gbc.readMem(0xf34c));
        // CB 5E 016B
        gbc.setState(0x42da, 0xd4eb, 0x2320, 0x6c46, 0x48bf, 0xbc60, 0x0, 0x0);
        gbc.writeMem(0x42da, { 0xcb, 0x5e });
        gbc.writeMem(0xbc60, { 0x5b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd4eb, gbc.sp());
        EXPECT(0x42dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbc60));
        // CB 5E 016C
        gbc.setState(0x5257, 0xdb31, 0x3020, 0xdeaf, 0x8d46, 0xae25, 0x0, 0x1);
        gbc.writeMem(0x5257, { 0xcb, 0x5e });
        gbc.writeMem(0xae25, { 0x71 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdb31, gbc.sp());
        EXPECT(0x5259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xae25));
        // CB 5E 016E
        gbc.setState(0x685a, 0x3a4, 0xe1d0, 0x4f80, 0x8cb2, 0x4b14, 0x1, 0x1);
        gbc.writeMem(0x4b14, { 0x19 });
        gbc.writeMem(0x685a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3a4, gbc.sp());
        EXPECT(0x685c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 016F
        gbc.setState(0xbff1, 0x51e0, 0xed90, 0xaf33, 0x15c8, 0xa4af, 0x1, 0x1);
        gbc.writeMem(0xa4af, { 0x96 });
        gbc.writeMem(0xbff1, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x51e0, gbc.sp());
        EXPECT(0xbff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xa4af));
        EXPECT(0xcb, gbc.readMem(0xbff1));
        EXPECT(0x5e, gbc.readMem(0xbff2));
        // CB 5E 0170
        gbc.setState(0xe375, 0x1f50, 0x6d10, 0xd05f, 0x93b1, 0xb965, 0x1, 0x0);
        gbc.writeMem(0xb965, { 0x5 });
        gbc.writeMem(0xe375, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1f50, gbc.sp());
        EXPECT(0xe377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb965));
        EXPECT(0xcb, gbc.readMem(0xe375));
        EXPECT(0x5e, gbc.readMem(0xe376));
        // CB 5E 0171
        gbc.setState(0xe, 0x9e22, 0x7620, 0xa85, 0x30a2, 0xb770, 0x0, 0x1);
        gbc.writeMem(0xe, { 0xcb, 0x5e });
        gbc.writeMem(0xb770, { 0x42 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9e22, gbc.sp());
        EXPECT(0x10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb770));
        // CB 5E 0172
        gbc.setState(0x684e, 0x218f, 0x1670, 0xe7e, 0xdd14, 0x1626, 0x1, 0x0);
        gbc.writeMem(0x1626, { 0xc1 });
        gbc.writeMem(0x684e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x218f, gbc.sp());
        EXPECT(0x6850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0173
        gbc.setState(0xbf5d, 0x6768, 0x10a0, 0xc893, 0xd552, 0x32b8, 0x1, 0x0);
        gbc.writeMem(0x32b8, { 0x8a });
        gbc.writeMem(0xbf5d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6768, gbc.sp());
        EXPECT(0xbf5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf5d));
        EXPECT(0x5e, gbc.readMem(0xbf5e));
        // CB 5E 0174
        gbc.setState(0x5629, 0x30c, 0xb350, 0xf196, 0xb87a, 0x7ed3, 0x0, 0x1);
        gbc.writeMem(0x5629, { 0xcb, 0x5e });
        gbc.writeMem(0x7ed3, { 0xe7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x30c, gbc.sp());
        EXPECT(0x562b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0175
        gbc.setState(0xe04c, 0x6122, 0xc4d0, 0x8bee, 0xff5a, 0x7822, 0x1, 0x1);
        gbc.writeMem(0x7822, { 0xe9 });
        gbc.writeMem(0xe04c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6122, gbc.sp());
        EXPECT(0xe04e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe04c));
        EXPECT(0x5e, gbc.readMem(0xe04d));
        // CB 5E 0176
        gbc.setState(0x7615, 0x7759, 0x6730, 0x1486, 0x2fd2, 0xf38, 0x0, 0x1);
        gbc.writeMem(0xf38, { 0xfe });
        gbc.writeMem(0x7615, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7759, gbc.sp());
        EXPECT(0x7617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0177
        gbc.setState(0x3492, 0x1705, 0x3d10, 0x30b1, 0x64f1, 0xee9f, 0x1, 0x1);
        gbc.writeMem(0x3492, { 0xcb, 0x5e });
        gbc.writeMem(0xee9f, { 0xa7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1705, gbc.sp());
        EXPECT(0x3494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xee9f));
        // CB 5E 0178
        gbc.setState(0xebf3, 0x447a, 0x9280, 0xe6a3, 0x1371, 0xd9f3, 0x0, 0x0);
        gbc.writeMem(0xd9f3, { 0x5 });
        gbc.writeMem(0xebf3, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x447a, gbc.sp());
        EXPECT(0xebf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd9f3));
        EXPECT(0xcb, gbc.readMem(0xebf3));
        EXPECT(0x5e, gbc.readMem(0xebf4));
        // CB 5E 0179
        gbc.setState(0x5433, 0x8379, 0xdd40, 0x258f, 0xb587, 0x8325, 0x1, 0x1);
        gbc.writeMem(0x5433, { 0xcb, 0x5e });
        gbc.writeMem(0x8325, { 0xf8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8379, gbc.sp());
        EXPECT(0x5435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8325));
        // CB 5E 017A
        gbc.setState(0x9e30, 0xa887, 0x15f0, 0x4bb3, 0x5f05, 0xf49b, 0x0, 0x1);
        gbc.writeMem(0x9e30, { 0xcb, 0x5e });
        gbc.writeMem(0xf49b, { 0xb1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa887, gbc.sp());
        EXPECT(0x9e32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e30));
        EXPECT(0x5e, gbc.readMem(0x9e31));
        EXPECT(0xb1, gbc.readMem(0xf49b));
        // CB 5E 017B
        gbc.setState(0xbb31, 0x24b7, 0x6600, 0x7f, 0x245a, 0x5d2, 0x1, 0x0);
        gbc.writeMem(0x5d2, { 0x81 });
        gbc.writeMem(0xbb31, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x24b7, gbc.sp());
        EXPECT(0xbb33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb31));
        EXPECT(0x5e, gbc.readMem(0xbb32));
        // CB 5E 017C
        gbc.setState(0xb28a, 0x8172, 0x3f00, 0xb26f, 0xe58a, 0x13ee, 0x1, 0x1);
        gbc.writeMem(0x13ee, { 0x10 });
        gbc.writeMem(0xb28a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8172, gbc.sp());
        EXPECT(0xb28c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb28a));
        EXPECT(0x5e, gbc.readMem(0xb28b));
        // CB 5E 017D
        gbc.setState(0x28a1, 0xcb14, 0xc500, 0x638, 0xb67d, 0xfaa6, 0x0, 0x1);
        gbc.writeMem(0x28a1, { 0xcb, 0x5e });
        gbc.writeMem(0xfaa6, { 0x5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcb14, gbc.sp());
        EXPECT(0x28a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xfaa6));
        // CB 5E 017E
        gbc.setState(0x4789, 0x1c70, 0xecb0, 0xcc69, 0xd2ad, 0x4c57, 0x1, 0x0);
        gbc.writeMem(0x4789, { 0xcb, 0x5e });
        gbc.writeMem(0x4c57, { 0x2f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1c70, gbc.sp());
        EXPECT(0x478b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 017F
        gbc.setState(0x6b7e, 0x8a, 0x4660, 0x32ce, 0x307e, 0xd04f, 0x0, 0x0);
        gbc.writeMem(0x6b7e, { 0xcb, 0x5e });
        gbc.writeMem(0xd04f, { 0x5f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8a, gbc.sp());
        EXPECT(0x6b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xd04f));
        // CB 5E 0180
        gbc.setState(0x50fe, 0x9487, 0xfcd0, 0xbf91, 0xdcb6, 0xca1, 0x0, 0x1);
        gbc.writeMem(0xca1, { 0x59 });
        gbc.writeMem(0x50fe, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9487, gbc.sp());
        EXPECT(0x5100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0182
        gbc.setState(0xc9bf, 0x2f0d, 0x7200, 0x27ce, 0x4309, 0x7ecf, 0x0, 0x1);
        gbc.writeMem(0x7ecf, { 0xc9 });
        gbc.writeMem(0xc9bf, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2f0d, gbc.sp());
        EXPECT(0xc9c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9bf));
        EXPECT(0x5e, gbc.readMem(0xc9c0));
        // CB 5E 0183
        gbc.setState(0x93bd, 0x3a47, 0xfc30, 0x5af2, 0x904c, 0x21c2, 0x0, 0x1);
        gbc.writeMem(0x21c2, { 0xaa });
        gbc.writeMem(0x93bd, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3a47, gbc.sp());
        EXPECT(0x93bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93bd));
        EXPECT(0x5e, gbc.readMem(0x93be));
        // CB 5E 0184
        gbc.setState(0x3ff, 0xf644, 0x76a0, 0xab1, 0xb668, 0x8233, 0x0, 0x0);
        gbc.writeMem(0x3ff, { 0xcb, 0x5e });
        gbc.writeMem(0x8233, { 0x99 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf644, gbc.sp());
        EXPECT(0x401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8233));
        // CB 5E 0185
        gbc.setState(0xa33c, 0x37d5, 0xdb00, 0x85a0, 0x37b9, 0x2771, 0x1, 0x0);
        gbc.writeMem(0x2771, { 0x97 });
        gbc.writeMem(0xa33c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x37d5, gbc.sp());
        EXPECT(0xa33e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33c));
        EXPECT(0x5e, gbc.readMem(0xa33d));
        // CB 5E 0186
        gbc.setState(0xd6f3, 0xbdbe, 0x9830, 0xa23b, 0x8af1, 0xa855, 0x1, 0x1);
        gbc.writeMem(0xa855, { 0x65 });
        gbc.writeMem(0xd6f3, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbdbe, gbc.sp());
        EXPECT(0xd6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa855));
        EXPECT(0xcb, gbc.readMem(0xd6f3));
        EXPECT(0x5e, gbc.readMem(0xd6f4));
        // CB 5E 0187
        gbc.setState(0xa846, 0x9847, 0x11b0, 0x37a, 0x8be8, 0x633f, 0x0, 0x0);
        gbc.writeMem(0x633f, { 0xdc });
        gbc.writeMem(0xa846, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9847, gbc.sp());
        EXPECT(0xa848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa846));
        EXPECT(0x5e, gbc.readMem(0xa847));
        // CB 5E 0188
        gbc.setState(0x79b6, 0x237b, 0x4480, 0x1d59, 0x261, 0x4a33, 0x1, 0x1);
        gbc.writeMem(0x4a33, { 0x2c });
        gbc.writeMem(0x79b6, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x237b, gbc.sp());
        EXPECT(0x79b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 018A
        gbc.setState(0x6d30, 0x5db, 0xe140, 0x5789, 0x4666, 0xa82a, 0x0, 0x0);
        gbc.writeMem(0x6d30, { 0xcb, 0x5e });
        gbc.writeMem(0xa82a, { 0x87 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5db, gbc.sp());
        EXPECT(0x6d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa82a));
        // CB 5E 018B
        gbc.setState(0x9cdc, 0x8eef, 0x64a0, 0xa27e, 0xc15, 0xb61c, 0x0, 0x1);
        gbc.writeMem(0x9cdc, { 0xcb, 0x5e });
        gbc.writeMem(0xb61c, { 0xe1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8eef, gbc.sp());
        EXPECT(0x9cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cdc));
        EXPECT(0x5e, gbc.readMem(0x9cdd));
        EXPECT(0xe1, gbc.readMem(0xb61c));
        // CB 5E 018C
        gbc.setState(0x7d03, 0x28c, 0xda30, 0x1d80, 0x9067, 0x9225, 0x0, 0x0);
        gbc.writeMem(0x7d03, { 0xcb, 0x5e });
        gbc.writeMem(0x9225, { 0x20 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x28c, gbc.sp());
        EXPECT(0x7d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9225));
        // CB 5E 018D
        gbc.setState(0x755e, 0x1b0f, 0x4c20, 0x9613, 0xc9f1, 0x86b1, 0x0, 0x0);
        gbc.writeMem(0x755e, { 0xcb, 0x5e });
        gbc.writeMem(0x86b1, { 0xa6 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1b0f, gbc.sp());
        EXPECT(0x7560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x86b1));
        // CB 5E 018E
        gbc.setState(0x871d, 0x9da, 0x89d0, 0x729, 0x53bd, 0xea02, 0x1, 0x0);
        gbc.writeMem(0x871d, { 0xcb, 0x5e });
        gbc.writeMem(0xea02, { 0xe6 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9da, gbc.sp());
        EXPECT(0x871f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x871d));
        EXPECT(0x5e, gbc.readMem(0x871e));
        EXPECT(0xe6, gbc.readMem(0xea02));
        // CB 5E 0190
        gbc.setState(0xc65d, 0x90bf, 0x7b70, 0x888e, 0x3fc7, 0xabc8, 0x1, 0x0);
        gbc.writeMem(0xabc8, { 0x7a });
        gbc.writeMem(0xc65d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x90bf, gbc.sp());
        EXPECT(0xc65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xabc8));
        EXPECT(0xcb, gbc.readMem(0xc65d));
        EXPECT(0x5e, gbc.readMem(0xc65e));
        // CB 5E 0191
        gbc.setState(0x9449, 0x593d, 0x62b0, 0x131a, 0xc350, 0x7f0f, 0x0, 0x0);
        gbc.writeMem(0x7f0f, { 0x9e });
        gbc.writeMem(0x9449, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x593d, gbc.sp());
        EXPECT(0x944b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9449));
        EXPECT(0x5e, gbc.readMem(0x944a));
        // CB 5E 0193
        gbc.setState(0x6665, 0xf642, 0xece0, 0x3d46, 0x2095, 0x9d99, 0x0, 0x0);
        gbc.writeMem(0x6665, { 0xcb, 0x5e });
        gbc.writeMem(0x9d99, { 0x40 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf642, gbc.sp());
        EXPECT(0x6667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9d99));
        // CB 5E 0194
        gbc.setState(0x4e8d, 0x123a, 0xf240, 0xfea, 0x46d3, 0xa522, 0x1, 0x1);
        gbc.writeMem(0x4e8d, { 0xcb, 0x5e });
        gbc.writeMem(0xa522, { 0x57 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x123a, gbc.sp());
        EXPECT(0x4e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa522));
        // CB 5E 0195
        gbc.setState(0xeedc, 0xebfb, 0x5640, 0x23cc, 0x888c, 0x16ac, 0x0, 0x0);
        gbc.writeMem(0x16ac, { 0xc8 });
        gbc.writeMem(0xeedc, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xebfb, gbc.sp());
        EXPECT(0xeede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeedc));
        EXPECT(0x5e, gbc.readMem(0xeedd));
        // CB 5E 0196
        gbc.setState(0x1838, 0xfb6d, 0xecd0, 0x7429, 0x3a1d, 0x50e9, 0x1, 0x1);
        gbc.writeMem(0x1838, { 0xcb, 0x5e });
        gbc.writeMem(0x50e9, { 0x99 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfb6d, gbc.sp());
        EXPECT(0x183a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0197
        gbc.setState(0xb474, 0x1033, 0x4990, 0xd81e, 0x1b14, 0x847a, 0x0, 0x0);
        gbc.writeMem(0x847a, { 0x9e });
        gbc.writeMem(0xb474, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1033, gbc.sp());
        EXPECT(0xb476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x847a));
        EXPECT(0xcb, gbc.readMem(0xb474));
        EXPECT(0x5e, gbc.readMem(0xb475));
        // CB 5E 0198
        gbc.setState(0xbfe7, 0x542e, 0x6c10, 0x383d, 0x9adb, 0xba1c, 0x1, 0x0);
        gbc.writeMem(0xba1c, { 0x88 });
        gbc.writeMem(0xbfe7, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x542e, gbc.sp());
        EXPECT(0xbfe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xba1c));
        EXPECT(0xcb, gbc.readMem(0xbfe7));
        EXPECT(0x5e, gbc.readMem(0xbfe8));
        // CB 5E 0199
        gbc.setState(0x912e, 0x6ff2, 0xbf00, 0x73fd, 0xde30, 0x9a23, 0x1, 0x0);
        gbc.writeMem(0x912e, { 0xcb, 0x5e });
        gbc.writeMem(0x9a23, { 0x73 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6ff2, gbc.sp());
        EXPECT(0x9130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x912e));
        EXPECT(0x5e, gbc.readMem(0x912f));
        EXPECT(0x73, gbc.readMem(0x9a23));
        // CB 5E 019A
        gbc.setState(0x41c6, 0x28db, 0x1480, 0xfd42, 0xf628, 0x80ce, 0x1, 0x0);
        gbc.writeMem(0x41c6, { 0xcb, 0x5e });
        gbc.writeMem(0x80ce, { 0xc2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x28db, gbc.sp());
        EXPECT(0x41c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x80ce));
        // CB 5E 019B
        gbc.setState(0x6db6, 0xb730, 0x2fc0, 0x7a11, 0xa3bf, 0x499c, 0x0, 0x1);
        gbc.writeMem(0x499c, { 0xe });
        gbc.writeMem(0x6db6, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb730, gbc.sp());
        EXPECT(0x6db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 019C
        gbc.setState(0x4833, 0x8b0, 0x1f0, 0xe095, 0xc5a4, 0xe42c, 0x1, 0x0);
        gbc.writeMem(0x4833, { 0xcb, 0x5e });
        gbc.writeMem(0xe42c, { 0xd4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8b0, gbc.sp());
        EXPECT(0x4835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe42c));
        // CB 5E 019D
        gbc.setState(0x2bb6, 0x6c76, 0x9640, 0xdd0c, 0x4943, 0x26c0, 0x0, 0x1);
        gbc.writeMem(0x26c0, { 0x25 });
        gbc.writeMem(0x2bb6, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6c76, gbc.sp());
        EXPECT(0x2bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 019F
        gbc.setState(0x8526, 0x3694, 0x5bb0, 0xdc31, 0x4e9, 0x303b, 0x0, 0x1);
        gbc.writeMem(0x303b, { 0x50 });
        gbc.writeMem(0x8526, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3694, gbc.sp());
        EXPECT(0x8528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8526));
        EXPECT(0x5e, gbc.readMem(0x8527));
        // CB 5E 01A0
        gbc.setState(0x1e9a, 0x154b, 0x28a0, 0xbcc0, 0x5e28, 0x1e62, 0x0, 0x1);
        gbc.writeMem(0x1e62, { 0x89 });
        gbc.writeMem(0x1e9a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x154b, gbc.sp());
        EXPECT(0x1e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 01A1
        gbc.setState(0x4eea, 0x9f34, 0x4ed0, 0x8bb3, 0xd7fd, 0x7c66, 0x1, 0x1);
        gbc.writeMem(0x4eea, { 0xcb, 0x5e });
        gbc.writeMem(0x7c66, { 0xcc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9f34, gbc.sp());
        EXPECT(0x4eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 01A2
        gbc.setState(0x2465, 0x8913, 0x2480, 0xcd40, 0xcd4c, 0xcf59, 0x1, 0x0);
        gbc.writeMem(0x2465, { 0xcb, 0x5e });
        gbc.writeMem(0xcf59, { 0x6e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8913, gbc.sp());
        EXPECT(0x2467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcf59));
        // CB 5E 01A3
        gbc.setState(0x4e1e, 0xf3d1, 0x4370, 0x8064, 0x2300, 0xa27, 0x0, 0x0);
        gbc.writeMem(0xa27, { 0x1e });
        gbc.writeMem(0x4e1e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf3d1, gbc.sp());
        EXPECT(0x4e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 01A4
        gbc.setState(0xd6ed, 0xf872, 0xdb20, 0x3be3, 0x33e5, 0x4ba6, 0x0, 0x1);
        gbc.writeMem(0x4ba6, { 0x5c });
        gbc.writeMem(0xd6ed, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf872, gbc.sp());
        EXPECT(0xd6ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ed));
        EXPECT(0x5e, gbc.readMem(0xd6ee));
        // CB 5E 01A5
        gbc.setState(0x8215, 0x5c0e, 0xf070, 0xca32, 0x7db1, 0x7901, 0x0, 0x1);
        gbc.writeMem(0x7901, { 0x4f });
        gbc.writeMem(0x8215, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5c0e, gbc.sp());
        EXPECT(0x8217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8215));
        EXPECT(0x5e, gbc.readMem(0x8216));
        // CB 5E 01A6
        gbc.setState(0xc1df, 0x4a8, 0xa8f0, 0x2953, 0x136c, 0x5aa3, 0x1, 0x0);
        gbc.writeMem(0x5aa3, { 0xfd });
        gbc.writeMem(0xc1df, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4a8, gbc.sp());
        EXPECT(0xc1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1df));
        EXPECT(0x5e, gbc.readMem(0xc1e0));
        // CB 5E 01A7
        gbc.setState(0x8c59, 0xe79a, 0xde80, 0x99c5, 0xcc3b, 0x3e0e, 0x0, 0x1);
        gbc.writeMem(0x3e0e, { 0x9f });
        gbc.writeMem(0x8c59, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe79a, gbc.sp());
        EXPECT(0x8c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c59));
        EXPECT(0x5e, gbc.readMem(0x8c5a));
        // CB 5E 01A8
        gbc.setState(0xb0ad, 0x1215, 0xb520, 0xac02, 0x78b4, 0x258b, 0x1, 0x1);
        gbc.writeMem(0x258b, { 0x26 });
        gbc.writeMem(0xb0ad, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1215, gbc.sp());
        EXPECT(0xb0af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ad));
        EXPECT(0x5e, gbc.readMem(0xb0ae));
        // CB 5E 01A9
        gbc.setState(0x8387, 0x62ae, 0x2c20, 0x4dae, 0xba42, 0xaa69, 0x0, 0x0);
        gbc.writeMem(0x8387, { 0xcb, 0x5e });
        gbc.writeMem(0xaa69, { 0x68 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x62ae, gbc.sp());
        EXPECT(0x8389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8387));
        EXPECT(0x5e, gbc.readMem(0x8388));
        EXPECT(0x68, gbc.readMem(0xaa69));
        // CB 5E 01AA
        gbc.setState(0xc2f7, 0xef40, 0x25b0, 0xf564, 0x10f3, 0x6717, 0x1, 0x0);
        gbc.writeMem(0x6717, { 0x39 });
        gbc.writeMem(0xc2f7, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xef40, gbc.sp());
        EXPECT(0xc2f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f7));
        EXPECT(0x5e, gbc.readMem(0xc2f8));
        // CB 5E 01AB
        gbc.setState(0x6707, 0x775b, 0x3380, 0xc413, 0xa475, 0xb8cc, 0x0, 0x1);
        gbc.writeMem(0x6707, { 0xcb, 0x5e });
        gbc.writeMem(0xb8cc, { 0x63 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x775b, gbc.sp());
        EXPECT(0x6709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xb8cc));
        // CB 5E 01AC
        gbc.setState(0x2115, 0x40d6, 0x7330, 0xec9a, 0xdfaa, 0xbfe, 0x1, 0x0);
        gbc.writeMem(0xbfe, { 0xd3 });
        gbc.writeMem(0x2115, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x40d6, gbc.sp());
        EXPECT(0x2117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 01AD
        gbc.setState(0x2d5d, 0xa84a, 0xb590, 0x4c58, 0x2909, 0x7b8, 0x0, 0x0);
        gbc.writeMem(0x7b8, { 0x2a });
        gbc.writeMem(0x2d5d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa84a, gbc.sp());
        EXPECT(0x2d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 01AE
        gbc.setState(0x7d76, 0x348c, 0xf780, 0xd52c, 0x899e, 0x42a5, 0x0, 0x1);
        gbc.writeMem(0x42a5, { 0xa6 });
        gbc.writeMem(0x7d76, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x348c, gbc.sp());
        EXPECT(0x7d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 01AF
        gbc.setState(0x3f05, 0xdc85, 0x79c0, 0xdfa3, 0x67f3, 0x5078, 0x0, 0x1);
        gbc.writeMem(0x3f05, { 0xcb, 0x5e });
        gbc.writeMem(0x5078, { 0x10 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdc85, gbc.sp());
        EXPECT(0x3f07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 01B0
        gbc.setState(0x1975, 0x4389, 0x4d60, 0x23c2, 0xb5be, 0xb06f, 0x1, 0x0);
        gbc.writeMem(0x1975, { 0xcb, 0x5e });
        gbc.writeMem(0xb06f, { 0x3d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4389, gbc.sp());
        EXPECT(0x1977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xb06f));
        // CB 5E 01B2
        gbc.setState(0x66a6, 0x96b3, 0x1e30, 0x4f00, 0xa6c1, 0x8fde, 0x0, 0x0);
        gbc.writeMem(0x66a6, { 0xcb, 0x5e });
        gbc.writeMem(0x8fde, { 0x5b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x96b3, gbc.sp());
        EXPECT(0x66a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8fde));
        // CB 5E 01B3
        gbc.setState(0xeea6, 0x64df, 0x5be0, 0xca3, 0x42f2, 0xc14, 0x1, 0x1);
        gbc.writeMem(0xc14, { 0xe9 });
        gbc.writeMem(0xeea6, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x64df, gbc.sp());
        EXPECT(0xeea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea6));
        EXPECT(0x5e, gbc.readMem(0xeea7));
        // CB 5E 01B4
        gbc.setState(0x98b, 0xc410, 0x9230, 0xb222, 0xc7b0, 0xc5d, 0x0, 0x0);
        gbc.writeMem(0x98b, { 0xcb, 0x5e });
        gbc.writeMem(0xc5d, { 0x3f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc410, gbc.sp());
        EXPECT(0x98d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 01B6
        gbc.setState(0x205b, 0x9945, 0xe4c0, 0x1a, 0xbde0, 0xaec, 0x1, 0x0);
        gbc.writeMem(0xaec, { 0x70 });
        gbc.writeMem(0x205b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9945, gbc.sp());
        EXPECT(0x205d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 01B7
        gbc.setState(0x23ef, 0x8740, 0x10e0, 0xe0c8, 0xb24c, 0x1a91, 0x1, 0x0);
        gbc.writeMem(0x1a91, { 0x30 });
        gbc.writeMem(0x23ef, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8740, gbc.sp());
        EXPECT(0x23f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 01B8
        gbc.setState(0x9a7c, 0x5d25, 0x3c50, 0x6557, 0x4ebc, 0x2ca9, 0x1, 0x0);
        gbc.writeMem(0x2ca9, { 0xff });
        gbc.writeMem(0x9a7c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5d25, gbc.sp());
        EXPECT(0x9a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a7c));
        EXPECT(0x5e, gbc.readMem(0x9a7d));
        // CB 5E 01B9
        gbc.setState(0x9f39, 0xcef7, 0xfec0, 0xe2a4, 0xb7b6, 0x8753, 0x0, 0x1);
        gbc.writeMem(0x8753, { 0x9d });
        gbc.writeMem(0x9f39, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcef7, gbc.sp());
        EXPECT(0x9f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8753));
        EXPECT(0xcb, gbc.readMem(0x9f39));
        EXPECT(0x5e, gbc.readMem(0x9f3a));
        // CB 5E 01BA
        gbc.setState(0x3f8d, 0x37a2, 0x8c60, 0xb43d, 0xbc7f, 0xa86f, 0x0, 0x0);
        gbc.writeMem(0x3f8d, { 0xcb, 0x5e });
        gbc.writeMem(0xa86f, { 0xda });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x37a2, gbc.sp());
        EXPECT(0x3f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa86f));
        // CB 5E 01BB
        gbc.setState(0xabfd, 0x8b13, 0xe180, 0x1765, 0xea70, 0x9f6d, 0x1, 0x0);
        gbc.writeMem(0x9f6d, { 0x60 });
        gbc.writeMem(0xabfd, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8b13, gbc.sp());
        EXPECT(0xabff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x9f6d));
        EXPECT(0xcb, gbc.readMem(0xabfd));
        EXPECT(0x5e, gbc.readMem(0xabfe));
        // CB 5E 01BC
        gbc.setState(0xaabf, 0x42ee, 0x8c00, 0xeb98, 0x389d, 0xbe92, 0x1, 0x0);
        gbc.writeMem(0xaabf, { 0xcb, 0x5e });
        gbc.writeMem(0xbe92, { 0x49 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x42ee, gbc.sp());
        EXPECT(0xaac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaabf));
        EXPECT(0x5e, gbc.readMem(0xaac0));
        EXPECT(0x49, gbc.readMem(0xbe92));
        // CB 5E 01BD
        gbc.setState(0xe1e1, 0x5acd, 0x57e0, 0x17a0, 0x41b, 0xf83a, 0x0, 0x1);
        gbc.writeMem(0xe1e1, { 0xcb, 0x5e });
        gbc.writeMem(0xf83a, { 0x83 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5acd, gbc.sp());
        EXPECT(0xe1e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e1));
        EXPECT(0x5e, gbc.readMem(0xe1e2));
        EXPECT(0x83, gbc.readMem(0xf83a));
        // CB 5E 01BE
        gbc.setState(0xe04f, 0xc518, 0x8520, 0xb7a4, 0x67be, 0xa243, 0x0, 0x1);
        gbc.writeMem(0xa243, { 0xee });
        gbc.writeMem(0xe04f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc518, gbc.sp());
        EXPECT(0xe051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xa243));
        EXPECT(0xcb, gbc.readMem(0xe04f));
        EXPECT(0x5e, gbc.readMem(0xe050));
        // CB 5E 01BF
        gbc.setState(0x1b48, 0x88ef, 0xf680, 0x90eb, 0xa801, 0x95a7, 0x1, 0x1);
        gbc.writeMem(0x1b48, { 0xcb, 0x5e });
        gbc.writeMem(0x95a7, { 0x18 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x88ef, gbc.sp());
        EXPECT(0x1b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x95a7));
        // CB 5E 01C0
        gbc.setState(0x80d0, 0x313d, 0x6c10, 0x1740, 0x1ad6, 0x248a, 0x1, 0x1);
        gbc.writeMem(0x248a, { 0xa1 });
        gbc.writeMem(0x80d0, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x313d, gbc.sp());
        EXPECT(0x80d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d0));
        EXPECT(0x5e, gbc.readMem(0x80d1));
        // CB 5E 01C1
        gbc.setState(0x4215, 0x976e, 0xa0f0, 0x85b5, 0xc90, 0x63a7, 0x1, 0x1);
        gbc.writeMem(0x4215, { 0xcb, 0x5e });
        gbc.writeMem(0x63a7, { 0xcd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x976e, gbc.sp());
        EXPECT(0x4217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 01C2
        gbc.setState(0x62a0, 0xb803, 0xe4e0, 0x2ad5, 0xb6ce, 0xe52e, 0x1, 0x0);
        gbc.writeMem(0x62a0, { 0xcb, 0x5e });
        gbc.writeMem(0xe52e, { 0x47 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb803, gbc.sp());
        EXPECT(0x62a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe52e));
        // CB 5E 01C3
        gbc.setState(0x52b5, 0xa562, 0xeae0, 0x36fa, 0xb132, 0x9108, 0x0, 0x0);
        gbc.writeMem(0x52b5, { 0xcb, 0x5e });
        gbc.writeMem(0x9108, { 0xd7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa562, gbc.sp());
        EXPECT(0x52b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x9108));
        // CB 5E 01C4
        gbc.setState(0xc56e, 0x6cc0, 0x6ee0, 0xdb1b, 0xf009, 0xa3df, 0x0, 0x1);
        gbc.writeMem(0xa3df, { 0x7f });
        gbc.writeMem(0xc56e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6cc0, gbc.sp());
        EXPECT(0xc570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xa3df));
        EXPECT(0xcb, gbc.readMem(0xc56e));
        EXPECT(0x5e, gbc.readMem(0xc56f));
        // CB 5E 01C5
        gbc.setState(0x39d1, 0x2411, 0x6df0, 0x6499, 0x2175, 0x8914, 0x1, 0x1);
        gbc.writeMem(0x39d1, { 0xcb, 0x5e });
        gbc.writeMem(0x8914, { 0x38 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2411, gbc.sp());
        EXPECT(0x39d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8914));
        // CB 5E 01C6
        gbc.setState(0xd6ba, 0x449, 0xcd80, 0xf354, 0xdb27, 0x7efa, 0x1, 0x1);
        gbc.writeMem(0x7efa, { 0x83 });
        gbc.writeMem(0xd6ba, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x449, gbc.sp());
        EXPECT(0xd6bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ba));
        EXPECT(0x5e, gbc.readMem(0xd6bb));
        // CB 5E 01C7
        gbc.setState(0x9403, 0x6f3a, 0xa940, 0xb317, 0x33bc, 0xf14, 0x1, 0x1);
        gbc.writeMem(0xf14, { 0x1d });
        gbc.writeMem(0x9403, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6f3a, gbc.sp());
        EXPECT(0x9405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9403));
        EXPECT(0x5e, gbc.readMem(0x9404));
        // CB 5E 01C8
        gbc.setState(0xd9ad, 0x2da5, 0xfb00, 0x6965, 0xd689, 0x767c, 0x0, 0x1);
        gbc.writeMem(0x767c, { 0x40 });
        gbc.writeMem(0xd9ad, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2da5, gbc.sp());
        EXPECT(0xd9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ad));
        EXPECT(0x5e, gbc.readMem(0xd9ae));
        // CB 5E 01C9
        gbc.setState(0x6031, 0x2df5, 0xb760, 0x8952, 0x798c, 0x1062, 0x0, 0x0);
        gbc.writeMem(0x1062, { 0x1f });
        gbc.writeMem(0x6031, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2df5, gbc.sp());
        EXPECT(0x6033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 01CA
        gbc.setState(0x6741, 0x9627, 0xf7d0, 0x5335, 0x246d, 0x73cc, 0x0, 0x1);
        gbc.writeMem(0x6741, { 0xcb, 0x5e });
        gbc.writeMem(0x73cc, { 0xa2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9627, gbc.sp());
        EXPECT(0x6743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 01CB
        gbc.setState(0x31f2, 0x8d9e, 0x8270, 0x433b, 0x2e0, 0x5609, 0x1, 0x1);
        gbc.writeMem(0x31f2, { 0xcb, 0x5e });
        gbc.writeMem(0x5609, { 0x4a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8d9e, gbc.sp());
        EXPECT(0x31f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 01CC
        gbc.setState(0x464d, 0x3002, 0xd7e0, 0x34ba, 0x757c, 0x6c8, 0x0, 0x1);
        gbc.writeMem(0x6c8, { 0x9 });
        gbc.writeMem(0x464d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3002, gbc.sp());
        EXPECT(0x464f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 01CD
        gbc.setState(0xb73a, 0x575d, 0xdd0, 0x16c3, 0xe42b, 0x2ca3, 0x0, 0x0);
        gbc.writeMem(0x2ca3, { 0xb8 });
        gbc.writeMem(0xb73a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x575d, gbc.sp());
        EXPECT(0xb73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73a));
        EXPECT(0x5e, gbc.readMem(0xb73b));
        // CB 5E 01CE
        gbc.setState(0x8721, 0xde0e, 0x1ed0, 0x71a9, 0x92a7, 0xb898, 0x0, 0x1);
        gbc.writeMem(0x8721, { 0xcb, 0x5e });
        gbc.writeMem(0xb898, { 0x4b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xde0e, gbc.sp());
        EXPECT(0x8723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8721));
        EXPECT(0x5e, gbc.readMem(0x8722));
        EXPECT(0x4b, gbc.readMem(0xb898));
        // CB 5E 01CF
        gbc.setState(0xc84b, 0xf792, 0xd690, 0x9884, 0x9a8d, 0x6843, 0x1, 0x0);
        gbc.writeMem(0x6843, { 0xfb });
        gbc.writeMem(0xc84b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf792, gbc.sp());
        EXPECT(0xc84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84b));
        EXPECT(0x5e, gbc.readMem(0xc84c));
        // CB 5E 01D0
        gbc.setState(0xb40c, 0xbb4e, 0x9110, 0x5ab3, 0x2f9, 0x9c3f, 0x0, 0x1);
        gbc.writeMem(0x9c3f, { 0x1c });
        gbc.writeMem(0xb40c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbb4e, gbc.sp());
        EXPECT(0xb40e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9c3f));
        EXPECT(0xcb, gbc.readMem(0xb40c));
        EXPECT(0x5e, gbc.readMem(0xb40d));
        // CB 5E 01D1
        gbc.setState(0x66cb, 0xc2d9, 0x2ff0, 0x9bfc, 0x49f2, 0xd506, 0x1, 0x0);
        gbc.writeMem(0x66cb, { 0xcb, 0x5e });
        gbc.writeMem(0xd506, { 0xc5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc2d9, gbc.sp());
        EXPECT(0x66cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xd506));
        // CB 5E 01D2
        gbc.setState(0x51e1, 0x160b, 0xa260, 0xfb48, 0xb306, 0x5220, 0x0, 0x0);
        gbc.writeMem(0x51e1, { 0xcb, 0x5e });
        gbc.writeMem(0x5220, { 0xf7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x160b, gbc.sp());
        EXPECT(0x51e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 01D3
        gbc.setState(0x4d20, 0x71d9, 0xf480, 0x161e, 0x2a4a, 0xaef9, 0x1, 0x0);
        gbc.writeMem(0x4d20, { 0xcb, 0x5e });
        gbc.writeMem(0xaef9, { 0x96 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x71d9, gbc.sp());
        EXPECT(0x4d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xaef9));
        // CB 5E 01D4
        gbc.setState(0xa8b4, 0xabe4, 0x6a90, 0xa3ec, 0x47a0, 0xd53, 0x0, 0x1);
        gbc.writeMem(0xd53, { 0xc3 });
        gbc.writeMem(0xa8b4, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xabe4, gbc.sp());
        EXPECT(0xa8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b4));
        EXPECT(0x5e, gbc.readMem(0xa8b5));
        // CB 5E 01D5
        gbc.setState(0x9a97, 0x31f0, 0xa5b0, 0x26e9, 0x9615, 0xfb43, 0x1, 0x1);
        gbc.writeMem(0x9a97, { 0xcb, 0x5e });
        gbc.writeMem(0xfb43, { 0x98 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x31f0, gbc.sp());
        EXPECT(0x9a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a97));
        EXPECT(0x5e, gbc.readMem(0x9a98));
        EXPECT(0x98, gbc.readMem(0xfb43));
        // CB 5E 01D6
        gbc.setState(0x406, 0xa8a, 0x7a90, 0x9a6d, 0x6469, 0x2118, 0x0, 0x0);
        gbc.writeMem(0x406, { 0xcb, 0x5e });
        gbc.writeMem(0x2118, { 0x97 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa8a, gbc.sp());
        EXPECT(0x408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 01D7
        gbc.setState(0x71cd, 0x8bd2, 0x7600, 0x4a12, 0xc56e, 0xaf68, 0x1, 0x1);
        gbc.writeMem(0x71cd, { 0xcb, 0x5e });
        gbc.writeMem(0xaf68, { 0x9b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8bd2, gbc.sp());
        EXPECT(0x71cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xaf68));
        // CB 5E 01D8
        gbc.setState(0x3a11, 0x9a5c, 0xedc0, 0x57bb, 0x4cbe, 0x3878, 0x1, 0x0);
        gbc.writeMem(0x3878, { 0x34 });
        gbc.writeMem(0x3a11, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9a5c, gbc.sp());
        EXPECT(0x3a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 01D9
        gbc.setState(0x2b13, 0x26dd, 0x9a90, 0x5a2, 0x936, 0xa2d1, 0x1, 0x1);
        gbc.writeMem(0x2b13, { 0xcb, 0x5e });
        gbc.writeMem(0xa2d1, { 0xc3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x26dd, gbc.sp());
        EXPECT(0x2b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa2d1));
        // CB 5E 01DA
        gbc.setState(0x67bc, 0x8ddd, 0x9b60, 0x238f, 0x8227, 0xa83e, 0x0, 0x0);
        gbc.writeMem(0x67bc, { 0xcb, 0x5e });
        gbc.writeMem(0xa83e, { 0xbe });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8ddd, gbc.sp());
        EXPECT(0x67be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xa83e));
        // CB 5E 01DB
        gbc.setState(0x4cb1, 0x3561, 0x8d60, 0x6568, 0x73eb, 0xee1c, 0x0, 0x1);
        gbc.writeMem(0x4cb1, { 0xcb, 0x5e });
        gbc.writeMem(0xee1c, { 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3561, gbc.sp());
        EXPECT(0x4cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xee1c));
        // CB 5E 01DC
        gbc.setState(0xc2d0, 0x7278, 0x75c0, 0x46dd, 0xe108, 0xbf9a, 0x1, 0x1);
        gbc.writeMem(0xbf9a, { 0x4b });
        gbc.writeMem(0xc2d0, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7278, gbc.sp());
        EXPECT(0xc2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbf9a));
        EXPECT(0xcb, gbc.readMem(0xc2d0));
        EXPECT(0x5e, gbc.readMem(0xc2d1));
        // CB 5E 01DD
        gbc.setState(0x8300, 0x3719, 0xa1d0, 0x81a7, 0x763f, 0xd900, 0x0, 0x0);
        gbc.writeMem(0x8300, { 0xcb, 0x5e });
        gbc.writeMem(0xd900, { 0x37 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3719, gbc.sp());
        EXPECT(0x8302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8300));
        EXPECT(0x5e, gbc.readMem(0x8301));
        EXPECT(0x37, gbc.readMem(0xd900));
        // CB 5E 01DE
        gbc.setState(0x1260, 0x5fa0, 0x2e0, 0x6d0e, 0xcddd, 0xcff2, 0x1, 0x1);
        gbc.writeMem(0x1260, { 0xcb, 0x5e });
        gbc.writeMem(0xcff2, { 0xd6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5fa0, gbc.sp());
        EXPECT(0x1262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcff2));
        // CB 5E 01DF
        gbc.setState(0x9ebe, 0x6b2d, 0x2850, 0x2301, 0xbb5, 0xb075, 0x1, 0x0);
        gbc.writeMem(0x9ebe, { 0xcb, 0x5e });
        gbc.writeMem(0xb075, { 0xd2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6b2d, gbc.sp());
        EXPECT(0x9ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ebe));
        EXPECT(0x5e, gbc.readMem(0x9ebf));
        EXPECT(0xd2, gbc.readMem(0xb075));
        // CB 5E 01E0
        gbc.setState(0xabd3, 0xb366, 0xae70, 0x168f, 0x8473, 0xb14, 0x0, 0x1);
        gbc.writeMem(0xb14, { 0x34 });
        gbc.writeMem(0xabd3, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb366, gbc.sp());
        EXPECT(0xabd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd3));
        EXPECT(0x5e, gbc.readMem(0xabd4));
        // CB 5E 01E2
        gbc.setState(0x7c0d, 0x2b0f, 0x7370, 0xaad5, 0xa721, 0xc3a1, 0x0, 0x1);
        gbc.writeMem(0x7c0d, { 0xcb, 0x5e });
        gbc.writeMem(0xc3a1, { 0x57 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2b0f, gbc.sp());
        EXPECT(0x7c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc3a1));
        // CB 5E 01E3
        gbc.setState(0x9362, 0x24da, 0x81a0, 0xb266, 0xa73c, 0xa272, 0x0, 0x0);
        gbc.writeMem(0x9362, { 0xcb, 0x5e });
        gbc.writeMem(0xa272, { 0x6 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x24da, gbc.sp());
        EXPECT(0x9364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9362));
        EXPECT(0x5e, gbc.readMem(0x9363));
        EXPECT(0x6, gbc.readMem(0xa272));
        // CB 5E 01E4
        gbc.setState(0xbc46, 0xf7c9, 0xfbd0, 0xea34, 0x4856, 0xa803, 0x0, 0x0);
        gbc.writeMem(0xa803, { 0xee });
        gbc.writeMem(0xbc46, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf7c9, gbc.sp());
        EXPECT(0xbc48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xa803));
        EXPECT(0xcb, gbc.readMem(0xbc46));
        EXPECT(0x5e, gbc.readMem(0xbc47));
        // CB 5E 01E5
        gbc.setState(0x5c73, 0xd362, 0x4640, 0x2aa9, 0x6ea, 0x1071, 0x0, 0x1);
        gbc.writeMem(0x1071, { 0xea });
        gbc.writeMem(0x5c73, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd362, gbc.sp());
        EXPECT(0x5c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 01E6
        gbc.setState(0xe862, 0x46f2, 0x92f0, 0x1f0d, 0x625c, 0xe2de, 0x1, 0x0);
        gbc.writeMem(0xe2de, { 0xc6 });
        gbc.writeMem(0xe862, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x46f2, gbc.sp());
        EXPECT(0xe864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe2de));
        EXPECT(0xcb, gbc.readMem(0xe862));
        EXPECT(0x5e, gbc.readMem(0xe863));
        // CB 5E 01E7
        gbc.setState(0x69e, 0xe999, 0xcc40, 0x8af8, 0x8085, 0xadb8, 0x0, 0x0);
        gbc.writeMem(0x69e, { 0xcb, 0x5e });
        gbc.writeMem(0xadb8, { 0xc6 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe999, gbc.sp());
        EXPECT(0x6a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xadb8));
        // CB 5E 01E8
        gbc.setState(0x389f, 0xddc8, 0xe9a0, 0x93ab, 0xc6a4, 0xdd9b, 0x0, 0x1);
        gbc.writeMem(0x389f, { 0xcb, 0x5e });
        gbc.writeMem(0xdd9b, { 0x53 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xddc8, gbc.sp());
        EXPECT(0x38a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdd9b));
        // CB 5E 01E9
        gbc.setState(0xef01, 0x6981, 0xa60, 0xdfca, 0xa5c3, 0xc4ed, 0x1, 0x0);
        gbc.writeMem(0xc4ed, { 0xdb });
        gbc.writeMem(0xef01, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6981, gbc.sp());
        EXPECT(0xef03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xc4ed));
        EXPECT(0xcb, gbc.readMem(0xef01));
        EXPECT(0x5e, gbc.readMem(0xef02));
        // CB 5E 01EA
        gbc.setState(0x4c13, 0x815b, 0x9d90, 0xa18a, 0x3051, 0xdc05, 0x1, 0x0);
        gbc.writeMem(0x4c13, { 0xcb, 0x5e });
        gbc.writeMem(0xdc05, { 0xef });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x815b, gbc.sp());
        EXPECT(0x4c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xdc05));
        // CB 5E 01EB
        gbc.setState(0x9315, 0x7fa, 0x75f0, 0xc962, 0x7220, 0x5b39, 0x0, 0x0);
        gbc.writeMem(0x5b39, { 0x9b });
        gbc.writeMem(0x9315, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7fa, gbc.sp());
        EXPECT(0x9317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9315));
        EXPECT(0x5e, gbc.readMem(0x9316));
        // CB 5E 01EC
        gbc.setState(0x3f32, 0xf68a, 0xed60, 0x68f9, 0xa81f, 0x2944, 0x0, 0x0);
        gbc.writeMem(0x2944, { 0xeb });
        gbc.writeMem(0x3f32, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf68a, gbc.sp());
        EXPECT(0x3f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 01ED
        gbc.setState(0xb4ec, 0x1246, 0xe620, 0xff86, 0xa05b, 0xfd5c, 0x1, 0x1);
        gbc.writeMem(0xb4ec, { 0xcb, 0x5e });
        gbc.writeMem(0xfd5c, { 0x32 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1246, gbc.sp());
        EXPECT(0xb4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ec));
        EXPECT(0x5e, gbc.readMem(0xb4ed));
        EXPECT(0x32, gbc.readMem(0xfd5c));
        // CB 5E 01EE
        gbc.setState(0x4580, 0xe1d7, 0x5c10, 0xc668, 0x81a5, 0x15c0, 0x1, 0x0);
        gbc.writeMem(0x15c0, { 0xf8 });
        gbc.writeMem(0x4580, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe1d7, gbc.sp());
        EXPECT(0x4582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 01EF
        gbc.setState(0x4d1c, 0x2730, 0x78e0, 0xc115, 0xe4b2, 0x46f6, 0x0, 0x1);
        gbc.writeMem(0x46f6, { 0x1e });
        gbc.writeMem(0x4d1c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2730, gbc.sp());
        EXPECT(0x4d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 01F0
        gbc.setState(0x130a, 0x2b32, 0x1280, 0xf5f4, 0xe5b, 0x4715, 0x0, 0x0);
        gbc.writeMem(0x130a, { 0xcb, 0x5e });
        gbc.writeMem(0x4715, { 0x7e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2b32, gbc.sp());
        EXPECT(0x130c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 01F1
        gbc.setState(0xbf10, 0x840e, 0x1480, 0xffb7, 0xd8ff, 0x2ee, 0x0, 0x0);
        gbc.writeMem(0x2ee, { 0xd9 });
        gbc.writeMem(0xbf10, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x840e, gbc.sp());
        EXPECT(0xbf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf10));
        EXPECT(0x5e, gbc.readMem(0xbf11));
        // CB 5E 01F2
        gbc.setState(0xd7, 0xbd26, 0xc370, 0xa5b8, 0x5796, 0x48af, 0x1, 0x0);
        gbc.writeMem(0xd7, { 0xcb, 0x5e });
        gbc.writeMem(0x48af, { 0x3b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbd26, gbc.sp());
        EXPECT(0xd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 01F3
        gbc.setState(0xc554, 0xc78e, 0x9110, 0x2978, 0x4d20, 0xb8ac, 0x0, 0x0);
        gbc.writeMem(0xb8ac, { 0x1a });
        gbc.writeMem(0xc554, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc78e, gbc.sp());
        EXPECT(0xc556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb8ac));
        EXPECT(0xcb, gbc.readMem(0xc554));
        EXPECT(0x5e, gbc.readMem(0xc555));
        // CB 5E 01F4
        gbc.setState(0x164b, 0x30d3, 0x6cf0, 0xca0, 0xc7c2, 0x5bdb, 0x0, 0x1);
        gbc.writeMem(0x164b, { 0xcb, 0x5e });
        gbc.writeMem(0x5bdb, { 0xad });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x30d3, gbc.sp());
        EXPECT(0x164d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 01F5
        gbc.setState(0xd757, 0xe0c5, 0x3ff0, 0x315f, 0xff26, 0xaf29, 0x1, 0x0);
        gbc.writeMem(0xaf29, { 0xe4 });
        gbc.writeMem(0xd757, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe0c5, gbc.sp());
        EXPECT(0xd759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xaf29));
        EXPECT(0xcb, gbc.readMem(0xd757));
        EXPECT(0x5e, gbc.readMem(0xd758));
        // CB 5E 01F6
        gbc.setState(0xbfe5, 0x2fdb, 0xcbe0, 0xf4d7, 0x1165, 0xf1a, 0x0, 0x1);
        gbc.writeMem(0xf1a, { 0x7e });
        gbc.writeMem(0xbfe5, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2fdb, gbc.sp());
        EXPECT(0xbfe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe5));
        EXPECT(0x5e, gbc.readMem(0xbfe6));
        // CB 5E 01F7
        gbc.setState(0xe799, 0x2d94, 0x96b0, 0xb85d, 0xd61f, 0x854b, 0x1, 0x1);
        gbc.writeMem(0x854b, { 0xe3 });
        gbc.writeMem(0xe799, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2d94, gbc.sp());
        EXPECT(0xe79b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x854b));
        EXPECT(0xcb, gbc.readMem(0xe799));
        EXPECT(0x5e, gbc.readMem(0xe79a));
        // CB 5E 01F8
        gbc.setState(0x71ef, 0x3b8b, 0xc2f0, 0xd01, 0x746c, 0xccd9, 0x1, 0x1);
        gbc.writeMem(0x71ef, { 0xcb, 0x5e });
        gbc.writeMem(0xccd9, { 0x4e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3b8b, gbc.sp());
        EXPECT(0x71f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xccd9));
        // CB 5E 01F9
        gbc.setState(0x3536, 0x1a27, 0x1ac0, 0xd1c3, 0xe796, 0xd31e, 0x1, 0x0);
        gbc.writeMem(0x3536, { 0xcb, 0x5e });
        gbc.writeMem(0xd31e, { 0xac });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1a27, gbc.sp());
        EXPECT(0x3538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd31e));
        // CB 5E 01FA
        gbc.setState(0xa79f, 0xf4f9, 0x2c0, 0x4e15, 0xc9e, 0xe603, 0x0, 0x1);
        gbc.writeMem(0xa79f, { 0xcb, 0x5e });
        gbc.writeMem(0xe603, { 0xd9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf4f9, gbc.sp());
        EXPECT(0xa7a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79f));
        EXPECT(0x5e, gbc.readMem(0xa7a0));
        EXPECT(0xd9, gbc.readMem(0xe603));
        // CB 5E 01FB
        gbc.setState(0xdc94, 0x2799, 0x4e20, 0x5db1, 0xe00f, 0xf7cf, 0x0, 0x1);
        gbc.writeMem(0xdc94, { 0xcb, 0x5e });
        gbc.writeMem(0xf7cf, { 0x4a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2799, gbc.sp());
        EXPECT(0xdc96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc94));
        EXPECT(0x5e, gbc.readMem(0xdc95));
        EXPECT(0x4a, gbc.readMem(0xf7cf));
        // CB 5E 01FC
        gbc.setState(0x3aff, 0xccd5, 0xfc40, 0xc6bd, 0x7ed2, 0xe0d7, 0x0, 0x0);
        gbc.writeMem(0x3aff, { 0xcb, 0x5e });
        gbc.writeMem(0xe0d7, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xccd5, gbc.sp());
        EXPECT(0x3b01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe0d7));
        // CB 5E 01FD
        gbc.setState(0x4b8e, 0xb624, 0x5260, 0x20c9, 0x15b9, 0xba85, 0x0, 0x0);
        gbc.writeMem(0x4b8e, { 0xcb, 0x5e });
        gbc.writeMem(0xba85, { 0x76 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb624, gbc.sp());
        EXPECT(0x4b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xba85));
        // CB 5E 01FE
        gbc.setState(0x1dd2, 0xfa1e, 0x8650, 0x52db, 0x9f13, 0x5cba, 0x0, 0x1);
        gbc.writeMem(0x1dd2, { 0xcb, 0x5e });
        gbc.writeMem(0x5cba, { 0xd3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfa1e, gbc.sp());
        EXPECT(0x1dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0200
        gbc.setState(0xbbc9, 0x5b13, 0x10a0, 0x1aa5, 0xa985, 0xfb69, 0x0, 0x1);
        gbc.writeMem(0xbbc9, { 0xcb, 0x5e });
        gbc.writeMem(0xfb69, { 0x8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5b13, gbc.sp());
        EXPECT(0xbbcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc9));
        EXPECT(0x5e, gbc.readMem(0xbbca));
        EXPECT(0x8, gbc.readMem(0xfb69));
        // CB 5E 0201
        gbc.setState(0x777c, 0x3134, 0x3720, 0xc0b4, 0xea0e, 0x5579, 0x1, 0x0);
        gbc.writeMem(0x5579, { 0x41 });
        gbc.writeMem(0x777c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3134, gbc.sp());
        EXPECT(0x777e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0202
        gbc.setState(0x8b32, 0x535a, 0xc480, 0x83f8, 0xf6ef, 0xf84, 0x1, 0x1);
        gbc.writeMem(0xf84, { 0xb3 });
        gbc.writeMem(0x8b32, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x535a, gbc.sp());
        EXPECT(0x8b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b32));
        EXPECT(0x5e, gbc.readMem(0x8b33));
        // CB 5E 0203
        gbc.setState(0x5f9a, 0x7d92, 0x6650, 0x21a2, 0x3b3c, 0x37e1, 0x0, 0x1);
        gbc.writeMem(0x37e1, { 0xb1 });
        gbc.writeMem(0x5f9a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7d92, gbc.sp());
        EXPECT(0x5f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0204
        gbc.setState(0x7e77, 0x76c5, 0x600, 0x8b2b, 0xd77, 0x7171, 0x0, 0x1);
        gbc.writeMem(0x7171, { 0x6d });
        gbc.writeMem(0x7e77, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x76c5, gbc.sp());
        EXPECT(0x7e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0205
        gbc.setState(0xc278, 0xf10a, 0xf970, 0x4772, 0xf733, 0xa158, 0x0, 0x0);
        gbc.writeMem(0xa158, { 0xaa });
        gbc.writeMem(0xc278, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf10a, gbc.sp());
        EXPECT(0xc27a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa158));
        EXPECT(0xcb, gbc.readMem(0xc278));
        EXPECT(0x5e, gbc.readMem(0xc279));
        // CB 5E 0206
        gbc.setState(0x8537, 0xb656, 0xe150, 0x2739, 0x6c99, 0xc19c, 0x0, 0x0);
        gbc.writeMem(0x8537, { 0xcb, 0x5e });
        gbc.writeMem(0xc19c, { 0x6 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb656, gbc.sp());
        EXPECT(0x8539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8537));
        EXPECT(0x5e, gbc.readMem(0x8538));
        EXPECT(0x6, gbc.readMem(0xc19c));
        // CB 5E 0207
        gbc.setState(0xc603, 0xcdff, 0x5070, 0x8920, 0x9dc2, 0xb53b, 0x0, 0x1);
        gbc.writeMem(0xb53b, { 0x4a });
        gbc.writeMem(0xc603, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcdff, gbc.sp());
        EXPECT(0xc605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xb53b));
        EXPECT(0xcb, gbc.readMem(0xc603));
        EXPECT(0x5e, gbc.readMem(0xc604));
        // CB 5E 0208
        gbc.setState(0x92ac, 0xff5c, 0x5880, 0x3768, 0x9557, 0x63fe, 0x0, 0x1);
        gbc.writeMem(0x63fe, { 0xc4 });
        gbc.writeMem(0x92ac, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xff5c, gbc.sp());
        EXPECT(0x92ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ac));
        EXPECT(0x5e, gbc.readMem(0x92ad));
        // CB 5E 0209
        gbc.setState(0x98cb, 0x3b16, 0x22f0, 0xabc1, 0x74e6, 0x727, 0x0, 0x0);
        gbc.writeMem(0x727, { 0xe });
        gbc.writeMem(0x98cb, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3b16, gbc.sp());
        EXPECT(0x98cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98cb));
        EXPECT(0x5e, gbc.readMem(0x98cc));
        // CB 5E 020A
        gbc.setState(0x49aa, 0xc08c, 0x9e20, 0xe706, 0x160b, 0xef13, 0x0, 0x0);
        gbc.writeMem(0x49aa, { 0xcb, 0x5e });
        gbc.writeMem(0xef13, { 0x9a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc08c, gbc.sp());
        EXPECT(0x49ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xef13));
        // CB 5E 020B
        gbc.setState(0xab4b, 0x7b, 0x48c0, 0xec28, 0xb5df, 0xcea3, 0x0, 0x0);
        gbc.writeMem(0xab4b, { 0xcb, 0x5e });
        gbc.writeMem(0xcea3, { 0xfc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7b, gbc.sp());
        EXPECT(0xab4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab4b));
        EXPECT(0x5e, gbc.readMem(0xab4c));
        EXPECT(0xfc, gbc.readMem(0xcea3));
        // CB 5E 020C
        gbc.setState(0xa7e8, 0x2a4c, 0x4b80, 0xf3a4, 0xb103, 0xc9ff, 0x1, 0x0);
        gbc.writeMem(0xa7e8, { 0xcb, 0x5e });
        gbc.writeMem(0xc9ff, { 0xfe });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2a4c, gbc.sp());
        EXPECT(0xa7ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e8));
        EXPECT(0x5e, gbc.readMem(0xa7e9));
        EXPECT(0xfe, gbc.readMem(0xc9ff));
        // CB 5E 020D
        gbc.setState(0x2878, 0x3d08, 0x2f70, 0x97a6, 0x191, 0x9147, 0x1, 0x1);
        gbc.writeMem(0x2878, { 0xcb, 0x5e });
        gbc.writeMem(0x9147, { 0x9d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3d08, gbc.sp());
        EXPECT(0x287a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9147));
        // CB 5E 020F
        gbc.setState(0x461e, 0xf43f, 0x260, 0x87bf, 0x7f34, 0x5fd7, 0x1, 0x1);
        gbc.writeMem(0x461e, { 0xcb, 0x5e });
        gbc.writeMem(0x5fd7, { 0xb1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf43f, gbc.sp());
        EXPECT(0x4620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0210
        gbc.setState(0x40c3, 0xa057, 0xc7a0, 0x2640, 0x27d5, 0xaf76, 0x1, 0x1);
        gbc.writeMem(0x40c3, { 0xcb, 0x5e });
        gbc.writeMem(0xaf76, { 0x4b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa057, gbc.sp());
        EXPECT(0x40c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xaf76));
        // CB 5E 0211
        gbc.setState(0xa7a5, 0xfeac, 0x9070, 0x6269, 0xb70a, 0xdf8a, 0x0, 0x0);
        gbc.writeMem(0xa7a5, { 0xcb, 0x5e });
        gbc.writeMem(0xdf8a, { 0xad });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfeac, gbc.sp());
        EXPECT(0xa7a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a5));
        EXPECT(0x5e, gbc.readMem(0xa7a6));
        EXPECT(0xad, gbc.readMem(0xdf8a));
        // CB 5E 0212
        gbc.setState(0xdb40, 0xeace, 0x23f0, 0x852, 0x9327, 0x8ead, 0x0, 0x0);
        gbc.writeMem(0x8ead, { 0xbb });
        gbc.writeMem(0xdb40, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xeace, gbc.sp());
        EXPECT(0xdb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8ead));
        EXPECT(0xcb, gbc.readMem(0xdb40));
        EXPECT(0x5e, gbc.readMem(0xdb41));
        // CB 5E 0213
        gbc.setState(0x96f4, 0x48a, 0x4d70, 0xd326, 0xcd78, 0xa5cd, 0x1, 0x0);
        gbc.writeMem(0x96f4, { 0xcb, 0x5e });
        gbc.writeMem(0xa5cd, { 0x47 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x48a, gbc.sp());
        EXPECT(0x96f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f4));
        EXPECT(0x5e, gbc.readMem(0x96f5));
        EXPECT(0x47, gbc.readMem(0xa5cd));
        // CB 5E 0214
        gbc.setState(0x869e, 0xc430, 0x21d0, 0x949b, 0xb4fe, 0xe538, 0x0, 0x1);
        gbc.writeMem(0x869e, { 0xcb, 0x5e });
        gbc.writeMem(0xe538, { 0x35 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc430, gbc.sp());
        EXPECT(0x86a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x869e));
        EXPECT(0x5e, gbc.readMem(0x869f));
        EXPECT(0x35, gbc.readMem(0xe538));
        // CB 5E 0215
        gbc.setState(0xc76d, 0x64b5, 0xb3e0, 0x5d60, 0x2bfa, 0xfbe, 0x0, 0x1);
        gbc.writeMem(0xfbe, { 0x58 });
        gbc.writeMem(0xc76d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x64b5, gbc.sp());
        EXPECT(0xc76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76d));
        EXPECT(0x5e, gbc.readMem(0xc76e));
        // CB 5E 0216
        gbc.setState(0x9868, 0x8cb2, 0x8c00, 0x899f, 0x736, 0x9e0a, 0x0, 0x0);
        gbc.writeMem(0x9868, { 0xcb, 0x5e });
        gbc.writeMem(0x9e0a, { 0xa9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8cb2, gbc.sp());
        EXPECT(0x986a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9868));
        EXPECT(0x5e, gbc.readMem(0x9869));
        EXPECT(0xa9, gbc.readMem(0x9e0a));
        // CB 5E 0217
        gbc.setState(0x1f6b, 0xc6be, 0x16d0, 0xb9bb, 0xdb4c, 0xd8d1, 0x0, 0x0);
        gbc.writeMem(0x1f6b, { 0xcb, 0x5e });
        gbc.writeMem(0xd8d1, { 0x4d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc6be, gbc.sp());
        EXPECT(0x1f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd8d1));
        // CB 5E 0218
        gbc.setState(0xc08d, 0x7cdf, 0x6050, 0xe6c, 0x3fc2, 0xea72, 0x1, 0x0);
        gbc.writeMem(0xc08d, { 0xcb, 0x5e });
        gbc.writeMem(0xea72, { 0xec });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7cdf, gbc.sp());
        EXPECT(0xc08f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc08d));
        EXPECT(0x5e, gbc.readMem(0xc08e));
        EXPECT(0xec, gbc.readMem(0xea72));
        // CB 5E 0219
        gbc.setState(0x15e4, 0x5711, 0x1bc0, 0x13d7, 0xd389, 0x6705, 0x0, 0x0);
        gbc.writeMem(0x15e4, { 0xcb, 0x5e });
        gbc.writeMem(0x6705, { 0xa3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5711, gbc.sp());
        EXPECT(0x15e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 021A
        gbc.setState(0x4501, 0x4f59, 0xb1b0, 0x94f6, 0xc524, 0xba89, 0x1, 0x0);
        gbc.writeMem(0x4501, { 0xcb, 0x5e });
        gbc.writeMem(0xba89, { 0x76 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4f59, gbc.sp());
        EXPECT(0x4503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xba89));
        // CB 5E 021B
        gbc.setState(0xaa55, 0xd404, 0x2460, 0xb646, 0x6cad, 0x1a19, 0x0, 0x1);
        gbc.writeMem(0x1a19, { 0xce });
        gbc.writeMem(0xaa55, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd404, gbc.sp());
        EXPECT(0xaa57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa55));
        EXPECT(0x5e, gbc.readMem(0xaa56));
        // CB 5E 021C
        gbc.setState(0xd32b, 0x25e5, 0xe200, 0x4d67, 0xb306, 0x2f72, 0x0, 0x1);
        gbc.writeMem(0x2f72, { 0x40 });
        gbc.writeMem(0xd32b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x25e5, gbc.sp());
        EXPECT(0xd32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32b));
        EXPECT(0x5e, gbc.readMem(0xd32c));
        // CB 5E 021D
        gbc.setState(0x7107, 0x985, 0x25d0, 0x3278, 0xba2, 0x239d, 0x1, 0x1);
        gbc.writeMem(0x239d, { 0xae });
        gbc.writeMem(0x7107, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x985, gbc.sp());
        EXPECT(0x7109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 021E
        gbc.setState(0x2fe8, 0xaf7b, 0x4520, 0xbbef, 0x90b9, 0xb0ab, 0x0, 0x0);
        gbc.writeMem(0x2fe8, { 0xcb, 0x5e });
        gbc.writeMem(0xb0ab, { 0xb9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xaf7b, gbc.sp());
        EXPECT(0x2fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb0ab));
        // CB 5E 0220
        gbc.setState(0x97c8, 0x5360, 0xb530, 0x85b1, 0x7c, 0x872e, 0x1, 0x1);
        gbc.writeMem(0x872e, { 0x1b });
        gbc.writeMem(0x97c8, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5360, gbc.sp());
        EXPECT(0x97ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x872e));
        EXPECT(0xcb, gbc.readMem(0x97c8));
        EXPECT(0x5e, gbc.readMem(0x97c9));
        // CB 5E 0221
        gbc.setState(0xb4a2, 0xbdda, 0x4bc0, 0xabb0, 0xb56a, 0xbbbb, 0x1, 0x0);
        gbc.writeMem(0xb4a2, { 0xcb, 0x5e });
        gbc.writeMem(0xbbbb, { 0xde });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbdda, gbc.sp());
        EXPECT(0xb4a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a2));
        EXPECT(0x5e, gbc.readMem(0xb4a3));
        EXPECT(0xde, gbc.readMem(0xbbbb));
        // CB 5E 0222
        gbc.setState(0x3838, 0x2500, 0xe830, 0x7736, 0x14c8, 0x4282, 0x1, 0x0);
        gbc.writeMem(0x3838, { 0xcb, 0x5e });
        gbc.writeMem(0x4282, { 0xf0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2500, gbc.sp());
        EXPECT(0x383a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0223
        gbc.setState(0x4fa2, 0x6208, 0x81b0, 0x8348, 0x7602, 0x8992, 0x1, 0x0);
        gbc.writeMem(0x4fa2, { 0xcb, 0x5e });
        gbc.writeMem(0x8992, { 0x9c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6208, gbc.sp());
        EXPECT(0x4fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8992));
        // CB 5E 0224
        gbc.setState(0x1770, 0xc10e, 0x590, 0xd123, 0xcef, 0xb21d, 0x1, 0x1);
        gbc.writeMem(0x1770, { 0xcb, 0x5e });
        gbc.writeMem(0xb21d, { 0xb8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc10e, gbc.sp());
        EXPECT(0x1772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xb21d));
        // CB 5E 0225
        gbc.setState(0x4288, 0x5f35, 0x6de0, 0x651c, 0xe994, 0x9a96, 0x0, 0x0);
        gbc.writeMem(0x4288, { 0xcb, 0x5e });
        gbc.writeMem(0x9a96, { 0x39 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5f35, gbc.sp());
        EXPECT(0x428a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x9a96));
        // CB 5E 0226
        gbc.setState(0xd9d9, 0x111c, 0xd6c0, 0x17e9, 0xa46e, 0x8874, 0x1, 0x0);
        gbc.writeMem(0x8874, { 0x1e });
        gbc.writeMem(0xd9d9, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x111c, gbc.sp());
        EXPECT(0xd9db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x8874));
        EXPECT(0xcb, gbc.readMem(0xd9d9));
        EXPECT(0x5e, gbc.readMem(0xd9da));
        // CB 5E 0227
        gbc.setState(0x6b7, 0xe109, 0x1ff0, 0x58ed, 0xba40, 0x66a5, 0x1, 0x0);
        gbc.writeMem(0x6b7, { 0xcb, 0x5e });
        gbc.writeMem(0x66a5, { 0x50 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe109, gbc.sp());
        EXPECT(0x6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0228
        gbc.setState(0xec94, 0xfd0f, 0x1cf0, 0x4e9, 0xbd05, 0x98e2, 0x0, 0x0);
        gbc.writeMem(0x98e2, { 0x9d });
        gbc.writeMem(0xec94, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfd0f, gbc.sp());
        EXPECT(0xec96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x98e2));
        EXPECT(0xcb, gbc.readMem(0xec94));
        EXPECT(0x5e, gbc.readMem(0xec95));
        // CB 5E 0229
        gbc.setState(0x5595, 0xc30b, 0xca20, 0xfe6f, 0x794a, 0xab99, 0x1, 0x1);
        gbc.writeMem(0x5595, { 0xcb, 0x5e });
        gbc.writeMem(0xab99, { 0x4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc30b, gbc.sp());
        EXPECT(0x5597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xab99));
        // CB 5E 022A
        gbc.setState(0x996d, 0xc3e6, 0xa910, 0x80e, 0x8dc2, 0x5f9b, 0x0, 0x1);
        gbc.writeMem(0x5f9b, { 0x67 });
        gbc.writeMem(0x996d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc3e6, gbc.sp());
        EXPECT(0x996f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x996d));
        EXPECT(0x5e, gbc.readMem(0x996e));
        // CB 5E 022B
        gbc.setState(0x7571, 0x239a, 0x4cb0, 0x3c5d, 0xdad4, 0xf119, 0x1, 0x0);
        gbc.writeMem(0x7571, { 0xcb, 0x5e });
        gbc.writeMem(0xf119, { 0x5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x239a, gbc.sp());
        EXPECT(0x7573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xf119));
        // CB 5E 022C
        gbc.setState(0xee9, 0x216a, 0x8080, 0xfa9d, 0x1f1d, 0x1ad3, 0x0, 0x0);
        gbc.writeMem(0xee9, { 0xcb, 0x5e });
        gbc.writeMem(0x1ad3, { 0xb6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x216a, gbc.sp());
        EXPECT(0xeeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 022D
        gbc.setState(0x75ec, 0xfa26, 0xe120, 0xcca2, 0x2a09, 0x8d60, 0x0, 0x1);
        gbc.writeMem(0x75ec, { 0xcb, 0x5e });
        gbc.writeMem(0x8d60, { 0x6e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfa26, gbc.sp());
        EXPECT(0x75ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8d60));
        // CB 5E 022E
        gbc.setState(0xeada, 0xee49, 0x8bd0, 0xdd36, 0x473e, 0x484, 0x0, 0x1);
        gbc.writeMem(0x484, { 0xae });
        gbc.writeMem(0xeada, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xee49, gbc.sp());
        EXPECT(0xeadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeada));
        EXPECT(0x5e, gbc.readMem(0xeadb));
        // CB 5E 022F
        gbc.setState(0x24fa, 0xb547, 0x1260, 0x983b, 0x9f90, 0x2607, 0x0, 0x0);
        gbc.writeMem(0x24fa, { 0xcb, 0x5e });
        gbc.writeMem(0x2607, { 0x5d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb547, gbc.sp());
        EXPECT(0x24fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0230
        gbc.setState(0x6719, 0x4b4, 0x8610, 0xece5, 0xfc33, 0xb83b, 0x0, 0x0);
        gbc.writeMem(0x6719, { 0xcb, 0x5e });
        gbc.writeMem(0xb83b, { 0xf });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4b4, gbc.sp());
        EXPECT(0x671b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xb83b));
        // CB 5E 0231
        gbc.setState(0x2411, 0x4109, 0x5a0, 0x5d7a, 0xae43, 0xd4b, 0x0, 0x0);
        gbc.writeMem(0xd4b, { 0x16 });
        gbc.writeMem(0x2411, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4109, gbc.sp());
        EXPECT(0x2413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0232
        gbc.setState(0x857c, 0x7fe9, 0x4120, 0xb6d1, 0xf93e, 0x3638, 0x1, 0x0);
        gbc.writeMem(0x3638, { 0x48 });
        gbc.writeMem(0x857c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7fe9, gbc.sp());
        EXPECT(0x857e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x857c));
        EXPECT(0x5e, gbc.readMem(0x857d));
        // CB 5E 0233
        gbc.setState(0x615b, 0x5087, 0x7d70, 0x51c7, 0x5d62, 0x47c8, 0x0, 0x0);
        gbc.writeMem(0x47c8, { 0x8a });
        gbc.writeMem(0x615b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5087, gbc.sp());
        EXPECT(0x615d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0234
        gbc.setState(0x565d, 0x8849, 0x2000, 0x942, 0x9329, 0xf910, 0x1, 0x0);
        gbc.writeMem(0x565d, { 0xcb, 0x5e });
        gbc.writeMem(0xf910, { 0x66 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8849, gbc.sp());
        EXPECT(0x565f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xf910));
        // CB 5E 0235
        gbc.setState(0x39e1, 0xc915, 0xb640, 0x770a, 0xeee0, 0xab1e, 0x0, 0x1);
        gbc.writeMem(0x39e1, { 0xcb, 0x5e });
        gbc.writeMem(0xab1e, { 0xab });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc915, gbc.sp());
        EXPECT(0x39e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xab1e));
        // CB 5E 0236
        gbc.setState(0xc436, 0x9d7f, 0x760, 0x4e0d, 0x9af6, 0x3ac1, 0x0, 0x0);
        gbc.writeMem(0x3ac1, { 0x1d });
        gbc.writeMem(0xc436, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9d7f, gbc.sp());
        EXPECT(0xc438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc436));
        EXPECT(0x5e, gbc.readMem(0xc437));
        // CB 5E 0237
        gbc.setState(0xe397, 0x6267, 0x2c0, 0xb0c1, 0x305d, 0xd50c, 0x1, 0x1);
        gbc.writeMem(0xd50c, { 0xc6 });
        gbc.writeMem(0xe397, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6267, gbc.sp());
        EXPECT(0xe399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd50c));
        EXPECT(0xcb, gbc.readMem(0xe397));
        EXPECT(0x5e, gbc.readMem(0xe398));
        // CB 5E 0238
        gbc.setState(0x747b, 0xde24, 0xd2a0, 0xcaec, 0x9b16, 0xb944, 0x1, 0x0);
        gbc.writeMem(0x747b, { 0xcb, 0x5e });
        gbc.writeMem(0xb944, { 0xd1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xde24, gbc.sp());
        EXPECT(0x747d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xb944));
        // CB 5E 0239
        gbc.setState(0x107b, 0x6df9, 0xdbc0, 0x6947, 0x3046, 0xdc33, 0x1, 0x1);
        gbc.writeMem(0x107b, { 0xcb, 0x5e });
        gbc.writeMem(0xdc33, { 0x2b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6df9, gbc.sp());
        EXPECT(0x107d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdc33));
        // CB 5E 023A
        gbc.setState(0xe068, 0xa5ca, 0xbed0, 0x754c, 0xa442, 0x54c7, 0x0, 0x0);
        gbc.writeMem(0x54c7, { 0x5a });
        gbc.writeMem(0xe068, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa5ca, gbc.sp());
        EXPECT(0xe06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe068));
        EXPECT(0x5e, gbc.readMem(0xe069));
        // CB 5E 023C
        gbc.setState(0x81bb, 0xa992, 0x7cb0, 0x70a, 0x5b35, 0x6bec, 0x0, 0x1);
        gbc.writeMem(0x6bec, { 0x52 });
        gbc.writeMem(0x81bb, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa992, gbc.sp());
        EXPECT(0x81bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81bb));
        EXPECT(0x5e, gbc.readMem(0x81bc));
        // CB 5E 023D
        gbc.setState(0x53e6, 0x7ddd, 0x4f70, 0xc855, 0xc801, 0x6782, 0x1, 0x0);
        gbc.writeMem(0x53e6, { 0xcb, 0x5e });
        gbc.writeMem(0x6782, { 0x8c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7ddd, gbc.sp());
        EXPECT(0x53e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 023E
        gbc.setState(0x1316, 0x3c55, 0x90f0, 0x2315, 0x65d4, 0xc6ee, 0x1, 0x0);
        gbc.writeMem(0x1316, { 0xcb, 0x5e });
        gbc.writeMem(0xc6ee, { 0xa5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3c55, gbc.sp());
        EXPECT(0x1318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xc6ee));
        // CB 5E 023F
        gbc.setState(0x86ba, 0xbb1a, 0xdab0, 0x66b9, 0x3e16, 0xdb27, 0x1, 0x1);
        gbc.writeMem(0x86ba, { 0xcb, 0x5e });
        gbc.writeMem(0xdb27, { 0x63 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbb1a, gbc.sp());
        EXPECT(0x86bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ba));
        EXPECT(0x5e, gbc.readMem(0x86bb));
        EXPECT(0x63, gbc.readMem(0xdb27));
        // CB 5E 0240
        gbc.setState(0xfc6, 0xae98, 0x3bc0, 0x1e4, 0x82de, 0x2ee2, 0x0, 0x0);
        gbc.writeMem(0xfc6, { 0xcb, 0x5e });
        gbc.writeMem(0x2ee2, { 0x60 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xae98, gbc.sp());
        EXPECT(0xfc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0241
        gbc.setState(0x47e1, 0x622c, 0x10e0, 0xb0d0, 0xe5f3, 0xc7bb, 0x0, 0x1);
        gbc.writeMem(0x47e1, { 0xcb, 0x5e });
        gbc.writeMem(0xc7bb, { 0xf9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x622c, gbc.sp());
        EXPECT(0x47e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xc7bb));
        // CB 5E 0242
        gbc.setState(0x910c, 0xf7e2, 0x6dd0, 0x77a9, 0xb23f, 0x8af5, 0x0, 0x0);
        gbc.writeMem(0x8af5, { 0xf7 });
        gbc.writeMem(0x910c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf7e2, gbc.sp());
        EXPECT(0x910e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8af5));
        EXPECT(0xcb, gbc.readMem(0x910c));
        EXPECT(0x5e, gbc.readMem(0x910d));
        // CB 5E 0243
        gbc.setState(0x2b7f, 0x5bf9, 0xd880, 0xe772, 0xb8a9, 0x33df, 0x1, 0x1);
        gbc.writeMem(0x2b7f, { 0xcb, 0x5e });
        gbc.writeMem(0x33df, { 0x8d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5bf9, gbc.sp());
        EXPECT(0x2b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0244
        gbc.setState(0x3b5e, 0x15b5, 0xbde0, 0x9cd6, 0xdd3d, 0xa1b8, 0x1, 0x1);
        gbc.writeMem(0x3b5e, { 0xcb, 0x5e });
        gbc.writeMem(0xa1b8, { 0xec });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x15b5, gbc.sp());
        EXPECT(0x3b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xa1b8));
        // CB 5E 0245
        gbc.setState(0xaf96, 0xbb05, 0x5bc0, 0xbf89, 0xda2c, 0x702, 0x0, 0x0);
        gbc.writeMem(0x702, { 0x64 });
        gbc.writeMem(0xaf96, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbb05, gbc.sp());
        EXPECT(0xaf98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf96));
        EXPECT(0x5e, gbc.readMem(0xaf97));
        // CB 5E 0246
        gbc.setState(0x4e18, 0x1a73, 0x45f0, 0xfc23, 0xec85, 0xad7a, 0x0, 0x0);
        gbc.writeMem(0x4e18, { 0xcb, 0x5e });
        gbc.writeMem(0xad7a, { 0x52 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1a73, gbc.sp());
        EXPECT(0x4e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xad7a));
        // CB 5E 0247
        gbc.setState(0x1693, 0xcf59, 0x4ae0, 0xf734, 0xa7dd, 0x881, 0x0, 0x0);
        gbc.writeMem(0x881, { 0x1d });
        gbc.writeMem(0x1693, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcf59, gbc.sp());
        EXPECT(0x1695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0248
        gbc.setState(0xbfcb, 0xd2b5, 0x3be0, 0xe86b, 0xa45c, 0xaae2, 0x1, 0x1);
        gbc.writeMem(0xaae2, { 0x86 });
        gbc.writeMem(0xbfcb, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd2b5, gbc.sp());
        EXPECT(0xbfcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xaae2));
        EXPECT(0xcb, gbc.readMem(0xbfcb));
        EXPECT(0x5e, gbc.readMem(0xbfcc));
        // CB 5E 024A
        gbc.setState(0xb547, 0x1895, 0xf0c0, 0xb634, 0xe0a1, 0xcc8c, 0x0, 0x0);
        gbc.writeMem(0xb547, { 0xcb, 0x5e });
        gbc.writeMem(0xcc8c, { 0xcd });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1895, gbc.sp());
        EXPECT(0xb549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb547));
        EXPECT(0x5e, gbc.readMem(0xb548));
        EXPECT(0xcd, gbc.readMem(0xcc8c));
        // CB 5E 024B
        gbc.setState(0xb72d, 0xddd3, 0xe050, 0x8abd, 0xeafc, 0x2193, 0x0, 0x0);
        gbc.writeMem(0x2193, { 0x55 });
        gbc.writeMem(0xb72d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xddd3, gbc.sp());
        EXPECT(0xb72f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72d));
        EXPECT(0x5e, gbc.readMem(0xb72e));
        // CB 5E 024C
        gbc.setState(0x549f, 0xb590, 0x68a0, 0x3522, 0x9423, 0xe315, 0x1, 0x0);
        gbc.writeMem(0x549f, { 0xcb, 0x5e });
        gbc.writeMem(0xe315, { 0x90 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb590, gbc.sp());
        EXPECT(0x54a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xe315));
        // CB 5E 024D
        gbc.setState(0xbabf, 0x8dd, 0x1050, 0xc228, 0x59c6, 0xdba2, 0x0, 0x1);
        gbc.writeMem(0xbabf, { 0xcb, 0x5e });
        gbc.writeMem(0xdba2, { 0x74 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8dd, gbc.sp());
        EXPECT(0xbac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbabf));
        EXPECT(0x5e, gbc.readMem(0xbac0));
        EXPECT(0x74, gbc.readMem(0xdba2));
        // CB 5E 024E
        gbc.setState(0x4c48, 0x7b2c, 0x10b0, 0x1168, 0x1af8, 0x4d43, 0x1, 0x0);
        gbc.writeMem(0x4c48, { 0xcb, 0x5e });
        gbc.writeMem(0x4d43, { 0xec });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7b2c, gbc.sp());
        EXPECT(0x4c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 024F
        gbc.setState(0x4975, 0x83f1, 0xbce0, 0xc014, 0x3f4c, 0x6648, 0x0, 0x1);
        gbc.writeMem(0x4975, { 0xcb, 0x5e });
        gbc.writeMem(0x6648, { 0xd1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x83f1, gbc.sp());
        EXPECT(0x4977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0250
        gbc.setState(0x43c6, 0x7604, 0xfbf0, 0x98f6, 0x79d1, 0xfb8, 0x0, 0x1);
        gbc.writeMem(0xfb8, { 0x1a });
        gbc.writeMem(0x43c6, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7604, gbc.sp());
        EXPECT(0x43c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0251
        gbc.setState(0xd862, 0x86f1, 0x55a0, 0x7608, 0x8a7a, 0xae46, 0x1, 0x0);
        gbc.writeMem(0xae46, { 0x83 });
        gbc.writeMem(0xd862, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x86f1, gbc.sp());
        EXPECT(0xd864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xae46));
        EXPECT(0xcb, gbc.readMem(0xd862));
        EXPECT(0x5e, gbc.readMem(0xd863));
        // CB 5E 0252
        gbc.setState(0xb51, 0xa029, 0x9530, 0x58ef, 0x1e1a, 0x60b4, 0x1, 0x1);
        gbc.writeMem(0xb51, { 0xcb, 0x5e });
        gbc.writeMem(0x60b4, { 0xce });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa029, gbc.sp());
        EXPECT(0xb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0253
        gbc.setState(0xe7eb, 0x4b8d, 0x3dc0, 0xf60d, 0x97be, 0xa2a8, 0x0, 0x1);
        gbc.writeMem(0xa2a8, { 0x6f });
        gbc.writeMem(0xe7eb, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4b8d, gbc.sp());
        EXPECT(0xe7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa2a8));
        EXPECT(0xcb, gbc.readMem(0xe7eb));
        EXPECT(0x5e, gbc.readMem(0xe7ec));
        // CB 5E 0254
        gbc.setState(0xf56, 0x4613, 0x4c70, 0x820b, 0x72ea, 0x5822, 0x0, 0x0);
        gbc.writeMem(0xf56, { 0xcb, 0x5e });
        gbc.writeMem(0x5822, { 0xe4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4613, gbc.sp());
        EXPECT(0xf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0255
        gbc.setState(0x4978, 0x399, 0xf770, 0x7f76, 0x7aba, 0x8826, 0x1, 0x0);
        gbc.writeMem(0x4978, { 0xcb, 0x5e });
        gbc.writeMem(0x8826, { 0x75 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x399, gbc.sp());
        EXPECT(0x497a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8826));
        // CB 5E 0256
        gbc.setState(0x5e1, 0xed0e, 0xc380, 0x75cb, 0x6bba, 0xecae, 0x0, 0x0);
        gbc.writeMem(0x5e1, { 0xcb, 0x5e });
        gbc.writeMem(0xecae, { 0x74 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xed0e, gbc.sp());
        EXPECT(0x5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xecae));
        // CB 5E 0257
        gbc.setState(0x671a, 0x6238, 0xd980, 0x6c1, 0x5cc9, 0xf949, 0x1, 0x0);
        gbc.writeMem(0x671a, { 0xcb, 0x5e });
        gbc.writeMem(0xf949, { 0x92 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6238, gbc.sp());
        EXPECT(0x671c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xf949));
        // CB 5E 0258
        gbc.setState(0xd57a, 0xa3c6, 0x3630, 0xb95f, 0x113a, 0xf9ad, 0x0, 0x1);
        gbc.writeMem(0xd57a, { 0xcb, 0x5e });
        gbc.writeMem(0xf9ad, { 0x60 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa3c6, gbc.sp());
        EXPECT(0xd57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd57a));
        EXPECT(0x5e, gbc.readMem(0xd57b));
        EXPECT(0x60, gbc.readMem(0xf9ad));
        // CB 5E 025A
        gbc.setState(0xa205, 0xc6a0, 0x9550, 0x9a99, 0x1675, 0xf9b6, 0x1, 0x1);
        gbc.writeMem(0xa205, { 0xcb, 0x5e });
        gbc.writeMem(0xf9b6, { 0xad });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc6a0, gbc.sp());
        EXPECT(0xa207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa205));
        EXPECT(0x5e, gbc.readMem(0xa206));
        EXPECT(0xad, gbc.readMem(0xf9b6));
        // CB 5E 025B
        gbc.setState(0xe415, 0x2f34, 0xdac0, 0xd59b, 0x39d1, 0x6c09, 0x1, 0x1);
        gbc.writeMem(0x6c09, { 0xd2 });
        gbc.writeMem(0xe415, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2f34, gbc.sp());
        EXPECT(0xe417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe415));
        EXPECT(0x5e, gbc.readMem(0xe416));
        // CB 5E 025C
        gbc.setState(0x1212, 0xf8ca, 0xf2a0, 0xa8d4, 0xfb1f, 0x279d, 0x1, 0x0);
        gbc.writeMem(0x1212, { 0xcb, 0x5e });
        gbc.writeMem(0x279d, { 0xef });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf8ca, gbc.sp());
        EXPECT(0x1214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 025D
        gbc.setState(0x232, 0xd969, 0xd920, 0xb7f0, 0x9b10, 0x23eb, 0x0, 0x1);
        gbc.writeMem(0x232, { 0xcb, 0x5e });
        gbc.writeMem(0x23eb, { 0xaa });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd969, gbc.sp());
        EXPECT(0x234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 025E
        gbc.setState(0x1db3, 0x51da, 0x42d0, 0x85bb, 0xdc3e, 0x93f1, 0x1, 0x0);
        gbc.writeMem(0x1db3, { 0xcb, 0x5e });
        gbc.writeMem(0x93f1, { 0x3c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x51da, gbc.sp());
        EXPECT(0x1db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x93f1));
        // CB 5E 025F
        gbc.setState(0x3dc1, 0x7e21, 0xfad0, 0x6ef8, 0x9bec, 0x10f8, 0x1, 0x1);
        gbc.writeMem(0x10f8, { 0x3c });
        gbc.writeMem(0x3dc1, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7e21, gbc.sp());
        EXPECT(0x3dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0260
        gbc.setState(0xd4fc, 0xa684, 0x3c0, 0x9fb3, 0x6d4a, 0x81a8, 0x1, 0x1);
        gbc.writeMem(0x81a8, { 0xfd });
        gbc.writeMem(0xd4fc, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa684, gbc.sp());
        EXPECT(0xd4fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x81a8));
        EXPECT(0xcb, gbc.readMem(0xd4fc));
        EXPECT(0x5e, gbc.readMem(0xd4fd));
        // CB 5E 0261
        gbc.setState(0xa46e, 0xded4, 0xabb0, 0x3a5f, 0x2b1f, 0x75a7, 0x0, 0x1);
        gbc.writeMem(0x75a7, { 0xd9 });
        gbc.writeMem(0xa46e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xded4, gbc.sp());
        EXPECT(0xa470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46e));
        EXPECT(0x5e, gbc.readMem(0xa46f));
        // CB 5E 0262
        gbc.setState(0x2f76, 0x7adc, 0x51b0, 0x4f0, 0xcf4, 0xb35, 0x0, 0x0);
        gbc.writeMem(0xb35, { 0xb3 });
        gbc.writeMem(0x2f76, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7adc, gbc.sp());
        EXPECT(0x2f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0263
        gbc.setState(0xcb61, 0xa9c4, 0xde20, 0xffba, 0x8243, 0x13f1, 0x0, 0x1);
        gbc.writeMem(0x13f1, { 0x57 });
        gbc.writeMem(0xcb61, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa9c4, gbc.sp());
        EXPECT(0xcb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb61));
        EXPECT(0x5e, gbc.readMem(0xcb62));
        // CB 5E 0264
        gbc.setState(0x9a90, 0xe098, 0xef80, 0x7b2f, 0xc69d, 0xab24, 0x0, 0x0);
        gbc.writeMem(0x9a90, { 0xcb, 0x5e });
        gbc.writeMem(0xab24, { 0x34 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe098, gbc.sp());
        EXPECT(0x9a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a90));
        EXPECT(0x5e, gbc.readMem(0x9a91));
        EXPECT(0x34, gbc.readMem(0xab24));
        // CB 5E 0265
        gbc.setState(0x618d, 0xd480, 0x8620, 0xc6ff, 0x5cb3, 0x6f4f, 0x0, 0x0);
        gbc.writeMem(0x618d, { 0xcb, 0x5e });
        gbc.writeMem(0x6f4f, { 0x52 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd480, gbc.sp());
        EXPECT(0x618f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0267
        gbc.setState(0xa9a1, 0xc317, 0xd20, 0xdda9, 0x173f, 0xa965, 0x1, 0x0);
        gbc.writeMem(0xa965, { 0x56 });
        gbc.writeMem(0xa9a1, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc317, gbc.sp());
        EXPECT(0xa9a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa965));
        EXPECT(0xcb, gbc.readMem(0xa9a1));
        EXPECT(0x5e, gbc.readMem(0xa9a2));
        // CB 5E 0268
        gbc.setState(0xd9d0, 0x7d7b, 0xa9f0, 0xc7d9, 0xd6a4, 0x8cda, 0x1, 0x0);
        gbc.writeMem(0x8cda, { 0x32 });
        gbc.writeMem(0xd9d0, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7d7b, gbc.sp());
        EXPECT(0xd9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8cda));
        EXPECT(0xcb, gbc.readMem(0xd9d0));
        EXPECT(0x5e, gbc.readMem(0xd9d1));
        // CB 5E 0269
        gbc.setState(0x6fdd, 0x2766, 0xb080, 0x51ee, 0x98fd, 0x44f2, 0x1, 0x0);
        gbc.writeMem(0x44f2, { 0x71 });
        gbc.writeMem(0x6fdd, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2766, gbc.sp());
        EXPECT(0x6fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 026A
        gbc.setState(0x2b5f, 0xe83e, 0xab90, 0x353a, 0xeb48, 0xc053, 0x0, 0x1);
        gbc.writeMem(0x2b5f, { 0xcb, 0x5e });
        gbc.writeMem(0xc053, { 0x28 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe83e, gbc.sp());
        EXPECT(0x2b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xc053));
        // CB 5E 026B
        gbc.setState(0x714e, 0xed07, 0xda30, 0xe8ab, 0xcbfc, 0x93d6, 0x0, 0x0);
        gbc.writeMem(0x714e, { 0xcb, 0x5e });
        gbc.writeMem(0x93d6, { 0xcb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xed07, gbc.sp());
        EXPECT(0x7150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d6));
        // CB 5E 026C
        gbc.setState(0xc7f9, 0xccd4, 0xa1f0, 0xa683, 0x476c, 0x7bdc, 0x1, 0x1);
        gbc.writeMem(0x7bdc, { 0x2d });
        gbc.writeMem(0xc7f9, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xccd4, gbc.sp());
        EXPECT(0xc7fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f9));
        EXPECT(0x5e, gbc.readMem(0xc7fa));
        // CB 5E 026D
        gbc.setState(0x1b6d, 0x7c82, 0xa150, 0x8d4a, 0x4e5f, 0x5b78, 0x0, 0x0);
        gbc.writeMem(0x1b6d, { 0xcb, 0x5e });
        gbc.writeMem(0x5b78, { 0x8d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7c82, gbc.sp());
        EXPECT(0x1b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 026E
        gbc.setState(0xc054, 0x6d08, 0x3ed0, 0x780f, 0x8e33, 0x66f7, 0x0, 0x1);
        gbc.writeMem(0x66f7, { 0x41 });
        gbc.writeMem(0xc054, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6d08, gbc.sp());
        EXPECT(0xc056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc054));
        EXPECT(0x5e, gbc.readMem(0xc055));
        // CB 5E 026F
        gbc.setState(0x20a1, 0x31fa, 0x1560, 0xbba5, 0x273, 0xd0d2, 0x0, 0x1);
        gbc.writeMem(0x20a1, { 0xcb, 0x5e });
        gbc.writeMem(0xd0d2, { 0x2b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x31fa, gbc.sp());
        EXPECT(0x20a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd0d2));
        // CB 5E 0271
        gbc.setState(0xdfb1, 0xe808, 0xe720, 0x918e, 0xce5f, 0x845d, 0x0, 0x0);
        gbc.writeMem(0x845d, { 0x59 });
        gbc.writeMem(0xdfb1, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe808, gbc.sp());
        EXPECT(0xdfb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x845d));
        EXPECT(0xcb, gbc.readMem(0xdfb1));
        EXPECT(0x5e, gbc.readMem(0xdfb2));
        // CB 5E 0272
        gbc.setState(0xd92b, 0x4ca, 0xde0, 0x8650, 0x5a6, 0x427f, 0x1, 0x0);
        gbc.writeMem(0x427f, { 0x10 });
        gbc.writeMem(0xd92b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4ca, gbc.sp());
        EXPECT(0xd92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92b));
        EXPECT(0x5e, gbc.readMem(0xd92c));
        // CB 5E 0273
        gbc.setState(0x8e3c, 0xf777, 0xbdc0, 0x9d09, 0xfc61, 0x7d5, 0x0, 0x0);
        gbc.writeMem(0x7d5, { 0xf7 });
        gbc.writeMem(0x8e3c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf777, gbc.sp());
        EXPECT(0x8e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e3c));
        EXPECT(0x5e, gbc.readMem(0x8e3d));
        // CB 5E 0274
        gbc.setState(0x10f4, 0xa476, 0x3750, 0xfbce, 0xf7c9, 0x36c4, 0x1, 0x0);
        gbc.writeMem(0x10f4, { 0xcb, 0x5e });
        gbc.writeMem(0x36c4, { 0xb2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa476, gbc.sp());
        EXPECT(0x10f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0275
        gbc.setState(0xaf6f, 0x4e0, 0x46e0, 0x1134, 0x8e50, 0x4bca, 0x1, 0x0);
        gbc.writeMem(0x4bca, { 0x2f });
        gbc.writeMem(0xaf6f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4e0, gbc.sp());
        EXPECT(0xaf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6f));
        EXPECT(0x5e, gbc.readMem(0xaf70));
        // CB 5E 0276
        gbc.setState(0x12a2, 0x2141, 0x9930, 0x74d2, 0xb0d9, 0x22d, 0x0, 0x0);
        gbc.writeMem(0x22d, { 0xa7 });
        gbc.writeMem(0x12a2, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2141, gbc.sp());
        EXPECT(0x12a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0277
        gbc.setState(0x6845, 0xb3c1, 0x2570, 0x125b, 0x12e, 0x5955, 0x0, 0x1);
        gbc.writeMem(0x5955, { 0xd3 });
        gbc.writeMem(0x6845, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb3c1, gbc.sp());
        EXPECT(0x6847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0278
        gbc.setState(0x6c6d, 0xf7aa, 0x9050, 0xa84a, 0x9717, 0x9a2c, 0x1, 0x1);
        gbc.writeMem(0x6c6d, { 0xcb, 0x5e });
        gbc.writeMem(0x9a2c, { 0xad });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf7aa, gbc.sp());
        EXPECT(0x6c6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x9a2c));
        // CB 5E 0279
        gbc.setState(0x1105, 0x2455, 0xd710, 0x59aa, 0xd431, 0x61e5, 0x0, 0x1);
        gbc.writeMem(0x1105, { 0xcb, 0x5e });
        gbc.writeMem(0x61e5, { 0xdc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2455, gbc.sp());
        EXPECT(0x1107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 027A
        gbc.setState(0x902, 0x64c7, 0x3d70, 0x2259, 0xb670, 0x9d75, 0x1, 0x1);
        gbc.writeMem(0x902, { 0xcb, 0x5e });
        gbc.writeMem(0x9d75, { 0xc0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x64c7, gbc.sp());
        EXPECT(0x904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9d75));
        // CB 5E 027B
        gbc.setState(0x6063, 0x7bc8, 0x2a0, 0xd314, 0xc50f, 0xfa0f, 0x0, 0x0);
        gbc.writeMem(0x6063, { 0xcb, 0x5e });
        gbc.writeMem(0xfa0f, { 0xfa });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7bc8, gbc.sp());
        EXPECT(0x6065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xfa0f));
        // CB 5E 027C
        gbc.setState(0x622, 0x9654, 0x49e0, 0xec40, 0x1c20, 0x76ab, 0x1, 0x1);
        gbc.writeMem(0x622, { 0xcb, 0x5e });
        gbc.writeMem(0x76ab, { 0xa4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9654, gbc.sp());
        EXPECT(0x624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 027D
        gbc.setState(0x3bb7, 0xef29, 0xb6c0, 0x8d0b, 0xb2e4, 0x4936, 0x0, 0x1);
        gbc.writeMem(0x3bb7, { 0xcb, 0x5e });
        gbc.writeMem(0x4936, { 0xbd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xef29, gbc.sp());
        EXPECT(0x3bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 027E
        gbc.setState(0xb6d2, 0x160, 0xe00, 0x82a0, 0xdeb0, 0xb14e, 0x0, 0x0);
        gbc.writeMem(0xb14e, { 0x84 });
        gbc.writeMem(0xb6d2, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x160, gbc.sp());
        EXPECT(0xb6d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xb14e));
        EXPECT(0xcb, gbc.readMem(0xb6d2));
        EXPECT(0x5e, gbc.readMem(0xb6d3));
        // CB 5E 027F
        gbc.setState(0x7e6a, 0x66d1, 0x99d0, 0x57c, 0x82ab, 0x1300, 0x1, 0x0);
        gbc.writeMem(0x1300, { 0x10 });
        gbc.writeMem(0x7e6a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x66d1, gbc.sp());
        EXPECT(0x7e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0280
        gbc.setState(0x41fd, 0xabd2, 0x87e0, 0x30b1, 0x41d3, 0xf61b, 0x0, 0x1);
        gbc.writeMem(0x41fd, { 0xcb, 0x5e });
        gbc.writeMem(0xf61b, { 0xa8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xabd2, gbc.sp());
        EXPECT(0x41ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xf61b));
        // CB 5E 0281
        gbc.setState(0x1b7d, 0xaa60, 0xac20, 0x4d4f, 0x5c84, 0xf9ff, 0x0, 0x0);
        gbc.writeMem(0x1b7d, { 0xcb, 0x5e });
        gbc.writeMem(0xf9ff, { 0x6a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xaa60, gbc.sp());
        EXPECT(0x1b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xf9ff));
        // CB 5E 0283
        gbc.setState(0x63fa, 0xcf6b, 0x26b0, 0xb2c3, 0xf1bd, 0x8df4, 0x0, 0x0);
        gbc.writeMem(0x63fa, { 0xcb, 0x5e });
        gbc.writeMem(0x8df4, { 0x4a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcf6b, gbc.sp());
        EXPECT(0x63fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x8df4));
        // CB 5E 0284
        gbc.setState(0xb130, 0x2e6c, 0xa6d0, 0x4d99, 0x9ff, 0xb82b, 0x0, 0x1);
        gbc.writeMem(0xb130, { 0xcb, 0x5e });
        gbc.writeMem(0xb82b, { 0xb0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2e6c, gbc.sp());
        EXPECT(0xb132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb130));
        EXPECT(0x5e, gbc.readMem(0xb131));
        EXPECT(0xb0, gbc.readMem(0xb82b));
        // CB 5E 0285
        gbc.setState(0x1cbf, 0x77f5, 0xcaa0, 0xe567, 0xbfec, 0xc980, 0x1, 0x0);
        gbc.writeMem(0x1cbf, { 0xcb, 0x5e });
        gbc.writeMem(0xc980, { 0x2a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x77f5, gbc.sp());
        EXPECT(0x1cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xc980));
        // CB 5E 0286
        gbc.setState(0x14f0, 0x34a5, 0xb600, 0xc06, 0x9640, 0x2f0c, 0x1, 0x1);
        gbc.writeMem(0x14f0, { 0xcb, 0x5e });
        gbc.writeMem(0x2f0c, { 0xc7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x34a5, gbc.sp());
        EXPECT(0x14f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0287
        gbc.setState(0x779c, 0x2c66, 0xf940, 0xe6d9, 0x244e, 0xb679, 0x1, 0x1);
        gbc.writeMem(0x779c, { 0xcb, 0x5e });
        gbc.writeMem(0xb679, { 0x2a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2c66, gbc.sp());
        EXPECT(0x779e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xb679));
        // CB 5E 0288
        gbc.setState(0x8720, 0xe367, 0x7df0, 0x910f, 0x5a28, 0x4e50, 0x0, 0x0);
        gbc.writeMem(0x4e50, { 0x93 });
        gbc.writeMem(0x8720, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe367, gbc.sp());
        EXPECT(0x8722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8720));
        EXPECT(0x5e, gbc.readMem(0x8721));
        // CB 5E 0289
        gbc.setState(0x8286, 0xd3c7, 0x8e0, 0x5ca4, 0x5013, 0x869e, 0x1, 0x1);
        gbc.writeMem(0x8286, { 0xcb, 0x5e });
        gbc.writeMem(0x869e, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd3c7, gbc.sp());
        EXPECT(0x8288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8286));
        EXPECT(0x5e, gbc.readMem(0x8287));
        EXPECT(0x0, gbc.readMem(0x869e));
        // CB 5E 028A
        gbc.setState(0x3fe6, 0x63f5, 0x3fb0, 0x87b8, 0x2dc8, 0xd33c, 0x1, 0x1);
        gbc.writeMem(0x3fe6, { 0xcb, 0x5e });
        gbc.writeMem(0xd33c, { 0xdc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x63f5, gbc.sp());
        EXPECT(0x3fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xd33c));
        // CB 5E 028B
        gbc.setState(0x47f7, 0xfa1f, 0xce0, 0xf63b, 0x3c71, 0x6dcb, 0x0, 0x0);
        gbc.writeMem(0x47f7, { 0xcb, 0x5e });
        gbc.writeMem(0x6dcb, { 0xcc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfa1f, gbc.sp());
        EXPECT(0x47f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 028C
        gbc.setState(0xb190, 0xf610, 0x3e60, 0x31a8, 0x27ab, 0x8a7c, 0x0, 0x1);
        gbc.writeMem(0x8a7c, { 0x8 });
        gbc.writeMem(0xb190, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf610, gbc.sp());
        EXPECT(0xb192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x8a7c));
        EXPECT(0xcb, gbc.readMem(0xb190));
        EXPECT(0x5e, gbc.readMem(0xb191));
        // CB 5E 028D
        gbc.setState(0x5995, 0xcebb, 0xe20, 0xf628, 0x9951, 0xfcf9, 0x1, 0x0);
        gbc.writeMem(0x5995, { 0xcb, 0x5e });
        gbc.writeMem(0xfcf9, { 0x29 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcebb, gbc.sp());
        EXPECT(0x5997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xfcf9));
        // CB 5E 028E
        gbc.setState(0x9c96, 0xe3c9, 0x6240, 0x8707, 0x76f4, 0xe8fc, 0x1, 0x0);
        gbc.writeMem(0x9c96, { 0xcb, 0x5e });
        gbc.writeMem(0xe8fc, { 0xe9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe3c9, gbc.sp());
        EXPECT(0x9c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c96));
        EXPECT(0x5e, gbc.readMem(0x9c97));
        EXPECT(0xe9, gbc.readMem(0xe8fc));
        // CB 5E 028F
        gbc.setState(0xd421, 0x6228, 0xcb00, 0xa4cc, 0x9ddd, 0xf586, 0x1, 0x0);
        gbc.writeMem(0xd421, { 0xcb, 0x5e });
        gbc.writeMem(0xf586, { 0x59 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6228, gbc.sp());
        EXPECT(0xd423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd421));
        EXPECT(0x5e, gbc.readMem(0xd422));
        EXPECT(0x59, gbc.readMem(0xf586));
        // CB 5E 0290
        gbc.setState(0x2470, 0x3aeb, 0x9140, 0x4d0f, 0x6aae, 0x54c2, 0x1, 0x1);
        gbc.writeMem(0x2470, { 0xcb, 0x5e });
        gbc.writeMem(0x54c2, { 0x6f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3aeb, gbc.sp());
        EXPECT(0x2472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0291
        gbc.setState(0x2071, 0x57f1, 0x98c0, 0x21d4, 0x9e28, 0x710d, 0x1, 0x1);
        gbc.writeMem(0x2071, { 0xcb, 0x5e });
        gbc.writeMem(0x710d, { 0x94 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x57f1, gbc.sp());
        EXPECT(0x2073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0292
        gbc.setState(0x5a15, 0x9faf, 0x5b50, 0xacb4, 0xbd31, 0x3d4f, 0x0, 0x1);
        gbc.writeMem(0x3d4f, { 0xb1 });
        gbc.writeMem(0x5a15, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9faf, gbc.sp());
        EXPECT(0x5a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0293
        gbc.setState(0x632f, 0x94fe, 0x4b20, 0xaf93, 0x3d35, 0x507d, 0x0, 0x1);
        gbc.writeMem(0x507d, { 0xd3 });
        gbc.writeMem(0x632f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x94fe, gbc.sp());
        EXPECT(0x6331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0294
        gbc.setState(0x7dd7, 0x72c0, 0x8170, 0xd25f, 0xefae, 0x8ee6, 0x0, 0x0);
        gbc.writeMem(0x7dd7, { 0xcb, 0x5e });
        gbc.writeMem(0x8ee6, { 0x7c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x72c0, gbc.sp());
        EXPECT(0x7dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x8ee6));
        // CB 5E 0295
        gbc.setState(0xe5f3, 0x197a, 0x9b20, 0x27cd, 0x8ad1, 0x80a5, 0x0, 0x0);
        gbc.writeMem(0x80a5, { 0x28 });
        gbc.writeMem(0xe5f3, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x197a, gbc.sp());
        EXPECT(0xe5f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x80a5));
        EXPECT(0xcb, gbc.readMem(0xe5f3));
        EXPECT(0x5e, gbc.readMem(0xe5f4));
        // CB 5E 0296
        gbc.setState(0x328e, 0x14a4, 0xc6f0, 0x93b6, 0xb8fe, 0x8902, 0x0, 0x0);
        gbc.writeMem(0x328e, { 0xcb, 0x5e });
        gbc.writeMem(0x8902, { 0x7b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x14a4, gbc.sp());
        EXPECT(0x3290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8902));
        // CB 5E 0298
        gbc.setState(0x5ad0, 0x61bf, 0xc5e0, 0x15ee, 0x8fd4, 0xa5f2, 0x0, 0x0);
        gbc.writeMem(0x5ad0, { 0xcb, 0x5e });
        gbc.writeMem(0xa5f2, { 0xe6 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x61bf, gbc.sp());
        EXPECT(0x5ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa5f2));
        // CB 5E 0299
        gbc.setState(0x46e2, 0xa3ae, 0x2d60, 0x9a76, 0x3948, 0xd134, 0x1, 0x0);
        gbc.writeMem(0x46e2, { 0xcb, 0x5e });
        gbc.writeMem(0xd134, { 0x7c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa3ae, gbc.sp());
        EXPECT(0x46e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xd134));
        // CB 5E 029B
        gbc.setState(0x4579, 0x81c9, 0x17a0, 0x5154, 0xde86, 0x2380, 0x1, 0x0);
        gbc.writeMem(0x2380, { 0x57 });
        gbc.writeMem(0x4579, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x81c9, gbc.sp());
        EXPECT(0x457b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 029C
        gbc.setState(0x87e4, 0x599a, 0x77c0, 0xfb08, 0x34e4, 0xee2a, 0x0, 0x0);
        gbc.writeMem(0x87e4, { 0xcb, 0x5e });
        gbc.writeMem(0xee2a, { 0x52 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x599a, gbc.sp());
        EXPECT(0x87e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e4));
        EXPECT(0x5e, gbc.readMem(0x87e5));
        EXPECT(0x52, gbc.readMem(0xee2a));
        // CB 5E 029D
        gbc.setState(0xaf8c, 0x8051, 0xbff0, 0x161c, 0x7542, 0x1732, 0x1, 0x1);
        gbc.writeMem(0x1732, { 0xf4 });
        gbc.writeMem(0xaf8c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8051, gbc.sp());
        EXPECT(0xaf8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf8c));
        EXPECT(0x5e, gbc.readMem(0xaf8d));
        // CB 5E 029E
        gbc.setState(0x8cea, 0x1f5f, 0xf530, 0xd7ed, 0x2d0d, 0xcc30, 0x1, 0x1);
        gbc.writeMem(0x8cea, { 0xcb, 0x5e });
        gbc.writeMem(0xcc30, { 0x49 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1f5f, gbc.sp());
        EXPECT(0x8cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cea));
        EXPECT(0x5e, gbc.readMem(0x8ceb));
        EXPECT(0x49, gbc.readMem(0xcc30));
        // CB 5E 029F
        gbc.setState(0xe225, 0x6011, 0x6b40, 0x328b, 0x7dc7, 0x899c, 0x0, 0x0);
        gbc.writeMem(0x899c, { 0x43 });
        gbc.writeMem(0xe225, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6011, gbc.sp());
        EXPECT(0xe227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x899c));
        EXPECT(0xcb, gbc.readMem(0xe225));
        EXPECT(0x5e, gbc.readMem(0xe226));
        // CB 5E 02A0
        gbc.setState(0x8e1e, 0xb05, 0xacf0, 0xb8bc, 0xf869, 0x6919, 0x0, 0x0);
        gbc.writeMem(0x6919, { 0xe4 });
        gbc.writeMem(0x8e1e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb05, gbc.sp());
        EXPECT(0x8e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1e));
        EXPECT(0x5e, gbc.readMem(0x8e1f));
        // CB 5E 02A1
        gbc.setState(0x8e69, 0x859a, 0x1de0, 0x1e63, 0xd960, 0xf09, 0x0, 0x1);
        gbc.writeMem(0xf09, { 0x3a });
        gbc.writeMem(0x8e69, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x859a, gbc.sp());
        EXPECT(0x8e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e69));
        EXPECT(0x5e, gbc.readMem(0x8e6a));
        // CB 5E 02A2
        gbc.setState(0x746c, 0xa9ae, 0xc140, 0x6638, 0xd73, 0x2cfc, 0x0, 0x1);
        gbc.writeMem(0x2cfc, { 0x15 });
        gbc.writeMem(0x746c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa9ae, gbc.sp());
        EXPECT(0x746e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 02A3
        gbc.setState(0xb30b, 0x345f, 0xfbc0, 0xb032, 0xad65, 0xe9dd, 0x1, 0x0);
        gbc.writeMem(0xb30b, { 0xcb, 0x5e });
        gbc.writeMem(0xe9dd, { 0xd8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x345f, gbc.sp());
        EXPECT(0xb30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb30b));
        EXPECT(0x5e, gbc.readMem(0xb30c));
        EXPECT(0xd8, gbc.readMem(0xe9dd));
        // CB 5E 02A4
        gbc.setState(0x3366, 0x505c, 0x46e0, 0x1dd3, 0xe92b, 0x6f43, 0x0, 0x1);
        gbc.writeMem(0x3366, { 0xcb, 0x5e });
        gbc.writeMem(0x6f43, { 0x1d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x505c, gbc.sp());
        EXPECT(0x3368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 02A5
        gbc.setState(0x51d, 0x63a4, 0x4820, 0x915c, 0xd8bc, 0xffba, 0x1, 0x1);
        gbc.writeMem(0x51d, { 0xcb, 0x5e });
        gbc.writeMem(0xffba, { 0x88 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x63a4, gbc.sp());
        EXPECT(0x51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xffba));
        // CB 5E 02A6
        gbc.setState(0xca5f, 0x81ff, 0xa460, 0xce80, 0xc78f, 0x10c5, 0x0, 0x1);
        gbc.writeMem(0x10c5, { 0x14 });
        gbc.writeMem(0xca5f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x81ff, gbc.sp());
        EXPECT(0xca61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca5f));
        EXPECT(0x5e, gbc.readMem(0xca60));
        // CB 5E 02A7
        gbc.setState(0xa441, 0x9be, 0x6ec0, 0x64c6, 0x2b0b, 0xebc4, 0x0, 0x1);
        gbc.writeMem(0xa441, { 0xcb, 0x5e });
        gbc.writeMem(0xebc4, { 0xc7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9be, gbc.sp());
        EXPECT(0xa443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa441));
        EXPECT(0x5e, gbc.readMem(0xa442));
        EXPECT(0xc7, gbc.readMem(0xebc4));
        // CB 5E 02A8
        gbc.setState(0x7ac3, 0x3dd3, 0xc950, 0xe2df, 0x3c1f, 0xc919, 0x0, 0x1);
        gbc.writeMem(0x7ac3, { 0xcb, 0x5e });
        gbc.writeMem(0xc919, { 0x17 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3dd3, gbc.sp());
        EXPECT(0x7ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xc919));
        // CB 5E 02A9
        gbc.setState(0x14ab, 0x2628, 0x6080, 0xe9d0, 0x989e, 0x1cef, 0x1, 0x0);
        gbc.writeMem(0x14ab, { 0xcb, 0x5e });
        gbc.writeMem(0x1cef, { 0x68 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2628, gbc.sp());
        EXPECT(0x14ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 02AA
        gbc.setState(0x2af7, 0xec7e, 0xb7b0, 0xbaa, 0x637d, 0x9064, 0x1, 0x0);
        gbc.writeMem(0x2af7, { 0xcb, 0x5e });
        gbc.writeMem(0x9064, { 0xd4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xec7e, gbc.sp());
        EXPECT(0x2af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9064));
        // CB 5E 02AB
        gbc.setState(0x6e9e, 0x895a, 0xc800, 0x1729, 0xf852, 0xe753, 0x0, 0x1);
        gbc.writeMem(0x6e9e, { 0xcb, 0x5e });
        gbc.writeMem(0xe753, { 0xaf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x895a, gbc.sp());
        EXPECT(0x6ea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xe753));
        // CB 5E 02AC
        gbc.setState(0xd45a, 0x89cc, 0x3a20, 0x6899, 0x358e, 0x6e3a, 0x1, 0x1);
        gbc.writeMem(0x6e3a, { 0xa0 });
        gbc.writeMem(0xd45a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x89cc, gbc.sp());
        EXPECT(0xd45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd45a));
        EXPECT(0x5e, gbc.readMem(0xd45b));
        // CB 5E 02AD
        gbc.setState(0xeb0a, 0x8e86, 0x9530, 0x933, 0x4860, 0xb8b4, 0x0, 0x0);
        gbc.writeMem(0xb8b4, { 0x9a });
        gbc.writeMem(0xeb0a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8e86, gbc.sp());
        EXPECT(0xeb0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb8b4));
        EXPECT(0xcb, gbc.readMem(0xeb0a));
        EXPECT(0x5e, gbc.readMem(0xeb0b));
        // CB 5E 02AE
        gbc.setState(0xd3f8, 0xbce0, 0x3000, 0x78c4, 0xbb9c, 0xf8fa, 0x0, 0x1);
        gbc.writeMem(0xd3f8, { 0xcb, 0x5e });
        gbc.writeMem(0xf8fa, { 0xa5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbce0, gbc.sp());
        EXPECT(0xd3fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f8));
        EXPECT(0x5e, gbc.readMem(0xd3f9));
        EXPECT(0xa5, gbc.readMem(0xf8fa));
        // CB 5E 02AF
        gbc.setState(0xcd62, 0x7586, 0x8e20, 0x79f6, 0x310a, 0xd31f, 0x0, 0x0);
        gbc.writeMem(0xcd62, { 0xcb, 0x5e });
        gbc.writeMem(0xd31f, { 0x21 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7586, gbc.sp());
        EXPECT(0xcd64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd62));
        EXPECT(0x5e, gbc.readMem(0xcd63));
        EXPECT(0x21, gbc.readMem(0xd31f));
        // CB 5E 02B0
        gbc.setState(0xbd8, 0xc846, 0xeac0, 0x948a, 0x767e, 0x779f, 0x0, 0x0);
        gbc.writeMem(0xbd8, { 0xcb, 0x5e });
        gbc.writeMem(0x779f, { 0x83 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc846, gbc.sp());
        EXPECT(0xbda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 02B1
        gbc.setState(0x1446, 0xb358, 0x43a0, 0x97d7, 0xf622, 0xcdf4, 0x1, 0x1);
        gbc.writeMem(0x1446, { 0xcb, 0x5e });
        gbc.writeMem(0xcdf4, { 0x2f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb358, gbc.sp());
        EXPECT(0x1448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcdf4));
        // CB 5E 02B2
        gbc.setState(0x72a1, 0xd640, 0x4380, 0x2e7, 0x68ce, 0x1a6e, 0x0, 0x0);
        gbc.writeMem(0x1a6e, { 0xc1 });
        gbc.writeMem(0x72a1, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd640, gbc.sp());
        EXPECT(0x72a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 02B3
        gbc.setState(0x4751, 0xc4cf, 0x4d60, 0x604c, 0xefdd, 0xe2bf, 0x1, 0x1);
        gbc.writeMem(0x4751, { 0xcb, 0x5e });
        gbc.writeMem(0xe2bf, { 0x28 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc4cf, gbc.sp());
        EXPECT(0x4753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xe2bf));
        // CB 5E 02B4
        gbc.setState(0xba3, 0xab61, 0x5d30, 0xf778, 0x299c, 0x8119, 0x0, 0x0);
        gbc.writeMem(0xba3, { 0xcb, 0x5e });
        gbc.writeMem(0x8119, { 0xab });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xab61, gbc.sp());
        EXPECT(0xba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x8119));
        // CB 5E 02B5
        gbc.setState(0x227a, 0xd6f1, 0xde30, 0xc000, 0xba5, 0x572d, 0x0, 0x1);
        gbc.writeMem(0x227a, { 0xcb, 0x5e });
        gbc.writeMem(0x572d, { 0x52 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd6f1, gbc.sp());
        EXPECT(0x227c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02B6
        gbc.setState(0xceb4, 0xc8c4, 0xb550, 0x9eed, 0x1433, 0xd9c1, 0x1, 0x1);
        gbc.writeMem(0xceb4, { 0xcb, 0x5e });
        gbc.writeMem(0xd9c1, { 0x2c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc8c4, gbc.sp());
        EXPECT(0xceb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb4));
        EXPECT(0x5e, gbc.readMem(0xceb5));
        EXPECT(0x2c, gbc.readMem(0xd9c1));
        // CB 5E 02B7
        gbc.setState(0x5b92, 0x68bf, 0x6100, 0xf402, 0x2208, 0xb8d9, 0x1, 0x1);
        gbc.writeMem(0x5b92, { 0xcb, 0x5e });
        gbc.writeMem(0xb8d9, { 0xcd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x68bf, gbc.sp());
        EXPECT(0x5b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xb8d9));
        // CB 5E 02B8
        gbc.setState(0xed3c, 0x6fc3, 0xf480, 0x9ed7, 0xe526, 0xb6c2, 0x0, 0x0);
        gbc.writeMem(0xb6c2, { 0xde });
        gbc.writeMem(0xed3c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6fc3, gbc.sp());
        EXPECT(0xed3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xb6c2));
        EXPECT(0xcb, gbc.readMem(0xed3c));
        EXPECT(0x5e, gbc.readMem(0xed3d));
        // CB 5E 02B9
        gbc.setState(0x7568, 0xf84f, 0x6770, 0xa658, 0x87c5, 0x4d34, 0x0, 0x0);
        gbc.writeMem(0x4d34, { 0x21 });
        gbc.writeMem(0x7568, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf84f, gbc.sp());
        EXPECT(0x756a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02BA
        gbc.setState(0xaa0d, 0xef9, 0x8830, 0x2e3b, 0xf220, 0x8b4d, 0x0, 0x0);
        gbc.writeMem(0x8b4d, { 0xe7 });
        gbc.writeMem(0xaa0d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xef9, gbc.sp());
        EXPECT(0xaa0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8b4d));
        EXPECT(0xcb, gbc.readMem(0xaa0d));
        EXPECT(0x5e, gbc.readMem(0xaa0e));
        // CB 5E 02BB
        gbc.setState(0x9b34, 0x1035, 0x6b20, 0x6ad6, 0x9f44, 0xb1d, 0x1, 0x1);
        gbc.writeMem(0xb1d, { 0xdf });
        gbc.writeMem(0x9b34, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1035, gbc.sp());
        EXPECT(0x9b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b34));
        EXPECT(0x5e, gbc.readMem(0x9b35));
        // CB 5E 02BC
        gbc.setState(0x2358, 0x46b8, 0x2530, 0xbf22, 0x6cf, 0xa5f3, 0x0, 0x1);
        gbc.writeMem(0x2358, { 0xcb, 0x5e });
        gbc.writeMem(0xa5f3, { 0xcc });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x46b8, gbc.sp());
        EXPECT(0x235a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xa5f3));
        // CB 5E 02BD
        gbc.setState(0xec3c, 0x4d5a, 0x8e20, 0x22a4, 0x298d, 0x86fc, 0x1, 0x0);
        gbc.writeMem(0x86fc, { 0x52 });
        gbc.writeMem(0xec3c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4d5a, gbc.sp());
        EXPECT(0xec3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x86fc));
        EXPECT(0xcb, gbc.readMem(0xec3c));
        EXPECT(0x5e, gbc.readMem(0xec3d));
        // CB 5E 02BE
        gbc.setState(0xc32e, 0xd817, 0xdeb0, 0x6219, 0xaeb9, 0x3445, 0x1, 0x1);
        gbc.writeMem(0x3445, { 0xe4 });
        gbc.writeMem(0xc32e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd817, gbc.sp());
        EXPECT(0xc330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32e));
        EXPECT(0x5e, gbc.readMem(0xc32f));
        // CB 5E 02BF
        gbc.setState(0x60fb, 0x6021, 0xa6c0, 0x287e, 0xabd2, 0x5794, 0x0, 0x0);
        gbc.writeMem(0x5794, { 0x43 });
        gbc.writeMem(0x60fb, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6021, gbc.sp());
        EXPECT(0x60fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 02C0
        gbc.setState(0xce5c, 0xfbdc, 0x5c40, 0xf73b, 0x5f11, 0xd3e6, 0x1, 0x0);
        gbc.writeMem(0xce5c, { 0xcb, 0x5e });
        gbc.writeMem(0xd3e6, { 0xd0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfbdc, gbc.sp());
        EXPECT(0xce5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce5c));
        EXPECT(0x5e, gbc.readMem(0xce5d));
        EXPECT(0xd0, gbc.readMem(0xd3e6));
        // CB 5E 02C1
        gbc.setState(0xeb07, 0x5f68, 0xceb0, 0x98be, 0xa976, 0x6baa, 0x0, 0x0);
        gbc.writeMem(0x6baa, { 0x46 });
        gbc.writeMem(0xeb07, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5f68, gbc.sp());
        EXPECT(0xeb09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb07));
        EXPECT(0x5e, gbc.readMem(0xeb08));
        // CB 5E 02C3
        gbc.setState(0x138d, 0x5c0d, 0xc7f0, 0x2f77, 0x2f97, 0x56b6, 0x0, 0x1);
        gbc.writeMem(0x138d, { 0xcb, 0x5e });
        gbc.writeMem(0x56b6, { 0x83 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5c0d, gbc.sp());
        EXPECT(0x138f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02C4
        gbc.setState(0x21f8, 0xa852, 0xb3d0, 0xf921, 0xff6, 0x152b, 0x0, 0x0);
        gbc.writeMem(0x152b, { 0x2d });
        gbc.writeMem(0x21f8, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa852, gbc.sp());
        EXPECT(0x21fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02C5
        gbc.setState(0x769c, 0x3333, 0xc0d0, 0xba8a, 0xa221, 0xa9cd, 0x1, 0x0);
        gbc.writeMem(0x769c, { 0xcb, 0x5e });
        gbc.writeMem(0xa9cd, { 0x15 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3333, gbc.sp());
        EXPECT(0x769e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa9cd));
        // CB 5E 02C6
        gbc.setState(0x303e, 0xc601, 0x2e10, 0xbf6, 0xf8fe, 0xa5e6, 0x0, 0x1);
        gbc.writeMem(0x303e, { 0xcb, 0x5e });
        gbc.writeMem(0xa5e6, { 0x49 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc601, gbc.sp());
        EXPECT(0x3040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa5e6));
        // CB 5E 02C7
        gbc.setState(0x68e6, 0x7568, 0x8070, 0xfb1b, 0xa261, 0x420e, 0x0, 0x1);
        gbc.writeMem(0x420e, { 0x1a });
        gbc.writeMem(0x68e6, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7568, gbc.sp());
        EXPECT(0x68e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02C8
        gbc.setState(0x53ae, 0x6878, 0x6c90, 0xf38d, 0xc3b6, 0xe636, 0x1, 0x0);
        gbc.writeMem(0x53ae, { 0xcb, 0x5e });
        gbc.writeMem(0xe636, { 0xc9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6878, gbc.sp());
        EXPECT(0x53b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe636));
        // CB 5E 02C9
        gbc.setState(0x1fc8, 0xd09b, 0x520, 0x8ab3, 0xa7b3, 0xc5fb, 0x0, 0x0);
        gbc.writeMem(0x1fc8, { 0xcb, 0x5e });
        gbc.writeMem(0xc5fb, { 0x4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd09b, gbc.sp());
        EXPECT(0x1fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc5fb));
        // CB 5E 02CA
        gbc.setState(0x212d, 0x18e1, 0x4a00, 0x8af6, 0x12cd, 0x3403, 0x0, 0x0);
        gbc.writeMem(0x212d, { 0xcb, 0x5e });
        gbc.writeMem(0x3403, { 0x6 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x18e1, gbc.sp());
        EXPECT(0x212f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 02CB
        gbc.setState(0x2592, 0xa59f, 0x4ff0, 0x65ec, 0x8e83, 0x4460, 0x1, 0x0);
        gbc.writeMem(0x2592, { 0xcb, 0x5e });
        gbc.writeMem(0x4460, { 0x37 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa59f, gbc.sp());
        EXPECT(0x2594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02CC
        gbc.setState(0x45b0, 0xe8b4, 0xd340, 0xe72d, 0x889b, 0x1a3c, 0x0, 0x0);
        gbc.writeMem(0x1a3c, { 0xae });
        gbc.writeMem(0x45b0, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe8b4, gbc.sp());
        EXPECT(0x45b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 02CD
        gbc.setState(0xd4cb, 0xd30c, 0x6010, 0xda78, 0x6c39, 0x1c8c, 0x0, 0x0);
        gbc.writeMem(0x1c8c, { 0x24 });
        gbc.writeMem(0xd4cb, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd30c, gbc.sp());
        EXPECT(0xd4cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4cb));
        EXPECT(0x5e, gbc.readMem(0xd4cc));
        // CB 5E 02CF
        gbc.setState(0x5d7e, 0x18c3, 0x37d0, 0x28a, 0x8939, 0xbbaa, 0x1, 0x0);
        gbc.writeMem(0x5d7e, { 0xcb, 0x5e });
        gbc.writeMem(0xbbaa, { 0x4d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x18c3, gbc.sp());
        EXPECT(0x5d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbbaa));
        // CB 5E 02D0
        gbc.setState(0x6c40, 0xd6ef, 0x2f40, 0x11df, 0x36a, 0x6847, 0x0, 0x0);
        gbc.writeMem(0x6847, { 0x1b });
        gbc.writeMem(0x6c40, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd6ef, gbc.sp());
        EXPECT(0x6c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 02D1
        gbc.setState(0x3306, 0x2167, 0xa0a0, 0xd84f, 0x645d, 0x3bbc, 0x1, 0x1);
        gbc.writeMem(0x3306, { 0xcb, 0x5e });
        gbc.writeMem(0x3bbc, { 0x4a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2167, gbc.sp());
        EXPECT(0x3308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 02D2
        gbc.setState(0x8a68, 0x7a50, 0xe560, 0x882, 0x9619, 0x6340, 0x0, 0x0);
        gbc.writeMem(0x6340, { 0x92 });
        gbc.writeMem(0x8a68, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7a50, gbc.sp());
        EXPECT(0x8a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a68));
        EXPECT(0x5e, gbc.readMem(0x8a69));
        // CB 5E 02D3
        gbc.setState(0x5689, 0x3604, 0x2a30, 0x1982, 0x794, 0xbb08, 0x1, 0x1);
        gbc.writeMem(0x5689, { 0xcb, 0x5e });
        gbc.writeMem(0xbb08, { 0x7f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3604, gbc.sp());
        EXPECT(0x568b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xbb08));
        // CB 5E 02D4
        gbc.setState(0x769d, 0x4c5b, 0x9f00, 0x403f, 0xd2, 0x77b8, 0x0, 0x0);
        gbc.writeMem(0x769d, { 0xcb, 0x5e });
        gbc.writeMem(0x77b8, { 0x75 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4c5b, gbc.sp());
        EXPECT(0x769f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 02D5
        gbc.setState(0x20f6, 0xbfda, 0xf8b0, 0x4c6e, 0xf067, 0x6dd0, 0x0, 0x0);
        gbc.writeMem(0x20f6, { 0xcb, 0x5e });
        gbc.writeMem(0x6dd0, { 0xa9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbfda, gbc.sp());
        EXPECT(0x20f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02D6
        gbc.setState(0x67db, 0xc51d, 0xb390, 0xf852, 0x73ac, 0xb0cc, 0x1, 0x1);
        gbc.writeMem(0x67db, { 0xcb, 0x5e });
        gbc.writeMem(0xb0cc, { 0x2e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc51d, gbc.sp());
        EXPECT(0x67dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb0cc));
        // CB 5E 02D7
        gbc.setState(0x7814, 0x3985, 0xf370, 0x9793, 0x9022, 0x7be, 0x1, 0x1);
        gbc.writeMem(0x7be, { 0x4b });
        gbc.writeMem(0x7814, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3985, gbc.sp());
        EXPECT(0x7816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02D9
        gbc.setState(0xb376, 0x52f4, 0xf9e0, 0x18c6, 0xfae4, 0x298a, 0x1, 0x1);
        gbc.writeMem(0x298a, { 0x5c });
        gbc.writeMem(0xb376, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x52f4, gbc.sp());
        EXPECT(0xb378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb376));
        EXPECT(0x5e, gbc.readMem(0xb377));
        // CB 5E 02DA
        gbc.setState(0xea6c, 0x9dcb, 0xa3a0, 0xeb35, 0xfa51, 0xe061, 0x0, 0x0);
        gbc.writeMem(0xe061, { 0xd1 });
        gbc.writeMem(0xea6c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9dcb, gbc.sp());
        EXPECT(0xea6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xe061));
        EXPECT(0xcb, gbc.readMem(0xea6c));
        EXPECT(0x5e, gbc.readMem(0xea6d));
        // CB 5E 02DB
        gbc.setState(0x2e5d, 0x4002, 0x86d0, 0xab70, 0x5ad6, 0x3c6c, 0x1, 0x1);
        gbc.writeMem(0x2e5d, { 0xcb, 0x5e });
        gbc.writeMem(0x3c6c, { 0x61 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4002, gbc.sp());
        EXPECT(0x2e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02DC
        gbc.setState(0x3031, 0x6245, 0x3070, 0x5631, 0x9c58, 0x66d1, 0x0, 0x1);
        gbc.writeMem(0x3031, { 0xcb, 0x5e });
        gbc.writeMem(0x66d1, { 0x12 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6245, gbc.sp());
        EXPECT(0x3033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02DD
        gbc.setState(0xc7b4, 0x366a, 0xf780, 0x8841, 0xa51b, 0x8aea, 0x1, 0x0);
        gbc.writeMem(0x8aea, { 0x6b });
        gbc.writeMem(0xc7b4, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x366a, gbc.sp());
        EXPECT(0xc7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x8aea));
        EXPECT(0xcb, gbc.readMem(0xc7b4));
        EXPECT(0x5e, gbc.readMem(0xc7b5));
        // CB 5E 02DE
        gbc.setState(0xb326, 0x3dcc, 0xe920, 0x9069, 0x4103, 0x2da9, 0x0, 0x1);
        gbc.writeMem(0x2da9, { 0x15 });
        gbc.writeMem(0xb326, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3dcc, gbc.sp());
        EXPECT(0xb328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb326));
        EXPECT(0x5e, gbc.readMem(0xb327));
        // CB 5E 02DF
        gbc.setState(0xbcba, 0x418d, 0xab70, 0xa2e7, 0x46f8, 0x6a7f, 0x1, 0x0);
        gbc.writeMem(0x6a7f, { 0x1f });
        gbc.writeMem(0xbcba, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x418d, gbc.sp());
        EXPECT(0xbcbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcba));
        EXPECT(0x5e, gbc.readMem(0xbcbb));
        // CB 5E 02E0
        gbc.setState(0x1866, 0x41b7, 0xa50, 0x550b, 0x56a6, 0x7cb7, 0x0, 0x1);
        gbc.writeMem(0x1866, { 0xcb, 0x5e });
        gbc.writeMem(0x7cb7, { 0x28 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x41b7, gbc.sp());
        EXPECT(0x1868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02E1
        gbc.setState(0xa466, 0x1d87, 0x8700, 0x8138, 0xc440, 0xbbc5, 0x1, 0x1);
        gbc.writeMem(0xa466, { 0xcb, 0x5e });
        gbc.writeMem(0xbbc5, { 0x34 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1d87, gbc.sp());
        EXPECT(0xa468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa466));
        EXPECT(0x5e, gbc.readMem(0xa467));
        EXPECT(0x34, gbc.readMem(0xbbc5));
        // CB 5E 02E2
        gbc.setState(0x53aa, 0xb239, 0xe520, 0xf413, 0x42e9, 0x916e, 0x0, 0x0);
        gbc.writeMem(0x53aa, { 0xcb, 0x5e });
        gbc.writeMem(0x916e, { 0xc7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb239, gbc.sp());
        EXPECT(0x53ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x916e));
        // CB 5E 02E3
        gbc.setState(0x8002, 0xe0b5, 0x77f0, 0xb791, 0x9051, 0xcdd8, 0x1, 0x1);
        gbc.writeMem(0x8002, { 0xcb, 0x5e });
        gbc.writeMem(0xcdd8, { 0x1a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe0b5, gbc.sp());
        EXPECT(0x8004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8002));
        EXPECT(0x5e, gbc.readMem(0x8003));
        EXPECT(0x1a, gbc.readMem(0xcdd8));
        // CB 5E 02E4
        gbc.setState(0x7a15, 0x2503, 0x8870, 0x8964, 0x9355, 0x5a24, 0x1, 0x0);
        gbc.writeMem(0x5a24, { 0x2b });
        gbc.writeMem(0x7a15, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2503, gbc.sp());
        EXPECT(0x7a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02E5
        gbc.setState(0x24e2, 0xa8c8, 0xb210, 0x45c7, 0x4f13, 0xefd2, 0x0, 0x0);
        gbc.writeMem(0x24e2, { 0xcb, 0x5e });
        gbc.writeMem(0xefd2, { 0x8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa8c8, gbc.sp());
        EXPECT(0x24e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xefd2));
        // CB 5E 02E6
        gbc.setState(0xb0f5, 0xa069, 0x7270, 0xbf2d, 0xdd41, 0x2901, 0x0, 0x1);
        gbc.writeMem(0x2901, { 0xe0 });
        gbc.writeMem(0xb0f5, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa069, gbc.sp());
        EXPECT(0xb0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f5));
        EXPECT(0x5e, gbc.readMem(0xb0f6));
        // CB 5E 02E7
        gbc.setState(0x4489, 0x19cd, 0x4400, 0xe0b5, 0x140d, 0x28bf, 0x0, 0x1);
        gbc.writeMem(0x28bf, { 0x76 });
        gbc.writeMem(0x4489, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x19cd, gbc.sp());
        EXPECT(0x448b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 02E8
        gbc.setState(0x2b12, 0x3f5a, 0xe470, 0x2d0e, 0x6b28, 0x3d01, 0x0, 0x0);
        gbc.writeMem(0x2b12, { 0xcb, 0x5e });
        gbc.writeMem(0x3d01, { 0x31 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3f5a, gbc.sp());
        EXPECT(0x2b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02E9
        gbc.setState(0x3efa, 0x2411, 0xf790, 0xb96a, 0x99c, 0xbdab, 0x1, 0x1);
        gbc.writeMem(0x3efa, { 0xcb, 0x5e });
        gbc.writeMem(0xbdab, { 0x2c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2411, gbc.sp());
        EXPECT(0x3efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbdab));
        // CB 5E 02EA
        gbc.setState(0xae5f, 0x5d5f, 0xbec0, 0xe1f7, 0x6071, 0x18de, 0x1, 0x1);
        gbc.writeMem(0x18de, { 0xd0 });
        gbc.writeMem(0xae5f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5d5f, gbc.sp());
        EXPECT(0xae61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae5f));
        EXPECT(0x5e, gbc.readMem(0xae60));
        // CB 5E 02EB
        gbc.setState(0x905a, 0xda66, 0x20c0, 0x3cfb, 0xef73, 0x4339, 0x1, 0x0);
        gbc.writeMem(0x4339, { 0xfb });
        gbc.writeMem(0x905a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xda66, gbc.sp());
        EXPECT(0x905c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905a));
        EXPECT(0x5e, gbc.readMem(0x905b));
        // CB 5E 02EC
        gbc.setState(0x3ca1, 0x6743, 0xee70, 0x739a, 0xd951, 0x39f7, 0x0, 0x1);
        gbc.writeMem(0x39f7, { 0x24 });
        gbc.writeMem(0x3ca1, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6743, gbc.sp());
        EXPECT(0x3ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02ED
        gbc.setState(0x8ecb, 0x7f0b, 0x5150, 0x3c69, 0x4cce, 0xc918, 0x0, 0x0);
        gbc.writeMem(0x8ecb, { 0xcb, 0x5e });
        gbc.writeMem(0xc918, { 0x3b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7f0b, gbc.sp());
        EXPECT(0x8ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ecb));
        EXPECT(0x5e, gbc.readMem(0x8ecc));
        EXPECT(0x3b, gbc.readMem(0xc918));
        // CB 5E 02EE
        gbc.setState(0x9fd0, 0xa326, 0xb640, 0x2ddc, 0x2c8a, 0x4417, 0x1, 0x0);
        gbc.writeMem(0x4417, { 0xf6 });
        gbc.writeMem(0x9fd0, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa326, gbc.sp());
        EXPECT(0x9fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd0));
        EXPECT(0x5e, gbc.readMem(0x9fd1));
        // CB 5E 02F0
        gbc.setState(0xab9, 0xb6, 0x2370, 0x8577, 0xf8dc, 0x35fe, 0x1, 0x1);
        gbc.writeMem(0xab9, { 0xcb, 0x5e });
        gbc.writeMem(0x35fe, { 0x32 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb6, gbc.sp());
        EXPECT(0xabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02F1
        gbc.setState(0x126c, 0xf1c9, 0x2750, 0x62a, 0x1b2d, 0xae1d, 0x0, 0x1);
        gbc.writeMem(0x126c, { 0xcb, 0x5e });
        gbc.writeMem(0xae1d, { 0xe9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf1c9, gbc.sp());
        EXPECT(0x126e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xae1d));
        // CB 5E 02F3
        gbc.setState(0xec08, 0x8de0, 0x5a00, 0x1caa, 0x32b3, 0x15a3, 0x1, 0x0);
        gbc.writeMem(0x15a3, { 0xaa });
        gbc.writeMem(0xec08, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8de0, gbc.sp());
        EXPECT(0xec0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec08));
        EXPECT(0x5e, gbc.readMem(0xec09));
        // CB 5E 02F4
        gbc.setState(0xba34, 0x2ece, 0x1e60, 0x9348, 0x1cdb, 0xce15, 0x0, 0x0);
        gbc.writeMem(0xba34, { 0xcb, 0x5e });
        gbc.writeMem(0xce15, { 0xb0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2ece, gbc.sp());
        EXPECT(0xba36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba34));
        EXPECT(0x5e, gbc.readMem(0xba35));
        EXPECT(0xb0, gbc.readMem(0xce15));
        // CB 5E 02F5
        gbc.setState(0x7257, 0x43d1, 0xe030, 0x9e4c, 0x62b1, 0x3a24, 0x1, 0x1);
        gbc.writeMem(0x3a24, { 0x3d });
        gbc.writeMem(0x7257, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x43d1, gbc.sp());
        EXPECT(0x7259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02F6
        gbc.setState(0x49f9, 0x7941, 0x9d30, 0x66d1, 0xa4d9, 0x6a15, 0x1, 0x0);
        gbc.writeMem(0x49f9, { 0xcb, 0x5e });
        gbc.writeMem(0x6a15, { 0x6 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7941, gbc.sp());
        EXPECT(0x49fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02F7
        gbc.setState(0x4bdf, 0x5e5, 0xa1b0, 0xbbd0, 0xc905, 0x4513, 0x1, 0x1);
        gbc.writeMem(0x4513, { 0xb9 });
        gbc.writeMem(0x4bdf, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5e5, gbc.sp());
        EXPECT(0x4be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 02F8
        gbc.setState(0x6630, 0xb1c6, 0xe50, 0x9f28, 0x27e9, 0xf0a9, 0x1, 0x1);
        gbc.writeMem(0x6630, { 0xcb, 0x5e });
        gbc.writeMem(0xf0a9, { 0x4c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb1c6, gbc.sp());
        EXPECT(0x6632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xf0a9));
        // CB 5E 02F9
        gbc.setState(0x8597, 0xd1b8, 0xfc50, 0xe01c, 0xf03a, 0x25e2, 0x0, 0x0);
        gbc.writeMem(0x25e2, { 0x7 });
        gbc.writeMem(0x8597, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd1b8, gbc.sp());
        EXPECT(0x8599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8597));
        EXPECT(0x5e, gbc.readMem(0x8598));
        // CB 5E 02FA
        gbc.setState(0xbcbf, 0x52e9, 0x9b00, 0x6110, 0x340d, 0xa06f, 0x1, 0x0);
        gbc.writeMem(0xa06f, { 0x3e });
        gbc.writeMem(0xbcbf, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x52e9, gbc.sp());
        EXPECT(0xbcc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa06f));
        EXPECT(0xcb, gbc.readMem(0xbcbf));
        EXPECT(0x5e, gbc.readMem(0xbcc0));
        // CB 5E 02FB
        gbc.setState(0xb22b, 0x107d, 0xf130, 0x6cf3, 0x3824, 0xee8e, 0x0, 0x1);
        gbc.writeMem(0xb22b, { 0xcb, 0x5e });
        gbc.writeMem(0xee8e, { 0x90 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x107d, gbc.sp());
        EXPECT(0xb22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb22b));
        EXPECT(0x5e, gbc.readMem(0xb22c));
        EXPECT(0x90, gbc.readMem(0xee8e));
        // CB 5E 02FC
        gbc.setState(0x3bfb, 0xb021, 0x3bb0, 0xaf7d, 0xa895, 0xf2ab, 0x1, 0x0);
        gbc.writeMem(0x3bfb, { 0xcb, 0x5e });
        gbc.writeMem(0xf2ab, { 0x9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb021, gbc.sp());
        EXPECT(0x3bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xf2ab));
        // CB 5E 02FD
        gbc.setState(0x1f3c, 0xcfff, 0x4bd0, 0xbef2, 0x2d9d, 0xe20c, 0x1, 0x1);
        gbc.writeMem(0x1f3c, { 0xcb, 0x5e });
        gbc.writeMem(0xe20c, { 0x84 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xcfff, gbc.sp());
        EXPECT(0x1f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xe20c));
        // CB 5E 02FE
        gbc.setState(0x1e06, 0x1239, 0x5b00, 0x57, 0x90df, 0x2643, 0x0, 0x0);
        gbc.writeMem(0x1e06, { 0xcb, 0x5e });
        gbc.writeMem(0x2643, { 0xb4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1239, gbc.sp());
        EXPECT(0x1e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 02FF
        gbc.setState(0x1de6, 0x4861, 0x1cd0, 0x5142, 0xbdd7, 0xc7ad, 0x0, 0x0);
        gbc.writeMem(0x1de6, { 0xcb, 0x5e });
        gbc.writeMem(0xc7ad, { 0xba });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4861, gbc.sp());
        EXPECT(0x1de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xc7ad));
        // CB 5E 0300
        gbc.setState(0x32b2, 0x4908, 0x1f30, 0xcc55, 0x8bb6, 0xc01c, 0x0, 0x0);
        gbc.writeMem(0x32b2, { 0xcb, 0x5e });
        gbc.writeMem(0xc01c, { 0xce });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4908, gbc.sp());
        EXPECT(0x32b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xc01c));
        // CB 5E 0301
        gbc.setState(0xde55, 0xf1d4, 0xcbe0, 0xb853, 0x33f, 0x5a06, 0x0, 0x0);
        gbc.writeMem(0x5a06, { 0xa3 });
        gbc.writeMem(0xde55, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf1d4, gbc.sp());
        EXPECT(0xde57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde55));
        EXPECT(0x5e, gbc.readMem(0xde56));
        // CB 5E 0302
        gbc.setState(0x44c3, 0x4d8b, 0xac70, 0xdc07, 0x2e6c, 0xaa9c, 0x1, 0x0);
        gbc.writeMem(0x44c3, { 0xcb, 0x5e });
        gbc.writeMem(0xaa9c, { 0xec });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4d8b, gbc.sp());
        EXPECT(0x44c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xaa9c));
        // CB 5E 0303
        gbc.setState(0x49d8, 0xed62, 0xd50, 0x5528, 0x500e, 0x30a3, 0x1, 0x1);
        gbc.writeMem(0x30a3, { 0x9 });
        gbc.writeMem(0x49d8, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xed62, gbc.sp());
        EXPECT(0x49da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0304
        gbc.setState(0x4682, 0xa2ef, 0xf740, 0x85ae, 0xa84b, 0x906, 0x0, 0x0);
        gbc.writeMem(0x906, { 0xe9 });
        gbc.writeMem(0x4682, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa2ef, gbc.sp());
        EXPECT(0x4684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0305
        gbc.setState(0xb74b, 0x9a98, 0x4670, 0x5022, 0xb1a8, 0xc20e, 0x0, 0x1);
        gbc.writeMem(0xb74b, { 0xcb, 0x5e });
        gbc.writeMem(0xc20e, { 0x33 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9a98, gbc.sp());
        EXPECT(0xb74d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb74b));
        EXPECT(0x5e, gbc.readMem(0xb74c));
        EXPECT(0x33, gbc.readMem(0xc20e));
        // CB 5E 0306
        gbc.setState(0x46b6, 0x1285, 0x2560, 0xe3a5, 0xe115, 0x5dca, 0x1, 0x0);
        gbc.writeMem(0x46b6, { 0xcb, 0x5e });
        gbc.writeMem(0x5dca, { 0xbc });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1285, gbc.sp());
        EXPECT(0x46b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0307
        gbc.setState(0xed9e, 0xe1a, 0x9ef0, 0xee64, 0xdb0f, 0xb588, 0x1, 0x0);
        gbc.writeMem(0xb588, { 0x85 });
        gbc.writeMem(0xed9e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe1a, gbc.sp());
        EXPECT(0xeda0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb588));
        EXPECT(0xcb, gbc.readMem(0xed9e));
        EXPECT(0x5e, gbc.readMem(0xed9f));
        // CB 5E 0308
        gbc.setState(0xcfd5, 0x5a3d, 0x4490, 0xf734, 0x1a53, 0x8d36, 0x0, 0x1);
        gbc.writeMem(0x8d36, { 0xb6 });
        gbc.writeMem(0xcfd5, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5a3d, gbc.sp());
        EXPECT(0xcfd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8d36));
        EXPECT(0xcb, gbc.readMem(0xcfd5));
        EXPECT(0x5e, gbc.readMem(0xcfd6));
        // CB 5E 0309
        gbc.setState(0xef2, 0x8efd, 0xf480, 0x62f9, 0xa672, 0xb6fd, 0x1, 0x1);
        gbc.writeMem(0xef2, { 0xcb, 0x5e });
        gbc.writeMem(0xb6fd, { 0x19 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8efd, gbc.sp());
        EXPECT(0xef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb6fd));
        // CB 5E 030A
        gbc.setState(0x6cd1, 0xc98a, 0xadf0, 0x2200, 0x745a, 0x4f8c, 0x1, 0x1);
        gbc.writeMem(0x4f8c, { 0x82 });
        gbc.writeMem(0x6cd1, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc98a, gbc.sp());
        EXPECT(0x6cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 030B
        gbc.setState(0x9c0a, 0xab86, 0xa330, 0x7039, 0xbec5, 0x2f2c, 0x0, 0x0);
        gbc.writeMem(0x2f2c, { 0xa6 });
        gbc.writeMem(0x9c0a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xab86, gbc.sp());
        EXPECT(0x9c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c0a));
        EXPECT(0x5e, gbc.readMem(0x9c0b));
        // CB 5E 030C
        gbc.setState(0x6597, 0xb57e, 0x5f30, 0x419, 0x8774, 0xc99a, 0x0, 0x0);
        gbc.writeMem(0x6597, { 0xcb, 0x5e });
        gbc.writeMem(0xc99a, { 0x20 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb57e, gbc.sp());
        EXPECT(0x6599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc99a));
        // CB 5E 030D
        gbc.setState(0xa143, 0xb353, 0x8b30, 0x406f, 0xdc5b, 0xf460, 0x0, 0x1);
        gbc.writeMem(0xa143, { 0xcb, 0x5e });
        gbc.writeMem(0xf460, { 0xfd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb353, gbc.sp());
        EXPECT(0xa145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa143));
        EXPECT(0x5e, gbc.readMem(0xa144));
        EXPECT(0xfd, gbc.readMem(0xf460));
        // CB 5E 030E
        gbc.setState(0xd3ec, 0x94bb, 0x8180, 0x5140, 0x23f, 0xe592, 0x1, 0x0);
        gbc.writeMem(0xd3ec, { 0xcb, 0x5e });
        gbc.writeMem(0xe592, { 0xf5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x94bb, gbc.sp());
        EXPECT(0xd3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ec));
        EXPECT(0x5e, gbc.readMem(0xd3ed));
        EXPECT(0xf5, gbc.readMem(0xe592));
        // CB 5E 030F
        gbc.setState(0xc1a9, 0x1337, 0x89f0, 0xe503, 0x3c04, 0xf97b, 0x0, 0x0);
        gbc.writeMem(0xc1a9, { 0xcb, 0x5e });
        gbc.writeMem(0xf97b, { 0x96 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1337, gbc.sp());
        EXPECT(0xc1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a9));
        EXPECT(0x5e, gbc.readMem(0xc1aa));
        EXPECT(0x96, gbc.readMem(0xf97b));
        // CB 5E 0310
        gbc.setState(0x6971, 0x3624, 0x7f50, 0x980, 0x5564, 0xbe9d, 0x1, 0x0);
        gbc.writeMem(0x6971, { 0xcb, 0x5e });
        gbc.writeMem(0xbe9d, { 0x1a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3624, gbc.sp());
        EXPECT(0x6973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbe9d));
        // CB 5E 0311
        gbc.setState(0xc78d, 0x996c, 0x95f0, 0xc5e7, 0xab41, 0x18de, 0x1, 0x0);
        gbc.writeMem(0x18de, { 0xd0 });
        gbc.writeMem(0xc78d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x996c, gbc.sp());
        EXPECT(0xc78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78d));
        EXPECT(0x5e, gbc.readMem(0xc78e));
        // CB 5E 0312
        gbc.setState(0xc13d, 0x2052, 0xe350, 0x7f12, 0xd134, 0x186f, 0x1, 0x0);
        gbc.writeMem(0x186f, { 0x77 });
        gbc.writeMem(0xc13d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2052, gbc.sp());
        EXPECT(0xc13f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc13d));
        EXPECT(0x5e, gbc.readMem(0xc13e));
        // CB 5E 0313
        gbc.setState(0x8411, 0x3c7b, 0xbce0, 0x6b10, 0x360c, 0x2bca, 0x1, 0x0);
        gbc.writeMem(0x2bca, { 0x8e });
        gbc.writeMem(0x8411, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3c7b, gbc.sp());
        EXPECT(0x8413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8411));
        EXPECT(0x5e, gbc.readMem(0x8412));
        // CB 5E 0314
        gbc.setState(0x6c11, 0x319, 0x2140, 0x38cd, 0x60a7, 0xd9fe, 0x1, 0x0);
        gbc.writeMem(0x6c11, { 0xcb, 0x5e });
        gbc.writeMem(0xd9fe, { 0x8e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x319, gbc.sp());
        EXPECT(0x6c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xd9fe));
        // CB 5E 0315
        gbc.setState(0x56c6, 0xb66f, 0x11d0, 0x505e, 0x66b9, 0xcc1, 0x0, 0x0);
        gbc.writeMem(0xcc1, { 0xf });
        gbc.writeMem(0x56c6, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb66f, gbc.sp());
        EXPECT(0x56c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0316
        gbc.setState(0xeb62, 0x8290, 0x6f60, 0x5ae5, 0xc804, 0x1d35, 0x1, 0x1);
        gbc.writeMem(0x1d35, { 0x16 });
        gbc.writeMem(0xeb62, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8290, gbc.sp());
        EXPECT(0xeb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb62));
        EXPECT(0x5e, gbc.readMem(0xeb63));
        // CB 5E 0317
        gbc.setState(0xccfe, 0xb6e2, 0x7560, 0xceb2, 0x89fe, 0x4a8b, 0x1, 0x0);
        gbc.writeMem(0x4a8b, { 0xe5 });
        gbc.writeMem(0xccfe, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb6e2, gbc.sp());
        EXPECT(0xcd00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfe));
        EXPECT(0x5e, gbc.readMem(0xccff));
        // CB 5E 0318
        gbc.setState(0xc321, 0xbb37, 0x81e0, 0x7cb6, 0xdd33, 0xeb02, 0x1, 0x1);
        gbc.writeMem(0xc321, { 0xcb, 0x5e });
        gbc.writeMem(0xeb02, { 0xd7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbb37, gbc.sp());
        EXPECT(0xc323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc321));
        EXPECT(0x5e, gbc.readMem(0xc322));
        EXPECT(0xd7, gbc.readMem(0xeb02));
        // CB 5E 0319
        gbc.setState(0x201b, 0x282c, 0xad90, 0x9ada, 0x4e3f, 0x2ab0, 0x0, 0x1);
        gbc.writeMem(0x201b, { 0xcb, 0x5e });
        gbc.writeMem(0x2ab0, { 0xb8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x282c, gbc.sp());
        EXPECT(0x201d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 031A
        gbc.setState(0x7440, 0x6682, 0xdff0, 0xa906, 0x38ed, 0x8265, 0x1, 0x1);
        gbc.writeMem(0x7440, { 0xcb, 0x5e });
        gbc.writeMem(0x8265, { 0xbd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6682, gbc.sp());
        EXPECT(0x7442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8265));
        // CB 5E 031B
        gbc.setState(0xae5e, 0x2968, 0xa840, 0x4454, 0xf227, 0x9967, 0x0, 0x0);
        gbc.writeMem(0x9967, { 0x5b });
        gbc.writeMem(0xae5e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2968, gbc.sp());
        EXPECT(0xae60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9967));
        EXPECT(0xcb, gbc.readMem(0xae5e));
        EXPECT(0x5e, gbc.readMem(0xae5f));
        // CB 5E 031C
        gbc.setState(0x3679, 0xc8b, 0xea20, 0x9eea, 0x7f9, 0xfbc7, 0x1, 0x0);
        gbc.writeMem(0x3679, { 0xcb, 0x5e });
        gbc.writeMem(0xfbc7, { 0xa });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc8b, gbc.sp());
        EXPECT(0x367b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xfbc7));
        // CB 5E 031D
        gbc.setState(0x2527, 0xef8d, 0xfe10, 0xb43b, 0x20d6, 0x789b, 0x1, 0x1);
        gbc.writeMem(0x2527, { 0xcb, 0x5e });
        gbc.writeMem(0x789b, { 0xca });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xef8d, gbc.sp());
        EXPECT(0x2529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 031E
        gbc.setState(0xb64a, 0x37fd, 0xf9f0, 0x5de9, 0x9a37, 0x10d4, 0x1, 0x1);
        gbc.writeMem(0x10d4, { 0xe6 });
        gbc.writeMem(0xb64a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x37fd, gbc.sp());
        EXPECT(0xb64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb64a));
        EXPECT(0x5e, gbc.readMem(0xb64b));
        // CB 5E 031F
        gbc.setState(0x6092, 0x32cf, 0x4d20, 0xf918, 0xb13c, 0xcebc, 0x0, 0x0);
        gbc.writeMem(0x6092, { 0xcb, 0x5e });
        gbc.writeMem(0xcebc, { 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x32cf, gbc.sp());
        EXPECT(0x6094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcebc));
        // CB 5E 0320
        gbc.setState(0x769e, 0x80ca, 0xeeb0, 0xc094, 0x29a5, 0xfed0, 0x0, 0x0);
        gbc.writeMem(0x769e, { 0xcb, 0x5e });
        gbc.writeMem(0xfed0, { 0xea });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x80ca, gbc.sp());
        EXPECT(0x76a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xfed0));
        // CB 5E 0321
        gbc.setState(0xc155, 0x3f3f, 0xf1c0, 0xa916, 0x92c, 0x725, 0x0, 0x0);
        gbc.writeMem(0x725, { 0x6e });
        gbc.writeMem(0xc155, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3f3f, gbc.sp());
        EXPECT(0xc157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc155));
        EXPECT(0x5e, gbc.readMem(0xc156));
        // CB 5E 0322
        gbc.setState(0x8ba9, 0x8d51, 0x95b0, 0x63f4, 0x8792, 0x1b1d, 0x1, 0x0);
        gbc.writeMem(0x1b1d, { 0xe0 });
        gbc.writeMem(0x8ba9, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8d51, gbc.sp());
        EXPECT(0x8bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba9));
        EXPECT(0x5e, gbc.readMem(0x8baa));
        // CB 5E 0323
        gbc.setState(0x1ebc, 0x9454, 0x6ec0, 0xa5d9, 0xcb92, 0x22e, 0x1, 0x1);
        gbc.writeMem(0x22e, { 0xb4 });
        gbc.writeMem(0x1ebc, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9454, gbc.sp());
        EXPECT(0x1ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0324
        gbc.setState(0x21f2, 0x29b1, 0xdcc0, 0x6197, 0x7f5b, 0x3092, 0x0, 0x1);
        gbc.writeMem(0x21f2, { 0xcb, 0x5e });
        gbc.writeMem(0x3092, { 0xec });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x29b1, gbc.sp());
        EXPECT(0x21f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0325
        gbc.setState(0x8265, 0xa62, 0xb890, 0x3282, 0xfd73, 0xe93c, 0x1, 0x0);
        gbc.writeMem(0x8265, { 0xcb, 0x5e });
        gbc.writeMem(0xe93c, { 0x5b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa62, gbc.sp());
        EXPECT(0x8267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8265));
        EXPECT(0x5e, gbc.readMem(0x8266));
        EXPECT(0x5b, gbc.readMem(0xe93c));
        // CB 5E 0326
        gbc.setState(0x127b, 0x3ac, 0xae50, 0xd9d, 0xf18a, 0xd6af, 0x0, 0x1);
        gbc.writeMem(0x127b, { 0xcb, 0x5e });
        gbc.writeMem(0xd6af, { 0x8b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3ac, gbc.sp());
        EXPECT(0x127d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xd6af));
        // CB 5E 0327
        gbc.setState(0xd03f, 0x4be7, 0xc040, 0xfa26, 0xf979, 0x8229, 0x0, 0x0);
        gbc.writeMem(0x8229, { 0x1 });
        gbc.writeMem(0xd03f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4be7, gbc.sp());
        EXPECT(0xd041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x8229));
        EXPECT(0xcb, gbc.readMem(0xd03f));
        EXPECT(0x5e, gbc.readMem(0xd040));
        // CB 5E 0328
        gbc.setState(0x1536, 0x7158, 0xc1d0, 0xf6fe, 0x3b53, 0xb800, 0x0, 0x1);
        gbc.writeMem(0x1536, { 0xcb, 0x5e });
        gbc.writeMem(0xb800, { 0xa2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7158, gbc.sp());
        EXPECT(0x1538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb800));
        // CB 5E 0329
        gbc.setState(0xa490, 0x6c9c, 0x31e0, 0x4e56, 0xfd9d, 0xd78, 0x1, 0x0);
        gbc.writeMem(0xd78, { 0xf7 });
        gbc.writeMem(0xa490, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6c9c, gbc.sp());
        EXPECT(0xa492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa490));
        EXPECT(0x5e, gbc.readMem(0xa491));
        // CB 5E 032A
        gbc.setState(0x1c55, 0x618e, 0x8b60, 0x6fa0, 0xa86a, 0x99bb, 0x0, 0x0);
        gbc.writeMem(0x1c55, { 0xcb, 0x5e });
        gbc.writeMem(0x99bb, { 0x3e });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x618e, gbc.sp());
        EXPECT(0x1c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x99bb));
        // CB 5E 032B
        gbc.setState(0xb70b, 0xc35b, 0x2080, 0x5e98, 0xe67f, 0x864f, 0x0, 0x0);
        gbc.writeMem(0x864f, { 0x1f });
        gbc.writeMem(0xb70b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc35b, gbc.sp());
        EXPECT(0xb70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x864f));
        EXPECT(0xcb, gbc.readMem(0xb70b));
        EXPECT(0x5e, gbc.readMem(0xb70c));
        // CB 5E 032C
        gbc.setState(0xcb9, 0xaa68, 0x5da0, 0x95e5, 0xca1f, 0xabd5, 0x0, 0x1);
        gbc.writeMem(0xcb9, { 0xcb, 0x5e });
        gbc.writeMem(0xabd5, { 0xed });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xaa68, gbc.sp());
        EXPECT(0xcbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xabd5));
        // CB 5E 032D
        gbc.setState(0xb90e, 0xe308, 0xc2d0, 0xdca7, 0xf25e, 0xefd1, 0x0, 0x1);
        gbc.writeMem(0xb90e, { 0xcb, 0x5e });
        gbc.writeMem(0xefd1, { 0x98 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe308, gbc.sp());
        EXPECT(0xb910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb90e));
        EXPECT(0x5e, gbc.readMem(0xb90f));
        EXPECT(0x98, gbc.readMem(0xefd1));
        // CB 5E 032E
        gbc.setState(0x37a2, 0x7520, 0x9710, 0xc68d, 0x76b8, 0x8114, 0x0, 0x0);
        gbc.writeMem(0x37a2, { 0xcb, 0x5e });
        gbc.writeMem(0x8114, { 0x2c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7520, gbc.sp());
        EXPECT(0x37a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8114));
        // CB 5E 032F
        gbc.setState(0x51eb, 0x5be3, 0x4470, 0xf108, 0x1ffc, 0x6bff, 0x0, 0x1);
        gbc.writeMem(0x51eb, { 0xcb, 0x5e });
        gbc.writeMem(0x6bff, { 0x32 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5be3, gbc.sp());
        EXPECT(0x51ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0330
        gbc.setState(0x8b7d, 0x70c8, 0x4b50, 0x17ab, 0x553a, 0xb2a7, 0x0, 0x0);
        gbc.writeMem(0x8b7d, { 0xcb, 0x5e });
        gbc.writeMem(0xb2a7, { 0x3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x70c8, gbc.sp());
        EXPECT(0x8b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b7d));
        EXPECT(0x5e, gbc.readMem(0x8b7e));
        EXPECT(0x3, gbc.readMem(0xb2a7));
        // CB 5E 0331
        gbc.setState(0x65ea, 0xb972, 0xf960, 0x9780, 0xa880, 0x1245, 0x1, 0x0);
        gbc.writeMem(0x1245, { 0xed });
        gbc.writeMem(0x65ea, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb972, gbc.sp());
        EXPECT(0x65ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0332
        gbc.setState(0xe985, 0xadf4, 0xfba0, 0xa8ad, 0x7eba, 0x2e61, 0x1, 0x1);
        gbc.writeMem(0x2e61, { 0x1 });
        gbc.writeMem(0xe985, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xadf4, gbc.sp());
        EXPECT(0xe987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe985));
        EXPECT(0x5e, gbc.readMem(0xe986));
        // CB 5E 0333
        gbc.setState(0x9aaa, 0xe0b1, 0x9da0, 0x2872, 0x2101, 0xad2b, 0x1, 0x1);
        gbc.writeMem(0x9aaa, { 0xcb, 0x5e });
        gbc.writeMem(0xad2b, { 0x16 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe0b1, gbc.sp());
        EXPECT(0x9aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aaa));
        EXPECT(0x5e, gbc.readMem(0x9aab));
        EXPECT(0x16, gbc.readMem(0xad2b));
        // CB 5E 0334
        gbc.setState(0xd813, 0xb26, 0x6b90, 0x7e27, 0x9e2d, 0x33cb, 0x0, 0x1);
        gbc.writeMem(0x33cb, { 0xe });
        gbc.writeMem(0xd813, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb26, gbc.sp());
        EXPECT(0xd815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd813));
        EXPECT(0x5e, gbc.readMem(0xd814));
        // CB 5E 0335
        gbc.setState(0x5abe, 0xdf13, 0x4720, 0xc091, 0xe7a2, 0x27f0, 0x0, 0x1);
        gbc.writeMem(0x27f0, { 0x30 });
        gbc.writeMem(0x5abe, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdf13, gbc.sp());
        EXPECT(0x5ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0336
        gbc.setState(0xe6fa, 0xc2f0, 0x1d30, 0x6ae5, 0xdbf7, 0xe6b2, 0x0, 0x1);
        gbc.writeMem(0xe6b2, { 0x7c });
        gbc.writeMem(0xe6fa, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc2f0, gbc.sp());
        EXPECT(0xe6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xe6b2));
        EXPECT(0xcb, gbc.readMem(0xe6fa));
        EXPECT(0x5e, gbc.readMem(0xe6fb));
        // CB 5E 0337
        gbc.setState(0xd586, 0xc05a, 0x58f0, 0xe4b4, 0x1818, 0xf4a6, 0x1, 0x1);
        gbc.writeMem(0xd586, { 0xcb, 0x5e });
        gbc.writeMem(0xf4a6, { 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc05a, gbc.sp());
        EXPECT(0xd588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd586));
        EXPECT(0x5e, gbc.readMem(0xd587));
        EXPECT(0x2b, gbc.readMem(0xf4a6));
        // CB 5E 0338
        gbc.setState(0x98e7, 0x963b, 0xc830, 0xd420, 0x3176, 0xaa69, 0x0, 0x1);
        gbc.writeMem(0x98e7, { 0xcb, 0x5e });
        gbc.writeMem(0xaa69, { 0x68 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x963b, gbc.sp());
        EXPECT(0x98e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e7));
        EXPECT(0x5e, gbc.readMem(0x98e8));
        EXPECT(0x68, gbc.readMem(0xaa69));
        // CB 5E 0339
        gbc.setState(0x5db2, 0xe2d9, 0xa500, 0x4f35, 0xe3a4, 0xe09e, 0x0, 0x1);
        gbc.writeMem(0x5db2, { 0xcb, 0x5e });
        gbc.writeMem(0xe09e, { 0x3c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe2d9, gbc.sp());
        EXPECT(0x5db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe09e));
        // CB 5E 033A
        gbc.setState(0x7579, 0x68fc, 0x4850, 0x1a74, 0x5fe0, 0xee59, 0x0, 0x0);
        gbc.writeMem(0x7579, { 0xcb, 0x5e });
        gbc.writeMem(0xee59, { 0x94 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x68fc, gbc.sp());
        EXPECT(0x757b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xee59));
        // CB 5E 033C
        gbc.setState(0x218f, 0xdf41, 0xbdb0, 0xe756, 0x2335, 0xf059, 0x1, 0x1);
        gbc.writeMem(0x218f, { 0xcb, 0x5e });
        gbc.writeMem(0xf059, { 0xe7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdf41, gbc.sp());
        EXPECT(0x2191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xf059));
        // CB 5E 033D
        gbc.setState(0xa23f, 0xec61, 0x5200, 0x78ff, 0xeced, 0xdef3, 0x1, 0x0);
        gbc.writeMem(0xa23f, { 0xcb, 0x5e });
        gbc.writeMem(0xdef3, { 0x10 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xec61, gbc.sp());
        EXPECT(0xa241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa23f));
        EXPECT(0x5e, gbc.readMem(0xa240));
        EXPECT(0x10, gbc.readMem(0xdef3));
        // CB 5E 033E
        gbc.setState(0x60a9, 0x1f33, 0x5f0, 0x2ed0, 0xf5f2, 0xb71b, 0x1, 0x0);
        gbc.writeMem(0x60a9, { 0xcb, 0x5e });
        gbc.writeMem(0xb71b, { 0x69 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1f33, gbc.sp());
        EXPECT(0x60ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb71b));
        // CB 5E 033F
        gbc.setState(0x2d85, 0x5786, 0x2900, 0x2e24, 0x1289, 0xc07b, 0x1, 0x0);
        gbc.writeMem(0x2d85, { 0xcb, 0x5e });
        gbc.writeMem(0xc07b, { 0xda });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5786, gbc.sp());
        EXPECT(0x2d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc07b));
        // CB 5E 0340
        gbc.setState(0xb903, 0xa976, 0x7c00, 0x4c7a, 0x8e03, 0x2cbb, 0x0, 0x1);
        gbc.writeMem(0x2cbb, { 0xbc });
        gbc.writeMem(0xb903, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa976, gbc.sp());
        EXPECT(0xb905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb903));
        EXPECT(0x5e, gbc.readMem(0xb904));
        // CB 5E 0341
        gbc.setState(0x909c, 0xc207, 0x4260, 0x4244, 0x7333, 0xfd2a, 0x1, 0x0);
        gbc.writeMem(0x909c, { 0xcb, 0x5e });
        gbc.writeMem(0xfd2a, { 0x84 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc207, gbc.sp());
        EXPECT(0x909e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909c));
        EXPECT(0x5e, gbc.readMem(0x909d));
        EXPECT(0x84, gbc.readMem(0xfd2a));
        // CB 5E 0342
        gbc.setState(0x37f1, 0xf311, 0x2e10, 0x5303, 0xd58e, 0x45d3, 0x0, 0x1);
        gbc.writeMem(0x37f1, { 0xcb, 0x5e });
        gbc.writeMem(0x45d3, { 0x9f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf311, gbc.sp());
        EXPECT(0x37f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0343
        gbc.setState(0xd53c, 0xf11e, 0xe570, 0x5b45, 0x604c, 0x9f36, 0x0, 0x1);
        gbc.writeMem(0x9f36, { 0x2b });
        gbc.writeMem(0xd53c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf11e, gbc.sp());
        EXPECT(0xd53e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9f36));
        EXPECT(0xcb, gbc.readMem(0xd53c));
        EXPECT(0x5e, gbc.readMem(0xd53d));
        // CB 5E 0344
        gbc.setState(0x7314, 0x3ca7, 0x96b0, 0x9f7f, 0x39ba, 0x8842, 0x1, 0x1);
        gbc.writeMem(0x7314, { 0xcb, 0x5e });
        gbc.writeMem(0x8842, { 0xb5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3ca7, gbc.sp());
        EXPECT(0x7316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8842));
        // CB 5E 0345
        gbc.setState(0x4c33, 0xff2b, 0xf1e0, 0x6f1b, 0x449d, 0xf931, 0x0, 0x0);
        gbc.writeMem(0x4c33, { 0xcb, 0x5e });
        gbc.writeMem(0xf931, { 0x39 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xff2b, gbc.sp());
        EXPECT(0x4c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xf931));
        // CB 5E 0346
        gbc.setState(0xd071, 0xc4d, 0x4740, 0x3356, 0x7a6d, 0xef68, 0x1, 0x0);
        gbc.writeMem(0xd071, { 0xcb, 0x5e });
        gbc.writeMem(0xef68, { 0xa5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc4d, gbc.sp());
        EXPECT(0xd073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd071));
        EXPECT(0x5e, gbc.readMem(0xd072));
        EXPECT(0xa5, gbc.readMem(0xef68));
        // CB 5E 0347
        gbc.setState(0xebab, 0x3239, 0x6880, 0x7d2c, 0x6324, 0x7ac5, 0x1, 0x1);
        gbc.writeMem(0x7ac5, { 0x94 });
        gbc.writeMem(0xebab, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3239, gbc.sp());
        EXPECT(0xebad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebab));
        EXPECT(0x5e, gbc.readMem(0xebac));
        // CB 5E 0348
        gbc.setState(0x4165, 0x14f7, 0xab00, 0x49a5, 0xa14, 0xadec, 0x0, 0x1);
        gbc.writeMem(0x4165, { 0xcb, 0x5e });
        gbc.writeMem(0xadec, { 0xc1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x14f7, gbc.sp());
        EXPECT(0x4167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xadec));
        // CB 5E 0349
        gbc.setState(0x1f34, 0xac64, 0x14c0, 0x4387, 0x3077, 0x1ff1, 0x1, 0x0);
        gbc.writeMem(0x1f34, { 0xcb, 0x5e });
        gbc.writeMem(0x1ff1, { 0xad });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xac64, gbc.sp());
        EXPECT(0x1f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 034A
        gbc.setState(0x6bf4, 0xef4, 0xdb80, 0xe9ad, 0xea61, 0x67de, 0x1, 0x1);
        gbc.writeMem(0x67de, { 0x81 });
        gbc.writeMem(0x6bf4, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xef4, gbc.sp());
        EXPECT(0x6bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 034B
        gbc.setState(0x4d5e, 0x6554, 0xaf40, 0x41b6, 0xd5ce, 0x8c9b, 0x0, 0x1);
        gbc.writeMem(0x4d5e, { 0xcb, 0x5e });
        gbc.writeMem(0x8c9b, { 0x3d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6554, gbc.sp());
        EXPECT(0x4d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x8c9b));
        // CB 5E 034C
        gbc.setState(0x6257, 0xb2ad, 0xe400, 0xe806, 0xcf0d, 0x2099, 0x0, 0x0);
        gbc.writeMem(0x2099, { 0xce });
        gbc.writeMem(0x6257, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb2ad, gbc.sp());
        EXPECT(0x6259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 034D
        gbc.setState(0x4b8e, 0x6398, 0x4070, 0xe843, 0x4892, 0xe138, 0x0, 0x1);
        gbc.writeMem(0x4b8e, { 0xcb, 0x5e });
        gbc.writeMem(0xe138, { 0x89 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6398, gbc.sp());
        EXPECT(0x4b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe138));
        // CB 5E 034F
        gbc.setState(0x1a66, 0xb34d, 0x44d0, 0x370f, 0xdd7e, 0x7fab, 0x1, 0x1);
        gbc.writeMem(0x1a66, { 0xcb, 0x5e });
        gbc.writeMem(0x7fab, { 0xc2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb34d, gbc.sp());
        EXPECT(0x1a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0350
        gbc.setState(0x8f7f, 0xb55c, 0x80e0, 0x62cf, 0xf42, 0x42a, 0x0, 0x0);
        gbc.writeMem(0x42a, { 0xed });
        gbc.writeMem(0x8f7f, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb55c, gbc.sp());
        EXPECT(0x8f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f7f));
        EXPECT(0x5e, gbc.readMem(0x8f80));
        // CB 5E 0351
        gbc.setState(0xa374, 0x43fe, 0xed80, 0x43d, 0x34df, 0x7d09, 0x1, 0x0);
        gbc.writeMem(0x7d09, { 0x33 });
        gbc.writeMem(0xa374, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x43fe, gbc.sp());
        EXPECT(0xa376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa374));
        EXPECT(0x5e, gbc.readMem(0xa375));
        // CB 5E 0352
        gbc.setState(0xb632, 0xc066, 0x48d0, 0xe81c, 0xa504, 0x416a, 0x1, 0x0);
        gbc.writeMem(0x416a, { 0x51 });
        gbc.writeMem(0xb632, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc066, gbc.sp());
        EXPECT(0xb634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb632));
        EXPECT(0x5e, gbc.readMem(0xb633));
        // CB 5E 0353
        gbc.setState(0xb1f3, 0x9cd0, 0x770, 0xd7c8, 0x161a, 0x6baa, 0x1, 0x0);
        gbc.writeMem(0x6baa, { 0x46 });
        gbc.writeMem(0xb1f3, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9cd0, gbc.sp());
        EXPECT(0xb1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f3));
        EXPECT(0x5e, gbc.readMem(0xb1f4));
        // CB 5E 0355
        gbc.setState(0x781a, 0x59b6, 0x8e60, 0x5da9, 0x78c, 0xc77e, 0x1, 0x1);
        gbc.writeMem(0x781a, { 0xcb, 0x5e });
        gbc.writeMem(0xc77e, { 0x39 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x59b6, gbc.sp());
        EXPECT(0x781c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xc77e));
        // CB 5E 0356
        gbc.setState(0xbbd3, 0x73de, 0x9ec0, 0x538d, 0x113e, 0x2c2c, 0x1, 0x0);
        gbc.writeMem(0x2c2c, { 0x5a });
        gbc.writeMem(0xbbd3, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x73de, gbc.sp());
        EXPECT(0xbbd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd3));
        EXPECT(0x5e, gbc.readMem(0xbbd4));
        // CB 5E 0357
        gbc.setState(0xd85a, 0x6ea3, 0xdc0, 0xbcd5, 0x3c81, 0xdcf1, 0x0, 0x0);
        gbc.writeMem(0xd85a, { 0xcb, 0x5e });
        gbc.writeMem(0xdcf1, { 0x3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6ea3, gbc.sp());
        EXPECT(0xd85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85a));
        EXPECT(0x5e, gbc.readMem(0xd85b));
        EXPECT(0x3, gbc.readMem(0xdcf1));
        // CB 5E 0358
        gbc.setState(0xe9c3, 0x936d, 0x55c0, 0xd972, 0x149, 0xaf88, 0x0, 0x1);
        gbc.writeMem(0xaf88, { 0x41 });
        gbc.writeMem(0xe9c3, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x936d, gbc.sp());
        EXPECT(0xe9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xaf88));
        EXPECT(0xcb, gbc.readMem(0xe9c3));
        EXPECT(0x5e, gbc.readMem(0xe9c4));
        // CB 5E 035A
        gbc.setState(0xacd0, 0x8d13, 0x6150, 0xbbd, 0x4f31, 0xae6b, 0x1, 0x0);
        gbc.writeMem(0xacd0, { 0xcb, 0x5e });
        gbc.writeMem(0xae6b, { 0x7b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8d13, gbc.sp());
        EXPECT(0xacd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd0));
        EXPECT(0x5e, gbc.readMem(0xacd1));
        EXPECT(0x7b, gbc.readMem(0xae6b));
        // CB 5E 035B
        gbc.setState(0x1699, 0xf73e, 0x3a30, 0xa8bc, 0x675b, 0x49f6, 0x0, 0x1);
        gbc.writeMem(0x1699, { 0xcb, 0x5e });
        gbc.writeMem(0x49f6, { 0x77 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf73e, gbc.sp());
        EXPECT(0x169b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 035C
        gbc.setState(0x5171, 0x4a50, 0xbb50, 0xe685, 0xa110, 0x2a2, 0x1, 0x0);
        gbc.writeMem(0x2a2, { 0x9f });
        gbc.writeMem(0x5171, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4a50, gbc.sp());
        EXPECT(0x5173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 035D
        gbc.setState(0x65d7, 0xb7e3, 0x6f10, 0x5537, 0xdbd7, 0xc514, 0x1, 0x0);
        gbc.writeMem(0x65d7, { 0xcb, 0x5e });
        gbc.writeMem(0xc514, { 0x2d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb7e3, gbc.sp());
        EXPECT(0x65d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc514));
        // CB 5E 035E
        gbc.setState(0xd947, 0x65f3, 0x4640, 0xacf0, 0xc5e7, 0x39b5, 0x0, 0x1);
        gbc.writeMem(0x39b5, { 0x97 });
        gbc.writeMem(0xd947, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x65f3, gbc.sp());
        EXPECT(0xd949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd947));
        EXPECT(0x5e, gbc.readMem(0xd948));
        // CB 5E 035F
        gbc.setState(0x2e9, 0x5d65, 0xc000, 0x379e, 0xe847, 0x4dd9, 0x1, 0x1);
        gbc.writeMem(0x2e9, { 0xcb, 0x5e });
        gbc.writeMem(0x4dd9, { 0x1d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5d65, gbc.sp());
        EXPECT(0x2eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0360
        gbc.setState(0xd263, 0x4e97, 0x1010, 0xf835, 0x9ddf, 0x705c, 0x1, 0x1);
        gbc.writeMem(0x705c, { 0xa0 });
        gbc.writeMem(0xd263, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4e97, gbc.sp());
        EXPECT(0xd265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd263));
        EXPECT(0x5e, gbc.readMem(0xd264));
        // CB 5E 0361
        gbc.setState(0x73eb, 0x9c59, 0x470, 0x1f2e, 0x9616, 0xf03, 0x0, 0x0);
        gbc.writeMem(0xf03, { 0x39 });
        gbc.writeMem(0x73eb, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9c59, gbc.sp());
        EXPECT(0x73ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0362
        gbc.setState(0x4696, 0xee7c, 0x1fe0, 0x342a, 0x134f, 0x90a1, 0x0, 0x1);
        gbc.writeMem(0x4696, { 0xcb, 0x5e });
        gbc.writeMem(0x90a1, { 0x61 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xee7c, gbc.sp());
        EXPECT(0x4698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x90a1));
        // CB 5E 0363
        gbc.setState(0x18ac, 0xed5c, 0x99d0, 0x8ee2, 0x678e, 0xe572, 0x0, 0x1);
        gbc.writeMem(0x18ac, { 0xcb, 0x5e });
        gbc.writeMem(0xe572, { 0xcf });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xed5c, gbc.sp());
        EXPECT(0x18ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xe572));
        // CB 5E 0364
        gbc.setState(0xe98d, 0x2066, 0x5da0, 0x316b, 0x767, 0xc967, 0x0, 0x1);
        gbc.writeMem(0xc967, { 0xcd });
        gbc.writeMem(0xe98d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2066, gbc.sp());
        EXPECT(0xe98f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xc967));
        EXPECT(0xcb, gbc.readMem(0xe98d));
        EXPECT(0x5e, gbc.readMem(0xe98e));
        // CB 5E 0365
        gbc.setState(0x85c0, 0x8e46, 0xab90, 0xf61b, 0x421e, 0x4700, 0x1, 0x0);
        gbc.writeMem(0x4700, { 0xbe });
        gbc.writeMem(0x85c0, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8e46, gbc.sp());
        EXPECT(0x85c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c0));
        EXPECT(0x5e, gbc.readMem(0x85c1));
        // CB 5E 0366
        gbc.setState(0x55f6, 0x4aef, 0x21e0, 0xcd21, 0x8524, 0x5531, 0x1, 0x1);
        gbc.writeMem(0x5531, { 0x3d });
        gbc.writeMem(0x55f6, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4aef, gbc.sp());
        EXPECT(0x55f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0367
        gbc.setState(0x8a33, 0xcf1a, 0xa5e0, 0xc39f, 0x5d62, 0x7500, 0x0, 0x1);
        gbc.writeMem(0x7500, { 0x2d });
        gbc.writeMem(0x8a33, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcf1a, gbc.sp());
        EXPECT(0x8a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a33));
        EXPECT(0x5e, gbc.readMem(0x8a34));
        // CB 5E 0368
        gbc.setState(0x300c, 0x3f03, 0x980, 0x419f, 0xb514, 0xcaae, 0x0, 0x0);
        gbc.writeMem(0x300c, { 0xcb, 0x5e });
        gbc.writeMem(0xcaae, { 0xd8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3f03, gbc.sp());
        EXPECT(0x300e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xcaae));
        // CB 5E 0369
        gbc.setState(0x138, 0xfdce, 0x6a50, 0x2cce, 0x6f47, 0xdf3e, 0x1, 0x0);
        gbc.writeMem(0x138, { 0xcb, 0x5e });
        gbc.writeMem(0xdf3e, { 0x4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfdce, gbc.sp());
        EXPECT(0x13a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdf3e));
        // CB 5E 036A
        gbc.setState(0x2334, 0x7d2f, 0x13e0, 0x397f, 0x12d7, 0xed4c, 0x1, 0x0);
        gbc.writeMem(0x2334, { 0xcb, 0x5e });
        gbc.writeMem(0xed4c, { 0x1d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7d2f, gbc.sp());
        EXPECT(0x2336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xed4c));
        // CB 5E 036B
        gbc.setState(0xcd4b, 0xafde, 0x1da0, 0x503a, 0x55ac, 0x12df, 0x0, 0x0);
        gbc.writeMem(0x12df, { 0xfe });
        gbc.writeMem(0xcd4b, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xafde, gbc.sp());
        EXPECT(0xcd4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd4b));
        EXPECT(0x5e, gbc.readMem(0xcd4c));
        // CB 5E 036C
        gbc.setState(0x4ce, 0x8153, 0x68b0, 0x8dca, 0xc931, 0x7e01, 0x0, 0x1);
        gbc.writeMem(0x4ce, { 0xcb, 0x5e });
        gbc.writeMem(0x7e01, { 0xe9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8153, gbc.sp());
        EXPECT(0x4d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 036D
        gbc.setState(0xa150, 0x3bc, 0x5db0, 0xe577, 0xa82f, 0xcc52, 0x0, 0x0);
        gbc.writeMem(0xa150, { 0xcb, 0x5e });
        gbc.writeMem(0xcc52, { 0xc3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3bc, gbc.sp());
        EXPECT(0xa152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa150));
        EXPECT(0x5e, gbc.readMem(0xa151));
        EXPECT(0xc3, gbc.readMem(0xcc52));
        // CB 5E 036E
        gbc.setState(0xd10c, 0x64d, 0x1fe0, 0x709a, 0x3a9, 0xf528, 0x1, 0x0);
        gbc.writeMem(0xd10c, { 0xcb, 0x5e });
        gbc.writeMem(0xf528, { 0x6d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x64d, gbc.sp());
        EXPECT(0xd10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10c));
        EXPECT(0x5e, gbc.readMem(0xd10d));
        EXPECT(0x6d, gbc.readMem(0xf528));
        // CB 5E 036F
        gbc.setState(0xac9, 0x6bd3, 0x9db0, 0xe2ba, 0x14a1, 0x861d, 0x1, 0x1);
        gbc.writeMem(0xac9, { 0xcb, 0x5e });
        gbc.writeMem(0x861d, { 0x1d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6bd3, gbc.sp());
        EXPECT(0xacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x861d));
        // CB 5E 0370
        gbc.setState(0x48d0, 0x9174, 0x5bc0, 0x143b, 0xa5b4, 0x672b, 0x1, 0x0);
        gbc.writeMem(0x48d0, { 0xcb, 0x5e });
        gbc.writeMem(0x672b, { 0xb0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9174, gbc.sp());
        EXPECT(0x48d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0372
        gbc.setState(0x9636, 0x204, 0x3020, 0xe1e3, 0xbc5e, 0xb76c, 0x0, 0x1);
        gbc.writeMem(0x9636, { 0xcb, 0x5e });
        gbc.writeMem(0xb76c, { 0x5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x204, gbc.sp());
        EXPECT(0x9638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9636));
        EXPECT(0x5e, gbc.readMem(0x9637));
        EXPECT(0x5, gbc.readMem(0xb76c));
        // CB 5E 0373
        gbc.setState(0xd148, 0x26fd, 0x3560, 0x9eee, 0x5b0a, 0xf49a, 0x0, 0x1);
        gbc.writeMem(0xd148, { 0xcb, 0x5e });
        gbc.writeMem(0xf49a, { 0x4f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x26fd, gbc.sp());
        EXPECT(0xd14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd148));
        EXPECT(0x5e, gbc.readMem(0xd149));
        EXPECT(0x4f, gbc.readMem(0xf49a));
        // CB 5E 0374
        gbc.setState(0xb2e0, 0x98ba, 0xf80, 0x55ab, 0x1874, 0x38a7, 0x1, 0x1);
        gbc.writeMem(0x38a7, { 0xb });
        gbc.writeMem(0xb2e0, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x98ba, gbc.sp());
        EXPECT(0xb2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e0));
        EXPECT(0x5e, gbc.readMem(0xb2e1));
        // CB 5E 0375
        gbc.setState(0xc13f, 0xc84f, 0x4860, 0xeaf9, 0x80a0, 0xfdd4, 0x1, 0x1);
        gbc.writeMem(0xc13f, { 0xcb, 0x5e });
        gbc.writeMem(0xfdd4, { 0x17 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc84f, gbc.sp());
        EXPECT(0xc141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc13f));
        EXPECT(0x5e, gbc.readMem(0xc140));
        EXPECT(0x17, gbc.readMem(0xfdd4));
        // CB 5E 0376
        gbc.setState(0x77c9, 0xf3c9, 0x6710, 0xfc85, 0x5e9b, 0x12fa, 0x1, 0x0);
        gbc.writeMem(0x12fa, { 0xe });
        gbc.writeMem(0x77c9, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf3c9, gbc.sp());
        EXPECT(0x77cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0377
        gbc.setState(0x3817, 0x782, 0x5b70, 0x321, 0xf6, 0x56ee, 0x1, 0x0);
        gbc.writeMem(0x3817, { 0xcb, 0x5e });
        gbc.writeMem(0x56ee, { 0xf1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x782, gbc.sp());
        EXPECT(0x3819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0378
        gbc.setState(0x92cd, 0xae5e, 0xd9d0, 0x4f67, 0x92a8, 0x847f, 0x1, 0x0);
        gbc.writeMem(0x847f, { 0x15 });
        gbc.writeMem(0x92cd, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xae5e, gbc.sp());
        EXPECT(0x92cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x847f));
        EXPECT(0xcb, gbc.readMem(0x92cd));
        EXPECT(0x5e, gbc.readMem(0x92ce));
        // CB 5E 0379
        gbc.setState(0x7fb4, 0xbaaa, 0x5be0, 0xb6ce, 0x1934, 0x7fb1, 0x1, 0x1);
        gbc.writeMem(0x7fb1, { 0x60 });
        gbc.writeMem(0x7fb4, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbaaa, gbc.sp());
        EXPECT(0x7fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 037A
        gbc.setState(0xb80a, 0x6bd, 0x3f10, 0x7aca, 0xbfa6, 0x6330, 0x1, 0x1);
        gbc.writeMem(0x6330, { 0x35 });
        gbc.writeMem(0xb80a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6bd, gbc.sp());
        EXPECT(0xb80c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb80a));
        EXPECT(0x5e, gbc.readMem(0xb80b));
        // CB 5E 037B
        gbc.setState(0xe34, 0x6431, 0x4e70, 0xeb6, 0x27b, 0xae8f, 0x0, 0x1);
        gbc.writeMem(0xe34, { 0xcb, 0x5e });
        gbc.writeMem(0xae8f, { 0x66 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6431, gbc.sp());
        EXPECT(0xe36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xae8f));
        // CB 5E 037C
        gbc.setState(0x601a, 0x88c8, 0x7720, 0x63af, 0xaef5, 0x963c, 0x0, 0x1);
        gbc.writeMem(0x601a, { 0xcb, 0x5e });
        gbc.writeMem(0x963c, { 0x30 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x88c8, gbc.sp());
        EXPECT(0x601c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x963c));
        // CB 5E 037D
        gbc.setState(0xe2d7, 0x8c00, 0xf4c0, 0xd84e, 0xe545, 0x2ebd, 0x0, 0x0);
        gbc.writeMem(0x2ebd, { 0xe });
        gbc.writeMem(0xe2d7, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8c00, gbc.sp());
        EXPECT(0xe2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d7));
        EXPECT(0x5e, gbc.readMem(0xe2d8));
        // CB 5E 037F
        gbc.setState(0x3ff7, 0x3b8d, 0xa600, 0x963d, 0x67f5, 0x809d, 0x0, 0x0);
        gbc.writeMem(0x3ff7, { 0xcb, 0x5e });
        gbc.writeMem(0x809d, { 0x5f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3b8d, gbc.sp());
        EXPECT(0x3ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x809d));
        // CB 5E 0380
        gbc.setState(0xe9d, 0x6e1d, 0x5120, 0x4855, 0xc6e1, 0x2035, 0x1, 0x1);
        gbc.writeMem(0xe9d, { 0xcb, 0x5e });
        gbc.writeMem(0x2035, { 0x65 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6e1d, gbc.sp());
        EXPECT(0xe9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0381
        gbc.setState(0xd8e2, 0x6e3d, 0x4b0, 0x6708, 0x7140, 0x37a8, 0x0, 0x0);
        gbc.writeMem(0x37a8, { 0x33 });
        gbc.writeMem(0xd8e2, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6e3d, gbc.sp());
        EXPECT(0xd8e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e2));
        EXPECT(0x5e, gbc.readMem(0xd8e3));
        // CB 5E 0382
        gbc.setState(0x8fc6, 0xe0e5, 0x10d0, 0xfcd7, 0xfa0a, 0x8bd5, 0x1, 0x0);
        gbc.writeMem(0x8bd5, { 0x3e });
        gbc.writeMem(0x8fc6, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe0e5, gbc.sp());
        EXPECT(0x8fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8bd5));
        EXPECT(0xcb, gbc.readMem(0x8fc6));
        EXPECT(0x5e, gbc.readMem(0x8fc7));
        // CB 5E 0383
        gbc.setState(0x6c6b, 0xbea5, 0x7780, 0xcb3, 0x92c0, 0xe658, 0x0, 0x1);
        gbc.writeMem(0x6c6b, { 0xcb, 0x5e });
        gbc.writeMem(0xe658, { 0xad });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbea5, gbc.sp());
        EXPECT(0x6c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xe658));
        // CB 5E 0384
        gbc.setState(0x11af, 0xb406, 0xd610, 0x3916, 0x1cbe, 0x6579, 0x0, 0x0);
        gbc.writeMem(0x11af, { 0xcb, 0x5e });
        gbc.writeMem(0x6579, { 0x4c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb406, gbc.sp());
        EXPECT(0x11b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0385
        gbc.setState(0x7d0, 0x3a87, 0x5c00, 0x22a1, 0x908c, 0x8399, 0x0, 0x1);
        gbc.writeMem(0x7d0, { 0xcb, 0x5e });
        gbc.writeMem(0x8399, { 0x9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3a87, gbc.sp());
        EXPECT(0x7d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8399));
        // CB 5E 0386
        gbc.setState(0x6db6, 0xc7e2, 0xfee0, 0x6fec, 0xebf8, 0x312e, 0x0, 0x0);
        gbc.writeMem(0x312e, { 0xed });
        gbc.writeMem(0x6db6, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc7e2, gbc.sp());
        EXPECT(0x6db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0387
        gbc.setState(0x1ef7, 0x7f58, 0x12f0, 0x8751, 0xfb69, 0x57f3, 0x0, 0x1);
        gbc.writeMem(0x1ef7, { 0xcb, 0x5e });
        gbc.writeMem(0x57f3, { 0xf1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7f58, gbc.sp());
        EXPECT(0x1ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 0388
        gbc.setState(0xba1c, 0xdd77, 0x1760, 0x21f6, 0xfc9f, 0x7493, 0x0, 0x0);
        gbc.writeMem(0x7493, { 0x9a });
        gbc.writeMem(0xba1c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdd77, gbc.sp());
        EXPECT(0xba1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1c));
        EXPECT(0x5e, gbc.readMem(0xba1d));
        // CB 5E 0389
        gbc.setState(0xc482, 0x5bf3, 0x50e0, 0x854f, 0x1a4f, 0xbac1, 0x1, 0x1);
        gbc.writeMem(0xbac1, { 0xfc });
        gbc.writeMem(0xc482, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5bf3, gbc.sp());
        EXPECT(0xc484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xbac1));
        EXPECT(0xcb, gbc.readMem(0xc482));
        EXPECT(0x5e, gbc.readMem(0xc483));
        // CB 5E 038A
        gbc.setState(0xe415, 0x2e8d, 0x9df0, 0xa6d, 0xf757, 0xce5c, 0x0, 0x1);
        gbc.writeMem(0xce5c, { 0x14 });
        gbc.writeMem(0xe415, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2e8d, gbc.sp());
        EXPECT(0xe417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xce5c));
        EXPECT(0xcb, gbc.readMem(0xe415));
        EXPECT(0x5e, gbc.readMem(0xe416));
        // CB 5E 038B
        gbc.setState(0x8e8, 0x40e1, 0x8530, 0xf5df, 0x77b, 0x391c, 0x0, 0x0);
        gbc.writeMem(0x8e8, { 0xcb, 0x5e });
        gbc.writeMem(0x391c, { 0xf });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x40e1, gbc.sp());
        EXPECT(0x8ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 038C
        gbc.setState(0x8e14, 0xbd42, 0xe320, 0xf323, 0xba2e, 0xfd49, 0x0, 0x1);
        gbc.writeMem(0x8e14, { 0xcb, 0x5e });
        gbc.writeMem(0xfd49, { 0xb6 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbd42, gbc.sp());
        EXPECT(0x8e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e14));
        EXPECT(0x5e, gbc.readMem(0x8e15));
        EXPECT(0xb6, gbc.readMem(0xfd49));
        // CB 5E 038D
        gbc.setState(0xda91, 0x1b79, 0x7eb0, 0xa191, 0xf511, 0xaec7, 0x1, 0x1);
        gbc.writeMem(0xaec7, { 0xba });
        gbc.writeMem(0xda91, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1b79, gbc.sp());
        EXPECT(0xda93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xaec7));
        EXPECT(0xcb, gbc.readMem(0xda91));
        EXPECT(0x5e, gbc.readMem(0xda92));
        // CB 5E 038F
        gbc.setState(0xada, 0x84c, 0x2fb0, 0x8886, 0xc017, 0xf3a4, 0x1, 0x0);
        gbc.writeMem(0xada, { 0xcb, 0x5e });
        gbc.writeMem(0xf3a4, { 0xdc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x84c, gbc.sp());
        EXPECT(0xadc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xf3a4));
        // CB 5E 0390
        gbc.setState(0x60b9, 0x1bb1, 0x4780, 0xf942, 0x1863, 0x8a01, 0x0, 0x1);
        gbc.writeMem(0x60b9, { 0xcb, 0x5e });
        gbc.writeMem(0x8a01, { 0x1c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1bb1, gbc.sp());
        EXPECT(0x60bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x8a01));
        // CB 5E 0391
        gbc.setState(0x7aa0, 0xf6a0, 0x8680, 0xe01e, 0x8614, 0x298, 0x1, 0x0);
        gbc.writeMem(0x298, { 0x44 });
        gbc.writeMem(0x7aa0, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf6a0, gbc.sp());
        EXPECT(0x7aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 0392
        gbc.setState(0x3eb1, 0xe262, 0xd800, 0x9cf8, 0xcb04, 0xacc5, 0x0, 0x1);
        gbc.writeMem(0x3eb1, { 0xcb, 0x5e });
        gbc.writeMem(0xacc5, { 0x96 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe262, gbc.sp());
        EXPECT(0x3eb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xacc5));
        // CB 5E 0393
        gbc.setState(0x113f, 0x3d43, 0xf360, 0x502, 0xf7e3, 0xa891, 0x0, 0x0);
        gbc.writeMem(0x113f, { 0xcb, 0x5e });
        gbc.writeMem(0xa891, { 0x3b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3d43, gbc.sp());
        EXPECT(0x1141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa891));
        // CB 5E 0394
        gbc.setState(0x8863, 0xae33, 0xa160, 0x5244, 0xd8f1, 0x3344, 0x0, 0x0);
        gbc.writeMem(0x3344, { 0xd0 });
        gbc.writeMem(0x8863, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xae33, gbc.sp());
        EXPECT(0x8865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8863));
        EXPECT(0x5e, gbc.readMem(0x8864));
        // CB 5E 0395
        gbc.setState(0xdb40, 0xe30d, 0xe6e0, 0xeaff, 0x9a7a, 0x656a, 0x0, 0x1);
        gbc.writeMem(0x656a, { 0x77 });
        gbc.writeMem(0xdb40, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe30d, gbc.sp());
        EXPECT(0xdb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb40));
        EXPECT(0x5e, gbc.readMem(0xdb41));
        // CB 5E 0396
        gbc.setState(0x6568, 0xf67d, 0x8ac0, 0x9e39, 0x234c, 0xdc73, 0x1, 0x1);
        gbc.writeMem(0x6568, { 0xcb, 0x5e });
        gbc.writeMem(0xdc73, { 0x36 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf67d, gbc.sp());
        EXPECT(0x656a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xdc73));
        // CB 5E 0398
        gbc.setState(0xe9b9, 0xa7bb, 0x9470, 0xa96e, 0x64dc, 0x74aa, 0x0, 0x1);
        gbc.writeMem(0x74aa, { 0xdf });
        gbc.writeMem(0xe9b9, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa7bb, gbc.sp());
        EXPECT(0xe9bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b9));
        EXPECT(0x5e, gbc.readMem(0xe9ba));
        // CB 5E 0399
        gbc.setState(0x7000, 0xc00, 0xab50, 0xe36b, 0x6abc, 0x19da, 0x1, 0x0);
        gbc.writeMem(0x19da, { 0x56 });
        gbc.writeMem(0x7000, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc00, gbc.sp());
        EXPECT(0x7002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 039A
        gbc.setState(0x7416, 0x39d6, 0x2a20, 0xc361, 0x67c3, 0x21d3, 0x1, 0x1);
        gbc.writeMem(0x21d3, { 0x57 });
        gbc.writeMem(0x7416, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x39d6, gbc.sp());
        EXPECT(0x7418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 039B
        gbc.setState(0x15b1, 0x6af9, 0xf1e0, 0xf4, 0xc38, 0x1530, 0x1, 0x0);
        gbc.writeMem(0x1530, { 0x94 });
        gbc.writeMem(0x15b1, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6af9, gbc.sp());
        EXPECT(0x15b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 039C
        gbc.setState(0x5a73, 0x9a03, 0x49f0, 0x4e54, 0x82eb, 0xaba0, 0x1, 0x1);
        gbc.writeMem(0x5a73, { 0xcb, 0x5e });
        gbc.writeMem(0xaba0, { 0xc2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9a03, gbc.sp());
        EXPECT(0x5a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xaba0));
        // CB 5E 039D
        gbc.setState(0x85e6, 0xb03, 0x8910, 0x7667, 0x5636, 0xe5d2, 0x0, 0x1);
        gbc.writeMem(0x85e6, { 0xcb, 0x5e });
        gbc.writeMem(0xe5d2, { 0x97 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb03, gbc.sp());
        EXPECT(0x85e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e6));
        EXPECT(0x5e, gbc.readMem(0x85e7));
        EXPECT(0x97, gbc.readMem(0xe5d2));
        // CB 5E 039E
        gbc.setState(0x3444, 0x393c, 0xaf0, 0xf249, 0x4b3c, 0x8338, 0x1, 0x1);
        gbc.writeMem(0x3444, { 0xcb, 0x5e });
        gbc.writeMem(0x8338, { 0xdd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x393c, gbc.sp());
        EXPECT(0x3446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x8338));
        // CB 5E 039F
        gbc.setState(0xaf3d, 0xf6c7, 0xd210, 0x80e9, 0x5c9d, 0x9343, 0x0, 0x1);
        gbc.writeMem(0x9343, { 0xe9 });
        gbc.writeMem(0xaf3d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf6c7, gbc.sp());
        EXPECT(0xaf3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9343));
        EXPECT(0xcb, gbc.readMem(0xaf3d));
        EXPECT(0x5e, gbc.readMem(0xaf3e));
        // CB 5E 03A0
        gbc.setState(0x8b84, 0xd94d, 0xd200, 0xd15a, 0xae37, 0x1d93, 0x1, 0x1);
        gbc.writeMem(0x1d93, { 0x18 });
        gbc.writeMem(0x8b84, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd94d, gbc.sp());
        EXPECT(0x8b86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b84));
        EXPECT(0x5e, gbc.readMem(0x8b85));
        // CB 5E 03A1
        gbc.setState(0x5d18, 0x2249, 0x1a70, 0x3233, 0x4bd6, 0x63b9, 0x1, 0x1);
        gbc.writeMem(0x5d18, { 0xcb, 0x5e });
        gbc.writeMem(0x63b9, { 0xb8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2249, gbc.sp());
        EXPECT(0x5d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 03A2
        gbc.setState(0xebf3, 0xb5eb, 0x7b30, 0x920a, 0x1662, 0xf4b6, 0x0, 0x0);
        gbc.writeMem(0xebf3, { 0xcb, 0x5e });
        gbc.writeMem(0xf4b6, { 0xed });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb5eb, gbc.sp());
        EXPECT(0xebf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf3));
        EXPECT(0x5e, gbc.readMem(0xebf4));
        EXPECT(0xed, gbc.readMem(0xf4b6));
        // CB 5E 03A3
        gbc.setState(0x51c8, 0x178b, 0x29e0, 0xa907, 0xb944, 0xd4d8, 0x0, 0x1);
        gbc.writeMem(0x51c8, { 0xcb, 0x5e });
        gbc.writeMem(0xd4d8, { 0x93 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x178b, gbc.sp());
        EXPECT(0x51ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd4d8));
        // CB 5E 03A4
        gbc.setState(0x22b3, 0x40f9, 0x41a0, 0xfac, 0xd63c, 0xbc0, 0x1, 0x1);
        gbc.writeMem(0xbc0, { 0x5d });
        gbc.writeMem(0x22b3, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x40f9, gbc.sp());
        EXPECT(0x22b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 03A5
        gbc.setState(0x418d, 0x3938, 0xb710, 0x388c, 0xacb7, 0x18ee, 0x0, 0x1);
        gbc.writeMem(0x18ee, { 0x1 });
        gbc.writeMem(0x418d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3938, gbc.sp());
        EXPECT(0x418f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 03A6
        gbc.setState(0x4f10, 0x6a3a, 0x8620, 0x6624, 0x6bf4, 0x5539, 0x1, 0x0);
        gbc.writeMem(0x4f10, { 0xcb, 0x5e });
        gbc.writeMem(0x5539, { 0x19 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6a3a, gbc.sp());
        EXPECT(0x4f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 03A7
        gbc.setState(0x60bf, 0xf449, 0xfcf0, 0xea58, 0x8d66, 0x123c, 0x1, 0x0);
        gbc.writeMem(0x123c, { 0xf });
        gbc.writeMem(0x60bf, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf449, gbc.sp());
        EXPECT(0x60c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 03A8
        gbc.setState(0xdd5e, 0xfade, 0x3910, 0x3b51, 0xbc96, 0xf4a2, 0x0, 0x1);
        gbc.writeMem(0xdd5e, { 0xcb, 0x5e });
        gbc.writeMem(0xf4a2, { 0x73 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfade, gbc.sp());
        EXPECT(0xdd60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd5e));
        EXPECT(0x5e, gbc.readMem(0xdd5f));
        EXPECT(0x73, gbc.readMem(0xf4a2));
        // CB 5E 03A9
        gbc.setState(0x664b, 0x5707, 0x1da0, 0xd28b, 0x5c27, 0xaeda, 0x1, 0x0);
        gbc.writeMem(0x664b, { 0xcb, 0x5e });
        gbc.writeMem(0xaeda, { 0xa4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5707, gbc.sp());
        EXPECT(0x664d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xaeda));
        // CB 5E 03AA
        gbc.setState(0x670c, 0x7d6a, 0xcfd0, 0xefd8, 0x7145, 0x5929, 0x0, 0x1);
        gbc.writeMem(0x5929, { 0x65 });
        gbc.writeMem(0x670c, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7d6a, gbc.sp());
        EXPECT(0x670e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 03AB
        gbc.setState(0xe428, 0x8424, 0x2ca0, 0x3d26, 0x4116, 0xcf24, 0x1, 0x0);
        gbc.writeMem(0xcf24, { 0xde });
        gbc.writeMem(0xe428, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8424, gbc.sp());
        EXPECT(0xe42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xcf24));
        EXPECT(0xcb, gbc.readMem(0xe428));
        EXPECT(0x5e, gbc.readMem(0xe429));
        // CB 5E 03AC
        gbc.setState(0x56ef, 0x6541, 0x39b0, 0xc3ba, 0x288, 0xf54a, 0x0, 0x0);
        gbc.writeMem(0x56ef, { 0xcb, 0x5e });
        gbc.writeMem(0xf54a, { 0x68 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6541, gbc.sp());
        EXPECT(0x56f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xf54a));
        // CB 5E 03AD
        gbc.setState(0x96f1, 0xb21, 0xa480, 0x9723, 0xa09b, 0x78b4, 0x0, 0x1);
        gbc.writeMem(0x78b4, { 0xae });
        gbc.writeMem(0x96f1, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb21, gbc.sp());
        EXPECT(0x96f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f1));
        EXPECT(0x5e, gbc.readMem(0x96f2));
        // CB 5E 03AE
        gbc.setState(0x9537, 0xed93, 0xe6a0, 0x349, 0x4634, 0x9ff5, 0x1, 0x1);
        gbc.writeMem(0x9537, { 0xcb, 0x5e });
        gbc.writeMem(0x9ff5, { 0x2c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xed93, gbc.sp());
        EXPECT(0x9539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9537));
        EXPECT(0x5e, gbc.readMem(0x9538));
        EXPECT(0x2c, gbc.readMem(0x9ff5));
        // CB 5E 03B0
        gbc.setState(0x3639, 0x258, 0xe410, 0xdb37, 0xa6e6, 0x5033, 0x0, 0x0);
        gbc.writeMem(0x3639, { 0xcb, 0x5e });
        gbc.writeMem(0x5033, { 0xd6 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x258, gbc.sp());
        EXPECT(0x363b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 03B1
        gbc.setState(0x7294, 0x5547, 0x5fa0, 0xc539, 0x5974, 0x7040, 0x0, 0x0);
        gbc.writeMem(0x7040, { 0xe });
        gbc.writeMem(0x7294, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5547, gbc.sp());
        EXPECT(0x7296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 03B2
        gbc.setState(0xce53, 0x2b4b, 0x7a30, 0x85dc, 0x7523, 0x8b17, 0x0, 0x1);
        gbc.writeMem(0x8b17, { 0x8c });
        gbc.writeMem(0xce53, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2b4b, gbc.sp());
        EXPECT(0xce55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8b17));
        EXPECT(0xcb, gbc.readMem(0xce53));
        EXPECT(0x5e, gbc.readMem(0xce54));
        // CB 5E 03B3
        gbc.setState(0x1698, 0x7ea6, 0x10b0, 0x2b23, 0x3a48, 0x7775, 0x1, 0x0);
        gbc.writeMem(0x1698, { 0xcb, 0x5e });
        gbc.writeMem(0x7775, { 0x6d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7ea6, gbc.sp());
        EXPECT(0x169a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 03B4
        gbc.setState(0x9ce8, 0x8032, 0xe260, 0xff4c, 0xb461, 0x522e, 0x1, 0x1);
        gbc.writeMem(0x522e, { 0x6f });
        gbc.writeMem(0x9ce8, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8032, gbc.sp());
        EXPECT(0x9cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce8));
        EXPECT(0x5e, gbc.readMem(0x9ce9));
        // CB 5E 03B5
        gbc.setState(0x88de, 0xf9eb, 0x6590, 0xfebf, 0xca8d, 0xbf1b, 0x0, 0x0);
        gbc.writeMem(0x88de, { 0xcb, 0x5e });
        gbc.writeMem(0xbf1b, { 0x62 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf9eb, gbc.sp());
        EXPECT(0x88e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88de));
        EXPECT(0x5e, gbc.readMem(0x88df));
        EXPECT(0x62, gbc.readMem(0xbf1b));
        // CB 5E 03B6
        gbc.setState(0x53eb, 0xeb1e, 0x92d0, 0xd7b2, 0xa17d, 0x3b74, 0x1, 0x0);
        gbc.writeMem(0x3b74, { 0x6a });
        gbc.writeMem(0x53eb, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xeb1e, gbc.sp());
        EXPECT(0x53ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 03B7
        gbc.setState(0x25b2, 0x6f7c, 0x34b0, 0xd4e3, 0x6e5e, 0xee65, 0x0, 0x1);
        gbc.writeMem(0x25b2, { 0xcb, 0x5e });
        gbc.writeMem(0xee65, { 0x68 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6f7c, gbc.sp());
        EXPECT(0x25b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xee65));
        // CB 5E 03B8
        gbc.setState(0xa81d, 0xd925, 0xb590, 0x91d3, 0x11b4, 0x23f1, 0x0, 0x1);
        gbc.writeMem(0x23f1, { 0x32 });
        gbc.writeMem(0xa81d, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd925, gbc.sp());
        EXPECT(0xa81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81d));
        EXPECT(0x5e, gbc.readMem(0xa81e));
        // CB 5E 03B9
        gbc.setState(0x2924, 0x9cf6, 0x680, 0xef27, 0x956a, 0x7c01, 0x1, 0x0);
        gbc.writeMem(0x2924, { 0xcb, 0x5e });
        gbc.writeMem(0x7c01, { 0x3b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9cf6, gbc.sp());
        EXPECT(0x2926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 03BA
        gbc.setState(0x67cc, 0x37e9, 0x2470, 0x9b3c, 0xa4d9, 0xa14c, 0x1, 0x1);
        gbc.writeMem(0x67cc, { 0xcb, 0x5e });
        gbc.writeMem(0xa14c, { 0x62 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x37e9, gbc.sp());
        EXPECT(0x67ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xa14c));
        // CB 5E 03BB
        gbc.setState(0x21a5, 0xcc92, 0xe460, 0xdad3, 0x6d89, 0xfeb9, 0x1, 0x1);
        gbc.writeMem(0x21a5, { 0xcb, 0x5e });
        gbc.writeMem(0xfeb9, { 0x5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcc92, gbc.sp());
        EXPECT(0x21a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xfeb9));
        // CB 5E 03BC
        gbc.setState(0xd535, 0x23d7, 0xd990, 0x9719, 0x294a, 0x268c, 0x0, 0x0);
        gbc.writeMem(0x268c, { 0xe9 });
        gbc.writeMem(0xd535, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x23d7, gbc.sp());
        EXPECT(0xd537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd535));
        EXPECT(0x5e, gbc.readMem(0xd536));
        // CB 5E 03BD
        gbc.setState(0x104f, 0xed96, 0xb1b0, 0x331d, 0x2d4e, 0xdbf0, 0x1, 0x0);
        gbc.writeMem(0x104f, { 0xcb, 0x5e });
        gbc.writeMem(0xdbf0, { 0x1f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xed96, gbc.sp());
        EXPECT(0x1051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xdbf0));
        // CB 5E 03BE
        gbc.setState(0x8125, 0xd5d2, 0x64e0, 0xbb42, 0x72fa, 0x539c, 0x0, 0x0);
        gbc.writeMem(0x539c, { 0x70 });
        gbc.writeMem(0x8125, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd5d2, gbc.sp());
        EXPECT(0x8127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8125));
        EXPECT(0x5e, gbc.readMem(0x8126));
        // CB 5E 03BF
        gbc.setState(0xba1f, 0x2de6, 0x6a20, 0xf699, 0xbb6e, 0xe770, 0x0, 0x0);
        gbc.writeMem(0xba1f, { 0xcb, 0x5e });
        gbc.writeMem(0xe770, { 0xf0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2de6, gbc.sp());
        EXPECT(0xba21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1f));
        EXPECT(0x5e, gbc.readMem(0xba20));
        EXPECT(0xf0, gbc.readMem(0xe770));
        // CB 5E 03C0
        gbc.setState(0xbdd3, 0x17bd, 0x3e20, 0xebaa, 0x197a, 0x8661, 0x0, 0x1);
        gbc.writeMem(0x8661, { 0x7a });
        gbc.writeMem(0xbdd3, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x17bd, gbc.sp());
        EXPECT(0xbdd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8661));
        EXPECT(0xcb, gbc.readMem(0xbdd3));
        EXPECT(0x5e, gbc.readMem(0xbdd4));
        // CB 5E 03C1
        gbc.setState(0xbecd, 0x9991, 0xafb0, 0x3008, 0x544b, 0xa3e5, 0x1, 0x1);
        gbc.writeMem(0xa3e5, { 0xe6 });
        gbc.writeMem(0xbecd, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9991, gbc.sp());
        EXPECT(0xbecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa3e5));
        EXPECT(0xcb, gbc.readMem(0xbecd));
        EXPECT(0x5e, gbc.readMem(0xbece));
        // CB 5E 03C2
        gbc.setState(0xdd46, 0xbf91, 0x1670, 0xd20a, 0x148d, 0x6ef9, 0x1, 0x0);
        gbc.writeMem(0x6ef9, { 0x6d });
        gbc.writeMem(0xdd46, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbf91, gbc.sp());
        EXPECT(0xdd48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd46));
        EXPECT(0x5e, gbc.readMem(0xdd47));
        // CB 5E 03C3
        gbc.setState(0x8df8, 0x19aa, 0x3930, 0xf00e, 0x3cb6, 0xffa5, 0x0, 0x0);
        gbc.writeMem(0x8df8, { 0xcb, 0x5e });
        gbc.writeMem(0xffa5, { 0x9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x19aa, gbc.sp());
        EXPECT(0x8dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df8));
        EXPECT(0x5e, gbc.readMem(0x8df9));
        EXPECT(0x9, gbc.readMem(0xffa5));
        // CB 5E 03C4
        gbc.setState(0x6c64, 0x8dd3, 0x8a00, 0x4bd2, 0x3e9f, 0xafca, 0x1, 0x0);
        gbc.writeMem(0x6c64, { 0xcb, 0x5e });
        gbc.writeMem(0xafca, { 0x47 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8dd3, gbc.sp());
        EXPECT(0x6c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xafca));
        // CB 5E 03C6
        gbc.setState(0x3c9e, 0x34df, 0x8cd0, 0x1beb, 0x816c, 0x2364, 0x0, 0x1);
        gbc.writeMem(0x2364, { 0x65 });
        gbc.writeMem(0x3c9e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x34df, gbc.sp());
        EXPECT(0x3ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 03C7
        gbc.setState(0x29b3, 0x68ed, 0x6510, 0x7e5, 0x78e5, 0x39d2, 0x0, 0x1);
        gbc.writeMem(0x29b3, { 0xcb, 0x5e });
        gbc.writeMem(0x39d2, { 0xb2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x68ed, gbc.sp());
        EXPECT(0x29b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 03C8
        gbc.setState(0xadc4, 0xe363, 0x9740, 0xd4fa, 0xa66, 0xdcf1, 0x0, 0x1);
        gbc.writeMem(0xadc4, { 0xcb, 0x5e });
        gbc.writeMem(0xdcf1, { 0x3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe363, gbc.sp());
        EXPECT(0xadc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc4));
        EXPECT(0x5e, gbc.readMem(0xadc5));
        EXPECT(0x3, gbc.readMem(0xdcf1));
        // CB 5E 03C9
        gbc.setState(0x2aaf, 0xc3a2, 0xadf0, 0x10b5, 0x6d78, 0xdbce, 0x0, 0x1);
        gbc.writeMem(0x2aaf, { 0xcb, 0x5e });
        gbc.writeMem(0xdbce, { 0xe2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc3a2, gbc.sp());
        EXPECT(0x2ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdbce));
        // CB 5E 03CA
        gbc.setState(0x5332, 0x6898, 0x49f0, 0xb75e, 0x4cac, 0xfe2b, 0x1, 0x0);
        gbc.writeMem(0x5332, { 0xcb, 0x5e });
        gbc.writeMem(0xfe2b, { 0xd1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6898, gbc.sp());
        EXPECT(0x5334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xfe2b));
        // CB 5E 03CB
        gbc.setState(0xab59, 0x3001, 0x1e0, 0xec6f, 0xa3a6, 0x6323, 0x1, 0x1);
        gbc.writeMem(0x6323, { 0x3e });
        gbc.writeMem(0xab59, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3001, gbc.sp());
        EXPECT(0xab5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab59));
        EXPECT(0x5e, gbc.readMem(0xab5a));
        // CB 5E 03CC
        gbc.setState(0x627a, 0x27a8, 0xfb50, 0xb34e, 0x7217, 0x1b42, 0x0, 0x1);
        gbc.writeMem(0x1b42, { 0xe9 });
        gbc.writeMem(0x627a, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x27a8, gbc.sp());
        EXPECT(0x627c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 03CD
        gbc.setState(0xb3c2, 0x13e8, 0x4380, 0xb8a4, 0xe37e, 0x971f, 0x0, 0x1);
        gbc.writeMem(0x971f, { 0xb3 });
        gbc.writeMem(0xb3c2, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x13e8, gbc.sp());
        EXPECT(0xb3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x971f));
        EXPECT(0xcb, gbc.readMem(0xb3c2));
        EXPECT(0x5e, gbc.readMem(0xb3c3));
        // CB 5E 03CE
        gbc.setState(0x9eb7, 0x1360, 0xef0, 0xe2db, 0x1035, 0x6dd1, 0x0, 0x0);
        gbc.writeMem(0x6dd1, { 0x73 });
        gbc.writeMem(0x9eb7, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1360, gbc.sp());
        EXPECT(0x9eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb7));
        EXPECT(0x5e, gbc.readMem(0x9eb8));
        // CB 5E 03CF
        gbc.setState(0xbe9e, 0xad5f, 0x4dc0, 0x6d70, 0x8908, 0x62c2, 0x0, 0x1);
        gbc.writeMem(0x62c2, { 0x22 });
        gbc.writeMem(0xbe9e, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xad5f, gbc.sp());
        EXPECT(0xbea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe9e));
        EXPECT(0x5e, gbc.readMem(0xbe9f));
        // CB 5E 03D0
        gbc.setState(0x5c79, 0xcdce, 0xa270, 0xe83e, 0x8c5c, 0xaff7, 0x1, 0x1);
        gbc.writeMem(0x5c79, { 0xcb, 0x5e });
        gbc.writeMem(0xaff7, { 0x4a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcdce, gbc.sp());
        EXPECT(0x5c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xaff7));
        // CB 5E 03D1
        gbc.setState(0x2d9c, 0xccf7, 0x1c80, 0x9de2, 0x74bb, 0x66d3, 0x1, 0x0);
        gbc.writeMem(0x2d9c, { 0xcb, 0x5e });
        gbc.writeMem(0x66d3, { 0x70 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xccf7, gbc.sp());
        EXPECT(0x2d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 03D2
        gbc.setState(0xb2b7, 0x2fb6, 0x9ab0, 0x93b6, 0xb4df, 0xeda, 0x0, 0x1);
        gbc.writeMem(0xeda, { 0x5c });
        gbc.writeMem(0xb2b7, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2fb6, gbc.sp());
        EXPECT(0xb2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b7));
        EXPECT(0x5e, gbc.readMem(0xb2b8));
        // CB 5E 03D4
        gbc.setState(0x4b40, 0x1604, 0x7720, 0x431d, 0xd41f, 0xc829, 0x1, 0x0);
        gbc.writeMem(0x4b40, { 0xcb, 0x5e });
        gbc.writeMem(0xc829, { 0x24 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1604, gbc.sp());
        EXPECT(0x4b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xc829));
        // CB 5E 03D5
        gbc.setState(0x3142, 0x111, 0xcf40, 0x2b03, 0xb3a0, 0x11bb, 0x0, 0x1);
        gbc.writeMem(0x11bb, { 0x75 });
        gbc.writeMem(0x3142, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x111, gbc.sp());
        EXPECT(0x3144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 03D6
        gbc.setState(0x5086, 0xae5a, 0x77c0, 0x58a3, 0x9042, 0xd4e9, 0x1, 0x1);
        gbc.writeMem(0x5086, { 0xcb, 0x5e });
        gbc.writeMem(0xd4e9, { 0x8c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xae5a, gbc.sp());
        EXPECT(0x5088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd4e9));
        // CB 5E 03D7
        gbc.setState(0xb5e8, 0xd651, 0xd6f0, 0x6bfd, 0xe1f0, 0x5eee, 0x1, 0x1);
        gbc.writeMem(0x5eee, { 0x46 });
        gbc.writeMem(0xb5e8, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd651, gbc.sp());
        EXPECT(0xb5ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e8));
        EXPECT(0x5e, gbc.readMem(0xb5e9));
        // CB 5E 03D8
        gbc.setState(0xd6f1, 0x6908, 0xa870, 0xad56, 0xd8e1, 0xeadb, 0x1, 0x1);
        gbc.writeMem(0xd6f1, { 0xcb, 0x5e });
        gbc.writeMem(0xeadb, { 0x13 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6908, gbc.sp());
        EXPECT(0xd6f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f1));
        EXPECT(0x5e, gbc.readMem(0xd6f2));
        EXPECT(0x13, gbc.readMem(0xeadb));
        // CB 5E 03DA
        gbc.setState(0xb261, 0x7598, 0x2d0, 0xdea2, 0x4573, 0xde68, 0x0, 0x0);
        gbc.writeMem(0xb261, { 0xcb, 0x5e });
        gbc.writeMem(0xde68, { 0xd9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7598, gbc.sp());
        EXPECT(0xb263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb261));
        EXPECT(0x5e, gbc.readMem(0xb262));
        EXPECT(0xd9, gbc.readMem(0xde68));
        // CB 5E 03DB
        gbc.setState(0x8263, 0xfaaa, 0xb350, 0xc442, 0x8561, 0xd1ea, 0x1, 0x1);
        gbc.writeMem(0x8263, { 0xcb, 0x5e });
        gbc.writeMem(0xd1ea, { 0x3c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfaaa, gbc.sp());
        EXPECT(0x8265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8263));
        EXPECT(0x5e, gbc.readMem(0x8264));
        EXPECT(0x3c, gbc.readMem(0xd1ea));
        // CB 5E 03DC
        gbc.setState(0xe275, 0x1557, 0xee30, 0xa909, 0x8f2d, 0x8d3c, 0x1, 0x0);
        gbc.writeMem(0x8d3c, { 0x8e });
        gbc.writeMem(0xe275, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1557, gbc.sp());
        EXPECT(0xe277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x8d3c));
        EXPECT(0xcb, gbc.readMem(0xe275));
        EXPECT(0x5e, gbc.readMem(0xe276));
        // CB 5E 03DD
        gbc.setState(0xdd59, 0xfe28, 0xdae0, 0xdd34, 0xd98d, 0x3c80, 0x0, 0x0);
        gbc.writeMem(0x3c80, { 0x7e });
        gbc.writeMem(0xdd59, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfe28, gbc.sp());
        EXPECT(0xdd5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd59));
        EXPECT(0x5e, gbc.readMem(0xdd5a));
        // CB 5E 03DE
        gbc.setState(0xba51, 0x9485, 0x7090, 0x14e1, 0x5f80, 0x61d6, 0x1, 0x0);
        gbc.writeMem(0x61d6, { 0x9c });
        gbc.writeMem(0xba51, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9485, gbc.sp());
        EXPECT(0xba53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba51));
        EXPECT(0x5e, gbc.readMem(0xba52));
        // CB 5E 03DF
        gbc.setState(0x4c21, 0xc0dd, 0xcc30, 0x2a9c, 0x42d6, 0x603e, 0x1, 0x1);
        gbc.writeMem(0x4c21, { 0xcb, 0x5e });
        gbc.writeMem(0x603e, { 0xa8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc0dd, gbc.sp());
        EXPECT(0x4c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 03E0
        gbc.setState(0xd492, 0x84d9, 0xca40, 0x2b38, 0xf598, 0x5592, 0x0, 0x0);
        gbc.writeMem(0x5592, { 0xa2 });
        gbc.writeMem(0xd492, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x84d9, gbc.sp());
        EXPECT(0xd494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd492));
        EXPECT(0x5e, gbc.readMem(0xd493));
        // CB 5E 03E2
        gbc.setState(0x22f5, 0x8564, 0x2770, 0x4376, 0x704b, 0x779c, 0x0, 0x1);
        gbc.writeMem(0x22f5, { 0xcb, 0x5e });
        gbc.writeMem(0x779c, { 0xd1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8564, gbc.sp());
        EXPECT(0x22f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 03E3
        gbc.setState(0x170b, 0xd1fc, 0xce30, 0xcf89, 0x9c64, 0x3464, 0x0, 0x0);
        gbc.writeMem(0x170b, { 0xcb, 0x5e });
        gbc.writeMem(0x3464, { 0x85 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd1fc, gbc.sp());
        EXPECT(0x170d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5E 03E4
        gbc.setState(0x5ee3, 0xddbb, 0xce20, 0xed94, 0x83a1, 0x57b5, 0x1, 0x0);
        gbc.writeMem(0x57b5, { 0x24 });
        gbc.writeMem(0x5ee3, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xddbb, gbc.sp());
        EXPECT(0x5ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5E 03E5
        gbc.setState(0xa377, 0x1a1b, 0xf250, 0x850d, 0x3dd, 0xc6e8, 0x0, 0x0);
        gbc.writeMem(0xa377, { 0xcb, 0x5e });
        gbc.writeMem(0xc6e8, { 0xf1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1a1b, gbc.sp());
        EXPECT(0xa379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa377));
        EXPECT(0x5e, gbc.readMem(0xa378));
        EXPECT(0xf1, gbc.readMem(0xc6e8));
        // CB 5E 03E6
        gbc.setState(0xbd33, 0x9571, 0x5190, 0xd086, 0xe9ac, 0x5891, 0x0, 0x0);
        gbc.writeMem(0x5891, { 0x5a });
        gbc.writeMem(0xbd33, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9571, gbc.sp());
        EXPECT(0xbd35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd33));
        EXPECT(0x5e, gbc.readMem(0xbd34));
        // CB 5E 03E7
        gbc.setState(0xcfa8, 0x9c97, 0x8960, 0xd7c8, 0x451, 0xa456, 0x1, 0x1);
        gbc.writeMem(0xa456, { 0xfe });
        gbc.writeMem(0xcfa8, { 0xcb, 0x5e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9c97, gbc.sp());
        EXPECT(0xcfaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa456));
        EXPECT(0xcb, gbc.readMem(0xcfa8));
        EXPECT(0x5e, gbc.readMem(0xcfa9));
    }
