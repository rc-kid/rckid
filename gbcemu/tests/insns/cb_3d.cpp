#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_3d)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_3d) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 3D 0000
        gbc.setState(0x2404, 0x2184, 0x5b10, 0x6474, 0x6014, 0x37ec, 0x0, 0x1);
        gbc.writeMem(0x2404, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2184);
        EXPECT(gbc.pc(), 0x2406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0001
        gbc.setState(0x3507, 0x3a27, 0xd800, 0x1020, 0x66c1, 0x6127, 0x0, 0x0);
        gbc.writeMem(0x3507, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3a27);
        EXPECT(gbc.pc(), 0x3509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0002
        gbc.setState(0x4b5f, 0x384e, 0xb0e0, 0x238e, 0xbf16, 0x9a9d, 0x0, 0x0);
        gbc.writeMem(0x4b5f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x384e);
        EXPECT(gbc.pc(), 0x4b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0003
        gbc.setState(0xd544, 0xf66, 0x7360, 0xe693, 0x44dc, 0xe68, 0x1, 0x1);
        gbc.writeMem(0xd544, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf66);
        EXPECT(gbc.pc(), 0xd546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd544), 0xcb);
        EXPECT(gbc.readMem(0xd545), 0x3d);
        // CB 3D 0004
        gbc.setState(0x2bc2, 0x7a9, 0x3750, 0x5ece, 0x29cc, 0xb76a, 0x1, 0x0);
        gbc.writeMem(0x2bc2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7a9);
        EXPECT(gbc.pc(), 0x2bc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0005
        gbc.setState(0x87fa, 0x131c, 0x6f70, 0x8ffc, 0x8e59, 0x70ee, 0x0, 0x0);
        gbc.writeMem(0x87fa, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x131c);
        EXPECT(gbc.pc(), 0x87fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87fa), 0xcb);
        EXPECT(gbc.readMem(0x87fb), 0x3d);
        // CB 3D 0006
        gbc.setState(0x5ffe, 0xdce4, 0xb900, 0x117, 0x217, 0xb72a, 0x1, 0x1);
        gbc.writeMem(0x5ffe, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xdce4);
        EXPECT(gbc.pc(), 0x6000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0007
        gbc.setState(0x7479, 0xb327, 0x6cf0, 0x751f, 0xbcb4, 0x1c82, 0x1, 0x0);
        gbc.writeMem(0x7479, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb327);
        EXPECT(gbc.pc(), 0x747b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0008
        gbc.setState(0x4020, 0xe611, 0xafa0, 0x6600, 0x4d47, 0x1214, 0x0, 0x0);
        gbc.writeMem(0x4020, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe611);
        EXPECT(gbc.pc(), 0x4022);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0009
        gbc.setState(0x55b5, 0x7bec, 0x6570, 0xef19, 0x12ba, 0x60c9, 0x0, 0x0);
        gbc.writeMem(0x55b5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7bec);
        EXPECT(gbc.pc(), 0x55b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 000A
        gbc.setState(0xc33a, 0x64, 0xd9d0, 0xfe87, 0x55db, 0x3aec, 0x1, 0x1);
        gbc.writeMem(0xc33a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x64);
        EXPECT(gbc.pc(), 0xc33c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc33a), 0xcb);
        EXPECT(gbc.readMem(0xc33b), 0x3d);
        // CB 3D 000B
        gbc.setState(0x4a5d, 0x885e, 0x8ee0, 0x76d3, 0xe250, 0xf907, 0x0, 0x1);
        gbc.writeMem(0x4a5d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x885e);
        EXPECT(gbc.pc(), 0x4a5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 000C
        gbc.setState(0x8b32, 0x611, 0x2ca0, 0x7bef, 0x1ba0, 0xaef5, 0x1, 0x1);
        gbc.writeMem(0x8b32, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x611);
        EXPECT(gbc.pc(), 0x8b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b32), 0xcb);
        EXPECT(gbc.readMem(0x8b33), 0x3d);
        // CB 3D 000D
        gbc.setState(0x866c, 0x3d98, 0xd8b0, 0xa03b, 0x1d23, 0xea83, 0x0, 0x0);
        gbc.writeMem(0x866c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3d98);
        EXPECT(gbc.pc(), 0x866e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x866c), 0xcb);
        EXPECT(gbc.readMem(0x866d), 0x3d);
        // CB 3D 000E
        gbc.setState(0xce89, 0xf460, 0x6290, 0xdb84, 0x6751, 0xd394, 0x0, 0x0);
        gbc.writeMem(0xce89, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf460);
        EXPECT(gbc.pc(), 0xce8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce89), 0xcb);
        EXPECT(gbc.readMem(0xce8a), 0x3d);
        // CB 3D 000F
        gbc.setState(0x17d, 0x9d3a, 0x8440, 0x5790, 0x9094, 0x2091, 0x1, 0x1);
        gbc.writeMem(0x17d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9d3a);
        EXPECT(gbc.pc(), 0x17f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0011
        gbc.setState(0x7d6f, 0x2e0c, 0x11f0, 0xf17f, 0xddac, 0x2dfd, 0x1, 0x1);
        gbc.writeMem(0x7d6f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2e0c);
        EXPECT(gbc.pc(), 0x7d71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0012
        gbc.setState(0x87c7, 0xc7ea, 0x7b0, 0x7ee8, 0x8417, 0xd44, 0x0, 0x0);
        gbc.writeMem(0x87c7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc7ea);
        EXPECT(gbc.pc(), 0x87c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c7), 0xcb);
        EXPECT(gbc.readMem(0x87c8), 0x3d);
        // CB 3D 0013
        gbc.setState(0xef3, 0x1588, 0xf730, 0x92f8, 0x9eb, 0x93cc, 0x0, 0x0);
        gbc.writeMem(0xef3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1588);
        EXPECT(gbc.pc(), 0xef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0014
        gbc.setState(0x9cfb, 0xa8ff, 0x31f0, 0x4f63, 0xc90, 0x365b, 0x0, 0x1);
        gbc.writeMem(0x9cfb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa8ff);
        EXPECT(gbc.pc(), 0x9cfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cfb), 0xcb);
        EXPECT(gbc.readMem(0x9cfc), 0x3d);
        // CB 3D 0015
        gbc.setState(0xcd2e, 0xe971, 0xdd0, 0x526f, 0x7174, 0x98b3, 0x1, 0x1);
        gbc.writeMem(0xcd2e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe971);
        EXPECT(gbc.pc(), 0xcd30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd2e), 0xcb);
        EXPECT(gbc.readMem(0xcd2f), 0x3d);
        // CB 3D 0016
        gbc.setState(0x9b8c, 0xb313, 0xbbd0, 0x33b4, 0x4f6f, 0x4abc, 0x1, 0x0);
        gbc.writeMem(0x9b8c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb313);
        EXPECT(gbc.pc(), 0x9b8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b8c), 0xcb);
        EXPECT(gbc.readMem(0x9b8d), 0x3d);
        // CB 3D 0017
        gbc.setState(0x2a6d, 0x91eb, 0x490, 0xe009, 0x163, 0x790f, 0x1, 0x0);
        gbc.writeMem(0x2a6d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x91eb);
        EXPECT(gbc.pc(), 0x2a6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0018
        gbc.setState(0xd632, 0x4368, 0xb470, 0xf3ec, 0x3251, 0xf5cf, 0x0, 0x0);
        gbc.writeMem(0xd632, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4368);
        EXPECT(gbc.pc(), 0xd634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd632), 0xcb);
        EXPECT(gbc.readMem(0xd633), 0x3d);
        // CB 3D 0019
        gbc.setState(0x7b55, 0x23b9, 0x7a20, 0x2149, 0xfa89, 0xf187, 0x0, 0x1);
        gbc.writeMem(0x7b55, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x23b9);
        EXPECT(gbc.pc(), 0x7b57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 001A
        gbc.setState(0x8957, 0xe79, 0xf6a0, 0xe3b0, 0x69ac, 0x4e5f, 0x1, 0x1);
        gbc.writeMem(0x8957, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe79);
        EXPECT(gbc.pc(), 0x8959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8957), 0xcb);
        EXPECT(gbc.readMem(0x8958), 0x3d);
        // CB 3D 001B
        gbc.setState(0x4d9, 0x6acd, 0x6040, 0xfa37, 0xc70b, 0x5431, 0x0, 0x0);
        gbc.writeMem(0x4d9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6acd);
        EXPECT(gbc.pc(), 0x4db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 001C
        gbc.setState(0xc911, 0x9034, 0xb280, 0x2020, 0x73eb, 0xbcd, 0x0, 0x0);
        gbc.writeMem(0xc911, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9034);
        EXPECT(gbc.pc(), 0xc913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc911), 0xcb);
        EXPECT(gbc.readMem(0xc912), 0x3d);
        // CB 3D 001D
        gbc.setState(0x1fcf, 0x5777, 0xe780, 0x2da4, 0x2687, 0x2da, 0x0, 0x0);
        gbc.writeMem(0x1fcf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5777);
        EXPECT(gbc.pc(), 0x1fd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 001E
        gbc.setState(0x95fd, 0xc6c3, 0x7900, 0xce0a, 0x1c91, 0xc5b1, 0x0, 0x1);
        gbc.writeMem(0x95fd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc6c3);
        EXPECT(gbc.pc(), 0x95ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95fd), 0xcb);
        EXPECT(gbc.readMem(0x95fe), 0x3d);
        // CB 3D 001F
        gbc.setState(0x8f33, 0x4845, 0x81a0, 0x1fff, 0xd9aa, 0x80d5, 0x0, 0x1);
        gbc.writeMem(0x8f33, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4845);
        EXPECT(gbc.pc(), 0x8f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f33), 0xcb);
        EXPECT(gbc.readMem(0x8f34), 0x3d);
        // CB 3D 0020
        gbc.setState(0x51f8, 0xcc7c, 0x3b0, 0x9c10, 0xfb21, 0x72f, 0x1, 0x0);
        gbc.writeMem(0x51f8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xcc7c);
        EXPECT(gbc.pc(), 0x51fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0021
        gbc.setState(0x9de0, 0xe90f, 0x2740, 0xbcba, 0xf72b, 0xe89a, 0x1, 0x0);
        gbc.writeMem(0x9de0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe90f);
        EXPECT(gbc.pc(), 0x9de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9de0), 0xcb);
        EXPECT(gbc.readMem(0x9de1), 0x3d);
        // CB 3D 0022
        gbc.setState(0x5753, 0xa582, 0x2f80, 0x25d6, 0xe32a, 0x2672, 0x0, 0x1);
        gbc.writeMem(0x5753, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa582);
        EXPECT(gbc.pc(), 0x5755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0023
        gbc.setState(0xbbd8, 0x1d29, 0xcec0, 0x93f2, 0xff97, 0xf5c9, 0x1, 0x0);
        gbc.writeMem(0xbbd8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1d29);
        EXPECT(gbc.pc(), 0xbbda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbd8), 0xcb);
        EXPECT(gbc.readMem(0xbbd9), 0x3d);
        // CB 3D 0024
        gbc.setState(0x5704, 0x4b51, 0x8730, 0xb0b2, 0xe011, 0x8f85, 0x1, 0x1);
        gbc.writeMem(0x5704, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4b51);
        EXPECT(gbc.pc(), 0x5706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0025
        gbc.setState(0x1848, 0x58cf, 0x8ab0, 0x2782, 0xd5ef, 0x83a3, 0x0, 0x0);
        gbc.writeMem(0x1848, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x58cf);
        EXPECT(gbc.pc(), 0x184a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0026
        gbc.setState(0xa0f2, 0x9298, 0x3520, 0x9982, 0x458a, 0x415b, 0x0, 0x1);
        gbc.writeMem(0xa0f2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9298);
        EXPECT(gbc.pc(), 0xa0f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f2), 0xcb);
        EXPECT(gbc.readMem(0xa0f3), 0x3d);
        // CB 3D 0027
        gbc.setState(0x41df, 0x3212, 0xbb80, 0x9ed7, 0x760a, 0x7ac, 0x0, 0x1);
        gbc.writeMem(0x41df, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3212);
        EXPECT(gbc.pc(), 0x41e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0028
        gbc.setState(0xcfc3, 0xc1e1, 0xe810, 0x5e5e, 0x2ae7, 0x5667, 0x0, 0x0);
        gbc.writeMem(0xcfc3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc1e1);
        EXPECT(gbc.pc(), 0xcfc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfc3), 0xcb);
        EXPECT(gbc.readMem(0xcfc4), 0x3d);
        // CB 3D 0029
        gbc.setState(0x8ce1, 0x6974, 0x7870, 0x8523, 0x4956, 0x87ff, 0x1, 0x0);
        gbc.writeMem(0x8ce1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6974);
        EXPECT(gbc.pc(), 0x8ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce1), 0xcb);
        EXPECT(gbc.readMem(0x8ce2), 0x3d);
        // CB 3D 002A
        gbc.setState(0xd95e, 0x603e, 0x61f0, 0x69b0, 0xc77a, 0x841e, 0x1, 0x0);
        gbc.writeMem(0xd95e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x603e);
        EXPECT(gbc.pc(), 0xd960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd95e), 0xcb);
        EXPECT(gbc.readMem(0xd95f), 0x3d);
        // CB 3D 002B
        gbc.setState(0xc916, 0xc5d0, 0x7b80, 0x76fc, 0x3c2d, 0x2daa, 0x0, 0x0);
        gbc.writeMem(0xc916, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc5d0);
        EXPECT(gbc.pc(), 0xc918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc916), 0xcb);
        EXPECT(gbc.readMem(0xc917), 0x3d);
        // CB 3D 002C
        gbc.setState(0x243d, 0x9d18, 0x2b50, 0xcf24, 0x12f4, 0xb4f5, 0x0, 0x0);
        gbc.writeMem(0x243d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9d18);
        EXPECT(gbc.pc(), 0x243f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 002D
        gbc.setState(0xc01f, 0xb72a, 0x2720, 0xacef, 0x5ca2, 0xa351, 0x1, 0x1);
        gbc.writeMem(0xc01f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb72a);
        EXPECT(gbc.pc(), 0xc021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc01f), 0xcb);
        EXPECT(gbc.readMem(0xc020), 0x3d);
        // CB 3D 002E
        gbc.setState(0x7d1f, 0x57b9, 0x5a20, 0x7f1e, 0xfe17, 0xe6b2, 0x1, 0x1);
        gbc.writeMem(0x7d1f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x57b9);
        EXPECT(gbc.pc(), 0x7d21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0030
        gbc.setState(0x8b70, 0xc26, 0xe940, 0xa4f9, 0x50d9, 0xddb1, 0x0, 0x0);
        gbc.writeMem(0x8b70, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc26);
        EXPECT(gbc.pc(), 0x8b72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b70), 0xcb);
        EXPECT(gbc.readMem(0x8b71), 0x3d);
        // CB 3D 0031
        gbc.setState(0x602f, 0x26e5, 0x9540, 0x9a8b, 0xc41c, 0x179e, 0x1, 0x1);
        gbc.writeMem(0x602f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x26e5);
        EXPECT(gbc.pc(), 0x6031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0032
        gbc.setState(0xd8b7, 0xf77b, 0x9e20, 0xc80, 0x42b0, 0x1b18, 0x1, 0x0);
        gbc.writeMem(0xd8b7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf77b);
        EXPECT(gbc.pc(), 0xd8b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8b7), 0xcb);
        EXPECT(gbc.readMem(0xd8b8), 0x3d);
        // CB 3D 0033
        gbc.setState(0xb806, 0x714b, 0x5bb0, 0x3632, 0xf4df, 0xabed, 0x0, 0x1);
        gbc.writeMem(0xb806, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x714b);
        EXPECT(gbc.pc(), 0xb808);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb806), 0xcb);
        EXPECT(gbc.readMem(0xb807), 0x3d);
        // CB 3D 0034
        gbc.setState(0x8c27, 0x20a9, 0x2be0, 0x6115, 0x531b, 0x1fea, 0x0, 0x0);
        gbc.writeMem(0x8c27, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x20a9);
        EXPECT(gbc.pc(), 0x8c29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c27), 0xcb);
        EXPECT(gbc.readMem(0x8c28), 0x3d);
        // CB 3D 0035
        gbc.setState(0xe354, 0x8ac6, 0xe680, 0xad16, 0x3cab, 0x399, 0x0, 0x1);
        gbc.writeMem(0xe354, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8ac6);
        EXPECT(gbc.pc(), 0xe356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe354), 0xcb);
        EXPECT(gbc.readMem(0xe355), 0x3d);
        // CB 3D 0036
        gbc.setState(0x90d, 0x795f, 0x8ec0, 0x298a, 0x73df, 0x2121, 0x0, 0x0);
        gbc.writeMem(0x90d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x795f);
        EXPECT(gbc.pc(), 0x90f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0037
        gbc.setState(0xc713, 0x8829, 0xaa30, 0x80cf, 0xfcd8, 0x6532, 0x0, 0x1);
        gbc.writeMem(0xc713, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8829);
        EXPECT(gbc.pc(), 0xc715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc713), 0xcb);
        EXPECT(gbc.readMem(0xc714), 0x3d);
        // CB 3D 0038
        gbc.setState(0x33ce, 0x5d48, 0xa70, 0xc1bf, 0x74f3, 0xdb3f, 0x1, 0x0);
        gbc.writeMem(0x33ce, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5d48);
        EXPECT(gbc.pc(), 0x33d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0039
        gbc.setState(0x7048, 0xd95d, 0x9830, 0x82ed, 0x4c4, 0xea9c, 0x0, 0x0);
        gbc.writeMem(0x7048, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd95d);
        EXPECT(gbc.pc(), 0x704a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 003A
        gbc.setState(0x3048, 0xe618, 0x35a0, 0x9684, 0xee31, 0x58a7, 0x1, 0x0);
        gbc.writeMem(0x3048, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe618);
        EXPECT(gbc.pc(), 0x304a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 003B
        gbc.setState(0xc0d0, 0x1ad8, 0x6770, 0xd1b5, 0xc7d0, 0x641e, 0x0, 0x1);
        gbc.writeMem(0xc0d0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1ad8);
        EXPECT(gbc.pc(), 0xc0d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0d0), 0xcb);
        EXPECT(gbc.readMem(0xc0d1), 0x3d);
        // CB 3D 003C
        gbc.setState(0x3dc3, 0x4f6b, 0xf650, 0xe9eb, 0xfbba, 0xbda8, 0x1, 0x1);
        gbc.writeMem(0x3dc3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4f6b);
        EXPECT(gbc.pc(), 0x3dc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 003D
        gbc.setState(0x5c7b, 0xf627, 0xf040, 0xa23a, 0xd9dc, 0xec2d, 0x1, 0x1);
        gbc.writeMem(0x5c7b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf627);
        EXPECT(gbc.pc(), 0x5c7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 003E
        gbc.setState(0xef60, 0x6f54, 0xe700, 0xc43e, 0xcd7, 0x59e8, 0x0, 0x1);
        gbc.writeMem(0xef60, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6f54);
        EXPECT(gbc.pc(), 0xef62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef60), 0xcb);
        EXPECT(gbc.readMem(0xef61), 0x3d);
        // CB 3D 003F
        gbc.setState(0xea99, 0x5bac, 0xd580, 0x8820, 0xaee9, 0x5ad8, 0x0, 0x1);
        gbc.writeMem(0xea99, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5bac);
        EXPECT(gbc.pc(), 0xea9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea99), 0xcb);
        EXPECT(gbc.readMem(0xea9a), 0x3d);
        // CB 3D 0040
        gbc.setState(0xe547, 0x7a67, 0x2540, 0x38e8, 0x4251, 0xe52e, 0x0, 0x1);
        gbc.writeMem(0xe547, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7a67);
        EXPECT(gbc.pc(), 0xe549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe547), 0xcb);
        EXPECT(gbc.readMem(0xe548), 0x3d);
        // CB 3D 0041
        gbc.setState(0xcd2e, 0xbe26, 0x9950, 0x95c2, 0x749c, 0x76dc, 0x1, 0x0);
        gbc.writeMem(0xcd2e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbe26);
        EXPECT(gbc.pc(), 0xcd30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd2e), 0xcb);
        EXPECT(gbc.readMem(0xcd2f), 0x3d);
        // CB 3D 0042
        gbc.setState(0x7603, 0xa0d8, 0x1590, 0x69fe, 0x385a, 0x32e0, 0x0, 0x0);
        gbc.writeMem(0x7603, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa0d8);
        EXPECT(gbc.pc(), 0x7605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0044
        gbc.setState(0x6429, 0x96a8, 0xfbc0, 0x302a, 0xc4cb, 0xcffd, 0x0, 0x1);
        gbc.writeMem(0x6429, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x96a8);
        EXPECT(gbc.pc(), 0x642b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0045
        gbc.setState(0x5aa2, 0x8ebb, 0x3780, 0xf29, 0xadc7, 0x883a, 0x0, 0x0);
        gbc.writeMem(0x5aa2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8ebb);
        EXPECT(gbc.pc(), 0x5aa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0046
        gbc.setState(0x2bee, 0x17e1, 0xcdc0, 0x1c2a, 0xc475, 0x34aa, 0x1, 0x1);
        gbc.writeMem(0x2bee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x17e1);
        EXPECT(gbc.pc(), 0x2bf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0047
        gbc.setState(0x9d8a, 0x482c, 0x8190, 0x75dd, 0x9b0, 0xe866, 0x1, 0x0);
        gbc.writeMem(0x9d8a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x482c);
        EXPECT(gbc.pc(), 0x9d8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d8a), 0xcb);
        EXPECT(gbc.readMem(0x9d8b), 0x3d);
        // CB 3D 0048
        gbc.setState(0x4d77, 0x749, 0xbfe0, 0x5522, 0xc6ea, 0x987d, 0x0, 0x1);
        gbc.writeMem(0x4d77, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x749);
        EXPECT(gbc.pc(), 0x4d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0049
        gbc.setState(0x30f0, 0x338c, 0xb1a0, 0xbc1f, 0x5337, 0xf5b8, 0x0, 0x0);
        gbc.writeMem(0x30f0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x338c);
        EXPECT(gbc.pc(), 0x30f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 004A
        gbc.setState(0x791a, 0x3193, 0x8650, 0x94c4, 0x77b8, 0xc255, 0x0, 0x0);
        gbc.writeMem(0x791a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3193);
        EXPECT(gbc.pc(), 0x791c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 004B
        gbc.setState(0x25ac, 0x464, 0xc8e0, 0xa56e, 0xc7a8, 0x6667, 0x1, 0x1);
        gbc.writeMem(0x25ac, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x464);
        EXPECT(gbc.pc(), 0x25ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 004C
        gbc.setState(0x7813, 0x5cda, 0xd3a0, 0xa2eb, 0xc90e, 0xe61e, 0x0, 0x0);
        gbc.writeMem(0x7813, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5cda);
        EXPECT(gbc.pc(), 0x7815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 004D
        gbc.setState(0xbde7, 0xf179, 0x2030, 0x3f12, 0x1bf1, 0x2541, 0x0, 0x1);
        gbc.writeMem(0xbde7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf179);
        EXPECT(gbc.pc(), 0xbde9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde7), 0xcb);
        EXPECT(gbc.readMem(0xbde8), 0x3d);
        // CB 3D 004E
        gbc.setState(0xdd11, 0xadc6, 0x3ad0, 0x4472, 0x1740, 0xf053, 0x1, 0x1);
        gbc.writeMem(0xdd11, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xadc6);
        EXPECT(gbc.pc(), 0xdd13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd11), 0xcb);
        EXPECT(gbc.readMem(0xdd12), 0x3d);
        // CB 3D 004F
        gbc.setState(0x6ab6, 0x6f98, 0xbf60, 0xb1e8, 0x63f5, 0xaf69, 0x0, 0x1);
        gbc.writeMem(0x6ab6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6f98);
        EXPECT(gbc.pc(), 0x6ab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0050
        gbc.setState(0x1212, 0xf55a, 0x4cb0, 0x69f1, 0x2d8a, 0x3020, 0x1, 0x1);
        gbc.writeMem(0x1212, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf55a);
        EXPECT(gbc.pc(), 0x1214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0051
        gbc.setState(0xe973, 0x342c, 0xee40, 0xe504, 0x19ba, 0x602, 0x0, 0x1);
        gbc.writeMem(0xe973, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x342c);
        EXPECT(gbc.pc(), 0xe975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe973), 0xcb);
        EXPECT(gbc.readMem(0xe974), 0x3d);
        // CB 3D 0052
        gbc.setState(0xdf07, 0x71d9, 0xad20, 0x449d, 0x305a, 0x7075, 0x1, 0x1);
        gbc.writeMem(0xdf07, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x71d9);
        EXPECT(gbc.pc(), 0xdf09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf07), 0xcb);
        EXPECT(gbc.readMem(0xdf08), 0x3d);
        // CB 3D 0053
        gbc.setState(0x6b75, 0x2703, 0xe3e0, 0x9da, 0x22, 0xcd00, 0x0, 0x0);
        gbc.writeMem(0x6b75, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2703);
        EXPECT(gbc.pc(), 0x6b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0054
        gbc.setState(0xc5fb, 0x9e77, 0xced0, 0x9893, 0x2ba6, 0x7376, 0x1, 0x0);
        gbc.writeMem(0xc5fb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9e77);
        EXPECT(gbc.pc(), 0xc5fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5fb), 0xcb);
        EXPECT(gbc.readMem(0xc5fc), 0x3d);
        // CB 3D 0055
        gbc.setState(0xaaa8, 0xac78, 0x9340, 0x3f99, 0x2f78, 0xfb47, 0x1, 0x1);
        gbc.writeMem(0xaaa8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xac78);
        EXPECT(gbc.pc(), 0xaaaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa8), 0xcb);
        EXPECT(gbc.readMem(0xaaa9), 0x3d);
        // CB 3D 0056
        gbc.setState(0x61b, 0x147f, 0x4f80, 0x55b2, 0xc054, 0xd22a, 0x1, 0x0);
        gbc.writeMem(0x61b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x147f);
        EXPECT(gbc.pc(), 0x61d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0057
        gbc.setState(0xbfac, 0xcb99, 0xfca0, 0x9bcc, 0xe499, 0x69cc, 0x0, 0x0);
        gbc.writeMem(0xbfac, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcb99);
        EXPECT(gbc.pc(), 0xbfae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfac), 0xcb);
        EXPECT(gbc.readMem(0xbfad), 0x3d);
        // CB 3D 0058
        gbc.setState(0xd421, 0x4bc5, 0x8640, 0xd470, 0xe4e5, 0x597a, 0x0, 0x1);
        gbc.writeMem(0xd421, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4bc5);
        EXPECT(gbc.pc(), 0xd423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd421), 0xcb);
        EXPECT(gbc.readMem(0xd422), 0x3d);
        // CB 3D 0059
        gbc.setState(0x8643, 0x58a4, 0x3e30, 0xd24, 0x3267, 0xc45f, 0x1, 0x0);
        gbc.writeMem(0x8643, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x58a4);
        EXPECT(gbc.pc(), 0x8645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8643), 0xcb);
        EXPECT(gbc.readMem(0x8644), 0x3d);
        // CB 3D 005A
        gbc.setState(0x4d59, 0x5228, 0x5190, 0x73e0, 0xb87a, 0x352b, 0x1, 0x0);
        gbc.writeMem(0x4d59, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5228);
        EXPECT(gbc.pc(), 0x4d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 005B
        gbc.setState(0x6539, 0xf632, 0xb180, 0xba72, 0xc85, 0x627b, 0x1, 0x1);
        gbc.writeMem(0x6539, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf632);
        EXPECT(gbc.pc(), 0x653b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 005D
        gbc.setState(0xae72, 0xd023, 0x4740, 0xe8e5, 0x9bef, 0xa2bf, 0x1, 0x1);
        gbc.writeMem(0xae72, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd023);
        EXPECT(gbc.pc(), 0xae74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae72), 0xcb);
        EXPECT(gbc.readMem(0xae73), 0x3d);
        // CB 3D 005E
        gbc.setState(0xb516, 0xb6d4, 0x9c60, 0x8c82, 0x641, 0x7701, 0x1, 0x0);
        gbc.writeMem(0xb516, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb6d4);
        EXPECT(gbc.pc(), 0xb518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb516), 0xcb);
        EXPECT(gbc.readMem(0xb517), 0x3d);
        // CB 3D 005F
        gbc.setState(0xb807, 0x35eb, 0xc3a0, 0x3455, 0x9036, 0x5fd6, 0x1, 0x0);
        gbc.writeMem(0xb807, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x35eb);
        EXPECT(gbc.pc(), 0xb809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb807), 0xcb);
        EXPECT(gbc.readMem(0xb808), 0x3d);
        // CB 3D 0060
        gbc.setState(0x7bf9, 0x9c5f, 0x8700, 0x735e, 0x110a, 0x9b43, 0x1, 0x1);
        gbc.writeMem(0x7bf9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9c5f);
        EXPECT(gbc.pc(), 0x7bfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0061
        gbc.setState(0x764e, 0x781e, 0xe550, 0xeb24, 0xace7, 0x2582, 0x1, 0x1);
        gbc.writeMem(0x764e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x781e);
        EXPECT(gbc.pc(), 0x7650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0062
        gbc.setState(0x465f, 0xc131, 0xa520, 0xf254, 0x15cd, 0xe05e, 0x1, 0x1);
        gbc.writeMem(0x465f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc131);
        EXPECT(gbc.pc(), 0x4661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0063
        gbc.setState(0x8daf, 0xa5d7, 0x8f0, 0xd401, 0xfe24, 0x8bbc, 0x0, 0x1);
        gbc.writeMem(0x8daf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa5d7);
        EXPECT(gbc.pc(), 0x8db1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8daf), 0xcb);
        EXPECT(gbc.readMem(0x8db0), 0x3d);
        // CB 3D 0064
        gbc.setState(0x7909, 0x555d, 0xe390, 0xeb9d, 0x4fa2, 0x15e, 0x1, 0x0);
        gbc.writeMem(0x7909, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x555d);
        EXPECT(gbc.pc(), 0x790b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0065
        gbc.setState(0xe7c8, 0x6d1a, 0xa1c0, 0x148e, 0xfbb2, 0x294b, 0x0, 0x1);
        gbc.writeMem(0xe7c8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6d1a);
        EXPECT(gbc.pc(), 0xe7ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7c8), 0xcb);
        EXPECT(gbc.readMem(0xe7c9), 0x3d);
        // CB 3D 0066
        gbc.setState(0xa931, 0x81d8, 0xc6d0, 0xb201, 0x69f, 0x5903, 0x0, 0x0);
        gbc.writeMem(0xa931, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x81d8);
        EXPECT(gbc.pc(), 0xa933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa931), 0xcb);
        EXPECT(gbc.readMem(0xa932), 0x3d);
        // CB 3D 0067
        gbc.setState(0xb2d, 0x918c, 0x6e70, 0xe147, 0x5a3c, 0x2535, 0x0, 0x1);
        gbc.writeMem(0xb2d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x918c);
        EXPECT(gbc.pc(), 0xb2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0068
        gbc.setState(0x39a3, 0xdf17, 0x4330, 0x1f4d, 0x9743, 0xf7f1, 0x1, 0x0);
        gbc.writeMem(0x39a3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdf17);
        EXPECT(gbc.pc(), 0x39a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0069
        gbc.setState(0x90e8, 0xb077, 0x46f0, 0xcc2c, 0x7ea6, 0x65cf, 0x0, 0x1);
        gbc.writeMem(0x90e8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb077);
        EXPECT(gbc.pc(), 0x90ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90e8), 0xcb);
        EXPECT(gbc.readMem(0x90e9), 0x3d);
        // CB 3D 006A
        gbc.setState(0xdd3f, 0x138f, 0xf30, 0xbd7f, 0xb07a, 0xd3e9, 0x0, 0x1);
        gbc.writeMem(0xdd3f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x138f);
        EXPECT(gbc.pc(), 0xdd41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd3f), 0xcb);
        EXPECT(gbc.readMem(0xdd40), 0x3d);
        // CB 3D 006B
        gbc.setState(0xec57, 0x63ea, 0xa760, 0xf75, 0x71fe, 0xd9b5, 0x1, 0x1);
        gbc.writeMem(0xec57, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x63ea);
        EXPECT(gbc.pc(), 0xec59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec57), 0xcb);
        EXPECT(gbc.readMem(0xec58), 0x3d);
        // CB 3D 006C
        gbc.setState(0x6116, 0x2b6e, 0x350, 0x79fc, 0x9f9d, 0xe42d, 0x0, 0x1);
        gbc.writeMem(0x6116, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2b6e);
        EXPECT(gbc.pc(), 0x6118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 006D
        gbc.setState(0x6588, 0xf263, 0x97c0, 0xcae3, 0x2844, 0x287b, 0x1, 0x1);
        gbc.writeMem(0x6588, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf263);
        EXPECT(gbc.pc(), 0x658a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 006E
        gbc.setState(0x9cd4, 0x882a, 0x3a10, 0xdaf3, 0x3eca, 0x25a8, 0x1, 0x0);
        gbc.writeMem(0x9cd4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x882a);
        EXPECT(gbc.pc(), 0x9cd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd4), 0xcb);
        EXPECT(gbc.readMem(0x9cd5), 0x3d);
        // CB 3D 006F
        gbc.setState(0x10ff, 0x9360, 0x2f60, 0x7b2d, 0x29df, 0x4919, 0x0, 0x0);
        gbc.writeMem(0x10ff, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9360);
        EXPECT(gbc.pc(), 0x1101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0070
        gbc.setState(0xc6ad, 0xebbf, 0x79f0, 0x38e8, 0x7cd2, 0x824b, 0x1, 0x0);
        gbc.writeMem(0xc6ad, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xebbf);
        EXPECT(gbc.pc(), 0xc6af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ad), 0xcb);
        EXPECT(gbc.readMem(0xc6ae), 0x3d);
        // CB 3D 0071
        gbc.setState(0xceb6, 0x30f8, 0xe4d0, 0x5482, 0x1b4b, 0xc1c1, 0x0, 0x1);
        gbc.writeMem(0xceb6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x30f8);
        EXPECT(gbc.pc(), 0xceb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb6), 0xcb);
        EXPECT(gbc.readMem(0xceb7), 0x3d);
        // CB 3D 0072
        gbc.setState(0xccd5, 0xe090, 0x9f40, 0xb935, 0x8c8d, 0x7b6a, 0x1, 0x0);
        gbc.writeMem(0xccd5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe090);
        EXPECT(gbc.pc(), 0xccd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd5), 0xcb);
        EXPECT(gbc.readMem(0xccd6), 0x3d);
        // CB 3D 0073
        gbc.setState(0xe6a3, 0x55b7, 0xbac0, 0x2a7e, 0xd87b, 0x8889, 0x0, 0x0);
        gbc.writeMem(0xe6a3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x55b7);
        EXPECT(gbc.pc(), 0xe6a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6a3), 0xcb);
        EXPECT(gbc.readMem(0xe6a4), 0x3d);
        // CB 3D 0074
        gbc.setState(0x7467, 0x67d8, 0x72a0, 0x9afe, 0x960, 0xc0f0, 0x0, 0x1);
        gbc.writeMem(0x7467, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x67d8);
        EXPECT(gbc.pc(), 0x7469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0075
        gbc.setState(0xe62f, 0x7c15, 0x7b20, 0xb0bb, 0x797c, 0x2637, 0x1, 0x1);
        gbc.writeMem(0xe62f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7c15);
        EXPECT(gbc.pc(), 0xe631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62f), 0xcb);
        EXPECT(gbc.readMem(0xe630), 0x3d);
        // CB 3D 0076
        gbc.setState(0xc2a7, 0x9ccd, 0xf430, 0xa150, 0x272e, 0xbc93, 0x0, 0x1);
        gbc.writeMem(0xc2a7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9ccd);
        EXPECT(gbc.pc(), 0xc2a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2a7), 0xcb);
        EXPECT(gbc.readMem(0xc2a8), 0x3d);
        // CB 3D 0077
        gbc.setState(0xd727, 0x1fdf, 0x6dc0, 0x9b4c, 0xd2c0, 0xe264, 0x1, 0x0);
        gbc.writeMem(0xd727, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1fdf);
        EXPECT(gbc.pc(), 0xd729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd727), 0xcb);
        EXPECT(gbc.readMem(0xd728), 0x3d);
        // CB 3D 0078
        gbc.setState(0xdbbd, 0x1379, 0x9420, 0xfd0, 0x8618, 0x7c40, 0x1, 0x0);
        gbc.writeMem(0xdbbd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1379);
        EXPECT(gbc.pc(), 0xdbbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbbd), 0xcb);
        EXPECT(gbc.readMem(0xdbbe), 0x3d);
        // CB 3D 0079
        gbc.setState(0xdf33, 0xbe87, 0x29b0, 0xb769, 0xb5, 0xc9b3, 0x1, 0x0);
        gbc.writeMem(0xdf33, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xbe87);
        EXPECT(gbc.pc(), 0xdf35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf33), 0xcb);
        EXPECT(gbc.readMem(0xdf34), 0x3d);
        // CB 3D 007A
        gbc.setState(0x8db8, 0xd6c0, 0x15c0, 0x8789, 0x4b79, 0x75f7, 0x0, 0x0);
        gbc.writeMem(0x8db8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd6c0);
        EXPECT(gbc.pc(), 0x8dba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db8), 0xcb);
        EXPECT(gbc.readMem(0x8db9), 0x3d);
        // CB 3D 007B
        gbc.setState(0xd963, 0x7484, 0x7970, 0xc57c, 0xa87d, 0xa91e, 0x0, 0x1);
        gbc.writeMem(0xd963, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7484);
        EXPECT(gbc.pc(), 0xd965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd963), 0xcb);
        EXPECT(gbc.readMem(0xd964), 0x3d);
        // CB 3D 007C
        gbc.setState(0xcd5e, 0x6907, 0x5870, 0x1b36, 0x97f2, 0xcc94, 0x0, 0x0);
        gbc.writeMem(0xcd5e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6907);
        EXPECT(gbc.pc(), 0xcd60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd5e), 0xcb);
        EXPECT(gbc.readMem(0xcd5f), 0x3d);
        // CB 3D 007D
        gbc.setState(0x5c8c, 0x8bff, 0x7fb0, 0x157f, 0x89ad, 0x29b0, 0x1, 0x1);
        gbc.writeMem(0x5c8c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8bff);
        EXPECT(gbc.pc(), 0x5c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 007F
        gbc.setState(0xc227, 0x8d1c, 0xc7c0, 0xe1b2, 0x2e0c, 0xe522, 0x1, 0x1);
        gbc.writeMem(0xc227, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8d1c);
        EXPECT(gbc.pc(), 0xc229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc227), 0xcb);
        EXPECT(gbc.readMem(0xc228), 0x3d);
        // CB 3D 0080
        gbc.setState(0x47e1, 0xe2f5, 0x7950, 0x1863, 0xaa0a, 0x45af, 0x1, 0x0);
        gbc.writeMem(0x47e1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe2f5);
        EXPECT(gbc.pc(), 0x47e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0081
        gbc.setState(0xc055, 0x354, 0xc570, 0xda5c, 0x20ea, 0xc70d, 0x0, 0x1);
        gbc.writeMem(0xc055, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x354);
        EXPECT(gbc.pc(), 0xc057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc055), 0xcb);
        EXPECT(gbc.readMem(0xc056), 0x3d);
        // CB 3D 0082
        gbc.setState(0xc5ed, 0x8aa3, 0x7df0, 0x367b, 0x491f, 0x25e, 0x0, 0x1);
        gbc.writeMem(0xc5ed, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8aa3);
        EXPECT(gbc.pc(), 0xc5ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ed), 0xcb);
        EXPECT(gbc.readMem(0xc5ee), 0x3d);
        // CB 3D 0083
        gbc.setState(0xe7e6, 0x1493, 0xd110, 0x1118, 0x525b, 0x882f, 0x0, 0x1);
        gbc.writeMem(0xe7e6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1493);
        EXPECT(gbc.pc(), 0xe7e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7e6), 0xcb);
        EXPECT(gbc.readMem(0xe7e7), 0x3d);
        // CB 3D 0085
        gbc.setState(0xb427, 0xfc01, 0xcab0, 0x6b3f, 0xfa5e, 0xfcab, 0x1, 0x1);
        gbc.writeMem(0xb427, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfc01);
        EXPECT(gbc.pc(), 0xb429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb427), 0xcb);
        EXPECT(gbc.readMem(0xb428), 0x3d);
        // CB 3D 0086
        gbc.setState(0x5f3b, 0xfa10, 0xeec0, 0xe7d8, 0x58b4, 0x2107, 0x1, 0x1);
        gbc.writeMem(0x5f3b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfa10);
        EXPECT(gbc.pc(), 0x5f3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0088
        gbc.setState(0x1b0c, 0x6ed0, 0x47e0, 0x9332, 0x3e0e, 0xdbb0, 0x1, 0x1);
        gbc.writeMem(0x1b0c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6ed0);
        EXPECT(gbc.pc(), 0x1b0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0089
        gbc.setState(0xe2b0, 0xf114, 0xa660, 0xe7ec, 0x55dd, 0x8cff, 0x1, 0x1);
        gbc.writeMem(0xe2b0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf114);
        EXPECT(gbc.pc(), 0xe2b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2b0), 0xcb);
        EXPECT(gbc.readMem(0xe2b1), 0x3d);
        // CB 3D 008A
        gbc.setState(0xa1d5, 0x7891, 0xdf70, 0xe44, 0x570, 0x3662, 0x1, 0x1);
        gbc.writeMem(0xa1d5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7891);
        EXPECT(gbc.pc(), 0xa1d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1d5), 0xcb);
        EXPECT(gbc.readMem(0xa1d6), 0x3d);
        // CB 3D 008B
        gbc.setState(0xa72, 0xcb72, 0x9e0, 0x3d4f, 0xb0c9, 0xc505, 0x1, 0x0);
        gbc.writeMem(0xa72, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcb72);
        EXPECT(gbc.pc(), 0xa74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 008C
        gbc.setState(0x7556, 0x582e, 0x7f70, 0x5e0e, 0xa61a, 0x58c9, 0x0, 0x1);
        gbc.writeMem(0x7556, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x582e);
        EXPECT(gbc.pc(), 0x7558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 008D
        gbc.setState(0x37ea, 0x7854, 0x74f0, 0xa1cd, 0x975e, 0xd661, 0x1, 0x1);
        gbc.writeMem(0x37ea, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7854);
        EXPECT(gbc.pc(), 0x37ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 008E
        gbc.setState(0xf98, 0x2b3, 0x6630, 0xf987, 0x8f4, 0xc8f4, 0x1, 0x0);
        gbc.writeMem(0xf98, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2b3);
        EXPECT(gbc.pc(), 0xf9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 008F
        gbc.setState(0x4732, 0x53ac, 0xe540, 0xd0e9, 0xfe65, 0x89d3, 0x0, 0x0);
        gbc.writeMem(0x4732, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x53ac);
        EXPECT(gbc.pc(), 0x4734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0090
        gbc.setState(0xd835, 0xe845, 0xfa50, 0xdfd0, 0xdb6b, 0x7b70, 0x1, 0x0);
        gbc.writeMem(0xd835, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe845);
        EXPECT(gbc.pc(), 0xd837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd835), 0xcb);
        EXPECT(gbc.readMem(0xd836), 0x3d);
        // CB 3D 0091
        gbc.setState(0xa3ca, 0xeeb8, 0x8150, 0x8098, 0x2a71, 0x119b, 0x1, 0x1);
        gbc.writeMem(0xa3ca, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xeeb8);
        EXPECT(gbc.pc(), 0xa3cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ca), 0xcb);
        EXPECT(gbc.readMem(0xa3cb), 0x3d);
        // CB 3D 0092
        gbc.setState(0xacf1, 0x98dc, 0x60b0, 0xf929, 0xc20b, 0x818b, 0x0, 0x0);
        gbc.writeMem(0xacf1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x98dc);
        EXPECT(gbc.pc(), 0xacf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacf1), 0xcb);
        EXPECT(gbc.readMem(0xacf2), 0x3d);
        // CB 3D 0093
        gbc.setState(0x63e2, 0x18ac, 0xd760, 0xcfc9, 0x5758, 0x71c8, 0x1, 0x1);
        gbc.writeMem(0x63e2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x18ac);
        EXPECT(gbc.pc(), 0x63e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0094
        gbc.setState(0x5fa1, 0xaba1, 0x2a20, 0xe4a6, 0xe76e, 0xb47, 0x0, 0x0);
        gbc.writeMem(0x5fa1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xaba1);
        EXPECT(gbc.pc(), 0x5fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0096
        gbc.setState(0xe6d6, 0x6975, 0x72d0, 0x9a63, 0xe60f, 0xfd54, 0x0, 0x1);
        gbc.writeMem(0xe6d6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6975);
        EXPECT(gbc.pc(), 0xe6d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6d6), 0xcb);
        EXPECT(gbc.readMem(0xe6d7), 0x3d);
        // CB 3D 0098
        gbc.setState(0xaf50, 0xed64, 0x9090, 0xe1a8, 0xbc88, 0xd11, 0x0, 0x1);
        gbc.writeMem(0xaf50, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xed64);
        EXPECT(gbc.pc(), 0xaf52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf50), 0xcb);
        EXPECT(gbc.readMem(0xaf51), 0x3d);
        // CB 3D 0099
        gbc.setState(0xad66, 0x5dbf, 0x3830, 0x3493, 0x6644, 0xa74e, 0x1, 0x0);
        gbc.writeMem(0xad66, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5dbf);
        EXPECT(gbc.pc(), 0xad68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad66), 0xcb);
        EXPECT(gbc.readMem(0xad67), 0x3d);
        // CB 3D 009A
        gbc.setState(0x6404, 0xab13, 0xbb60, 0xe4c4, 0x4cd5, 0xcbd7, 0x0, 0x1);
        gbc.writeMem(0x6404, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xab13);
        EXPECT(gbc.pc(), 0x6406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 009B
        gbc.setState(0xec10, 0xc85b, 0x12a0, 0x8cd7, 0x3f8b, 0x7e1a, 0x0, 0x0);
        gbc.writeMem(0xec10, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc85b);
        EXPECT(gbc.pc(), 0xec12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec10), 0xcb);
        EXPECT(gbc.readMem(0xec11), 0x3d);
        // CB 3D 009C
        gbc.setState(0x9ae7, 0x9b2f, 0x3a0, 0x2d1d, 0xd0c6, 0x4b4, 0x0, 0x0);
        gbc.writeMem(0x9ae7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9b2f);
        EXPECT(gbc.pc(), 0x9ae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae7), 0xcb);
        EXPECT(gbc.readMem(0x9ae8), 0x3d);
        // CB 3D 009D
        gbc.setState(0x7a2b, 0x89f7, 0xfe80, 0x2c96, 0xc75e, 0x73f0, 0x1, 0x1);
        gbc.writeMem(0x7a2b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x89f7);
        EXPECT(gbc.pc(), 0x7a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 009E
        gbc.setState(0x61b1, 0x56fa, 0x9960, 0x71b3, 0x61d3, 0xe874, 0x1, 0x1);
        gbc.writeMem(0x61b1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x56fa);
        EXPECT(gbc.pc(), 0x61b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 009F
        gbc.setState(0x9344, 0xf0c0, 0xb310, 0x2000, 0x5bed, 0x4af8, 0x1, 0x1);
        gbc.writeMem(0x9344, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf0c0);
        EXPECT(gbc.pc(), 0x9346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9344), 0xcb);
        EXPECT(gbc.readMem(0x9345), 0x3d);
        // CB 3D 00A0
        gbc.setState(0x2215, 0xa538, 0x8160, 0x739f, 0xc2ba, 0x2f8, 0x0, 0x1);
        gbc.writeMem(0x2215, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa538);
        EXPECT(gbc.pc(), 0x2217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00A1
        gbc.setState(0xc7d9, 0xc011, 0xbb80, 0x3b7c, 0xae55, 0x7909, 0x1, 0x1);
        gbc.writeMem(0xc7d9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc011);
        EXPECT(gbc.pc(), 0xc7db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7d9), 0xcb);
        EXPECT(gbc.readMem(0xc7da), 0x3d);
        // CB 3D 00A2
        gbc.setState(0x592f, 0x762e, 0x6640, 0xd9f8, 0xc9e8, 0x8c0a, 0x0, 0x1);
        gbc.writeMem(0x592f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x762e);
        EXPECT(gbc.pc(), 0x5931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00A3
        gbc.setState(0x817c, 0xfcb5, 0x5900, 0x6325, 0x1b71, 0x96cc, 0x1, 0x0);
        gbc.writeMem(0x817c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xfcb5);
        EXPECT(gbc.pc(), 0x817e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x817c), 0xcb);
        EXPECT(gbc.readMem(0x817d), 0x3d);
        // CB 3D 00A4
        gbc.setState(0xca53, 0xcc4, 0xa5d0, 0x1be, 0xfb82, 0x8781, 0x1, 0x0);
        gbc.writeMem(0xca53, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xcc4);
        EXPECT(gbc.pc(), 0xca55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca53), 0xcb);
        EXPECT(gbc.readMem(0xca54), 0x3d);
        // CB 3D 00A5
        gbc.setState(0x3bab, 0x76b5, 0x4cb0, 0x62da, 0x4fa1, 0xae59, 0x0, 0x1);
        gbc.writeMem(0x3bab, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x76b5);
        EXPECT(gbc.pc(), 0x3bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00A6
        gbc.setState(0x8339, 0xf435, 0xe720, 0xfb1a, 0xc388, 0xadc0, 0x1, 0x1);
        gbc.writeMem(0x8339, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf435);
        EXPECT(gbc.pc(), 0x833b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8339), 0xcb);
        EXPECT(gbc.readMem(0x833a), 0x3d);
        // CB 3D 00A7
        gbc.setState(0x5ff8, 0x63f9, 0xe730, 0x461, 0xe494, 0x94b6, 0x0, 0x0);
        gbc.writeMem(0x5ff8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x63f9);
        EXPECT(gbc.pc(), 0x5ffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00A9
        gbc.setState(0x5f6d, 0xd764, 0x98b0, 0xfb97, 0xea0, 0x2392, 0x1, 0x1);
        gbc.writeMem(0x5f6d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd764);
        EXPECT(gbc.pc(), 0x5f6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00AA
        gbc.setState(0xa864, 0x742b, 0x19f0, 0xe2a3, 0x74b3, 0x2e99, 0x1, 0x1);
        gbc.writeMem(0xa864, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x742b);
        EXPECT(gbc.pc(), 0xa866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa864), 0xcb);
        EXPECT(gbc.readMem(0xa865), 0x3d);
        // CB 3D 00AB
        gbc.setState(0xbe2f, 0xffaf, 0x4130, 0x42fd, 0xa8bb, 0x889b, 0x0, 0x1);
        gbc.writeMem(0xbe2f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xffaf);
        EXPECT(gbc.pc(), 0xbe31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe2f), 0xcb);
        EXPECT(gbc.readMem(0xbe30), 0x3d);
        // CB 3D 00AC
        gbc.setState(0x3d1b, 0x15d2, 0x9f30, 0xbbb7, 0x387d, 0xaf76, 0x0, 0x1);
        gbc.writeMem(0x3d1b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x15d2);
        EXPECT(gbc.pc(), 0x3d1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00AD
        gbc.setState(0x343f, 0x1276, 0xb230, 0xfc77, 0x860e, 0x642a, 0x1, 0x1);
        gbc.writeMem(0x343f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1276);
        EXPECT(gbc.pc(), 0x3441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00AF
        gbc.setState(0x904e, 0x7f2d, 0xcb0, 0x597b, 0xdd72, 0x3eff, 0x1, 0x0);
        gbc.writeMem(0x904e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7f2d);
        EXPECT(gbc.pc(), 0x9050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x904e), 0xcb);
        EXPECT(gbc.readMem(0x904f), 0x3d);
        // CB 3D 00B0
        gbc.setState(0x9672, 0x5dba, 0xf830, 0x8fea, 0x76a8, 0x8da6, 0x1, 0x1);
        gbc.writeMem(0x9672, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5dba);
        EXPECT(gbc.pc(), 0x9674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9672), 0xcb);
        EXPECT(gbc.readMem(0x9673), 0x3d);
        // CB 3D 00B1
        gbc.setState(0xb3d4, 0x5a77, 0x4110, 0x3e4e, 0xf4d6, 0xff9d, 0x1, 0x0);
        gbc.writeMem(0xb3d4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5a77);
        EXPECT(gbc.pc(), 0xb3d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d4), 0xcb);
        EXPECT(gbc.readMem(0xb3d5), 0x3d);
        // CB 3D 00B2
        gbc.setState(0xec82, 0xf68a, 0x3890, 0xce81, 0x1d63, 0xd495, 0x1, 0x0);
        gbc.writeMem(0xec82, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf68a);
        EXPECT(gbc.pc(), 0xec84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec82), 0xcb);
        EXPECT(gbc.readMem(0xec83), 0x3d);
        // CB 3D 00B3
        gbc.setState(0xc9f6, 0x1877, 0x2a50, 0x59d2, 0x4b1f, 0x1c97, 0x1, 0x0);
        gbc.writeMem(0xc9f6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1877);
        EXPECT(gbc.pc(), 0xc9f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f6), 0xcb);
        EXPECT(gbc.readMem(0xc9f7), 0x3d);
        // CB 3D 00B4
        gbc.setState(0xd304, 0xa0f5, 0xa950, 0xf69a, 0x62ce, 0x61cb, 0x0, 0x1);
        gbc.writeMem(0xd304, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa0f5);
        EXPECT(gbc.pc(), 0xd306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd304), 0xcb);
        EXPECT(gbc.readMem(0xd305), 0x3d);
        // CB 3D 00B5
        gbc.setState(0xb8d7, 0xbba9, 0x2500, 0xee98, 0x10f9, 0xa2a4, 0x0, 0x1);
        gbc.writeMem(0xb8d7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbba9);
        EXPECT(gbc.pc(), 0xb8d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d7), 0xcb);
        EXPECT(gbc.readMem(0xb8d8), 0x3d);
        // CB 3D 00B6
        gbc.setState(0xc850, 0x1682, 0x11f0, 0x528c, 0x81ce, 0xd24d, 0x0, 0x1);
        gbc.writeMem(0xc850, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1682);
        EXPECT(gbc.pc(), 0xc852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc850), 0xcb);
        EXPECT(gbc.readMem(0xc851), 0x3d);
        // CB 3D 00B7
        gbc.setState(0x9ee4, 0x11b8, 0x81e0, 0x6554, 0x6e55, 0x8bc5, 0x0, 0x1);
        gbc.writeMem(0x9ee4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x11b8);
        EXPECT(gbc.pc(), 0x9ee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee4), 0xcb);
        EXPECT(gbc.readMem(0x9ee5), 0x3d);
        // CB 3D 00B8
        gbc.setState(0x2f99, 0xec42, 0xe630, 0x97d3, 0xb0c, 0x1d3b, 0x0, 0x1);
        gbc.writeMem(0x2f99, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xec42);
        EXPECT(gbc.pc(), 0x2f9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00B9
        gbc.setState(0x6464, 0x1ed3, 0x9c30, 0x3923, 0x3d26, 0x3be9, 0x0, 0x1);
        gbc.writeMem(0x6464, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1ed3);
        EXPECT(gbc.pc(), 0x6466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00BA
        gbc.setState(0x61f0, 0xffb, 0xd930, 0x621f, 0x50c7, 0xa614, 0x0, 0x1);
        gbc.writeMem(0x61f0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xffb);
        EXPECT(gbc.pc(), 0x61f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00BB
        gbc.setState(0x64a1, 0x5459, 0xc2f0, 0xd3b8, 0x2f8a, 0xe345, 0x0, 0x1);
        gbc.writeMem(0x64a1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5459);
        EXPECT(gbc.pc(), 0x64a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00BC
        gbc.setState(0xd6cc, 0xd7c7, 0xb620, 0xd6ef, 0x4c8e, 0x886a, 0x1, 0x0);
        gbc.writeMem(0xd6cc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd7c7);
        EXPECT(gbc.pc(), 0xd6ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6cc), 0xcb);
        EXPECT(gbc.readMem(0xd6cd), 0x3d);
        // CB 3D 00BD
        gbc.setState(0x3666, 0x237e, 0x3c60, 0x8379, 0xa50d, 0x886d, 0x0, 0x1);
        gbc.writeMem(0x3666, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x237e);
        EXPECT(gbc.pc(), 0x3668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00BE
        gbc.setState(0x292c, 0xd1d6, 0x85f0, 0x3217, 0xbafe, 0x955b, 0x0, 0x1);
        gbc.writeMem(0x292c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd1d6);
        EXPECT(gbc.pc(), 0x292e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00BF
        gbc.setState(0x8522, 0xdde6, 0xa2f0, 0x793d, 0xb92d, 0x9a06, 0x0, 0x0);
        gbc.writeMem(0x8522, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdde6);
        EXPECT(gbc.pc(), 0x8524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8522), 0xcb);
        EXPECT(gbc.readMem(0x8523), 0x3d);
        // CB 3D 00C0
        gbc.setState(0x3812, 0xc1a1, 0x11f0, 0x73ac, 0xfde6, 0x9d8, 0x0, 0x0);
        gbc.writeMem(0x3812, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc1a1);
        EXPECT(gbc.pc(), 0x3814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00C1
        gbc.setState(0x6757, 0xd33c, 0xf750, 0x94c9, 0x7952, 0xa79b, 0x1, 0x0);
        gbc.writeMem(0x6757, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd33c);
        EXPECT(gbc.pc(), 0x6759);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00C2
        gbc.setState(0xd90c, 0x77b7, 0xc380, 0x81a0, 0x7e28, 0x2e1b, 0x0, 0x0);
        gbc.writeMem(0xd90c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x77b7);
        EXPECT(gbc.pc(), 0xd90e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd90c), 0xcb);
        EXPECT(gbc.readMem(0xd90d), 0x3d);
        // CB 3D 00C3
        gbc.setState(0x1e61, 0x7274, 0x730, 0xfa7a, 0x2fb1, 0x96a8, 0x0, 0x1);
        gbc.writeMem(0x1e61, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7274);
        EXPECT(gbc.pc(), 0x1e63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00C4
        gbc.setState(0xdd0a, 0x4097, 0x7140, 0x8cfe, 0xcad3, 0xff98, 0x1, 0x1);
        gbc.writeMem(0xdd0a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4097);
        EXPECT(gbc.pc(), 0xdd0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd0a), 0xcb);
        EXPECT(gbc.readMem(0xdd0b), 0x3d);
        // CB 3D 00C5
        gbc.setState(0xbe46, 0x88e0, 0xb40, 0xf169, 0xcb77, 0xe08c, 0x1, 0x1);
        gbc.writeMem(0xbe46, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x88e0);
        EXPECT(gbc.pc(), 0xbe48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe46), 0xcb);
        EXPECT(gbc.readMem(0xbe47), 0x3d);
        // CB 3D 00C6
        gbc.setState(0x8a61, 0x56eb, 0xa60, 0x1ba5, 0x6c14, 0x1a76, 0x1, 0x0);
        gbc.writeMem(0x8a61, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x56eb);
        EXPECT(gbc.pc(), 0x8a63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a61), 0xcb);
        EXPECT(gbc.readMem(0x8a62), 0x3d);
        // CB 3D 00C7
        gbc.setState(0xcacf, 0xc7f9, 0xe140, 0xc151, 0x2240, 0x3cc6, 0x0, 0x1);
        gbc.writeMem(0xcacf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc7f9);
        EXPECT(gbc.pc(), 0xcad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcacf), 0xcb);
        EXPECT(gbc.readMem(0xcad0), 0x3d);
        // CB 3D 00C8
        gbc.setState(0x1db9, 0xcd3b, 0xc760, 0x41f5, 0x28bd, 0x7ba4, 0x1, 0x1);
        gbc.writeMem(0x1db9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xcd3b);
        EXPECT(gbc.pc(), 0x1dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00CA
        gbc.setState(0xa960, 0x1920, 0xcd60, 0xe8a1, 0x63e6, 0x5296, 0x0, 0x0);
        gbc.writeMem(0xa960, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1920);
        EXPECT(gbc.pc(), 0xa962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa960), 0xcb);
        EXPECT(gbc.readMem(0xa961), 0x3d);
        // CB 3D 00CB
        gbc.setState(0x2dc2, 0xc87c, 0x87f0, 0x68b3, 0xfc3d, 0x6b41, 0x1, 0x1);
        gbc.writeMem(0x2dc2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc87c);
        EXPECT(gbc.pc(), 0x2dc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00CC
        gbc.setState(0xc907, 0x8ee9, 0x2040, 0x29d0, 0x89c0, 0x9b33, 0x0, 0x0);
        gbc.writeMem(0xc907, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8ee9);
        EXPECT(gbc.pc(), 0xc909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc907), 0xcb);
        EXPECT(gbc.readMem(0xc908), 0x3d);
        // CB 3D 00CD
        gbc.setState(0xa221, 0x74b4, 0x880, 0xea09, 0x1519, 0x3f4b, 0x0, 0x0);
        gbc.writeMem(0xa221, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x74b4);
        EXPECT(gbc.pc(), 0xa223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa221), 0xcb);
        EXPECT(gbc.readMem(0xa222), 0x3d);
        // CB 3D 00CE
        gbc.setState(0xad6a, 0xf03a, 0xdda0, 0x5462, 0x5687, 0x79c9, 0x0, 0x1);
        gbc.writeMem(0xad6a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf03a);
        EXPECT(gbc.pc(), 0xad6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad6a), 0xcb);
        EXPECT(gbc.readMem(0xad6b), 0x3d);
        // CB 3D 00D0
        gbc.setState(0x276b, 0xf0fc, 0x3770, 0x42db, 0x3f29, 0x9662, 0x0, 0x1);
        gbc.writeMem(0x276b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf0fc);
        EXPECT(gbc.pc(), 0x276d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00D1
        gbc.setState(0x82b3, 0x1c8d, 0xf120, 0xd7f0, 0x7f9c, 0x7b30, 0x0, 0x0);
        gbc.writeMem(0x82b3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1c8d);
        EXPECT(gbc.pc(), 0x82b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b3), 0xcb);
        EXPECT(gbc.readMem(0x82b4), 0x3d);
        // CB 3D 00D2
        gbc.setState(0x414f, 0xfeab, 0x58c0, 0x8ff0, 0x1404, 0xbb72, 0x1, 0x1);
        gbc.writeMem(0x414f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xfeab);
        EXPECT(gbc.pc(), 0x4151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00D3
        gbc.setState(0x9e4f, 0x9e87, 0xcfb0, 0x911f, 0xb0e0, 0xacc5, 0x0, 0x0);
        gbc.writeMem(0x9e4f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9e87);
        EXPECT(gbc.pc(), 0x9e51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e4f), 0xcb);
        EXPECT(gbc.readMem(0x9e50), 0x3d);
        // CB 3D 00D4
        gbc.setState(0x1f13, 0xa77, 0xee40, 0x45f5, 0x2078, 0x5013, 0x0, 0x0);
        gbc.writeMem(0x1f13, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa77);
        EXPECT(gbc.pc(), 0x1f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00D6
        gbc.setState(0xfe5, 0xa1e1, 0x9480, 0xd675, 0xacdc, 0xa3e1, 0x0, 0x1);
        gbc.writeMem(0xfe5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa1e1);
        EXPECT(gbc.pc(), 0xfe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00D7
        gbc.setState(0x2665, 0xa70c, 0x97d0, 0x1370, 0x573d, 0xfe5e, 0x1, 0x0);
        gbc.writeMem(0x2665, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa70c);
        EXPECT(gbc.pc(), 0x2667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00D9
        gbc.setState(0x4f66, 0x203d, 0xd00, 0xfb56, 0x73f5, 0x85f5, 0x1, 0x1);
        gbc.writeMem(0x4f66, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x203d);
        EXPECT(gbc.pc(), 0x4f68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00DC
        gbc.setState(0x22db, 0xdd08, 0xf1e0, 0x8663, 0xeacc, 0xef67, 0x1, 0x0);
        gbc.writeMem(0x22db, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xdd08);
        EXPECT(gbc.pc(), 0x22dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00DD
        gbc.setState(0x535f, 0x507d, 0x11b0, 0xa5f0, 0x1072, 0xec18, 0x0, 0x0);
        gbc.writeMem(0x535f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x507d);
        EXPECT(gbc.pc(), 0x5361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00DE
        gbc.setState(0x5335, 0x2436, 0xd0b0, 0x58ba, 0x7150, 0x866, 0x1, 0x1);
        gbc.writeMem(0x5335, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2436);
        EXPECT(gbc.pc(), 0x5337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00DF
        gbc.setState(0x5cab, 0xf902, 0x80, 0xd11b, 0x9925, 0x4b38, 0x0, 0x0);
        gbc.writeMem(0x5cab, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf902);
        EXPECT(gbc.pc(), 0x5cad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00E0
        gbc.setState(0x7b91, 0xa172, 0x7b90, 0x25ad, 0xb269, 0x68e3, 0x0, 0x1);
        gbc.writeMem(0x7b91, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa172);
        EXPECT(gbc.pc(), 0x7b93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00E2
        gbc.setState(0x2bd9, 0xf7eb, 0xa720, 0x28ad, 0x39bf, 0x6e1c, 0x0, 0x0);
        gbc.writeMem(0x2bd9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf7eb);
        EXPECT(gbc.pc(), 0x2bdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00E3
        gbc.setState(0x497d, 0xd4e6, 0x8530, 0x6526, 0x3971, 0xfde7, 0x1, 0x1);
        gbc.writeMem(0x497d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd4e6);
        EXPECT(gbc.pc(), 0x497f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00E4
        gbc.setState(0xb413, 0xf67b, 0xad60, 0x1285, 0x18e, 0xfe6, 0x1, 0x1);
        gbc.writeMem(0xb413, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf67b);
        EXPECT(gbc.pc(), 0xb415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb413), 0xcb);
        EXPECT(gbc.readMem(0xb414), 0x3d);
        // CB 3D 00E5
        gbc.setState(0xb06d, 0x37b2, 0x36d0, 0x8c24, 0x2983, 0x4d18, 0x1, 0x1);
        gbc.writeMem(0xb06d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x37b2);
        EXPECT(gbc.pc(), 0xb06f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb06d), 0xcb);
        EXPECT(gbc.readMem(0xb06e), 0x3d);
        // CB 3D 00E6
        gbc.setState(0xbf54, 0xe4f7, 0x99e0, 0xd1ea, 0x18cd, 0x15fc, 0x1, 0x0);
        gbc.writeMem(0xbf54, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe4f7);
        EXPECT(gbc.pc(), 0xbf56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf54), 0xcb);
        EXPECT(gbc.readMem(0xbf55), 0x3d);
        // CB 3D 00E7
        gbc.setState(0x1410, 0xe0fa, 0x7bd0, 0x9b12, 0xc0b, 0xa026, 0x0, 0x1);
        gbc.writeMem(0x1410, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe0fa);
        EXPECT(gbc.pc(), 0x1412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00E8
        gbc.setState(0x13e3, 0x9ac1, 0x56c0, 0x77f3, 0xd092, 0xd959, 0x0, 0x0);
        gbc.writeMem(0x13e3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9ac1);
        EXPECT(gbc.pc(), 0x13e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00E9
        gbc.setState(0x84da, 0x24c2, 0x5bd0, 0x5bd3, 0x97ff, 0x9743, 0x1, 0x1);
        gbc.writeMem(0x84da, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x24c2);
        EXPECT(gbc.pc(), 0x84dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84da), 0xcb);
        EXPECT(gbc.readMem(0x84db), 0x3d);
        // CB 3D 00EA
        gbc.setState(0xe96d, 0xf0c, 0x19e0, 0xd17d, 0xb534, 0x53ab, 0x0, 0x1);
        gbc.writeMem(0xe96d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf0c);
        EXPECT(gbc.pc(), 0xe96f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe96d), 0xcb);
        EXPECT(gbc.readMem(0xe96e), 0x3d);
        // CB 3D 00EB
        gbc.setState(0x7794, 0xf789, 0x3100, 0xa292, 0x80fd, 0x49e4, 0x1, 0x1);
        gbc.writeMem(0x7794, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf789);
        EXPECT(gbc.pc(), 0x7796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00EC
        gbc.setState(0x9473, 0xc845, 0x1050, 0x22d0, 0x22df, 0x86e6, 0x1, 0x1);
        gbc.writeMem(0x9473, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc845);
        EXPECT(gbc.pc(), 0x9475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9473), 0xcb);
        EXPECT(gbc.readMem(0x9474), 0x3d);
        // CB 3D 00ED
        gbc.setState(0x5678, 0xb607, 0xb50, 0x1273, 0xdf9e, 0xf3c6, 0x1, 0x1);
        gbc.writeMem(0x5678, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb607);
        EXPECT(gbc.pc(), 0x567a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00EE
        gbc.setState(0xdd52, 0x7481, 0xae90, 0x93af, 0x1280, 0xccf, 0x0, 0x1);
        gbc.writeMem(0xdd52, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7481);
        EXPECT(gbc.pc(), 0xdd54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd52), 0xcb);
        EXPECT(gbc.readMem(0xdd53), 0x3d);
        // CB 3D 00EF
        gbc.setState(0xeeb1, 0x72a8, 0xe0, 0xe98e, 0xabcf, 0xff4d, 0x0, 0x0);
        gbc.writeMem(0xeeb1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x72a8);
        EXPECT(gbc.pc(), 0xeeb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb1), 0xcb);
        EXPECT(gbc.readMem(0xeeb2), 0x3d);
        // CB 3D 00F0
        gbc.setState(0xe665, 0x3ac1, 0x6960, 0x2c3, 0xcd7a, 0x763e, 0x1, 0x0);
        gbc.writeMem(0xe665, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3ac1);
        EXPECT(gbc.pc(), 0xe667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe665), 0xcb);
        EXPECT(gbc.readMem(0xe666), 0x3d);
        // CB 3D 00F1
        gbc.setState(0x7867, 0xc314, 0x5650, 0x3a7d, 0xbde0, 0x8254, 0x0, 0x1);
        gbc.writeMem(0x7867, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc314);
        EXPECT(gbc.pc(), 0x7869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00F2
        gbc.setState(0x2029, 0x94a0, 0x9d60, 0x1fde, 0x4132, 0xfc66, 0x1, 0x0);
        gbc.writeMem(0x2029, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x94a0);
        EXPECT(gbc.pc(), 0x202b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00F3
        gbc.setState(0xd87, 0x1a7e, 0x4850, 0x3110, 0x1eb4, 0xb903, 0x0, 0x1);
        gbc.writeMem(0xd87, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1a7e);
        EXPECT(gbc.pc(), 0xd89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00F4
        gbc.setState(0x8abc, 0xa6db, 0x6e30, 0xcfe3, 0x614d, 0x15e3, 0x1, 0x1);
        gbc.writeMem(0x8abc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa6db);
        EXPECT(gbc.pc(), 0x8abe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8abc), 0xcb);
        EXPECT(gbc.readMem(0x8abd), 0x3d);
        // CB 3D 00F5
        gbc.setState(0xbd64, 0x4f56, 0x10b0, 0xb3d5, 0x83aa, 0x7b76, 0x0, 0x1);
        gbc.writeMem(0xbd64, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4f56);
        EXPECT(gbc.pc(), 0xbd66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd64), 0xcb);
        EXPECT(gbc.readMem(0xbd65), 0x3d);
        // CB 3D 00F6
        gbc.setState(0x81c0, 0xd6dc, 0x78f0, 0xdfe, 0xf1e6, 0xf3e5, 0x1, 0x1);
        gbc.writeMem(0x81c0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd6dc);
        EXPECT(gbc.pc(), 0x81c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c0), 0xcb);
        EXPECT(gbc.readMem(0x81c1), 0x3d);
        // CB 3D 00F7
        gbc.setState(0xb5c9, 0xaeb4, 0xcda0, 0xa7e4, 0x14bd, 0x83b4, 0x0, 0x0);
        gbc.writeMem(0xb5c9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xaeb4);
        EXPECT(gbc.pc(), 0xb5cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c9), 0xcb);
        EXPECT(gbc.readMem(0xb5ca), 0x3d);
        // CB 3D 00F8
        gbc.setState(0xc23, 0x9774, 0x6cb0, 0xdead, 0xae42, 0xfc9, 0x1, 0x0);
        gbc.writeMem(0xc23, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9774);
        EXPECT(gbc.pc(), 0xc25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00F9
        gbc.setState(0x7a01, 0x3580, 0xf370, 0xca4f, 0x9a63, 0xb71a, 0x0, 0x0);
        gbc.writeMem(0x7a01, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3580);
        EXPECT(gbc.pc(), 0x7a03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00FA
        gbc.setState(0xa1f5, 0x85ac, 0x5070, 0xe441, 0xa42c, 0xb854, 0x0, 0x0);
        gbc.writeMem(0xa1f5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x85ac);
        EXPECT(gbc.pc(), 0xa1f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1f5), 0xcb);
        EXPECT(gbc.readMem(0xa1f6), 0x3d);
        // CB 3D 00FB
        gbc.setState(0xac81, 0x4385, 0xa4f0, 0xe906, 0x6824, 0xee7d, 0x0, 0x1);
        gbc.writeMem(0xac81, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4385);
        EXPECT(gbc.pc(), 0xac83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac81), 0xcb);
        EXPECT(gbc.readMem(0xac82), 0x3d);
        // CB 3D 00FC
        gbc.setState(0x32f5, 0xf2e8, 0x29a0, 0x63f7, 0xd402, 0xaad9, 0x0, 0x0);
        gbc.writeMem(0x32f5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf2e8);
        EXPECT(gbc.pc(), 0x32f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 00FD
        gbc.setState(0x4429, 0xabb9, 0xa620, 0x5427, 0xc9e1, 0x37b8, 0x1, 0x1);
        gbc.writeMem(0x4429, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xabb9);
        EXPECT(gbc.pc(), 0x442b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 00FE
        gbc.setState(0xa314, 0x57e0, 0x9470, 0x4a01, 0x4952, 0x70a0, 0x1, 0x1);
        gbc.writeMem(0xa314, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x57e0);
        EXPECT(gbc.pc(), 0xa316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa314), 0xcb);
        EXPECT(gbc.readMem(0xa315), 0x3d);
        // CB 3D 00FF
        gbc.setState(0xdbe9, 0xe0fa, 0x7180, 0x472f, 0xb7a4, 0xc75b, 0x1, 0x1);
        gbc.writeMem(0xdbe9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe0fa);
        EXPECT(gbc.pc(), 0xdbeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe9), 0xcb);
        EXPECT(gbc.readMem(0xdbea), 0x3d);
        // CB 3D 0100
        gbc.setState(0x1d67, 0xfaa9, 0xf790, 0x598f, 0x7586, 0xa88f, 0x1, 0x0);
        gbc.writeMem(0x1d67, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfaa9);
        EXPECT(gbc.pc(), 0x1d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0101
        gbc.setState(0x14af, 0xe7f9, 0xc2b0, 0x5a76, 0x6c3d, 0x2364, 0x0, 0x0);
        gbc.writeMem(0x14af, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe7f9);
        EXPECT(gbc.pc(), 0x14b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0102
        gbc.setState(0x7705, 0x716f, 0x6950, 0x2c1, 0xa703, 0xbafa, 0x0, 0x0);
        gbc.writeMem(0x7705, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x716f);
        EXPECT(gbc.pc(), 0x7707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0103
        gbc.setState(0x4b34, 0xb8f8, 0x27e0, 0x2a15, 0xdf55, 0x262, 0x1, 0x0);
        gbc.writeMem(0x4b34, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb8f8);
        EXPECT(gbc.pc(), 0x4b36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0104
        gbc.setState(0xc231, 0x38fe, 0xc0d0, 0x9184, 0x1885, 0x6659, 0x0, 0x1);
        gbc.writeMem(0xc231, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x38fe);
        EXPECT(gbc.pc(), 0xc233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc231), 0xcb);
        EXPECT(gbc.readMem(0xc232), 0x3d);
        // CB 3D 0105
        gbc.setState(0x36fd, 0x9e95, 0x9bd0, 0x2f4e, 0xeba5, 0x6a17, 0x0, 0x1);
        gbc.writeMem(0x36fd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9e95);
        EXPECT(gbc.pc(), 0x36ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0106
        gbc.setState(0x8e05, 0xd9d6, 0x1f50, 0x9bbb, 0xcca5, 0x4256, 0x0, 0x1);
        gbc.writeMem(0x8e05, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd9d6);
        EXPECT(gbc.pc(), 0x8e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e05), 0xcb);
        EXPECT(gbc.readMem(0x8e06), 0x3d);
        // CB 3D 0107
        gbc.setState(0x14df, 0xde56, 0xcb10, 0x2cab, 0x77a7, 0xa42d, 0x0, 0x1);
        gbc.writeMem(0x14df, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xde56);
        EXPECT(gbc.pc(), 0x14e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0108
        gbc.setState(0x7fab, 0x234, 0x12e0, 0xb644, 0xbdcf, 0x7d8f, 0x0, 0x0);
        gbc.writeMem(0x7fab, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x234);
        EXPECT(gbc.pc(), 0x7fad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0109
        gbc.setState(0x764e, 0x4fbb, 0x2800, 0x5fff, 0x72ee, 0x7cef, 0x1, 0x1);
        gbc.writeMem(0x764e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4fbb);
        EXPECT(gbc.pc(), 0x7650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 010A
        gbc.setState(0x2758, 0x9078, 0x53c0, 0xf29c, 0x608c, 0x68c7, 0x1, 0x0);
        gbc.writeMem(0x2758, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9078);
        EXPECT(gbc.pc(), 0x275a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 010B
        gbc.setState(0xa140, 0x529f, 0x38b0, 0x63df, 0x3c5d, 0xbd02, 0x1, 0x1);
        gbc.writeMem(0xa140, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x529f);
        EXPECT(gbc.pc(), 0xa142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa140), 0xcb);
        EXPECT(gbc.readMem(0xa141), 0x3d);
        // CB 3D 010C
        gbc.setState(0xbfa6, 0xf176, 0x23c0, 0xead5, 0x7fd5, 0xbdbb, 0x1, 0x0);
        gbc.writeMem(0xbfa6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf176);
        EXPECT(gbc.pc(), 0xbfa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa6), 0xcb);
        EXPECT(gbc.readMem(0xbfa7), 0x3d);
        // CB 3D 010D
        gbc.setState(0x2488, 0x4252, 0xf690, 0x95bd, 0x1342, 0x988c, 0x1, 0x0);
        gbc.writeMem(0x2488, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4252);
        EXPECT(gbc.pc(), 0x248a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 010E
        gbc.setState(0x4044, 0x8b24, 0xda60, 0x2769, 0xbaff, 0x297a, 0x0, 0x0);
        gbc.writeMem(0x4044, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8b24);
        EXPECT(gbc.pc(), 0x4046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 010F
        gbc.setState(0x2692, 0xf1f7, 0x20f0, 0xb533, 0x9dad, 0x4aa3, 0x0, 0x0);
        gbc.writeMem(0x2692, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf1f7);
        EXPECT(gbc.pc(), 0x2694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0110
        gbc.setState(0xcc2e, 0x4426, 0xbf80, 0x8c1d, 0x791b, 0x4ca2, 0x0, 0x0);
        gbc.writeMem(0xcc2e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4426);
        EXPECT(gbc.pc(), 0xcc30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc2e), 0xcb);
        EXPECT(gbc.readMem(0xcc2f), 0x3d);
        // CB 3D 0111
        gbc.setState(0xed35, 0xa1ba, 0x740, 0x953, 0x6e97, 0xb99c, 0x0, 0x0);
        gbc.writeMem(0xed35, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa1ba);
        EXPECT(gbc.pc(), 0xed37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed35), 0xcb);
        EXPECT(gbc.readMem(0xed36), 0x3d);
        // CB 3D 0112
        gbc.setState(0x88fc, 0x52c6, 0x75d0, 0xbf38, 0x99, 0x6ad8, 0x0, 0x1);
        gbc.writeMem(0x88fc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x52c6);
        EXPECT(gbc.pc(), 0x88fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88fc), 0xcb);
        EXPECT(gbc.readMem(0x88fd), 0x3d);
        // CB 3D 0113
        gbc.setState(0xeada, 0xb0be, 0xd110, 0x689b, 0xc8db, 0xb980, 0x1, 0x1);
        gbc.writeMem(0xeada, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb0be);
        EXPECT(gbc.pc(), 0xeadc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeada), 0xcb);
        EXPECT(gbc.readMem(0xeadb), 0x3d);
        // CB 3D 0114
        gbc.setState(0x9e23, 0xec97, 0x4d50, 0x9f68, 0x4058, 0x4ec0, 0x0, 0x1);
        gbc.writeMem(0x9e23, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xec97);
        EXPECT(gbc.pc(), 0x9e25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e23), 0xcb);
        EXPECT(gbc.readMem(0x9e24), 0x3d);
        // CB 3D 0115
        gbc.setState(0x18f, 0x1a36, 0x110, 0x2522, 0x8be8, 0xeb48, 0x0, 0x0);
        gbc.writeMem(0x18f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1a36);
        EXPECT(gbc.pc(), 0x191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0116
        gbc.setState(0xaf26, 0x47b2, 0x7300, 0x440f, 0x69e4, 0xf100, 0x0, 0x0);
        gbc.writeMem(0xaf26, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x47b2);
        EXPECT(gbc.pc(), 0xaf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf26), 0xcb);
        EXPECT(gbc.readMem(0xaf27), 0x3d);
        // CB 3D 0117
        gbc.setState(0xcdf1, 0x1c7e, 0x82c0, 0x4329, 0x73cd, 0xe4ac, 0x0, 0x0);
        gbc.writeMem(0xcdf1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1c7e);
        EXPECT(gbc.pc(), 0xcdf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf1), 0xcb);
        EXPECT(gbc.readMem(0xcdf2), 0x3d);
        // CB 3D 0118
        gbc.setState(0x9a77, 0xde47, 0x1510, 0x5b64, 0xd51a, 0x1d40, 0x1, 0x1);
        gbc.writeMem(0x9a77, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xde47);
        EXPECT(gbc.pc(), 0x9a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a77), 0xcb);
        EXPECT(gbc.readMem(0x9a78), 0x3d);
        // CB 3D 0119
        gbc.setState(0xb45b, 0x769f, 0xb60, 0x51d8, 0x22e4, 0x3951, 0x0, 0x1);
        gbc.writeMem(0xb45b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x769f);
        EXPECT(gbc.pc(), 0xb45d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45b), 0xcb);
        EXPECT(gbc.readMem(0xb45c), 0x3d);
        // CB 3D 011B
        gbc.setState(0x6c9c, 0xa7f, 0xaf00, 0x41e2, 0x5784, 0x9d4e, 0x1, 0x0);
        gbc.writeMem(0x6c9c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa7f);
        EXPECT(gbc.pc(), 0x6c9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 011C
        gbc.setState(0x255a, 0x85c2, 0xe000, 0xf3cc, 0xef02, 0xc335, 0x0, 0x1);
        gbc.writeMem(0x255a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x85c2);
        EXPECT(gbc.pc(), 0x255c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 011D
        gbc.setState(0x58dd, 0xe6fb, 0x1bc0, 0x1429, 0x5d0e, 0xfbaf, 0x1, 0x1);
        gbc.writeMem(0x58dd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe6fb);
        EXPECT(gbc.pc(), 0x58df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 011E
        gbc.setState(0x6709, 0x1551, 0x4a60, 0x7e60, 0x7fa6, 0xace4, 0x0, 0x1);
        gbc.writeMem(0x6709, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1551);
        EXPECT(gbc.pc(), 0x670b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 011F
        gbc.setState(0x3190, 0x7786, 0x9e50, 0xe2c7, 0x2f1f, 0x9ce9, 0x0, 0x1);
        gbc.writeMem(0x3190, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7786);
        EXPECT(gbc.pc(), 0x3192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0121
        gbc.setState(0xb184, 0xdc45, 0xc2c0, 0xd9b9, 0x6ddb, 0xb55, 0x0, 0x0);
        gbc.writeMem(0xb184, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xdc45);
        EXPECT(gbc.pc(), 0xb186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb184), 0xcb);
        EXPECT(gbc.readMem(0xb185), 0x3d);
        // CB 3D 0122
        gbc.setState(0x2af7, 0x8e7e, 0x70e0, 0xcf36, 0xc97d, 0x1a7f, 0x0, 0x1);
        gbc.writeMem(0x2af7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8e7e);
        EXPECT(gbc.pc(), 0x2af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0123
        gbc.setState(0x4b6b, 0xdec1, 0xc630, 0xf9ed, 0xe947, 0x3f7b, 0x0, 0x0);
        gbc.writeMem(0x4b6b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xdec1);
        EXPECT(gbc.pc(), 0x4b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0124
        gbc.setState(0x4af3, 0x78a5, 0x1f0, 0x2469, 0xc1b, 0x97ba, 0x1, 0x1);
        gbc.writeMem(0x4af3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x78a5);
        EXPECT(gbc.pc(), 0x4af5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0125
        gbc.setState(0x3a90, 0xd95f, 0xd10, 0x9ad7, 0xf314, 0x9a2d, 0x0, 0x1);
        gbc.writeMem(0x3a90, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd95f);
        EXPECT(gbc.pc(), 0x3a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0126
        gbc.setState(0xc772, 0x720e, 0xc5f0, 0xfe56, 0x56a9, 0x13ac, 0x1, 0x1);
        gbc.writeMem(0xc772, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x720e);
        EXPECT(gbc.pc(), 0xc774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc772), 0xcb);
        EXPECT(gbc.readMem(0xc773), 0x3d);
        // CB 3D 0127
        gbc.setState(0xeb0f, 0xb67, 0x4df0, 0xc398, 0x43b5, 0xa084, 0x0, 0x0);
        gbc.writeMem(0xeb0f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb67);
        EXPECT(gbc.pc(), 0xeb11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb0f), 0xcb);
        EXPECT(gbc.readMem(0xeb10), 0x3d);
        // CB 3D 0128
        gbc.setState(0xa4d5, 0xd457, 0xfbd0, 0x56cc, 0x2b90, 0xa890, 0x1, 0x0);
        gbc.writeMem(0xa4d5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd457);
        EXPECT(gbc.pc(), 0xa4d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4d5), 0xcb);
        EXPECT(gbc.readMem(0xa4d6), 0x3d);
        // CB 3D 0129
        gbc.setState(0x5491, 0x3257, 0xbb00, 0xafe9, 0xf717, 0x874, 0x0, 0x0);
        gbc.writeMem(0x5491, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3257);
        EXPECT(gbc.pc(), 0x5493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 012A
        gbc.setState(0x8c66, 0x2a59, 0xb110, 0x30d8, 0x8a87, 0xe2e, 0x0, 0x0);
        gbc.writeMem(0x8c66, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2a59);
        EXPECT(gbc.pc(), 0x8c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c66), 0xcb);
        EXPECT(gbc.readMem(0x8c67), 0x3d);
        // CB 3D 012B
        gbc.setState(0x6f05, 0xeb88, 0xda10, 0xca19, 0xe8f7, 0x9ac0, 0x1, 0x1);
        gbc.writeMem(0x6f05, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xeb88);
        EXPECT(gbc.pc(), 0x6f07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 012C
        gbc.setState(0x6448, 0x710a, 0x470, 0x3287, 0xaaec, 0xc70a, 0x1, 0x0);
        gbc.writeMem(0x6448, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x710a);
        EXPECT(gbc.pc(), 0x644a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 012D
        gbc.setState(0xd71a, 0xd76b, 0xe1e0, 0xa9bf, 0xd918, 0x3d72, 0x0, 0x0);
        gbc.writeMem(0xd71a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd76b);
        EXPECT(gbc.pc(), 0xd71c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd71a), 0xcb);
        EXPECT(gbc.readMem(0xd71b), 0x3d);
        // CB 3D 012F
        gbc.setState(0x71b2, 0x2dfd, 0xb640, 0x8568, 0xb2a3, 0xe5d1, 0x0, 0x1);
        gbc.writeMem(0x71b2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2dfd);
        EXPECT(gbc.pc(), 0x71b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0130
        gbc.setState(0x7879, 0xbced, 0xa1d0, 0x3f8e, 0xe236, 0x7b8d, 0x0, 0x1);
        gbc.writeMem(0x7879, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbced);
        EXPECT(gbc.pc(), 0x787b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0131
        gbc.setState(0x54f3, 0x1a17, 0x2d30, 0x4b57, 0x499, 0x8ba2, 0x1, 0x0);
        gbc.writeMem(0x54f3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1a17);
        EXPECT(gbc.pc(), 0x54f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0132
        gbc.setState(0xc318, 0xa977, 0x2240, 0xc684, 0xbd0d, 0x1c93, 0x0, 0x0);
        gbc.writeMem(0xc318, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa977);
        EXPECT(gbc.pc(), 0xc31a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc318), 0xcb);
        EXPECT(gbc.readMem(0xc319), 0x3d);
        // CB 3D 0135
        gbc.setState(0x27bd, 0xd0c1, 0xff60, 0x9ccd, 0x1509, 0xed8e, 0x0, 0x0);
        gbc.writeMem(0x27bd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd0c1);
        EXPECT(gbc.pc(), 0x27bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0136
        gbc.setState(0xd34b, 0x7b13, 0xd480, 0xe3dd, 0x305c, 0x7fc1, 0x0, 0x0);
        gbc.writeMem(0xd34b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7b13);
        EXPECT(gbc.pc(), 0xd34d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd34b), 0xcb);
        EXPECT(gbc.readMem(0xd34c), 0x3d);
        // CB 3D 0137
        gbc.setState(0xd950, 0xa1ff, 0x6b00, 0xa5e3, 0x957e, 0xc034, 0x1, 0x1);
        gbc.writeMem(0xd950, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa1ff);
        EXPECT(gbc.pc(), 0xd952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd950), 0xcb);
        EXPECT(gbc.readMem(0xd951), 0x3d);
        // CB 3D 0138
        gbc.setState(0x1f5d, 0xcd81, 0x6530, 0xac4a, 0x16a7, 0xda88, 0x0, 0x0);
        gbc.writeMem(0x1f5d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xcd81);
        EXPECT(gbc.pc(), 0x1f5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0139
        gbc.setState(0x6a41, 0x300f, 0x91b0, 0xa39e, 0x790, 0xfd37, 0x0, 0x1);
        gbc.writeMem(0x6a41, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x300f);
        EXPECT(gbc.pc(), 0x6a43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 013A
        gbc.setState(0x3e27, 0x975d, 0xdca0, 0x546e, 0x98b0, 0x7b76, 0x0, 0x1);
        gbc.writeMem(0x3e27, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x975d);
        EXPECT(gbc.pc(), 0x3e29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 013B
        gbc.setState(0xa693, 0x5c50, 0x9070, 0xd187, 0x4121, 0x8af9, 0x1, 0x1);
        gbc.writeMem(0xa693, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5c50);
        EXPECT(gbc.pc(), 0xa695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa693), 0xcb);
        EXPECT(gbc.readMem(0xa694), 0x3d);
        // CB 3D 013C
        gbc.setState(0x95ee, 0x9d55, 0x8b50, 0x2900, 0x123a, 0xa5ab, 0x1, 0x1);
        gbc.writeMem(0x95ee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9d55);
        EXPECT(gbc.pc(), 0x95f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ee), 0xcb);
        EXPECT(gbc.readMem(0x95ef), 0x3d);
        // CB 3D 013D
        gbc.setState(0x9d1b, 0xc2d5, 0xd730, 0x8e0d, 0xda8b, 0xa3eb, 0x0, 0x0);
        gbc.writeMem(0x9d1b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc2d5);
        EXPECT(gbc.pc(), 0x9d1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d1b), 0xcb);
        EXPECT(gbc.readMem(0x9d1c), 0x3d);
        // CB 3D 013E
        gbc.setState(0x6424, 0xb229, 0xa6c0, 0xe1d0, 0xb8be, 0x5b5c, 0x0, 0x1);
        gbc.writeMem(0x6424, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb229);
        EXPECT(gbc.pc(), 0x6426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 013F
        gbc.setState(0x68d6, 0xc6b0, 0x4c00, 0xa94f, 0x8550, 0xd044, 0x0, 0x0);
        gbc.writeMem(0x68d6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc6b0);
        EXPECT(gbc.pc(), 0x68d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0140
        gbc.setState(0xc9cc, 0xb139, 0x7320, 0xacf3, 0x49a9, 0xb109, 0x1, 0x0);
        gbc.writeMem(0xc9cc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb139);
        EXPECT(gbc.pc(), 0xc9ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9cc), 0xcb);
        EXPECT(gbc.readMem(0xc9cd), 0x3d);
        // CB 3D 0141
        gbc.setState(0x7f78, 0xe346, 0x8940, 0x3623, 0x8ce4, 0xee2a, 0x1, 0x1);
        gbc.writeMem(0x7f78, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe346);
        EXPECT(gbc.pc(), 0x7f7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0142
        gbc.setState(0x65af, 0xfe82, 0xf9b0, 0x7e45, 0xd9c5, 0x91fe, 0x0, 0x1);
        gbc.writeMem(0x65af, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xfe82);
        EXPECT(gbc.pc(), 0x65b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0143
        gbc.setState(0x795c, 0x1463, 0xa70, 0xd5c0, 0x77a9, 0x96f0, 0x1, 0x0);
        gbc.writeMem(0x795c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1463);
        EXPECT(gbc.pc(), 0x795e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0144
        gbc.setState(0x28bf, 0xb02a, 0x6f70, 0x1b8a, 0x6d2b, 0x65f0, 0x0, 0x1);
        gbc.writeMem(0x28bf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb02a);
        EXPECT(gbc.pc(), 0x28c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0145
        gbc.setState(0x9dd5, 0xb606, 0x4f60, 0xa37d, 0x8cee, 0xb20d, 0x0, 0x0);
        gbc.writeMem(0x9dd5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb606);
        EXPECT(gbc.pc(), 0x9dd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd5), 0xcb);
        EXPECT(gbc.readMem(0x9dd6), 0x3d);
        // CB 3D 0146
        gbc.setState(0x7e0c, 0x19cb, 0xba20, 0xd04d, 0x3988, 0xa0de, 0x0, 0x0);
        gbc.writeMem(0x7e0c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x19cb);
        EXPECT(gbc.pc(), 0x7e0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0147
        gbc.setState(0xc58b, 0xcf67, 0xa500, 0xa7e3, 0xb761, 0x1934, 0x1, 0x1);
        gbc.writeMem(0xc58b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xcf67);
        EXPECT(gbc.pc(), 0xc58d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc58b), 0xcb);
        EXPECT(gbc.readMem(0xc58c), 0x3d);
        // CB 3D 0148
        gbc.setState(0xb9c8, 0x1b2, 0x32c0, 0x6b48, 0x67ab, 0x628f, 0x1, 0x1);
        gbc.writeMem(0xb9c8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1b2);
        EXPECT(gbc.pc(), 0xb9ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9c8), 0xcb);
        EXPECT(gbc.readMem(0xb9c9), 0x3d);
        // CB 3D 0149
        gbc.setState(0xbebc, 0x922a, 0xfa40, 0xa782, 0x4fa5, 0xfbe3, 0x0, 0x0);
        gbc.writeMem(0xbebc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x922a);
        EXPECT(gbc.pc(), 0xbebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbebc), 0xcb);
        EXPECT(gbc.readMem(0xbebd), 0x3d);
        // CB 3D 014A
        gbc.setState(0x9270, 0x60a9, 0x1470, 0x6ae7, 0x41ab, 0x8c51, 0x1, 0x0);
        gbc.writeMem(0x9270, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x60a9);
        EXPECT(gbc.pc(), 0x9272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9270), 0xcb);
        EXPECT(gbc.readMem(0x9271), 0x3d);
        // CB 3D 014B
        gbc.setState(0x4a0b, 0x2803, 0xeb20, 0xd79a, 0xc9af, 0x9409, 0x1, 0x1);
        gbc.writeMem(0x4a0b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2803);
        EXPECT(gbc.pc(), 0x4a0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 014C
        gbc.setState(0x93b6, 0x8293, 0x4cc0, 0xf0b4, 0x12d7, 0xf86c, 0x0, 0x1);
        gbc.writeMem(0x93b6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8293);
        EXPECT(gbc.pc(), 0x93b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b6), 0xcb);
        EXPECT(gbc.readMem(0x93b7), 0x3d);
        // CB 3D 014D
        gbc.setState(0x1599, 0x48c, 0xa830, 0x1a05, 0x3e55, 0x3d3b, 0x0, 0x1);
        gbc.writeMem(0x1599, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x48c);
        EXPECT(gbc.pc(), 0x159b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 014E
        gbc.setState(0x83cd, 0xc037, 0x16d0, 0xa9, 0x1537, 0xd7e4, 0x1, 0x0);
        gbc.writeMem(0x83cd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc037);
        EXPECT(gbc.pc(), 0x83cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83cd), 0xcb);
        EXPECT(gbc.readMem(0x83ce), 0x3d);
        // CB 3D 014F
        gbc.setState(0xe763, 0x145d, 0xc7a0, 0x6d37, 0x2e0c, 0x4bf8, 0x1, 0x0);
        gbc.writeMem(0xe763, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x145d);
        EXPECT(gbc.pc(), 0xe765);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe763), 0xcb);
        EXPECT(gbc.readMem(0xe764), 0x3d);
        // CB 3D 0150
        gbc.setState(0x3522, 0x8874, 0xa5e0, 0x3dd8, 0x52e0, 0xe43, 0x1, 0x1);
        gbc.writeMem(0x3522, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8874);
        EXPECT(gbc.pc(), 0x3524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0151
        gbc.setState(0xdba2, 0x493e, 0xc8a0, 0x47cb, 0xdcbc, 0x8961, 0x0, 0x1);
        gbc.writeMem(0xdba2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x493e);
        EXPECT(gbc.pc(), 0xdba4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba2), 0xcb);
        EXPECT(gbc.readMem(0xdba3), 0x3d);
        // CB 3D 0152
        gbc.setState(0x3382, 0x92a3, 0x1260, 0x2724, 0xc7e8, 0x8bc1, 0x1, 0x0);
        gbc.writeMem(0x3382, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x92a3);
        EXPECT(gbc.pc(), 0x3384);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0153
        gbc.setState(0xd8d2, 0xe25e, 0x6210, 0x2c04, 0x9a6f, 0xaeb3, 0x1, 0x1);
        gbc.writeMem(0xd8d2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe25e);
        EXPECT(gbc.pc(), 0xd8d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d2), 0xcb);
        EXPECT(gbc.readMem(0xd8d3), 0x3d);
        // CB 3D 0154
        gbc.setState(0x7282, 0xabfb, 0x9d60, 0xaf24, 0x5f3a, 0xba67, 0x1, 0x1);
        gbc.writeMem(0x7282, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xabfb);
        EXPECT(gbc.pc(), 0x7284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0155
        gbc.setState(0x26c5, 0x6cdc, 0x4660, 0x1a28, 0xd315, 0x77a1, 0x1, 0x1);
        gbc.writeMem(0x26c5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6cdc);
        EXPECT(gbc.pc(), 0x26c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0156
        gbc.setState(0xcfb1, 0x309, 0x48a0, 0xd005, 0xf815, 0xe748, 0x1, 0x0);
        gbc.writeMem(0xcfb1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x309);
        EXPECT(gbc.pc(), 0xcfb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb1), 0xcb);
        EXPECT(gbc.readMem(0xcfb2), 0x3d);
        // CB 3D 0157
        gbc.setState(0x347d, 0x6c4d, 0xf870, 0x4e08, 0x1906, 0x9a98, 0x1, 0x1);
        gbc.writeMem(0x347d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6c4d);
        EXPECT(gbc.pc(), 0x347f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0158
        gbc.setState(0xef7f, 0xfefa, 0xd000, 0x6f44, 0xf920, 0x9ccb, 0x0, 0x0);
        gbc.writeMem(0xef7f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xfefa);
        EXPECT(gbc.pc(), 0xef81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7f), 0xcb);
        EXPECT(gbc.readMem(0xef80), 0x3d);
        // CB 3D 0159
        gbc.setState(0xb7b5, 0x9414, 0x1740, 0x74f9, 0x4f3b, 0x7404, 0x1, 0x1);
        gbc.writeMem(0xb7b5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9414);
        EXPECT(gbc.pc(), 0xb7b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b5), 0xcb);
        EXPECT(gbc.readMem(0xb7b6), 0x3d);
        // CB 3D 015A
        gbc.setState(0x3ded, 0x30e5, 0x1c60, 0x1afa, 0xc2fe, 0xb1cc, 0x0, 0x1);
        gbc.writeMem(0x3ded, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x30e5);
        EXPECT(gbc.pc(), 0x3def);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 015B
        gbc.setState(0xe5da, 0xd55b, 0xfb60, 0x5cdb, 0x460b, 0x73bc, 0x0, 0x0);
        gbc.writeMem(0xe5da, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd55b);
        EXPECT(gbc.pc(), 0xe5dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5da), 0xcb);
        EXPECT(gbc.readMem(0xe5db), 0x3d);
        // CB 3D 015C
        gbc.setState(0x489f, 0x51c2, 0x1ca0, 0x856e, 0xafa2, 0x2f6f, 0x1, 0x1);
        gbc.writeMem(0x489f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x51c2);
        EXPECT(gbc.pc(), 0x48a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 015D
        gbc.setState(0xcb26, 0xe651, 0xac70, 0xa193, 0x8e63, 0xf0b, 0x1, 0x0);
        gbc.writeMem(0xcb26, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe651);
        EXPECT(gbc.pc(), 0xcb28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb26), 0xcb);
        EXPECT(gbc.readMem(0xcb27), 0x3d);
        // CB 3D 015E
        gbc.setState(0xe49e, 0x5f7d, 0xed10, 0x5550, 0x90bb, 0xc075, 0x1, 0x1);
        gbc.writeMem(0xe49e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5f7d);
        EXPECT(gbc.pc(), 0xe4a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe49e), 0xcb);
        EXPECT(gbc.readMem(0xe49f), 0x3d);
        // CB 3D 015F
        gbc.setState(0x522f, 0xc483, 0xa9c0, 0x359e, 0xf8f3, 0x3486, 0x0, 0x1);
        gbc.writeMem(0x522f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc483);
        EXPECT(gbc.pc(), 0x5231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0160
        gbc.setState(0xefcc, 0x805c, 0x7c80, 0xd91f, 0xfa81, 0x51bc, 0x0, 0x0);
        gbc.writeMem(0xefcc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x805c);
        EXPECT(gbc.pc(), 0xefce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefcc), 0xcb);
        EXPECT(gbc.readMem(0xefcd), 0x3d);
        // CB 3D 0161
        gbc.setState(0xc34a, 0xe0d2, 0x3ea0, 0x6375, 0x20ba, 0x5ab0, 0x0, 0x1);
        gbc.writeMem(0xc34a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe0d2);
        EXPECT(gbc.pc(), 0xc34c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc34a), 0xcb);
        EXPECT(gbc.readMem(0xc34b), 0x3d);
        // CB 3D 0162
        gbc.setState(0x2d4a, 0x504f, 0x4620, 0x14c4, 0x9c08, 0xb496, 0x0, 0x0);
        gbc.writeMem(0x2d4a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x504f);
        EXPECT(gbc.pc(), 0x2d4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0163
        gbc.setState(0x5c52, 0xf91a, 0x8a50, 0x3037, 0x4b4, 0x9a19, 0x1, 0x1);
        gbc.writeMem(0x5c52, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf91a);
        EXPECT(gbc.pc(), 0x5c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0164
        gbc.setState(0x6b74, 0x33a6, 0xcd60, 0x3254, 0x9828, 0xd6d6, 0x1, 0x1);
        gbc.writeMem(0x6b74, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x33a6);
        EXPECT(gbc.pc(), 0x6b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0165
        gbc.setState(0x1b15, 0x3a58, 0x2220, 0x8d64, 0x25e7, 0xfa0a, 0x0, 0x0);
        gbc.writeMem(0x1b15, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3a58);
        EXPECT(gbc.pc(), 0x1b17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0166
        gbc.setState(0x31cc, 0xe10c, 0x7e0, 0x4378, 0xcfc1, 0x1429, 0x0, 0x1);
        gbc.writeMem(0x31cc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe10c);
        EXPECT(gbc.pc(), 0x31ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0167
        gbc.setState(0x401d, 0x816a, 0x6e70, 0x98d6, 0x8627, 0xf54c, 0x0, 0x1);
        gbc.writeMem(0x401d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x816a);
        EXPECT(gbc.pc(), 0x401f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0168
        gbc.setState(0x97e5, 0xa29e, 0xbfb0, 0xde35, 0x429b, 0xf4, 0x1, 0x0);
        gbc.writeMem(0x97e5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa29e);
        EXPECT(gbc.pc(), 0x97e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e5), 0xcb);
        EXPECT(gbc.readMem(0x97e6), 0x3d);
        // CB 3D 0169
        gbc.setState(0xc99f, 0x2ccf, 0xc390, 0xc5e, 0x3e1b, 0x7194, 0x0, 0x0);
        gbc.writeMem(0xc99f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2ccf);
        EXPECT(gbc.pc(), 0xc9a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc99f), 0xcb);
        EXPECT(gbc.readMem(0xc9a0), 0x3d);
        // CB 3D 016A
        gbc.setState(0x7639, 0xc9a0, 0xe6d0, 0xd002, 0x3868, 0x244b, 0x1, 0x1);
        gbc.writeMem(0x7639, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc9a0);
        EXPECT(gbc.pc(), 0x763b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 016B
        gbc.setState(0xdaa2, 0x709d, 0x6930, 0xd4fd, 0x7a06, 0x662f, 0x0, 0x0);
        gbc.writeMem(0xdaa2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x709d);
        EXPECT(gbc.pc(), 0xdaa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaa2), 0xcb);
        EXPECT(gbc.readMem(0xdaa3), 0x3d);
        // CB 3D 016C
        gbc.setState(0xd464, 0x5302, 0x2740, 0xbff2, 0x8488, 0x2bca, 0x1, 0x0);
        gbc.writeMem(0xd464, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5302);
        EXPECT(gbc.pc(), 0xd466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd464), 0xcb);
        EXPECT(gbc.readMem(0xd465), 0x3d);
        // CB 3D 016D
        gbc.setState(0x6e3a, 0xd245, 0xd640, 0x6620, 0xaf30, 0x9a36, 0x1, 0x0);
        gbc.writeMem(0x6e3a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd245);
        EXPECT(gbc.pc(), 0x6e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 016E
        gbc.setState(0xbe71, 0x9874, 0x55a0, 0x5b76, 0xd24d, 0x13d5, 0x1, 0x0);
        gbc.writeMem(0xbe71, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9874);
        EXPECT(gbc.pc(), 0xbe73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe71), 0xcb);
        EXPECT(gbc.readMem(0xbe72), 0x3d);
        // CB 3D 016F
        gbc.setState(0xde5a, 0x9d12, 0xa930, 0xfac3, 0xfd66, 0xf8c6, 0x1, 0x0);
        gbc.writeMem(0xde5a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9d12);
        EXPECT(gbc.pc(), 0xde5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde5a), 0xcb);
        EXPECT(gbc.readMem(0xde5b), 0x3d);
        // CB 3D 0170
        gbc.setState(0xaf12, 0x89c5, 0xe180, 0xef2f, 0xcc3d, 0xd265, 0x1, 0x0);
        gbc.writeMem(0xaf12, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x89c5);
        EXPECT(gbc.pc(), 0xaf14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf12), 0xcb);
        EXPECT(gbc.readMem(0xaf13), 0x3d);
        // CB 3D 0171
        gbc.setState(0x80b7, 0x34a1, 0x540, 0xcd8c, 0xe844, 0xa7ba, 0x1, 0x0);
        gbc.writeMem(0x80b7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x34a1);
        EXPECT(gbc.pc(), 0x80b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80b7), 0xcb);
        EXPECT(gbc.readMem(0x80b8), 0x3d);
        // CB 3D 0172
        gbc.setState(0xba0d, 0x3519, 0xe90, 0x5a33, 0x957f, 0x1080, 0x1, 0x1);
        gbc.writeMem(0xba0d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3519);
        EXPECT(gbc.pc(), 0xba0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba0d), 0xcb);
        EXPECT(gbc.readMem(0xba0e), 0x3d);
        // CB 3D 0173
        gbc.setState(0xf21, 0x9cb8, 0xa00, 0x2b26, 0x76b2, 0x8a65, 0x0, 0x0);
        gbc.writeMem(0xf21, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9cb8);
        EXPECT(gbc.pc(), 0xf23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0174
        gbc.setState(0x2fa1, 0x3987, 0x8f50, 0x184e, 0x91ab, 0x4223, 0x1, 0x1);
        gbc.writeMem(0x2fa1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3987);
        EXPECT(gbc.pc(), 0x2fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0175
        gbc.setState(0x5b31, 0xea27, 0x3d70, 0x4a06, 0x8368, 0xc4c, 0x1, 0x0);
        gbc.writeMem(0x5b31, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xea27);
        EXPECT(gbc.pc(), 0x5b33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0176
        gbc.setState(0x6095, 0xd442, 0x550, 0xeb09, 0x8872, 0x3ff7, 0x0, 0x0);
        gbc.writeMem(0x6095, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd442);
        EXPECT(gbc.pc(), 0x6097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0177
        gbc.setState(0x4d48, 0x6f3a, 0x83e0, 0xfa1e, 0xa93d, 0xba08, 0x1, 0x0);
        gbc.writeMem(0x4d48, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6f3a);
        EXPECT(gbc.pc(), 0x4d4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0178
        gbc.setState(0xbb9, 0x18f3, 0x4aa0, 0xd957, 0xa067, 0xbd1f, 0x0, 0x1);
        gbc.writeMem(0xbb9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x18f3);
        EXPECT(gbc.pc(), 0xbbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0179
        gbc.setState(0xa1ff, 0x4638, 0x29e0, 0xbce7, 0x9256, 0xf577, 0x0, 0x1);
        gbc.writeMem(0xa1ff, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4638);
        EXPECT(gbc.pc(), 0xa201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ff), 0xcb);
        EXPECT(gbc.readMem(0xa200), 0x3d);
        // CB 3D 017A
        gbc.setState(0x7984, 0x23ef, 0x8ec0, 0x2d11, 0x46e6, 0xac1d, 0x1, 0x0);
        gbc.writeMem(0x7984, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x23ef);
        EXPECT(gbc.pc(), 0x7986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 017B
        gbc.setState(0xdfe9, 0x743a, 0x7350, 0x50fe, 0xb42, 0x6d5b, 0x0, 0x1);
        gbc.writeMem(0xdfe9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x743a);
        EXPECT(gbc.pc(), 0xdfeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfe9), 0xcb);
        EXPECT(gbc.readMem(0xdfea), 0x3d);
        // CB 3D 017C
        gbc.setState(0xbddb, 0x2943, 0x5b20, 0x91e, 0xbcfc, 0xcf3b, 0x0, 0x0);
        gbc.writeMem(0xbddb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2943);
        EXPECT(gbc.pc(), 0xbddd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbddb), 0xcb);
        EXPECT(gbc.readMem(0xbddc), 0x3d);
        // CB 3D 017D
        gbc.setState(0xcce4, 0x6f85, 0x41d0, 0x7c0b, 0xe156, 0x562e, 0x1, 0x1);
        gbc.writeMem(0xcce4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6f85);
        EXPECT(gbc.pc(), 0xcce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcce4), 0xcb);
        EXPECT(gbc.readMem(0xcce5), 0x3d);
        // CB 3D 017E
        gbc.setState(0xb534, 0x5502, 0xa880, 0xa24c, 0xdd70, 0x7783, 0x0, 0x0);
        gbc.writeMem(0xb534, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5502);
        EXPECT(gbc.pc(), 0xb536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb534), 0xcb);
        EXPECT(gbc.readMem(0xb535), 0x3d);
        // CB 3D 017F
        gbc.setState(0x42a6, 0xa05f, 0x2fe0, 0xc5e3, 0x5e6b, 0xc7d6, 0x1, 0x0);
        gbc.writeMem(0x42a6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa05f);
        EXPECT(gbc.pc(), 0x42a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0180
        gbc.setState(0x7b5, 0xb3e0, 0xf940, 0x247, 0xeb4c, 0xf49c, 0x0, 0x0);
        gbc.writeMem(0x7b5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb3e0);
        EXPECT(gbc.pc(), 0x7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0181
        gbc.setState(0xdb00, 0xf36e, 0x9f20, 0xfbff, 0xb396, 0x101d, 0x0, 0x1);
        gbc.writeMem(0xdb00, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf36e);
        EXPECT(gbc.pc(), 0xdb02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb00), 0xcb);
        EXPECT(gbc.readMem(0xdb01), 0x3d);
        // CB 3D 0182
        gbc.setState(0x721, 0x8c1, 0xb7a0, 0xb482, 0xa8c7, 0x7374, 0x1, 0x1);
        gbc.writeMem(0x721, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8c1);
        EXPECT(gbc.pc(), 0x723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0183
        gbc.setState(0x91c5, 0xe843, 0x9f0, 0xc0b1, 0xd183, 0x12e1, 0x0, 0x0);
        gbc.writeMem(0x91c5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe843);
        EXPECT(gbc.pc(), 0x91c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c5), 0xcb);
        EXPECT(gbc.readMem(0x91c6), 0x3d);
        // CB 3D 0184
        gbc.setState(0xa7a2, 0xe57f, 0xd280, 0x6505, 0xe8a7, 0xb032, 0x0, 0x0);
        gbc.writeMem(0xa7a2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe57f);
        EXPECT(gbc.pc(), 0xa7a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a2), 0xcb);
        EXPECT(gbc.readMem(0xa7a3), 0x3d);
        // CB 3D 0185
        gbc.setState(0xb05f, 0x1149, 0x960, 0xa333, 0x258e, 0xdb23, 0x0, 0x1);
        gbc.writeMem(0xb05f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1149);
        EXPECT(gbc.pc(), 0xb061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb05f), 0xcb);
        EXPECT(gbc.readMem(0xb060), 0x3d);
        // CB 3D 0186
        gbc.setState(0x2b82, 0x8316, 0x6a60, 0x5461, 0x475d, 0x9bde, 0x1, 0x0);
        gbc.writeMem(0x2b82, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8316);
        EXPECT(gbc.pc(), 0x2b84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0187
        gbc.setState(0x7767, 0xe5f6, 0xe440, 0x7f90, 0x5f0f, 0x6499, 0x0, 0x0);
        gbc.writeMem(0x7767, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe5f6);
        EXPECT(gbc.pc(), 0x7769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0188
        gbc.setState(0xb88d, 0x6751, 0xd7c0, 0xd93c, 0x67a7, 0x97bd, 0x0, 0x1);
        gbc.writeMem(0xb88d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6751);
        EXPECT(gbc.pc(), 0xb88f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb88d), 0xcb);
        EXPECT(gbc.readMem(0xb88e), 0x3d);
        // CB 3D 0189
        gbc.setState(0xa886, 0x4e9d, 0x4050, 0xa774, 0x678a, 0xd6dc, 0x1, 0x1);
        gbc.writeMem(0xa886, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4e9d);
        EXPECT(gbc.pc(), 0xa888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa886), 0xcb);
        EXPECT(gbc.readMem(0xa887), 0x3d);
        // CB 3D 018A
        gbc.setState(0xdb64, 0x4ef7, 0x3340, 0x5e1d, 0x1f00, 0xc879, 0x1, 0x1);
        gbc.writeMem(0xdb64, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4ef7);
        EXPECT(gbc.pc(), 0xdb66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb64), 0xcb);
        EXPECT(gbc.readMem(0xdb65), 0x3d);
        // CB 3D 018B
        gbc.setState(0x3f82, 0x24a8, 0x2970, 0xf6e5, 0x5580, 0xd826, 0x1, 0x0);
        gbc.writeMem(0x3f82, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x24a8);
        EXPECT(gbc.pc(), 0x3f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 018C
        gbc.setState(0x3fb, 0x2fe8, 0x93d0, 0x219b, 0x3d1, 0x1609, 0x0, 0x1);
        gbc.writeMem(0x3fb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2fe8);
        EXPECT(gbc.pc(), 0x3fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 018D
        gbc.setState(0xd32, 0x55b8, 0x73f0, 0x789c, 0x26ea, 0xc728, 0x0, 0x1);
        gbc.writeMem(0xd32, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x55b8);
        EXPECT(gbc.pc(), 0xd34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 018E
        gbc.setState(0x3d54, 0xcd18, 0xb8d0, 0x399e, 0x30e9, 0xc138, 0x0, 0x1);
        gbc.writeMem(0x3d54, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xcd18);
        EXPECT(gbc.pc(), 0x3d56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 018F
        gbc.setState(0x74ee, 0x9ad8, 0xfb20, 0xcced, 0x8608, 0x1489, 0x1, 0x1);
        gbc.writeMem(0x74ee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9ad8);
        EXPECT(gbc.pc(), 0x74f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0191
        gbc.setState(0x6f7d, 0xf664, 0x5760, 0xbae4, 0x34d7, 0x716b, 0x0, 0x1);
        gbc.writeMem(0x6f7d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf664);
        EXPECT(gbc.pc(), 0x6f7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0192
        gbc.setState(0x50fe, 0x4560, 0xcbb0, 0xeadd, 0x9f4e, 0x6f33, 0x1, 0x0);
        gbc.writeMem(0x50fe, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4560);
        EXPECT(gbc.pc(), 0x5100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0193
        gbc.setState(0x4405, 0x8e32, 0x8c70, 0x9474, 0x3274, 0x8ae5, 0x0, 0x1);
        gbc.writeMem(0x4405, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8e32);
        EXPECT(gbc.pc(), 0x4407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0194
        gbc.setState(0xecfa, 0xb7bd, 0xe020, 0x6b99, 0x5c40, 0x2858, 0x1, 0x1);
        gbc.writeMem(0xecfa, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb7bd);
        EXPECT(gbc.pc(), 0xecfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecfa), 0xcb);
        EXPECT(gbc.readMem(0xecfb), 0x3d);
        // CB 3D 0195
        gbc.setState(0xa40d, 0x9030, 0x7950, 0xbb0b, 0xeaa0, 0xdf96, 0x0, 0x1);
        gbc.writeMem(0xa40d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9030);
        EXPECT(gbc.pc(), 0xa40f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa40d), 0xcb);
        EXPECT(gbc.readMem(0xa40e), 0x3d);
        // CB 3D 0196
        gbc.setState(0x6b54, 0xd9d2, 0x1b10, 0xb72, 0x987d, 0x352e, 0x0, 0x1);
        gbc.writeMem(0x6b54, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd9d2);
        EXPECT(gbc.pc(), 0x6b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0197
        gbc.setState(0x4c3f, 0x23f3, 0x21d0, 0x9fa1, 0x792a, 0xfc06, 0x1, 0x0);
        gbc.writeMem(0x4c3f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x23f3);
        EXPECT(gbc.pc(), 0x4c41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0198
        gbc.setState(0x83a, 0xe0ee, 0xff20, 0x2cdb, 0x9903, 0xfc33, 0x1, 0x1);
        gbc.writeMem(0x83a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe0ee);
        EXPECT(gbc.pc(), 0x83c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0199
        gbc.setState(0x548a, 0xbf1f, 0xd820, 0xb2eb, 0xa47e, 0x8cee, 0x1, 0x1);
        gbc.writeMem(0x548a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xbf1f);
        EXPECT(gbc.pc(), 0x548c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 019A
        gbc.setState(0x61eb, 0x9e46, 0xe9c0, 0x43af, 0x87f9, 0x8b0d, 0x1, 0x0);
        gbc.writeMem(0x61eb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9e46);
        EXPECT(gbc.pc(), 0x61ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 019B
        gbc.setState(0x62b7, 0xc7ac, 0xdcb0, 0xa6b8, 0xe054, 0xb3d5, 0x0, 0x1);
        gbc.writeMem(0x62b7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc7ac);
        EXPECT(gbc.pc(), 0x62b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 019C
        gbc.setState(0x3db6, 0xe293, 0x10e0, 0x8028, 0x5ec0, 0x1699, 0x0, 0x1);
        gbc.writeMem(0x3db6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe293);
        EXPECT(gbc.pc(), 0x3db8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 019D
        gbc.setState(0x9a80, 0x22bf, 0x72e0, 0x4a83, 0xa498, 0x8a5f, 0x0, 0x0);
        gbc.writeMem(0x9a80, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x22bf);
        EXPECT(gbc.pc(), 0x9a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a80), 0xcb);
        EXPECT(gbc.readMem(0x9a81), 0x3d);
        // CB 3D 019E
        gbc.setState(0x62f4, 0x606e, 0x5280, 0x40d2, 0xbcbf, 0x2936, 0x0, 0x1);
        gbc.writeMem(0x62f4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x606e);
        EXPECT(gbc.pc(), 0x62f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 019F
        gbc.setState(0x93a7, 0x92d3, 0x1f10, 0xeb87, 0x6236, 0x749d, 0x1, 0x0);
        gbc.writeMem(0x93a7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x92d3);
        EXPECT(gbc.pc(), 0x93a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93a7), 0xcb);
        EXPECT(gbc.readMem(0x93a8), 0x3d);
        // CB 3D 01A0
        gbc.setState(0x1cd6, 0x2a23, 0x7550, 0x5550, 0x984d, 0xecc4, 0x1, 0x0);
        gbc.writeMem(0x1cd6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2a23);
        EXPECT(gbc.pc(), 0x1cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01A1
        gbc.setState(0xaa83, 0x757e, 0x66e0, 0x8413, 0xf6db, 0xb308, 0x0, 0x1);
        gbc.writeMem(0xaa83, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x757e);
        EXPECT(gbc.pc(), 0xaa85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa83), 0xcb);
        EXPECT(gbc.readMem(0xaa84), 0x3d);
        // CB 3D 01A3
        gbc.setState(0x679d, 0x4459, 0x3f50, 0x633c, 0x22f, 0xe87d, 0x1, 0x0);
        gbc.writeMem(0x679d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4459);
        EXPECT(gbc.pc(), 0x679f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01A6
        gbc.setState(0x28d8, 0xda15, 0xa410, 0xea4, 0xb5af, 0xf6f, 0x0, 0x1);
        gbc.writeMem(0x28d8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xda15);
        EXPECT(gbc.pc(), 0x28da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01A7
        gbc.setState(0xb4fb, 0x7fae, 0x3f50, 0xdfc0, 0x9656, 0x6f25, 0x1, 0x1);
        gbc.writeMem(0xb4fb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7fae);
        EXPECT(gbc.pc(), 0xb4fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4fb), 0xcb);
        EXPECT(gbc.readMem(0xb4fc), 0x3d);
        // CB 3D 01A8
        gbc.setState(0xc0b2, 0x204e, 0xaa90, 0x1053, 0xc3df, 0xa178, 0x0, 0x0);
        gbc.writeMem(0xc0b2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x204e);
        EXPECT(gbc.pc(), 0xc0b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0b2), 0xcb);
        EXPECT(gbc.readMem(0xc0b3), 0x3d);
        // CB 3D 01A9
        gbc.setState(0x710a, 0xd86b, 0xd910, 0xce72, 0xfba6, 0x858c, 0x0, 0x0);
        gbc.writeMem(0x710a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd86b);
        EXPECT(gbc.pc(), 0x710c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01AB
        gbc.setState(0x4a4c, 0x73e8, 0x5f0, 0x3732, 0x23c2, 0x721e, 0x1, 0x1);
        gbc.writeMem(0x4a4c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x73e8);
        EXPECT(gbc.pc(), 0x4a4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01AC
        gbc.setState(0xab05, 0xd1b9, 0xfeb0, 0x909e, 0xb58e, 0x6fa4, 0x0, 0x0);
        gbc.writeMem(0xab05, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd1b9);
        EXPECT(gbc.pc(), 0xab07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab05), 0xcb);
        EXPECT(gbc.readMem(0xab06), 0x3d);
        // CB 3D 01AD
        gbc.setState(0xac8d, 0xb646, 0xda20, 0x1cdd, 0x3452, 0x2ae, 0x0, 0x1);
        gbc.writeMem(0xac8d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb646);
        EXPECT(gbc.pc(), 0xac8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac8d), 0xcb);
        EXPECT(gbc.readMem(0xac8e), 0x3d);
        // CB 3D 01AE
        gbc.setState(0x2c93, 0xa5bd, 0x3810, 0xa2b5, 0x4046, 0x630c, 0x0, 0x0);
        gbc.writeMem(0x2c93, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa5bd);
        EXPECT(gbc.pc(), 0x2c95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01AF
        gbc.setState(0x652d, 0xf161, 0xb110, 0x5b2, 0xc3ff, 0x2596, 0x0, 0x1);
        gbc.writeMem(0x652d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf161);
        EXPECT(gbc.pc(), 0x652f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01B0
        gbc.setState(0xc290, 0x7f9f, 0xe000, 0xf875, 0xbb05, 0xb5a5, 0x1, 0x1);
        gbc.writeMem(0xc290, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7f9f);
        EXPECT(gbc.pc(), 0xc292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc290), 0xcb);
        EXPECT(gbc.readMem(0xc291), 0x3d);
        // CB 3D 01B1
        gbc.setState(0x2580, 0x54fd, 0x11b0, 0x3eb6, 0x64d5, 0xb225, 0x0, 0x0);
        gbc.writeMem(0x2580, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x54fd);
        EXPECT(gbc.pc(), 0x2582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01B2
        gbc.setState(0x404d, 0xe01, 0xc2b0, 0x68b9, 0x83f7, 0x776f, 0x1, 0x1);
        gbc.writeMem(0x404d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe01);
        EXPECT(gbc.pc(), 0x404f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01B3
        gbc.setState(0x334e, 0x691, 0xd00, 0x19d1, 0x9b8e, 0x9572, 0x1, 0x1);
        gbc.writeMem(0x334e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x691);
        EXPECT(gbc.pc(), 0x3350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01B4
        gbc.setState(0xb6b9, 0xdef6, 0x4070, 0x4d95, 0xf6f0, 0xff2e, 0x0, 0x0);
        gbc.writeMem(0xb6b9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xdef6);
        EXPECT(gbc.pc(), 0xb6bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b9), 0xcb);
        EXPECT(gbc.readMem(0xb6ba), 0x3d);
        // CB 3D 01B5
        gbc.setState(0xbcc8, 0x4640, 0xa1a0, 0x78ca, 0xbdf7, 0x6da1, 0x0, 0x0);
        gbc.writeMem(0xbcc8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4640);
        EXPECT(gbc.pc(), 0xbcca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcc8), 0xcb);
        EXPECT(gbc.readMem(0xbcc9), 0x3d);
        // CB 3D 01B6
        gbc.setState(0xb5c9, 0xca14, 0x82a0, 0xcb74, 0xc1ad, 0xa9d3, 0x1, 0x1);
        gbc.writeMem(0xb5c9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xca14);
        EXPECT(gbc.pc(), 0xb5cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5c9), 0xcb);
        EXPECT(gbc.readMem(0xb5ca), 0x3d);
        // CB 3D 01B7
        gbc.setState(0x6344, 0xf4f6, 0x14f0, 0x1852, 0x4340, 0xc11f, 0x1, 0x1);
        gbc.writeMem(0x6344, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf4f6);
        EXPECT(gbc.pc(), 0x6346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01B8
        gbc.setState(0xbda8, 0xac3f, 0x3b10, 0xa18b, 0x80fd, 0xd201, 0x1, 0x1);
        gbc.writeMem(0xbda8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xac3f);
        EXPECT(gbc.pc(), 0xbdaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda8), 0xcb);
        EXPECT(gbc.readMem(0xbda9), 0x3d);
        // CB 3D 01B9
        gbc.setState(0x2655, 0x6cc6, 0x6ee0, 0xa1e1, 0x547c, 0x84f8, 0x1, 0x0);
        gbc.writeMem(0x2655, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6cc6);
        EXPECT(gbc.pc(), 0x2657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01BA
        gbc.setState(0x16fb, 0x97db, 0xdd30, 0x4ba0, 0x6a16, 0x9d3c, 0x0, 0x0);
        gbc.writeMem(0x16fb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x97db);
        EXPECT(gbc.pc(), 0x16fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01BB
        gbc.setState(0xa5de, 0xdfde, 0x170, 0x53a9, 0xe29e, 0x60e7, 0x0, 0x0);
        gbc.writeMem(0xa5de, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xdfde);
        EXPECT(gbc.pc(), 0xa5e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5de), 0xcb);
        EXPECT(gbc.readMem(0xa5df), 0x3d);
        // CB 3D 01BC
        gbc.setState(0x2364, 0xcd93, 0x84d0, 0xf422, 0xeb45, 0x7c52, 0x1, 0x0);
        gbc.writeMem(0x2364, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcd93);
        EXPECT(gbc.pc(), 0x2366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01BD
        gbc.setState(0x739, 0x4cf9, 0x5ae0, 0x1782, 0x8336, 0xaca3, 0x1, 0x0);
        gbc.writeMem(0x739, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4cf9);
        EXPECT(gbc.pc(), 0x73b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01BE
        gbc.setState(0x49ba, 0x41b5, 0xd640, 0x2771, 0x1714, 0xa8ef, 0x0, 0x0);
        gbc.writeMem(0x49ba, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x41b5);
        EXPECT(gbc.pc(), 0x49bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01BF
        gbc.setState(0x99f0, 0x6a45, 0xc00, 0x1907, 0x493e, 0x7779, 0x1, 0x0);
        gbc.writeMem(0x99f0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6a45);
        EXPECT(gbc.pc(), 0x99f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f0), 0xcb);
        EXPECT(gbc.readMem(0x99f1), 0x3d);
        // CB 3D 01C0
        gbc.setState(0x5fe2, 0xd4d9, 0x5c0, 0x2125, 0x1bee, 0xf252, 0x0, 0x0);
        gbc.writeMem(0x5fe2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd4d9);
        EXPECT(gbc.pc(), 0x5fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01C1
        gbc.setState(0x8495, 0x8b6c, 0x6980, 0x26ac, 0xe660, 0x2485, 0x0, 0x0);
        gbc.writeMem(0x8495, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8b6c);
        EXPECT(gbc.pc(), 0x8497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8495), 0xcb);
        EXPECT(gbc.readMem(0x8496), 0x3d);
        // CB 3D 01C2
        gbc.setState(0x28c0, 0x953b, 0xc230, 0xe3ae, 0x3885, 0xf69f, 0x0, 0x0);
        gbc.writeMem(0x28c0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x953b);
        EXPECT(gbc.pc(), 0x28c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01C3
        gbc.setState(0x5ae5, 0xa135, 0x85a0, 0x5a91, 0x254c, 0x73c2, 0x0, 0x0);
        gbc.writeMem(0x5ae5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa135);
        EXPECT(gbc.pc(), 0x5ae7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01C4
        gbc.setState(0xbf17, 0xe7a9, 0x3b80, 0xf3c1, 0x9193, 0x2a64, 0x0, 0x1);
        gbc.writeMem(0xbf17, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe7a9);
        EXPECT(gbc.pc(), 0xbf19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf17), 0xcb);
        EXPECT(gbc.readMem(0xbf18), 0x3d);
        // CB 3D 01C5
        gbc.setState(0x86ca, 0x1bc7, 0xb9f0, 0x7bec, 0xdc0e, 0xad6d, 0x1, 0x0);
        gbc.writeMem(0x86ca, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1bc7);
        EXPECT(gbc.pc(), 0x86cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ca), 0xcb);
        EXPECT(gbc.readMem(0x86cb), 0x3d);
        // CB 3D 01C6
        gbc.setState(0xda20, 0xf530, 0x590, 0x47f1, 0xa692, 0x5e60, 0x0, 0x1);
        gbc.writeMem(0xda20, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf530);
        EXPECT(gbc.pc(), 0xda22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda20), 0xcb);
        EXPECT(gbc.readMem(0xda21), 0x3d);
        // CB 3D 01C7
        gbc.setState(0xb5cf, 0xe31e, 0x1890, 0xcb9f, 0x4a84, 0x365b, 0x0, 0x0);
        gbc.writeMem(0xb5cf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe31e);
        EXPECT(gbc.pc(), 0xb5d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5cf), 0xcb);
        EXPECT(gbc.readMem(0xb5d0), 0x3d);
        // CB 3D 01C8
        gbc.setState(0x498e, 0xb1ae, 0x9f00, 0xb7df, 0x8ac8, 0xd0be, 0x0, 0x0);
        gbc.writeMem(0x498e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb1ae);
        EXPECT(gbc.pc(), 0x4990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01C9
        gbc.setState(0x160b, 0x75de, 0x84d0, 0xbd23, 0x28c9, 0xbe95, 0x0, 0x1);
        gbc.writeMem(0x160b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x75de);
        EXPECT(gbc.pc(), 0x160d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01CA
        gbc.setState(0x7d0d, 0x84a9, 0x8860, 0x5a88, 0x35c8, 0xe24f, 0x1, 0x1);
        gbc.writeMem(0x7d0d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x84a9);
        EXPECT(gbc.pc(), 0x7d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01CB
        gbc.setState(0x48bb, 0xc283, 0xb160, 0x952, 0xa358, 0xbe7a, 0x0, 0x0);
        gbc.writeMem(0x48bb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc283);
        EXPECT(gbc.pc(), 0x48bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01CC
        gbc.setState(0xa20e, 0xe452, 0x55c0, 0x9e81, 0xbea7, 0xa408, 0x0, 0x1);
        gbc.writeMem(0xa20e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe452);
        EXPECT(gbc.pc(), 0xa210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa20e), 0xcb);
        EXPECT(gbc.readMem(0xa20f), 0x3d);
        // CB 3D 01CD
        gbc.setState(0x134e, 0xe811, 0x8ff0, 0x1c6d, 0x4a84, 0xd6ba, 0x1, 0x1);
        gbc.writeMem(0x134e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe811);
        EXPECT(gbc.pc(), 0x1350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01CE
        gbc.setState(0xa69d, 0x6a8, 0xe550, 0xd1e3, 0xf2b, 0xdbae, 0x1, 0x0);
        gbc.writeMem(0xa69d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6a8);
        EXPECT(gbc.pc(), 0xa69f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa69d), 0xcb);
        EXPECT(gbc.readMem(0xa69e), 0x3d);
        // CB 3D 01CF
        gbc.setState(0x5784, 0xb877, 0xa740, 0xd06b, 0x3bbf, 0x2b14, 0x1, 0x0);
        gbc.writeMem(0x5784, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb877);
        EXPECT(gbc.pc(), 0x5786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01D0
        gbc.setState(0xd7bd, 0x863f, 0x9fd0, 0x857e, 0x5e8c, 0xc41c, 0x1, 0x0);
        gbc.writeMem(0xd7bd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x863f);
        EXPECT(gbc.pc(), 0xd7bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7bd), 0xcb);
        EXPECT(gbc.readMem(0xd7be), 0x3d);
        // CB 3D 01D1
        gbc.setState(0xb77f, 0x9a66, 0xce90, 0x9ef3, 0x9162, 0xce8, 0x0, 0x1);
        gbc.writeMem(0xb77f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9a66);
        EXPECT(gbc.pc(), 0xb781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb77f), 0xcb);
        EXPECT(gbc.readMem(0xb780), 0x3d);
        // CB 3D 01D2
        gbc.setState(0x9719, 0x5b69, 0xca40, 0x4244, 0xb54c, 0xdbd4, 0x1, 0x0);
        gbc.writeMem(0x9719, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5b69);
        EXPECT(gbc.pc(), 0x971b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9719), 0xcb);
        EXPECT(gbc.readMem(0x971a), 0x3d);
        // CB 3D 01D4
        gbc.setState(0xd4e5, 0x4dc4, 0x7c50, 0xbb80, 0xfe0c, 0x1dbc, 0x1, 0x1);
        gbc.writeMem(0xd4e5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4dc4);
        EXPECT(gbc.pc(), 0xd4e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e5), 0xcb);
        EXPECT(gbc.readMem(0xd4e6), 0x3d);
        // CB 3D 01D5
        gbc.setState(0xa513, 0x3ea0, 0xe550, 0x658f, 0xc6fc, 0x90a4, 0x1, 0x1);
        gbc.writeMem(0xa513, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3ea0);
        EXPECT(gbc.pc(), 0xa515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa513), 0xcb);
        EXPECT(gbc.readMem(0xa514), 0x3d);
        // CB 3D 01D6
        gbc.setState(0x96cf, 0x119c, 0x6700, 0x7d53, 0x3340, 0xec63, 0x1, 0x1);
        gbc.writeMem(0x96cf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x119c);
        EXPECT(gbc.pc(), 0x96d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96cf), 0xcb);
        EXPECT(gbc.readMem(0x96d0), 0x3d);
        // CB 3D 01D7
        gbc.setState(0xbd9a, 0xd673, 0xbaa0, 0x990d, 0x85eb, 0x1a82, 0x0, 0x1);
        gbc.writeMem(0xbd9a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd673);
        EXPECT(gbc.pc(), 0xbd9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd9a), 0xcb);
        EXPECT(gbc.readMem(0xbd9b), 0x3d);
        // CB 3D 01D8
        gbc.setState(0xafb5, 0x896c, 0x9530, 0x40c5, 0x7035, 0xaa0b, 0x1, 0x1);
        gbc.writeMem(0xafb5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x896c);
        EXPECT(gbc.pc(), 0xafb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafb5), 0xcb);
        EXPECT(gbc.readMem(0xafb6), 0x3d);
        // CB 3D 01D9
        gbc.setState(0x2f04, 0xf991, 0x5ee0, 0x2148, 0xdc08, 0xd1e3, 0x1, 0x1);
        gbc.writeMem(0x2f04, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf991);
        EXPECT(gbc.pc(), 0x2f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01DA
        gbc.setState(0xcbef, 0x311e, 0xcb80, 0x8fd3, 0x48f3, 0x6bba, 0x1, 0x1);
        gbc.writeMem(0xcbef, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x311e);
        EXPECT(gbc.pc(), 0xcbf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbef), 0xcb);
        EXPECT(gbc.readMem(0xcbf0), 0x3d);
        // CB 3D 01DB
        gbc.setState(0xa45, 0xb4b0, 0x64e0, 0x4b1f, 0xd225, 0xd47d, 0x1, 0x0);
        gbc.writeMem(0xa45, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb4b0);
        EXPECT(gbc.pc(), 0xa47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01DC
        gbc.setState(0xb2cf, 0x2be, 0x1c10, 0x4804, 0xe9ec, 0xc8a8, 0x0, 0x0);
        gbc.writeMem(0xb2cf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2be);
        EXPECT(gbc.pc(), 0xb2d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2cf), 0xcb);
        EXPECT(gbc.readMem(0xb2d0), 0x3d);
        // CB 3D 01DD
        gbc.setState(0x11e4, 0x4945, 0x8ee0, 0xd4fe, 0x4838, 0x1a27, 0x0, 0x1);
        gbc.writeMem(0x11e4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4945);
        EXPECT(gbc.pc(), 0x11e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01DE
        gbc.setState(0x6d9c, 0x43f0, 0x7e60, 0x85a0, 0x307a, 0xe3a0, 0x0, 0x0);
        gbc.writeMem(0x6d9c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x43f0);
        EXPECT(gbc.pc(), 0x6d9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01DF
        gbc.setState(0x1a7f, 0xbdbd, 0x2930, 0x2fc0, 0x44c1, 0x942b, 0x0, 0x0);
        gbc.writeMem(0x1a7f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbdbd);
        EXPECT(gbc.pc(), 0x1a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01E0
        gbc.setState(0xa810, 0xa1bf, 0x37b0, 0x5d5f, 0x4b95, 0xff1, 0x1, 0x0);
        gbc.writeMem(0xa810, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa1bf);
        EXPECT(gbc.pc(), 0xa812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa810), 0xcb);
        EXPECT(gbc.readMem(0xa811), 0x3d);
        // CB 3D 01E1
        gbc.setState(0xeb2e, 0xc7bc, 0x1b40, 0x8727, 0xbe6d, 0x4f33, 0x0, 0x0);
        gbc.writeMem(0xeb2e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc7bc);
        EXPECT(gbc.pc(), 0xeb30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb2e), 0xcb);
        EXPECT(gbc.readMem(0xeb2f), 0x3d);
        // CB 3D 01E2
        gbc.setState(0xe192, 0xc7d1, 0x9d30, 0x845e, 0xcff6, 0x74d6, 0x1, 0x0);
        gbc.writeMem(0xe192, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc7d1);
        EXPECT(gbc.pc(), 0xe194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe192), 0xcb);
        EXPECT(gbc.readMem(0xe193), 0x3d);
        // CB 3D 01E3
        gbc.setState(0xed2b, 0xf0b1, 0x6170, 0x5448, 0xfb7a, 0xcdea, 0x1, 0x0);
        gbc.writeMem(0xed2b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf0b1);
        EXPECT(gbc.pc(), 0xed2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed2b), 0xcb);
        EXPECT(gbc.readMem(0xed2c), 0x3d);
        // CB 3D 01E4
        gbc.setState(0xd27c, 0xda19, 0xd2b0, 0x430b, 0x919b, 0xefed, 0x1, 0x0);
        gbc.writeMem(0xd27c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xda19);
        EXPECT(gbc.pc(), 0xd27e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd27c), 0xcb);
        EXPECT(gbc.readMem(0xd27d), 0x3d);
        // CB 3D 01E5
        gbc.setState(0xbca7, 0x3b8c, 0x9680, 0x1e46, 0x7787, 0x7cb2, 0x0, 0x1);
        gbc.writeMem(0xbca7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3b8c);
        EXPECT(gbc.pc(), 0xbca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca7), 0xcb);
        EXPECT(gbc.readMem(0xbca8), 0x3d);
        // CB 3D 01E6
        gbc.setState(0x13d1, 0x1c5f, 0x32a0, 0x747d, 0xaf3, 0xe967, 0x1, 0x0);
        gbc.writeMem(0x13d1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1c5f);
        EXPECT(gbc.pc(), 0x13d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01E7
        gbc.setState(0xb8d3, 0xc343, 0x8a20, 0x9473, 0x329d, 0xe493, 0x1, 0x1);
        gbc.writeMem(0xb8d3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc343);
        EXPECT(gbc.pc(), 0xb8d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d3), 0xcb);
        EXPECT(gbc.readMem(0xb8d4), 0x3d);
        // CB 3D 01E8
        gbc.setState(0x275b, 0xa13d, 0xfb80, 0xe13d, 0x48e, 0x52c9, 0x1, 0x1);
        gbc.writeMem(0x275b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa13d);
        EXPECT(gbc.pc(), 0x275d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01E9
        gbc.setState(0x356e, 0x6ae6, 0x280, 0x8a16, 0xbba4, 0xdcb8, 0x0, 0x1);
        gbc.writeMem(0x356e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6ae6);
        EXPECT(gbc.pc(), 0x3570);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01EA
        gbc.setState(0x8d3, 0x16f0, 0xab10, 0x7969, 0x1e33, 0xc846, 0x0, 0x0);
        gbc.writeMem(0x8d3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x16f0);
        EXPECT(gbc.pc(), 0x8d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01EB
        gbc.setState(0x433f, 0x46f6, 0x7500, 0x679, 0x7ad, 0x338e, 0x0, 0x0);
        gbc.writeMem(0x433f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x46f6);
        EXPECT(gbc.pc(), 0x4341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01EC
        gbc.setState(0xaf72, 0xe49c, 0xfc20, 0xbf59, 0x8c0d, 0x5947, 0x1, 0x1);
        gbc.writeMem(0xaf72, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe49c);
        EXPECT(gbc.pc(), 0xaf74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf72), 0xcb);
        EXPECT(gbc.readMem(0xaf73), 0x3d);
        // CB 3D 01ED
        gbc.setState(0x5784, 0x287c, 0x53b0, 0x7056, 0x728c, 0xd8f1, 0x0, 0x1);
        gbc.writeMem(0x5784, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x287c);
        EXPECT(gbc.pc(), 0x5786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01EE
        gbc.setState(0x3da2, 0x27d0, 0x3560, 0xa724, 0xff41, 0xded9, 0x1, 0x1);
        gbc.writeMem(0x3da2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x27d0);
        EXPECT(gbc.pc(), 0x3da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01EF
        gbc.setState(0xb9bc, 0x9bfb, 0x2de0, 0x6f9b, 0xc93a, 0x9249, 0x1, 0x1);
        gbc.writeMem(0xb9bc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9bfb);
        EXPECT(gbc.pc(), 0xb9be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9bc), 0xcb);
        EXPECT(gbc.readMem(0xb9bd), 0x3d);
        // CB 3D 01F0
        gbc.setState(0x4798, 0x3fb2, 0xa2d0, 0xf283, 0x4983, 0xc497, 0x0, 0x1);
        gbc.writeMem(0x4798, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3fb2);
        EXPECT(gbc.pc(), 0x479a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01F1
        gbc.setState(0x859d, 0xb6b, 0x8ca0, 0x6410, 0x116f, 0xa968, 0x1, 0x1);
        gbc.writeMem(0x859d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb6b);
        EXPECT(gbc.pc(), 0x859f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x859d), 0xcb);
        EXPECT(gbc.readMem(0x859e), 0x3d);
        // CB 3D 01F2
        gbc.setState(0x4615, 0x6f33, 0xdc80, 0x473d, 0x8491, 0xf7f2, 0x0, 0x0);
        gbc.writeMem(0x4615, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6f33);
        EXPECT(gbc.pc(), 0x4617);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01F3
        gbc.setState(0xdc83, 0xe488, 0x9530, 0x20d2, 0xce58, 0xd2e6, 0x0, 0x1);
        gbc.writeMem(0xdc83, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe488);
        EXPECT(gbc.pc(), 0xdc85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc83), 0xcb);
        EXPECT(gbc.readMem(0xdc84), 0x3d);
        // CB 3D 01F4
        gbc.setState(0x2a9d, 0x53f0, 0xe360, 0xfb59, 0x95e6, 0x43a0, 0x1, 0x0);
        gbc.writeMem(0x2a9d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x53f0);
        EXPECT(gbc.pc(), 0x2a9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01F5
        gbc.setState(0x117, 0x4e09, 0x2ca0, 0xbc31, 0x1d90, 0xebae, 0x0, 0x0);
        gbc.writeMem(0x117, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4e09);
        EXPECT(gbc.pc(), 0x119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01F6
        gbc.setState(0x8b39, 0x3b73, 0x6250, 0x8541, 0xfc83, 0xbfca, 0x1, 0x1);
        gbc.writeMem(0x8b39, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3b73);
        EXPECT(gbc.pc(), 0x8b3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b39), 0xcb);
        EXPECT(gbc.readMem(0x8b3a), 0x3d);
        // CB 3D 01F7
        gbc.setState(0x38c0, 0x8a82, 0x5570, 0xd32c, 0x236f, 0x1388, 0x0, 0x0);
        gbc.writeMem(0x38c0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8a82);
        EXPECT(gbc.pc(), 0x38c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01F8
        gbc.setState(0x2177, 0x1816, 0xd240, 0x5ffa, 0xefa5, 0x80a2, 0x0, 0x1);
        gbc.writeMem(0x2177, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1816);
        EXPECT(gbc.pc(), 0x2179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01F9
        gbc.setState(0x3f47, 0xb7aa, 0xcd90, 0x9601, 0x91bd, 0xa67f, 0x0, 0x0);
        gbc.writeMem(0x3f47, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb7aa);
        EXPECT(gbc.pc(), 0x3f49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 01FA
        gbc.setState(0xd1ea, 0x46a8, 0x4870, 0x3e96, 0x5aef, 0x4e4c, 0x1, 0x1);
        gbc.writeMem(0xd1ea, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x46a8);
        EXPECT(gbc.pc(), 0xd1ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ea), 0xcb);
        EXPECT(gbc.readMem(0xd1eb), 0x3d);
        // CB 3D 01FB
        gbc.setState(0xc99a, 0xb450, 0x1ce0, 0x9db8, 0x720d, 0x8d48, 0x1, 0x1);
        gbc.writeMem(0xc99a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb450);
        EXPECT(gbc.pc(), 0xc99c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc99a), 0xcb);
        EXPECT(gbc.readMem(0xc99b), 0x3d);
        // CB 3D 01FC
        gbc.setState(0x3d1a, 0x72e1, 0x8410, 0x9bfe, 0x43aa, 0xa83c, 0x0, 0x0);
        gbc.writeMem(0x3d1a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x72e1);
        EXPECT(gbc.pc(), 0x3d1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01FD
        gbc.setState(0x739c, 0xab96, 0xf350, 0xc7e5, 0x3efe, 0x7398, 0x0, 0x0);
        gbc.writeMem(0x739c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xab96);
        EXPECT(gbc.pc(), 0x739e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 01FE
        gbc.setState(0x9b52, 0xc511, 0xf4d0, 0x3a7, 0x9ef9, 0x22b1, 0x1, 0x1);
        gbc.writeMem(0x9b52, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc511);
        EXPECT(gbc.pc(), 0x9b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b52), 0xcb);
        EXPECT(gbc.readMem(0x9b53), 0x3d);
        // CB 3D 01FF
        gbc.setState(0x61c6, 0x8899, 0x3940, 0x6331, 0xe354, 0xb50d, 0x1, 0x1);
        gbc.writeMem(0x61c6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8899);
        EXPECT(gbc.pc(), 0x61c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0200
        gbc.setState(0x4edd, 0x237e, 0xe2d0, 0x99ad, 0x29bb, 0xda64, 0x0, 0x0);
        gbc.writeMem(0x4edd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x237e);
        EXPECT(gbc.pc(), 0x4edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0201
        gbc.setState(0xb48a, 0xfbe8, 0xd360, 0xddb0, 0x899c, 0xe9f2, 0x0, 0x1);
        gbc.writeMem(0xb48a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfbe8);
        EXPECT(gbc.pc(), 0xb48c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb48a), 0xcb);
        EXPECT(gbc.readMem(0xb48b), 0x3d);
        // CB 3D 0202
        gbc.setState(0xef2c, 0x8790, 0x5120, 0x64c6, 0xaab3, 0xf757, 0x0, 0x0);
        gbc.writeMem(0xef2c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8790);
        EXPECT(gbc.pc(), 0xef2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef2c), 0xcb);
        EXPECT(gbc.readMem(0xef2d), 0x3d);
        // CB 3D 0203
        gbc.setState(0x631b, 0x133e, 0x6810, 0xc6f3, 0x8b48, 0x41bc, 0x1, 0x1);
        gbc.writeMem(0x631b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x133e);
        EXPECT(gbc.pc(), 0x631d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0204
        gbc.setState(0x9f15, 0x372b, 0x2800, 0x40f, 0xdf07, 0xb835, 0x1, 0x1);
        gbc.writeMem(0x9f15, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x372b);
        EXPECT(gbc.pc(), 0x9f17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f15), 0xcb);
        EXPECT(gbc.readMem(0x9f16), 0x3d);
        // CB 3D 0205
        gbc.setState(0x6d1, 0xf28d, 0x97e0, 0x712f, 0xa2ea, 0x5957, 0x0, 0x0);
        gbc.writeMem(0x6d1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf28d);
        EXPECT(gbc.pc(), 0x6d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0206
        gbc.setState(0x7573, 0xba7b, 0x6b70, 0x3fe7, 0x26bc, 0xf40c, 0x0, 0x1);
        gbc.writeMem(0x7573, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xba7b);
        EXPECT(gbc.pc(), 0x7575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0207
        gbc.setState(0x82ab, 0xde84, 0x2770, 0x1699, 0x3b9f, 0x4c23, 0x1, 0x0);
        gbc.writeMem(0x82ab, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xde84);
        EXPECT(gbc.pc(), 0x82ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ab), 0xcb);
        EXPECT(gbc.readMem(0x82ac), 0x3d);
        // CB 3D 0208
        gbc.setState(0xbeb3, 0x6996, 0x2600, 0x58e2, 0x922, 0x6be3, 0x0, 0x1);
        gbc.writeMem(0xbeb3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6996);
        EXPECT(gbc.pc(), 0xbeb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeb3), 0xcb);
        EXPECT(gbc.readMem(0xbeb4), 0x3d);
        // CB 3D 0209
        gbc.setState(0x1113, 0x2a67, 0xb70, 0xe5fb, 0x44b5, 0x850, 0x1, 0x0);
        gbc.writeMem(0x1113, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2a67);
        EXPECT(gbc.pc(), 0x1115);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 020A
        gbc.setState(0xd3d0, 0xd5cc, 0xbc80, 0xa3bc, 0xbf0b, 0x9096, 0x1, 0x1);
        gbc.writeMem(0xd3d0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd5cc);
        EXPECT(gbc.pc(), 0xd3d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3d0), 0xcb);
        EXPECT(gbc.readMem(0xd3d1), 0x3d);
        // CB 3D 020B
        gbc.setState(0x9eba, 0x6a6f, 0xed40, 0xf706, 0x654b, 0x1bcf, 0x1, 0x1);
        gbc.writeMem(0x9eba, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6a6f);
        EXPECT(gbc.pc(), 0x9ebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eba), 0xcb);
        EXPECT(gbc.readMem(0x9ebb), 0x3d);
        // CB 3D 020C
        gbc.setState(0xc91e, 0x64f3, 0x190, 0x1c8e, 0xc890, 0x1ba0, 0x1, 0x1);
        gbc.writeMem(0xc91e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x64f3);
        EXPECT(gbc.pc(), 0xc920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc91e), 0xcb);
        EXPECT(gbc.readMem(0xc91f), 0x3d);
        // CB 3D 020D
        gbc.setState(0x7e7d, 0xbaca, 0x13b0, 0x7eb3, 0x2903, 0x40cb, 0x1, 0x0);
        gbc.writeMem(0x7e7d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbaca);
        EXPECT(gbc.pc(), 0x7e7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 020E
        gbc.setState(0xc167, 0xff9a, 0xa5d0, 0xd092, 0x22a9, 0x530, 0x1, 0x0);
        gbc.writeMem(0xc167, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xff9a);
        EXPECT(gbc.pc(), 0xc169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc167), 0xcb);
        EXPECT(gbc.readMem(0xc168), 0x3d);
        // CB 3D 020F
        gbc.setState(0xdbf1, 0xe606, 0x8c20, 0x80e0, 0x54f5, 0xce66, 0x1, 0x1);
        gbc.writeMem(0xdbf1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe606);
        EXPECT(gbc.pc(), 0xdbf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf1), 0xcb);
        EXPECT(gbc.readMem(0xdbf2), 0x3d);
        // CB 3D 0210
        gbc.setState(0x9531, 0xbb07, 0x2ae0, 0xf5a, 0x2bc, 0xa127, 0x0, 0x1);
        gbc.writeMem(0x9531, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbb07);
        EXPECT(gbc.pc(), 0x9533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9531), 0xcb);
        EXPECT(gbc.readMem(0x9532), 0x3d);
        // CB 3D 0211
        gbc.setState(0xe7be, 0xfd19, 0xec90, 0xf9aa, 0xc18c, 0xcae2, 0x1, 0x0);
        gbc.writeMem(0xe7be, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfd19);
        EXPECT(gbc.pc(), 0xe7c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7be), 0xcb);
        EXPECT(gbc.readMem(0xe7bf), 0x3d);
        // CB 3D 0212
        gbc.setState(0x3d78, 0xa3ff, 0xcd80, 0xb88, 0xaf0a, 0x3d0d, 0x0, 0x0);
        gbc.writeMem(0x3d78, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa3ff);
        EXPECT(gbc.pc(), 0x3d7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0213
        gbc.setState(0x95bf, 0x2f, 0x8dc0, 0x6b22, 0x8a8a, 0x6d9c, 0x0, 0x1);
        gbc.writeMem(0x95bf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2f);
        EXPECT(gbc.pc(), 0x95c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95bf), 0xcb);
        EXPECT(gbc.readMem(0x95c0), 0x3d);
        // CB 3D 0215
        gbc.setState(0x7380, 0xbb15, 0xad30, 0xca78, 0x9a37, 0x7565, 0x1, 0x0);
        gbc.writeMem(0x7380, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbb15);
        EXPECT(gbc.pc(), 0x7382);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0216
        gbc.setState(0x72cc, 0x35f4, 0x67a0, 0xc07, 0x9413, 0x3781, 0x0, 0x1);
        gbc.writeMem(0x72cc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x35f4);
        EXPECT(gbc.pc(), 0x72ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0217
        gbc.setState(0xd03d, 0xe8a8, 0x9b40, 0x260c, 0xc86d, 0xef81, 0x0, 0x1);
        gbc.writeMem(0xd03d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe8a8);
        EXPECT(gbc.pc(), 0xd03f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd03d), 0xcb);
        EXPECT(gbc.readMem(0xd03e), 0x3d);
        // CB 3D 0218
        gbc.setState(0x74f0, 0x7fdc, 0xb120, 0x9d29, 0xe75f, 0xeaf1, 0x1, 0x0);
        gbc.writeMem(0x74f0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7fdc);
        EXPECT(gbc.pc(), 0x74f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0219
        gbc.setState(0xdbe7, 0xe4df, 0xca50, 0x36be, 0xd02e, 0x7aa0, 0x1, 0x0);
        gbc.writeMem(0xdbe7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe4df);
        EXPECT(gbc.pc(), 0xdbe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbe7), 0xcb);
        EXPECT(gbc.readMem(0xdbe8), 0x3d);
        // CB 3D 021A
        gbc.setState(0x83ee, 0xb599, 0xc070, 0x6e5b, 0xe4d2, 0xb2ca, 0x0, 0x0);
        gbc.writeMem(0x83ee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb599);
        EXPECT(gbc.pc(), 0x83f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ee), 0xcb);
        EXPECT(gbc.readMem(0x83ef), 0x3d);
        // CB 3D 021B
        gbc.setState(0xd77d, 0x5d1a, 0xa520, 0xf716, 0x63f7, 0x5829, 0x0, 0x1);
        gbc.writeMem(0xd77d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5d1a);
        EXPECT(gbc.pc(), 0xd77f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd77d), 0xcb);
        EXPECT(gbc.readMem(0xd77e), 0x3d);
        // CB 3D 021C
        gbc.setState(0xb597, 0x2929, 0x2d00, 0x340e, 0x42ab, 0xdf9a, 0x1, 0x1);
        gbc.writeMem(0xb597, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2929);
        EXPECT(gbc.pc(), 0xb599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb597), 0xcb);
        EXPECT(gbc.readMem(0xb598), 0x3d);
        // CB 3D 021D
        gbc.setState(0xc8c, 0x149d, 0x15f0, 0x1322, 0x608, 0xccc2, 0x1, 0x0);
        gbc.writeMem(0xc8c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x149d);
        EXPECT(gbc.pc(), 0xc8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 021E
        gbc.setState(0x6170, 0x3937, 0x2f20, 0x3f29, 0xa757, 0xa8dc, 0x0, 0x0);
        gbc.writeMem(0x6170, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3937);
        EXPECT(gbc.pc(), 0x6172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 021F
        gbc.setState(0x6a09, 0x3fe5, 0x2540, 0xbf25, 0x2463, 0x4ae, 0x1, 0x1);
        gbc.writeMem(0x6a09, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3fe5);
        EXPECT(gbc.pc(), 0x6a0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0220
        gbc.setState(0x9afd, 0xf5a6, 0xb8f0, 0x3a5d, 0x9009, 0x8c54, 0x0, 0x0);
        gbc.writeMem(0x9afd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf5a6);
        EXPECT(gbc.pc(), 0x9aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9afd), 0xcb);
        EXPECT(gbc.readMem(0x9afe), 0x3d);
        // CB 3D 0221
        gbc.setState(0x77e5, 0x89d6, 0x7610, 0xc852, 0xed58, 0x65c2, 0x0, 0x1);
        gbc.writeMem(0x77e5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x89d6);
        EXPECT(gbc.pc(), 0x77e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0222
        gbc.setState(0x941b, 0xb54f, 0xab10, 0x7f19, 0x9449, 0x512, 0x1, 0x1);
        gbc.writeMem(0x941b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb54f);
        EXPECT(gbc.pc(), 0x941d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x941b), 0xcb);
        EXPECT(gbc.readMem(0x941c), 0x3d);
        // CB 3D 0223
        gbc.setState(0xa2aa, 0x695f, 0xb360, 0x98f7, 0x72fb, 0xad03, 0x1, 0x1);
        gbc.writeMem(0xa2aa, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x695f);
        EXPECT(gbc.pc(), 0xa2ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2aa), 0xcb);
        EXPECT(gbc.readMem(0xa2ab), 0x3d);
        // CB 3D 0224
        gbc.setState(0x2270, 0x8e8a, 0x4950, 0xbb1b, 0x29b3, 0x7ffd, 0x0, 0x0);
        gbc.writeMem(0x2270, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8e8a);
        EXPECT(gbc.pc(), 0x2272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0225
        gbc.setState(0xc9b2, 0x34ec, 0xc100, 0x1485, 0xb632, 0xb578, 0x1, 0x0);
        gbc.writeMem(0xc9b2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x34ec);
        EXPECT(gbc.pc(), 0xc9b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b2), 0xcb);
        EXPECT(gbc.readMem(0xc9b3), 0x3d);
        // CB 3D 0226
        gbc.setState(0x69e6, 0xc428, 0x5cc0, 0x3b0e, 0x1e60, 0x4916, 0x1, 0x1);
        gbc.writeMem(0x69e6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc428);
        EXPECT(gbc.pc(), 0x69e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0227
        gbc.setState(0x36a2, 0x5acb, 0x640, 0x547b, 0xbea3, 0x965a, 0x0, 0x1);
        gbc.writeMem(0x36a2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5acb);
        EXPECT(gbc.pc(), 0x36a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0228
        gbc.setState(0xe730, 0x301c, 0x9a00, 0x5449, 0xb687, 0x9ab4, 0x0, 0x0);
        gbc.writeMem(0xe730, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x301c);
        EXPECT(gbc.pc(), 0xe732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe730), 0xcb);
        EXPECT(gbc.readMem(0xe731), 0x3d);
        // CB 3D 0229
        gbc.setState(0x1f07, 0x5271, 0x4900, 0xb62a, 0xa432, 0x533b, 0x1, 0x0);
        gbc.writeMem(0x1f07, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5271);
        EXPECT(gbc.pc(), 0x1f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 022A
        gbc.setState(0x8b7e, 0x5343, 0xa910, 0xce36, 0xaa60, 0x9b66, 0x1, 0x0);
        gbc.writeMem(0x8b7e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5343);
        EXPECT(gbc.pc(), 0x8b80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b7e), 0xcb);
        EXPECT(gbc.readMem(0x8b7f), 0x3d);
        // CB 3D 022B
        gbc.setState(0x39f7, 0xfd12, 0x2240, 0x5133, 0xe978, 0xcc5f, 0x1, 0x1);
        gbc.writeMem(0x39f7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfd12);
        EXPECT(gbc.pc(), 0x39f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 022C
        gbc.setState(0xfdd, 0x89a5, 0x170, 0xd87e, 0xbfa3, 0xfeb, 0x0, 0x1);
        gbc.writeMem(0xfdd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x89a5);
        EXPECT(gbc.pc(), 0xfdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 022D
        gbc.setState(0xc45e, 0x786e, 0x89b0, 0xcb84, 0xc8f3, 0xd529, 0x0, 0x0);
        gbc.writeMem(0xc45e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x786e);
        EXPECT(gbc.pc(), 0xc460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc45e), 0xcb);
        EXPECT(gbc.readMem(0xc45f), 0x3d);
        // CB 3D 022E
        gbc.setState(0x1ee2, 0x85df, 0x730, 0x67c1, 0xd0e7, 0xed24, 0x0, 0x0);
        gbc.writeMem(0x1ee2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x85df);
        EXPECT(gbc.pc(), 0x1ee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0230
        gbc.setState(0x679d, 0xc552, 0x6a40, 0x9b55, 0xe1c2, 0xf66e, 0x0, 0x0);
        gbc.writeMem(0x679d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc552);
        EXPECT(gbc.pc(), 0x679f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0231
        gbc.setState(0xee7b, 0xf607, 0x4a00, 0x62c7, 0xd776, 0x8749, 0x1, 0x1);
        gbc.writeMem(0xee7b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf607);
        EXPECT(gbc.pc(), 0xee7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee7b), 0xcb);
        EXPECT(gbc.readMem(0xee7c), 0x3d);
        // CB 3D 0232
        gbc.setState(0x9bcf, 0x21fd, 0x8a0, 0x2a31, 0xff5b, 0x4447, 0x0, 0x0);
        gbc.writeMem(0x9bcf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x21fd);
        EXPECT(gbc.pc(), 0x9bd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bcf), 0xcb);
        EXPECT(gbc.readMem(0x9bd0), 0x3d);
        // CB 3D 0233
        gbc.setState(0xeb8f, 0xcc7c, 0x47c0, 0xcb35, 0x4294, 0x751e, 0x0, 0x1);
        gbc.writeMem(0xeb8f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xcc7c);
        EXPECT(gbc.pc(), 0xeb91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb8f), 0xcb);
        EXPECT(gbc.readMem(0xeb90), 0x3d);
        // CB 3D 0234
        gbc.setState(0x443, 0x8daa, 0x5b60, 0x76e8, 0x52e0, 0xef90, 0x0, 0x0);
        gbc.writeMem(0x443, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8daa);
        EXPECT(gbc.pc(), 0x445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0235
        gbc.setState(0xede7, 0x1b34, 0x9060, 0x9b36, 0xf44c, 0x10a2, 0x1, 0x1);
        gbc.writeMem(0xede7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1b34);
        EXPECT(gbc.pc(), 0xede9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede7), 0xcb);
        EXPECT(gbc.readMem(0xede8), 0x3d);
        // CB 3D 0236
        gbc.setState(0xc6e7, 0xbc64, 0xee30, 0x4593, 0x56c8, 0x312, 0x0, 0x0);
        gbc.writeMem(0xc6e7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbc64);
        EXPECT(gbc.pc(), 0xc6e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e7), 0xcb);
        EXPECT(gbc.readMem(0xc6e8), 0x3d);
        // CB 3D 0237
        gbc.setState(0xec38, 0x9baa, 0x3140, 0x9c5b, 0x6e33, 0x6576, 0x1, 0x1);
        gbc.writeMem(0xec38, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9baa);
        EXPECT(gbc.pc(), 0xec3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec38), 0xcb);
        EXPECT(gbc.readMem(0xec39), 0x3d);
        // CB 3D 0238
        gbc.setState(0xd17e, 0x591e, 0x740, 0x5ed2, 0x3325, 0x263, 0x0, 0x0);
        gbc.writeMem(0xd17e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x591e);
        EXPECT(gbc.pc(), 0xd180);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd17e), 0xcb);
        EXPECT(gbc.readMem(0xd17f), 0x3d);
        // CB 3D 0239
        gbc.setState(0x1466, 0xdf48, 0x44a0, 0x8c18, 0x9c2f, 0x2f1, 0x0, 0x1);
        gbc.writeMem(0x1466, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdf48);
        EXPECT(gbc.pc(), 0x1468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 023A
        gbc.setState(0x4329, 0xa6e, 0x41c0, 0xe931, 0x2d7c, 0xb22a, 0x0, 0x1);
        gbc.writeMem(0x4329, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa6e);
        EXPECT(gbc.pc(), 0x432b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 023B
        gbc.setState(0x5062, 0x68be, 0x76d0, 0x9aa1, 0xa9ff, 0x69bc, 0x1, 0x0);
        gbc.writeMem(0x5062, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x68be);
        EXPECT(gbc.pc(), 0x5064);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 023C
        gbc.setState(0x62c0, 0xcc67, 0x37c0, 0x1cb4, 0x658f, 0x2b0f, 0x0, 0x0);
        gbc.writeMem(0x62c0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcc67);
        EXPECT(gbc.pc(), 0x62c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 023E
        gbc.setState(0x56ee, 0x54b, 0x36f0, 0xb7fd, 0x5551, 0x421, 0x1, 0x1);
        gbc.writeMem(0x56ee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x54b);
        EXPECT(gbc.pc(), 0x56f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 023F
        gbc.setState(0x83e3, 0x3ef, 0x4c0, 0xbd86, 0xfda, 0xff6c, 0x0, 0x1);
        gbc.writeMem(0x83e3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3ef);
        EXPECT(gbc.pc(), 0x83e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e3), 0xcb);
        EXPECT(gbc.readMem(0x83e4), 0x3d);
        // CB 3D 0240
        gbc.setState(0xe8fc, 0xe167, 0xb680, 0x5345, 0x6d22, 0xa827, 0x1, 0x1);
        gbc.writeMem(0xe8fc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe167);
        EXPECT(gbc.pc(), 0xe8fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8fc), 0xcb);
        EXPECT(gbc.readMem(0xe8fd), 0x3d);
        // CB 3D 0241
        gbc.setState(0x23d0, 0x6a05, 0xdaf0, 0xeee3, 0xcb36, 0xe301, 0x1, 0x0);
        gbc.writeMem(0x23d0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6a05);
        EXPECT(gbc.pc(), 0x23d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0242
        gbc.setState(0xbafb, 0xfe4d, 0x17d0, 0x1f09, 0xaf43, 0x4134, 0x0, 0x0);
        gbc.writeMem(0xbafb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xfe4d);
        EXPECT(gbc.pc(), 0xbafd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbafb), 0xcb);
        EXPECT(gbc.readMem(0xbafc), 0x3d);
        // CB 3D 0243
        gbc.setState(0x6e, 0xc08b, 0xb090, 0xcb00, 0x3f84, 0x1eb7, 0x1, 0x0);
        gbc.writeMem(0x6e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc08b);
        EXPECT(gbc.pc(), 0x70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0244
        gbc.setState(0x5ce3, 0x9187, 0xead0, 0xec3, 0x7659, 0x924f, 0x1, 0x1);
        gbc.writeMem(0x5ce3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9187);
        EXPECT(gbc.pc(), 0x5ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0245
        gbc.setState(0x10f8, 0x2061, 0x9380, 0x92a4, 0xc7e5, 0xd09d, 0x1, 0x0);
        gbc.writeMem(0x10f8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2061);
        EXPECT(gbc.pc(), 0x10fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0246
        gbc.setState(0x959a, 0xd610, 0xa690, 0xebe1, 0x84c9, 0x7054, 0x1, 0x1);
        gbc.writeMem(0x959a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd610);
        EXPECT(gbc.pc(), 0x959c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x959a), 0xcb);
        EXPECT(gbc.readMem(0x959b), 0x3d);
        // CB 3D 0247
        gbc.setState(0x7b8d, 0xd610, 0x3190, 0x6800, 0x45c1, 0xe625, 0x1, 0x0);
        gbc.writeMem(0x7b8d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd610);
        EXPECT(gbc.pc(), 0x7b8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0248
        gbc.setState(0xbaee, 0x63e5, 0x1c60, 0x727e, 0x8701, 0x789, 0x0, 0x1);
        gbc.writeMem(0xbaee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x63e5);
        EXPECT(gbc.pc(), 0xbaf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaee), 0xcb);
        EXPECT(gbc.readMem(0xbaef), 0x3d);
        // CB 3D 0249
        gbc.setState(0xde82, 0x49d2, 0xfed0, 0x19e7, 0x88fb, 0x915, 0x0, 0x1);
        gbc.writeMem(0xde82, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x49d2);
        EXPECT(gbc.pc(), 0xde84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde82), 0xcb);
        EXPECT(gbc.readMem(0xde83), 0x3d);
        // CB 3D 024A
        gbc.setState(0x8f30, 0x8d67, 0xf670, 0x1ceb, 0x68a8, 0x7e2b, 0x0, 0x1);
        gbc.writeMem(0x8f30, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8d67);
        EXPECT(gbc.pc(), 0x8f32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f30), 0xcb);
        EXPECT(gbc.readMem(0x8f31), 0x3d);
        // CB 3D 024B
        gbc.setState(0x4a38, 0x1a3, 0xddd0, 0x6ecc, 0xc0ce, 0x71d8, 0x0, 0x0);
        gbc.writeMem(0x4a38, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1a3);
        EXPECT(gbc.pc(), 0x4a3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 024C
        gbc.setState(0xe0d6, 0x247b, 0xc220, 0xc630, 0xacb5, 0x3240, 0x1, 0x0);
        gbc.writeMem(0xe0d6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x247b);
        EXPECT(gbc.pc(), 0xe0d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0d6), 0xcb);
        EXPECT(gbc.readMem(0xe0d7), 0x3d);
        // CB 3D 024D
        gbc.setState(0x145c, 0xedb4, 0xd660, 0x408a, 0x1e72, 0xb6fb, 0x0, 0x1);
        gbc.writeMem(0x145c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xedb4);
        EXPECT(gbc.pc(), 0x145e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 024E
        gbc.setState(0x414e, 0x7175, 0x3610, 0xb2b5, 0x5551, 0x5c81, 0x1, 0x0);
        gbc.writeMem(0x414e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7175);
        EXPECT(gbc.pc(), 0x4150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 024F
        gbc.setState(0xcd45, 0x6407, 0x3720, 0xfc35, 0x20ea, 0xc553, 0x1, 0x1);
        gbc.writeMem(0xcd45, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6407);
        EXPECT(gbc.pc(), 0xcd47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd45), 0xcb);
        EXPECT(gbc.readMem(0xcd46), 0x3d);
        // CB 3D 0250
        gbc.setState(0x5d80, 0x49b1, 0x7e00, 0x28e3, 0xf519, 0xdcb7, 0x1, 0x0);
        gbc.writeMem(0x5d80, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x49b1);
        EXPECT(gbc.pc(), 0x5d82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0251
        gbc.setState(0x6be2, 0x8b85, 0xcaa0, 0xc151, 0x6528, 0xbe8f, 0x1, 0x0);
        gbc.writeMem(0x6be2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8b85);
        EXPECT(gbc.pc(), 0x6be4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0252
        gbc.setState(0x174, 0xaa4e, 0xb760, 0x7625, 0xb439, 0xbdfd, 0x1, 0x1);
        gbc.writeMem(0x174, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xaa4e);
        EXPECT(gbc.pc(), 0x176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0253
        gbc.setState(0xe5eb, 0xcc5, 0x3070, 0xfb29, 0x5ca0, 0xebf2, 0x1, 0x1);
        gbc.writeMem(0xe5eb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcc5);
        EXPECT(gbc.pc(), 0xe5ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5eb), 0xcb);
        EXPECT(gbc.readMem(0xe5ec), 0x3d);
        // CB 3D 0254
        gbc.setState(0x51cd, 0x6dca, 0x840, 0x6757, 0x34b7, 0xe51d, 0x1, 0x1);
        gbc.writeMem(0x51cd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6dca);
        EXPECT(gbc.pc(), 0x51cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0255
        gbc.setState(0xb6dc, 0x3a38, 0x64c0, 0x1cd9, 0x248e, 0x58d4, 0x0, 0x0);
        gbc.writeMem(0xb6dc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3a38);
        EXPECT(gbc.pc(), 0xb6de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6dc), 0xcb);
        EXPECT(gbc.readMem(0xb6dd), 0x3d);
        // CB 3D 0256
        gbc.setState(0x2918, 0xd5ce, 0x8ad0, 0x2b70, 0xe27a, 0x13ed, 0x1, 0x0);
        gbc.writeMem(0x2918, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd5ce);
        EXPECT(gbc.pc(), 0x291a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0257
        gbc.setState(0x79a, 0xc520, 0x4280, 0xc068, 0xe95d, 0x44d, 0x0, 0x1);
        gbc.writeMem(0x79a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc520);
        EXPECT(gbc.pc(), 0x79c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0258
        gbc.setState(0xb2f9, 0xf8c0, 0xd800, 0x9549, 0x1d08, 0x8a, 0x1, 0x1);
        gbc.writeMem(0xb2f9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf8c0);
        EXPECT(gbc.pc(), 0xb2fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2f9), 0xcb);
        EXPECT(gbc.readMem(0xb2fa), 0x3d);
        // CB 3D 0259
        gbc.setState(0xc2e, 0x4e17, 0x22f0, 0xed16, 0x865c, 0x41c7, 0x0, 0x1);
        gbc.writeMem(0xc2e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4e17);
        EXPECT(gbc.pc(), 0xc30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 025A
        gbc.setState(0xe17, 0x83ae, 0x8970, 0xee5c, 0x6404, 0xbd85, 0x1, 0x1);
        gbc.writeMem(0xe17, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x83ae);
        EXPECT(gbc.pc(), 0xe19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 025B
        gbc.setState(0xc87d, 0xddfd, 0xcab0, 0xb1c8, 0x4a6b, 0xd424, 0x1, 0x1);
        gbc.writeMem(0xc87d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xddfd);
        EXPECT(gbc.pc(), 0xc87f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc87d), 0xcb);
        EXPECT(gbc.readMem(0xc87e), 0x3d);
        // CB 3D 025D
        gbc.setState(0x3657, 0x73ce, 0xdb10, 0x2e7e, 0x15a5, 0xaa65, 0x0, 0x0);
        gbc.writeMem(0x3657, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x73ce);
        EXPECT(gbc.pc(), 0x3659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 025E
        gbc.setState(0xb653, 0xb68a, 0xf860, 0x2cb2, 0xd03c, 0xd762, 0x0, 0x1);
        gbc.writeMem(0xb653, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb68a);
        EXPECT(gbc.pc(), 0xb655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb653), 0xcb);
        EXPECT(gbc.readMem(0xb654), 0x3d);
        // CB 3D 025F
        gbc.setState(0x8e09, 0xe21a, 0xc1c0, 0x55f5, 0xc973, 0x6efc, 0x0, 0x1);
        gbc.writeMem(0x8e09, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe21a);
        EXPECT(gbc.pc(), 0x8e0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e09), 0xcb);
        EXPECT(gbc.readMem(0x8e0a), 0x3d);
        // CB 3D 0260
        gbc.setState(0x7f08, 0xaeb1, 0x5960, 0x6ee, 0x5288, 0x407a, 0x0, 0x1);
        gbc.writeMem(0x7f08, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xaeb1);
        EXPECT(gbc.pc(), 0x7f0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0261
        gbc.setState(0x491f, 0x82d5, 0xe3f0, 0x328b, 0xdfdf, 0x8cc1, 0x0, 0x1);
        gbc.writeMem(0x491f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x82d5);
        EXPECT(gbc.pc(), 0x4921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0262
        gbc.setState(0x4c0c, 0xc195, 0x4e70, 0x16c5, 0x2235, 0xc9f5, 0x1, 0x1);
        gbc.writeMem(0x4c0c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc195);
        EXPECT(gbc.pc(), 0x4c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0263
        gbc.setState(0x8b79, 0x4bdb, 0x6e0, 0x833a, 0xe8d2, 0x81c7, 0x1, 0x1);
        gbc.writeMem(0x8b79, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4bdb);
        EXPECT(gbc.pc(), 0x8b7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b79), 0xcb);
        EXPECT(gbc.readMem(0x8b7a), 0x3d);
        // CB 3D 0264
        gbc.setState(0x6eb3, 0x3c97, 0xd460, 0xe71, 0x2715, 0x253e, 0x0, 0x1);
        gbc.writeMem(0x6eb3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3c97);
        EXPECT(gbc.pc(), 0x6eb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0265
        gbc.setState(0x2bde, 0xc071, 0x9fd0, 0x607d, 0xf2f4, 0x5b95, 0x1, 0x0);
        gbc.writeMem(0x2bde, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc071);
        EXPECT(gbc.pc(), 0x2be0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0266
        gbc.setState(0xa970, 0x1621, 0x1ba0, 0x7d0d, 0xe18e, 0x13ad, 0x1, 0x0);
        gbc.writeMem(0xa970, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1621);
        EXPECT(gbc.pc(), 0xa972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa970), 0xcb);
        EXPECT(gbc.readMem(0xa971), 0x3d);
        // CB 3D 0267
        gbc.setState(0xa895, 0x232, 0xc880, 0xcbef, 0xc67b, 0x7ca6, 0x0, 0x0);
        gbc.writeMem(0xa895, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x232);
        EXPECT(gbc.pc(), 0xa897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa895), 0xcb);
        EXPECT(gbc.readMem(0xa896), 0x3d);
        // CB 3D 0268
        gbc.setState(0xa100, 0xc700, 0x4a00, 0xa0d3, 0x6362, 0xbd2c, 0x1, 0x1);
        gbc.writeMem(0xa100, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc700);
        EXPECT(gbc.pc(), 0xa102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa100), 0xcb);
        EXPECT(gbc.readMem(0xa101), 0x3d);
        // CB 3D 0269
        gbc.setState(0x9927, 0xc7a6, 0x3400, 0x6bb2, 0x3914, 0x758d, 0x1, 0x0);
        gbc.writeMem(0x9927, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc7a6);
        EXPECT(gbc.pc(), 0x9929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9927), 0xcb);
        EXPECT(gbc.readMem(0x9928), 0x3d);
        // CB 3D 026A
        gbc.setState(0x653f, 0xf1b8, 0x4820, 0xc18c, 0xe313, 0x1d1a, 0x1, 0x1);
        gbc.writeMem(0x653f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf1b8);
        EXPECT(gbc.pc(), 0x6541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 026B
        gbc.setState(0x1adf, 0xcfe8, 0x15e0, 0x4e3, 0x1ea4, 0xbb6, 0x1, 0x1);
        gbc.writeMem(0x1adf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xcfe8);
        EXPECT(gbc.pc(), 0x1ae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 026C
        gbc.setState(0xdcb1, 0x1f3, 0x9f40, 0x226e, 0x80f1, 0x245, 0x1, 0x0);
        gbc.writeMem(0xdcb1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1f3);
        EXPECT(gbc.pc(), 0xdcb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb1), 0xcb);
        EXPECT(gbc.readMem(0xdcb2), 0x3d);
        // CB 3D 026D
        gbc.setState(0x98c0, 0xae4f, 0xa4d0, 0xee0b, 0x22d, 0xa1ed, 0x0, 0x1);
        gbc.writeMem(0x98c0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xae4f);
        EXPECT(gbc.pc(), 0x98c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c0), 0xcb);
        EXPECT(gbc.readMem(0x98c1), 0x3d);
        // CB 3D 026E
        gbc.setState(0xe2c9, 0x3dbe, 0xdcb0, 0x9d7d, 0x46eb, 0xeb83, 0x0, 0x1);
        gbc.writeMem(0xe2c9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3dbe);
        EXPECT(gbc.pc(), 0xe2cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2c9), 0xcb);
        EXPECT(gbc.readMem(0xe2ca), 0x3d);
        // CB 3D 026F
        gbc.setState(0xc33e, 0x8da8, 0x9830, 0xeafe, 0x4cde, 0x25cb, 0x0, 0x0);
        gbc.writeMem(0xc33e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8da8);
        EXPECT(gbc.pc(), 0xc340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc33e), 0xcb);
        EXPECT(gbc.readMem(0xc33f), 0x3d);
        // CB 3D 0271
        gbc.setState(0x8ebf, 0xfe4b, 0x8dd0, 0x8c2a, 0xf4e3, 0x5469, 0x1, 0x0);
        gbc.writeMem(0x8ebf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xfe4b);
        EXPECT(gbc.pc(), 0x8ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ebf), 0xcb);
        EXPECT(gbc.readMem(0x8ec0), 0x3d);
        // CB 3D 0272
        gbc.setState(0x71f4, 0x527a, 0x1d40, 0x2efe, 0x4ad7, 0xac90, 0x1, 0x1);
        gbc.writeMem(0x71f4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x527a);
        EXPECT(gbc.pc(), 0x71f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0273
        gbc.setState(0x8cf1, 0xb2d9, 0x1850, 0xa69e, 0x9e6d, 0x8649, 0x0, 0x0);
        gbc.writeMem(0x8cf1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb2d9);
        EXPECT(gbc.pc(), 0x8cf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cf1), 0xcb);
        EXPECT(gbc.readMem(0x8cf2), 0x3d);
        // CB 3D 0274
        gbc.setState(0x62e9, 0x7f8a, 0x1c90, 0xa321, 0xfbb, 0xea44, 0x0, 0x1);
        gbc.writeMem(0x62e9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7f8a);
        EXPECT(gbc.pc(), 0x62eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0275
        gbc.setState(0x7153, 0x4345, 0xc8e0, 0x6ae7, 0x59d3, 0x2ece, 0x0, 0x1);
        gbc.writeMem(0x7153, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4345);
        EXPECT(gbc.pc(), 0x7155);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0276
        gbc.setState(0x3a85, 0x4c52, 0x8a70, 0xef1c, 0x776c, 0xc40c, 0x0, 0x1);
        gbc.writeMem(0x3a85, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4c52);
        EXPECT(gbc.pc(), 0x3a87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0277
        gbc.setState(0x9395, 0xed65, 0x2f60, 0xa94d, 0xf395, 0x1051, 0x0, 0x0);
        gbc.writeMem(0x9395, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xed65);
        EXPECT(gbc.pc(), 0x9397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9395), 0xcb);
        EXPECT(gbc.readMem(0x9396), 0x3d);
        // CB 3D 0278
        gbc.setState(0xa485, 0xa210, 0x9870, 0x9cca, 0x4b45, 0x376b, 0x0, 0x0);
        gbc.writeMem(0xa485, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa210);
        EXPECT(gbc.pc(), 0xa487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa485), 0xcb);
        EXPECT(gbc.readMem(0xa486), 0x3d);
        // CB 3D 0279
        gbc.setState(0x2919, 0x23ac, 0xc530, 0x3ef4, 0x1dbc, 0x85ad, 0x1, 0x0);
        gbc.writeMem(0x2919, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x23ac);
        EXPECT(gbc.pc(), 0x291b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 027A
        gbc.setState(0xdae9, 0x1659, 0xef20, 0xc90f, 0xf131, 0xaad7, 0x1, 0x0);
        gbc.writeMem(0xdae9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1659);
        EXPECT(gbc.pc(), 0xdaeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae9), 0xcb);
        EXPECT(gbc.readMem(0xdaea), 0x3d);
        // CB 3D 027B
        gbc.setState(0x5a2c, 0xe862, 0x8970, 0xbb92, 0xb56a, 0xda1e, 0x0, 0x0);
        gbc.writeMem(0x5a2c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe862);
        EXPECT(gbc.pc(), 0x5a2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 027C
        gbc.setState(0x5e33, 0x4a32, 0x5260, 0xb403, 0x673e, 0xa14b, 0x1, 0x0);
        gbc.writeMem(0x5e33, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4a32);
        EXPECT(gbc.pc(), 0x5e35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 027D
        gbc.setState(0xec07, 0x567f, 0x3040, 0x9fdb, 0xe7af, 0xe5c6, 0x0, 0x1);
        gbc.writeMem(0xec07, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x567f);
        EXPECT(gbc.pc(), 0xec09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec07), 0xcb);
        EXPECT(gbc.readMem(0xec08), 0x3d);
        // CB 3D 027E
        gbc.setState(0x93ae, 0x6d3d, 0xdaf0, 0x8971, 0x20c0, 0x1f6, 0x0, 0x0);
        gbc.writeMem(0x93ae, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6d3d);
        EXPECT(gbc.pc(), 0x93b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93ae), 0xcb);
        EXPECT(gbc.readMem(0x93af), 0x3d);
        // CB 3D 027F
        gbc.setState(0x321e, 0x75d2, 0x5300, 0x6bd9, 0x25ac, 0xff1f, 0x1, 0x0);
        gbc.writeMem(0x321e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x75d2);
        EXPECT(gbc.pc(), 0x3220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0280
        gbc.setState(0xe6a9, 0xa55d, 0xfbf0, 0xb2b3, 0xb247, 0xbb48, 0x1, 0x1);
        gbc.writeMem(0xe6a9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa55d);
        EXPECT(gbc.pc(), 0xe6ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6a9), 0xcb);
        EXPECT(gbc.readMem(0xe6aa), 0x3d);
        // CB 3D 0281
        gbc.setState(0x5937, 0xa9e0, 0xfc70, 0xbc44, 0xa771, 0x4cf1, 0x1, 0x1);
        gbc.writeMem(0x5937, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa9e0);
        EXPECT(gbc.pc(), 0x5939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0282
        gbc.setState(0xeead, 0xd2cb, 0xf1e0, 0x543c, 0xc591, 0x8935, 0x1, 0x0);
        gbc.writeMem(0xeead, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd2cb);
        EXPECT(gbc.pc(), 0xeeaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeead), 0xcb);
        EXPECT(gbc.readMem(0xeeae), 0x3d);
        // CB 3D 0283
        gbc.setState(0x9cc8, 0x181f, 0x7120, 0x943c, 0x1851, 0x3d14, 0x1, 0x0);
        gbc.writeMem(0x9cc8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x181f);
        EXPECT(gbc.pc(), 0x9cca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc8), 0xcb);
        EXPECT(gbc.readMem(0x9cc9), 0x3d);
        // CB 3D 0284
        gbc.setState(0xae1e, 0x164c, 0xb190, 0x16dc, 0x422d, 0x857d, 0x1, 0x1);
        gbc.writeMem(0xae1e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x164c);
        EXPECT(gbc.pc(), 0xae20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae1e), 0xcb);
        EXPECT(gbc.readMem(0xae1f), 0x3d);
        // CB 3D 0285
        gbc.setState(0x6147, 0xc704, 0xb1c0, 0x4ebd, 0xf25, 0xd191, 0x0, 0x1);
        gbc.writeMem(0x6147, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc704);
        EXPECT(gbc.pc(), 0x6149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0286
        gbc.setState(0x9293, 0x7ef0, 0xa740, 0x1621, 0x901e, 0x4a99, 0x1, 0x0);
        gbc.writeMem(0x9293, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7ef0);
        EXPECT(gbc.pc(), 0x9295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9293), 0xcb);
        EXPECT(gbc.readMem(0x9294), 0x3d);
        // CB 3D 0287
        gbc.setState(0x2559, 0x456d, 0xb000, 0x3bd1, 0xd5ed, 0x2142, 0x0, 0x0);
        gbc.writeMem(0x2559, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x456d);
        EXPECT(gbc.pc(), 0x255b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0288
        gbc.setState(0x7deb, 0x1b5c, 0xb560, 0x3ab7, 0x7156, 0xd7c5, 0x0, 0x0);
        gbc.writeMem(0x7deb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1b5c);
        EXPECT(gbc.pc(), 0x7ded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0289
        gbc.setState(0xb083, 0xe9cd, 0x1d90, 0x40f8, 0xc4cf, 0x1889, 0x1, 0x1);
        gbc.writeMem(0xb083, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe9cd);
        EXPECT(gbc.pc(), 0xb085);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb083), 0xcb);
        EXPECT(gbc.readMem(0xb084), 0x3d);
        // CB 3D 028A
        gbc.setState(0x2b07, 0xbf25, 0xf030, 0x303d, 0x66bc, 0x8b7b, 0x1, 0x0);
        gbc.writeMem(0x2b07, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbf25);
        EXPECT(gbc.pc(), 0x2b09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 028B
        gbc.setState(0x5218, 0x2ab5, 0x8b60, 0xfd3e, 0x3d28, 0xf79, 0x1, 0x1);
        gbc.writeMem(0x5218, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2ab5);
        EXPECT(gbc.pc(), 0x521a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 028C
        gbc.setState(0xe205, 0x4d78, 0x5930, 0x1836, 0xc7b5, 0x2684, 0x1, 0x0);
        gbc.writeMem(0xe205, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4d78);
        EXPECT(gbc.pc(), 0xe207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe205), 0xcb);
        EXPECT(gbc.readMem(0xe206), 0x3d);
        // CB 3D 028D
        gbc.setState(0xad48, 0x11ec, 0x71f0, 0x3b7a, 0xf2e5, 0x1699, 0x0, 0x1);
        gbc.writeMem(0xad48, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x11ec);
        EXPECT(gbc.pc(), 0xad4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad48), 0xcb);
        EXPECT(gbc.readMem(0xad49), 0x3d);
        // CB 3D 028E
        gbc.setState(0x235d, 0xc294, 0x76f0, 0x7126, 0xc3bb, 0x289c, 0x1, 0x0);
        gbc.writeMem(0x235d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc294);
        EXPECT(gbc.pc(), 0x235f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 028F
        gbc.setState(0x79d7, 0xf8d5, 0x66b0, 0x6248, 0x6293, 0x59c1, 0x1, 0x0);
        gbc.writeMem(0x79d7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf8d5);
        EXPECT(gbc.pc(), 0x79d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0290
        gbc.setState(0x5e24, 0x21cc, 0x6f0, 0x2f46, 0x4a14, 0x4b3f, 0x1, 0x1);
        gbc.writeMem(0x5e24, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x21cc);
        EXPECT(gbc.pc(), 0x5e26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0291
        gbc.setState(0x101b, 0xc2c3, 0xc290, 0x91e5, 0x9bf9, 0xdf42, 0x0, 0x0);
        gbc.writeMem(0x101b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc2c3);
        EXPECT(gbc.pc(), 0x101d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0292
        gbc.setState(0x3114, 0xfdd2, 0x6b80, 0x3848, 0xa4f9, 0x1f57, 0x1, 0x0);
        gbc.writeMem(0x3114, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfdd2);
        EXPECT(gbc.pc(), 0x3116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0293
        gbc.setState(0x58a8, 0xf144, 0x1630, 0x5b54, 0xfcc6, 0x21d2, 0x1, 0x0);
        gbc.writeMem(0x58a8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf144);
        EXPECT(gbc.pc(), 0x58aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0294
        gbc.setState(0xad4f, 0x7e2c, 0x2370, 0x60ac, 0xf2e5, 0xdfc0, 0x0, 0x1);
        gbc.writeMem(0xad4f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7e2c);
        EXPECT(gbc.pc(), 0xad51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad4f), 0xcb);
        EXPECT(gbc.readMem(0xad50), 0x3d);
        // CB 3D 0295
        gbc.setState(0x647b, 0x144, 0xc140, 0x2c39, 0xaa46, 0x7737, 0x0, 0x0);
        gbc.writeMem(0x647b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x144);
        EXPECT(gbc.pc(), 0x647d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0296
        gbc.setState(0xb3f2, 0x1e1, 0x2080, 0xd97f, 0x8079, 0xb5bd, 0x1, 0x1);
        gbc.writeMem(0xb3f2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1e1);
        EXPECT(gbc.pc(), 0xb3f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f2), 0xcb);
        EXPECT(gbc.readMem(0xb3f3), 0x3d);
        // CB 3D 0297
        gbc.setState(0xb75d, 0x5fde, 0x9e60, 0xa4fa, 0xa644, 0x1b28, 0x1, 0x1);
        gbc.writeMem(0xb75d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5fde);
        EXPECT(gbc.pc(), 0xb75f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb75d), 0xcb);
        EXPECT(gbc.readMem(0xb75e), 0x3d);
        // CB 3D 0299
        gbc.setState(0xdaeb, 0x3f84, 0x1ec0, 0x3dd8, 0x8d2f, 0xe1ef, 0x1, 0x0);
        gbc.writeMem(0xdaeb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3f84);
        EXPECT(gbc.pc(), 0xdaed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaeb), 0xcb);
        EXPECT(gbc.readMem(0xdaec), 0x3d);
        // CB 3D 029A
        gbc.setState(0x730d, 0x5d59, 0x7dd0, 0x36ff, 0xbae9, 0x1f45, 0x0, 0x0);
        gbc.writeMem(0x730d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5d59);
        EXPECT(gbc.pc(), 0x730f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 029B
        gbc.setState(0x3fb0, 0x2408, 0x9330, 0xf8f3, 0x933d, 0xa1e6, 0x1, 0x0);
        gbc.writeMem(0x3fb0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2408);
        EXPECT(gbc.pc(), 0x3fb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 029C
        gbc.setState(0xea1c, 0x9032, 0x3ee0, 0x51f9, 0x4dc8, 0xdad5, 0x0, 0x1);
        gbc.writeMem(0xea1c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9032);
        EXPECT(gbc.pc(), 0xea1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea1c), 0xcb);
        EXPECT(gbc.readMem(0xea1d), 0x3d);
        // CB 3D 029D
        gbc.setState(0xe46d, 0x3bbc, 0x1560, 0xa4f9, 0x65bc, 0x26a1, 0x0, 0x0);
        gbc.writeMem(0xe46d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3bbc);
        EXPECT(gbc.pc(), 0xe46f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe46d), 0xcb);
        EXPECT(gbc.readMem(0xe46e), 0x3d);
        // CB 3D 029E
        gbc.setState(0xc2a9, 0xd59a, 0x9de0, 0x559, 0x531b, 0x7e13, 0x1, 0x0);
        gbc.writeMem(0xc2a9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd59a);
        EXPECT(gbc.pc(), 0xc2ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2a9), 0xcb);
        EXPECT(gbc.readMem(0xc2aa), 0x3d);
        // CB 3D 029F
        gbc.setState(0x1f91, 0x7c76, 0x4ed0, 0x9c6d, 0xba56, 0xdbe4, 0x0, 0x1);
        gbc.writeMem(0x1f91, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7c76);
        EXPECT(gbc.pc(), 0x1f93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02A0
        gbc.setState(0xa690, 0xf000, 0x9e80, 0xebb4, 0x7703, 0xb47, 0x1, 0x0);
        gbc.writeMem(0xa690, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf000);
        EXPECT(gbc.pc(), 0xa692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa690), 0xcb);
        EXPECT(gbc.readMem(0xa691), 0x3d);
        // CB 3D 02A1
        gbc.setState(0x30dd, 0x474f, 0x94d0, 0x4777, 0xc662, 0x261b, 0x1, 0x0);
        gbc.writeMem(0x30dd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x474f);
        EXPECT(gbc.pc(), 0x30df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02A2
        gbc.setState(0x7bc0, 0xff0c, 0xc980, 0x9b37, 0xace6, 0x1683, 0x0, 0x1);
        gbc.writeMem(0x7bc0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xff0c);
        EXPECT(gbc.pc(), 0x7bc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02A3
        gbc.setState(0x8d8e, 0x2355, 0x8000, 0x5859, 0x80e8, 0x4b99, 0x1, 0x1);
        gbc.writeMem(0x8d8e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2355);
        EXPECT(gbc.pc(), 0x8d90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d8e), 0xcb);
        EXPECT(gbc.readMem(0x8d8f), 0x3d);
        // CB 3D 02A4
        gbc.setState(0x6e06, 0x2511, 0x80c0, 0x8a12, 0x7b69, 0xafcd, 0x1, 0x0);
        gbc.writeMem(0x6e06, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2511);
        EXPECT(gbc.pc(), 0x6e08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02A5
        gbc.setState(0xd65, 0xdbd3, 0x26b0, 0x3f09, 0x7af1, 0x15ce, 0x1, 0x1);
        gbc.writeMem(0xd65, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xdbd3);
        EXPECT(gbc.pc(), 0xd67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02A7
        gbc.setState(0x687f, 0x7382, 0x6280, 0x818b, 0x8510, 0x8cda, 0x1, 0x0);
        gbc.writeMem(0x687f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7382);
        EXPECT(gbc.pc(), 0x6881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02A8
        gbc.setState(0x3e8a, 0x7771, 0xc810, 0x75a7, 0x3072, 0x6275, 0x1, 0x1);
        gbc.writeMem(0x3e8a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7771);
        EXPECT(gbc.pc(), 0x3e8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02A9
        gbc.setState(0x890c, 0x36ff, 0xc1f0, 0xf33b, 0xbe75, 0x894a, 0x1, 0x1);
        gbc.writeMem(0x890c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x36ff);
        EXPECT(gbc.pc(), 0x890e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890c), 0xcb);
        EXPECT(gbc.readMem(0x890d), 0x3d);
        // CB 3D 02AA
        gbc.setState(0x54db, 0x694b, 0x2780, 0x700a, 0x894a, 0x109e, 0x1, 0x1);
        gbc.writeMem(0x54db, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x694b);
        EXPECT(gbc.pc(), 0x54dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02AC
        gbc.setState(0x688c, 0x2b40, 0x5690, 0x4bc5, 0x6d0, 0xf81c, 0x1, 0x0);
        gbc.writeMem(0x688c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2b40);
        EXPECT(gbc.pc(), 0x688e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02AD
        gbc.setState(0xeaf6, 0xa479, 0x2390, 0x62c7, 0xda75, 0x7a49, 0x0, 0x1);
        gbc.writeMem(0xeaf6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa479);
        EXPECT(gbc.pc(), 0xeaf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaf6), 0xcb);
        EXPECT(gbc.readMem(0xeaf7), 0x3d);
        // CB 3D 02AE
        gbc.setState(0x599, 0x979, 0x4910, 0x9c11, 0x1892, 0x8540, 0x0, 0x0);
        gbc.writeMem(0x599, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x979);
        EXPECT(gbc.pc(), 0x59b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02AF
        gbc.setState(0x266c, 0x730e, 0xe840, 0x6ba1, 0x5c05, 0x500d, 0x1, 0x1);
        gbc.writeMem(0x266c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x730e);
        EXPECT(gbc.pc(), 0x266e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02B0
        gbc.setState(0xa103, 0xade1, 0x4bc0, 0xca2b, 0xee95, 0xcff3, 0x0, 0x1);
        gbc.writeMem(0xa103, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xade1);
        EXPECT(gbc.pc(), 0xa105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa103), 0xcb);
        EXPECT(gbc.readMem(0xa104), 0x3d);
        // CB 3D 02B1
        gbc.setState(0x102d, 0xb406, 0xdf80, 0xca8a, 0x7407, 0xdd98, 0x0, 0x0);
        gbc.writeMem(0x102d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb406);
        EXPECT(gbc.pc(), 0x102f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02B2
        gbc.setState(0xb482, 0x60c3, 0xe770, 0x4a0e, 0xc26f, 0x1074, 0x1, 0x1);
        gbc.writeMem(0xb482, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x60c3);
        EXPECT(gbc.pc(), 0xb484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb482), 0xcb);
        EXPECT(gbc.readMem(0xb483), 0x3d);
        // CB 3D 02B3
        gbc.setState(0x376f, 0x619f, 0x5430, 0x4d76, 0x1919, 0x28cf, 0x1, 0x1);
        gbc.writeMem(0x376f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x619f);
        EXPECT(gbc.pc(), 0x3771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02B4
        gbc.setState(0xc7a2, 0xc90e, 0xa7c0, 0xdaf9, 0x56a3, 0x907b, 0x0, 0x0);
        gbc.writeMem(0xc7a2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc90e);
        EXPECT(gbc.pc(), 0xc7a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7a2), 0xcb);
        EXPECT(gbc.readMem(0xc7a3), 0x3d);
        // CB 3D 02B5
        gbc.setState(0x5316, 0xd982, 0xb480, 0x884d, 0x3ad2, 0x55d3, 0x0, 0x0);
        gbc.writeMem(0x5316, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd982);
        EXPECT(gbc.pc(), 0x5318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02B6
        gbc.setState(0x5231, 0x89d0, 0x7e00, 0xa080, 0xab3d, 0xfc93, 0x1, 0x1);
        gbc.writeMem(0x5231, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x89d0);
        EXPECT(gbc.pc(), 0x5233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02B7
        gbc.setState(0x8833, 0x8f37, 0x9be0, 0x5a8, 0xbcbd, 0xee56, 0x0, 0x1);
        gbc.writeMem(0x8833, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8f37);
        EXPECT(gbc.pc(), 0x8835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8833), 0xcb);
        EXPECT(gbc.readMem(0x8834), 0x3d);
        // CB 3D 02B8
        gbc.setState(0x6a35, 0x1b14, 0x3f50, 0xbc55, 0xc665, 0x9f68, 0x0, 0x0);
        gbc.writeMem(0x6a35, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1b14);
        EXPECT(gbc.pc(), 0x6a37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02B9
        gbc.setState(0x53f1, 0xaec1, 0xbe60, 0x35c9, 0xed9, 0xe2d, 0x1, 0x1);
        gbc.writeMem(0x53f1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xaec1);
        EXPECT(gbc.pc(), 0x53f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02BA
        gbc.setState(0xb264, 0xf6b0, 0x570, 0x60e1, 0xbc16, 0xa6c5, 0x0, 0x1);
        gbc.writeMem(0xb264, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf6b0);
        EXPECT(gbc.pc(), 0xb266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb264), 0xcb);
        EXPECT(gbc.readMem(0xb265), 0x3d);
        // CB 3D 02BB
        gbc.setState(0x64ac, 0x673d, 0xe9c0, 0x84c2, 0xb0d0, 0x1062, 0x1, 0x1);
        gbc.writeMem(0x64ac, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x673d);
        EXPECT(gbc.pc(), 0x64ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02BC
        gbc.setState(0x14dd, 0x270f, 0x9b70, 0xf95f, 0x189b, 0xe1eb, 0x1, 0x1);
        gbc.writeMem(0x14dd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x270f);
        EXPECT(gbc.pc(), 0x14df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02BD
        gbc.setState(0x64ee, 0x2767, 0x2220, 0x79db, 0x9157, 0xeced, 0x0, 0x1);
        gbc.writeMem(0x64ee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2767);
        EXPECT(gbc.pc(), 0x64f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02BE
        gbc.setState(0x32b9, 0x6352, 0xd520, 0xd013, 0x4b7f, 0xab30, 0x0, 0x1);
        gbc.writeMem(0x32b9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6352);
        EXPECT(gbc.pc(), 0x32bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02BF
        gbc.setState(0x808, 0xb177, 0x5de0, 0xf1b0, 0xc412, 0xff29, 0x0, 0x1);
        gbc.writeMem(0x808, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb177);
        EXPECT(gbc.pc(), 0x80a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02C0
        gbc.setState(0x3056, 0x46e9, 0xa6f0, 0x920f, 0x9235, 0xd00f, 0x1, 0x1);
        gbc.writeMem(0x3056, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x46e9);
        EXPECT(gbc.pc(), 0x3058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02C1
        gbc.setState(0x8f72, 0xe175, 0x8d90, 0xd8c, 0x58b5, 0x7a3b, 0x0, 0x0);
        gbc.writeMem(0x8f72, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe175);
        EXPECT(gbc.pc(), 0x8f74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f72), 0xcb);
        EXPECT(gbc.readMem(0x8f73), 0x3d);
        // CB 3D 02C2
        gbc.setState(0x23e7, 0xb2ae, 0x5550, 0x5fff, 0x3c40, 0xece8, 0x1, 0x1);
        gbc.writeMem(0x23e7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb2ae);
        EXPECT(gbc.pc(), 0x23e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02C3
        gbc.setState(0xbb36, 0x9b39, 0xdc00, 0xbf1c, 0x72c8, 0x3d6f, 0x1, 0x0);
        gbc.writeMem(0xbb36, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9b39);
        EXPECT(gbc.pc(), 0xbb38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb36), 0xcb);
        EXPECT(gbc.readMem(0xbb37), 0x3d);
        // CB 3D 02C4
        gbc.setState(0xa39e, 0x606f, 0xea0, 0x1683, 0xd12a, 0xe201, 0x1, 0x0);
        gbc.writeMem(0xa39e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x606f);
        EXPECT(gbc.pc(), 0xa3a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa39e), 0xcb);
        EXPECT(gbc.readMem(0xa39f), 0x3d);
        // CB 3D 02C5
        gbc.setState(0x3b9d, 0xa2fb, 0x7ff0, 0x12c1, 0x6db4, 0x462a, 0x0, 0x1);
        gbc.writeMem(0x3b9d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa2fb);
        EXPECT(gbc.pc(), 0x3b9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02C6
        gbc.setState(0xadf4, 0xf85e, 0x6fd0, 0xe4d5, 0xeb55, 0xd95b, 0x1, 0x1);
        gbc.writeMem(0xadf4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf85e);
        EXPECT(gbc.pc(), 0xadf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf4), 0xcb);
        EXPECT(gbc.readMem(0xadf5), 0x3d);
        // CB 3D 02C7
        gbc.setState(0x1b4b, 0x36d8, 0x5fe0, 0xfdb5, 0xe66f, 0xc505, 0x1, 0x1);
        gbc.writeMem(0x1b4b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x36d8);
        EXPECT(gbc.pc(), 0x1b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02C8
        gbc.setState(0x2700, 0x20a4, 0x4500, 0x3b52, 0x5d90, 0xd51d, 0x1, 0x0);
        gbc.writeMem(0x2700, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x20a4);
        EXPECT(gbc.pc(), 0x2702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02C9
        gbc.setState(0xb52a, 0x2b71, 0x44a0, 0xbe36, 0x54ee, 0xdb12, 0x1, 0x0);
        gbc.writeMem(0xb52a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2b71);
        EXPECT(gbc.pc(), 0xb52c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb52a), 0xcb);
        EXPECT(gbc.readMem(0xb52b), 0x3d);
        // CB 3D 02CA
        gbc.setState(0xbfcf, 0xbdd2, 0xc310, 0x4127, 0xa564, 0x1a03, 0x1, 0x0);
        gbc.writeMem(0xbfcf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbdd2);
        EXPECT(gbc.pc(), 0xbfd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfcf), 0xcb);
        EXPECT(gbc.readMem(0xbfd0), 0x3d);
        // CB 3D 02CB
        gbc.setState(0x83d6, 0xcd54, 0xf6a0, 0xcf64, 0x730f, 0xf92, 0x0, 0x1);
        gbc.writeMem(0x83d6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xcd54);
        EXPECT(gbc.pc(), 0x83d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83d6), 0xcb);
        EXPECT(gbc.readMem(0x83d7), 0x3d);
        // CB 3D 02CC
        gbc.setState(0xd2b3, 0x1e70, 0xd1d0, 0x8979, 0xd875, 0x520, 0x1, 0x1);
        gbc.writeMem(0xd2b3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1e70);
        EXPECT(gbc.pc(), 0xd2b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b3), 0xcb);
        EXPECT(gbc.readMem(0xd2b4), 0x3d);
        // CB 3D 02CD
        gbc.setState(0x97fd, 0xd13a, 0x63b0, 0x1045, 0x79bd, 0x8ebc, 0x1, 0x1);
        gbc.writeMem(0x97fd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd13a);
        EXPECT(gbc.pc(), 0x97ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97fd), 0xcb);
        EXPECT(gbc.readMem(0x97fe), 0x3d);
        // CB 3D 02CE
        gbc.setState(0xa499, 0xd55a, 0xab60, 0x4d48, 0x7249, 0x82f5, 0x1, 0x0);
        gbc.writeMem(0xa499, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd55a);
        EXPECT(gbc.pc(), 0xa49b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa499), 0xcb);
        EXPECT(gbc.readMem(0xa49a), 0x3d);
        // CB 3D 02CF
        gbc.setState(0x844, 0x2010, 0x7aa0, 0x41d, 0x48d7, 0xa0db, 0x1, 0x0);
        gbc.writeMem(0x844, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2010);
        EXPECT(gbc.pc(), 0x846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02D0
        gbc.setState(0xe0e7, 0xee98, 0xd990, 0x1e0e, 0x8de, 0x4924, 0x1, 0x0);
        gbc.writeMem(0xe0e7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xee98);
        EXPECT(gbc.pc(), 0xe0e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0e7), 0xcb);
        EXPECT(gbc.readMem(0xe0e8), 0x3d);
        // CB 3D 02D1
        gbc.setState(0x9b63, 0xc657, 0x4c60, 0x2c85, 0x5100, 0x6d3c, 0x0, 0x1);
        gbc.writeMem(0x9b63, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc657);
        EXPECT(gbc.pc(), 0x9b65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b63), 0xcb);
        EXPECT(gbc.readMem(0x9b64), 0x3d);
        // CB 3D 02D3
        gbc.setState(0xb493, 0xe003, 0xcd50, 0x3c35, 0xf2ec, 0x9997, 0x1, 0x1);
        gbc.writeMem(0xb493, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe003);
        EXPECT(gbc.pc(), 0xb495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb493), 0xcb);
        EXPECT(gbc.readMem(0xb494), 0x3d);
        // CB 3D 02D4
        gbc.setState(0x3147, 0xbc1f, 0x43f0, 0x9f23, 0xafef, 0x2183, 0x1, 0x1);
        gbc.writeMem(0x3147, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbc1f);
        EXPECT(gbc.pc(), 0x3149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02D5
        gbc.setState(0xcf83, 0xdff6, 0x1e60, 0x2a97, 0xece3, 0x7f85, 0x1, 0x1);
        gbc.writeMem(0xcf83, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdff6);
        EXPECT(gbc.pc(), 0xcf85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf83), 0xcb);
        EXPECT(gbc.readMem(0xcf84), 0x3d);
        // CB 3D 02D6
        gbc.setState(0xa192, 0x94b6, 0x29b0, 0x4b16, 0x37fe, 0x6ad, 0x0, 0x1);
        gbc.writeMem(0xa192, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x94b6);
        EXPECT(gbc.pc(), 0xa194);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa192), 0xcb);
        EXPECT(gbc.readMem(0xa193), 0x3d);
        // CB 3D 02D7
        gbc.setState(0x261, 0xb164, 0x47f0, 0x811b, 0xed70, 0xfa6f, 0x0, 0x1);
        gbc.writeMem(0x261, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb164);
        EXPECT(gbc.pc(), 0x263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02D8
        gbc.setState(0x458d, 0xa359, 0x70d0, 0xacc8, 0x8b10, 0xa912, 0x1, 0x1);
        gbc.writeMem(0x458d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa359);
        EXPECT(gbc.pc(), 0x458f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02D9
        gbc.setState(0xd376, 0x720d, 0x8c90, 0x578c, 0xb92b, 0xc806, 0x1, 0x0);
        gbc.writeMem(0xd376, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x720d);
        EXPECT(gbc.pc(), 0xd378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd376), 0xcb);
        EXPECT(gbc.readMem(0xd377), 0x3d);
        // CB 3D 02DA
        gbc.setState(0x7818, 0xbee9, 0x2da0, 0x23b9, 0x3c7, 0xb7e2, 0x1, 0x1);
        gbc.writeMem(0x7818, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xbee9);
        EXPECT(gbc.pc(), 0x781a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02DB
        gbc.setState(0x435b, 0x264a, 0xfd80, 0x8d9e, 0x485f, 0x6f1c, 0x1, 0x0);
        gbc.writeMem(0x435b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x264a);
        EXPECT(gbc.pc(), 0x435d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02DC
        gbc.setState(0xbc32, 0x32c8, 0x3300, 0xf319, 0xa218, 0x2f93, 0x0, 0x1);
        gbc.writeMem(0xbc32, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x32c8);
        EXPECT(gbc.pc(), 0xbc34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc32), 0xcb);
        EXPECT(gbc.readMem(0xbc33), 0x3d);
        // CB 3D 02DD
        gbc.setState(0xe9dc, 0x44dd, 0xed80, 0xf152, 0xa63a, 0xc494, 0x1, 0x1);
        gbc.writeMem(0xe9dc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x44dd);
        EXPECT(gbc.pc(), 0xe9de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9dc), 0xcb);
        EXPECT(gbc.readMem(0xe9dd), 0x3d);
        // CB 3D 02DF
        gbc.setState(0x550b, 0x1f4d, 0xaa00, 0x3c56, 0x78ef, 0x453d, 0x0, 0x1);
        gbc.writeMem(0x550b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1f4d);
        EXPECT(gbc.pc(), 0x550d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02E0
        gbc.setState(0x8c6, 0xfb8b, 0x8340, 0x119a, 0xb817, 0xf624, 0x0, 0x0);
        gbc.writeMem(0x8c6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xfb8b);
        EXPECT(gbc.pc(), 0x8c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02E1
        gbc.setState(0x35b7, 0xa88b, 0x9a20, 0xa1f8, 0x42ab, 0x9a48, 0x1, 0x0);
        gbc.writeMem(0x35b7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa88b);
        EXPECT(gbc.pc(), 0x35b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02E2
        gbc.setState(0x4dea, 0x6c7c, 0x9ac0, 0x3bae, 0x95e9, 0xff49, 0x1, 0x0);
        gbc.writeMem(0x4dea, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6c7c);
        EXPECT(gbc.pc(), 0x4dec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02E4
        gbc.setState(0x6361, 0xe2b4, 0x9060, 0x7420, 0xb0aa, 0xddf1, 0x0, 0x1);
        gbc.writeMem(0x6361, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe2b4);
        EXPECT(gbc.pc(), 0x6363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02E5
        gbc.setState(0x25d5, 0x9a5e, 0xe010, 0x125a, 0x7154, 0x17ab, 0x1, 0x1);
        gbc.writeMem(0x25d5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9a5e);
        EXPECT(gbc.pc(), 0x25d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02E6
        gbc.setState(0xcfef, 0x4001, 0xfa70, 0xdaec, 0x28af, 0x33d9, 0x1, 0x0);
        gbc.writeMem(0xcfef, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4001);
        EXPECT(gbc.pc(), 0xcff1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfef), 0xcb);
        EXPECT(gbc.readMem(0xcff0), 0x3d);
        // CB 3D 02E7
        gbc.setState(0x17cf, 0x4090, 0xd890, 0x25fc, 0xe514, 0x916f, 0x0, 0x1);
        gbc.writeMem(0x17cf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4090);
        EXPECT(gbc.pc(), 0x17d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02E8
        gbc.setState(0x4e44, 0x8c37, 0xd5a0, 0xb56c, 0xadee, 0x902d, 0x0, 0x0);
        gbc.writeMem(0x4e44, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8c37);
        EXPECT(gbc.pc(), 0x4e46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02E9
        gbc.setState(0x7b6c, 0x583, 0x99f0, 0xad73, 0xb9b7, 0x9a60, 0x1, 0x1);
        gbc.writeMem(0x7b6c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x583);
        EXPECT(gbc.pc(), 0x7b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02EA
        gbc.setState(0x1747, 0x841, 0x540, 0x95b8, 0x2ef7, 0x2f83, 0x0, 0x0);
        gbc.writeMem(0x1747, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x841);
        EXPECT(gbc.pc(), 0x1749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02EB
        gbc.setState(0xa87c, 0xc5f5, 0xe8f0, 0xad23, 0x2cd9, 0xe52e, 0x1, 0x1);
        gbc.writeMem(0xa87c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc5f5);
        EXPECT(gbc.pc(), 0xa87e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa87c), 0xcb);
        EXPECT(gbc.readMem(0xa87d), 0x3d);
        // CB 3D 02EC
        gbc.setState(0xab7c, 0x4abd, 0x6f00, 0xe5fd, 0xb173, 0x6570, 0x0, 0x0);
        gbc.writeMem(0xab7c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4abd);
        EXPECT(gbc.pc(), 0xab7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab7c), 0xcb);
        EXPECT(gbc.readMem(0xab7d), 0x3d);
        // CB 3D 02ED
        gbc.setState(0x8db7, 0x9bda, 0x9b60, 0x8d6a, 0xdc83, 0x77d5, 0x0, 0x1);
        gbc.writeMem(0x8db7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9bda);
        EXPECT(gbc.pc(), 0x8db9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db7), 0xcb);
        EXPECT(gbc.readMem(0x8db8), 0x3d);
        // CB 3D 02EE
        gbc.setState(0x209c, 0xf16c, 0x87a0, 0xcc35, 0x860d, 0x7caf, 0x1, 0x1);
        gbc.writeMem(0x209c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf16c);
        EXPECT(gbc.pc(), 0x209e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02EF
        gbc.setState(0xa2bb, 0x441d, 0x1ef0, 0x5ed0, 0x1138, 0xc8d6, 0x0, 0x1);
        gbc.writeMem(0xa2bb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x441d);
        EXPECT(gbc.pc(), 0xa2bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2bb), 0xcb);
        EXPECT(gbc.readMem(0xa2bc), 0x3d);
        // CB 3D 02F0
        gbc.setState(0xe9db, 0xb59a, 0x7430, 0x6561, 0x4274, 0x272f, 0x0, 0x0);
        gbc.writeMem(0xe9db, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb59a);
        EXPECT(gbc.pc(), 0xe9dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9db), 0xcb);
        EXPECT(gbc.readMem(0xe9dc), 0x3d);
        // CB 3D 02F1
        gbc.setState(0xd3f, 0x9dab, 0xd3e0, 0xbd72, 0x22ce, 0xbb2, 0x1, 0x1);
        gbc.writeMem(0xd3f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9dab);
        EXPECT(gbc.pc(), 0xd41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02F2
        gbc.setState(0xc71e, 0x5708, 0xd950, 0x34bb, 0xf0b6, 0xaca1, 0x0, 0x0);
        gbc.writeMem(0xc71e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5708);
        EXPECT(gbc.pc(), 0xc720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc71e), 0xcb);
        EXPECT(gbc.readMem(0xc71f), 0x3d);
        // CB 3D 02F3
        gbc.setState(0x274e, 0x5c57, 0xb1a0, 0xe849, 0xfc1b, 0xbd75, 0x0, 0x1);
        gbc.writeMem(0x274e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5c57);
        EXPECT(gbc.pc(), 0x2750);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02F4
        gbc.setState(0x75c9, 0x19ef, 0x4cc0, 0xad8, 0x3ca9, 0x363f, 0x0, 0x0);
        gbc.writeMem(0x75c9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x19ef);
        EXPECT(gbc.pc(), 0x75cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02F5
        gbc.setState(0xbda1, 0x6a29, 0x59c0, 0xe1db, 0xfc2d, 0x75f0, 0x0, 0x0);
        gbc.writeMem(0xbda1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6a29);
        EXPECT(gbc.pc(), 0xbda3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbda1), 0xcb);
        EXPECT(gbc.readMem(0xbda2), 0x3d);
        // CB 3D 02F6
        gbc.setState(0xac0e, 0x3684, 0xa310, 0xedd2, 0x338, 0xae7, 0x0, 0x1);
        gbc.writeMem(0xac0e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3684);
        EXPECT(gbc.pc(), 0xac10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0e), 0xcb);
        EXPECT(gbc.readMem(0xac0f), 0x3d);
        // CB 3D 02F7
        gbc.setState(0x605, 0xcd61, 0xa370, 0x2009, 0x6cd6, 0xdc3f, 0x0, 0x1);
        gbc.writeMem(0x605, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcd61);
        EXPECT(gbc.pc(), 0x607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02F8
        gbc.setState(0xed28, 0xae6a, 0x8cc0, 0x1858, 0x8afd, 0xb0ea, 0x1, 0x0);
        gbc.writeMem(0xed28, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xae6a);
        EXPECT(gbc.pc(), 0xed2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed28), 0xcb);
        EXPECT(gbc.readMem(0xed29), 0x3d);
        // CB 3D 02F9
        gbc.setState(0x9fd6, 0xdf6, 0xde40, 0xbb2d, 0xaa9e, 0x1b64, 0x0, 0x0);
        gbc.writeMem(0x9fd6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdf6);
        EXPECT(gbc.pc(), 0x9fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd6), 0xcb);
        EXPECT(gbc.readMem(0x9fd7), 0x3d);
        // CB 3D 02FA
        gbc.setState(0x68a9, 0x17f9, 0xd370, 0x5eeb, 0xb10c, 0xfbba, 0x1, 0x1);
        gbc.writeMem(0x68a9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x17f9);
        EXPECT(gbc.pc(), 0x68ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 02FC
        gbc.setState(0xba71, 0xbbf2, 0x8c50, 0x2d7b, 0xdb2, 0xa1c2, 0x1, 0x1);
        gbc.writeMem(0xba71, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xbbf2);
        EXPECT(gbc.pc(), 0xba73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba71), 0xcb);
        EXPECT(gbc.readMem(0xba72), 0x3d);
        // CB 3D 02FD
        gbc.setState(0x58ec, 0xe48, 0xd330, 0xa63, 0x3bb6, 0x40e3, 0x1, 0x0);
        gbc.writeMem(0x58ec, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe48);
        EXPECT(gbc.pc(), 0x58ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 02FE
        gbc.setState(0xac87, 0x7e02, 0x7dd0, 0xb037, 0xaf84, 0x8f92, 0x0, 0x0);
        gbc.writeMem(0xac87, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7e02);
        EXPECT(gbc.pc(), 0xac89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac87), 0xcb);
        EXPECT(gbc.readMem(0xac88), 0x3d);
        // CB 3D 02FF
        gbc.setState(0x4b62, 0x7182, 0xd950, 0x22f5, 0x676c, 0x6966, 0x1, 0x1);
        gbc.writeMem(0x4b62, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7182);
        EXPECT(gbc.pc(), 0x4b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0300
        gbc.setState(0xe644, 0xe515, 0xcc0, 0x61a5, 0xd9d8, 0xe0ea, 0x0, 0x0);
        gbc.writeMem(0xe644, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe515);
        EXPECT(gbc.pc(), 0xe646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe644), 0xcb);
        EXPECT(gbc.readMem(0xe645), 0x3d);
        // CB 3D 0301
        gbc.setState(0x19f7, 0x7be1, 0x6b30, 0x2456, 0x8d06, 0xc30d, 0x1, 0x1);
        gbc.writeMem(0x19f7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7be1);
        EXPECT(gbc.pc(), 0x19f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0302
        gbc.setState(0x694b, 0x8bb8, 0xe140, 0x4a0b, 0xb86e, 0x2002, 0x0, 0x0);
        gbc.writeMem(0x694b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8bb8);
        EXPECT(gbc.pc(), 0x694d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0303
        gbc.setState(0x43ff, 0x58fc, 0x43a0, 0xe720, 0x93cc, 0xdd32, 0x1, 0x1);
        gbc.writeMem(0x43ff, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x58fc);
        EXPECT(gbc.pc(), 0x4401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0304
        gbc.setState(0x8b27, 0xc5f9, 0x4ee0, 0x417b, 0x9701, 0xdc69, 0x1, 0x0);
        gbc.writeMem(0x8b27, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc5f9);
        EXPECT(gbc.pc(), 0x8b29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b27), 0xcb);
        EXPECT(gbc.readMem(0x8b28), 0x3d);
        // CB 3D 0305
        gbc.setState(0x6619, 0x9a7a, 0x3750, 0xfca3, 0xe93, 0xde59, 0x1, 0x0);
        gbc.writeMem(0x6619, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9a7a);
        EXPECT(gbc.pc(), 0x661b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0306
        gbc.setState(0x367a, 0x232d, 0x95d0, 0x5018, 0xf8b7, 0xb125, 0x1, 0x0);
        gbc.writeMem(0x367a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x232d);
        EXPECT(gbc.pc(), 0x367c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0307
        gbc.setState(0x7d98, 0xd54, 0xb20, 0x8497, 0x7f44, 0xfd69, 0x0, 0x0);
        gbc.writeMem(0x7d98, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd54);
        EXPECT(gbc.pc(), 0x7d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0308
        gbc.setState(0x2962, 0x4fec, 0x9ae0, 0xdee3, 0x82b2, 0xbca4, 0x0, 0x0);
        gbc.writeMem(0x2962, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4fec);
        EXPECT(gbc.pc(), 0x2964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0309
        gbc.setState(0x6c26, 0x5836, 0xff90, 0xc62, 0x9c29, 0x564e, 0x0, 0x0);
        gbc.writeMem(0x6c26, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5836);
        EXPECT(gbc.pc(), 0x6c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 030A
        gbc.setState(0x3179, 0x585d, 0x1820, 0x4e9c, 0xe528, 0x58ee, 0x1, 0x0);
        gbc.writeMem(0x3179, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x585d);
        EXPECT(gbc.pc(), 0x317b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 030B
        gbc.setState(0xcbb1, 0x8e0f, 0x9280, 0x475c, 0x5a14, 0x4a7c, 0x1, 0x0);
        gbc.writeMem(0xcbb1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8e0f);
        EXPECT(gbc.pc(), 0xcbb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb1), 0xcb);
        EXPECT(gbc.readMem(0xcbb2), 0x3d);
        // CB 3D 030C
        gbc.setState(0xb2f2, 0x8fbb, 0x39c0, 0xf22, 0x7d8d, 0x4f72, 0x0, 0x0);
        gbc.writeMem(0xb2f2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8fbb);
        EXPECT(gbc.pc(), 0xb2f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2f2), 0xcb);
        EXPECT(gbc.readMem(0xb2f3), 0x3d);
        // CB 3D 030D
        gbc.setState(0x5387, 0x3981, 0x8ee0, 0xcbcd, 0x2476, 0xf3e4, 0x1, 0x1);
        gbc.writeMem(0x5387, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3981);
        EXPECT(gbc.pc(), 0x5389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 030E
        gbc.setState(0xac2c, 0x183b, 0x41c0, 0xad3d, 0x42b, 0x9300, 0x1, 0x0);
        gbc.writeMem(0xac2c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x183b);
        EXPECT(gbc.pc(), 0xac2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac2c), 0xcb);
        EXPECT(gbc.readMem(0xac2d), 0x3d);
        // CB 3D 030F
        gbc.setState(0xbaf2, 0xfec4, 0xfe30, 0x5a8c, 0x90b5, 0x3e7, 0x1, 0x0);
        gbc.writeMem(0xbaf2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xfec4);
        EXPECT(gbc.pc(), 0xbaf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaf2), 0xcb);
        EXPECT(gbc.readMem(0xbaf3), 0x3d);
        // CB 3D 0310
        gbc.setState(0xa8ad, 0xcc19, 0xcda0, 0x8936, 0x89b1, 0x43df, 0x1, 0x0);
        gbc.writeMem(0xa8ad, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xcc19);
        EXPECT(gbc.pc(), 0xa8af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8ad), 0xcb);
        EXPECT(gbc.readMem(0xa8ae), 0x3d);
        // CB 3D 0311
        gbc.setState(0xeffd, 0x1caf, 0x78f0, 0x221, 0xa4e5, 0xf7c, 0x0, 0x1);
        gbc.writeMem(0xeffd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1caf);
        EXPECT(gbc.pc(), 0xefff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeffd), 0xcb);
        EXPECT(gbc.readMem(0xeffe), 0x3d);
        // CB 3D 0312
        gbc.setState(0xb54b, 0x6b61, 0xdc20, 0x6ce2, 0x8c25, 0x34b6, 0x1, 0x0);
        gbc.writeMem(0xb54b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6b61);
        EXPECT(gbc.pc(), 0xb54d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb54b), 0xcb);
        EXPECT(gbc.readMem(0xb54c), 0x3d);
        // CB 3D 0313
        gbc.setState(0xc36c, 0x8160, 0x2b70, 0xebc1, 0x5239, 0xc969, 0x1, 0x1);
        gbc.writeMem(0xc36c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8160);
        EXPECT(gbc.pc(), 0xc36e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc36c), 0xcb);
        EXPECT(gbc.readMem(0xc36d), 0x3d);
        // CB 3D 0314
        gbc.setState(0x5ca2, 0xaa8e, 0xb0a0, 0xaf0c, 0xf0fb, 0xf1e8, 0x0, 0x1);
        gbc.writeMem(0x5ca2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xaa8e);
        EXPECT(gbc.pc(), 0x5ca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0315
        gbc.setState(0xc2a, 0xd268, 0x3750, 0x2793, 0x5e3b, 0xff7f, 0x1, 0x0);
        gbc.writeMem(0xc2a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd268);
        EXPECT(gbc.pc(), 0xc2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0316
        gbc.setState(0x7f03, 0x3b7c, 0x2900, 0x5ab7, 0x8602, 0xcab2, 0x0, 0x1);
        gbc.writeMem(0x7f03, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3b7c);
        EXPECT(gbc.pc(), 0x7f05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0318
        gbc.setState(0x5a71, 0xe67e, 0x3270, 0xdca0, 0x7667, 0x737c, 0x0, 0x1);
        gbc.writeMem(0x5a71, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe67e);
        EXPECT(gbc.pc(), 0x5a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0319
        gbc.setState(0xd11, 0x9afd, 0x8970, 0x1747, 0x6d78, 0x8f45, 0x0, 0x1);
        gbc.writeMem(0xd11, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9afd);
        EXPECT(gbc.pc(), 0xd13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 031A
        gbc.setState(0xc6f1, 0x78e9, 0x3440, 0x8218, 0xeb70, 0x2527, 0x1, 0x1);
        gbc.writeMem(0xc6f1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x78e9);
        EXPECT(gbc.pc(), 0xc6f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6f1), 0xcb);
        EXPECT(gbc.readMem(0xc6f2), 0x3d);
        // CB 3D 031B
        gbc.setState(0x463f, 0x2d6a, 0xe510, 0xdf6a, 0xf322, 0x1b44, 0x0, 0x0);
        gbc.writeMem(0x463f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2d6a);
        EXPECT(gbc.pc(), 0x4641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 031C
        gbc.setState(0xb57f, 0x6678, 0x4dd0, 0x9e1b, 0xdffb, 0x1c7d, 0x0, 0x1);
        gbc.writeMem(0xb57f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6678);
        EXPECT(gbc.pc(), 0xb581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb57f), 0xcb);
        EXPECT(gbc.readMem(0xb580), 0x3d);
        // CB 3D 031D
        gbc.setState(0x808f, 0xa119, 0xaa00, 0x39, 0x4ad9, 0xa957, 0x0, 0x1);
        gbc.writeMem(0x808f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa119);
        EXPECT(gbc.pc(), 0x8091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x808f), 0xcb);
        EXPECT(gbc.readMem(0x8090), 0x3d);
        // CB 3D 031E
        gbc.setState(0x992e, 0xeb1f, 0x7ce0, 0x24b4, 0xe7d4, 0xed07, 0x0, 0x1);
        gbc.writeMem(0x992e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xeb1f);
        EXPECT(gbc.pc(), 0x9930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x992e), 0xcb);
        EXPECT(gbc.readMem(0x992f), 0x3d);
        // CB 3D 031F
        gbc.setState(0x6cc5, 0x7f1a, 0xdb70, 0x614f, 0xa072, 0x55b1, 0x1, 0x1);
        gbc.writeMem(0x6cc5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7f1a);
        EXPECT(gbc.pc(), 0x6cc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0320
        gbc.setState(0xe64c, 0x27c8, 0xb810, 0xfa88, 0xc1d3, 0xe794, 0x0, 0x0);
        gbc.writeMem(0xe64c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x27c8);
        EXPECT(gbc.pc(), 0xe64e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64c), 0xcb);
        EXPECT(gbc.readMem(0xe64d), 0x3d);
        // CB 3D 0321
        gbc.setState(0x48c8, 0xa42f, 0x17b0, 0x29e7, 0xa4cc, 0x53a4, 0x1, 0x1);
        gbc.writeMem(0x48c8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa42f);
        EXPECT(gbc.pc(), 0x48ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0322
        gbc.setState(0xced8, 0xa66, 0x54f0, 0x7370, 0xe331, 0xe72, 0x0, 0x0);
        gbc.writeMem(0xced8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa66);
        EXPECT(gbc.pc(), 0xceda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced8), 0xcb);
        EXPECT(gbc.readMem(0xced9), 0x3d);
        // CB 3D 0323
        gbc.setState(0xad88, 0xf82, 0xbf70, 0xbc02, 0x3599, 0xc706, 0x0, 0x1);
        gbc.writeMem(0xad88, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf82);
        EXPECT(gbc.pc(), 0xad8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad88), 0xcb);
        EXPECT(gbc.readMem(0xad89), 0x3d);
        // CB 3D 0324
        gbc.setState(0x4ada, 0x1ba2, 0xd210, 0xbd1c, 0x8ff3, 0xc99, 0x1, 0x0);
        gbc.writeMem(0x4ada, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1ba2);
        EXPECT(gbc.pc(), 0x4adc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0325
        gbc.setState(0x986e, 0xded7, 0x21c0, 0xf63d, 0x5a11, 0x8ff4, 0x1, 0x1);
        gbc.writeMem(0x986e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xded7);
        EXPECT(gbc.pc(), 0x9870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x986e), 0xcb);
        EXPECT(gbc.readMem(0x986f), 0x3d);
        // CB 3D 0326
        gbc.setState(0x7852, 0x1bdd, 0xd30, 0x97ce, 0xf8d0, 0x159e, 0x1, 0x1);
        gbc.writeMem(0x7852, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1bdd);
        EXPECT(gbc.pc(), 0x7854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0327
        gbc.setState(0x8921, 0xafcf, 0x13b0, 0x9903, 0x2a13, 0x7cdd, 0x0, 0x1);
        gbc.writeMem(0x8921, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xafcf);
        EXPECT(gbc.pc(), 0x8923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8921), 0xcb);
        EXPECT(gbc.readMem(0x8922), 0x3d);
        // CB 3D 0328
        gbc.setState(0xc087, 0x5be9, 0xb1e0, 0x6d21, 0xa1bf, 0x9158, 0x1, 0x1);
        gbc.writeMem(0xc087, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5be9);
        EXPECT(gbc.pc(), 0xc089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc087), 0xcb);
        EXPECT(gbc.readMem(0xc088), 0x3d);
        // CB 3D 0329
        gbc.setState(0x2d4d, 0xa709, 0x4380, 0x3e62, 0x18e2, 0x3aab, 0x1, 0x0);
        gbc.writeMem(0x2d4d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa709);
        EXPECT(gbc.pc(), 0x2d4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 032A
        gbc.setState(0x4084, 0x7551, 0xe10, 0x1353, 0xfacc, 0x3989, 0x1, 0x0);
        gbc.writeMem(0x4084, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7551);
        EXPECT(gbc.pc(), 0x4086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 032B
        gbc.setState(0x899f, 0x98d, 0xbb80, 0x8f00, 0x5bdd, 0xd795, 0x1, 0x0);
        gbc.writeMem(0x899f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x98d);
        EXPECT(gbc.pc(), 0x89a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x899f), 0xcb);
        EXPECT(gbc.readMem(0x89a0), 0x3d);
        // CB 3D 032C
        gbc.setState(0x5891, 0x7996, 0x7380, 0xbaef, 0x4d43, 0xee8c, 0x1, 0x0);
        gbc.writeMem(0x5891, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7996);
        EXPECT(gbc.pc(), 0x5893);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 032D
        gbc.setState(0xc5d1, 0x1652, 0xa530, 0xa1ba, 0x9f5c, 0xcd2a, 0x0, 0x0);
        gbc.writeMem(0xc5d1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1652);
        EXPECT(gbc.pc(), 0xc5d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d1), 0xcb);
        EXPECT(gbc.readMem(0xc5d2), 0x3d);
        // CB 3D 032E
        gbc.setState(0x2552, 0xeb2a, 0x7c60, 0x6351, 0xb37a, 0x5ab3, 0x1, 0x1);
        gbc.writeMem(0x2552, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xeb2a);
        EXPECT(gbc.pc(), 0x2554);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0330
        gbc.setState(0xe5c9, 0x9616, 0x5630, 0x24d1, 0xf9b0, 0x3b3, 0x0, 0x1);
        gbc.writeMem(0xe5c9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9616);
        EXPECT(gbc.pc(), 0xe5cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c9), 0xcb);
        EXPECT(gbc.readMem(0xe5ca), 0x3d);
        // CB 3D 0331
        gbc.setState(0x716, 0x2e1b, 0x620, 0x30f7, 0x9c9, 0xc68d, 0x1, 0x1);
        gbc.writeMem(0x716, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2e1b);
        EXPECT(gbc.pc(), 0x718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0332
        gbc.setState(0xb911, 0xece2, 0x2920, 0xcd9c, 0xc80f, 0xd903, 0x1, 0x1);
        gbc.writeMem(0xb911, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xece2);
        EXPECT(gbc.pc(), 0xb913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb911), 0xcb);
        EXPECT(gbc.readMem(0xb912), 0x3d);
        // CB 3D 0333
        gbc.setState(0x2dd8, 0x1ce4, 0xf300, 0x774d, 0x297a, 0x983e, 0x0, 0x1);
        gbc.writeMem(0x2dd8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1ce4);
        EXPECT(gbc.pc(), 0x2dda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0334
        gbc.setState(0x46ed, 0xe9d2, 0x8dc0, 0x5cdf, 0x51f2, 0x7c5, 0x1, 0x0);
        gbc.writeMem(0x46ed, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe9d2);
        EXPECT(gbc.pc(), 0x46ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0335
        gbc.setState(0x2933, 0xb926, 0x6030, 0x9287, 0x4cb5, 0x758f, 0x1, 0x1);
        gbc.writeMem(0x2933, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb926);
        EXPECT(gbc.pc(), 0x2935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0336
        gbc.setState(0xa9df, 0xc542, 0x5110, 0x369e, 0xd750, 0x6adc, 0x1, 0x1);
        gbc.writeMem(0xa9df, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc542);
        EXPECT(gbc.pc(), 0xa9e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9df), 0xcb);
        EXPECT(gbc.readMem(0xa9e0), 0x3d);
        // CB 3D 0337
        gbc.setState(0x9ec0, 0xe464, 0xf400, 0x255d, 0xe7ea, 0xd374, 0x0, 0x0);
        gbc.writeMem(0x9ec0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe464);
        EXPECT(gbc.pc(), 0x9ec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec0), 0xcb);
        EXPECT(gbc.readMem(0x9ec1), 0x3d);
        // CB 3D 0338
        gbc.setState(0xeebf, 0xdc00, 0x8b30, 0x4cff, 0xd276, 0x777, 0x0, 0x1);
        gbc.writeMem(0xeebf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xdc00);
        EXPECT(gbc.pc(), 0xeec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeebf), 0xcb);
        EXPECT(gbc.readMem(0xeec0), 0x3d);
        // CB 3D 0339
        gbc.setState(0x3d53, 0x981d, 0x9a20, 0x9cb7, 0x123a, 0x57ed, 0x0, 0x1);
        gbc.writeMem(0x3d53, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x981d);
        EXPECT(gbc.pc(), 0x3d55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 033A
        gbc.setState(0x4bf8, 0xcdf1, 0x61d0, 0xce3a, 0x9541, 0x1810, 0x1, 0x0);
        gbc.writeMem(0x4bf8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xcdf1);
        EXPECT(gbc.pc(), 0x4bfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 033B
        gbc.setState(0xd20e, 0xacea, 0x6600, 0x16f9, 0x3d2c, 0x5c3c, 0x1, 0x0);
        gbc.writeMem(0xd20e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xacea);
        EXPECT(gbc.pc(), 0xd210);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20e), 0xcb);
        EXPECT(gbc.readMem(0xd20f), 0x3d);
        // CB 3D 033C
        gbc.setState(0x30ab, 0xb31e, 0x970, 0x4101, 0x9fb2, 0x4683, 0x0, 0x0);
        gbc.writeMem(0x30ab, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb31e);
        EXPECT(gbc.pc(), 0x30ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 033D
        gbc.setState(0x559, 0xf591, 0xcff0, 0x35b8, 0x2df4, 0xf270, 0x0, 0x1);
        gbc.writeMem(0x559, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf591);
        EXPECT(gbc.pc(), 0x55b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 033E
        gbc.setState(0xa9dd, 0xcdc, 0x5b80, 0xf2e, 0x4075, 0x8cdd, 0x0, 0x1);
        gbc.writeMem(0xa9dd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcdc);
        EXPECT(gbc.pc(), 0xa9df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9dd), 0xcb);
        EXPECT(gbc.readMem(0xa9de), 0x3d);
        // CB 3D 033F
        gbc.setState(0xd356, 0xa7d0, 0x5850, 0x7d80, 0x1bbc, 0x93df, 0x0, 0x0);
        gbc.writeMem(0xd356, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa7d0);
        EXPECT(gbc.pc(), 0xd358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd356), 0xcb);
        EXPECT(gbc.readMem(0xd357), 0x3d);
        // CB 3D 0340
        gbc.setState(0xbe53, 0x86ae, 0x6dd0, 0xed47, 0x2517, 0xd68e, 0x1, 0x1);
        gbc.writeMem(0xbe53, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x86ae);
        EXPECT(gbc.pc(), 0xbe55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe53), 0xcb);
        EXPECT(gbc.readMem(0xbe54), 0x3d);
        // CB 3D 0341
        gbc.setState(0x8f6b, 0xf88, 0x4e0, 0xfb2, 0xfeb8, 0xcae3, 0x0, 0x0);
        gbc.writeMem(0x8f6b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf88);
        EXPECT(gbc.pc(), 0x8f6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f6b), 0xcb);
        EXPECT(gbc.readMem(0x8f6c), 0x3d);
        // CB 3D 0342
        gbc.setState(0x3ab7, 0xe00f, 0xa640, 0xbf71, 0xe111, 0xf99f, 0x1, 0x1);
        gbc.writeMem(0x3ab7, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe00f);
        EXPECT(gbc.pc(), 0x3ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0343
        gbc.setState(0x4f0, 0x1034, 0xf920, 0xf78c, 0xbe12, 0x1bc2, 0x0, 0x1);
        gbc.writeMem(0x4f0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1034);
        EXPECT(gbc.pc(), 0x4f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0344
        gbc.setState(0x6cd1, 0xa5b9, 0xd290, 0x20b1, 0x2997, 0xa3c1, 0x1, 0x0);
        gbc.writeMem(0x6cd1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa5b9);
        EXPECT(gbc.pc(), 0x6cd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0345
        gbc.setState(0x9296, 0x5d89, 0x1c50, 0x632a, 0x271e, 0x640f, 0x1, 0x1);
        gbc.writeMem(0x9296, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5d89);
        EXPECT(gbc.pc(), 0x9298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9296), 0xcb);
        EXPECT(gbc.readMem(0x9297), 0x3d);
        // CB 3D 0346
        gbc.setState(0x26ee, 0xee34, 0x40, 0xb5a8, 0x5520, 0xb1ba, 0x0, 0x1);
        gbc.writeMem(0x26ee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xee34);
        EXPECT(gbc.pc(), 0x26f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0347
        gbc.setState(0x5ee9, 0xda62, 0x1dc0, 0xe860, 0x906a, 0xec07, 0x1, 0x0);
        gbc.writeMem(0x5ee9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xda62);
        EXPECT(gbc.pc(), 0x5eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0348
        gbc.setState(0xc341, 0xfb6e, 0x12e0, 0xf4b1, 0x8634, 0x5e71, 0x1, 0x1);
        gbc.writeMem(0xc341, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xfb6e);
        EXPECT(gbc.pc(), 0xc343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc341), 0xcb);
        EXPECT(gbc.readMem(0xc342), 0x3d);
        // CB 3D 0349
        gbc.setState(0x29f, 0x1ddf, 0xe3f0, 0x8329, 0x1498, 0x3c8d, 0x1, 0x0);
        gbc.writeMem(0x29f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1ddf);
        EXPECT(gbc.pc(), 0x2a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 034A
        gbc.setState(0xd651, 0x51c3, 0xcb00, 0x7dd0, 0xfadf, 0x6654, 0x0, 0x0);
        gbc.writeMem(0xd651, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x51c3);
        EXPECT(gbc.pc(), 0xd653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd651), 0xcb);
        EXPECT(gbc.readMem(0xd652), 0x3d);
        // CB 3D 034B
        gbc.setState(0xc039, 0xac85, 0x9330, 0x292a, 0x649, 0xf3c1, 0x0, 0x1);
        gbc.writeMem(0xc039, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xac85);
        EXPECT(gbc.pc(), 0xc03b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc039), 0xcb);
        EXPECT(gbc.readMem(0xc03a), 0x3d);
        // CB 3D 034C
        gbc.setState(0xd8fa, 0x1994, 0x620, 0xf22f, 0x718e, 0x8e9d, 0x0, 0x0);
        gbc.writeMem(0xd8fa, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1994);
        EXPECT(gbc.pc(), 0xd8fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8fa), 0xcb);
        EXPECT(gbc.readMem(0xd8fb), 0x3d);
        // CB 3D 034D
        gbc.setState(0xf31, 0x78b0, 0x4e0, 0x8a5a, 0xd37f, 0xa35b, 0x1, 0x1);
        gbc.writeMem(0xf31, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x78b0);
        EXPECT(gbc.pc(), 0xf33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 034E
        gbc.setState(0x2b72, 0xb577, 0x490, 0x7cfe, 0xf23e, 0xfa4e, 0x1, 0x0);
        gbc.writeMem(0x2b72, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb577);
        EXPECT(gbc.pc(), 0x2b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 034F
        gbc.setState(0x1bf3, 0xce2e, 0x2410, 0xd80, 0x5b69, 0xc805, 0x0, 0x1);
        gbc.writeMem(0x1bf3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xce2e);
        EXPECT(gbc.pc(), 0x1bf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0350
        gbc.setState(0x75a4, 0xfb7d, 0x6dc0, 0xb1f4, 0x4509, 0xeb77, 0x1, 0x0);
        gbc.writeMem(0x75a4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfb7d);
        EXPECT(gbc.pc(), 0x75a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0351
        gbc.setState(0x930b, 0xa28f, 0x6c20, 0xddae, 0x6464, 0xdad9, 0x0, 0x1);
        gbc.writeMem(0x930b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa28f);
        EXPECT(gbc.pc(), 0x930d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x930b), 0xcb);
        EXPECT(gbc.readMem(0x930c), 0x3d);
        // CB 3D 0352
        gbc.setState(0x75e4, 0x95ef, 0x3b0, 0xc679, 0x84e, 0x150f, 0x0, 0x0);
        gbc.writeMem(0x75e4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x95ef);
        EXPECT(gbc.pc(), 0x75e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0353
        gbc.setState(0x1657, 0xc941, 0x1ac0, 0x7bf4, 0xaafd, 0x92c7, 0x1, 0x0);
        gbc.writeMem(0x1657, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc941);
        EXPECT(gbc.pc(), 0x1659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0354
        gbc.setState(0x880c, 0xa4e6, 0xa770, 0x8365, 0x76e2, 0x5f34, 0x1, 0x1);
        gbc.writeMem(0x880c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa4e6);
        EXPECT(gbc.pc(), 0x880e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x880c), 0xcb);
        EXPECT(gbc.readMem(0x880d), 0x3d);
        // CB 3D 0355
        gbc.setState(0xb000, 0xbd12, 0x8560, 0x741, 0x99df, 0x1990, 0x1, 0x1);
        gbc.writeMem(0xb000, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbd12);
        EXPECT(gbc.pc(), 0xb002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb000), 0xcb);
        EXPECT(gbc.readMem(0xb001), 0x3d);
        // CB 3D 0356
        gbc.setState(0xea43, 0xb3ac, 0xbb00, 0xa104, 0x5928, 0xe847, 0x0, 0x1);
        gbc.writeMem(0xea43, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb3ac);
        EXPECT(gbc.pc(), 0xea45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea43), 0xcb);
        EXPECT(gbc.readMem(0xea44), 0x3d);
        // CB 3D 0357
        gbc.setState(0x71c, 0xe246, 0x3d50, 0x1b50, 0x4f7b, 0xe892, 0x0, 0x1);
        gbc.writeMem(0x71c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe246);
        EXPECT(gbc.pc(), 0x71e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0358
        gbc.setState(0xb915, 0x1dd5, 0x8560, 0x7881, 0x67fc, 0x98de, 0x0, 0x1);
        gbc.writeMem(0xb915, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1dd5);
        EXPECT(gbc.pc(), 0xb917);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb915), 0xcb);
        EXPECT(gbc.readMem(0xb916), 0x3d);
        // CB 3D 0359
        gbc.setState(0x401b, 0xdf8c, 0x8060, 0xf21a, 0x9a4b, 0x8893, 0x0, 0x0);
        gbc.writeMem(0x401b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdf8c);
        EXPECT(gbc.pc(), 0x401d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 035A
        gbc.setState(0x9793, 0xf2f7, 0x3560, 0xe7d6, 0x2b19, 0xc190, 0x1, 0x1);
        gbc.writeMem(0x9793, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf2f7);
        EXPECT(gbc.pc(), 0x9795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9793), 0xcb);
        EXPECT(gbc.readMem(0x9794), 0x3d);
        // CB 3D 035B
        gbc.setState(0xa3ed, 0xba67, 0x8240, 0xd93c, 0xc657, 0xea9, 0x1, 0x0);
        gbc.writeMem(0xa3ed, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xba67);
        EXPECT(gbc.pc(), 0xa3ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ed), 0xcb);
        EXPECT(gbc.readMem(0xa3ee), 0x3d);
        // CB 3D 035C
        gbc.setState(0x76dc, 0x59e3, 0x8fa0, 0xe9a9, 0x6a0d, 0xd3f7, 0x1, 0x1);
        gbc.writeMem(0x76dc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x59e3);
        EXPECT(gbc.pc(), 0x76de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 035D
        gbc.setState(0xbbce, 0x6fc6, 0xfc80, 0x2bb8, 0x261f, 0x3f09, 0x1, 0x1);
        gbc.writeMem(0xbbce, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6fc6);
        EXPECT(gbc.pc(), 0xbbd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbce), 0xcb);
        EXPECT(gbc.readMem(0xbbcf), 0x3d);
        // CB 3D 035E
        gbc.setState(0x728b, 0x2357, 0x4190, 0x21fa, 0x2ec6, 0xdcd8, 0x1, 0x0);
        gbc.writeMem(0x728b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2357);
        EXPECT(gbc.pc(), 0x728d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 035F
        gbc.setState(0x3252, 0x426b, 0x7c20, 0x8150, 0x520e, 0xcb0, 0x1, 0x0);
        gbc.writeMem(0x3252, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x426b);
        EXPECT(gbc.pc(), 0x3254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0360
        gbc.setState(0x3b03, 0x6db1, 0xfe0, 0xc27c, 0x2ff5, 0x7833, 0x0, 0x1);
        gbc.writeMem(0x3b03, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6db1);
        EXPECT(gbc.pc(), 0x3b05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0361
        gbc.setState(0x78c5, 0x7f0b, 0xef00, 0xf49c, 0x777e, 0x1c54, 0x0, 0x0);
        gbc.writeMem(0x78c5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7f0b);
        EXPECT(gbc.pc(), 0x78c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0362
        gbc.setState(0x2875, 0x7412, 0x9000, 0x71ad, 0xd6be, 0x55ee, 0x0, 0x1);
        gbc.writeMem(0x2875, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7412);
        EXPECT(gbc.pc(), 0x2877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0363
        gbc.setState(0x8a6, 0xd44d, 0x40d0, 0x3085, 0xed77, 0x934d, 0x0, 0x1);
        gbc.writeMem(0x8a6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd44d);
        EXPECT(gbc.pc(), 0x8a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0364
        gbc.setState(0xe8c, 0xb994, 0x8610, 0x831f, 0x9cab, 0xdd26, 0x0, 0x1);
        gbc.writeMem(0xe8c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb994);
        EXPECT(gbc.pc(), 0xe8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0365
        gbc.setState(0x72a1, 0x8dd2, 0xd2e0, 0x885e, 0x6648, 0xe743, 0x0, 0x0);
        gbc.writeMem(0x72a1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8dd2);
        EXPECT(gbc.pc(), 0x72a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0366
        gbc.setState(0x2b01, 0x3445, 0x6e70, 0xa1fd, 0xc0ed, 0x206d, 0x1, 0x0);
        gbc.writeMem(0x2b01, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3445);
        EXPECT(gbc.pc(), 0x2b03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0368
        gbc.setState(0x5af4, 0x3370, 0xc2c0, 0xc777, 0xd56d, 0x50af, 0x0, 0x1);
        gbc.writeMem(0x5af4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3370);
        EXPECT(gbc.pc(), 0x5af6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0369
        gbc.setState(0xe31c, 0x3e5b, 0x4ca0, 0x47ef, 0x402e, 0x4b5d, 0x1, 0x1);
        gbc.writeMem(0xe31c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3e5b);
        EXPECT(gbc.pc(), 0xe31e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe31c), 0xcb);
        EXPECT(gbc.readMem(0xe31d), 0x3d);
        // CB 3D 036A
        gbc.setState(0xe159, 0x126, 0x260, 0xad7, 0xe2f7, 0xf96a, 0x1, 0x1);
        gbc.writeMem(0xe159, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x126);
        EXPECT(gbc.pc(), 0xe15b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe159), 0xcb);
        EXPECT(gbc.readMem(0xe15a), 0x3d);
        // CB 3D 036B
        gbc.setState(0xb155, 0x22f3, 0x67e0, 0x27b1, 0x9a06, 0xad03, 0x0, 0x0);
        gbc.writeMem(0xb155, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x22f3);
        EXPECT(gbc.pc(), 0xb157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb155), 0xcb);
        EXPECT(gbc.readMem(0xb156), 0x3d);
        // CB 3D 036C
        gbc.setState(0x5ba0, 0xf028, 0xfc90, 0x8d3a, 0x463b, 0x486e, 0x0, 0x1);
        gbc.writeMem(0x5ba0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf028);
        EXPECT(gbc.pc(), 0x5ba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 036D
        gbc.setState(0x6d80, 0xc763, 0xbc0, 0x8aaa, 0x6604, 0x2e0d, 0x1, 0x1);
        gbc.writeMem(0x6d80, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc763);
        EXPECT(gbc.pc(), 0x6d82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 036E
        gbc.setState(0x9248, 0x1ccd, 0x62e0, 0x56b8, 0x3794, 0x1008, 0x0, 0x0);
        gbc.writeMem(0x9248, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1ccd);
        EXPECT(gbc.pc(), 0x924a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9248), 0xcb);
        EXPECT(gbc.readMem(0x9249), 0x3d);
        // CB 3D 036F
        gbc.setState(0x3517, 0x1920, 0xa230, 0xb67e, 0x5a71, 0xaa35, 0x0, 0x0);
        gbc.writeMem(0x3517, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1920);
        EXPECT(gbc.pc(), 0x3519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0370
        gbc.setState(0x32b0, 0xe070, 0x4b80, 0xff39, 0x3542, 0xbc4b, 0x0, 0x0);
        gbc.writeMem(0x32b0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe070);
        EXPECT(gbc.pc(), 0x32b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0371
        gbc.setState(0x3616, 0xddd4, 0x4630, 0x1602, 0x7390, 0xc811, 0x0, 0x0);
        gbc.writeMem(0x3616, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xddd4);
        EXPECT(gbc.pc(), 0x3618);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0372
        gbc.setState(0x91ae, 0x8b71, 0xf1a0, 0x24e1, 0x896b, 0x2b51, 0x0, 0x1);
        gbc.writeMem(0x91ae, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8b71);
        EXPECT(gbc.pc(), 0x91b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91ae), 0xcb);
        EXPECT(gbc.readMem(0x91af), 0x3d);
        // CB 3D 0373
        gbc.setState(0x243f, 0x10d6, 0x310, 0x502a, 0x8366, 0x8f60, 0x1, 0x0);
        gbc.writeMem(0x243f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x10d6);
        EXPECT(gbc.pc(), 0x2441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0374
        gbc.setState(0x98b4, 0x4f2f, 0xa6c0, 0x9a4e, 0x4d92, 0x4011, 0x1, 0x0);
        gbc.writeMem(0x98b4, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4f2f);
        EXPECT(gbc.pc(), 0x98b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98b4), 0xcb);
        EXPECT(gbc.readMem(0x98b5), 0x3d);
        // CB 3D 0375
        gbc.setState(0x971a, 0x14b2, 0x3360, 0x4d9f, 0xe17d, 0xf0d8, 0x1, 0x1);
        gbc.writeMem(0x971a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x14b2);
        EXPECT(gbc.pc(), 0x971c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x971a), 0xcb);
        EXPECT(gbc.readMem(0x971b), 0x3d);
        // CB 3D 0376
        gbc.setState(0x49a3, 0xa29e, 0x79a0, 0x12b, 0xa987, 0x71be, 0x1, 0x0);
        gbc.writeMem(0x49a3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa29e);
        EXPECT(gbc.pc(), 0x49a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0377
        gbc.setState(0xa38e, 0x4da2, 0xcac0, 0x97ea, 0x5c64, 0xe7c, 0x0, 0x0);
        gbc.writeMem(0xa38e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4da2);
        EXPECT(gbc.pc(), 0xa390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa38e), 0xcb);
        EXPECT(gbc.readMem(0xa38f), 0x3d);
        // CB 3D 0378
        gbc.setState(0x7300, 0xdfed, 0x46f0, 0x7673, 0x2aa1, 0xb8b8, 0x0, 0x1);
        gbc.writeMem(0x7300, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xdfed);
        EXPECT(gbc.pc(), 0x7302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0379
        gbc.setState(0x9b2a, 0x90a0, 0x980, 0x9614, 0xdf4c, 0xac72, 0x1, 0x0);
        gbc.writeMem(0x9b2a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x90a0);
        EXPECT(gbc.pc(), 0x9b2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b2a), 0xcb);
        EXPECT(gbc.readMem(0x9b2b), 0x3d);
        // CB 3D 037A
        gbc.setState(0xcaee, 0x9b95, 0xbd10, 0xa6dc, 0x6bcd, 0xe4f2, 0x0, 0x0);
        gbc.writeMem(0xcaee, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9b95);
        EXPECT(gbc.pc(), 0xcaf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaee), 0xcb);
        EXPECT(gbc.readMem(0xcaef), 0x3d);
        // CB 3D 037B
        gbc.setState(0x5ed5, 0x9fc8, 0xadf0, 0xb6fb, 0x244c, 0xcf72, 0x0, 0x1);
        gbc.writeMem(0x5ed5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9fc8);
        EXPECT(gbc.pc(), 0x5ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 037C
        gbc.setState(0x1bf6, 0x35f9, 0xe300, 0x3890, 0x52f1, 0xfd86, 0x1, 0x1);
        gbc.writeMem(0x1bf6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x35f9);
        EXPECT(gbc.pc(), 0x1bf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 037D
        gbc.setState(0x2dfd, 0x9922, 0xc870, 0x7d59, 0xa929, 0x2065, 0x1, 0x0);
        gbc.writeMem(0x2dfd, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9922);
        EXPECT(gbc.pc(), 0x2dff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 037E
        gbc.setState(0xe3dc, 0xdced, 0x88d0, 0x21c3, 0x58bf, 0xf072, 0x1, 0x1);
        gbc.writeMem(0xe3dc, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xdced);
        EXPECT(gbc.pc(), 0xe3de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3dc), 0xcb);
        EXPECT(gbc.readMem(0xe3dd), 0x3d);
        // CB 3D 037F
        gbc.setState(0xa2f8, 0x70b7, 0xfac0, 0xb9, 0xc02e, 0x3045, 0x1, 0x1);
        gbc.writeMem(0xa2f8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x70b7);
        EXPECT(gbc.pc(), 0xa2fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2f8), 0xcb);
        EXPECT(gbc.readMem(0xa2f9), 0x3d);
        // CB 3D 0380
        gbc.setState(0x5e1, 0x4bd8, 0xb5d0, 0x4530, 0xa480, 0x804c, 0x1, 0x0);
        gbc.writeMem(0x5e1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4bd8);
        EXPECT(gbc.pc(), 0x5e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0381
        gbc.setState(0xa5f3, 0xb5a7, 0xe580, 0xa617, 0xeea, 0x4cbd, 0x1, 0x0);
        gbc.writeMem(0xa5f3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb5a7);
        EXPECT(gbc.pc(), 0xa5f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f3), 0xcb);
        EXPECT(gbc.readMem(0xa5f4), 0x3d);
        // CB 3D 0382
        gbc.setState(0x7eef, 0x8900, 0xa330, 0x117, 0x2dd5, 0xf53b, 0x1, 0x0);
        gbc.writeMem(0x7eef, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8900);
        EXPECT(gbc.pc(), 0x7ef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0383
        gbc.setState(0xde34, 0x5428, 0xe1b0, 0x296d, 0xc2e4, 0x83af, 0x0, 0x1);
        gbc.writeMem(0xde34, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5428);
        EXPECT(gbc.pc(), 0xde36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde34), 0xcb);
        EXPECT(gbc.readMem(0xde35), 0x3d);
        // CB 3D 0384
        gbc.setState(0xead2, 0x7b00, 0x7de0, 0xace0, 0x1fec, 0xcfe6, 0x1, 0x1);
        gbc.writeMem(0xead2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7b00);
        EXPECT(gbc.pc(), 0xead4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead2), 0xcb);
        EXPECT(gbc.readMem(0xead3), 0x3d);
        // CB 3D 0385
        gbc.setState(0x7e80, 0x80e4, 0x1410, 0xdc8f, 0x362d, 0xab99, 0x1, 0x0);
        gbc.writeMem(0x7e80, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x80e4);
        EXPECT(gbc.pc(), 0x7e82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0386
        gbc.setState(0xd476, 0x441f, 0x8110, 0xddc5, 0xaad8, 0xd382, 0x0, 0x1);
        gbc.writeMem(0xd476, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x441f);
        EXPECT(gbc.pc(), 0xd478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd476), 0xcb);
        EXPECT(gbc.readMem(0xd477), 0x3d);
        // CB 3D 0388
        gbc.setState(0x2f28, 0x495a, 0x1c00, 0x7303, 0xe3ff, 0x5172, 0x0, 0x1);
        gbc.writeMem(0x2f28, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x495a);
        EXPECT(gbc.pc(), 0x2f2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0389
        gbc.setState(0x16bf, 0x2fa2, 0x38f0, 0x75c7, 0xf144, 0x7959, 0x0, 0x0);
        gbc.writeMem(0x16bf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2fa2);
        EXPECT(gbc.pc(), 0x16c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 038A
        gbc.setState(0xcbdf, 0x2b8, 0x10, 0xfadc, 0x2555, 0x6c05, 0x1, 0x0);
        gbc.writeMem(0xcbdf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2b8);
        EXPECT(gbc.pc(), 0xcbe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbdf), 0xcb);
        EXPECT(gbc.readMem(0xcbe0), 0x3d);
        // CB 3D 038B
        gbc.setState(0x2614, 0xc423, 0xd210, 0xbd86, 0x764, 0x2186, 0x0, 0x1);
        gbc.writeMem(0x2614, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc423);
        EXPECT(gbc.pc(), 0x2616);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 038C
        gbc.setState(0x8491, 0x1f61, 0x8ad0, 0x69ca, 0x3b70, 0x1b23, 0x1, 0x0);
        gbc.writeMem(0x8491, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1f61);
        EXPECT(gbc.pc(), 0x8493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8491), 0xcb);
        EXPECT(gbc.readMem(0x8492), 0x3d);
        // CB 3D 038D
        gbc.setState(0xd699, 0x7d5, 0x5bc0, 0x2f29, 0xbbcf, 0x5e0f, 0x0, 0x0);
        gbc.writeMem(0xd699, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7d5);
        EXPECT(gbc.pc(), 0xd69b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd699), 0xcb);
        EXPECT(gbc.readMem(0xd69a), 0x3d);
        // CB 3D 038E
        gbc.setState(0x472e, 0x611, 0x1730, 0x43c2, 0x82db, 0xa318, 0x1, 0x1);
        gbc.writeMem(0x472e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x611);
        EXPECT(gbc.pc(), 0x4730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 038F
        gbc.setState(0xa428, 0x70a6, 0xaa30, 0xf205, 0xfc3f, 0xb2fc, 0x0, 0x1);
        gbc.writeMem(0xa428, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x70a6);
        EXPECT(gbc.pc(), 0xa42a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa428), 0xcb);
        EXPECT(gbc.readMem(0xa429), 0x3d);
        // CB 3D 0390
        gbc.setState(0x792f, 0x3959, 0x9de0, 0xb682, 0x662, 0x57c3, 0x1, 0x0);
        gbc.writeMem(0x792f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3959);
        EXPECT(gbc.pc(), 0x7931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0391
        gbc.setState(0xdb54, 0x2c2b, 0xb7f0, 0xec9d, 0x7bee, 0xbec9, 0x0, 0x1);
        gbc.writeMem(0xdb54, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2c2b);
        EXPECT(gbc.pc(), 0xdb56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb54), 0xcb);
        EXPECT(gbc.readMem(0xdb55), 0x3d);
        // CB 3D 0392
        gbc.setState(0xba9f, 0xdf19, 0x3b90, 0xbea4, 0x957d, 0xb795, 0x0, 0x0);
        gbc.writeMem(0xba9f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xdf19);
        EXPECT(gbc.pc(), 0xbaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba9f), 0xcb);
        EXPECT(gbc.readMem(0xbaa0), 0x3d);
        // CB 3D 0393
        gbc.setState(0xdf59, 0x9704, 0xc850, 0x3d8b, 0x12b5, 0xc378, 0x1, 0x1);
        gbc.writeMem(0xdf59, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9704);
        EXPECT(gbc.pc(), 0xdf5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf59), 0xcb);
        EXPECT(gbc.readMem(0xdf5a), 0x3d);
        // CB 3D 0394
        gbc.setState(0x25b5, 0xdd3f, 0xbe80, 0x8b96, 0x998, 0x6274, 0x1, 0x0);
        gbc.writeMem(0x25b5, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xdd3f);
        EXPECT(gbc.pc(), 0x25b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0395
        gbc.setState(0x6418, 0xe9c, 0x59f0, 0x547c, 0xc593, 0x8da3, 0x0, 0x1);
        gbc.writeMem(0x6418, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe9c);
        EXPECT(gbc.pc(), 0x641a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 0396
        gbc.setState(0xdec6, 0xb579, 0x3120, 0x1aec, 0x5ab6, 0x1dfb, 0x1, 0x0);
        gbc.writeMem(0xdec6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb579);
        EXPECT(gbc.pc(), 0xdec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdec6), 0xcb);
        EXPECT(gbc.readMem(0xdec7), 0x3d);
        // CB 3D 0397
        gbc.setState(0x51f3, 0x3585, 0x7630, 0xc6ed, 0xf957, 0x15b6, 0x1, 0x1);
        gbc.writeMem(0x51f3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3585);
        EXPECT(gbc.pc(), 0x51f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 0398
        gbc.setState(0xb4ac, 0xb58, 0xa9a0, 0xa8be, 0xf8f7, 0x1ca, 0x1, 0x0);
        gbc.writeMem(0xb4ac, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb58);
        EXPECT(gbc.pc(), 0xb4ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ac), 0xcb);
        EXPECT(gbc.readMem(0xb4ad), 0x3d);
        // CB 3D 0399
        gbc.setState(0x2ef3, 0x5b67, 0x7f90, 0x3fd9, 0x1868, 0xa52a, 0x0, 0x1);
        gbc.writeMem(0x2ef3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5b67);
        EXPECT(gbc.pc(), 0x2ef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 039A
        gbc.setState(0x7b55, 0xe4e4, 0x5530, 0x5d5e, 0x15a1, 0x4469, 0x0, 0x1);
        gbc.writeMem(0x7b55, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe4e4);
        EXPECT(gbc.pc(), 0x7b57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 039B
        gbc.setState(0xbf42, 0xb125, 0x1a0, 0x22ea, 0xd37c, 0xe4bf, 0x1, 0x1);
        gbc.writeMem(0xbf42, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb125);
        EXPECT(gbc.pc(), 0xbf44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf42), 0xcb);
        EXPECT(gbc.readMem(0xbf43), 0x3d);
        // CB 3D 039C
        gbc.setState(0x1e17, 0xcd63, 0x90c0, 0xdbcb, 0xfd8d, 0x7b5f, 0x1, 0x0);
        gbc.writeMem(0x1e17, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xcd63);
        EXPECT(gbc.pc(), 0x1e19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 039D
        gbc.setState(0x3b, 0xc516, 0xb8d0, 0x16f9, 0x95de, 0xa4fe, 0x0, 0x1);
        gbc.writeMem(0x3b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc516);
        EXPECT(gbc.pc(), 0x3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 039E
        gbc.setState(0x12e0, 0x6a40, 0x6ab0, 0xfb1f, 0x6ce9, 0xe231, 0x0, 0x1);
        gbc.writeMem(0x12e0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6a40);
        EXPECT(gbc.pc(), 0x12e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 039F
        gbc.setState(0x6fbe, 0xfd33, 0x6af0, 0x42d3, 0x700d, 0xebde, 0x0, 0x1);
        gbc.writeMem(0x6fbe, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xfd33);
        EXPECT(gbc.pc(), 0x6fc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03A0
        gbc.setState(0x19af, 0x1d22, 0x99b0, 0x663f, 0x1384, 0x15ef, 0x1, 0x1);
        gbc.writeMem(0x19af, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1d22);
        EXPECT(gbc.pc(), 0x19b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03A1
        gbc.setState(0x892, 0xc292, 0x84a0, 0xb7d3, 0x9bc1, 0x5ea2, 0x1, 0x0);
        gbc.writeMem(0x892, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc292);
        EXPECT(gbc.pc(), 0x894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03A2
        gbc.setState(0xa723, 0xa1de, 0x2240, 0x28ac, 0xdb4a, 0xbc0b, 0x0, 0x0);
        gbc.writeMem(0xa723, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa1de);
        EXPECT(gbc.pc(), 0xa725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa723), 0xcb);
        EXPECT(gbc.readMem(0xa724), 0x3d);
        // CB 3D 03A3
        gbc.setState(0x1928, 0xd9e1, 0xdab0, 0xd82c, 0x7b59, 0xb13e, 0x0, 0x0);
        gbc.writeMem(0x1928, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd9e1);
        EXPECT(gbc.pc(), 0x192a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03A4
        gbc.setState(0x4133, 0x7aef, 0x8ef0, 0x2d2f, 0x14fa, 0x1cc7, 0x0, 0x1);
        gbc.writeMem(0x4133, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7aef);
        EXPECT(gbc.pc(), 0x4135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03A5
        gbc.setState(0xb47, 0x5925, 0xe5d0, 0x8a38, 0xd043, 0x2a98, 0x1, 0x0);
        gbc.writeMem(0xb47, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5925);
        EXPECT(gbc.pc(), 0xb49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03A6
        gbc.setState(0xd994, 0x6c3b, 0xdbb0, 0x459c, 0x3f02, 0xfce7, 0x0, 0x1);
        gbc.writeMem(0xd994, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6c3b);
        EXPECT(gbc.pc(), 0xd996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd994), 0xcb);
        EXPECT(gbc.readMem(0xd995), 0x3d);
        // CB 3D 03A7
        gbc.setState(0x8920, 0xf551, 0x61a0, 0x11e1, 0x1425, 0x2461, 0x1, 0x1);
        gbc.writeMem(0x8920, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf551);
        EXPECT(gbc.pc(), 0x8922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8920), 0xcb);
        EXPECT(gbc.readMem(0x8921), 0x3d);
        // CB 3D 03A8
        gbc.setState(0x8a47, 0x363a, 0x14b0, 0x52eb, 0x8886, 0xf8cf, 0x1, 0x1);
        gbc.writeMem(0x8a47, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x363a);
        EXPECT(gbc.pc(), 0x8a49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a47), 0xcb);
        EXPECT(gbc.readMem(0x8a48), 0x3d);
        // CB 3D 03A9
        gbc.setState(0x69c6, 0x7e10, 0xd6f0, 0xcd3a, 0x652f, 0x36fa, 0x0, 0x1);
        gbc.writeMem(0x69c6, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7e10);
        EXPECT(gbc.pc(), 0x69c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03AA
        gbc.setState(0x5858, 0x3eb6, 0xa880, 0xb282, 0xffef, 0xbea, 0x0, 0x0);
        gbc.writeMem(0x5858, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3eb6);
        EXPECT(gbc.pc(), 0x585a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03AB
        gbc.setState(0x177, 0xfdfd, 0xd390, 0x11e4, 0x8791, 0x929d, 0x1, 0x1);
        gbc.writeMem(0x177, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xfdfd);
        EXPECT(gbc.pc(), 0x179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03AC
        gbc.setState(0x4054, 0x1958, 0x6b30, 0x53f0, 0xfd46, 0x6caf, 0x1, 0x1);
        gbc.writeMem(0x4054, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1958);
        EXPECT(gbc.pc(), 0x4056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03AD
        gbc.setState(0x5c05, 0x5bec, 0xe900, 0x57c3, 0xbd4a, 0x8f6b, 0x0, 0x0);
        gbc.writeMem(0x5c05, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5bec);
        EXPECT(gbc.pc(), 0x5c07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03AE
        gbc.setState(0x5969, 0xfd6b, 0x4c30, 0xc9fb, 0x784d, 0xfff3, 0x1, 0x0);
        gbc.writeMem(0x5969, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfd6b);
        EXPECT(gbc.pc(), 0x596b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03AF
        gbc.setState(0x1f3c, 0xc9d0, 0x55d0, 0x6d08, 0xa8aa, 0xb9e6, 0x1, 0x0);
        gbc.writeMem(0x1f3c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc9d0);
        EXPECT(gbc.pc(), 0x1f3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03B0
        gbc.setState(0x3613, 0x8aef, 0x9220, 0x81f8, 0xacfd, 0x9ab, 0x1, 0x0);
        gbc.writeMem(0x3613, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8aef);
        EXPECT(gbc.pc(), 0x3615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03B1
        gbc.setState(0x1d5f, 0xd964, 0xb2b0, 0x8a1, 0x51f7, 0x5c7f, 0x0, 0x0);
        gbc.writeMem(0x1d5f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd964);
        EXPECT(gbc.pc(), 0x1d61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03B2
        gbc.setState(0x6be0, 0xbf72, 0x2870, 0x26cf, 0x1628, 0x4582, 0x0, 0x1);
        gbc.writeMem(0x6be0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbf72);
        EXPECT(gbc.pc(), 0x6be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03B3
        gbc.setState(0xa0cf, 0x40ca, 0x6340, 0xcdf9, 0xfd0c, 0x5f74, 0x0, 0x0);
        gbc.writeMem(0xa0cf, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x40ca);
        EXPECT(gbc.pc(), 0xa0d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0cf), 0xcb);
        EXPECT(gbc.readMem(0xa0d0), 0x3d);
        // CB 3D 03B4
        gbc.setState(0x1781, 0xbf69, 0x750, 0x64b8, 0xac6f, 0x50ae, 0x0, 0x1);
        gbc.writeMem(0x1781, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xbf69);
        EXPECT(gbc.pc(), 0x1783);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03B5
        gbc.setState(0x497e, 0xf894, 0x36e0, 0xba29, 0xd4e5, 0x29d6, 0x1, 0x1);
        gbc.writeMem(0x497e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf894);
        EXPECT(gbc.pc(), 0x4980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03B6
        gbc.setState(0xa600, 0x29b1, 0xbac0, 0xfe5f, 0x8662, 0x99ce, 0x0, 0x0);
        gbc.writeMem(0xa600, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x29b1);
        EXPECT(gbc.pc(), 0xa602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa600), 0xcb);
        EXPECT(gbc.readMem(0xa601), 0x3d);
        // CB 3D 03B7
        gbc.setState(0x71e2, 0x3c34, 0x3140, 0xa787, 0x5392, 0x8797, 0x0, 0x0);
        gbc.writeMem(0x71e2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3c34);
        EXPECT(gbc.pc(), 0x71e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03B8
        gbc.setState(0x4818, 0xc99, 0xcab0, 0x14a1, 0x96be, 0x9dea, 0x1, 0x0);
        gbc.writeMem(0x4818, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc99);
        EXPECT(gbc.pc(), 0x481a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03B9
        gbc.setState(0x6ae0, 0x476e, 0x50b0, 0xdde8, 0x3650, 0xd8d9, 0x0, 0x1);
        gbc.writeMem(0x6ae0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x476e);
        EXPECT(gbc.pc(), 0x6ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03BA
        gbc.setState(0x5d0e, 0x8ad, 0xaae0, 0x1295, 0xab9c, 0x4c25, 0x1, 0x1);
        gbc.writeMem(0x5d0e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8ad);
        EXPECT(gbc.pc(), 0x5d10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03BB
        gbc.setState(0xc0c9, 0xf824, 0xbc0, 0xe4e9, 0x32ec, 0xc2c7, 0x1, 0x1);
        gbc.writeMem(0xc0c9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf824);
        EXPECT(gbc.pc(), 0xc0cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0c9), 0xcb);
        EXPECT(gbc.readMem(0xc0ca), 0x3d);
        // CB 3D 03BC
        gbc.setState(0x8c45, 0xd77b, 0xba90, 0xd9d4, 0x98e9, 0xd918, 0x0, 0x1);
        gbc.writeMem(0x8c45, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd77b);
        EXPECT(gbc.pc(), 0x8c47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c45), 0xcb);
        EXPECT(gbc.readMem(0x8c46), 0x3d);
        // CB 3D 03BD
        gbc.setState(0xb7cb, 0x8e3b, 0x9a60, 0x2596, 0xf095, 0x3e1, 0x1, 0x1);
        gbc.writeMem(0xb7cb, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8e3b);
        EXPECT(gbc.pc(), 0xb7cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7cb), 0xcb);
        EXPECT(gbc.readMem(0xb7cc), 0x3d);
        // CB 3D 03BE
        gbc.setState(0xcb4f, 0xaaff, 0xc500, 0x9a62, 0xc9b9, 0xdfc5, 0x1, 0x1);
        gbc.writeMem(0xcb4f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xaaff);
        EXPECT(gbc.pc(), 0xcb51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb4f), 0xcb);
        EXPECT(gbc.readMem(0xcb50), 0x3d);
        // CB 3D 03BF
        gbc.setState(0xcfb9, 0xcbfd, 0x2110, 0x1085, 0x34b1, 0x3ec8, 0x0, 0x0);
        gbc.writeMem(0xcfb9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xcbfd);
        EXPECT(gbc.pc(), 0xcfbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb9), 0xcb);
        EXPECT(gbc.readMem(0xcfba), 0x3d);
        // CB 3D 03C0
        gbc.setState(0x3287, 0x943c, 0x1980, 0xfc51, 0xa7d0, 0xc8dd, 0x0, 0x0);
        gbc.writeMem(0x3287, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x943c);
        EXPECT(gbc.pc(), 0x3289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03C1
        gbc.setState(0x81e1, 0xca64, 0xa3f0, 0xb5db, 0xec62, 0xc53f, 0x0, 0x0);
        gbc.writeMem(0x81e1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xca64);
        EXPECT(gbc.pc(), 0x81e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81e1), 0xcb);
        EXPECT(gbc.readMem(0x81e2), 0x3d);
        // CB 3D 03C2
        gbc.setState(0x5f00, 0xe82a, 0xc40, 0x1df9, 0x883, 0x1a75, 0x0, 0x0);
        gbc.writeMem(0x5f00, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe82a);
        EXPECT(gbc.pc(), 0x5f02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03C3
        gbc.setState(0x5f9c, 0x8388, 0xcbd0, 0x4086, 0xb357, 0xb1a7, 0x1, 0x0);
        gbc.writeMem(0x5f9c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8388);
        EXPECT(gbc.pc(), 0x5f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03C4
        gbc.setState(0x4962, 0x7a26, 0x8680, 0x9daa, 0x17f, 0x2463, 0x1, 0x1);
        gbc.writeMem(0x4962, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7a26);
        EXPECT(gbc.pc(), 0x4964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03C5
        gbc.setState(0x696b, 0x470, 0x25d0, 0xdd54, 0xbdb4, 0x1c4, 0x0, 0x1);
        gbc.writeMem(0x696b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x470);
        EXPECT(gbc.pc(), 0x696d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03C6
        gbc.setState(0xbf60, 0x96d5, 0x6190, 0xa22e, 0xc7f1, 0xadc9, 0x1, 0x0);
        gbc.writeMem(0xbf60, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x96d5);
        EXPECT(gbc.pc(), 0xbf62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf60), 0xcb);
        EXPECT(gbc.readMem(0xbf61), 0x3d);
        // CB 3D 03C7
        gbc.setState(0xcf00, 0x4500, 0xb640, 0x19c4, 0x228, 0xc03d, 0x0, 0x0);
        gbc.writeMem(0xcf00, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4500);
        EXPECT(gbc.pc(), 0xcf02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf00), 0xcb);
        EXPECT(gbc.readMem(0xcf01), 0x3d);
        // CB 3D 03C8
        gbc.setState(0xcca0, 0x5e0b, 0x53d0, 0xd5cc, 0x85d9, 0xad6e, 0x0, 0x0);
        gbc.writeMem(0xcca0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5e0b);
        EXPECT(gbc.pc(), 0xcca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcca0), 0xcb);
        EXPECT(gbc.readMem(0xcca1), 0x3d);
        // CB 3D 03C9
        gbc.setState(0x21ea, 0xe77a, 0x7660, 0xe89d, 0x14fd, 0xdded, 0x0, 0x1);
        gbc.writeMem(0x21ea, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe77a);
        EXPECT(gbc.pc(), 0x21ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03CA
        gbc.setState(0x8cd3, 0xf102, 0x6910, 0xba6f, 0xaa1b, 0xb4f0, 0x0, 0x0);
        gbc.writeMem(0x8cd3, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf102);
        EXPECT(gbc.pc(), 0x8cd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cd3), 0xcb);
        EXPECT(gbc.readMem(0x8cd4), 0x3d);
        // CB 3D 03CB
        gbc.setState(0x4fe9, 0xd7f4, 0xd9a0, 0xd3c3, 0x9937, 0xdf49, 0x0, 0x1);
        gbc.writeMem(0x4fe9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd7f4);
        EXPECT(gbc.pc(), 0x4feb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03CC
        gbc.setState(0x774c, 0xb88e, 0x2450, 0xa44d, 0xd9d2, 0xeed3, 0x1, 0x0);
        gbc.writeMem(0x774c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb88e);
        EXPECT(gbc.pc(), 0x774e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03CD
        gbc.setState(0xdf67, 0x70d8, 0x28c0, 0x79ab, 0x2c53, 0x95d0, 0x1, 0x1);
        gbc.writeMem(0xdf67, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x70d8);
        EXPECT(gbc.pc(), 0xdf69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf67), 0xcb);
        EXPECT(gbc.readMem(0xdf68), 0x3d);
        // CB 3D 03CE
        gbc.setState(0xb8af, 0x49fa, 0x8c70, 0xe04c, 0x2e72, 0x4802, 0x0, 0x1);
        gbc.writeMem(0xb8af, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x49fa);
        EXPECT(gbc.pc(), 0xb8b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8af), 0xcb);
        EXPECT(gbc.readMem(0xb8b0), 0x3d);
        // CB 3D 03CF
        gbc.setState(0xcb70, 0x7832, 0xfc50, 0x13ef, 0x75bd, 0xb754, 0x0, 0x0);
        gbc.writeMem(0xcb70, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7832);
        EXPECT(gbc.pc(), 0xcb72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb70), 0xcb);
        EXPECT(gbc.readMem(0xcb71), 0x3d);
        // CB 3D 03D0
        gbc.setState(0x41f9, 0xbd5b, 0x7ea0, 0xacc5, 0x981f, 0x708e, 0x1, 0x1);
        gbc.writeMem(0x41f9, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbd5b);
        EXPECT(gbc.pc(), 0x41fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03D1
        gbc.setState(0xcd9a, 0x79f2, 0x1ca0, 0xe93f, 0x175a, 0xdf2e, 0x0, 0x0);
        gbc.writeMem(0xcd9a, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x79f2);
        EXPECT(gbc.pc(), 0xcd9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd9a), 0xcb);
        EXPECT(gbc.readMem(0xcd9b), 0x3d);
        // CB 3D 03D2
        gbc.setState(0x76ec, 0x9a52, 0xaaa0, 0x5aaa, 0x2f65, 0xf456, 0x1, 0x1);
        gbc.writeMem(0x76ec, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9a52);
        EXPECT(gbc.pc(), 0x76ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03D3
        gbc.setState(0x9196, 0x87b3, 0xedc0, 0x9441, 0x6d6d, 0x126d, 0x1, 0x1);
        gbc.writeMem(0x9196, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x87b3);
        EXPECT(gbc.pc(), 0x9198);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9196), 0xcb);
        EXPECT(gbc.readMem(0x9197), 0x3d);
        // CB 3D 03D4
        gbc.setState(0x45d0, 0x2354, 0xe880, 0x275d, 0x5675, 0x352a, 0x0, 0x1);
        gbc.writeMem(0x45d0, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2354);
        EXPECT(gbc.pc(), 0x45d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03D5
        gbc.setState(0xd125, 0x5cd4, 0xffc0, 0x17f8, 0x94ad, 0x2332, 0x0, 0x0);
        gbc.writeMem(0xd125, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5cd4);
        EXPECT(gbc.pc(), 0xd127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd125), 0xcb);
        EXPECT(gbc.readMem(0xd126), 0x3d);
        // CB 3D 03D6
        gbc.setState(0xd1ab, 0xeb76, 0x8510, 0xed98, 0xef73, 0xc68, 0x0, 0x1);
        gbc.writeMem(0xd1ab, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xeb76);
        EXPECT(gbc.pc(), 0xd1ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ab), 0xcb);
        EXPECT(gbc.readMem(0xd1ac), 0x3d);
        // CB 3D 03D7
        gbc.setState(0xe840, 0x27e2, 0x7c00, 0x7e42, 0xecfe, 0x9a96, 0x0, 0x0);
        gbc.writeMem(0xe840, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x27e2);
        EXPECT(gbc.pc(), 0xe842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe840), 0xcb);
        EXPECT(gbc.readMem(0xe841), 0x3d);
        // CB 3D 03D8
        gbc.setState(0xdb0d, 0x3f1e, 0x2f10, 0xfa6c, 0xc2fa, 0xcd31, 0x0, 0x0);
        gbc.writeMem(0xdb0d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3f1e);
        EXPECT(gbc.pc(), 0xdb0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb0d), 0xcb);
        EXPECT(gbc.readMem(0xdb0e), 0x3d);
        // CB 3D 03D9
        gbc.setState(0x6c74, 0x245d, 0x7930, 0xc509, 0x5001, 0x6d5d, 0x0, 0x1);
        gbc.writeMem(0x6c74, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x245d);
        EXPECT(gbc.pc(), 0x6c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03DA
        gbc.setState(0x1c4c, 0xb4f4, 0xe1a0, 0x3ce8, 0x9e78, 0x1dfc, 0x0, 0x0);
        gbc.writeMem(0x1c4c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb4f4);
        EXPECT(gbc.pc(), 0x1c4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03DB
        gbc.setState(0xacb1, 0x9e3f, 0xf260, 0xeed1, 0xb5f5, 0xad7, 0x1, 0x0);
        gbc.writeMem(0xacb1, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9e3f);
        EXPECT(gbc.pc(), 0xacb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacb1), 0xcb);
        EXPECT(gbc.readMem(0xacb2), 0x3d);
        // CB 3D 03DD
        gbc.setState(0xec2, 0x5f5f, 0x890, 0xfedb, 0x713, 0xe3ce, 0x1, 0x1);
        gbc.writeMem(0xec2, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5f5f);
        EXPECT(gbc.pc(), 0xec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03DE
        gbc.setState(0xc80c, 0xd2f3, 0x2210, 0xbd79, 0x4628, 0x91c6, 0x0, 0x0);
        gbc.writeMem(0xc80c, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd2f3);
        EXPECT(gbc.pc(), 0xc80e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc80c), 0xcb);
        EXPECT(gbc.readMem(0xc80d), 0x3d);
        // CB 3D 03DF
        gbc.setState(0xb44d, 0x75aa, 0xfac0, 0xcde2, 0x172a, 0x695b, 0x1, 0x1);
        gbc.writeMem(0xb44d, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x75aa);
        EXPECT(gbc.pc(), 0xb44f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb44d), 0xcb);
        EXPECT(gbc.readMem(0xb44e), 0x3d);
        // CB 3D 03E0
        gbc.setState(0xb632, 0xa457, 0x6b40, 0x921f, 0xa2aa, 0x5974, 0x0, 0x0);
        gbc.writeMem(0xb632, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa457);
        EXPECT(gbc.pc(), 0xb634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb632), 0xcb);
        EXPECT(gbc.readMem(0xb633), 0x3d);
        // CB 3D 03E1
        gbc.setState(0x6535, 0x829e, 0xa0a0, 0x8698, 0x5c86, 0x7c14, 0x0, 0x1);
        gbc.writeMem(0x6535, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x829e);
        EXPECT(gbc.pc(), 0x6537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03E2
        gbc.setState(0xb74f, 0x27ba, 0xd560, 0x8f63, 0x22e1, 0x527a, 0x0, 0x0);
        gbc.writeMem(0xb74f, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x27ba);
        EXPECT(gbc.pc(), 0xb751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb74f), 0xcb);
        EXPECT(gbc.readMem(0xb750), 0x3d);
        // CB 3D 03E3
        gbc.setState(0x6e37, 0x20be, 0x7260, 0x4678, 0x801a, 0xeab3, 0x1, 0x0);
        gbc.writeMem(0x6e37, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x20be);
        EXPECT(gbc.pc(), 0x6e39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 3D 03E4
        gbc.setState(0xd98e, 0x3610, 0x11b0, 0x252d, 0xe321, 0x345d, 0x1, 0x1);
        gbc.writeMem(0xd98e, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3610);
        EXPECT(gbc.pc(), 0xd990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd98e), 0xcb);
        EXPECT(gbc.readMem(0xd98f), 0x3d);
        // CB 3D 03E5
        gbc.setState(0x4ed8, 0x8d33, 0x39d0, 0x9661, 0x4e75, 0xca32, 0x1, 0x0);
        gbc.writeMem(0x4ed8, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8d33);
        EXPECT(gbc.pc(), 0x4eda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 3D 03E6
        gbc.setState(0x8165, 0x17a3, 0xb6d0, 0x1169, 0xc449, 0x43a1, 0x1, 0x1);
        gbc.writeMem(0x8165, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x17a3);
        EXPECT(gbc.pc(), 0x8167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8165), 0xcb);
        EXPECT(gbc.readMem(0x8166), 0x3d);
        // CB 3D 03E7
        gbc.setState(0x3c7b, 0x7449, 0xa730, 0x8fa, 0xb06b, 0xac1c, 0x0, 0x1);
        gbc.writeMem(0x3c7b, { 0xcb, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7449);
        EXPECT(gbc.pc(), 0x3c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
